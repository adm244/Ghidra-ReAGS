AudioClip::CheckMusicIsPlaying$0:
	[00100180]
 	00100180 sourceline 0xbb
 	00100188 thisaddr
 	00100190 mov mar,sp
 	0010019c memcpy 0x0,0x4
 	001001a8 add sp,0x4
 	001001b4 sourceline 0xbc
*	001001bc mov mar,0x2eef20
 	001001c8 memread4 ax
 	001001d0 jz 0x001002b8
		001002b8: CONDITIONAL_JUMP
		001001d8: FALL_THROUGH

	[001001d8]
		00100180: FALL_THROUGH
 	001001d8 sourceline 0xbe
 	001001e0 mov ax,0x2
 	001001ec farpush ax
 	001001f4 setfuncargs 0x1
 	001001fc mov ax,0x2f6f20
 	00100208 farcall ax
 	00100210 farsubsp 0x1
 	00100218 lnot ax
 	00100220 jz 0x001002a8
		001002a8: CONDITIONAL_JUMP
		00100228: FALL_THROUGH

	[00100228]
		001001d8: FALL_THROUGH
 	00100228 push op
 	00100230 mov ax,0x1
 	0010023c farpush ax
 	00100244 mov ax,0x32
 	00100250 farpush ax
 	00100258 push op
 	00100260 pop mar
 	00100268 mov ax,mar
 	00100274 mov op,ax
 	0010027c setfuncargs 0x2
 	00100284 mov ax,0x2fef20
 	00100290 farcall ax
 	00100298 farsubsp 0x2
 	001002a0 pop op
		001002a8: FALL_THROUGH

	[001002a8]
		001001d8: CONDITIONAL_JUMP
		00100228: FALL_THROUGH
 	001002a8 sourceline 0xbf
 	001002b0 jmp 0x00100310
		00100310: UNCONDITIONAL_JUMP

	[001002b8]
		00100180: CONDITIONAL_JUMP
 	001002b8 sourceline 0xc0
 	001002c0 push op
 	001002c8 push op
 	001002d0 pop mar
 	001002d8 mov ax,mar
 	001002e4 mov op,ax
 	001002ec setfuncargs 0x0
 	001002f4 mov ax,0x306f20
 	00100300 farcall ax
 	00100308 pop op
		00100310: FALL_THROUGH

	[00100310]
		001002a8: UNCONDITIONAL_JUMP
		001002b8: FALL_THROUGH
 	00100310 sourceline 0xc1
 	00100318 mov ax,0x0
 	00100324 sub sp,0x4
 	00100330 ret

HandleTopBarGui$0:
	[00100334]
 	00100334 sourceline 0xc6
 	0010033c thisaddr
 	00100344 sourceline 0xc7
*	0010034c mov mar,0x30ef20
 	00100358 mov ax,mar
 	00100364 push op
 	0010036c mov op,ax
 	00100374 setfuncargs 0x0
 	0010037c mov ax,0x316f20
 	00100388 farcall ax
 	00100390 pop op
 	00100398 lnot ax
 	001003a0 jz 0x00100424
		00100424: CONDITIONAL_JUMP
		001003a8: FALL_THROUGH

	[001003a8]
		00100334: FALL_THROUGH
 	001003a8 push ax
 	001003b0 mov mar,0x31ef20
 	001003bc mov ax,mar
 	001003c8 push op
 	001003d0 mov op,ax
 	001003d8 setfuncargs 0x0
 	001003e0 mov ax,0x316f20
 	001003ec farcall ax
 	001003f4 pop op
 	001003fc lnot ax
 	00100404 pop bx
 	0010040c land bx,ax
 	00100418 mov ax,bx
		00100424: FALL_THROUGH

	[00100424]
		00100334: CONDITIONAL_JUMP
		001003a8: FALL_THROUGH
 	00100424 jz 0x001004a8
		001004a8: CONDITIONAL_JUMP
		0010042c: FALL_THROUGH

	[0010042c]
		00100424: FALL_THROUGH
 	0010042c push ax
 	00100434 mov mar,0x326f20
 	00100440 mov ax,mar
 	0010044c push op
 	00100454 mov op,ax
 	0010045c setfuncargs 0x0
 	00100464 mov ax,0x316f20
 	00100470 farcall ax
 	00100478 pop op
 	00100480 lnot ax
 	00100488 pop bx
 	00100490 land bx,ax
 	0010049c mov ax,bx
		001004a8: FALL_THROUGH

	[001004a8]
		00100424: CONDITIONAL_JUMP
		0010042c: FALL_THROUGH
 	001004a8 jz 0x001004f4
		001004f4: CONDITIONAL_JUMP
		001004b0: FALL_THROUGH

	[001004b0]
		001004a8: FALL_THROUGH
 	001004b0 push ax
 	001004b8 mov mar,0x32ef20
 	001004c4 memread4 ax
 	001004cc lnot ax
 	001004d4 pop bx
 	001004dc land bx,ax
 	001004e8 mov ax,bx
		001004f4: FALL_THROUGH

	[001004f4]
		001004a8: CONDITIONAL_JUMP
		001004b0: FALL_THROUGH
 	001004f4 jz 0x00100da8
		00100da8: CONDITIONAL_JUMP
		001004fc: FALL_THROUGH

	[001004fc]
		001004f4: FALL_THROUGH
 	001004fc sourceline 0xc9
 	00100504 mov mar,0x336f20
 	00100510 add mar,0x4
 	0010051c memread4 ax
 	00100524 push ax
 	0010052c mov ax,0x15
 	00100538 pop bx
 	00100540 cmplt bx,ax
 	0010054c mov ax,bx
 	00100558 jz 0x00100b80
		00100b80: CONDITIONAL_JUMP
		00100560: FALL_THROUGH

	[00100560]
		001004fc: FALL_THROUGH
 	00100560 sourceline 0xcb
 	00100568 mov mar,0x336f20
 	00100574 memread4 ax
 	0010057c push ax
 	00100584 mov ax,0x16
 	00100590 pop bx
 	00100598 cmple bx,ax
 	001005a4 mov ax,bx
 	001005b0 jz 0x001007ec
		001007ec: CONDITIONAL_JUMP
		001005b8: FALL_THROUGH

	[001005b8]
		00100560: FALL_THROUGH
 	001005b8 sourceline 0xcd
 	001005c0 mov mar,0x33ef20
 	001005cc mov ax,mar
 	001005d8 push op
 	001005e0 mov op,ax
 	001005e8 setfuncargs 0x0
 	001005f0 mov ax,0x346f20
 	001005fc farcall ax
 	00100604 pop op
 	0010060c push ax
 	00100614 mov ax,0x80d
 	00100620 pop bx
 	00100628 cmpeq bx,ax
 	00100634 mov ax,bx
 	00100640 jz 0x001007dc
		001007dc: CONDITIONAL_JUMP
		00100648: FALL_THROUGH

	[00100648]
		001005b8: FALL_THROUGH
 	00100648 sourceline 0xcf
 	00100650 mov mar,0x336f20
 	0010065c add mar,0x4
 	00100668 memread4 ax
 	00100670 farpush ax
 	00100678 mov mar,0x336f20
 	00100684 memread4 ax
 	0010068c farpush ax
 	00100694 setfuncargs 0x2
 	0010069c mov ax,0x34ef20
 	001006a8 farcall ax
 	001006b0 farsubsp 0x2
 	001006b8 mov mar,sp
 	001006c4 meminit ax
 	001006cc add sp,0x4
 	001006d8 sourceline 0xd0
 	001006e0 stackptr 0x4
 	001006e8 push mar
 	001006f0 pop mar
 	001006f8 memread.ptr ax
 	00100700 push ax
 	00100708 mov mar,0x33ef20
 	00100714 mov ax,mar
 	00100720 pop bx
 	00100728 cmpeq bx,ax
 	00100734 mov ax,bx
 	00100740 jz 0x001007bc
		001007bc: CONDITIONAL_JUMP
		00100748: FALL_THROUGH

	[00100748]
		00100648: FALL_THROUGH
 	00100748 mov ax,0x95
 	00100754 mov bx,ax
 	00100760 mov mar,0x33ef20
 	0010076c mov ax,mar
 	00100778 push op
 	00100780 mov op,ax
 	00100788 farpush bx
 	00100790 setfuncargs 0x1
 	00100798 mov ax,0x356f20
 	001007a4 farcall ax
 	001007ac farsubsp 0x1
 	001007b4 pop op
		001007bc: FALL_THROUGH

	[001007bc]
		00100648: CONDITIONAL_JUMP
		00100748: FALL_THROUGH
 	001007bc sourceline 0xd1
 	001007c4 stackptr 0x4
 	001007cc memzero.ptr
 	001007d0 sub sp,0x4
		001007dc: FALL_THROUGH

	[001007dc]
		001005b8: CONDITIONAL_JUMP
		001007bc: FALL_THROUGH
 	001007dc sourceline 0xd2
 	001007e4 jmp 0x00100868
		00100868: UNCONDITIONAL_JUMP

	[001007ec]
		00100560: CONDITIONAL_JUMP
 	001007ec sourceline 0xd3
 	001007f4 mov ax,0x80d
 	00100800 mov bx,ax
 	0010080c mov mar,0x33ef20
 	00100818 mov ax,mar
 	00100824 push op
 	0010082c mov op,ax
 	00100834 farpush bx
 	0010083c setfuncargs 0x1
 	00100844 mov ax,0x356f20
 	00100850 farcall ax
 	00100858 farsubsp 0x1
 	00100860 pop op
		00100868: FALL_THROUGH

	[00100868]
		001007dc: UNCONDITIONAL_JUMP
		001007ec: FALL_THROUGH
 	00100868 sourceline 0xd5
 	00100870 mov mar,0x336f20
 	0010087c memread4 ax
 	00100884 push ax
 	0010088c mov ax,0x128
 	00100898 pop bx
 	001008a0 cmpge bx,ax
 	001008ac mov ax,bx
 	001008b8 jz 0x00100af4
		00100af4: CONDITIONAL_JUMP
		001008c0: FALL_THROUGH

	[001008c0]
		00100868: FALL_THROUGH
 	001008c0 sourceline 0xd7
 	001008c8 mov mar,0x35ef20
 	001008d4 mov ax,mar
 	001008e0 push op
 	001008e8 mov op,ax
 	001008f0 setfuncargs 0x0
 	001008f8 mov ax,0x346f20
 	00100904 farcall ax
 	0010090c pop op
 	00100914 push ax
 	0010091c mov ax,0xe56
 	00100928 pop bx
 	00100930 cmpeq bx,ax
 	0010093c mov ax,bx
 	00100948 jz 0x00100ae4
		00100ae4: CONDITIONAL_JUMP
		00100950: FALL_THROUGH

	[00100950]
		001008c0: FALL_THROUGH
 	00100950 sourceline 0xd9
 	00100958 mov mar,0x336f20
 	00100964 add mar,0x4
 	00100970 memread4 ax
 	00100978 farpush ax
 	00100980 mov mar,0x336f20
 	0010098c memread4 ax
 	00100994 farpush ax
 	0010099c setfuncargs 0x2
 	001009a4 mov ax,0x34ef20
 	001009b0 farcall ax
 	001009b8 farsubsp 0x2
 	001009c0 mov mar,sp
 	001009cc meminit ax
 	001009d4 add sp,0x4
 	001009e0 sourceline 0xda
 	001009e8 stackptr 0x4
 	001009f0 push mar
 	001009f8 pop mar
 	00100a00 memread.ptr ax
 	00100a08 push ax
 	00100a10 mov mar,0x35ef20
 	00100a1c mov ax,mar
 	00100a28 pop bx
 	00100a30 cmpeq bx,ax
 	00100a3c mov ax,bx
 	00100a48 jz 0x00100ac4
		00100ac4: CONDITIONAL_JUMP
		00100a50: FALL_THROUGH

	[00100a50]
		00100950: FALL_THROUGH
 	00100a50 mov ax,0xe55
 	00100a5c mov bx,ax
 	00100a68 mov mar,0x35ef20
 	00100a74 mov ax,mar
 	00100a80 push op
 	00100a88 mov op,ax
 	00100a90 farpush bx
 	00100a98 setfuncargs 0x1
 	00100aa0 mov ax,0x356f20
 	00100aac farcall ax
 	00100ab4 farsubsp 0x1
 	00100abc pop op
		00100ac4: FALL_THROUGH

	[00100ac4]
		00100950: CONDITIONAL_JUMP
		00100a50: FALL_THROUGH
 	00100ac4 sourceline 0xdb
 	00100acc stackptr 0x4
 	00100ad4 memzero.ptr
 	00100ad8 sub sp,0x4
		00100ae4: FALL_THROUGH

	[00100ae4]
		001008c0: CONDITIONAL_JUMP
		00100ac4: FALL_THROUGH
 	00100ae4 sourceline 0xdc
 	00100aec jmp 0x00100b70
		00100b70: UNCONDITIONAL_JUMP

	[00100af4]
		00100868: CONDITIONAL_JUMP
 	00100af4 sourceline 0xdd
 	00100afc mov ax,0xe56
 	00100b08 mov bx,ax
 	00100b14 mov mar,0x35ef20
 	00100b20 mov ax,mar
 	00100b2c push op
 	00100b34 mov op,ax
 	00100b3c farpush bx
 	00100b44 setfuncargs 0x1
 	00100b4c mov ax,0x356f20
 	00100b58 farcall ax
 	00100b60 farsubsp 0x1
 	00100b68 pop op
		00100b70: FALL_THROUGH

	[00100b70]
		00100ae4: UNCONDITIONAL_JUMP
		00100af4: FALL_THROUGH
 	00100b70 sourceline 0xde
 	00100b78 jmp 0x00100d98
		00100d98: UNCONDITIONAL_JUMP

	[00100b80]
		001004fc: CONDITIONAL_JUMP
 	00100b80 sourceline 0xe1
 	00100b88 mov mar,0x33ef20
 	00100b94 mov ax,mar
 	00100ba0 push op
 	00100ba8 mov op,ax
 	00100bb0 setfuncargs 0x0
 	00100bb8 mov ax,0x346f20
 	00100bc4 farcall ax
 	00100bcc pop op
 	00100bd4 push ax
 	00100bdc mov ax,0x95
 	00100be8 pop bx
 	00100bf0 cmpeq bx,ax
 	00100bfc mov ax,bx
 	00100c08 jz 0x00100c8c
		00100c8c: CONDITIONAL_JUMP
		00100c10: FALL_THROUGH

	[00100c10]
		00100b80: FALL_THROUGH
 	00100c10 sourceline 0xe3
 	00100c18 mov ax,0x80d
 	00100c24 mov bx,ax
 	00100c30 mov mar,0x33ef20
 	00100c3c mov ax,mar
 	00100c48 push op
 	00100c50 mov op,ax
 	00100c58 farpush bx
 	00100c60 setfuncargs 0x1
 	00100c68 mov ax,0x356f20
 	00100c74 farcall ax
 	00100c7c farsubsp 0x1
 	00100c84 pop op
		00100c8c: FALL_THROUGH

	[00100c8c]
		00100b80: CONDITIONAL_JUMP
		00100c10: FALL_THROUGH
 	00100c8c sourceline 0xe6
 	00100c94 mov mar,0x35ef20
 	00100ca0 mov ax,mar
 	00100cac push op
 	00100cb4 mov op,ax
 	00100cbc setfuncargs 0x0
 	00100cc4 mov ax,0x346f20
 	00100cd0 farcall ax
 	00100cd8 pop op
 	00100ce0 push ax
 	00100ce8 mov ax,0xe55
 	00100cf4 pop bx
 	00100cfc cmpeq bx,ax
 	00100d08 mov ax,bx
 	00100d14 jz 0x00100d98
		00100d98: CONDITIONAL_JUMP
		00100d1c: FALL_THROUGH

	[00100d1c]
		00100c8c: FALL_THROUGH
 	00100d1c sourceline 0xe8
 	00100d24 mov ax,0xe56
 	00100d30 mov bx,ax
 	00100d3c mov mar,0x35ef20
 	00100d48 mov ax,mar
 	00100d54 push op
 	00100d5c mov op,ax
 	00100d64 farpush bx
 	00100d6c setfuncargs 0x1
 	00100d74 mov ax,0x356f20
 	00100d80 farcall ax
 	00100d88 farsubsp 0x1
 	00100d90 pop op
		00100d98: FALL_THROUGH

	[00100d98]
		00100b70: UNCONDITIONAL_JUMP
		00100c8c: CONDITIONAL_JUMP
		00100d1c: FALL_THROUGH
 	00100d98 sourceline 0xeb
 	00100da0 jmp 0x00100da8
		00100da8: UNCONDITIONAL_JUMP

	[00100da8]
		001004f4: CONDITIONAL_JUMP
		00100d98: UNCONDITIONAL_JUMP
 	00100da8 sourceline 0xf0
 	00100db0 mov ax,0x0
 	00100dbc ret

ShowArrowExitOnCloseUpItems$0:
	[00100dc0]
 	00100dc0 sourceline 0xf5
 	00100dc8 thisaddr
 	00100dd0 sourceline 0xf6
*	00100dd8 mov mar,0x336f20
 	00100de4 add mar,0x4
 	00100df0 memread4 ax
 	00100df8 farpush ax
 	00100e00 mov mar,0x336f20
 	00100e0c memread4 ax
 	00100e14 farpush ax
 	00100e1c setfuncargs 0x2
 	00100e24 mov ax,0x366f20
 	00100e30 farcall ax
 	00100e38 farsubsp 0x2
 	00100e40 mov mar,sp
 	00100e4c meminit ax
 	00100e54 add sp,0x4
 	00100e60 sourceline 0xf7
 	00100e68 mov mar,0x36ef20
 	00100e74 mov ax,mar
 	00100e80 push op
 	00100e88 mov op,ax
 	00100e90 setfuncargs 0x0
 	00100e98 mov ax,0x316f20
 	00100ea4 farcall ax
 	00100eac pop op
 	00100eb4 jz 0x00101ea8
		00101ea8: CONDITIONAL_JUMP
		00100ebc: FALL_THROUGH

	[00100ebc]
		00100dc0: FALL_THROUGH
 	00100ebc sourceline 0xf9
 	00100ec4 stackptr 0x4
 	00100ecc push mar
 	00100ed4 pop mar
 	00100edc memread.ptr ax
 	00100ee4 push ax
 	00100eec mov mar,0x36ef20
 	00100ef8 mov ax,mar
 	00100f04 pop bx
 	00100f0c cmpneq bx,ax
 	00100f18 mov ax,bx
 	00100f24 jz 0x00101ea8
		00101ea8: CONDITIONAL_JUMP
		00100f2c: FALL_THROUGH

	[00100f2c]
		00100ebc: FALL_THROUGH
 	00100f2c sourceline 0xfb
 	00100f34 mov mar,0x336f20
 	00100f40 memread4 ax
 	00100f48 push ax
 	00100f50 mov ax,0x62
 	00100f5c pop bx
 	00100f64 cmpgt bx,ax
 	00100f70 mov ax,bx
 	00100f7c jz 0x00100ff4
		00100ff4: CONDITIONAL_JUMP
		00100f84: FALL_THROUGH

	[00100f84]
		00100f2c: FALL_THROUGH
 	00100f84 push ax
 	00100f8c mov mar,0x336f20
 	00100f98 memread4 ax
 	00100fa0 push ax
 	00100fa8 mov ax,0xdc
 	00100fb4 pop bx
 	00100fbc cmple bx,ax
 	00100fc8 mov ax,bx
 	00100fd4 pop bx
 	00100fdc land bx,ax
 	00100fe8 mov ax,bx
		00100ff4: FALL_THROUGH

	[00100ff4]
		00100f2c: CONDITIONAL_JUMP
		00100f84: FALL_THROUGH
 	00100ff4 jz 0x00101078
		00101078: CONDITIONAL_JUMP
		00100ffc: FALL_THROUGH

	[00100ffc]
		00100ff4: FALL_THROUGH
 	00100ffc push ax
 	00101004 mov mar,0x336f20
 	00101010 add mar,0x4
 	0010101c memread4 ax
 	00101024 push ax
 	0010102c mov ax,0x64
 	00101038 pop bx
 	00101040 cmpge bx,ax
 	0010104c mov ax,bx
 	00101058 pop bx
 	00101060 land bx,ax
 	0010106c mov ax,bx
		00101078: FALL_THROUGH

	[00101078]
		00100ff4: CONDITIONAL_JUMP
		00100ffc: FALL_THROUGH
 	00101078 jz 0x00101148
		00101148: CONDITIONAL_JUMP
		00101080: FALL_THROUGH

	[00101080]
		00101078: FALL_THROUGH
 	00101080 sourceline 0xfd
 	00101088 mov ax,0x58f
 	00101094 farpush ax
 	0010109c mov ax,0x2
 	001010a8 farpush ax
 	001010b0 setfuncargs 0x2
 	001010b8 mov ax,0x376f20
 	001010c4 farcall ax
 	001010cc farsubsp 0x2
 	001010d4 sourceline 0xfe
 	001010dc mov ax,0x2
 	001010e8 mov bx,ax
 	001010f4 mov mar,0x336f20
 	00101100 mov ax,mar
 	0010110c farpush bx
 	00101114 setfuncargs 0x1
 	0010111c mov ax,0x37ef20
 	00101128 farcall ax
 	00101130 farsubsp 0x1
 	00101138 sourceline 0xff
 	00101140 jmp 0x00101ea8
		00101ea8: UNCONDITIONAL_JUMP

	[00101148]
		00101078: CONDITIONAL_JUMP
 	00101148 sourceline 0x100
 	00101150 mov mar,0x336f20
 	0010115c memread4 ax
 	00101164 push ax
 	0010116c mov ax,0x62
 	00101178 pop bx
 	00101180 cmple bx,ax
 	0010118c mov ax,bx
 	00101198 jz 0x0010121c
		0010121c: CONDITIONAL_JUMP
		001011a0: FALL_THROUGH

	[001011a0]
		00101148: FALL_THROUGH
 	001011a0 push ax
 	001011a8 mov mar,0x336f20
 	001011b4 add mar,0x4
 	001011c0 memread4 ax
 	001011c8 push ax
 	001011d0 mov ax,0x64
 	001011dc pop bx
 	001011e4 cmpge bx,ax
 	001011f0 mov ax,bx
 	001011fc pop bx
 	00101204 land bx,ax
 	00101210 mov ax,bx
		0010121c: FALL_THROUGH

	[0010121c]
		00101148: CONDITIONAL_JUMP
		001011a0: FALL_THROUGH
 	0010121c jz 0x001012ec
		001012ec: CONDITIONAL_JUMP
		00101224: FALL_THROUGH

	[00101224]
		0010121c: FALL_THROUGH
 	00101224 sourceline 0x102
 	0010122c mov ax,0x58e
 	00101238 farpush ax
 	00101240 mov ax,0x2
 	0010124c farpush ax
 	00101254 setfuncargs 0x2
 	0010125c mov ax,0x376f20
 	00101268 farcall ax
 	00101270 farsubsp 0x2
 	00101278 sourceline 0x103
 	00101280 mov ax,0x2
 	0010128c mov bx,ax
 	00101298 mov mar,0x336f20
 	001012a4 mov ax,mar
 	001012b0 farpush bx
 	001012b8 setfuncargs 0x1
 	001012c0 mov ax,0x37ef20
 	001012cc farcall ax
 	001012d4 farsubsp 0x1
 	001012dc sourceline 0x104
 	001012e4 jmp 0x00101ea8
		00101ea8: UNCONDITIONAL_JUMP

	[001012ec]
		0010121c: CONDITIONAL_JUMP
 	001012ec sourceline 0x105
 	001012f4 mov mar,0x336f20
 	00101300 memread4 ax
 	00101308 push ax
 	00101310 mov ax,0x62
 	0010131c pop bx
 	00101324 cmplt bx,ax
 	00101330 mov ax,bx
 	0010133c jz 0x00101444
		00101444: CONDITIONAL_JUMP
		00101344: FALL_THROUGH

	[00101344]
		001012ec: FALL_THROUGH
 	00101344 push ax
 	0010134c mov mar,0x336f20
 	00101358 add mar,0x4
 	00101364 memread4 ax
 	0010136c push ax
 	00101374 mov ax,0x41
 	00101380 pop bx
 	00101388 cmpge bx,ax
 	00101394 mov ax,bx
 	001013a0 jz 0x00101424
		00101424: CONDITIONAL_JUMP
		001013a8: FALL_THROUGH

	[001013a8]
		00101344: FALL_THROUGH
 	001013a8 push ax
 	001013b0 mov mar,0x336f20
 	001013bc add mar,0x4
 	001013c8 memread4 ax
 	001013d0 push ax
 	001013d8 mov ax,0x69
 	001013e4 pop bx
 	001013ec cmple bx,ax
 	001013f8 mov ax,bx
 	00101404 pop bx
 	0010140c land bx,ax
 	00101418 mov ax,bx
		00101424: FALL_THROUGH

	[00101424]
		00101344: CONDITIONAL_JUMP
		001013a8: FALL_THROUGH
 	00101424 pop bx
 	0010142c land bx,ax
 	00101438 mov ax,bx
		00101444: FALL_THROUGH

	[00101444]
		001012ec: CONDITIONAL_JUMP
		00101424: FALL_THROUGH
 	00101444 jz 0x00101514
		00101514: CONDITIONAL_JUMP
		0010144c: FALL_THROUGH

	[0010144c]
		00101444: FALL_THROUGH
 	0010144c sourceline 0x107
 	00101454 mov ax,0x58d
 	00101460 farpush ax
 	00101468 mov ax,0x2
 	00101474 farpush ax
 	0010147c setfuncargs 0x2
 	00101484 mov ax,0x376f20
 	00101490 farcall ax
 	00101498 farsubsp 0x2
 	001014a0 sourceline 0x108
 	001014a8 mov ax,0x2
 	001014b4 mov bx,ax
 	001014c0 mov mar,0x336f20
 	001014cc mov ax,mar
 	001014d8 farpush bx
 	001014e0 setfuncargs 0x1
 	001014e8 mov ax,0x37ef20
 	001014f4 farcall ax
 	001014fc farsubsp 0x1
 	00101504 sourceline 0x109
 	0010150c jmp 0x00101ea8
		00101ea8: UNCONDITIONAL_JUMP

	[00101514]
		00101444: CONDITIONAL_JUMP
 	00101514 sourceline 0x10a
 	0010151c mov mar,0x336f20
 	00101528 memread4 ax
 	00101530 push ax
 	00101538 mov ax,0x62
 	00101544 pop bx
 	0010154c cmple bx,ax
 	00101558 mov ax,bx
 	00101564 jz 0x001015e8
		001015e8: CONDITIONAL_JUMP
		0010156c: FALL_THROUGH

	[0010156c]
		00101514: FALL_THROUGH
 	0010156c push ax
 	00101574 mov mar,0x336f20
 	00101580 add mar,0x4
 	0010158c memread4 ax
 	00101594 push ax
 	0010159c mov ax,0x40
 	001015a8 pop bx
 	001015b0 cmple bx,ax
 	001015bc mov ax,bx
 	001015c8 pop bx
 	001015d0 land bx,ax
 	001015dc mov ax,bx
		001015e8: FALL_THROUGH

	[001015e8]
		00101514: CONDITIONAL_JUMP
		0010156c: FALL_THROUGH
 	001015e8 jz 0x001016b8
		001016b8: CONDITIONAL_JUMP
		001015f0: FALL_THROUGH

	[001015f0]
		001015e8: FALL_THROUGH
 	001015f0 sourceline 0x10c
 	001015f8 mov ax,0x58c
 	00101604 farpush ax
 	0010160c mov ax,0x2
 	00101618 farpush ax
 	00101620 setfuncargs 0x2
 	00101628 mov ax,0x376f20
 	00101634 farcall ax
 	0010163c farsubsp 0x2
 	00101644 sourceline 0x10d
 	0010164c mov ax,0x2
 	00101658 mov bx,ax
 	00101664 mov mar,0x336f20
 	00101670 mov ax,mar
 	0010167c farpush bx
 	00101684 setfuncargs 0x1
 	0010168c mov ax,0x37ef20
 	00101698 farcall ax
 	001016a0 farsubsp 0x1
 	001016a8 sourceline 0x10e
 	001016b0 jmp 0x00101ea8
		00101ea8: UNCONDITIONAL_JUMP

	[001016b8]
		001015e8: CONDITIONAL_JUMP
 	001016b8 sourceline 0x10f
 	001016c0 mov mar,0x336f20
 	001016cc memread4 ax
 	001016d4 push ax
 	001016dc mov ax,0x62
 	001016e8 pop bx
 	001016f0 cmpgt bx,ax
 	001016fc mov ax,bx
 	00101708 jz 0x00101780
		00101780: CONDITIONAL_JUMP
		00101710: FALL_THROUGH

	[00101710]
		001016b8: FALL_THROUGH
 	00101710 push ax
 	00101718 mov mar,0x336f20
 	00101724 memread4 ax
 	0010172c push ax
 	00101734 mov ax,0xdc
 	00101740 pop bx
 	00101748 cmple bx,ax
 	00101754 mov ax,bx
 	00101760 pop bx
 	00101768 land bx,ax
 	00101774 mov ax,bx
		00101780: FALL_THROUGH

	[00101780]
		001016b8: CONDITIONAL_JUMP
		00101710: FALL_THROUGH
 	00101780 jz 0x00101804
		00101804: CONDITIONAL_JUMP
		00101788: FALL_THROUGH

	[00101788]
		00101780: FALL_THROUGH
 	00101788 push ax
 	00101790 mov mar,0x336f20
 	0010179c add mar,0x4
 	001017a8 memread4 ax
 	001017b0 push ax
 	001017b8 mov ax,0x40
 	001017c4 pop bx
 	001017cc cmple bx,ax
 	001017d8 mov ax,bx
 	001017e4 pop bx
 	001017ec land bx,ax
 	001017f8 mov ax,bx
		00101804: FALL_THROUGH

	[00101804]
		00101780: CONDITIONAL_JUMP
		00101788: FALL_THROUGH
 	00101804 jz 0x001018d4
		001018d4: CONDITIONAL_JUMP
		0010180c: FALL_THROUGH

	[0010180c]
		00101804: FALL_THROUGH
 	0010180c sourceline 0x111
 	00101814 mov ax,0x593
 	00101820 farpush ax
 	00101828 mov ax,0x2
 	00101834 farpush ax
 	0010183c setfuncargs 0x2
 	00101844 mov ax,0x376f20
 	00101850 farcall ax
 	00101858 farsubsp 0x2
 	00101860 sourceline 0x112
 	00101868 mov ax,0x2
 	00101874 mov bx,ax
 	00101880 mov mar,0x336f20
 	0010188c mov ax,mar
 	00101898 farpush bx
 	001018a0 setfuncargs 0x1
 	001018a8 mov ax,0x37ef20
 	001018b4 farcall ax
 	001018bc farsubsp 0x1
 	001018c4 sourceline 0x113
 	001018cc jmp 0x00101ea8
		00101ea8: UNCONDITIONAL_JUMP

	[001018d4]
		00101804: CONDITIONAL_JUMP
 	001018d4 sourceline 0x114
 	001018dc mov mar,0x336f20
 	001018e8 memread4 ax
 	001018f0 push ax
 	001018f8 mov ax,0xdd
 	00101904 pop bx
 	0010190c cmpge bx,ax
 	00101918 mov ax,bx
 	00101924 jz 0x001019a8
		001019a8: CONDITIONAL_JUMP
		0010192c: FALL_THROUGH

	[0010192c]
		001018d4: FALL_THROUGH
 	0010192c push ax
 	00101934 mov mar,0x336f20
 	00101940 add mar,0x4
 	0010194c memread4 ax
 	00101954 push ax
 	0010195c mov ax,0x40
 	00101968 pop bx
 	00101970 cmple bx,ax
 	0010197c mov ax,bx
 	00101988 pop bx
 	00101990 land bx,ax
 	0010199c mov ax,bx
		001019a8: FALL_THROUGH

	[001019a8]
		001018d4: CONDITIONAL_JUMP
		0010192c: FALL_THROUGH
 	001019a8 jz 0x00101a78
		00101a78: CONDITIONAL_JUMP
		001019b0: FALL_THROUGH

	[001019b0]
		001019a8: FALL_THROUGH
 	001019b0 sourceline 0x116
 	001019b8 mov ax,0x592
 	001019c4 farpush ax
 	001019cc mov ax,0x2
 	001019d8 farpush ax
 	001019e0 setfuncargs 0x2
 	001019e8 mov ax,0x376f20
 	001019f4 farcall ax
 	001019fc farsubsp 0x2
 	00101a04 sourceline 0x117
 	00101a0c mov ax,0x2
 	00101a18 mov bx,ax
 	00101a24 mov mar,0x336f20
 	00101a30 mov ax,mar
 	00101a3c farpush bx
 	00101a44 setfuncargs 0x1
 	00101a4c mov ax,0x37ef20
 	00101a58 farcall ax
 	00101a60 farsubsp 0x1
 	00101a68 sourceline 0x118
 	00101a70 jmp 0x00101ea8
		00101ea8: UNCONDITIONAL_JUMP

	[00101a78]
		001019a8: CONDITIONAL_JUMP
 	00101a78 sourceline 0x119
 	00101a80 mov mar,0x336f20
 	00101a8c memread4 ax
 	00101a94 push ax
 	00101a9c mov ax,0xdd
 	00101aa8 pop bx
 	00101ab0 cmpge bx,ax
 	00101abc mov ax,bx
 	00101ac8 jz 0x00101bd0
		00101bd0: CONDITIONAL_JUMP
		00101ad0: FALL_THROUGH

	[00101ad0]
		00101a78: FALL_THROUGH
 	00101ad0 push ax
 	00101ad8 mov mar,0x336f20
 	00101ae4 add mar,0x4
 	00101af0 memread4 ax
 	00101af8 push ax
 	00101b00 mov ax,0x41
 	00101b0c pop bx
 	00101b14 cmpge bx,ax
 	00101b20 mov ax,bx
 	00101b2c jz 0x00101bb0
		00101bb0: CONDITIONAL_JUMP
		00101b34: FALL_THROUGH

	[00101b34]
		00101ad0: FALL_THROUGH
 	00101b34 push ax
 	00101b3c mov mar,0x336f20
 	00101b48 add mar,0x4
 	00101b54 memread4 ax
 	00101b5c push ax
 	00101b64 mov ax,0x63
 	00101b70 pop bx
 	00101b78 cmple bx,ax
 	00101b84 mov ax,bx
 	00101b90 pop bx
 	00101b98 land bx,ax
 	00101ba4 mov ax,bx
		00101bb0: FALL_THROUGH

	[00101bb0]
		00101ad0: CONDITIONAL_JUMP
		00101b34: FALL_THROUGH
 	00101bb0 pop bx
 	00101bb8 land bx,ax
 	00101bc4 mov ax,bx
		00101bd0: FALL_THROUGH

	[00101bd0]
		00101a78: CONDITIONAL_JUMP
		00101bb0: FALL_THROUGH
 	00101bd0 jz 0x00101ca0
		00101ca0: CONDITIONAL_JUMP
		00101bd8: FALL_THROUGH

	[00101bd8]
		00101bd0: FALL_THROUGH
 	00101bd8 sourceline 0x11b
 	00101be0 mov ax,0x591
 	00101bec farpush ax
 	00101bf4 mov ax,0x2
 	00101c00 farpush ax
 	00101c08 setfuncargs 0x2
 	00101c10 mov ax,0x376f20
 	00101c1c farcall ax
 	00101c24 farsubsp 0x2
 	00101c2c sourceline 0x11c
 	00101c34 mov ax,0x2
 	00101c40 mov bx,ax
 	00101c4c mov mar,0x336f20
 	00101c58 mov ax,mar
 	00101c64 farpush bx
 	00101c6c setfuncargs 0x1
 	00101c74 mov ax,0x37ef20
 	00101c80 farcall ax
 	00101c88 farsubsp 0x1
 	00101c90 sourceline 0x11d
 	00101c98 jmp 0x00101ea8
		00101ea8: UNCONDITIONAL_JUMP

	[00101ca0]
		00101bd0: CONDITIONAL_JUMP
 	00101ca0 sourceline 0x11e
 	00101ca8 mov mar,0x336f20
 	00101cb4 memread4 ax
 	00101cbc push ax
 	00101cc4 mov ax,0xdd
 	00101cd0 pop bx
 	00101cd8 cmpge bx,ax
 	00101ce4 mov ax,bx
 	00101cf0 jz 0x00101d74
		00101d74: CONDITIONAL_JUMP
		00101cf8: FALL_THROUGH

	[00101cf8]
		00101ca0: FALL_THROUGH
 	00101cf8 push ax
 	00101d00 mov mar,0x336f20
 	00101d0c add mar,0x4
 	00101d18 memread4 ax
 	00101d20 push ax
 	00101d28 mov ax,0x64
 	00101d34 pop bx
 	00101d3c cmpge bx,ax
 	00101d48 mov ax,bx
 	00101d54 pop bx
 	00101d5c land bx,ax
 	00101d68 mov ax,bx
		00101d74: FALL_THROUGH

	[00101d74]
		00101ca0: CONDITIONAL_JUMP
		00101cf8: FALL_THROUGH
 	00101d74 jz 0x00101e44
		00101e44: CONDITIONAL_JUMP
		00101d7c: FALL_THROUGH

	[00101d7c]
		00101d74: FALL_THROUGH
 	00101d7c sourceline 0x120
 	00101d84 mov ax,0x590
 	00101d90 farpush ax
 	00101d98 mov ax,0x2
 	00101da4 farpush ax
 	00101dac setfuncargs 0x2
 	00101db4 mov ax,0x376f20
 	00101dc0 farcall ax
 	00101dc8 farsubsp 0x2
 	00101dd0 sourceline 0x121
 	00101dd8 mov ax,0x2
 	00101de4 mov bx,ax
 	00101df0 mov mar,0x336f20
 	00101dfc mov ax,mar
 	00101e08 farpush bx
 	00101e10 setfuncargs 0x1
 	00101e18 mov ax,0x37ef20
 	00101e24 farcall ax
 	00101e2c farsubsp 0x1
 	00101e34 sourceline 0x122
 	00101e3c jmp 0x00101ea8
		00101ea8: UNCONDITIONAL_JUMP

	[00101e44]
		00101d74: CONDITIONAL_JUMP
 	00101e44 sourceline 0x125
 	00101e4c mov ax,0x0
 	00101e58 mov bx,ax
 	00101e64 mov mar,0x336f20
 	00101e70 mov ax,mar
 	00101e7c farpush bx
 	00101e84 setfuncargs 0x1
 	00101e8c mov ax,0x37ef20
 	00101e98 farcall ax
 	00101ea0 farsubsp 0x1
		00101ea8: FALL_THROUGH

	[00101ea8]
		00100dc0: CONDITIONAL_JUMP
		00100ebc: CONDITIONAL_JUMP
		00101080: UNCONDITIONAL_JUMP
		00101224: UNCONDITIONAL_JUMP
		0010144c: UNCONDITIONAL_JUMP
		001015f0: UNCONDITIONAL_JUMP
		0010180c: UNCONDITIONAL_JUMP
		001019b0: UNCONDITIONAL_JUMP
		00101bd8: UNCONDITIONAL_JUMP
		00101d7c: UNCONDITIONAL_JUMP
		00101e44: FALL_THROUGH
 	00101ea8 sourceline 0x12b
 	00101eb0 mov mar,0x386f20
 	00101ebc mov ax,mar
 	00101ec8 push op
 	00101ed0 mov op,ax
 	00101ed8 setfuncargs 0x0
 	00101ee0 mov ax,0x316f20
 	00101eec farcall ax
 	00101ef4 pop op
 	00101efc jnz 0x00101f78
		00101f78: CONDITIONAL_JUMP
		00101f04: FALL_THROUGH

	[00101f04]
		00101ea8: FALL_THROUGH
 	00101f04 push ax
 	00101f0c mov mar,0x38ef20
 	00101f18 mov ax,mar
 	00101f24 push op
 	00101f2c mov op,ax
 	00101f34 setfuncargs 0x0
 	00101f3c mov ax,0x316f20
 	00101f48 farcall ax
 	00101f50 pop op
 	00101f58 pop bx
 	00101f60 lor bx,ax
 	00101f6c mov ax,bx
		00101f78: FALL_THROUGH

	[00101f78]
		00101ea8: CONDITIONAL_JUMP
		00101f04: FALL_THROUGH
 	00101f78 jz 0x00102294
		00102294: CONDITIONAL_JUMP
		00101f80: FALL_THROUGH

	[00101f80]
		00101f78: FALL_THROUGH
 	00101f80 sourceline 0x12d
 	00101f88 stackptr 0x4
 	00101f90 push mar
 	00101f98 pop mar
 	00101fa0 memread.ptr ax
 	00101fa8 push ax
 	00101fb0 mov mar,0x386f20
 	00101fbc mov ax,mar
 	00101fc8 pop bx
 	00101fd0 cmpneq bx,ax
 	00101fdc mov ax,bx
 	00101fe8 jz 0x00102294
		00102294: CONDITIONAL_JUMP
		00101ff0: FALL_THROUGH

	[00101ff0]
		00101f80: FALL_THROUGH
 	00101ff0 sourceline 0x12f
 	00101ff8 mov mar,0x336f20
 	00102004 memread4 ax
 	0010200c push ax
 	00102014 mov ax,0x4f
 	00102020 pop bx
 	00102028 cmple bx,ax
 	00102034 mov ax,bx
 	00102040 jz 0x00102110
		00102110: CONDITIONAL_JUMP
		00102048: FALL_THROUGH

	[00102048]
		00101ff0: FALL_THROUGH
 	00102048 sourceline 0x131
 	00102050 mov ax,0x58d
 	0010205c farpush ax
 	00102064 mov ax,0x2
 	00102070 farpush ax
 	00102078 setfuncargs 0x2
 	00102080 mov ax,0x376f20
 	0010208c farcall ax
 	00102094 farsubsp 0x2
 	0010209c sourceline 0x132
 	001020a4 mov ax,0x2
 	001020b0 mov bx,ax
 	001020bc mov mar,0x336f20
 	001020c8 mov ax,mar
 	001020d4 farpush bx
 	001020dc setfuncargs 0x1
 	001020e4 mov ax,0x37ef20
 	001020f0 farcall ax
 	001020f8 farsubsp 0x1
 	00102100 sourceline 0x133
 	00102108 jmp 0x00102294
		00102294: UNCONDITIONAL_JUMP

	[00102110]
		00101ff0: CONDITIONAL_JUMP
 	00102110 sourceline 0x134
 	00102118 mov mar,0x336f20
 	00102124 memread4 ax
 	0010212c push ax
 	00102134 mov ax,0xf0
 	00102140 pop bx
 	00102148 cmpge bx,ax
 	00102154 mov ax,bx
 	00102160 jz 0x00102230
		00102230: CONDITIONAL_JUMP
		00102168: FALL_THROUGH

	[00102168]
		00102110: FALL_THROUGH
 	00102168 sourceline 0x136
 	00102170 mov ax,0x591
 	0010217c farpush ax
 	00102184 mov ax,0x2
 	00102190 farpush ax
 	00102198 setfuncargs 0x2
 	001021a0 mov ax,0x376f20
 	001021ac farcall ax
 	001021b4 farsubsp 0x2
 	001021bc sourceline 0x137
 	001021c4 mov ax,0x2
 	001021d0 mov bx,ax
 	001021dc mov mar,0x336f20
 	001021e8 mov ax,mar
 	001021f4 farpush bx
 	001021fc setfuncargs 0x1
 	00102204 mov ax,0x37ef20
 	00102210 farcall ax
 	00102218 farsubsp 0x1
 	00102220 sourceline 0x138
 	00102228 jmp 0x00102294
		00102294: UNCONDITIONAL_JUMP

	[00102230]
		00102110: CONDITIONAL_JUMP
 	00102230 sourceline 0x13b
 	00102238 mov ax,0x0
 	00102244 mov bx,ax
 	00102250 mov mar,0x336f20
 	0010225c mov ax,mar
 	00102268 farpush bx
 	00102270 setfuncargs 0x1
 	00102278 mov ax,0x37ef20
 	00102284 farcall ax
 	0010228c farsubsp 0x1
		00102294: FALL_THROUGH

	[00102294]
		00101f78: CONDITIONAL_JUMP
		00101f80: CONDITIONAL_JUMP
		00102048: UNCONDITIONAL_JUMP
		00102168: UNCONDITIONAL_JUMP
		00102230: FALL_THROUGH
 	00102294 sourceline 0x142
 	0010229c mov mar,0x386f20
 	001022a8 mov ax,mar
 	001022b4 push op
 	001022bc mov op,ax
 	001022c4 setfuncargs 0x0
 	001022cc mov ax,0x316f20
 	001022d8 farcall ax
 	001022e0 pop op
 	001022e8 jnz 0x00102364
		00102364: CONDITIONAL_JUMP
		001022f0: FALL_THROUGH

	[001022f0]
		00102294: FALL_THROUGH
 	001022f0 push ax
 	001022f8 mov mar,0x36ef20
 	00102304 mov ax,mar
 	00102310 push op
 	00102318 mov op,ax
 	00102320 setfuncargs 0x0
 	00102328 mov ax,0x316f20
 	00102334 farcall ax
 	0010233c pop op
 	00102344 pop bx
 	0010234c lor bx,ax
 	00102358 mov ax,bx
		00102364: FALL_THROUGH

	[00102364]
		00102294: CONDITIONAL_JUMP
		001022f0: FALL_THROUGH
 	00102364 jnz 0x001023e0
		001023e0: CONDITIONAL_JUMP
		0010236c: FALL_THROUGH

	[0010236c]
		00102364: FALL_THROUGH
 	0010236c push ax
 	00102374 mov mar,0x38ef20
 	00102380 mov ax,mar
 	0010238c push op
 	00102394 mov op,ax
 	0010239c setfuncargs 0x0
 	001023a4 mov ax,0x316f20
 	001023b0 farcall ax
 	001023b8 pop op
 	001023c0 pop bx
 	001023c8 lor bx,ax
 	001023d4 mov ax,bx
		001023e0: FALL_THROUGH

	[001023e0]
		00102364: CONDITIONAL_JUMP
		0010236c: FALL_THROUGH
 	001023e0 jz 0x00102764
		00102764: CONDITIONAL_JUMP
		001023e8: FALL_THROUGH

	[001023e8]
		001023e0: FALL_THROUGH
 	001023e8 sourceline 0x144
 	001023f0 mov mar,0x336f20
 	001023fc mov ax,mar
 	00102408 setfuncargs 0x0
 	00102410 mov ax,0x396f20
 	0010241c farcall ax
 	00102424 push ax
 	0010242c mov ax,0x2
 	00102438 pop bx
 	00102440 cmpeq bx,ax
 	0010244c mov ax,bx
 	00102458 jz 0x00102764
		00102764: CONDITIONAL_JUMP
		00102460: FALL_THROUGH

	[00102460]
		001023e8: FALL_THROUGH
 	00102460 sourceline 0x146
 	00102468 mov ax,0x1
 	00102474 farpush ax
 	0010247c setfuncargs 0x1
 	00102484 mov ax,0x39ef20
 	00102490 farcall ax
 	00102498 farsubsp 0x1
 	001024a0 jz 0x00102764
		00102764: CONDITIONAL_JUMP
		001024a8: FALL_THROUGH

	[001024a8]
		00102460: FALL_THROUGH
 	001024a8 sourceline 0x148
 	001024b0 mov ax,0x0
 	001024bc mov bx,ax
 	001024c8 mov mar,0x36ef20
 	001024d4 mov ax,mar
 	001024e0 push op
 	001024e8 mov op,ax
 	001024f0 farpush bx
 	001024f8 setfuncargs 0x1
 	00102500 mov ax,0x3a6f20
 	0010250c farcall ax
 	00102514 farsubsp 0x1
 	0010251c pop op
 	00102524 sourceline 0x149
 	0010252c mov ax,0x0
 	00102538 mov bx,ax
 	00102544 mov mar,0x386f20
 	00102550 mov ax,mar
 	0010255c push op
 	00102564 mov op,ax
 	0010256c farpush bx
 	00102574 setfuncargs 0x1
 	0010257c mov ax,0x3a6f20
 	00102588 farcall ax
 	00102590 farsubsp 0x1
 	00102598 pop op
 	001025a0 sourceline 0x14a
 	001025a8 mov ax,0x0
 	001025b4 mov bx,ax
 	001025c0 mov mar,0x38ef20
 	001025cc mov ax,mar
 	001025d8 push op
 	001025e0 mov op,ax
 	001025e8 farpush bx
 	001025f0 setfuncargs 0x1
 	001025f8 mov ax,0x3a6f20
 	00102604 farcall ax
 	0010260c farsubsp 0x1
 	00102614 pop op
 	0010261c sourceline 0x14b
 	00102624 mov ax,0x1
 	00102630 mov bx,ax
 	0010263c mov mar,0x30ef20
 	00102648 mov ax,mar
 	00102654 push op
 	0010265c mov op,ax
 	00102664 farpush bx
 	0010266c setfuncargs 0x1
 	00102674 mov ax,0x3a6f20
 	00102680 farcall ax
 	00102688 farsubsp 0x1
 	00102690 pop op
 	00102698 sourceline 0x14c
 	001026a0 mov ax,0xf1
 	001026ac farpush ax
 	001026b4 mov ax,0x2
 	001026c0 farpush ax
 	001026c8 setfuncargs 0x2
 	001026d0 mov ax,0x376f20
 	001026dc farcall ax
 	001026e4 farsubsp 0x2
 	001026ec sourceline 0x14d
 	001026f4 mov ax,0xa
 	00102700 mov mar,0x3aef20
 	0010270c memwrite4 ax
 	00102714 sourceline 0x14e
 	0010271c mov ax,0x0
 	00102728 mov mar,0x32ef20
 	00102734 memwrite4 ax
 	0010273c sourceline 0x14f
 	00102744 mov ax,0x1
 	00102750 mov mar,0x3b6f20
 	0010275c memwrite4 ax
		00102764: FALL_THROUGH

	[00102764]
		001023e0: CONDITIONAL_JUMP
		001023e8: CONDITIONAL_JUMP
		00102460: CONDITIONAL_JUMP
		001024a8: FALL_THROUGH
 	00102764 sourceline 0x153
 	0010276c mov ax,0x0
 	00102778 stackptr 0x4
 	00102780 memzerond
 	00102784 sub sp,0x4
 	00102790 ret

OpenMainMenu$0:
	[00102794]
 	00102794 sourceline 0x15a
 	0010279c thisaddr
 	001027a4 sourceline 0x15c
*	001027ac mov mar,0x326f20
 	001027b8 mov ax,mar
 	001027c4 push op
 	001027cc mov op,ax
 	001027d4 setfuncargs 0x0
 	001027dc mov ax,0x316f20
 	001027e8 farcall ax
 	001027f0 pop op
 	001027f8 lnot ax
 	00102800 jz 0x00102884
		00102884: CONDITIONAL_JUMP
		00102808: FALL_THROUGH

	[00102808]
		00102794: FALL_THROUGH
 	00102808 push ax
 	00102810 mov mar,0x30ef20
 	0010281c mov ax,mar
 	00102828 push op
 	00102830 mov op,ax
 	00102838 setfuncargs 0x0
 	00102840 mov ax,0x316f20
 	0010284c farcall ax
 	00102854 pop op
 	0010285c lnot ax
 	00102864 pop bx
 	0010286c land bx,ax
 	00102878 mov ax,bx
		00102884: FALL_THROUGH

	[00102884]
		00102794: CONDITIONAL_JUMP
		00102808: FALL_THROUGH
 	00102884 jz 0x00102908
		00102908: CONDITIONAL_JUMP
		0010288c: FALL_THROUGH

	[0010288c]
		00102884: FALL_THROUGH
 	0010288c push ax
 	00102894 mov mar,0x31ef20
 	001028a0 mov ax,mar
 	001028ac push op
 	001028b4 mov op,ax
 	001028bc setfuncargs 0x0
 	001028c4 mov ax,0x316f20
 	001028d0 farcall ax
 	001028d8 pop op
 	001028e0 lnot ax
 	001028e8 pop bx
 	001028f0 land bx,ax
 	001028fc mov ax,bx
		00102908: FALL_THROUGH

	[00102908]
		00102884: CONDITIONAL_JUMP
		0010288c: FALL_THROUGH
 	00102908 jz 0x00104444
		00104444: CONDITIONAL_JUMP
		00102910: FALL_THROUGH

	[00102910]
		00102908: FALL_THROUGH
 	00102910 sourceline 0x15e
 	00102918 mov ax,0x1b
 	00102924 mov dx,ax
 	00102930 mov ax,0x0
 	0010293c farpush dx
 	00102944 setfuncargs 0x1
 	0010294c mov ax,0x3bef20
 	00102958 farcall ax
 	00102960 farsubsp 0x1
 	00102968 jz 0x001029e0
		001029e0: CONDITIONAL_JUMP
		00102970: FALL_THROUGH

	[00102970]
		00102910: FALL_THROUGH
 	00102970 push ax
 	00102978 mov mar,0x3c6f20
 	00102984 memread4 ax
 	0010298c push ax
 	00102994 mov ax,0x0
 	001029a0 pop bx
 	001029a8 cmple bx,ax
 	001029b4 mov ax,bx
 	001029c0 pop bx
 	001029c8 land bx,ax
 	001029d4 mov ax,bx
		001029e0: FALL_THROUGH

	[001029e0]
		00102910: CONDITIONAL_JUMP
		00102970: FALL_THROUGH
 	001029e0 jz 0x00102a2c
		00102a2c: CONDITIONAL_JUMP
		001029e8: FALL_THROUGH

	[001029e8]
		001029e0: FALL_THROUGH
 	001029e8 push ax
 	001029f0 mov mar,0x32ef20
 	001029fc memread4 ax
 	00102a04 lnot ax
 	00102a0c pop bx
 	00102a14 land bx,ax
 	00102a20 mov ax,bx
		00102a2c: FALL_THROUGH

	[00102a2c]
		001029e0: CONDITIONAL_JUMP
		001029e8: FALL_THROUGH
 	00102a2c jz 0x00104444
		00104444: CONDITIONAL_JUMP
		00102a34: FALL_THROUGH

	[00102a34]
		00102a2c: FALL_THROUGH
 	00102a34 sourceline 0x160
 	00102a3c mov mar,0x3cef20
 	00102a48 mov ax,mar
 	00102a54 push op
 	00102a5c mov op,ax
 	00102a64 setfuncargs 0x0
 	00102a6c mov ax,0x3d6f20
 	00102a78 farcall ax
 	00102a80 pop op
 	00102a88 push ax
 	00102a90 mov ax,0x1
 	00102a9c pop bx
 	00102aa4 cmpneq bx,ax
 	00102ab0 mov ax,bx
 	00102abc jz 0x00102b6c
		00102b6c: CONDITIONAL_JUMP
		00102ac4: FALL_THROUGH

	[00102ac4]
		00102a34: FALL_THROUGH
 	00102ac4 push ax
 	00102acc mov mar,0x3cef20
 	00102ad8 mov ax,mar
 	00102ae4 push op
 	00102aec mov op,ax
 	00102af4 setfuncargs 0x0
 	00102afc mov ax,0x3d6f20
 	00102b08 farcall ax
 	00102b10 pop op
 	00102b18 push ax
 	00102b20 mov ax,0x28
 	00102b2c pop bx
 	00102b34 cmpneq bx,ax
 	00102b40 mov ax,bx
 	00102b4c pop bx
 	00102b54 land bx,ax
 	00102b60 mov ax,bx
		00102b6c: FALL_THROUGH

	[00102b6c]
		00102a34: CONDITIONAL_JUMP
		00102ac4: FALL_THROUGH
 	00102b6c jz 0x00102c1c
		00102c1c: CONDITIONAL_JUMP
		00102b74: FALL_THROUGH

	[00102b74]
		00102b6c: FALL_THROUGH
 	00102b74 push ax
 	00102b7c mov mar,0x3cef20
 	00102b88 mov ax,mar
 	00102b94 push op
 	00102b9c mov op,ax
 	00102ba4 setfuncargs 0x0
 	00102bac mov ax,0x3d6f20
 	00102bb8 farcall ax
 	00102bc0 pop op
 	00102bc8 push ax
 	00102bd0 mov ax,0x29
 	00102bdc pop bx
 	00102be4 cmpneq bx,ax
 	00102bf0 mov ax,bx
 	00102bfc pop bx
 	00102c04 land bx,ax
 	00102c10 mov ax,bx
		00102c1c: FALL_THROUGH

	[00102c1c]
		00102b6c: CONDITIONAL_JUMP
		00102b74: FALL_THROUGH
 	00102c1c jz 0x00102ccc
		00102ccc: CONDITIONAL_JUMP
		00102c24: FALL_THROUGH

	[00102c24]
		00102c1c: FALL_THROUGH
 	00102c24 push ax
 	00102c2c mov mar,0x3cef20
 	00102c38 mov ax,mar
 	00102c44 push op
 	00102c4c mov op,ax
 	00102c54 setfuncargs 0x0
 	00102c5c mov ax,0x3d6f20
 	00102c68 farcall ax
 	00102c70 pop op
 	00102c78 push ax
 	00102c80 mov ax,0x2a
 	00102c8c pop bx
 	00102c94 cmpneq bx,ax
 	00102ca0 mov ax,bx
 	00102cac pop bx
 	00102cb4 land bx,ax
 	00102cc0 mov ax,bx
		00102ccc: FALL_THROUGH

	[00102ccc]
		00102c1c: CONDITIONAL_JUMP
		00102c24: FALL_THROUGH
 	00102ccc jz 0x00102d7c
		00102d7c: CONDITIONAL_JUMP
		00102cd4: FALL_THROUGH

	[00102cd4]
		00102ccc: FALL_THROUGH
 	00102cd4 push ax
 	00102cdc mov mar,0x3cef20
 	00102ce8 mov ax,mar
 	00102cf4 push op
 	00102cfc mov op,ax
 	00102d04 setfuncargs 0x0
 	00102d0c mov ax,0x3d6f20
 	00102d18 farcall ax
 	00102d20 pop op
 	00102d28 push ax
 	00102d30 mov ax,0x2b
 	00102d3c pop bx
 	00102d44 cmpneq bx,ax
 	00102d50 mov ax,bx
 	00102d5c pop bx
 	00102d64 land bx,ax
 	00102d70 mov ax,bx
		00102d7c: FALL_THROUGH

	[00102d7c]
		00102ccc: CONDITIONAL_JUMP
		00102cd4: FALL_THROUGH
 	00102d7c jz 0x00104444
		00104444: CONDITIONAL_JUMP
		00102d84: FALL_THROUGH

	[00102d84]
		00102d7c: FALL_THROUGH
 	00102d84 sourceline 0x162
 	00102d8c mov ax,0x1b
 	00102d98 mov dx,ax
 	00102da4 mov ax,0x0
 	00102db0 farpush dx
 	00102db8 setfuncargs 0x1
 	00102dc0 mov ax,0x3def20
 	00102dcc farcall ax
 	00102dd4 farsubsp 0x1
 	00102ddc push ax
 	00102de4 mov ax,0x3e8
 	00102df0 pop bx
 	00102df8 cmpgt bx,ax
 	00102e04 mov ax,bx
 	00102e10 jz 0x00102e28
		00102e28: CONDITIONAL_JUMP
		00102e18: FALL_THROUGH

	[00102e18]
		00102d84: FALL_THROUGH
 	00102e18 mov ax,0x0
 	00102e24 ret

	[00102e28]
		00102d84: CONDITIONAL_JUMP
 	00102e28 sourceline 0x163
 	00102e30 mov ax,0x0
 	00102e3c setfuncargs 0x0
 	00102e44 mov ax,0x3e6f20
 	00102e50 farcall ax
 	00102e58 push ax
 	00102e60 mov ax,0x2c787b
 	00102e6c pop bx
 	00102e74 streq bx,ax
 	00102e80 mov ax,bx
 	00102e8c jz 0x001035e8
		001035e8: CONDITIONAL_JUMP
		00102e94: FALL_THROUGH

	[00102e94]
		00102e28: FALL_THROUGH
 	00102e94 sourceline 0x165
 	00102e9c mov ax,0x7a0
 	00102ea8 mov bx,ax
 	00102eb4 mov mar,0x3eef20
 	00102ec0 mov ax,mar
 	00102ecc push op
 	00102ed4 mov op,ax
 	00102edc farpush bx
 	00102ee4 setfuncargs 0x1
 	00102eec mov ax,0x356f20
 	00102ef8 farcall ax
 	00102f00 farsubsp 0x1
 	00102f08 pop op
 	00102f10 sourceline 0x166
 	00102f18 mov ax,0x7a1
 	00102f24 mov bx,ax
 	00102f30 mov mar,0x3eef20
 	00102f3c mov ax,mar
 	00102f48 push op
 	00102f50 mov op,ax
 	00102f58 farpush bx
 	00102f60 setfuncargs 0x1
 	00102f68 mov ax,0x3f6f20
 	00102f74 farcall ax
 	00102f7c farsubsp 0x1
 	00102f84 pop op
 	00102f8c sourceline 0x167
 	00102f94 mov ax,0x7a1
 	00102fa0 mov bx,ax
 	00102fac mov mar,0x3eef20
 	00102fb8 mov ax,mar
 	00102fc4 push op
 	00102fcc mov op,ax
 	00102fd4 farpush bx
 	00102fdc setfuncargs 0x1
 	00102fe4 mov ax,0x3fef20
 	00102ff0 farcall ax
 	00102ff8 farsubsp 0x1
 	00103000 pop op
 	00103008 sourceline 0x168
 	00103010 mov ax,0x7a2
 	0010301c mov bx,ax
 	00103028 mov mar,0x406f20
 	00103034 mov ax,mar
 	00103040 push op
 	00103048 mov op,ax
 	00103050 farpush bx
 	00103058 setfuncargs 0x1
 	00103060 mov ax,0x356f20
 	0010306c farcall ax
 	00103074 farsubsp 0x1
 	0010307c pop op
 	00103084 sourceline 0x169
 	0010308c mov ax,0x7a3
 	00103098 mov bx,ax
 	001030a4 mov mar,0x406f20
 	001030b0 mov ax,mar
 	001030bc push op
 	001030c4 mov op,ax
 	001030cc farpush bx
 	001030d4 setfuncargs 0x1
 	001030dc mov ax,0x3f6f20
 	001030e8 farcall ax
 	001030f0 farsubsp 0x1
 	001030f8 pop op
 	00103100 sourceline 0x16a
 	00103108 mov ax,0x7a3
 	00103114 mov bx,ax
 	00103120 mov mar,0x406f20
 	0010312c mov ax,mar
 	00103138 push op
 	00103140 mov op,ax
 	00103148 farpush bx
 	00103150 setfuncargs 0x1
 	00103158 mov ax,0x3fef20
 	00103164 farcall ax
 	0010316c farsubsp 0x1
 	00103174 pop op
 	0010317c sourceline 0x16b
 	00103184 mov ax,0x79a
 	00103190 mov bx,ax
 	0010319c mov mar,0x40ef20
 	001031a8 mov ax,mar
 	001031b4 push op
 	001031bc mov op,ax
 	001031c4 farpush bx
 	001031cc setfuncargs 0x1
 	001031d4 mov ax,0x356f20
 	001031e0 farcall ax
 	001031e8 farsubsp 0x1
 	001031f0 pop op
 	001031f8 sourceline 0x16c
 	00103200 mov ax,0x79b
 	0010320c mov bx,ax
 	00103218 mov mar,0x40ef20
 	00103224 mov ax,mar
 	00103230 push op
 	00103238 mov op,ax
 	00103240 farpush bx
 	00103248 setfuncargs 0x1
 	00103250 mov ax,0x3f6f20
 	0010325c farcall ax
 	00103264 farsubsp 0x1
 	0010326c pop op
 	00103274 sourceline 0x16d
 	0010327c mov ax,0x79b
 	00103288 mov bx,ax
 	00103294 mov mar,0x40ef20
 	001032a0 mov ax,mar
 	001032ac push op
 	001032b4 mov op,ax
 	001032bc farpush bx
 	001032c4 setfuncargs 0x1
 	001032cc mov ax,0x3fef20
 	001032d8 farcall ax
 	001032e0 farsubsp 0x1
 	001032e8 pop op
 	001032f0 sourceline 0x16e
 	001032f8 mov ax,0x79c
 	00103304 mov bx,ax
 	00103310 mov mar,0x416f20
 	0010331c mov ax,mar
 	00103328 push op
 	00103330 mov op,ax
 	00103338 farpush bx
 	00103340 setfuncargs 0x1
 	00103348 mov ax,0x356f20
 	00103354 farcall ax
 	0010335c farsubsp 0x1
 	00103364 pop op
 	0010336c sourceline 0x16f
 	00103374 mov ax,0x79d
 	00103380 mov bx,ax
 	0010338c mov mar,0x416f20
 	00103398 mov ax,mar
 	001033a4 push op
 	001033ac mov op,ax
 	001033b4 farpush bx
 	001033bc setfuncargs 0x1
 	001033c4 mov ax,0x3f6f20
 	001033d0 farcall ax
 	001033d8 farsubsp 0x1
 	001033e0 pop op
 	001033e8 sourceline 0x170
 	001033f0 mov ax,0x79d
 	001033fc mov bx,ax
 	00103408 mov mar,0x416f20
 	00103414 mov ax,mar
 	00103420 push op
 	00103428 mov op,ax
 	00103430 farpush bx
 	00103438 setfuncargs 0x1
 	00103440 mov ax,0x3fef20
 	0010344c farcall ax
 	00103454 farsubsp 0x1
 	0010345c pop op
 	00103464 sourceline 0x171
 	0010346c mov ax,0x79e
 	00103478 mov bx,ax
 	00103484 mov mar,0x41ef20
 	00103490 mov ax,mar
 	0010349c push op
 	001034a4 mov op,ax
 	001034ac farpush bx
 	001034b4 setfuncargs 0x1
 	001034bc mov ax,0x356f20
 	001034c8 farcall ax
 	001034d0 farsubsp 0x1
 	001034d8 pop op
 	001034e0 sourceline 0x172
 	001034e8 mov ax,0x79f
 	001034f4 mov bx,ax
 	00103500 mov mar,0x41ef20
 	0010350c mov ax,mar
 	00103518 push op
 	00103520 mov op,ax
 	00103528 farpush bx
 	00103530 setfuncargs 0x1
 	00103538 mov ax,0x3f6f20
 	00103544 farcall ax
 	0010354c farsubsp 0x1
 	00103554 pop op
 	0010355c sourceline 0x173
 	00103564 mov ax,0x79f
 	00103570 mov bx,ax
 	0010357c mov mar,0x41ef20
 	00103588 mov ax,mar
 	00103594 push op
 	0010359c mov op,ax
 	001035a4 farpush bx
 	001035ac setfuncargs 0x1
 	001035b4 mov ax,0x3fef20
 	001035c0 farcall ax
 	001035c8 farsubsp 0x1
 	001035d0 pop op
 	001035d8 sourceline 0x174
 	001035e0 jmp 0x00103d2c
		00103d2c: UNCONDITIONAL_JUMP

	[001035e8]
		00102e28: CONDITIONAL_JUMP
 	001035e8 sourceline 0x177
 	001035f0 mov ax,0x7b2
 	001035fc mov bx,ax
 	00103608 mov mar,0x3eef20
 	00103614 mov ax,mar
 	00103620 push op
 	00103628 mov op,ax
 	00103630 farpush bx
 	00103638 setfuncargs 0x1
 	00103640 mov ax,0x356f20
 	0010364c farcall ax
 	00103654 farsubsp 0x1
 	0010365c pop op
 	00103664 sourceline 0x178
 	0010366c mov ax,0x7b3
 	00103678 mov bx,ax
 	00103684 mov mar,0x3eef20
 	00103690 mov ax,mar
 	0010369c push op
 	001036a4 mov op,ax
 	001036ac farpush bx
 	001036b4 setfuncargs 0x1
 	001036bc mov ax,0x3f6f20
 	001036c8 farcall ax
 	001036d0 farsubsp 0x1
 	001036d8 pop op
 	001036e0 sourceline 0x179
 	001036e8 mov ax,0x7b3
 	001036f4 mov bx,ax
 	00103700 mov mar,0x3eef20
 	0010370c mov ax,mar
 	00103718 push op
 	00103720 mov op,ax
 	00103728 farpush bx
 	00103730 setfuncargs 0x1
 	00103738 mov ax,0x3fef20
 	00103744 farcall ax
 	0010374c farsubsp 0x1
 	00103754 pop op
 	0010375c sourceline 0x17a
 	00103764 mov ax,0x7b4
 	00103770 mov bx,ax
 	0010377c mov mar,0x406f20
 	00103788 mov ax,mar
 	00103794 push op
 	0010379c mov op,ax
 	001037a4 farpush bx
 	001037ac setfuncargs 0x1
 	001037b4 mov ax,0x356f20
 	001037c0 farcall ax
 	001037c8 farsubsp 0x1
 	001037d0 pop op
 	001037d8 sourceline 0x17b
 	001037e0 mov ax,0x7b5
 	001037ec mov bx,ax
 	001037f8 mov mar,0x406f20
 	00103804 mov ax,mar
 	00103810 push op
 	00103818 mov op,ax
 	00103820 farpush bx
 	00103828 setfuncargs 0x1
 	00103830 mov ax,0x3f6f20
 	0010383c farcall ax
 	00103844 farsubsp 0x1
 	0010384c pop op
 	00103854 sourceline 0x17c
 	0010385c mov ax,0x7b5
 	00103868 mov bx,ax
 	00103874 mov mar,0x406f20
 	00103880 mov ax,mar
 	0010388c push op
 	00103894 mov op,ax
 	0010389c farpush bx
 	001038a4 setfuncargs 0x1
 	001038ac mov ax,0x3fef20
 	001038b8 farcall ax
 	001038c0 farsubsp 0x1
 	001038c8 pop op
 	001038d0 sourceline 0x17d
 	001038d8 mov ax,0x7b6
 	001038e4 mov bx,ax
 	001038f0 mov mar,0x40ef20
 	001038fc mov ax,mar
 	00103908 push op
 	00103910 mov op,ax
 	00103918 farpush bx
 	00103920 setfuncargs 0x1
 	00103928 mov ax,0x356f20
 	00103934 farcall ax
 	0010393c farsubsp 0x1
 	00103944 pop op
 	0010394c sourceline 0x17e
 	00103954 mov ax,0x7b7
 	00103960 mov bx,ax
 	0010396c mov mar,0x40ef20
 	00103978 mov ax,mar
 	00103984 push op
 	0010398c mov op,ax
 	00103994 farpush bx
 	0010399c setfuncargs 0x1
 	001039a4 mov ax,0x3f6f20
 	001039b0 farcall ax
 	001039b8 farsubsp 0x1
 	001039c0 pop op
 	001039c8 sourceline 0x17f
 	001039d0 mov ax,0x7b7
 	001039dc mov bx,ax
 	001039e8 mov mar,0x40ef20
 	001039f4 mov ax,mar
 	00103a00 push op
 	00103a08 mov op,ax
 	00103a10 farpush bx
 	00103a18 setfuncargs 0x1
 	00103a20 mov ax,0x3fef20
 	00103a2c farcall ax
 	00103a34 farsubsp 0x1
 	00103a3c pop op
 	00103a44 sourceline 0x180
 	00103a4c mov ax,0x7b8
 	00103a58 mov bx,ax
 	00103a64 mov mar,0x416f20
 	00103a70 mov ax,mar
 	00103a7c push op
 	00103a84 mov op,ax
 	00103a8c farpush bx
 	00103a94 setfuncargs 0x1
 	00103a9c mov ax,0x356f20
 	00103aa8 farcall ax
 	00103ab0 farsubsp 0x1
 	00103ab8 pop op
 	00103ac0 sourceline 0x181
 	00103ac8 mov ax,0x7b9
 	00103ad4 mov bx,ax
 	00103ae0 mov mar,0x416f20
 	00103aec mov ax,mar
 	00103af8 push op
 	00103b00 mov op,ax
 	00103b08 farpush bx
 	00103b10 setfuncargs 0x1
 	00103b18 mov ax,0x3f6f20
 	00103b24 farcall ax
 	00103b2c farsubsp 0x1
 	00103b34 pop op
 	00103b3c sourceline 0x182
 	00103b44 mov ax,0x7b9
 	00103b50 mov bx,ax
 	00103b5c mov mar,0x416f20
 	00103b68 mov ax,mar
 	00103b74 push op
 	00103b7c mov op,ax
 	00103b84 farpush bx
 	00103b8c setfuncargs 0x1
 	00103b94 mov ax,0x3fef20
 	00103ba0 farcall ax
 	00103ba8 farsubsp 0x1
 	00103bb0 pop op
 	00103bb8 sourceline 0x183
 	00103bc0 mov ax,0x7ba
 	00103bcc mov bx,ax
 	00103bd8 mov mar,0x41ef20
 	00103be4 mov ax,mar
 	00103bf0 push op
 	00103bf8 mov op,ax
 	00103c00 farpush bx
 	00103c08 setfuncargs 0x1
 	00103c10 mov ax,0x356f20
 	00103c1c farcall ax
 	00103c24 farsubsp 0x1
 	00103c2c pop op
 	00103c34 sourceline 0x184
 	00103c3c mov ax,0x7bb
 	00103c48 mov bx,ax
 	00103c54 mov mar,0x41ef20
 	00103c60 mov ax,mar
 	00103c6c push op
 	00103c74 mov op,ax
 	00103c7c farpush bx
 	00103c84 setfuncargs 0x1
 	00103c8c mov ax,0x3f6f20
 	00103c98 farcall ax
 	00103ca0 farsubsp 0x1
 	00103ca8 pop op
 	00103cb0 sourceline 0x185
 	00103cb8 mov ax,0x7bb
 	00103cc4 mov bx,ax
 	00103cd0 mov mar,0x41ef20
 	00103cdc mov ax,mar
 	00103ce8 push op
 	00103cf0 mov op,ax
 	00103cf8 farpush bx
 	00103d00 setfuncargs 0x1
 	00103d08 mov ax,0x3fef20
 	00103d14 farcall ax
 	00103d1c farsubsp 0x1
 	00103d24 pop op
		00103d2c: FALL_THROUGH

	[00103d2c]
		00102e94: UNCONDITIONAL_JUMP
		001035e8: FALL_THROUGH
 	00103d2c sourceline 0x187
 	00103d34 mov ax,0xf1
 	00103d40 farpush ax
 	00103d48 mov ax,0x7
 	00103d54 farpush ax
 	00103d5c setfuncargs 0x2
 	00103d64 mov ax,0x376f20
 	00103d70 farcall ax
 	00103d78 farsubsp 0x2
 	00103d80 sourceline 0x188
 	00103d88 mov ax,0x1
 	00103d94 farpush ax
 	00103d9c setfuncargs 0x1
 	00103da4 mov ax,0x426f20
 	00103db0 farcall ax
 	00103db8 farsubsp 0x1
 	00103dc0 sourceline 0x189
 	00103dc8 mov ax,0x0
 	00103dd4 mov mar,0x42ef20
 	00103de0 push mar
 	00103de8 pop mar
 	00103df0 push ax
 	00103df8 memread.ptr ax
 	00103e00 pop bx
 	00103e08 push ax
 	00103e10 mov ax,bx
 	00103e1c mov bx,ax
 	00103e28 pop mar
 	00103e30 mov ax,mar
 	00103e3c push op
 	00103e44 mov op,ax
 	00103e4c farpush bx
 	00103e54 setfuncargs 0x1
 	00103e5c mov ax,0x436f20
 	00103e68 farcall ax
 	00103e70 farsubsp 0x1
 	00103e78 pop op
 	00103e80 sourceline 0x18a
 	00103e88 mov ax,0x0
 	00103e94 mov bx,ax
 	00103ea0 mov mar,0x336f20
 	00103eac mov ax,mar
 	00103eb8 farpush bx
 	00103ec0 setfuncargs 0x1
 	00103ec8 mov ax,0x43ef20
 	00103ed4 farcall ax
 	00103edc farsubsp 0x1
 	00103ee4 sourceline 0x18b
 	00103eec mov ax,0x1
 	00103ef8 farpush ax
 	00103f00 setfuncargs 0x1
 	00103f08 mov ax,0x426f20
 	00103f14 farcall ax
 	00103f1c farsubsp 0x1
 	00103f24 sourceline 0x18c
 	00103f2c mov mar,0x3cef20
 	00103f38 mov ax,mar
 	00103f44 push op
 	00103f4c mov op,ax
 	00103f54 setfuncargs 0x0
 	00103f5c mov ax,0x446f20
 	00103f68 farcall ax
 	00103f70 pop op
 	00103f78 jz 0x00103fcc
		00103fcc: CONDITIONAL_JUMP
		00103f80: FALL_THROUGH

	[00103f80]
		00103d2c: FALL_THROUGH
 	00103f80 push op
 	00103f88 mov mar,0x3cef20
 	00103f94 mov ax,mar
 	00103fa0 mov op,ax
 	00103fa8 setfuncargs 0x0
 	00103fb0 mov ax,0x44ef20
 	00103fbc farcall ax
 	00103fc4 pop op
		00103fcc: FALL_THROUGH

	[00103fcc]
		00103d2c: CONDITIONAL_JUMP
		00103f80: FALL_THROUGH
 	00103fcc sourceline 0x18d
 	00103fd4 mov mar,0x100160
 	00103fe0 push mar
 	00103fe8 pop mar
 	00103ff0 memread.ptr ax
 	00103ff8 push ax
 	00104000 mov ax,0x0
 	0010400c pop bx
 	00104014 cmpneq bx,ax
 	00104020 mov ax,bx
 	0010402c jz 0x0010408c
		0010408c: CONDITIONAL_JUMP
		00104034: FALL_THROUGH

	[00104034]
		00103fcc: FALL_THROUGH
 	00104034 push op
 	0010403c mov mar,0x100160
 	00104048 push mar
 	00104050 pop mar
 	00104058 memread.ptr ax
 	00104060 mov op,ax
 	00104068 setfuncargs 0x0
 	00104070 mov ax,0x456f20
 	0010407c farcall ax
 	00104084 pop op
		0010408c: FALL_THROUGH

	[0010408c]
		00103fcc: CONDITIONAL_JUMP
		00104034: FALL_THROUGH
 	0010408c sourceline 0x18e
 	00104094 mov ax,0x2c787b
 	001040a0 farpush ax
 	001040a8 mov ax,0x3e6
 	001040b4 farpush ax
 	001040bc setfuncargs 0x2
 	001040c4 mov ax,0x45ef20
 	001040d0 farcall ax
 	001040d8 farsubsp 0x2
 	001040e0 sourceline 0x18f
 	001040e8 mov ax,0x56
 	001040f4 farpush ax
 	001040fc mov ax,0x7f
 	00104108 farpush ax
 	00104110 mov ax,0x3e6
 	0010411c farpush ax
 	00104124 setfuncargs 0x3
 	0010412c mov ax,0x466f20
 	00104138 farcall ax
 	00104140 farsubsp 0x3
 	00104148 mov mar,0x100160
 	00104154 push mar
 	0010415c pop mar
 	00104164 memwrite.ptr ax
 	0010416c sourceline 0x191
 	00104174 mov ax,0x1
 	00104180 farpush ax
 	00104188 setfuncargs 0x1
 	00104190 mov ax,0x426f20
 	0010419c farcall ax
 	001041a4 farsubsp 0x1
 	001041ac sourceline 0x192
 	001041b4 mov ax,0x1
 	001041c0 mov bx,ax
 	001041cc mov mar,0x336f20
 	001041d8 mov ax,mar
 	001041e4 farpush bx
 	001041ec setfuncargs 0x1
 	001041f4 mov ax,0x43ef20
 	00104200 farcall ax
 	00104208 farsubsp 0x1
 	00104210 sourceline 0x193
 	00104218 setfuncargs 0x0
 	00104220 mov ax,0x46ef20
 	0010422c farcall ax
 	00104234 sourceline 0x194
 	0010423c setfuncargs 0x0
 	00104244 mov ax,0x476f20
 	00104250 farcall ax
 	00104258 sourceline 0x195
 	00104260 mov mar,0x47ef20
 	0010426c memread4 ax
 	00104274 jz 0x001043a4
		001043a4: CONDITIONAL_JUMP
		0010427c: FALL_THROUGH

	[0010427c]
		0010408c: FALL_THROUGH
 	0010427c mov ax,0x0
 	00104288 mov bx,ax
 	00104294 mov mar,0x36ef20
 	001042a0 mov ax,mar
 	001042ac push op
 	001042b4 mov op,ax
 	001042bc farpush bx
 	001042c4 setfuncargs 0x1
 	001042cc mov ax,0x3a6f20
 	001042d8 farcall ax
 	001042e0 farsubsp 0x1
 	001042e8 pop op
 	001042f0 mov ax,0x0
 	001042fc mov bx,ax
 	00104308 mov mar,0x486f20
 	00104314 mov ax,mar
 	00104320 push op
 	00104328 mov op,ax
 	00104330 farpush bx
 	00104338 setfuncargs 0x1
 	00104340 mov ax,0x3a6f20
 	0010434c farcall ax
 	00104354 farsubsp 0x1
 	0010435c pop op
 	00104364 mov ax,0x0
 	00104370 mov mar,0x48ef20
 	0010437c memwrite4 ax
 	00104384 mov ax,0x6
 	00104390 mov mar,0x496f20
 	0010439c memwrite4 ax
		001043a4: FALL_THROUGH

	[001043a4]
		0010408c: CONDITIONAL_JUMP
		0010427c: FALL_THROUGH
 	001043a4 sourceline 0x196
 	001043ac mov ax,0x1
 	001043b8 mov bx,ax
 	001043c4 mov mar,0x326f20
 	001043d0 mov ax,mar
 	001043dc push op
 	001043e4 mov op,ax
 	001043ec farpush bx
 	001043f4 setfuncargs 0x1
 	001043fc mov ax,0x3a6f20
 	00104408 farcall ax
 	00104410 farsubsp 0x1
 	00104418 pop op
 	00104420 sourceline 0x197
 	00104428 setfuncargs 0x0
 	00104430 mov ax,0x49ef20
 	0010443c farcall ax
		00104444: FALL_THROUGH

	[00104444]
		00102908: CONDITIONAL_JUMP
		00102a2c: CONDITIONAL_JUMP
		00102d7c: CONDITIONAL_JUMP
		001043a4: FALL_THROUGH
 	00104444 sourceline 0x19b
 	0010444c mov ax,0x0
 	00104458 ret

StopJudyToWork$0:
	[00104654]
 	00104654 sourceline 0x1a8
 	0010465c thisaddr
 	00104664 sourceline 0x1a9
 	0010466c mov ax,0x0
*	00104678 mov mar,0x4aef20
 	00104684 memwrite4 ax
 	0010468c sourceline 0x1aa
 	00104694 mov ax,0x0
 	001046a0 mov mar,0x4b6f20
 	001046ac memwrite4 ax
 	001046b4 sourceline 0x1ab
 	001046bc mov ax,0x0
 	001046c8 mov mar,0x4bef20
 	001046d4 memwrite4 ax
 	001046dc sourceline 0x1ac
 	001046e4 mov ax,0x0
 	001046f0 mov mar,0x4c6f20
 	001046fc memwrite4 ax
 	00104704 sourceline 0x1ae
 	0010470c mov ax,0x0
 	00104718 mov mar,0x4cef20
 	00104724 memwrite4 ax
 	0010472c sourceline 0x1af
 	00104734 mov ax,0x0
 	00104740 mov mar,0x4d6f20
 	0010474c memwrite4 ax
 	00104754 sourceline 0x1b0
 	0010475c mov ax,0x0
 	00104768 mov mar,0x4def20
 	00104774 memwrite4 ax
 	0010477c sourceline 0x1b2
 	00104784 mov ax,0x82
 	00104790 push ax
 	00104798 mov ax,0x46
 	001047a4 push ax
 	001047ac mov ax,0x10445c
 	001047b8 call ax
 	001047c0 sub sp,0x8
 	001047cc mov mar,0x4e6f20
 	001047d8 memwrite4 ax
 	001047e0 sourceline 0x1b3
 	001047e8 mov ax,0x172
 	001047f4 push ax
 	001047fc mov ax,0x64
 	00104808 push ax
 	00104810 mov ax,0x10445c
 	0010481c call ax
 	00104824 sub sp,0x8
 	00104830 mov mar,0x4eef20
 	0010483c memwrite4 ax
 	00104844 sourceline 0x1b4
 	0010484c mov ax,0x172
 	00104858 push ax
 	00104860 mov ax,0x64
 	0010486c push ax
 	00104874 mov ax,0x10445c
 	00104880 call ax
 	00104888 sub sp,0x8
 	00104894 mov mar,0x4f6f20
 	001048a0 memwrite4 ax
 	001048a8 sourceline 0x1b5
 	001048b0 mov ax,0x172
 	001048bc push ax
 	001048c4 mov ax,0x64
 	001048d0 push ax
 	001048d8 mov ax,0x10445c
 	001048e4 call ax
 	001048ec sub sp,0x8
 	001048f8 mov mar,0x4fef20
 	00104904 memwrite4 ax
 	0010490c sourceline 0x1b7
 	00104914 mov mar,0x506f20
 	00104920 mov ax,mar
 	0010492c push op
 	00104934 mov op,ax
 	0010493c setfuncargs 0x0
 	00104944 mov ax,0x50ef20
 	00104950 farcall ax
 	00104958 pop op
 	00104960 jz 0x00104fa8
		00104fa8: CONDITIONAL_JUMP
		00104968: FALL_THROUGH

	[00104968]
		00104654: FALL_THROUGH
 	00104968 sourceline 0x1b9
 	00104970 mov mar,0x506f20
 	0010497c mov ax,mar
 	00104988 push op
 	00104990 mov op,ax
 	00104998 setfuncargs 0x0
 	001049a0 mov ax,0x516f20
 	001049ac farcall ax
 	001049b4 pop op
 	001049bc push ax
 	001049c4 mov ax,0x6f
 	001049d0 pop bx
 	001049d8 cmpeq bx,ax
 	001049e4 mov ax,bx
 	001049f0 jz 0x00104b60
		00104b60: CONDITIONAL_JUMP
		001049f8: FALL_THROUGH

	[001049f8]
		00104968: FALL_THROUGH
 	001049f8 sourceline 0x1bb
 	00104a00 push op
 	00104a08 mov ax,0x6d
 	00104a14 farpush ax
 	00104a1c mov mar,0x506f20
 	00104a28 mov ax,mar
 	00104a34 mov op,ax
 	00104a3c setfuncargs 0x1
 	00104a44 mov ax,0x51ef20
 	00104a50 farcall ax
 	00104a58 farsubsp 0x1
 	00104a60 pop op
 	00104a68 sourceline 0x1bc
 	00104a70 mov ax,0x7f
 	00104a7c mov bx,ax
 	00104a88 mov mar,0x506f20
 	00104a94 mov ax,mar
 	00104aa0 push op
 	00104aa8 mov op,ax
 	00104ab0 farpush bx
 	00104ab8 setfuncargs 0x1
 	00104ac0 mov ax,0x526f20
 	00104acc farcall ax
 	00104ad4 farsubsp 0x1
 	00104adc pop op
 	00104ae4 sourceline 0x1bd
 	00104aec mov ax,0x5
 	00104af8 mov bx,ax
 	00104b04 mov mar,0x506f20
 	00104b10 mov ax,mar
 	00104b1c push op
 	00104b24 mov op,ax
 	00104b2c farpush bx
 	00104b34 setfuncargs 0x1
 	00104b3c mov ax,0x52ef20
 	00104b48 farcall ax
 	00104b50 farsubsp 0x1
 	00104b58 pop op
		00104b60: FALL_THROUGH

	[00104b60]
		00104968: CONDITIONAL_JUMP
		001049f8: FALL_THROUGH
 	00104b60 sourceline 0x1bf
 	00104b68 mov mar,0x506f20
 	00104b74 mov ax,mar
 	00104b80 push op
 	00104b88 mov op,ax
 	00104b90 setfuncargs 0x0
 	00104b98 mov ax,0x516f20
 	00104ba4 farcall ax
 	00104bac pop op
 	00104bb4 push ax
 	00104bbc mov ax,0x6f
 	00104bc8 pop bx
 	00104bd0 cmpeq bx,ax
 	00104bdc mov ax,bx
 	00104be8 jnz 0x00104c98
		00104c98: CONDITIONAL_JUMP
		00104bf0: FALL_THROUGH

	[00104bf0]
		00104b60: FALL_THROUGH
 	00104bf0 push ax
 	00104bf8 mov mar,0x506f20
 	00104c04 mov ax,mar
 	00104c10 push op
 	00104c18 mov op,ax
 	00104c20 setfuncargs 0x0
 	00104c28 mov ax,0x516f20
 	00104c34 farcall ax
 	00104c3c pop op
 	00104c44 push ax
 	00104c4c mov ax,0x6d
 	00104c58 pop bx
 	00104c60 cmpeq bx,ax
 	00104c6c mov ax,bx
 	00104c78 pop bx
 	00104c80 lor bx,ax
 	00104c8c mov ax,bx
		00104c98: FALL_THROUGH

	[00104c98]
		00104b60: CONDITIONAL_JUMP
		00104bf0: FALL_THROUGH
 	00104c98 jz 0x00104d58
		00104d58: CONDITIONAL_JUMP
		00104ca0: FALL_THROUGH

	[00104ca0]
		00104c98: FALL_THROUGH
 	00104ca0 push op
 	00104ca8 mov ax,0x427
 	00104cb4 farpush ax
 	00104cbc mov ax,0x397
 	00104cc8 farpush ax
 	00104cd0 mov ax,0x0
 	00104cdc farpush ax
 	00104ce4 mov ax,0x3
 	00104cf0 farpush ax
 	00104cf8 mov ax,0x0
 	00104d04 farpush ax
 	00104d0c mov mar,0x506f20
 	00104d18 mov ax,mar
 	00104d24 mov op,ax
 	00104d2c setfuncargs 0x5
 	00104d34 mov ax,0x536f20
 	00104d40 farcall ax
 	00104d48 farsubsp 0x5
 	00104d50 pop op
		00104d58: FALL_THROUGH

	[00104d58]
		00104c98: CONDITIONAL_JUMP
		00104ca0: FALL_THROUGH
 	00104d58 sourceline 0x1c0
 	00104d60 push op
 	00104d68 mov mar,0x53ef20
 	00104d74 mov ax,mar
 	00104d80 mov op,ax
 	00104d88 setfuncargs 0x0
 	00104d90 mov ax,0x306f20
 	00104d9c farcall ax
 	00104da4 pop op
 	00104dac sourceline 0x1c1
 	00104db4 mov ax,0xa
 	00104dc0 farpush ax
 	00104dc8 setfuncargs 0x1
 	00104dd0 mov ax,0x426f20
 	00104ddc farcall ax
 	00104de4 farsubsp 0x1
 	00104dec sourceline 0x1c2
 	00104df4 push op
 	00104dfc mov ax,0x6b
 	00104e08 farpush ax
 	00104e10 mov mar,0x506f20
 	00104e1c mov ax,mar
 	00104e28 mov op,ax
 	00104e30 setfuncargs 0x1
 	00104e38 mov ax,0x51ef20
 	00104e44 farcall ax
 	00104e4c farsubsp 0x1
 	00104e54 pop op
 	00104e5c sourceline 0x1c3
 	00104e64 mov ax,0x7e
 	00104e70 mov bx,ax
 	00104e7c mov mar,0x506f20
 	00104e88 mov ax,mar
 	00104e94 push op
 	00104e9c mov op,ax
 	00104ea4 farpush bx
 	00104eac setfuncargs 0x1
 	00104eb4 mov ax,0x526f20
 	00104ec0 farcall ax
 	00104ec8 farsubsp 0x1
 	00104ed0 pop op
 	00104ed8 sourceline 0x1c4
 	00104ee0 push op
 	00104ee8 mov ax,0x426
 	00104ef4 farpush ax
 	00104efc mov ax,0x397
 	00104f08 farpush ax
 	00104f10 mov ax,0x0
 	00104f1c farpush ax
 	00104f24 mov ax,0x3
 	00104f30 farpush ax
 	00104f38 mov ax,0x0
 	00104f44 farpush ax
 	00104f4c mov mar,0x506f20
 	00104f58 mov ax,mar
 	00104f64 mov op,ax
 	00104f6c setfuncargs 0x5
 	00104f74 mov ax,0x536f20
 	00104f80 farcall ax
 	00104f88 farsubsp 0x5
 	00104f90 pop op
 	00104f98 sourceline 0x1c5
 	00104fa0 jmp 0x001051a8
		001051a8: UNCONDITIONAL_JUMP

	[00104fa8]
		00104654: CONDITIONAL_JUMP
 	00104fa8 sourceline 0x1c8
 	00104fb0 push op
 	00104fb8 mov mar,0x53ef20
 	00104fc4 mov ax,mar
 	00104fd0 mov op,ax
 	00104fd8 setfuncargs 0x0
 	00104fe0 mov ax,0x306f20
 	00104fec farcall ax
 	00104ff4 pop op
 	00104ffc sourceline 0x1c9
 	00105004 push op
 	0010500c mov ax,0x6b
 	00105018 farpush ax
 	00105020 mov mar,0x506f20
 	0010502c mov ax,mar
 	00105038 mov op,ax
 	00105040 setfuncargs 0x1
 	00105048 mov ax,0x51ef20
 	00105054 farcall ax
 	0010505c farsubsp 0x1
 	00105064 pop op
 	0010506c sourceline 0x1ca
 	00105074 mov ax,0x7e
 	00105080 mov bx,ax
 	0010508c mov mar,0x506f20
 	00105098 mov ax,mar
 	001050a4 push op
 	001050ac mov op,ax
 	001050b4 farpush bx
 	001050bc setfuncargs 0x1
 	001050c4 mov ax,0x526f20
 	001050d0 farcall ax
 	001050d8 farsubsp 0x1
 	001050e0 pop op
 	001050e8 sourceline 0x1cb
 	001050f0 push op
 	001050f8 mov ax,0x426
 	00105104 farpush ax
 	0010510c mov ax,0x397
 	00105118 farpush ax
 	00105120 mov ax,0x0
 	0010512c farpush ax
 	00105134 mov ax,0x3
 	00105140 farpush ax
 	00105148 mov ax,0x0
 	00105154 farpush ax
 	0010515c mov mar,0x506f20
 	00105168 mov ax,mar
 	00105174 mov op,ax
 	0010517c setfuncargs 0x5
 	00105184 mov ax,0x536f20
 	00105190 farcall ax
 	00105198 farsubsp 0x5
 	001051a0 pop op
		001051a8: FALL_THROUGH

	[001051a8]
		00104d58: UNCONDITIONAL_JUMP
		00104fa8: FALL_THROUGH
 	001051a8 sourceline 0x1cf
 	001051b0 mov ax,0x0
 	001051bc ret

DisableMouseOverLoadAndSaveMenu$0:
	[001051c0]
 	001051c0 sourceline 0x1d3
 	001051c8 thisaddr
 	001051d0 sourceline 0x1d4
*	001051d8 mov mar,0x546f20
 	001051e4 mov ax,mar
 	001051f0 push op
 	001051f8 mov op,ax
 	00105200 setfuncargs 0x0
 	00105208 mov ax,0x316f20
 	00105214 farcall ax
 	0010521c pop op
 	00105224 jz 0x00105d20
		00105d20: CONDITIONAL_JUMP
		0010522c: FALL_THROUGH

	[0010522c]
		001051c0: FALL_THROUGH
 	0010522c sourceline 0x1d6
 	00105234 mov mar,0x54ef20
 	00105240 mov ax,mar
 	0010524c push op
 	00105254 mov op,ax
 	0010525c setfuncargs 0x0
 	00105264 mov ax,0x316f20
 	00105270 farcall ax
 	00105278 pop op
 	00105280 jz 0x001057dc
		001057dc: CONDITIONAL_JUMP
		00105288: FALL_THROUGH

	[00105288]
		0010522c: FALL_THROUGH
 	00105288 sourceline 0x1d8
 	00105290 mov ax,0x0
 	0010529c setfuncargs 0x0
 	001052a4 mov ax,0x3e6f20
 	001052b0 farcall ax
 	001052b8 push ax
 	001052c0 mov ax,0x2c787b
 	001052cc pop bx
 	001052d4 streq bx,ax
 	001052e0 mov ax,bx
 	001052ec jz 0x001057cc
		001057cc: CONDITIONAL_JUMP
		001052f4: FALL_THROUGH

	[001052f4]
		00105288: FALL_THROUGH
 	001052f4 sourceline 0x1da
 	001052fc mov ax,0x7a5
 	00105308 mov bx,ax
 	00105314 mov mar,0x556f20
 	00105320 mov ax,mar
 	0010532c push op
 	00105334 mov op,ax
 	0010533c farpush bx
 	00105344 setfuncargs 0x1
 	0010534c mov ax,0x356f20
 	00105358 farcall ax
 	00105360 farsubsp 0x1
 	00105368 pop op
 	00105370 sourceline 0x1db
 	00105378 mov ax,0x7a5
 	00105384 mov bx,ax
 	00105390 mov mar,0x556f20
 	0010539c mov ax,mar
 	001053a8 push op
 	001053b0 mov op,ax
 	001053b8 farpush bx
 	001053c0 setfuncargs 0x1
 	001053c8 mov ax,0x3f6f20
 	001053d4 farcall ax
 	001053dc farsubsp 0x1
 	001053e4 pop op
 	001053ec sourceline 0x1dc
 	001053f4 mov ax,0x7a5
 	00105400 mov bx,ax
 	0010540c mov mar,0x556f20
 	00105418 mov ax,mar
 	00105424 push op
 	0010542c mov op,ax
 	00105434 farpush bx
 	0010543c setfuncargs 0x1
 	00105444 mov ax,0x3fef20
 	00105450 farcall ax
 	00105458 farsubsp 0x1
 	00105460 pop op
 	00105468 sourceline 0x1dd
 	00105470 mov ax,0x7c1
 	0010547c mov bx,ax
 	00105488 mov mar,0x55ef20
 	00105494 mov ax,mar
 	001054a0 push op
 	001054a8 mov op,ax
 	001054b0 farpush bx
 	001054b8 setfuncargs 0x1
 	001054c0 mov ax,0x356f20
 	001054cc farcall ax
 	001054d4 farsubsp 0x1
 	001054dc pop op
 	001054e4 sourceline 0x1de
 	001054ec mov ax,0x7c1
 	001054f8 mov bx,ax
 	00105504 mov mar,0x55ef20
 	00105510 mov ax,mar
 	0010551c push op
 	00105524 mov op,ax
 	0010552c farpush bx
 	00105534 setfuncargs 0x1
 	0010553c mov ax,0x3f6f20
 	00105548 farcall ax
 	00105550 farsubsp 0x1
 	00105558 pop op
 	00105560 sourceline 0x1df
 	00105568 mov ax,0x7c1
 	00105574 mov bx,ax
 	00105580 mov mar,0x55ef20
 	0010558c mov ax,mar
 	00105598 push op
 	001055a0 mov op,ax
 	001055a8 farpush bx
 	001055b0 setfuncargs 0x1
 	001055b8 mov ax,0x3fef20
 	001055c4 farcall ax
 	001055cc farsubsp 0x1
 	001055d4 pop op
 	001055dc sourceline 0x1e0
 	001055e4 mov ax,0x7c5
 	001055f0 mov bx,ax
 	001055fc mov mar,0x566f20
 	00105608 mov ax,mar
 	00105614 push op
 	0010561c mov op,ax
 	00105624 farpush bx
 	0010562c setfuncargs 0x1
 	00105634 mov ax,0x356f20
 	00105640 farcall ax
 	00105648 farsubsp 0x1
 	00105650 pop op
 	00105658 sourceline 0x1e1
 	00105660 mov ax,0x7c5
 	0010566c mov bx,ax
 	00105678 mov mar,0x566f20
 	00105684 mov ax,mar
 	00105690 push op
 	00105698 mov op,ax
 	001056a0 farpush bx
 	001056a8 setfuncargs 0x1
 	001056b0 mov ax,0x3f6f20
 	001056bc farcall ax
 	001056c4 farsubsp 0x1
 	001056cc pop op
 	001056d4 sourceline 0x1e2
 	001056dc mov ax,0x7c5
 	001056e8 mov bx,ax
 	001056f4 mov mar,0x566f20
 	00105700 mov ax,mar
 	0010570c push op
 	00105714 mov op,ax
 	0010571c farpush bx
 	00105724 setfuncargs 0x1
 	0010572c mov ax,0x3fef20
 	00105738 farcall ax
 	00105740 farsubsp 0x1
 	00105748 pop op
 	00105750 sourceline 0x1e3
 	00105758 mov ax,0x7c9
 	00105764 mov bx,ax
 	00105770 mov mar,0x56ef20
 	0010577c mov ax,mar
 	00105788 push op
 	00105790 mov op,ax
 	00105798 farpush bx
 	001057a0 setfuncargs 0x1
 	001057a8 mov ax,0x356f20
 	001057b4 farcall ax
 	001057bc farsubsp 0x1
 	001057c4 pop op
		001057cc: FALL_THROUGH

	[001057cc]
		00105288: CONDITIONAL_JUMP
		001052f4: FALL_THROUGH
 	001057cc sourceline 0x1e5
 	001057d4 jmp 0x00105d20
		00105d20: UNCONDITIONAL_JUMP

	[001057dc]
		0010522c: CONDITIONAL_JUMP
 	001057dc sourceline 0x1e8
 	001057e4 mov ax,0x0
 	001057f0 setfuncargs 0x0
 	001057f8 mov ax,0x3e6f20
 	00105804 farcall ax
 	0010580c push ax
 	00105814 mov ax,0x2c787b
 	00105820 pop bx
 	00105828 streq bx,ax
 	00105834 mov ax,bx
 	00105840 jz 0x00105d20
		00105d20: CONDITIONAL_JUMP
		00105848: FALL_THROUGH

	[00105848]
		001057dc: FALL_THROUGH
 	00105848 sourceline 0x1ea
 	00105850 mov ax,0x7a5
 	0010585c mov bx,ax
 	00105868 mov mar,0x556f20
 	00105874 mov ax,mar
 	00105880 push op
 	00105888 mov op,ax
 	00105890 farpush bx
 	00105898 setfuncargs 0x1
 	001058a0 mov ax,0x356f20
 	001058ac farcall ax
 	001058b4 farsubsp 0x1
 	001058bc pop op
 	001058c4 sourceline 0x1eb
 	001058cc mov ax,0x7a6
 	001058d8 mov bx,ax
 	001058e4 mov mar,0x556f20
 	001058f0 mov ax,mar
 	001058fc push op
 	00105904 mov op,ax
 	0010590c farpush bx
 	00105914 setfuncargs 0x1
 	0010591c mov ax,0x3f6f20
 	00105928 farcall ax
 	00105930 farsubsp 0x1
 	00105938 pop op
 	00105940 sourceline 0x1ec
 	00105948 mov ax,0x7a6
 	00105954 mov bx,ax
 	00105960 mov mar,0x556f20
 	0010596c mov ax,mar
 	00105978 push op
 	00105980 mov op,ax
 	00105988 farpush bx
 	00105990 setfuncargs 0x1
 	00105998 mov ax,0x3fef20
 	001059a4 farcall ax
 	001059ac farsubsp 0x1
 	001059b4 pop op
 	001059bc sourceline 0x1ed
 	001059c4 mov ax,0x7c1
 	001059d0 mov bx,ax
 	001059dc mov mar,0x55ef20
 	001059e8 mov ax,mar
 	001059f4 push op
 	001059fc mov op,ax
 	00105a04 farpush bx
 	00105a0c setfuncargs 0x1
 	00105a14 mov ax,0x356f20
 	00105a20 farcall ax
 	00105a28 farsubsp 0x1
 	00105a30 pop op
 	00105a38 sourceline 0x1ee
 	00105a40 mov ax,0x7c2
 	00105a4c mov bx,ax
 	00105a58 mov mar,0x55ef20
 	00105a64 mov ax,mar
 	00105a70 push op
 	00105a78 mov op,ax
 	00105a80 farpush bx
 	00105a88 setfuncargs 0x1
 	00105a90 mov ax,0x3f6f20
 	00105a9c farcall ax
 	00105aa4 farsubsp 0x1
 	00105aac pop op
 	00105ab4 sourceline 0x1ef
 	00105abc mov ax,0x7c2
 	00105ac8 mov bx,ax
 	00105ad4 mov mar,0x55ef20
 	00105ae0 mov ax,mar
 	00105aec push op
 	00105af4 mov op,ax
 	00105afc farpush bx
 	00105b04 setfuncargs 0x1
 	00105b0c mov ax,0x3fef20
 	00105b18 farcall ax
 	00105b20 farsubsp 0x1
 	00105b28 pop op
 	00105b30 sourceline 0x1f0
 	00105b38 mov ax,0x7c5
 	00105b44 mov bx,ax
 	00105b50 mov mar,0x566f20
 	00105b5c mov ax,mar
 	00105b68 push op
 	00105b70 mov op,ax
 	00105b78 farpush bx
 	00105b80 setfuncargs 0x1
 	00105b88 mov ax,0x356f20
 	00105b94 farcall ax
 	00105b9c farsubsp 0x1
 	00105ba4 pop op
 	00105bac sourceline 0x1f1
 	00105bb4 mov ax,0x7c6
 	00105bc0 mov bx,ax
 	00105bcc mov mar,0x566f20
 	00105bd8 mov ax,mar
 	00105be4 push op
 	00105bec mov op,ax
 	00105bf4 farpush bx
 	00105bfc setfuncargs 0x1
 	00105c04 mov ax,0x3f6f20
 	00105c10 farcall ax
 	00105c18 farsubsp 0x1
 	00105c20 pop op
 	00105c28 sourceline 0x1f2
 	00105c30 mov ax,0x7c6
 	00105c3c mov bx,ax
 	00105c48 mov mar,0x566f20
 	00105c54 mov ax,mar
 	00105c60 push op
 	00105c68 mov op,ax
 	00105c70 farpush bx
 	00105c78 setfuncargs 0x1
 	00105c80 mov ax,0x3fef20
 	00105c8c farcall ax
 	00105c94 farsubsp 0x1
 	00105c9c pop op
 	00105ca4 sourceline 0x1f3
 	00105cac mov ax,0x7c9
 	00105cb8 mov bx,ax
 	00105cc4 mov mar,0x56ef20
 	00105cd0 mov ax,mar
 	00105cdc push op
 	00105ce4 mov op,ax
 	00105cec farpush bx
 	00105cf4 setfuncargs 0x1
 	00105cfc mov ax,0x356f20
 	00105d08 farcall ax
 	00105d10 farsubsp 0x1
 	00105d18 pop op
		00105d20: FALL_THROUGH

	[00105d20]
		001051c0: CONDITIONAL_JUMP
		001057cc: UNCONDITIONAL_JUMP
		001057dc: CONDITIONAL_JUMP
		00105848: FALL_THROUGH
 	00105d20 sourceline 0x1f9
 	00105d28 mov mar,0x576f20
 	00105d34 mov ax,mar
 	00105d40 push op
 	00105d48 mov op,ax
 	00105d50 setfuncargs 0x0
 	00105d58 mov ax,0x316f20
 	00105d64 farcall ax
 	00105d6c pop op
 	00105d74 jz 0x00106870
		00106870: CONDITIONAL_JUMP
		00105d7c: FALL_THROUGH

	[00105d7c]
		00105d20: FALL_THROUGH
 	00105d7c sourceline 0x1fb
 	00105d84 mov mar,0x54ef20
 	00105d90 mov ax,mar
 	00105d9c push op
 	00105da4 mov op,ax
 	00105dac setfuncargs 0x0
 	00105db4 mov ax,0x316f20
 	00105dc0 farcall ax
 	00105dc8 pop op
 	00105dd0 jz 0x0010632c
		0010632c: CONDITIONAL_JUMP
		00105dd8: FALL_THROUGH

	[00105dd8]
		00105d7c: FALL_THROUGH
 	00105dd8 sourceline 0x1fd
 	00105de0 mov ax,0x0
 	00105dec setfuncargs 0x0
 	00105df4 mov ax,0x3e6f20
 	00105e00 farcall ax
 	00105e08 push ax
 	00105e10 mov ax,0x2c787b
 	00105e1c pop bx
 	00105e24 streq bx,ax
 	00105e30 mov ax,bx
 	00105e3c jz 0x0010631c
		0010631c: CONDITIONAL_JUMP
		00105e44: FALL_THROUGH

	[00105e44]
		00105dd8: FALL_THROUGH
 	00105e44 sourceline 0x1ff
 	00105e4c mov ax,0x7a5
 	00105e58 mov bx,ax
 	00105e64 mov mar,0x57ef20
 	00105e70 mov ax,mar
 	00105e7c push op
 	00105e84 mov op,ax
 	00105e8c farpush bx
 	00105e94 setfuncargs 0x1
 	00105e9c mov ax,0x356f20
 	00105ea8 farcall ax
 	00105eb0 farsubsp 0x1
 	00105eb8 pop op
 	00105ec0 sourceline 0x200
 	00105ec8 mov ax,0x7a5
 	00105ed4 mov bx,ax
 	00105ee0 mov mar,0x57ef20
 	00105eec mov ax,mar
 	00105ef8 push op
 	00105f00 mov op,ax
 	00105f08 farpush bx
 	00105f10 setfuncargs 0x1
 	00105f18 mov ax,0x3f6f20
 	00105f24 farcall ax
 	00105f2c farsubsp 0x1
 	00105f34 pop op
 	00105f3c sourceline 0x201
 	00105f44 mov ax,0x7a5
 	00105f50 mov bx,ax
 	00105f5c mov mar,0x57ef20
 	00105f68 mov ax,mar
 	00105f74 push op
 	00105f7c mov op,ax
 	00105f84 farpush bx
 	00105f8c setfuncargs 0x1
 	00105f94 mov ax,0x3fef20
 	00105fa0 farcall ax
 	00105fa8 farsubsp 0x1
 	00105fb0 pop op
 	00105fb8 sourceline 0x202
 	00105fc0 mov ax,0x7d2
 	00105fcc mov bx,ax
 	00105fd8 mov mar,0x586f20
 	00105fe4 mov ax,mar
 	00105ff0 push op
 	00105ff8 mov op,ax
 	00106000 farpush bx
 	00106008 setfuncargs 0x1
 	00106010 mov ax,0x356f20
 	0010601c farcall ax
 	00106024 farsubsp 0x1
 	0010602c pop op
 	00106034 sourceline 0x203
 	0010603c mov ax,0x7d2
 	00106048 mov bx,ax
 	00106054 mov mar,0x586f20
 	00106060 mov ax,mar
 	0010606c push op
 	00106074 mov op,ax
 	0010607c farpush bx
 	00106084 setfuncargs 0x1
 	0010608c mov ax,0x3f6f20
 	00106098 farcall ax
 	001060a0 farsubsp 0x1
 	001060a8 pop op
 	001060b0 sourceline 0x204
 	001060b8 mov ax,0x7d2
 	001060c4 mov bx,ax
 	001060d0 mov mar,0x586f20
 	001060dc mov ax,mar
 	001060e8 push op
 	001060f0 mov op,ax
 	001060f8 farpush bx
 	00106100 setfuncargs 0x1
 	00106108 mov ax,0x3fef20
 	00106114 farcall ax
 	0010611c farsubsp 0x1
 	00106124 pop op
 	0010612c sourceline 0x205
 	00106134 mov ax,0x7c5
 	00106140 mov bx,ax
 	0010614c mov mar,0x58ef20
 	00106158 mov ax,mar
 	00106164 push op
 	0010616c mov op,ax
 	00106174 farpush bx
 	0010617c setfuncargs 0x1
 	00106184 mov ax,0x356f20
 	00106190 farcall ax
 	00106198 farsubsp 0x1
 	001061a0 pop op
 	001061a8 sourceline 0x206
 	001061b0 mov ax,0x7c5
 	001061bc mov bx,ax
 	001061c8 mov mar,0x58ef20
 	001061d4 mov ax,mar
 	001061e0 push op
 	001061e8 mov op,ax
 	001061f0 farpush bx
 	001061f8 setfuncargs 0x1
 	00106200 mov ax,0x3f6f20
 	0010620c farcall ax
 	00106214 farsubsp 0x1
 	0010621c pop op
 	00106224 sourceline 0x207
 	0010622c mov ax,0x7c5
 	00106238 mov bx,ax
 	00106244 mov mar,0x58ef20
 	00106250 mov ax,mar
 	0010625c push op
 	00106264 mov op,ax
 	0010626c farpush bx
 	00106274 setfuncargs 0x1
 	0010627c mov ax,0x3fef20
 	00106288 farcall ax
 	00106290 farsubsp 0x1
 	00106298 pop op
 	001062a0 sourceline 0x208
 	001062a8 mov ax,0x7d6
 	001062b4 mov bx,ax
 	001062c0 mov mar,0x596f20
 	001062cc mov ax,mar
 	001062d8 push op
 	001062e0 mov op,ax
 	001062e8 farpush bx
 	001062f0 setfuncargs 0x1
 	001062f8 mov ax,0x356f20
 	00106304 farcall ax
 	0010630c farsubsp 0x1
 	00106314 pop op
		0010631c: FALL_THROUGH

	[0010631c]
		00105dd8: CONDITIONAL_JUMP
		00105e44: FALL_THROUGH
 	0010631c sourceline 0x20a
 	00106324 jmp 0x00106870
		00106870: UNCONDITIONAL_JUMP

	[0010632c]
		00105d7c: CONDITIONAL_JUMP
 	0010632c sourceline 0x20d
 	00106334 mov ax,0x0
 	00106340 setfuncargs 0x0
 	00106348 mov ax,0x3e6f20
 	00106354 farcall ax
 	0010635c push ax
 	00106364 mov ax,0x2c787b
 	00106370 pop bx
 	00106378 streq bx,ax
 	00106384 mov ax,bx
 	00106390 jz 0x00106870
		00106870: CONDITIONAL_JUMP
		00106398: FALL_THROUGH

	[00106398]
		0010632c: FALL_THROUGH
 	00106398 sourceline 0x20f
 	001063a0 mov ax,0x7a5
 	001063ac mov bx,ax
 	001063b8 mov mar,0x57ef20
 	001063c4 mov ax,mar
 	001063d0 push op
 	001063d8 mov op,ax
 	001063e0 farpush bx
 	001063e8 setfuncargs 0x1
 	001063f0 mov ax,0x356f20
 	001063fc farcall ax
 	00106404 farsubsp 0x1
 	0010640c pop op
 	00106414 sourceline 0x210
 	0010641c mov ax,0x7a6
 	00106428 mov bx,ax
 	00106434 mov mar,0x57ef20
 	00106440 mov ax,mar
 	0010644c push op
 	00106454 mov op,ax
 	0010645c farpush bx
 	00106464 setfuncargs 0x1
 	0010646c mov ax,0x3f6f20
 	00106478 farcall ax
 	00106480 farsubsp 0x1
 	00106488 pop op
 	00106490 sourceline 0x211
 	00106498 mov ax,0x7a6
 	001064a4 mov bx,ax
 	001064b0 mov mar,0x57ef20
 	001064bc mov ax,mar
 	001064c8 push op
 	001064d0 mov op,ax
 	001064d8 farpush bx
 	001064e0 setfuncargs 0x1
 	001064e8 mov ax,0x3fef20
 	001064f4 farcall ax
 	001064fc farsubsp 0x1
 	00106504 pop op
 	0010650c sourceline 0x212
 	00106514 mov ax,0x7d2
 	00106520 mov bx,ax
 	0010652c mov mar,0x586f20
 	00106538 mov ax,mar
 	00106544 push op
 	0010654c mov op,ax
 	00106554 farpush bx
 	0010655c setfuncargs 0x1
 	00106564 mov ax,0x356f20
 	00106570 farcall ax
 	00106578 farsubsp 0x1
 	00106580 pop op
 	00106588 sourceline 0x213
 	00106590 mov ax,0x7d3
 	0010659c mov bx,ax
 	001065a8 mov mar,0x586f20
 	001065b4 mov ax,mar
 	001065c0 push op
 	001065c8 mov op,ax
 	001065d0 farpush bx
 	001065d8 setfuncargs 0x1
 	001065e0 mov ax,0x3f6f20
 	001065ec farcall ax
 	001065f4 farsubsp 0x1
 	001065fc pop op
 	00106604 sourceline 0x214
 	0010660c mov ax,0x7d3
 	00106618 mov bx,ax
 	00106624 mov mar,0x586f20
 	00106630 mov ax,mar
 	0010663c push op
 	00106644 mov op,ax
 	0010664c farpush bx
 	00106654 setfuncargs 0x1
 	0010665c mov ax,0x3fef20
 	00106668 farcall ax
 	00106670 farsubsp 0x1
 	00106678 pop op
 	00106680 sourceline 0x215
 	00106688 mov ax,0x7c5
 	00106694 mov bx,ax
 	001066a0 mov mar,0x58ef20
 	001066ac mov ax,mar
 	001066b8 push op
 	001066c0 mov op,ax
 	001066c8 farpush bx
 	001066d0 setfuncargs 0x1
 	001066d8 mov ax,0x356f20
 	001066e4 farcall ax
 	001066ec farsubsp 0x1
 	001066f4 pop op
 	001066fc sourceline 0x216
 	00106704 mov ax,0x7c6
 	00106710 mov bx,ax
 	0010671c mov mar,0x58ef20
 	00106728 mov ax,mar
 	00106734 push op
 	0010673c mov op,ax
 	00106744 farpush bx
 	0010674c setfuncargs 0x1
 	00106754 mov ax,0x3f6f20
 	00106760 farcall ax
 	00106768 farsubsp 0x1
 	00106770 pop op
 	00106778 sourceline 0x217
 	00106780 mov ax,0x7c6
 	0010678c mov bx,ax
 	00106798 mov mar,0x58ef20
 	001067a4 mov ax,mar
 	001067b0 push op
 	001067b8 mov op,ax
 	001067c0 farpush bx
 	001067c8 setfuncargs 0x1
 	001067d0 mov ax,0x3fef20
 	001067dc farcall ax
 	001067e4 farsubsp 0x1
 	001067ec pop op
 	001067f4 sourceline 0x218
 	001067fc mov ax,0x7d6
 	00106808 mov bx,ax
 	00106814 mov mar,0x596f20
 	00106820 mov ax,mar
 	0010682c push op
 	00106834 mov op,ax
 	0010683c farpush bx
 	00106844 setfuncargs 0x1
 	0010684c mov ax,0x356f20
 	00106858 farcall ax
 	00106860 farsubsp 0x1
 	00106868 pop op
		00106870: FALL_THROUGH

	[00106870]
		00105d20: CONDITIONAL_JUMP
		0010631c: UNCONDITIONAL_JUMP
		0010632c: CONDITIONAL_JUMP
		00106398: FALL_THROUGH
 	00106870 sourceline 0x21d
 	00106878 mov mar,0x326f20
 	00106884 mov ax,mar
 	00106890 push op
 	00106898 mov op,ax
 	001068a0 setfuncargs 0x0
 	001068a8 mov ax,0x316f20
 	001068b4 farcall ax
 	001068bc pop op
 	001068c4 jz 0x00107898
		00107898: CONDITIONAL_JUMP
		001068cc: FALL_THROUGH

	[001068cc]
		00106870: FALL_THROUGH
 	001068cc sourceline 0x21f
 	001068d4 mov mar,0x54ef20
 	001068e0 mov ax,mar
 	001068ec push op
 	001068f4 mov op,ax
 	001068fc setfuncargs 0x0
 	00106904 mov ax,0x316f20
 	00106910 farcall ax
 	00106918 pop op
 	00106920 jz 0x001070e8
		001070e8: CONDITIONAL_JUMP
		00106928: FALL_THROUGH

	[00106928]
		001068cc: FALL_THROUGH
 	00106928 sourceline 0x221
 	00106930 mov ax,0x0
 	0010693c setfuncargs 0x0
 	00106944 mov ax,0x3e6f20
 	00106950 farcall ax
 	00106958 push ax
 	00106960 mov ax,0x2c787b
 	0010696c pop bx
 	00106974 streq bx,ax
 	00106980 mov ax,bx
 	0010698c jz 0x001070d8
		001070d8: CONDITIONAL_JUMP
		00106994: FALL_THROUGH

	[00106994]
		00106928: FALL_THROUGH
 	00106994 sourceline 0x223
 	0010699c mov ax,0x7a0
 	001069a8 mov bx,ax
 	001069b4 mov mar,0x3eef20
 	001069c0 mov ax,mar
 	001069cc push op
 	001069d4 mov op,ax
 	001069dc farpush bx
 	001069e4 setfuncargs 0x1
 	001069ec mov ax,0x356f20
 	001069f8 farcall ax
 	00106a00 farsubsp 0x1
 	00106a08 pop op
 	00106a10 sourceline 0x224
 	00106a18 mov ax,0x7a0
 	00106a24 mov bx,ax
 	00106a30 mov mar,0x3eef20
 	00106a3c mov ax,mar
 	00106a48 push op
 	00106a50 mov op,ax
 	00106a58 farpush bx
 	00106a60 setfuncargs 0x1
 	00106a68 mov ax,0x3f6f20
 	00106a74 farcall ax
 	00106a7c farsubsp 0x1
 	00106a84 pop op
 	00106a8c sourceline 0x225
 	00106a94 mov ax,0x7a0
 	00106aa0 mov bx,ax
 	00106aac mov mar,0x3eef20
 	00106ab8 mov ax,mar
 	00106ac4 push op
 	00106acc mov op,ax
 	00106ad4 farpush bx
 	00106adc setfuncargs 0x1
 	00106ae4 mov ax,0x3fef20
 	00106af0 farcall ax
 	00106af8 farsubsp 0x1
 	00106b00 pop op
 	00106b08 sourceline 0x226
 	00106b10 mov ax,0x7a2
 	00106b1c mov bx,ax
 	00106b28 mov mar,0x406f20
 	00106b34 mov ax,mar
 	00106b40 push op
 	00106b48 mov op,ax
 	00106b50 farpush bx
 	00106b58 setfuncargs 0x1
 	00106b60 mov ax,0x356f20
 	00106b6c farcall ax
 	00106b74 farsubsp 0x1
 	00106b7c pop op
 	00106b84 sourceline 0x227
 	00106b8c mov ax,0x7a2
 	00106b98 mov bx,ax
 	00106ba4 mov mar,0x406f20
 	00106bb0 mov ax,mar
 	00106bbc push op
 	00106bc4 mov op,ax
 	00106bcc farpush bx
 	00106bd4 setfuncargs 0x1
 	00106bdc mov ax,0x3f6f20
 	00106be8 farcall ax
 	00106bf0 farsubsp 0x1
 	00106bf8 pop op
 	00106c00 sourceline 0x228
 	00106c08 mov ax,0x7a2
 	00106c14 mov bx,ax
 	00106c20 mov mar,0x406f20
 	00106c2c mov ax,mar
 	00106c38 push op
 	00106c40 mov op,ax
 	00106c48 farpush bx
 	00106c50 setfuncargs 0x1
 	00106c58 mov ax,0x3fef20
 	00106c64 farcall ax
 	00106c6c farsubsp 0x1
 	00106c74 pop op
 	00106c7c sourceline 0x229
 	00106c84 mov ax,0x79a
 	00106c90 mov bx,ax
 	00106c9c mov mar,0x40ef20
 	00106ca8 mov ax,mar
 	00106cb4 push op
 	00106cbc mov op,ax
 	00106cc4 farpush bx
 	00106ccc setfuncargs 0x1
 	00106cd4 mov ax,0x356f20
 	00106ce0 farcall ax
 	00106ce8 farsubsp 0x1
 	00106cf0 pop op
 	00106cf8 sourceline 0x22a
 	00106d00 mov ax,0x79a
 	00106d0c mov bx,ax
 	00106d18 mov mar,0x40ef20
 	00106d24 mov ax,mar
 	00106d30 push op
 	00106d38 mov op,ax
 	00106d40 farpush bx
 	00106d48 setfuncargs 0x1
 	00106d50 mov ax,0x3f6f20
 	00106d5c farcall ax
 	00106d64 farsubsp 0x1
 	00106d6c pop op
 	00106d74 sourceline 0x22b
 	00106d7c mov ax,0x79a
 	00106d88 mov bx,ax
 	00106d94 mov mar,0x40ef20
 	00106da0 mov ax,mar
 	00106dac push op
 	00106db4 mov op,ax
 	00106dbc farpush bx
 	00106dc4 setfuncargs 0x1
 	00106dcc mov ax,0x3fef20
 	00106dd8 farcall ax
 	00106de0 farsubsp 0x1
 	00106de8 pop op
 	00106df0 sourceline 0x22c
 	00106df8 mov ax,0x79c
 	00106e04 mov bx,ax
 	00106e10 mov mar,0x416f20
 	00106e1c mov ax,mar
 	00106e28 push op
 	00106e30 mov op,ax
 	00106e38 farpush bx
 	00106e40 setfuncargs 0x1
 	00106e48 mov ax,0x356f20
 	00106e54 farcall ax
 	00106e5c farsubsp 0x1
 	00106e64 pop op
 	00106e6c sourceline 0x22d
 	00106e74 mov ax,0x79c
 	00106e80 mov bx,ax
 	00106e8c mov mar,0x416f20
 	00106e98 mov ax,mar
 	00106ea4 push op
 	00106eac mov op,ax
 	00106eb4 farpush bx
 	00106ebc setfuncargs 0x1
 	00106ec4 mov ax,0x3f6f20
 	00106ed0 farcall ax
 	00106ed8 farsubsp 0x1
 	00106ee0 pop op
 	00106ee8 sourceline 0x22e
 	00106ef0 mov ax,0x79c
 	00106efc mov bx,ax
 	00106f08 mov mar,0x416f20
 	00106f14 mov ax,mar
 	00106f20 push op
 	00106f28 mov op,ax
 	00106f30 farpush bx
 	00106f38 setfuncargs 0x1
 	00106f40 mov ax,0x3fef20
 	00106f4c farcall ax
 	00106f54 farsubsp 0x1
 	00106f5c pop op
 	00106f64 sourceline 0x22f
 	00106f6c mov ax,0x79e
 	00106f78 mov bx,ax
 	00106f84 mov mar,0x41ef20
 	00106f90 mov ax,mar
 	00106f9c push op
 	00106fa4 mov op,ax
 	00106fac farpush bx
 	00106fb4 setfuncargs 0x1
 	00106fbc mov ax,0x356f20
 	00106fc8 farcall ax
 	00106fd0 farsubsp 0x1
 	00106fd8 pop op
 	00106fe0 sourceline 0x230
 	00106fe8 mov ax,0x79e
 	00106ff4 mov bx,ax
 	00107000 mov mar,0x41ef20
 	0010700c mov ax,mar
 	00107018 push op
 	00107020 mov op,ax
 	00107028 farpush bx
 	00107030 setfuncargs 0x1
 	00107038 mov ax,0x3f6f20
 	00107044 farcall ax
 	0010704c farsubsp 0x1
 	00107054 pop op
 	0010705c sourceline 0x231
 	00107064 mov ax,0x79e
 	00107070 mov bx,ax
 	0010707c mov mar,0x41ef20
 	00107088 mov ax,mar
 	00107094 push op
 	0010709c mov op,ax
 	001070a4 farpush bx
 	001070ac setfuncargs 0x1
 	001070b4 mov ax,0x3fef20
 	001070c0 farcall ax
 	001070c8 farsubsp 0x1
 	001070d0 pop op
		001070d8: FALL_THROUGH

	[001070d8]
		00106928: CONDITIONAL_JUMP
		00106994: FALL_THROUGH
 	001070d8 sourceline 0x233
 	001070e0 jmp 0x00107898
		00107898: UNCONDITIONAL_JUMP

	[001070e8]
		001068cc: CONDITIONAL_JUMP
 	001070e8 sourceline 0x236
 	001070f0 mov ax,0x0
 	001070fc setfuncargs 0x0
 	00107104 mov ax,0x3e6f20
 	00107110 farcall ax
 	00107118 push ax
 	00107120 mov ax,0x2c787b
 	0010712c pop bx
 	00107134 streq bx,ax
 	00107140 mov ax,bx
 	0010714c jz 0x00107898
		00107898: CONDITIONAL_JUMP
		00107154: FALL_THROUGH

	[00107154]
		001070e8: FALL_THROUGH
 	00107154 sourceline 0x238
 	0010715c mov ax,0x7a0
 	00107168 mov bx,ax
 	00107174 mov mar,0x3eef20
 	00107180 mov ax,mar
 	0010718c push op
 	00107194 mov op,ax
 	0010719c farpush bx
 	001071a4 setfuncargs 0x1
 	001071ac mov ax,0x356f20
 	001071b8 farcall ax
 	001071c0 farsubsp 0x1
 	001071c8 pop op
 	001071d0 sourceline 0x239
 	001071d8 mov ax,0x7a1
 	001071e4 mov bx,ax
 	001071f0 mov mar,0x3eef20
 	001071fc mov ax,mar
 	00107208 push op
 	00107210 mov op,ax
 	00107218 farpush bx
 	00107220 setfuncargs 0x1
 	00107228 mov ax,0x3f6f20
 	00107234 farcall ax
 	0010723c farsubsp 0x1
 	00107244 pop op
 	0010724c sourceline 0x23a
 	00107254 mov ax,0x7a1
 	00107260 mov bx,ax
 	0010726c mov mar,0x3eef20
 	00107278 mov ax,mar
 	00107284 push op
 	0010728c mov op,ax
 	00107294 farpush bx
 	0010729c setfuncargs 0x1
 	001072a4 mov ax,0x3fef20
 	001072b0 farcall ax
 	001072b8 farsubsp 0x1
 	001072c0 pop op
 	001072c8 sourceline 0x23b
 	001072d0 mov ax,0x7a2
 	001072dc mov bx,ax
 	001072e8 mov mar,0x406f20
 	001072f4 mov ax,mar
 	00107300 push op
 	00107308 mov op,ax
 	00107310 farpush bx
 	00107318 setfuncargs 0x1
 	00107320 mov ax,0x356f20
 	0010732c farcall ax
 	00107334 farsubsp 0x1
 	0010733c pop op
 	00107344 sourceline 0x23c
 	0010734c mov ax,0x7a3
 	00107358 mov bx,ax
 	00107364 mov mar,0x406f20
 	00107370 mov ax,mar
 	0010737c push op
 	00107384 mov op,ax
 	0010738c farpush bx
 	00107394 setfuncargs 0x1
 	0010739c mov ax,0x3f6f20
 	001073a8 farcall ax
 	001073b0 farsubsp 0x1
 	001073b8 pop op
 	001073c0 sourceline 0x23d
 	001073c8 mov ax,0x7a3
 	001073d4 mov bx,ax
 	001073e0 mov mar,0x406f20
 	001073ec mov ax,mar
 	001073f8 push op
 	00107400 mov op,ax
 	00107408 farpush bx
 	00107410 setfuncargs 0x1
 	00107418 mov ax,0x3fef20
 	00107424 farcall ax
 	0010742c farsubsp 0x1
 	00107434 pop op
 	0010743c sourceline 0x23e
 	00107444 mov ax,0x79a
 	00107450 mov bx,ax
 	0010745c mov mar,0x40ef20
 	00107468 mov ax,mar
 	00107474 push op
 	0010747c mov op,ax
 	00107484 farpush bx
 	0010748c setfuncargs 0x1
 	00107494 mov ax,0x356f20
 	001074a0 farcall ax
 	001074a8 farsubsp 0x1
 	001074b0 pop op
 	001074b8 sourceline 0x23f
 	001074c0 mov ax,0x79b
 	001074cc mov bx,ax
 	001074d8 mov mar,0x40ef20
 	001074e4 mov ax,mar
 	001074f0 push op
 	001074f8 mov op,ax
 	00107500 farpush bx
 	00107508 setfuncargs 0x1
 	00107510 mov ax,0x3f6f20
 	0010751c farcall ax
 	00107524 farsubsp 0x1
 	0010752c pop op
 	00107534 sourceline 0x240
 	0010753c mov ax,0x79b
 	00107548 mov bx,ax
 	00107554 mov mar,0x40ef20
 	00107560 mov ax,mar
 	0010756c push op
 	00107574 mov op,ax
 	0010757c farpush bx
 	00107584 setfuncargs 0x1
 	0010758c mov ax,0x3fef20
 	00107598 farcall ax
 	001075a0 farsubsp 0x1
 	001075a8 pop op
 	001075b0 sourceline 0x241
 	001075b8 mov ax,0x79c
 	001075c4 mov bx,ax
 	001075d0 mov mar,0x416f20
 	001075dc mov ax,mar
 	001075e8 push op
 	001075f0 mov op,ax
 	001075f8 farpush bx
 	00107600 setfuncargs 0x1
 	00107608 mov ax,0x356f20
 	00107614 farcall ax
 	0010761c farsubsp 0x1
 	00107624 pop op
 	0010762c sourceline 0x242
 	00107634 mov ax,0x79d
 	00107640 mov bx,ax
 	0010764c mov mar,0x416f20
 	00107658 mov ax,mar
 	00107664 push op
 	0010766c mov op,ax
 	00107674 farpush bx
 	0010767c setfuncargs 0x1
 	00107684 mov ax,0x3f6f20
 	00107690 farcall ax
 	00107698 farsubsp 0x1
 	001076a0 pop op
 	001076a8 sourceline 0x243
 	001076b0 mov ax,0x79d
 	001076bc mov bx,ax
 	001076c8 mov mar,0x416f20
 	001076d4 mov ax,mar
 	001076e0 push op
 	001076e8 mov op,ax
 	001076f0 farpush bx
 	001076f8 setfuncargs 0x1
 	00107700 mov ax,0x3fef20
 	0010770c farcall ax
 	00107714 farsubsp 0x1
 	0010771c pop op
 	00107724 sourceline 0x244
 	0010772c mov ax,0x79e
 	00107738 mov bx,ax
 	00107744 mov mar,0x41ef20
 	00107750 mov ax,mar
 	0010775c push op
 	00107764 mov op,ax
 	0010776c farpush bx
 	00107774 setfuncargs 0x1
 	0010777c mov ax,0x356f20
 	00107788 farcall ax
 	00107790 farsubsp 0x1
 	00107798 pop op
 	001077a0 sourceline 0x245
 	001077a8 mov ax,0x79f
 	001077b4 mov bx,ax
 	001077c0 mov mar,0x41ef20
 	001077cc mov ax,mar
 	001077d8 push op
 	001077e0 mov op,ax
 	001077e8 farpush bx
 	001077f0 setfuncargs 0x1
 	001077f8 mov ax,0x3f6f20
 	00107804 farcall ax
 	0010780c farsubsp 0x1
 	00107814 pop op
 	0010781c sourceline 0x246
 	00107824 mov ax,0x79f
 	00107830 mov bx,ax
 	0010783c mov mar,0x41ef20
 	00107848 mov ax,mar
 	00107854 push op
 	0010785c mov op,ax
 	00107864 farpush bx
 	0010786c setfuncargs 0x1
 	00107874 mov ax,0x3fef20
 	00107880 farcall ax
 	00107888 farsubsp 0x1
 	00107890 pop op
		00107898: FALL_THROUGH

	[00107898]
		00106870: CONDITIONAL_JUMP
		001070d8: UNCONDITIONAL_JUMP
		001070e8: CONDITIONAL_JUMP
		00107154: FALL_THROUGH
 	00107898 sourceline 0x24a
 	001078a0 mov ax,0x0
 	001078ac ret

repeatedly_execute$0:
	[001078b0]
 	001078b0 sourceline 0x251
 	001078b8 thisaddr
 	001078c0 sourceline 0x252
*	001078c8 mov mar,0x59ef20
 	001078d4 memread4 ax
 	001078dc push ax
 	001078e4 mov ax,0x0
 	001078f0 pop bx
 	001078f8 cmpgt bx,ax
 	00107904 mov ax,bx
 	00107910 jz 0x00107988
		00107988: CONDITIONAL_JUMP
		00107918: FALL_THROUGH

	[00107918]
		001078b0: FALL_THROUGH
 	00107918 push ax
 	00107920 mov mar,0x59ef20
 	0010792c memread4 ax
 	00107934 push ax
 	0010793c mov ax,0xf
 	00107948 pop bx
 	00107950 cmple bx,ax
 	0010795c mov ax,bx
 	00107968 pop bx
 	00107970 land bx,ax
 	0010797c mov ax,bx
		00107988: FALL_THROUGH

	[00107988]
		001078b0: CONDITIONAL_JUMP
		00107918: FALL_THROUGH
 	00107988 jz 0x001079c0
		001079c0: CONDITIONAL_JUMP
		00107990: FALL_THROUGH

	[00107990]
		00107988: FALL_THROUGH
 	00107990 mov mar,0x59ef20
 	0010799c memread4 ax
 	001079a4 add ax,0x1
 	001079b0 memwrite4 ax
 	001079b8 jmp 0x00107a38
		00107a38: UNCONDITIONAL_JUMP

	[001079c0]
		00107988: CONDITIONAL_JUMP
 	001079c0 sourceline 0x253
 	001079c8 mov mar,0x59ef20
 	001079d4 memread4 ax
 	001079dc push ax
 	001079e4 mov ax,0xf
 	001079f0 pop bx
 	001079f8 cmpgt bx,ax
 	00107a04 mov ax,bx
 	00107a10 jz 0x00107a38
		00107a38: CONDITIONAL_JUMP
		00107a18: FALL_THROUGH

	[00107a18]
		001079c0: FALL_THROUGH
 	00107a18 mov ax,0x0
 	00107a24 mov mar,0x59ef20
 	00107a30 memwrite4 ax
		00107a38: FALL_THROUGH

	[00107a38]
		00107990: UNCONDITIONAL_JUMP
		001079c0: CONDITIONAL_JUMP
		00107a18: FALL_THROUGH
 	00107a38 sourceline 0x255
 	00107a40 mov mar,0x3cef20
 	00107a4c mov ax,mar
 	00107a58 push op
 	00107a60 mov op,ax
 	00107a68 setfuncargs 0x0
 	00107a70 mov ax,0x3d6f20
 	00107a7c farcall ax
 	00107a84 pop op
 	00107a8c push ax
 	00107a94 mov ax,0x4
 	00107aa0 pop bx
 	00107aa8 cmpneq bx,ax
 	00107ab4 mov ax,bx
 	00107ac0 jz 0x00107b70
		00107b70: CONDITIONAL_JUMP
		00107ac8: FALL_THROUGH

	[00107ac8]
		00107a38: FALL_THROUGH
 	00107ac8 push ax
 	00107ad0 mov mar,0x3cef20
 	00107adc mov ax,mar
 	00107ae8 push op
 	00107af0 mov op,ax
 	00107af8 setfuncargs 0x0
 	00107b00 mov ax,0x3d6f20
 	00107b0c farcall ax
 	00107b14 pop op
 	00107b1c push ax
 	00107b24 mov ax,0x1
 	00107b30 pop bx
 	00107b38 cmpneq bx,ax
 	00107b44 mov ax,bx
 	00107b50 pop bx
 	00107b58 land bx,ax
 	00107b64 mov ax,bx
		00107b70: FALL_THROUGH

	[00107b70]
		00107a38: CONDITIONAL_JUMP
		00107ac8: FALL_THROUGH
 	00107b70 jz 0x00107bb0
		00107bb0: CONDITIONAL_JUMP
		00107b78: FALL_THROUGH

	[00107b78]
		00107b70: FALL_THROUGH
 	00107b78 sourceline 0x257
 	00107b80 mov ax,0x100334
 	00107b8c call ax
 	00107b94 sourceline 0x258
 	00107b9c mov ax,0x100dc0
 	00107ba8 call ax
		00107bb0: FALL_THROUGH

	[00107bb0]
		00107b70: CONDITIONAL_JUMP
		00107b78: FALL_THROUGH
 	00107bb0 sourceline 0x25b
 	00107bb8 mov ax,0x102794
 	00107bc4 call ax
 	00107bcc sourceline 0x25c
 	00107bd4 mov ax,0x1051c0
 	00107be0 call ax
 	00107be8 sourceline 0x25d
 	00107bf0 mov ax,0x0
 	00107bfc ret

PlaceBrightButtonForLoad$0:
	[00107c00]
 	00107c00 sourceline 0x261
 	00107c08 thisaddr
 	00107c10 sourceline 0x26e
*	00107c18 mov mar,0x5a6f20
 	00107c24 mov ax,mar
 	00107c30 push op
 	00107c38 mov op,ax
 	00107c40 setfuncargs 0x0
 	00107c48 mov ax,0x5aef20
 	00107c54 farcall ax
 	00107c5c pop op
 	00107c64 push ax
 	00107c6c mov ax,0x0
 	00107c78 pop bx
 	00107c80 cmpge bx,ax
 	00107c8c mov ax,bx
 	00107c98 jz 0x00107d88
		00107d88: CONDITIONAL_JUMP
		00107ca0: FALL_THROUGH

	[00107ca0]
		00107c00: FALL_THROUGH
 	00107ca0 push ax
 	00107ca8 mov mar,0x5a6f20
 	00107cb4 mov ax,mar
 	00107cc0 push op
 	00107cc8 mov op,ax
 	00107cd0 setfuncargs 0x0
 	00107cd8 mov ax,0x5aef20
 	00107ce4 farcall ax
 	00107cec pop op
 	00107cf4 push ax
 	00107cfc mov mar,0x5a6f20
 	00107d08 mov ax,mar
 	00107d14 push op
 	00107d1c mov op,ax
 	00107d24 setfuncargs 0x0
 	00107d2c mov ax,0x5b6f20
 	00107d38 farcall ax
 	00107d40 pop op
 	00107d48 pop bx
 	00107d50 cmpge bx,ax
 	00107d5c mov ax,bx
 	00107d68 pop bx
 	00107d70 land bx,ax
 	00107d7c mov ax,bx
		00107d88: FALL_THROUGH

	[00107d88]
		00107c00: CONDITIONAL_JUMP
		00107ca0: FALL_THROUGH
 	00107d88 jz 0x00107eec
		00107eec: CONDITIONAL_JUMP
		00107d90: FALL_THROUGH

	[00107d90]
		00107d88: FALL_THROUGH
 	00107d90 push ax
 	00107d98 mov mar,0x5a6f20
 	00107da4 mov ax,mar
 	00107db0 push op
 	00107db8 mov op,ax
 	00107dc0 setfuncargs 0x0
 	00107dc8 mov ax,0x5aef20
 	00107dd4 farcall ax
 	00107ddc pop op
 	00107de4 push ax
 	00107dec mov mar,0x5a6f20
 	00107df8 mov ax,mar
 	00107e04 push op
 	00107e0c mov op,ax
 	00107e14 setfuncargs 0x0
 	00107e1c mov ax,0x5b6f20
 	00107e28 farcall ax
 	00107e30 pop op
 	00107e38 push ax
 	00107e40 mov mar,0x5a6f20
 	00107e4c mov ax,mar
 	00107e58 push op
 	00107e60 mov op,ax
 	00107e68 setfuncargs 0x0
 	00107e70 mov ax,0x5bef20
 	00107e7c farcall ax
 	00107e84 pop op
 	00107e8c pop bx
 	00107e94 add bx,ax
 	00107ea0 mov ax,bx
 	00107eac pop bx
 	00107eb4 cmplt bx,ax
 	00107ec0 mov ax,bx
 	00107ecc pop bx
 	00107ed4 land bx,ax
 	00107ee0 mov ax,bx
		00107eec: FALL_THROUGH

	[00107eec]
		00107d88: CONDITIONAL_JUMP
		00107d90: FALL_THROUGH
 	00107eec jz 0x00108164
		00108164: CONDITIONAL_JUMP
		00107ef4: FALL_THROUGH

	[00107ef4]
		00107eec: FALL_THROUGH
 	00107ef4 sourceline 0x270
 	00107efc mov ax,0x1
 	00107f08 mov bx,ax
 	00107f14 mov mar,0x5c6f20
 	00107f20 mov ax,mar
 	00107f2c push op
 	00107f34 mov op,ax
 	00107f3c farpush bx
 	00107f44 setfuncargs 0x1
 	00107f4c mov ax,0x5cef20
 	00107f58 farcall ax
 	00107f60 farsubsp 0x1
 	00107f68 pop op
 	00107f70 sourceline 0x271
 	00107f78 mov ax,0x32
 	00107f84 push ax
 	00107f8c mov mar,0x5a6f20
 	00107f98 mov ax,mar
 	00107fa4 push op
 	00107fac mov op,ax
 	00107fb4 setfuncargs 0x0
 	00107fbc mov ax,0x5aef20
 	00107fc8 farcall ax
 	00107fd0 pop op
 	00107fd8 push ax
 	00107fe0 mov mar,0x5a6f20
 	00107fec mov ax,mar
 	00107ff8 push op
 	00108000 mov op,ax
 	00108008 setfuncargs 0x0
 	00108010 mov ax,0x5b6f20
 	0010801c farcall ax
 	00108024 pop op
 	0010802c pop bx
 	00108034 sub bx,ax
 	00108040 mov ax,bx
 	0010804c push ax
 	00108054 mov ax,0x9
 	00108060 pop bx
 	00108068 mul bx,ax
 	00108074 mov ax,bx
 	00108080 pop bx
 	00108088 add bx,ax
 	00108094 mov ax,bx
 	001080a0 mov mar,sp
 	001080ac memwrite4 ax
 	001080b4 add sp,0x4
 	001080c0 sourceline 0x272
 	001080c8 push op
 	001080d0 stackptr 0x8
 	001080d8 memread4 ax
 	001080e0 farpush ax
 	001080e8 mov ax,0x14
 	001080f4 farpush ax
 	001080fc mov mar,0x5c6f20
 	00108108 mov ax,mar
 	00108114 mov op,ax
 	0010811c setfuncargs 0x2
 	00108124 mov ax,0x5d6f20
 	00108130 farcall ax
 	00108138 farsubsp 0x2
 	00108140 pop op
 	00108148 sourceline 0x273
 	00108150 sub sp,0x4
 	0010815c jmp 0x001081e0
		001081e0: UNCONDITIONAL_JUMP

	[00108164]
		00107eec: CONDITIONAL_JUMP
 	00108164 sourceline 0x276
 	0010816c mov ax,0x0
 	00108178 mov bx,ax
 	00108184 mov mar,0x5c6f20
 	00108190 mov ax,mar
 	0010819c push op
 	001081a4 mov op,ax
 	001081ac farpush bx
 	001081b4 setfuncargs 0x1
 	001081bc mov ax,0x5cef20
 	001081c8 farcall ax
 	001081d0 farsubsp 0x1
 	001081d8 pop op
		001081e0: FALL_THROUGH

	[001081e0]
		00107ef4: UNCONDITIONAL_JUMP
		00108164: FALL_THROUGH
 	001081e0 sourceline 0x278
 	001081e8 mov ax,0x0
 	001081f4 ret

PlaceBrightButtonForSave$0:
	[001081f8]
 	001081f8 sourceline 0x27c
 	00108200 thisaddr
 	00108208 sourceline 0x27d
*	00108210 mov mar,0x5def20
 	0010821c mov ax,mar
 	00108228 push op
 	00108230 mov op,ax
 	00108238 setfuncargs 0x0
 	00108240 mov ax,0x5aef20
 	0010824c farcall ax
 	00108254 pop op
 	0010825c push ax
 	00108264 mov ax,0x0
 	00108270 pop bx
 	00108278 cmpge bx,ax
 	00108284 mov ax,bx
 	00108290 jz 0x00108380
		00108380: CONDITIONAL_JUMP
		00108298: FALL_THROUGH

	[00108298]
		001081f8: FALL_THROUGH
 	00108298 push ax
 	001082a0 mov mar,0x5def20
 	001082ac mov ax,mar
 	001082b8 push op
 	001082c0 mov op,ax
 	001082c8 setfuncargs 0x0
 	001082d0 mov ax,0x5aef20
 	001082dc farcall ax
 	001082e4 pop op
 	001082ec push ax
 	001082f4 mov mar,0x5def20
 	00108300 mov ax,mar
 	0010830c push op
 	00108314 mov op,ax
 	0010831c setfuncargs 0x0
 	00108324 mov ax,0x5b6f20
 	00108330 farcall ax
 	00108338 pop op
 	00108340 pop bx
 	00108348 cmpge bx,ax
 	00108354 mov ax,bx
 	00108360 pop bx
 	00108368 land bx,ax
 	00108374 mov ax,bx
		00108380: FALL_THROUGH

	[00108380]
		001081f8: CONDITIONAL_JUMP
		00108298: FALL_THROUGH
 	00108380 jz 0x001084e4
		001084e4: CONDITIONAL_JUMP
		00108388: FALL_THROUGH

	[00108388]
		00108380: FALL_THROUGH
 	00108388 push ax
 	00108390 mov mar,0x5def20
 	0010839c mov ax,mar
 	001083a8 push op
 	001083b0 mov op,ax
 	001083b8 setfuncargs 0x0
 	001083c0 mov ax,0x5aef20
 	001083cc farcall ax
 	001083d4 pop op
 	001083dc push ax
 	001083e4 mov mar,0x5def20
 	001083f0 mov ax,mar
 	001083fc push op
 	00108404 mov op,ax
 	0010840c setfuncargs 0x0
 	00108414 mov ax,0x5b6f20
 	00108420 farcall ax
 	00108428 pop op
 	00108430 push ax
 	00108438 mov mar,0x5def20
 	00108444 mov ax,mar
 	00108450 push op
 	00108458 mov op,ax
 	00108460 setfuncargs 0x0
 	00108468 mov ax,0x5bef20
 	00108474 farcall ax
 	0010847c pop op
 	00108484 pop bx
 	0010848c add bx,ax
 	00108498 mov ax,bx
 	001084a4 pop bx
 	001084ac cmplt bx,ax
 	001084b8 mov ax,bx
 	001084c4 pop bx
 	001084cc land bx,ax
 	001084d8 mov ax,bx
		001084e4: FALL_THROUGH

	[001084e4]
		00108380: CONDITIONAL_JUMP
		00108388: FALL_THROUGH
 	001084e4 jz 0x0010875c
		0010875c: CONDITIONAL_JUMP
		001084ec: FALL_THROUGH

	[001084ec]
		001084e4: FALL_THROUGH
 	001084ec sourceline 0x27f
 	001084f4 mov ax,0x1
 	00108500 mov bx,ax
 	0010850c mov mar,0x5e6f20
 	00108518 mov ax,mar
 	00108524 push op
 	0010852c mov op,ax
 	00108534 farpush bx
 	0010853c setfuncargs 0x1
 	00108544 mov ax,0x5cef20
 	00108550 farcall ax
 	00108558 farsubsp 0x1
 	00108560 pop op
 	00108568 sourceline 0x280
 	00108570 mov ax,0x3b
 	0010857c push ax
 	00108584 mov mar,0x5def20
 	00108590 mov ax,mar
 	0010859c push op
 	001085a4 mov op,ax
 	001085ac setfuncargs 0x0
 	001085b4 mov ax,0x5aef20
 	001085c0 farcall ax
 	001085c8 pop op
 	001085d0 push ax
 	001085d8 mov mar,0x5def20
 	001085e4 mov ax,mar
 	001085f0 push op
 	001085f8 mov op,ax
 	00108600 setfuncargs 0x0
 	00108608 mov ax,0x5b6f20
 	00108614 farcall ax
 	0010861c pop op
 	00108624 pop bx
 	0010862c sub bx,ax
 	00108638 mov ax,bx
 	00108644 push ax
 	0010864c mov ax,0x9
 	00108658 pop bx
 	00108660 mul bx,ax
 	0010866c mov ax,bx
 	00108678 pop bx
 	00108680 add bx,ax
 	0010868c mov ax,bx
 	00108698 mov mar,sp
 	001086a4 memwrite4 ax
 	001086ac add sp,0x4
 	001086b8 sourceline 0x281
 	001086c0 push op
 	001086c8 stackptr 0x8
 	001086d0 memread4 ax
 	001086d8 farpush ax
 	001086e0 mov ax,0x14
 	001086ec farpush ax
 	001086f4 mov mar,0x5e6f20
 	00108700 mov ax,mar
 	0010870c mov op,ax
 	00108714 setfuncargs 0x2
 	0010871c mov ax,0x5d6f20
 	00108728 farcall ax
 	00108730 farsubsp 0x2
 	00108738 pop op
 	00108740 sourceline 0x282
 	00108748 sub sp,0x4
 	00108754 jmp 0x001087d8
		001087d8: UNCONDITIONAL_JUMP

	[0010875c]
		001084e4: CONDITIONAL_JUMP
 	0010875c sourceline 0x285
 	00108764 mov ax,0x0
 	00108770 mov bx,ax
 	0010877c mov mar,0x5e6f20
 	00108788 mov ax,mar
 	00108794 push op
 	0010879c mov op,ax
 	001087a4 farpush bx
 	001087ac setfuncargs 0x1
 	001087b4 mov ax,0x5cef20
 	001087c0 farcall ax
 	001087c8 farsubsp 0x1
 	001087d0 pop op
		001087d8: FALL_THROUGH

	[001087d8]
		001084ec: UNCONDITIONAL_JUMP
		0010875c: FALL_THROUGH
 	001087d8 sourceline 0x287
 	001087e0 mov ax,0x0
 	001087ec ret

repeatedly_execute_always$0:
	[001087f0]
 	001087f0 sourceline 0x28e
 	001087f8 thisaddr
 	00108800 sourceline 0x28f
*	00108808 mov mar,0x31ef20
 	00108814 mov ax,mar
 	00108820 push op
 	00108828 mov op,ax
 	00108830 setfuncargs 0x0
 	00108838 mov ax,0x316f20
 	00108844 farcall ax
 	0010884c pop op
 	00108854 jz 0x001088c0
		001088c0: CONDITIONAL_JUMP
		0010885c: FALL_THROUGH

	[0010885c]
		001087f0: FALL_THROUGH
 	0010885c sourceline 0x291
 	00108864 mov ax,0xf1
 	00108870 farpush ax
 	00108878 mov ax,0x7
 	00108884 farpush ax
 	0010888c setfuncargs 0x2
 	00108894 mov ax,0x376f20
 	001088a0 farcall ax
 	001088a8 farsubsp 0x2
 	001088b0 sourceline 0x292
 	001088b8 jmp 0x00108aec
		00108aec: UNCONDITIONAL_JUMP

	[001088c0]
		001087f0: CONDITIONAL_JUMP
 	001088c0 sourceline 0x295
 	001088c8 mov mar,0x3cef20
 	001088d4 mov ax,mar
 	001088e0 push op
 	001088e8 mov op,ax
 	001088f0 setfuncargs 0x0
 	001088f8 mov ax,0x3d6f20
 	00108904 farcall ax
 	0010890c pop op
 	00108914 push ax
 	0010891c mov ax,0x4
 	00108928 pop bx
 	00108930 cmpneq bx,ax
 	0010893c mov ax,bx
 	00108948 jz 0x00108a10
		00108a10: CONDITIONAL_JUMP
		00108950: FALL_THROUGH

	[00108950]
		001088c0: FALL_THROUGH
 	00108950 sourceline 0x297
 	00108958 mov mar,0x326f20
 	00108964 mov ax,mar
 	00108970 push op
 	00108978 mov op,ax
 	00108980 setfuncargs 0x0
 	00108988 mov ax,0x316f20
 	00108994 farcall ax
 	0010899c pop op
 	001089a4 lnot ax
 	001089ac jz 0x00108a00
		00108a00: CONDITIONAL_JUMP
		001089b4: FALL_THROUGH

	[001089b4]
		00108950: FALL_THROUGH
 	001089b4 mov ax,0x0
 	001089c0 farpush ax
 	001089c8 mov ax,0x7
 	001089d4 farpush ax
 	001089dc setfuncargs 0x2
 	001089e4 mov ax,0x376f20
 	001089f0 farcall ax
 	001089f8 farsubsp 0x2
		00108a00: FALL_THROUGH

	[00108a00]
		00108950: CONDITIONAL_JUMP
		001089b4: FALL_THROUGH
 	00108a00 sourceline 0x299
 	00108a08 jmp 0x00108aec
		00108aec: UNCONDITIONAL_JUMP

	[00108a10]
		001088c0: CONDITIONAL_JUMP
 	00108a10 sourceline 0x29c
 	00108a18 mov mar,0x3cef20
 	00108a24 mov ax,mar
 	00108a30 push op
 	00108a38 mov op,ax
 	00108a40 setfuncargs 0x0
 	00108a48 mov ax,0x3d6f20
 	00108a54 farcall ax
 	00108a5c pop op
 	00108a64 push ax
 	00108a6c mov ax,0x23
 	00108a78 pop bx
 	00108a80 cmpneq bx,ax
 	00108a8c mov ax,bx
 	00108a98 jz 0x00108aec
		00108aec: CONDITIONAL_JUMP
		00108aa0: FALL_THROUGH

	[00108aa0]
		00108a10: FALL_THROUGH
 	00108aa0 mov ax,0x58b
 	00108aac farpush ax
 	00108ab4 mov ax,0x7
 	00108ac0 farpush ax
 	00108ac8 setfuncargs 0x2
 	00108ad0 mov ax,0x376f20
 	00108adc farcall ax
 	00108ae4 farsubsp 0x2
		00108aec: FALL_THROUGH

	[00108aec]
		0010885c: UNCONDITIONAL_JUMP
		00108a00: UNCONDITIONAL_JUMP
		00108a10: CONDITIONAL_JUMP
		00108aa0: FALL_THROUGH
 	00108aec sourceline 0x2a1
 	00108af4 mov mar,0x5eef20
 	00108b00 memread4 ax
 	00108b08 jz 0x00108b9c
		00108b9c: CONDITIONAL_JUMP
		00108b10: FALL_THROUGH

	[00108b10]
		00108aec: FALL_THROUGH
 	00108b10 sourceline 0x2a3
 	00108b18 mov ax,0x0
 	00108b24 farpush ax
 	00108b2c mov ax,0x0
 	00108b38 farpush ax
 	00108b40 mov ax,0x0
 	00108b4c farpush ax
 	00108b54 mov ax,0x0
 	00108b60 farpush ax
 	00108b68 setfuncargs 0x4
 	00108b70 mov ax,0x5f6f20
 	00108b7c farcall ax
 	00108b84 farsubsp 0x4
 	00108b8c sourceline 0x2a4
 	00108b94 jmp 0x001097bc
		001097bc: UNCONDITIONAL_JUMP

	[00108b9c]
		00108aec: CONDITIONAL_JUMP
 	00108b9c sourceline 0x2a7
 	00108ba4 mov mar,0x32ef20
 	00108bb0 memread4 ax
 	00108bb8 lnot ax
 	00108bc0 jz 0x00109740
		00109740: CONDITIONAL_JUMP
		00108bc8: FALL_THROUGH

	[00108bc8]
		00108b9c: FALL_THROUGH
 	00108bc8 sourceline 0x2a9
 	00108bd0 mov mar,0x326f20
 	00108bdc mov ax,mar
 	00108be8 push op
 	00108bf0 mov op,ax
 	00108bf8 setfuncargs 0x0
 	00108c00 mov ax,0x316f20
 	00108c0c farcall ax
 	00108c14 pop op
 	00108c1c lnot ax
 	00108c24 jz 0x00108ca8
		00108ca8: CONDITIONAL_JUMP
		00108c2c: FALL_THROUGH

	[00108c2c]
		00108bc8: FALL_THROUGH
 	00108c2c push ax
 	00108c34 mov mar,0x31ef20
 	00108c40 mov ax,mar
 	00108c4c push op
 	00108c54 mov op,ax
 	00108c5c setfuncargs 0x0
 	00108c64 mov ax,0x316f20
 	00108c70 farcall ax
 	00108c78 pop op
 	00108c80 lnot ax
 	00108c88 pop bx
 	00108c90 land bx,ax
 	00108c9c mov ax,bx
		00108ca8: FALL_THROUGH

	[00108ca8]
		00108bc8: CONDITIONAL_JUMP
		00108c2c: FALL_THROUGH
 	00108ca8 jz 0x00108d58
		00108d58: CONDITIONAL_JUMP
		00108cb0: FALL_THROUGH

	[00108cb0]
		00108ca8: FALL_THROUGH
 	00108cb0 push ax
 	00108cb8 mov mar,0x3cef20
 	00108cc4 mov ax,mar
 	00108cd0 push op
 	00108cd8 mov op,ax
 	00108ce0 setfuncargs 0x0
 	00108ce8 mov ax,0x3d6f20
 	00108cf4 farcall ax
 	00108cfc pop op
 	00108d04 push ax
 	00108d0c mov ax,0x4
 	00108d18 pop bx
 	00108d20 cmpneq bx,ax
 	00108d2c mov ax,bx
 	00108d38 pop bx
 	00108d40 land bx,ax
 	00108d4c mov ax,bx
		00108d58: FALL_THROUGH

	[00108d58]
		00108ca8: CONDITIONAL_JUMP
		00108cb0: FALL_THROUGH
 	00108d58 jz 0x001096b4
		001096b4: CONDITIONAL_JUMP
		00108d60: FALL_THROUGH

	[00108d60]
		00108d58: FALL_THROUGH
 	00108d60 sourceline 0x2ab
 	00108d68 mov mar,0x3cef20
 	00108d74 mov ax,mar
 	00108d80 push op
 	00108d88 mov op,ax
 	00108d90 setfuncargs 0x0
 	00108d98 mov ax,0x3d6f20
 	00108da4 farcall ax
 	00108dac pop op
 	00108db4 push ax
 	00108dbc mov ax,0x26
 	00108dc8 pop bx
 	00108dd0 cmpeq bx,ax
 	00108ddc mov ax,bx
 	00108de8 jz 0x00108fd0
		00108fd0: CONDITIONAL_JUMP
		00108df0: FALL_THROUGH

	[00108df0]
		00108d60: FALL_THROUGH
 	00108df0 sourceline 0x2ad
 	00108df8 mov mar,0x5fef20
 	00108e04 mov ax,mar
 	00108e10 push op
 	00108e18 mov op,ax
 	00108e20 setfuncargs 0x0
 	00108e28 mov ax,0x606f20
 	00108e34 farcall ax
 	00108e3c pop op
 	00108e44 jz 0x00108ec0
		00108ec0: CONDITIONAL_JUMP
		00108e4c: FALL_THROUGH

	[00108e4c]
		00108df0: FALL_THROUGH
 	00108e4c push ax
 	00108e54 mov mar,0x60ef20
 	00108e60 mov ax,mar
 	00108e6c push op
 	00108e74 mov op,ax
 	00108e7c setfuncargs 0x0
 	00108e84 mov ax,0x606f20
 	00108e90 farcall ax
 	00108e98 pop op
 	00108ea0 pop bx
 	00108ea8 land bx,ax
 	00108eb4 mov ax,bx
		00108ec0: FALL_THROUGH

	[00108ec0]
		00108df0: CONDITIONAL_JUMP
		00108e4c: FALL_THROUGH
 	00108ec0 jz 0x00108f44
		00108f44: CONDITIONAL_JUMP
		00108ec8: FALL_THROUGH

	[00108ec8]
		00108ec0: FALL_THROUGH
 	00108ec8 mov ax,0x8d
 	00108ed4 farpush ax
 	00108edc mov ax,0x140
 	00108ee8 farpush ax
 	00108ef0 mov ax,0x16
 	00108efc farpush ax
 	00108f04 mov ax,0x0
 	00108f10 farpush ax
 	00108f18 setfuncargs 0x4
 	00108f20 mov ax,0x5f6f20
 	00108f2c farcall ax
 	00108f34 farsubsp 0x4
 	00108f3c jmp 0x00108fc0
		00108fc0: UNCONDITIONAL_JUMP

	[00108f44]
		00108ec0: CONDITIONAL_JUMP
 	00108f44 sourceline 0x2ae
 	00108f4c mov ax,0x8d
 	00108f58 farpush ax
 	00108f60 mov ax,0x140
 	00108f6c farpush ax
 	00108f74 mov ax,0x0
 	00108f80 farpush ax
 	00108f88 mov ax,0x0
 	00108f94 farpush ax
 	00108f9c setfuncargs 0x4
 	00108fa4 mov ax,0x5f6f20
 	00108fb0 farcall ax
 	00108fb8 farsubsp 0x4
		00108fc0: FALL_THROUGH

	[00108fc0]
		00108ec8: UNCONDITIONAL_JUMP
		00108f44: FALL_THROUGH
 	00108fc0 sourceline 0x2af
 	00108fc8 jmp 0x001096a4
		001096a4: UNCONDITIONAL_JUMP

	[00108fd0]
		00108d60: CONDITIONAL_JUMP
 	00108fd0 sourceline 0x2b0
 	00108fd8 mov mar,0x3cef20
 	00108fe4 mov ax,mar
 	00108ff0 push op
 	00108ff8 mov op,ax
 	00109000 setfuncargs 0x0
 	00109008 mov ax,0x3d6f20
 	00109014 farcall ax
 	0010901c pop op
 	00109024 push ax
 	0010902c mov ax,0x1d
 	00109038 pop bx
 	00109040 cmpeq bx,ax
 	0010904c mov ax,bx
 	00109058 jz 0x00109240
		00109240: CONDITIONAL_JUMP
		00109060: FALL_THROUGH

	[00109060]
		00108fd0: FALL_THROUGH
 	00109060 sourceline 0x2b2
 	00109068 mov mar,0x616f20
 	00109074 mov ax,mar
 	00109080 push op
 	00109088 mov op,ax
 	00109090 setfuncargs 0x0
 	00109098 mov ax,0x606f20
 	001090a4 farcall ax
 	001090ac pop op
 	001090b4 jz 0x00109130
		00109130: CONDITIONAL_JUMP
		001090bc: FALL_THROUGH

	[001090bc]
		00109060: FALL_THROUGH
 	001090bc push ax
 	001090c4 mov mar,0x61ef20
 	001090d0 mov ax,mar
 	001090dc push op
 	001090e4 mov op,ax
 	001090ec setfuncargs 0x0
 	001090f4 mov ax,0x606f20
 	00109100 farcall ax
 	00109108 pop op
 	00109110 pop bx
 	00109118 land bx,ax
 	00109124 mov ax,bx
		00109130: FALL_THROUGH

	[00109130]
		00109060: CONDITIONAL_JUMP
		001090bc: FALL_THROUGH
 	00109130 jz 0x001091b4
		001091b4: CONDITIONAL_JUMP
		00109138: FALL_THROUGH

	[00109138]
		00109130: FALL_THROUGH
 	00109138 mov ax,0x8d
 	00109144 farpush ax
 	0010914c mov ax,0x140
 	00109158 farpush ax
 	00109160 mov ax,0x16
 	0010916c farpush ax
 	00109174 mov ax,0x0
 	00109180 farpush ax
 	00109188 setfuncargs 0x4
 	00109190 mov ax,0x5f6f20
 	0010919c farcall ax
 	001091a4 farsubsp 0x4
 	001091ac jmp 0x00109230
		00109230: UNCONDITIONAL_JUMP

	[001091b4]
		00109130: CONDITIONAL_JUMP
 	001091b4 sourceline 0x2b3
 	001091bc mov ax,0x8d
 	001091c8 farpush ax
 	001091d0 mov ax,0x140
 	001091dc farpush ax
 	001091e4 mov ax,0x0
 	001091f0 farpush ax
 	001091f8 mov ax,0x0
 	00109204 farpush ax
 	0010920c setfuncargs 0x4
 	00109214 mov ax,0x5f6f20
 	00109220 farcall ax
 	00109228 farsubsp 0x4
		00109230: FALL_THROUGH

	[00109230]
		00109138: UNCONDITIONAL_JUMP
		001091b4: FALL_THROUGH
 	00109230 sourceline 0x2b4
 	00109238 jmp 0x001096a4
		001096a4: UNCONDITIONAL_JUMP

	[00109240]
		00108fd0: CONDITIONAL_JUMP
 	00109240 sourceline 0x2b5
 	00109248 mov mar,0x3cef20
 	00109254 mov ax,mar
 	00109260 push op
 	00109268 mov op,ax
 	00109270 setfuncargs 0x0
 	00109278 mov ax,0x3d6f20
 	00109284 farcall ax
 	0010928c pop op
 	00109294 push ax
 	0010929c mov ax,0x23
 	001092a8 pop bx
 	001092b0 cmpeq bx,ax
 	001092bc mov ax,bx
 	001092c8 jz 0x0010951c
		0010951c: CONDITIONAL_JUMP
		001092d0: FALL_THROUGH

	[001092d0]
		00109240: FALL_THROUGH
 	001092d0 sourceline 0x2b7
 	001092d8 mov mar,0x626f20
 	001092e4 mov ax,mar
 	001092f0 push op
 	001092f8 mov op,ax
 	00109300 setfuncargs 0x0
 	00109308 mov ax,0x606f20
 	00109314 farcall ax
 	0010931c pop op
 	00109324 jz 0x0010941c
		0010941c: CONDITIONAL_JUMP
		0010932c: FALL_THROUGH

	[0010932c]
		001092d0: FALL_THROUGH
 	0010932c mov ax,0x0
 	00109338 mov bx,ax
 	00109344 mov mar,0x33ef20
 	00109350 mov ax,mar
 	0010935c push op
 	00109364 mov op,ax
 	0010936c farpush bx
 	00109374 setfuncargs 0x1
 	0010937c mov ax,0x5cef20
 	00109388 farcall ax
 	00109390 farsubsp 0x1
 	00109398 pop op
 	001093a0 mov ax,0x8d
 	001093ac farpush ax
 	001093b4 mov ax,0x140
 	001093c0 farpush ax
 	001093c8 mov ax,0x17
 	001093d4 farpush ax
 	001093dc mov ax,0x0
 	001093e8 farpush ax
 	001093f0 setfuncargs 0x4
 	001093f8 mov ax,0x5f6f20
 	00109404 farcall ax
 	0010940c farsubsp 0x4
 	00109414 jmp 0x0010950c
		0010950c: UNCONDITIONAL_JUMP

	[0010941c]
		001092d0: CONDITIONAL_JUMP
 	0010941c sourceline 0x2b8
 	00109424 mov ax,0x1
 	00109430 mov bx,ax
 	0010943c mov mar,0x33ef20
 	00109448 mov ax,mar
 	00109454 push op
 	0010945c mov op,ax
 	00109464 farpush bx
 	0010946c setfuncargs 0x1
 	00109474 mov ax,0x5cef20
 	00109480 farcall ax
 	00109488 farsubsp 0x1
 	00109490 pop op
 	00109498 mov ax,0x8d
 	001094a4 farpush ax
 	001094ac mov ax,0x140
 	001094b8 farpush ax
 	001094c0 mov ax,0x0
 	001094cc farpush ax
 	001094d4 mov ax,0x0
 	001094e0 farpush ax
 	001094e8 setfuncargs 0x4
 	001094f0 mov ax,0x5f6f20
 	001094fc farcall ax
 	00109504 farsubsp 0x4
		0010950c: FALL_THROUGH

	[0010950c]
		0010932c: UNCONDITIONAL_JUMP
		0010941c: FALL_THROUGH
 	0010950c sourceline 0x2b9
 	00109514 jmp 0x001096a4
		001096a4: UNCONDITIONAL_JUMP

	[0010951c]
		00109240: CONDITIONAL_JUMP
 	0010951c sourceline 0x2bb
 	00109524 mov mar,0x3cef20
 	00109530 mov ax,mar
 	0010953c push op
 	00109544 mov op,ax
 	0010954c setfuncargs 0x0
 	00109554 mov ax,0x3d6f20
 	00109560 farcall ax
 	00109568 pop op
 	00109570 push ax
 	00109578 mov ax,0x1
 	00109584 pop bx
 	0010958c cmpeq bx,ax
 	00109598 mov ax,bx
 	001095a4 jz 0x00109628
		00109628: CONDITIONAL_JUMP
		001095ac: FALL_THROUGH

	[001095ac]
		0010951c: FALL_THROUGH
 	001095ac mov ax,0x8d
 	001095b8 farpush ax
 	001095c0 mov ax,0x140
 	001095cc farpush ax
 	001095d4 mov ax,0x16
 	001095e0 farpush ax
 	001095e8 mov ax,0x0
 	001095f4 farpush ax
 	001095fc setfuncargs 0x4
 	00109604 mov ax,0x5f6f20
 	00109610 farcall ax
 	00109618 farsubsp 0x4
 	00109620 jmp 0x001096a4
		001096a4: UNCONDITIONAL_JUMP

	[00109628]
		0010951c: CONDITIONAL_JUMP
 	00109628 sourceline 0x2bd
 	00109630 mov ax,0x8d
 	0010963c farpush ax
 	00109644 mov ax,0x140
 	00109650 farpush ax
 	00109658 mov ax,0x0
 	00109664 farpush ax
 	0010966c mov ax,0x0
 	00109678 farpush ax
 	00109680 setfuncargs 0x4
 	00109688 mov ax,0x5f6f20
 	00109694 farcall ax
 	0010969c farsubsp 0x4
		001096a4: FALL_THROUGH

	[001096a4]
		00108fc0: UNCONDITIONAL_JUMP
		00109230: UNCONDITIONAL_JUMP
		0010950c: UNCONDITIONAL_JUMP
		001095ac: UNCONDITIONAL_JUMP
		00109628: FALL_THROUGH
 	001096a4 sourceline 0x2be
 	001096ac jmp 0x00109730
		00109730: UNCONDITIONAL_JUMP

	[001096b4]
		00108d58: CONDITIONAL_JUMP
 	001096b4 sourceline 0x2c1
 	001096bc mov ax,0x8d
 	001096c8 farpush ax
 	001096d0 mov ax,0x140
 	001096dc farpush ax
 	001096e4 mov ax,0x16
 	001096f0 farpush ax
 	001096f8 mov ax,0x0
 	00109704 farpush ax
 	0010970c setfuncargs 0x4
 	00109714 mov ax,0x5f6f20
 	00109720 farcall ax
 	00109728 farsubsp 0x4
		00109730: FALL_THROUGH

	[00109730]
		001096a4: UNCONDITIONAL_JUMP
		001096b4: FALL_THROUGH
 	00109730 sourceline 0x2c3
 	00109738 jmp 0x001097bc
		001097bc: UNCONDITIONAL_JUMP

	[00109740]
		00108b9c: CONDITIONAL_JUMP
 	00109740 sourceline 0x2c6
 	00109748 mov ax,0x8d
 	00109754 farpush ax
 	0010975c mov ax,0x140
 	00109768 farpush ax
 	00109770 mov ax,0x16
 	0010977c farpush ax
 	00109784 mov ax,0x0
 	00109790 farpush ax
 	00109798 setfuncargs 0x4
 	001097a0 mov ax,0x5f6f20
 	001097ac farcall ax
 	001097b4 farsubsp 0x4
		001097bc: FALL_THROUGH

	[001097bc]
		00108b10: UNCONDITIONAL_JUMP
		00109730: UNCONDITIONAL_JUMP
		00109740: FALL_THROUGH
 	001097bc sourceline 0x2ca
 	001097c4 mov mar,0x3b6f20
 	001097d0 memread4 ax
 	001097d8 jz 0x00109850
		00109850: CONDITIONAL_JUMP
		001097e0: FALL_THROUGH

	[001097e0]
		001097bc: FALL_THROUGH
 	001097e0 push ax
 	001097e8 mov mar,0x3aef20
 	001097f4 memread4 ax
 	001097fc push ax
 	00109804 mov ax,0x0
 	00109810 pop bx
 	00109818 cmpneq bx,ax
 	00109824 mov ax,bx
 	00109830 pop bx
 	00109838 land bx,ax
 	00109844 mov ax,bx
		00109850: FALL_THROUGH

	[00109850]
		001097bc: CONDITIONAL_JUMP
		001097e0: FALL_THROUGH
 	00109850 jz 0x00109880
		00109880: CONDITIONAL_JUMP
		00109858: FALL_THROUGH

	[00109858]
		00109850: FALL_THROUGH
 	00109858 mov mar,0x3aef20
 	00109864 memread4 ax
 	0010986c sub ax,0x1
 	00109878 memwrite4 ax
		00109880: FALL_THROUGH

	[00109880]
		00109850: CONDITIONAL_JUMP
		00109858: FALL_THROUGH
 	00109880 sourceline 0x2cb
 	00109888 mov mar,0x62ef20
 	00109894 memread4 ax
 	0010989c jz 0x00109914
		00109914: CONDITIONAL_JUMP
		001098a4: FALL_THROUGH

	[001098a4]
		00109880: FALL_THROUGH
 	001098a4 push ax
 	001098ac mov mar,0x3c6f20
 	001098b8 memread4 ax
 	001098c0 push ax
 	001098c8 mov ax,0x0
 	001098d4 pop bx
 	001098dc cmpneq bx,ax
 	001098e8 mov ax,bx
 	001098f4 pop bx
 	001098fc land bx,ax
 	00109908 mov ax,bx
		00109914: FALL_THROUGH

	[00109914]
		00109880: CONDITIONAL_JUMP
		001098a4: FALL_THROUGH
 	00109914 jz 0x00109944
		00109944: CONDITIONAL_JUMP
		0010991c: FALL_THROUGH

	[0010991c]
		00109914: FALL_THROUGH
 	0010991c mov mar,0x3c6f20
 	00109928 memread4 ax
 	00109930 sub ax,0x1
 	0010993c memwrite4 ax
		00109944: FALL_THROUGH

	[00109944]
		00109914: CONDITIONAL_JUMP
		0010991c: FALL_THROUGH
 	00109944 sourceline 0x2cf
 	0010994c mov mar,0x30ef20
 	00109958 mov ax,mar
 	00109964 push op
 	0010996c mov op,ax
 	00109974 setfuncargs 0x0
 	0010997c mov ax,0x316f20
 	00109988 farcall ax
 	00109990 pop op
 	00109998 jnz 0x001099f0
		001099f0: CONDITIONAL_JUMP
		001099a0: FALL_THROUGH

	[001099a0]
		00109944: FALL_THROUGH
 	001099a0 push ax
 	001099a8 mov ax,0x0
 	001099b4 setfuncargs 0x0
 	001099bc mov ax,0x636f20
 	001099c8 farcall ax
 	001099d0 pop bx
 	001099d8 lor bx,ax
 	001099e4 mov ax,bx
		001099f0: FALL_THROUGH

	[001099f0]
		00109944: CONDITIONAL_JUMP
		001099a0: FALL_THROUGH
 	001099f0 jnz 0x00109a6c
		00109a6c: CONDITIONAL_JUMP
		001099f8: FALL_THROUGH

	[001099f8]
		001099f0: FALL_THROUGH
 	001099f8 push ax
 	00109a00 mov mar,0x31ef20
 	00109a0c mov ax,mar
 	00109a18 push op
 	00109a20 mov op,ax
 	00109a28 setfuncargs 0x0
 	00109a30 mov ax,0x316f20
 	00109a3c farcall ax
 	00109a44 pop op
 	00109a4c pop bx
 	00109a54 lor bx,ax
 	00109a60 mov ax,bx
		00109a6c: FALL_THROUGH

	[00109a6c]
		001099f0: CONDITIONAL_JUMP
		001099f8: FALL_THROUGH
 	00109a6c jnz 0x00109ab0
		00109ab0: CONDITIONAL_JUMP
		00109a74: FALL_THROUGH

	[00109a74]
		00109a6c: FALL_THROUGH
 	00109a74 push ax
 	00109a7c mov mar,0x32ef20
 	00109a88 memread4 ax
 	00109a90 pop bx
 	00109a98 lor bx,ax
 	00109aa4 mov ax,bx
		00109ab0: FALL_THROUGH

	[00109ab0]
		00109a6c: CONDITIONAL_JUMP
		00109a74: FALL_THROUGH
 	00109ab0 jnz 0x00109af4
		00109af4: CONDITIONAL_JUMP
		00109ab8: FALL_THROUGH

	[00109ab8]
		00109ab0: FALL_THROUGH
 	00109ab8 push ax
 	00109ac0 mov mar,0x5eef20
 	00109acc memread4 ax
 	00109ad4 pop bx
 	00109adc lor bx,ax
 	00109ae8 mov ax,bx
		00109af4: FALL_THROUGH

	[00109af4]
		00109ab0: CONDITIONAL_JUMP
		00109ab8: FALL_THROUGH
 	00109af4 jnz 0x00109b70
		00109b70: CONDITIONAL_JUMP
		00109afc: FALL_THROUGH

	[00109afc]
		00109af4: FALL_THROUGH
 	00109afc push ax
 	00109b04 mov mar,0x326f20
 	00109b10 mov ax,mar
 	00109b1c push op
 	00109b24 mov op,ax
 	00109b2c setfuncargs 0x0
 	00109b34 mov ax,0x316f20
 	00109b40 farcall ax
 	00109b48 pop op
 	00109b50 pop bx
 	00109b58 lor bx,ax
 	00109b64 mov ax,bx
		00109b70: FALL_THROUGH

	[00109b70]
		00109af4: CONDITIONAL_JUMP
		00109afc: FALL_THROUGH
 	00109b70 jz 0x00109c70
		00109c70: CONDITIONAL_JUMP
		00109b78: FALL_THROUGH

	[00109b78]
		00109b70: FALL_THROUGH
 	00109b78 sourceline 0x2d3
 	00109b80 mov ax,0x80d
 	00109b8c mov bx,ax
 	00109b98 mov mar,0x33ef20
 	00109ba4 mov ax,mar
 	00109bb0 push op
 	00109bb8 mov op,ax
 	00109bc0 farpush bx
 	00109bc8 setfuncargs 0x1
 	00109bd0 mov ax,0x356f20
 	00109bdc farcall ax
 	00109be4 farsubsp 0x1
 	00109bec pop op
 	00109bf4 sourceline 0x2d4
 	00109bfc mov ax,0xe56
 	00109c08 mov bx,ax
 	00109c14 mov mar,0x35ef20
 	00109c20 mov ax,mar
 	00109c2c push op
 	00109c34 mov op,ax
 	00109c3c farpush bx
 	00109c44 setfuncargs 0x1
 	00109c4c mov ax,0x356f20
 	00109c58 farcall ax
 	00109c60 farsubsp 0x1
 	00109c68 pop op
		00109c70: FALL_THROUGH

	[00109c70]
		00109b70: CONDITIONAL_JUMP
		00109b78: FALL_THROUGH
 	00109c70 sourceline 0x2d8
 	00109c78 mov mar,0x63ef20
 	00109c84 mov ax,mar
 	00109c90 push op
 	00109c98 mov op,ax
 	00109ca0 setfuncargs 0x0
 	00109ca8 mov ax,0x646f20
 	00109cb4 farcall ax
 	00109cbc pop op
 	00109cc4 push ax
 	00109ccc mov ax,0xc
 	00109cd8 pop bx
 	00109ce0 cmpgt bx,ax
 	00109cec mov ax,bx
 	00109cf8 jz 0x00109d7c
		00109d7c: CONDITIONAL_JUMP
		00109d00: FALL_THROUGH

	[00109d00]
		00109c70: FALL_THROUGH
 	00109d00 mov ax,0x1
 	00109d0c mov bx,ax
 	00109d18 mov mar,0x64ef20
 	00109d24 mov ax,mar
 	00109d30 push op
 	00109d38 mov op,ax
 	00109d40 farpush bx
 	00109d48 setfuncargs 0x1
 	00109d50 mov ax,0x5cef20
 	00109d5c farcall ax
 	00109d64 farsubsp 0x1
 	00109d6c pop op
 	00109d74 jmp 0x00109df8
		00109df8: UNCONDITIONAL_JUMP

	[00109d7c]
		00109c70: CONDITIONAL_JUMP
 	00109d7c sourceline 0x2d9
 	00109d84 mov ax,0x0
 	00109d90 mov bx,ax
 	00109d9c mov mar,0x64ef20
 	00109da8 mov ax,mar
 	00109db4 push op
 	00109dbc mov op,ax
 	00109dc4 farpush bx
 	00109dcc setfuncargs 0x1
 	00109dd4 mov ax,0x5cef20
 	00109de0 farcall ax
 	00109de8 farsubsp 0x1
 	00109df0 pop op
		00109df8: FALL_THROUGH

	[00109df8]
		00109d00: UNCONDITIONAL_JUMP
		00109d7c: FALL_THROUGH
 	00109df8 sourceline 0x2da
 	00109e00 mov mar,0x5a6f20
 	00109e0c mov ax,mar
 	00109e18 push op
 	00109e20 mov op,ax
 	00109e28 setfuncargs 0x0
 	00109e30 mov ax,0x656f20
 	00109e3c farcall ax
 	00109e44 pop op
 	00109e4c push ax
 	00109e54 mov ax,0x6
 	00109e60 pop bx
 	00109e68 cmpgt bx,ax
 	00109e74 mov ax,bx
 	00109e80 jz 0x00109f04
		00109f04: CONDITIONAL_JUMP
		00109e88: FALL_THROUGH

	[00109e88]
		00109df8: FALL_THROUGH
 	00109e88 mov ax,0x1
 	00109e94 mov bx,ax
 	00109ea0 mov mar,0x65ef20
 	00109eac mov ax,mar
 	00109eb8 push op
 	00109ec0 mov op,ax
 	00109ec8 farpush bx
 	00109ed0 setfuncargs 0x1
 	00109ed8 mov ax,0x5cef20
 	00109ee4 farcall ax
 	00109eec farsubsp 0x1
 	00109ef4 pop op
 	00109efc jmp 0x00109f80
		00109f80: UNCONDITIONAL_JUMP

	[00109f04]
		00109df8: CONDITIONAL_JUMP
 	00109f04 sourceline 0x2db
 	00109f0c mov ax,0x0
 	00109f18 mov bx,ax
 	00109f24 mov mar,0x65ef20
 	00109f30 mov ax,mar
 	00109f3c push op
 	00109f44 mov op,ax
 	00109f4c farpush bx
 	00109f54 setfuncargs 0x1
 	00109f5c mov ax,0x5cef20
 	00109f68 farcall ax
 	00109f70 farsubsp 0x1
 	00109f78 pop op
		00109f80: FALL_THROUGH

	[00109f80]
		00109e88: UNCONDITIONAL_JUMP
		00109f04: FALL_THROUGH
 	00109f80 sourceline 0x2dc
 	00109f88 mov mar,0x5def20
 	00109f94 mov ax,mar
 	00109fa0 push op
 	00109fa8 mov op,ax
 	00109fb0 setfuncargs 0x0
 	00109fb8 mov ax,0x656f20
 	00109fc4 farcall ax
 	00109fcc pop op
 	00109fd4 push ax
 	00109fdc mov ax,0x5
 	00109fe8 pop bx
 	00109ff0 cmpgt bx,ax
 	00109ffc mov ax,bx
 	0010a008 jz 0x0010a08c
		0010a08c: CONDITIONAL_JUMP
		0010a010: FALL_THROUGH

	[0010a010]
		00109f80: FALL_THROUGH
 	0010a010 mov ax,0x1
 	0010a01c mov bx,ax
 	0010a028 mov mar,0x666f20
 	0010a034 mov ax,mar
 	0010a040 push op
 	0010a048 mov op,ax
 	0010a050 farpush bx
 	0010a058 setfuncargs 0x1
 	0010a060 mov ax,0x5cef20
 	0010a06c farcall ax
 	0010a074 farsubsp 0x1
 	0010a07c pop op
 	0010a084 jmp 0x0010a108
		0010a108: UNCONDITIONAL_JUMP

	[0010a08c]
		00109f80: CONDITIONAL_JUMP
 	0010a08c sourceline 0x2dd
 	0010a094 mov ax,0x0
 	0010a0a0 mov bx,ax
 	0010a0ac mov mar,0x666f20
 	0010a0b8 mov ax,mar
 	0010a0c4 push op
 	0010a0cc mov op,ax
 	0010a0d4 farpush bx
 	0010a0dc setfuncargs 0x1
 	0010a0e4 mov ax,0x5cef20
 	0010a0f0 farcall ax
 	0010a0f8 farsubsp 0x1
 	0010a100 pop op
		0010a108: FALL_THROUGH

	[0010a108]
		0010a010: UNCONDITIONAL_JUMP
		0010a08c: FALL_THROUGH
 	0010a108 sourceline 0x2e0
 	0010a110 mov mar,0x100164
 	0010a11c memread4 ax
 	0010a124 jz 0x0010a19c
		0010a19c: CONDITIONAL_JUMP
		0010a12c: FALL_THROUGH

	[0010a12c]
		0010a108: FALL_THROUGH
 	0010a12c push ax
 	0010a134 mov mar,0x100168
 	0010a140 memread4 ax
 	0010a148 push ax
 	0010a150 mov ax,0x0
 	0010a15c pop bx
 	0010a164 cmpneq bx,ax
 	0010a170 mov ax,bx
 	0010a17c pop bx
 	0010a184 land bx,ax
 	0010a190 mov ax,bx
		0010a19c: FALL_THROUGH

	[0010a19c]
		0010a108: CONDITIONAL_JUMP
		0010a12c: FALL_THROUGH
 	0010a19c jz 0x0010a1cc
		0010a1cc: CONDITIONAL_JUMP
		0010a1a4: FALL_THROUGH

	[0010a1a4]
		0010a19c: FALL_THROUGH
 	0010a1a4 mov mar,0x100168
 	0010a1b0 memread4 ax
 	0010a1b8 sub ax,0x1
 	0010a1c4 memwrite4 ax
		0010a1cc: FALL_THROUGH

	[0010a1cc]
		0010a19c: CONDITIONAL_JUMP
		0010a1a4: FALL_THROUGH
 	0010a1cc sourceline 0x2e1
 	0010a1d4 mov mar,0x100168
 	0010a1e0 memread4 ax
 	0010a1e8 push ax
 	0010a1f0 mov ax,0x0
 	0010a1fc pop bx
 	0010a204 cmple bx,ax
 	0010a210 mov ax,bx
 	0010a21c jz 0x0010a244
		0010a244: CONDITIONAL_JUMP
		0010a224: FALL_THROUGH

	[0010a224]
		0010a1cc: FALL_THROUGH
 	0010a224 mov ax,0x0
 	0010a230 mov mar,0x100164
 	0010a23c memwrite4 ax
		0010a244: FALL_THROUGH

	[0010a244]
		0010a1cc: CONDITIONAL_JUMP
		0010a224: FALL_THROUGH
 	0010a244 sourceline 0x2e3
 	0010a24c mov mar,0x546f20
 	0010a258 mov ax,mar
 	0010a264 push op
 	0010a26c mov op,ax
 	0010a274 setfuncargs 0x0
 	0010a27c mov ax,0x316f20
 	0010a288 farcall ax
 	0010a290 pop op
 	0010a298 jz 0x0010a2fc
		0010a2fc: CONDITIONAL_JUMP
		0010a2a0: FALL_THROUGH

	[0010a2a0]
		0010a244: FALL_THROUGH
 	0010a2a0 sourceline 0x2e5
 	0010a2a8 mov ax,0x1081f8
 	0010a2b4 call ax
 	0010a2bc sourceline 0x2e6
 	0010a2c4 mov mar,0x100164
 	0010a2d0 memread4 ax
 	0010a2d8 jz 0x0010a2fc
		0010a2fc: CONDITIONAL_JUMP
		0010a2e0: FALL_THROUGH

	[0010a2e0]
		0010a2a0: FALL_THROUGH
 	0010a2e0 setfuncargs 0x0
 	0010a2e8 mov ax,0x476f20
 	0010a2f4 farcall ax
		0010a2fc: FALL_THROUGH

	[0010a2fc]
		0010a244: CONDITIONAL_JUMP
		0010a2a0: CONDITIONAL_JUMP
		0010a2e0: FALL_THROUGH
 	0010a2fc sourceline 0x2e9
 	0010a304 mov mar,0x576f20
 	0010a310 mov ax,mar
 	0010a31c push op
 	0010a324 mov op,ax
 	0010a32c setfuncargs 0x0
 	0010a334 mov ax,0x316f20
 	0010a340 farcall ax
 	0010a348 pop op
 	0010a350 jz 0x0010a3b4
		0010a3b4: CONDITIONAL_JUMP
		0010a358: FALL_THROUGH

	[0010a358]
		0010a2fc: FALL_THROUGH
 	0010a358 sourceline 0x2eb
 	0010a360 mov ax,0x107c00
 	0010a36c call ax
 	0010a374 sourceline 0x2ec
 	0010a37c mov mar,0x100164
 	0010a388 memread4 ax
 	0010a390 jz 0x0010a3b4
		0010a3b4: CONDITIONAL_JUMP
		0010a398: FALL_THROUGH

	[0010a398]
		0010a358: FALL_THROUGH
 	0010a398 setfuncargs 0x0
 	0010a3a0 mov ax,0x46ef20
 	0010a3ac farcall ax
		0010a3b4: FALL_THROUGH

	[0010a3b4]
		0010a2fc: CONDITIONAL_JUMP
		0010a358: CONDITIONAL_JUMP
		0010a398: FALL_THROUGH
 	0010a3b4 sourceline 0x2ee
 	0010a3bc mov ax,0x0
 	0010a3c8 ret

late_repeatedly_execute_always$0:
	[0010a3cc]
 	0010a3cc sourceline 0x2f8
 	0010a3d4 thisaddr
 	0010a3dc sourceline 0x2f9
 	0010a3e4 mov ax,0x0
 	0010a3f0 mov mar,sp
 	0010a3fc memwrite4 ax
 	0010a404 add sp,0x4
		0010a410: FALL_THROUGH

	[0010a410]
		0010a9c8: UNCONDITIONAL_JUMP
		0010a3cc: FALL_THROUGH
 	0010a410 stackptr 0x4
 	0010a418 memread4 ax
 	0010a420 push ax
 	0010a428 mov ax,0x0
 	0010a434 setfuncargs 0x0
 	0010a43c mov ax,0x66ef20
 	0010a448 farcall ax
 	0010a450 pop bx
 	0010a458 cmplt bx,ax
 	0010a464 mov ax,bx
 	0010a470 jz 0x0010a9fc
		0010a9fc: CONDITIONAL_JUMP
		0010a478: FALL_THROUGH

	[0010a478]
		0010a410: FALL_THROUGH
 	0010a478 sourceline 0x2fb
*	0010a480 mov mar,0x42ef20
 	0010a48c push mar
 	0010a494 pop mar
 	0010a49c memread.ptr ax
 	0010a4a4 push ax
 	0010a4ac pop mar
 	0010a4b4 mov ax,mar
 	0010a4c0 push op
 	0010a4c8 mov op,ax
 	0010a4d0 setfuncargs 0x0
 	0010a4d8 mov ax,0x3d6f20
 	0010a4e4 farcall ax
 	0010a4ec pop op
 	0010a4f4 push ax
 	0010a4fc mov ax,0x1
 	0010a508 pop bx
 	0010a510 cmpneq bx,ax
 	0010a51c mov ax,bx
 	0010a528 jz 0x0010a600
		0010a600: CONDITIONAL_JUMP
		0010a530: FALL_THROUGH

	[0010a530]
		0010a478: FALL_THROUGH
 	0010a530 push ax
 	0010a538 mov mar,0x42ef20
 	0010a544 push mar
 	0010a54c pop mar
 	0010a554 memread.ptr ax
 	0010a55c push ax
 	0010a564 pop mar
 	0010a56c mov ax,mar
 	0010a578 push op
 	0010a580 mov op,ax
 	0010a588 setfuncargs 0x0
 	0010a590 mov ax,0x3d6f20
 	0010a59c farcall ax
 	0010a5a4 pop op
 	0010a5ac push ax
 	0010a5b4 mov ax,0x4
 	0010a5c0 pop bx
 	0010a5c8 cmpneq bx,ax
 	0010a5d4 mov ax,bx
 	0010a5e0 pop bx
 	0010a5e8 land bx,ax
 	0010a5f4 mov ax,bx
		0010a600: FALL_THROUGH

	[0010a600]
		0010a478: CONDITIONAL_JUMP
		0010a530: FALL_THROUGH
 	0010a600 jz 0x0010a6b0
		0010a6b0: CONDITIONAL_JUMP
		0010a608: FALL_THROUGH

	[0010a608]
		0010a600: FALL_THROUGH
 	0010a608 push ax
 	0010a610 mov mar,0x3cef20
 	0010a61c mov ax,mar
 	0010a628 push op
 	0010a630 mov op,ax
 	0010a638 setfuncargs 0x0
 	0010a640 mov ax,0x516f20
 	0010a64c farcall ax
 	0010a654 pop op
 	0010a65c push ax
 	0010a664 mov ax,0x10
 	0010a670 pop bx
 	0010a678 cmpneq bx,ax
 	0010a684 mov ax,bx
 	0010a690 pop bx
 	0010a698 land bx,ax
 	0010a6a4 mov ax,bx
		0010a6b0: FALL_THROUGH

	[0010a6b0]
		0010a600: CONDITIONAL_JUMP
		0010a608: FALL_THROUGH
 	0010a6b0 jz 0x0010a9c8
		0010a9c8: CONDITIONAL_JUMP
		0010a6b8: FALL_THROUGH

	[0010a6b8]
		0010a6b0: FALL_THROUGH
 	0010a6b8 sourceline 0x2fd
 	0010a6c0 mov mar,0x30ef20
 	0010a6cc mov ax,mar
 	0010a6d8 push op
 	0010a6e0 mov op,ax
 	0010a6e8 setfuncargs 0x0
 	0010a6f0 mov ax,0x316f20
 	0010a6fc farcall ax
 	0010a704 pop op
 	0010a70c lnot ax
 	0010a714 jz 0x0010a774
		0010a774: CONDITIONAL_JUMP
		0010a71c: FALL_THROUGH

	[0010a71c]
		0010a6b8: FALL_THROUGH
 	0010a71c push ax
 	0010a724 mov ax,0x0
 	0010a730 setfuncargs 0x0
 	0010a738 mov ax,0x636f20
 	0010a744 farcall ax
 	0010a74c lnot ax
 	0010a754 pop bx
 	0010a75c land bx,ax
 	0010a768 mov ax,bx
		0010a774: FALL_THROUGH

	[0010a774]
		0010a6b8: CONDITIONAL_JUMP
		0010a71c: FALL_THROUGH
 	0010a774 jz 0x0010a7f8
		0010a7f8: CONDITIONAL_JUMP
		0010a77c: FALL_THROUGH

	[0010a77c]
		0010a774: FALL_THROUGH
 	0010a77c push ax
 	0010a784 mov mar,0x31ef20
 	0010a790 mov ax,mar
 	0010a79c push op
 	0010a7a4 mov op,ax
 	0010a7ac setfuncargs 0x0
 	0010a7b4 mov ax,0x316f20
 	0010a7c0 farcall ax
 	0010a7c8 pop op
 	0010a7d0 lnot ax
 	0010a7d8 pop bx
 	0010a7e0 land bx,ax
 	0010a7ec mov ax,bx
		0010a7f8: FALL_THROUGH

	[0010a7f8]
		0010a774: CONDITIONAL_JUMP
		0010a77c: FALL_THROUGH
 	0010a7f8 jz 0x0010a844
		0010a844: CONDITIONAL_JUMP
		0010a800: FALL_THROUGH

	[0010a800]
		0010a7f8: FALL_THROUGH
 	0010a800 push ax
 	0010a808 mov mar,0x32ef20
 	0010a814 memread4 ax
 	0010a81c lnot ax
 	0010a824 pop bx
 	0010a82c land bx,ax
 	0010a838 mov ax,bx
		0010a844: FALL_THROUGH

	[0010a844]
		0010a7f8: CONDITIONAL_JUMP
		0010a800: FALL_THROUGH
 	0010a844 jz 0x0010a890
		0010a890: CONDITIONAL_JUMP
		0010a84c: FALL_THROUGH

	[0010a84c]
		0010a844: FALL_THROUGH
 	0010a84c push ax
 	0010a854 mov mar,0x5eef20
 	0010a860 memread4 ax
 	0010a868 lnot ax
 	0010a870 pop bx
 	0010a878 land bx,ax
 	0010a884 mov ax,bx
		0010a890: FALL_THROUGH

	[0010a890]
		0010a844: CONDITIONAL_JUMP
		0010a84c: FALL_THROUGH
 	0010a890 jz 0x0010a8dc
		0010a8dc: CONDITIONAL_JUMP
		0010a898: FALL_THROUGH

	[0010a898]
		0010a890: FALL_THROUGH
 	0010a898 push ax
 	0010a8a0 mov mar,0x676f20
 	0010a8ac memread4 ax
 	0010a8b4 lnot ax
 	0010a8bc pop bx
 	0010a8c4 land bx,ax
 	0010a8d0 mov ax,bx
		0010a8dc: FALL_THROUGH

	[0010a8dc]
		0010a890: CONDITIONAL_JUMP
		0010a898: FALL_THROUGH
 	0010a8dc jz 0x0010a960
		0010a960: CONDITIONAL_JUMP
		0010a8e4: FALL_THROUGH

	[0010a8e4]
		0010a8dc: FALL_THROUGH
 	0010a8e4 push ax
 	0010a8ec mov mar,0x326f20
 	0010a8f8 mov ax,mar
 	0010a904 push op
 	0010a90c mov op,ax
 	0010a914 setfuncargs 0x0
 	0010a91c mov ax,0x316f20
 	0010a928 farcall ax
 	0010a930 pop op
 	0010a938 lnot ax
 	0010a940 pop bx
 	0010a948 land bx,ax
 	0010a954 mov ax,bx
		0010a960: FALL_THROUGH

	[0010a960]
		0010a8dc: CONDITIONAL_JUMP
		0010a8e4: FALL_THROUGH
 	0010a960 mov bx,ax
 	0010a96c mov mar,0x67ef20
 	0010a978 mov ax,mar
 	0010a984 push op
 	0010a98c mov op,ax
 	0010a994 farpush bx
 	0010a99c setfuncargs 0x1
 	0010a9a4 mov ax,0x3a6f20
 	0010a9b0 farcall ax
 	0010a9b8 farsubsp 0x1
 	0010a9c0 pop op
		0010a9c8: FALL_THROUGH

	[0010a9c8]
		0010a6b0: CONDITIONAL_JUMP
		0010a960: FALL_THROUGH
 	0010a9c8 sourceline 0x305
 	0010a9d0 stackptr 0x4
 	0010a9d8 memread4 ax
 	0010a9e0 add ax,0x1
 	0010a9ec memwrite4 ax
 	0010a9f4 jmp 0x0010a410
		0010a410: UNCONDITIONAL_JUMP

	[0010a9fc]
		0010a410: CONDITIONAL_JUMP
 	0010a9fc sub sp,0x4
 	0010aa08 sourceline 0x306
 	0010aa10 mov ax,0x0
 	0010aa1c ret

on_event$2:
	[0010aa20]
 	0010aa20 sourceline 0x336
 	0010aa28 thisaddr
 	0010aa30 sourceline 0x337
 	0010aa38 stackptr 0x8
 	0010aa40 memread4 ax
 	0010aa48 push ax
 	0010aa50 mov ax,0x2
 	0010aa5c pop bx
 	0010aa64 cmpeq bx,ax
 	0010aa70 mov ax,bx
 	0010aa7c jz 0x0010ad04
		0010ad04: CONDITIONAL_JUMP
		0010aa84: FALL_THROUGH

	[0010aa84]
		0010aa20: FALL_THROUGH
 	0010aa84 sourceline 0x339
 	0010aa8c mov ax,0x5a
 	0010aa98 farpush ax
 	0010aaa0 mov ax,0xa0
 	0010aaac farpush ax
 	0010aab4 setfuncargs 0x2
 	0010aabc mov ax,0x686f20
 	0010aac8 farcall ax
 	0010aad0 farsubsp 0x2
 	0010aad8 sourceline 0x33a
 	0010aae0 mov ax,0x0
*	0010aaec mov mar,0x68ef20
 	0010aaf8 memwrite4 ax
 	0010ab00 sourceline 0x33b
 	0010ab08 stackptr 0xc
 	0010ab10 memread4 ax
 	0010ab18 push ax
 	0010ab20 mov ax,0x1
 	0010ab2c pop bx
 	0010ab34 cmpeq bx,ax
 	0010ab40 mov ax,bx
 	0010ab4c jnz 0x0010abc0
		0010abc0: CONDITIONAL_JUMP
		0010ab54: FALL_THROUGH

	[0010ab54]
		0010aa84: FALL_THROUGH
 	0010ab54 push ax
 	0010ab5c stackptr 0x10
 	0010ab64 memread4 ax
 	0010ab6c push ax
 	0010ab74 mov ax,0x4
 	0010ab80 pop bx
 	0010ab88 cmpeq bx,ax
 	0010ab94 mov ax,bx
 	0010aba0 pop bx
 	0010aba8 lor bx,ax
 	0010abb4 mov ax,bx
		0010abc0: FALL_THROUGH

	[0010abc0]
		0010aa84: CONDITIONAL_JUMP
		0010ab54: FALL_THROUGH
 	0010abc0 jnz 0x0010ac34
		0010ac34: CONDITIONAL_JUMP
		0010abc8: FALL_THROUGH

	[0010abc8]
		0010abc0: FALL_THROUGH
 	0010abc8 push ax
 	0010abd0 stackptr 0x10
 	0010abd8 memread4 ax
 	0010abe0 push ax
 	0010abe8 mov ax,0x23
 	0010abf4 pop bx
 	0010abfc cmpeq bx,ax
 	0010ac08 mov ax,bx
 	0010ac14 pop bx
 	0010ac1c lor bx,ax
 	0010ac28 mov ax,bx
		0010ac34: FALL_THROUGH

	[0010ac34]
		0010abc0: CONDITIONAL_JUMP
		0010abc8: FALL_THROUGH
 	0010ac34 jz 0x0010ac4c
		0010ac4c: CONDITIONAL_JUMP
		0010ac3c: FALL_THROUGH

	[0010ac3c]
		0010ac34: FALL_THROUGH
 	0010ac3c sourceline 0x33e
 	0010ac44 jmp 0x0010ad04
		0010ad04: UNCONDITIONAL_JUMP

	[0010ac4c]
		0010ac34: CONDITIONAL_JUMP
 	0010ac4c sourceline 0x341
 	0010ac54 mov ax,0xf1
 	0010ac60 farpush ax
 	0010ac68 mov ax,0x0
 	0010ac74 farpush ax
 	0010ac7c setfuncargs 0x2
 	0010ac84 mov ax,0x376f20
 	0010ac90 farcall ax
 	0010ac98 farsubsp 0x2
 	0010aca0 sourceline 0x342
 	0010aca8 mov ax,0x0
 	0010acb4 mov bx,ax
 	0010acc0 mov mar,0x336f20
 	0010accc mov ax,mar
 	0010acd8 farpush bx
 	0010ace0 setfuncargs 0x1
 	0010ace8 mov ax,0x37ef20
 	0010acf4 farcall ax
 	0010acfc farsubsp 0x1
		0010ad04: FALL_THROUGH

	[0010ad04]
		0010aa20: CONDITIONAL_JUMP
		0010ac3c: UNCONDITIONAL_JUMP
		0010ac4c: FALL_THROUGH
 	0010ad04 sourceline 0x347
 	0010ad0c stackptr 0x8
 	0010ad14 memread4 ax
 	0010ad1c push ax
 	0010ad24 mov ax,0x7
 	0010ad30 pop bx
 	0010ad38 cmpeq bx,ax
 	0010ad44 mov ax,bx
 	0010ad50 jnz 0x0010adc4
		0010adc4: CONDITIONAL_JUMP
		0010ad58: FALL_THROUGH

	[0010ad58]
		0010ad04: FALL_THROUGH
 	0010ad58 push ax
 	0010ad60 stackptr 0xc
 	0010ad68 memread4 ax
 	0010ad70 push ax
 	0010ad78 mov ax,0x8
 	0010ad84 pop bx
 	0010ad8c cmpeq bx,ax
 	0010ad98 mov ax,bx
 	0010ada4 pop bx
 	0010adac lor bx,ax
 	0010adb8 mov ax,bx
		0010adc4: FALL_THROUGH

	[0010adc4]
		0010ad04: CONDITIONAL_JUMP
		0010ad58: FALL_THROUGH
 	0010adc4 jz 0x0010adf0
		0010adf0: CONDITIONAL_JUMP
		0010adcc: FALL_THROUGH

	[0010adcc]
		0010adc4: FALL_THROUGH
 	0010adcc sourceline 0x349
 	0010add4 setfuncargs 0x0
 	0010addc mov ax,0x696f20
 	0010ade8 farcall ax
		0010adf0: FALL_THROUGH

	[0010adf0]
		0010adc4: CONDITIONAL_JUMP
		0010adcc: FALL_THROUGH
 	0010adf0 sourceline 0x34c
 	0010adf8 stackptr 0x8
 	0010ae00 memread4 ax
 	0010ae08 push ax
 	0010ae10 mov ax,0x9
 	0010ae1c pop bx
 	0010ae24 cmpeq bx,ax
 	0010ae30 mov ax,bx
 	0010ae3c jz 0x0010ae44
		0010ae44: CONDITIONAL_JUMP
		0010ae44: FALL_THROUGH

	[0010ae44]
		0010adf0: CONDITIONAL_JUMP
		0010adf0: FALL_THROUGH
 	0010ae44 sourceline 0x350
 	0010ae4c mov ax,0x0
 	0010ae58 ret

unhandled_event$2:
	[0010ae5c]
 	0010ae5c sourceline 0x359
 	0010ae64 thisaddr
 	0010ae6c sourceline 0x35a
 	0010ae74 stackptr 0x8
 	0010ae7c memread4 ax
 	0010ae84 push ax
 	0010ae8c mov ax,0x1
 	0010ae98 pop bx
 	0010aea0 cmpeq bx,ax
 	0010aeac mov ax,bx
 	0010aeb8 jz 0x0010b6ec
		0010b6ec: CONDITIONAL_JUMP
		0010aec0: FALL_THROUGH

	[0010aec0]
		0010ae5c: FALL_THROUGH
 	0010aec0 sourceline 0x35c
 	0010aec8 mov ax,0x1
 	0010aed4 mov bx,ax
*	0010aee0 mov mar,0x3cef20
 	0010aeec mov ax,mar
 	0010aef8 push op
 	0010af00 mov op,ax
 	0010af08 farpush bx
 	0010af10 setfuncargs 0x1
 	0010af18 mov ax,0x69ef20
 	0010af24 farcall ax
 	0010af2c farsubsp 0x1
 	0010af34 pop op
 	0010af3c sourceline 0x35d
 	0010af44 mov mar,0x42ef20
 	0010af50 push mar
 	0010af58 pop mar
 	0010af60 memread.ptr ax
 	0010af68 push ax
 	0010af70 pop mar
 	0010af78 mov ax,mar
 	0010af84 push op
 	0010af8c mov op,ax
 	0010af94 setfuncargs 0x0
 	0010af9c mov ax,0x3d6f20
 	0010afa8 farcall ax
 	0010afb0 pop op
 	0010afb8 push ax
 	0010afc0 mov ax,0x4
 	0010afcc pop bx
 	0010afd4 cmpneq bx,ax
 	0010afe0 mov ax,bx
 	0010afec jz 0x0010b6ec
		0010b6ec: CONDITIONAL_JUMP
		0010aff4: FALL_THROUGH

	[0010aff4]
		0010aec0: FALL_THROUGH
 	0010aff4 sourceline 0x35f
 	0010affc stackptr 0xc
 	0010b004 memread4 ax
 	0010b00c push ax
 	0010b014 mov ax,0x1
 	0010b020 pop bx
 	0010b028 cmpeq bx,ax
 	0010b034 mov ax,bx
 	0010b040 jz 0x0010b048
		0010b048: CONDITIONAL_JUMP
		0010b048: FALL_THROUGH

	[0010b048]
		0010aff4: CONDITIONAL_JUMP
		0010aff4: FALL_THROUGH
 	0010b048 sourceline 0x363
 	0010b050 stackptr 0xc
 	0010b058 memread4 ax
 	0010b060 push ax
 	0010b068 mov ax,0x2
 	0010b074 pop bx
 	0010b07c cmpeq bx,ax
 	0010b088 mov ax,bx
 	0010b094 jz 0x0010b09c
		0010b09c: CONDITIONAL_JUMP
		0010b09c: FALL_THROUGH

	[0010b09c]
		0010b048: CONDITIONAL_JUMP
		0010b048: FALL_THROUGH
 	0010b09c sourceline 0x367
 	0010b0a4 stackptr 0xc
 	0010b0ac memread4 ax
 	0010b0b4 push ax
 	0010b0bc mov ax,0x3
 	0010b0c8 pop bx
 	0010b0d0 cmpeq bx,ax
 	0010b0dc mov ax,bx
 	0010b0e8 jz 0x0010b6ec
		0010b6ec: CONDITIONAL_JUMP
		0010b0f0: FALL_THROUGH

	[0010b0f0]
		0010b09c: FALL_THROUGH
 	0010b0f0 sourceline 0x369
 	0010b0f8 mov mar,0x30ef20
 	0010b104 mov ax,mar
 	0010b110 push op
 	0010b118 mov op,ax
 	0010b120 setfuncargs 0x0
 	0010b128 mov ax,0x316f20
 	0010b134 farcall ax
 	0010b13c pop op
 	0010b144 lnot ax
 	0010b14c jz 0x0010b6ec
		0010b6ec: CONDITIONAL_JUMP
		0010b154: FALL_THROUGH

	[0010b154]
		0010b0f0: FALL_THROUGH
 	0010b154 sourceline 0x36b
 	0010b15c mov mar,0x6a6f20
 	0010b168 memread4 ax
 	0010b170 lnot ax
 	0010b178 jz 0x0010b6ec
		0010b6ec: CONDITIONAL_JUMP
		0010b180: FALL_THROUGH

	[0010b180]
		0010b154: FALL_THROUGH
 	0010b180 sourceline 0x36d
 	0010b188 mov ax,0x4
 	0010b194 farpush ax
 	0010b19c setfuncargs 0x1
 	0010b1a4 mov ax,0x4a6f20
 	0010b1b0 farcall ax
 	0010b1b8 farsubsp 0x1
 	0010b1c0 mov mar,sp
 	0010b1cc memwrite4 ax
 	0010b1d4 add sp,0x4
 	0010b1e0 sourceline 0x36e
 	0010b1e8 stackptr 0x4
 	0010b1f0 memread4 ax
 	0010b1f8 push ax
 	0010b200 mov ax,0x0
 	0010b20c pop bx
 	0010b214 cmpeq bx,ax
 	0010b220 mov ax,bx
 	0010b22c jz 0x0010b2e0
		0010b2e0: CONDITIONAL_JUMP
		0010b234: FALL_THROUGH

	[0010b234]
		0010b180: FALL_THROUGH
 	0010b234 push op
 	0010b23c mov ax,0x2b594b
 	0010b248 farpush ax
 	0010b250 mov ax,0x138
 	0010b25c farpush ax
 	0010b264 mov ax,0x92
 	0010b270 farpush ax
 	0010b278 mov ax,0x0
 	0010b284 farpush ax
 	0010b28c mov mar,0x3cef20
 	0010b298 mov ax,mar
 	0010b2a4 mov op,ax
 	0010b2ac setfuncargs 0x4
 	0010b2b4 mov ax,0x6aef20
 	0010b2c0 farcall ax
 	0010b2c8 farsubsp 0x4
 	0010b2d0 pop op
 	0010b2d8 jmp 0x0010b6d8
		0010b6d8: UNCONDITIONAL_JUMP

	[0010b2e0]
		0010b180: CONDITIONAL_JUMP
 	0010b2e0 sourceline 0x36f
 	0010b2e8 stackptr 0x4
 	0010b2f0 memread4 ax
 	0010b2f8 push ax
 	0010b300 mov ax,0x1
 	0010b30c pop bx
 	0010b314 cmpeq bx,ax
 	0010b320 mov ax,bx
 	0010b32c jz 0x0010b3e0
		0010b3e0: CONDITIONAL_JUMP
		0010b334: FALL_THROUGH

	[0010b334]
		0010b2e0: FALL_THROUGH
 	0010b334 push op
 	0010b33c mov ax,0x2b5972
 	0010b348 farpush ax
 	0010b350 mov ax,0x138
 	0010b35c farpush ax
 	0010b364 mov ax,0x92
 	0010b370 farpush ax
 	0010b378 mov ax,0x0
 	0010b384 farpush ax
 	0010b38c mov mar,0x3cef20
 	0010b398 mov ax,mar
 	0010b3a4 mov op,ax
 	0010b3ac setfuncargs 0x4
 	0010b3b4 mov ax,0x6aef20
 	0010b3c0 farcall ax
 	0010b3c8 farsubsp 0x4
 	0010b3d0 pop op
 	0010b3d8 jmp 0x0010b6d8
		0010b6d8: UNCONDITIONAL_JUMP

	[0010b3e0]
		0010b2e0: CONDITIONAL_JUMP
 	0010b3e0 sourceline 0x370
 	0010b3e8 stackptr 0x4
 	0010b3f0 memread4 ax
 	0010b3f8 push ax
 	0010b400 mov ax,0x2
 	0010b40c pop bx
 	0010b414 cmpeq bx,ax
 	0010b420 mov ax,bx
 	0010b42c jz 0x0010b4e0
		0010b4e0: CONDITIONAL_JUMP
		0010b434: FALL_THROUGH

	[0010b434]
		0010b3e0: FALL_THROUGH
 	0010b434 push op
 	0010b43c mov ax,0x2b5991
 	0010b448 farpush ax
 	0010b450 mov ax,0x138
 	0010b45c farpush ax
 	0010b464 mov ax,0x92
 	0010b470 farpush ax
 	0010b478 mov ax,0x0
 	0010b484 farpush ax
 	0010b48c mov mar,0x3cef20
 	0010b498 mov ax,mar
 	0010b4a4 mov op,ax
 	0010b4ac setfuncargs 0x4
 	0010b4b4 mov ax,0x6aef20
 	0010b4c0 farcall ax
 	0010b4c8 farsubsp 0x4
 	0010b4d0 pop op
 	0010b4d8 jmp 0x0010b6d8
		0010b6d8: UNCONDITIONAL_JUMP

	[0010b4e0]
		0010b3e0: CONDITIONAL_JUMP
 	0010b4e0 sourceline 0x371
 	0010b4e8 stackptr 0x4
 	0010b4f0 memread4 ax
 	0010b4f8 push ax
 	0010b500 mov ax,0x3
 	0010b50c pop bx
 	0010b514 cmpeq bx,ax
 	0010b520 mov ax,bx
 	0010b52c jz 0x0010b5e0
		0010b5e0: CONDITIONAL_JUMP
		0010b534: FALL_THROUGH

	[0010b534]
		0010b4e0: FALL_THROUGH
 	0010b534 push op
 	0010b53c mov ax,0x2b59ad
 	0010b548 farpush ax
 	0010b550 mov ax,0x138
 	0010b55c farpush ax
 	0010b564 mov ax,0x92
 	0010b570 farpush ax
 	0010b578 mov ax,0x0
 	0010b584 farpush ax
 	0010b58c mov mar,0x3cef20
 	0010b598 mov ax,mar
 	0010b5a4 mov op,ax
 	0010b5ac setfuncargs 0x4
 	0010b5b4 mov ax,0x6aef20
 	0010b5c0 farcall ax
 	0010b5c8 farsubsp 0x4
 	0010b5d0 pop op
 	0010b5d8 jmp 0x0010b6d8
		0010b6d8: UNCONDITIONAL_JUMP

	[0010b5e0]
		0010b4e0: CONDITIONAL_JUMP
 	0010b5e0 sourceline 0x372
 	0010b5e8 stackptr 0x4
 	0010b5f0 memread4 ax
 	0010b5f8 push ax
 	0010b600 mov ax,0x4
 	0010b60c pop bx
 	0010b614 cmpeq bx,ax
 	0010b620 mov ax,bx
 	0010b62c jz 0x0010b6d8
		0010b6d8: CONDITIONAL_JUMP
		0010b634: FALL_THROUGH

	[0010b634]
		0010b5e0: FALL_THROUGH
 	0010b634 push op
 	0010b63c mov ax,0x2b59d0
 	0010b648 farpush ax
 	0010b650 mov ax,0x138
 	0010b65c farpush ax
 	0010b664 mov ax,0x92
 	0010b670 farpush ax
 	0010b678 mov ax,0x0
 	0010b684 farpush ax
 	0010b68c mov mar,0x3cef20
 	0010b698 mov ax,mar
 	0010b6a4 mov op,ax
 	0010b6ac setfuncargs 0x4
 	0010b6b4 mov ax,0x6aef20
 	0010b6c0 farcall ax
 	0010b6c8 farsubsp 0x4
 	0010b6d0 pop op
		0010b6d8: FALL_THROUGH

	[0010b6d8]
		0010b234: UNCONDITIONAL_JUMP
		0010b334: UNCONDITIONAL_JUMP
		0010b434: UNCONDITIONAL_JUMP
		0010b534: UNCONDITIONAL_JUMP
		0010b5e0: CONDITIONAL_JUMP
		0010b634: FALL_THROUGH
 	0010b6d8 sourceline 0x373
 	0010b6e0 sub sp,0x4
		0010b6ec: FALL_THROUGH

	[0010b6ec]
		0010ae5c: CONDITIONAL_JUMP
		0010aec0: CONDITIONAL_JUMP
		0010b09c: CONDITIONAL_JUMP
		0010b0f0: CONDITIONAL_JUMP
		0010b154: CONDITIONAL_JUMP
		0010b6d8: FALL_THROUGH
 	0010b6ec sourceline 0x378
 	0010b6f4 stackptr 0x8
 	0010b6fc memread4 ax
 	0010b704 push ax
 	0010b70c mov ax,0x2
 	0010b718 pop bx
 	0010b720 cmpeq bx,ax
 	0010b72c mov ax,bx
 	0010b738 jz 0x0010ba48
		0010ba48: CONDITIONAL_JUMP
		0010b740: FALL_THROUGH

	[0010b740]
		0010b6ec: FALL_THROUGH
 	0010b740 sourceline 0x37a
 	0010b748 mov ax,0x1
 	0010b754 mov bx,ax
 	0010b760 mov mar,0x3cef20
 	0010b76c mov ax,mar
 	0010b778 push op
 	0010b780 mov op,ax
 	0010b788 farpush bx
 	0010b790 setfuncargs 0x1
 	0010b798 mov ax,0x69ef20
 	0010b7a4 farcall ax
 	0010b7ac farsubsp 0x1
 	0010b7b4 pop op
 	0010b7bc sourceline 0x37b
 	0010b7c4 mov mar,0x42ef20
 	0010b7d0 push mar
 	0010b7d8 pop mar
 	0010b7e0 memread.ptr ax
 	0010b7e8 push ax
 	0010b7f0 pop mar
 	0010b7f8 mov ax,mar
 	0010b804 push op
 	0010b80c mov op,ax
 	0010b814 setfuncargs 0x0
 	0010b81c mov ax,0x3d6f20
 	0010b828 farcall ax
 	0010b830 pop op
 	0010b838 push ax
 	0010b840 mov ax,0x4
 	0010b84c pop bx
 	0010b854 cmpneq bx,ax
 	0010b860 mov ax,bx
 	0010b86c jz 0x0010b944
		0010b944: CONDITIONAL_JUMP
		0010b874: FALL_THROUGH

	[0010b874]
		0010b740: FALL_THROUGH
 	0010b874 push ax
 	0010b87c mov mar,0x42ef20
 	0010b888 push mar
 	0010b890 pop mar
 	0010b898 memread.ptr ax
 	0010b8a0 push ax
 	0010b8a8 pop mar
 	0010b8b0 mov ax,mar
 	0010b8bc push op
 	0010b8c4 mov op,ax
 	0010b8cc setfuncargs 0x0
 	0010b8d4 mov ax,0x3d6f20
 	0010b8e0 farcall ax
 	0010b8e8 pop op
 	0010b8f0 push ax
 	0010b8f8 mov ax,0x7
 	0010b904 pop bx
 	0010b90c cmpneq bx,ax
 	0010b918 mov ax,bx
 	0010b924 pop bx
 	0010b92c land bx,ax
 	0010b938 mov ax,bx
		0010b944: FALL_THROUGH

	[0010b944]
		0010b740: CONDITIONAL_JUMP
		0010b874: FALL_THROUGH
 	0010b944 jz 0x0010ba48
		0010ba48: CONDITIONAL_JUMP
		0010b94c: FALL_THROUGH

	[0010b94c]
		0010b944: FALL_THROUGH
 	0010b94c sourceline 0x37d
 	0010b954 stackptr 0xc
 	0010b95c memread4 ax
 	0010b964 push ax
 	0010b96c mov ax,0x0
 	0010b978 pop bx
 	0010b980 cmpeq bx,ax
 	0010b98c mov ax,bx
 	0010b998 jz 0x0010b9a0
		0010b9a0: CONDITIONAL_JUMP
		0010b9a0: FALL_THROUGH

	[0010b9a0]
		0010b94c: CONDITIONAL_JUMP
		0010b94c: FALL_THROUGH
 	0010b9a0 sourceline 0x381
 	0010b9a8 stackptr 0xc
 	0010b9b0 memread4 ax
 	0010b9b8 push ax
 	0010b9c0 mov ax,0x1
 	0010b9cc pop bx
 	0010b9d4 cmpeq bx,ax
 	0010b9e0 mov ax,bx
 	0010b9ec jz 0x0010b9f4
		0010b9f4: CONDITIONAL_JUMP
		0010b9f4: FALL_THROUGH

	[0010b9f4]
		0010b9a0: CONDITIONAL_JUMP
		0010b9a0: FALL_THROUGH
 	0010b9f4 sourceline 0x385
 	0010b9fc stackptr 0xc
 	0010ba04 memread4 ax
 	0010ba0c push ax
 	0010ba14 mov ax,0x3
 	0010ba20 pop bx
 	0010ba28 cmpeq bx,ax
 	0010ba34 mov ax,bx
 	0010ba40 jz 0x0010ba48
		0010ba48: CONDITIONAL_JUMP
		0010ba48: FALL_THROUGH

	[0010ba48]
		0010b6ec: CONDITIONAL_JUMP
		0010b944: CONDITIONAL_JUMP
		0010b9f4: CONDITIONAL_JUMP
		0010b9f4: FALL_THROUGH
 	0010ba48 sourceline 0x38b
 	0010ba50 stackptr 0x8
 	0010ba58 memread4 ax
 	0010ba60 push ax
 	0010ba68 mov ax,0x3
 	0010ba74 pop bx
 	0010ba7c cmpeq bx,ax
 	0010ba88 mov ax,bx
 	0010ba94 jz 0x0010d720
		0010d720: CONDITIONAL_JUMP
		0010ba9c: FALL_THROUGH

	[0010ba9c]
		0010ba48: FALL_THROUGH
 	0010ba9c sourceline 0x38d
 	0010baa4 mov ax,0x1
 	0010bab0 mov bx,ax
 	0010babc mov mar,0x3cef20
 	0010bac8 mov ax,mar
 	0010bad4 push op
 	0010badc mov op,ax
 	0010bae4 farpush bx
 	0010baec setfuncargs 0x1
 	0010baf4 mov ax,0x69ef20
 	0010bb00 farcall ax
 	0010bb08 farsubsp 0x1
 	0010bb10 pop op
 	0010bb18 sourceline 0x38e
 	0010bb20 stackptr 0xc
 	0010bb28 memread4 ax
 	0010bb30 push ax
 	0010bb38 mov ax,0x0
 	0010bb44 pop bx
 	0010bb4c cmpeq bx,ax
 	0010bb58 mov ax,bx
 	0010bb64 jz 0x0010bb6c
		0010bb6c: CONDITIONAL_JUMP
		0010bb6c: FALL_THROUGH

	[0010bb6c]
		0010ba9c: CONDITIONAL_JUMP
		0010ba9c: FALL_THROUGH
 	0010bb6c sourceline 0x392
 	0010bb74 stackptr 0xc
 	0010bb7c memread4 ax
 	0010bb84 push ax
 	0010bb8c mov ax,0x1
 	0010bb98 pop bx
 	0010bba0 cmpeq bx,ax
 	0010bbac mov ax,bx
 	0010bbb8 jz 0x0010d668
		0010d668: CONDITIONAL_JUMP
		0010bbc0: FALL_THROUGH

	[0010bbc0]
		0010bb6c: FALL_THROUGH
 	0010bbc0 sourceline 0x394
 	0010bbc8 mov mar,0x3cef20
 	0010bbd4 mov ax,mar
 	0010bbe0 push op
 	0010bbe8 mov op,ax
 	0010bbf0 setfuncargs 0x0
 	0010bbf8 mov ax,0x3d6f20
 	0010bc04 farcall ax
 	0010bc0c pop op
 	0010bc14 push ax
 	0010bc1c mov ax,0xa
 	0010bc28 pop bx
 	0010bc30 cmpeq bx,ax
 	0010bc3c mov ax,bx
 	0010bc48 jz 0x0010d5bc
		0010d5bc: CONDITIONAL_JUMP
		0010bc50: FALL_THROUGH

	[0010bc50]
		0010bbc0: FALL_THROUGH
 	0010bc50 sourceline 0x396
 	0010bc58 mov mar,0x6b6f20
 	0010bc64 mov ax,mar
 	0010bc70 push op
 	0010bc78 mov op,ax
 	0010bc80 setfuncargs 0x0
 	0010bc88 mov ax,0x3d6f20
 	0010bc94 farcall ax
 	0010bc9c pop op
 	0010bca4 push ax
 	0010bcac mov mar,0x3cef20
 	0010bcb8 mov ax,mar
 	0010bcc4 push op
 	0010bccc mov op,ax
 	0010bcd4 setfuncargs 0x0
 	0010bcdc mov ax,0x3d6f20
 	0010bce8 farcall ax
 	0010bcf0 pop op
 	0010bcf8 pop bx
 	0010bd00 cmpeq bx,ax
 	0010bd0c mov ax,bx
 	0010bd18 jz 0x0010d500
		0010d500: CONDITIONAL_JUMP
		0010bd20: FALL_THROUGH

	[0010bd20]
		0010bc50: FALL_THROUGH
 	0010bd20 sourceline 0x398
 	0010bd28 mov mar,0x336f20
 	0010bd34 add mar,0x4
 	0010bd40 memread4 ax
 	0010bd48 farpush ax
 	0010bd50 mov mar,0x336f20
 	0010bd5c memread4 ax
 	0010bd64 farpush ax
 	0010bd6c setfuncargs 0x2
 	0010bd74 mov ax,0x6bef20
 	0010bd80 farcall ax
 	0010bd88 farsubsp 0x2
 	0010bd90 mov mar,sp
 	0010bd9c meminit ax
 	0010bda4 add sp,0x4
 	0010bdb0 sourceline 0x399
 	0010bdb8 stackptr 0x4
 	0010bdc0 push mar
 	0010bdc8 pop mar
 	0010bdd0 memread.ptr ax
 	0010bdd8 push ax
 	0010bde0 mov ax,0x4
 	0010bdec assertlte ax,0x32
 	0010bdf8 mul ax,0x8
 	0010be04 mov cx,ax
 	0010be10 mov mar,0x6c6f20
 	0010be1c add mar,cx
 	0010be28 mov ax,mar
 	0010be34 pop bx
 	0010be3c cmpeq bx,ax
 	0010be48 mov ax,bx
 	0010be54 jz 0x0010d42c
		0010d42c: CONDITIONAL_JUMP
		0010be5c: FALL_THROUGH

	[0010be5c]
		0010bd20: FALL_THROUGH
 	0010be5c sourceline 0x39b
 	0010be64 mov mar,0x6b6f20
 	0010be70 mov ax,mar
 	0010be7c push op
 	0010be84 mov op,ax
 	0010be8c setfuncargs 0x0
 	0010be94 mov ax,0x516f20
 	0010bea0 farcall ax
 	0010bea8 pop op
 	0010beb0 push ax
 	0010beb8 mov ax,0x36
 	0010bec4 pop bx
 	0010becc cmpneq bx,ax
 	0010bed8 mov ax,bx
 	0010bee4 jz 0x0010ca6c
		0010ca6c: CONDITIONAL_JUMP
		0010beec: FALL_THROUGH

	[0010beec]
		0010be5c: FALL_THROUGH
 	0010beec sourceline 0x39d
 	0010bef4 push op
 	0010befc mov ax,0x1
 	0010bf08 farpush ax
 	0010bf10 mov mar,0x6cef20
 	0010bf1c mov ax,mar
 	0010bf28 mov op,ax
 	0010bf30 setfuncargs 0x1
 	0010bf38 mov ax,0x6d6f20
 	0010bf44 farcall ax
 	0010bf4c farsubsp 0x1
 	0010bf54 pop op
 	0010bf5c lnot ax
 	0010bf64 jnz 0x0010c004
		0010c004: CONDITIONAL_JUMP
		0010bf6c: FALL_THROUGH

	[0010bf6c]
		0010beec: FALL_THROUGH
 	0010bf6c push ax
 	0010bf74 push op
 	0010bf7c mov ax,0x2
 	0010bf88 farpush ax
 	0010bf90 mov mar,0x6cef20
 	0010bf9c mov ax,mar
 	0010bfa8 mov op,ax
 	0010bfb0 setfuncargs 0x1
 	0010bfb8 mov ax,0x6d6f20
 	0010bfc4 farcall ax
 	0010bfcc farsubsp 0x1
 	0010bfd4 pop op
 	0010bfdc lnot ax
 	0010bfe4 pop bx
 	0010bfec lor bx,ax
 	0010bff8 mov ax,bx
		0010c004: FALL_THROUGH

	[0010c004]
		0010beec: CONDITIONAL_JUMP
		0010bf6c: FALL_THROUGH
 	0010c004 jnz 0x0010c0a4
		0010c0a4: CONDITIONAL_JUMP
		0010c00c: FALL_THROUGH

	[0010c00c]
		0010c004: FALL_THROUGH
 	0010c00c push ax
 	0010c014 push op
 	0010c01c mov ax,0x3
 	0010c028 farpush ax
 	0010c030 mov mar,0x6cef20
 	0010c03c mov ax,mar
 	0010c048 mov op,ax
 	0010c050 setfuncargs 0x1
 	0010c058 mov ax,0x6d6f20
 	0010c064 farcall ax
 	0010c06c farsubsp 0x1
 	0010c074 pop op
 	0010c07c lnot ax
 	0010c084 pop bx
 	0010c08c lor bx,ax
 	0010c098 mov ax,bx
		0010c0a4: FALL_THROUGH

	[0010c0a4]
		0010c004: CONDITIONAL_JUMP
		0010c00c: FALL_THROUGH
 	0010c0a4 jnz 0x0010c144
		0010c144: CONDITIONAL_JUMP
		0010c0ac: FALL_THROUGH

	[0010c0ac]
		0010c0a4: FALL_THROUGH
 	0010c0ac push ax
 	0010c0b4 push op
 	0010c0bc mov ax,0x4
 	0010c0c8 farpush ax
 	0010c0d0 mov mar,0x6cef20
 	0010c0dc mov ax,mar
 	0010c0e8 mov op,ax
 	0010c0f0 setfuncargs 0x1
 	0010c0f8 mov ax,0x6d6f20
 	0010c104 farcall ax
 	0010c10c farsubsp 0x1
 	0010c114 pop op
 	0010c11c lnot ax
 	0010c124 pop bx
 	0010c12c lor bx,ax
 	0010c138 mov ax,bx
		0010c144: FALL_THROUGH

	[0010c144]
		0010c0a4: CONDITIONAL_JUMP
		0010c0ac: FALL_THROUGH
 	0010c144 jz 0x0010c89c
		0010c89c: CONDITIONAL_JUMP
		0010c14c: FALL_THROUGH

	[0010c14c]
		0010c144: FALL_THROUGH
 	0010c14c sourceline 0x39f
 	0010c154 setfuncargs 0x0
 	0010c15c mov ax,0x6def20
 	0010c168 farcall ax
 	0010c170 lnot ax
 	0010c178 jz 0x0010c1d4
		0010c1d4: CONDITIONAL_JUMP
		0010c180: FALL_THROUGH

	[0010c180]
		0010c14c: FALL_THROUGH
 	0010c180 mov ax,0x87
 	0010c18c farpush ax
 	0010c194 mov ax,0x4b
 	0010c1a0 farpush ax
 	0010c1a8 setfuncargs 0x2
 	0010c1b0 mov ax,0x6e6f20
 	0010c1bc farcall ax
 	0010c1c4 farsubsp 0x2
 	0010c1cc jmp 0x0010c88c
		0010c88c: UNCONDITIONAL_JUMP

	[0010c1d4]
		0010c14c: CONDITIONAL_JUMP
 	0010c1d4 sourceline 0x3a2
 	0010c1dc mov ax,0x3
 	0010c1e8 mov bx,ax
 	0010c1f4 mov mar,0x3cef20
 	0010c200 mov ax,mar
 	0010c20c push op
 	0010c214 mov op,ax
 	0010c21c farpush bx
 	0010c224 setfuncargs 0x1
 	0010c22c mov ax,0x69ef20
 	0010c238 farcall ax
 	0010c240 farsubsp 0x1
 	0010c248 pop op
 	0010c250 sourceline 0x3a3
 	0010c258 push op
 	0010c260 mov ax,0x397
 	0010c26c farpush ax
 	0010c274 mov ax,0x0
 	0010c280 farpush ax
 	0010c288 mov mar,0x3cef20
 	0010c294 mov ax,mar
 	0010c2a0 mov op,ax
 	0010c2a8 setfuncargs 0x2
 	0010c2b0 mov ax,0x6eef20
 	0010c2bc farcall ax
 	0010c2c4 farsubsp 0x2
 	0010c2cc pop op
 	0010c2d4 sourceline 0x3a4
 	0010c2dc push op
 	0010c2e4 mov ax,0x2b5856
 	0010c2f0 farpush ax
 	0010c2f8 mov mar,0x3cef20
 	0010c304 mov ax,mar
 	0010c310 mov op,ax
 	0010c318 setfuncargs 0x1
 	0010c320 mov ax,0x6f6f20
 	0010c32c farcall ax
 	0010c334 farsubsp 0x1
 	0010c33c pop op
 	0010c344 sourceline 0x3a5
 	0010c34c mov mar,0x6b6f20
 	0010c358 mov ax,mar
 	0010c364 push op
 	0010c36c mov op,ax
 	0010c374 setfuncargs 0x0
 	0010c37c mov ax,0x516f20
 	0010c388 farcall ax
 	0010c390 pop op
 	0010c398 push ax
 	0010c3a0 mov ax,0x33
 	0010c3ac pop bx
 	0010c3b4 cmpeq bx,ax
 	0010c3c0 mov ax,bx
 	0010c3cc jnz 0x0010c47c
		0010c47c: CONDITIONAL_JUMP
		0010c3d4: FALL_THROUGH

	[0010c3d4]
		0010c1d4: FALL_THROUGH
 	0010c3d4 push ax
 	0010c3dc mov mar,0x6b6f20
 	0010c3e8 mov ax,mar
 	0010c3f4 push op
 	0010c3fc mov op,ax
 	0010c404 setfuncargs 0x0
 	0010c40c mov ax,0x516f20
 	0010c418 farcall ax
 	0010c420 pop op
 	0010c428 push ax
 	0010c430 mov ax,0x32
 	0010c43c pop bx
 	0010c444 cmpeq bx,ax
 	0010c450 mov ax,bx
 	0010c45c pop bx
 	0010c464 lor bx,ax
 	0010c470 mov ax,bx
		0010c47c: FALL_THROUGH

	[0010c47c]
		0010c1d4: CONDITIONAL_JUMP
		0010c3d4: FALL_THROUGH
 	0010c47c jz 0x0010c520
		0010c520: CONDITIONAL_JUMP
		0010c484: FALL_THROUGH

	[0010c484]
		0010c4e0: UNCONDITIONAL_JUMP
		0010c47c: FALL_THROUGH
 	0010c484 sourceline 0x3a7
 	0010c48c mov mar,0x6b6f20
 	0010c498 mov ax,mar
 	0010c4a4 push op
 	0010c4ac mov op,ax
 	0010c4b4 setfuncargs 0x0
 	0010c4bc mov ax,0x50ef20
 	0010c4c8 farcall ax
 	0010c4d0 pop op
 	0010c4d8 jz 0x0010c520
		0010c520: CONDITIONAL_JUMP
		0010c4e0: FALL_THROUGH

	[0010c4e0]
		0010c484: FALL_THROUGH
 	0010c4e0 mov ax,0x1
 	0010c4ec farpush ax
 	0010c4f4 setfuncargs 0x1
 	0010c4fc mov ax,0x426f20
 	0010c508 farcall ax
 	0010c510 farsubsp 0x1
 	0010c518 jmp 0x0010c484
		0010c484: UNCONDITIONAL_JUMP

	[0010c520]
		0010c47c: CONDITIONAL_JUMP
		0010c484: CONDITIONAL_JUMP
 	0010c520 sourceline 0x3a9
 	0010c528 mov ax,0x1
 	0010c534 push ax
 	0010c53c mov ax,0x2
 	0010c548 assertlte ax,0x28
 	0010c554 mul ax,0x8
 	0010c560 mov cx,ax
 	0010c56c pop ax
 	0010c574 mov bx,ax
 	0010c580 mov mar,0x6fef20
 	0010c58c add mar,cx
 	0010c598 mov ax,mar
 	0010c5a4 push op
 	0010c5ac mov op,ax
 	0010c5b4 farpush bx
 	0010c5bc setfuncargs 0x1
 	0010c5c4 mov ax,0x706f20
 	0010c5d0 farcall ax
 	0010c5d8 farsubsp 0x1
 	0010c5e0 pop op
 	0010c5e8 sourceline 0x3aa
 	0010c5f0 push op
 	0010c5f8 mov ax,0x34
 	0010c604 farpush ax
 	0010c60c mov mar,0x6b6f20
 	0010c618 mov ax,mar
 	0010c624 mov op,ax
 	0010c62c setfuncargs 0x1
 	0010c634 mov ax,0x51ef20
 	0010c640 farcall ax
 	0010c648 farsubsp 0x1
 	0010c650 pop op
 	0010c658 sourceline 0x3ab
 	0010c660 mov ax,0x46
 	0010c66c mov bx,ax
 	0010c678 mov mar,0x6b6f20
 	0010c684 mov ax,mar
 	0010c690 push op
 	0010c698 mov op,ax
 	0010c6a0 farpush bx
 	0010c6a8 setfuncargs 0x1
 	0010c6b0 mov ax,0x70ef20
 	0010c6bc farcall ax
 	0010c6c4 farsubsp 0x1
 	0010c6cc pop op
 	0010c6d4 sourceline 0x3ac
 	0010c6dc mov ax,0x8f
 	0010c6e8 mov bx,ax
 	0010c6f4 mov mar,0x6b6f20
 	0010c700 mov ax,mar
 	0010c70c push op
 	0010c714 mov op,ax
 	0010c71c farpush bx
 	0010c724 setfuncargs 0x1
 	0010c72c mov ax,0x526f20
 	0010c738 farcall ax
 	0010c740 farsubsp 0x1
 	0010c748 pop op
 	0010c750 sourceline 0x3ad
 	0010c758 push op
 	0010c760 mov ax,0x426
 	0010c76c farpush ax
 	0010c774 mov ax,0x397
 	0010c780 farpush ax
 	0010c788 mov ax,0x0
 	0010c794 farpush ax
 	0010c79c mov ax,0x3
 	0010c7a8 farpush ax
 	0010c7b0 mov ax,0x0
 	0010c7bc farpush ax
 	0010c7c4 mov mar,0x6b6f20
 	0010c7d0 mov ax,mar
 	0010c7dc mov op,ax
 	0010c7e4 setfuncargs 0x5
 	0010c7ec mov ax,0x536f20
 	0010c7f8 farcall ax
 	0010c800 farsubsp 0x5
 	0010c808 pop op
 	0010c810 sourceline 0x3ae
 	0010c818 mov ax,0x1
 	0010c824 mov mar,0x716f20
 	0010c830 memwrite4 ax
 	0010c838 sourceline 0x3af
 	0010c840 push op
 	0010c848 mov mar,0x6cef20
 	0010c854 mov ax,mar
 	0010c860 mov op,ax
 	0010c868 setfuncargs 0x0
 	0010c870 mov ax,0x71ef20
 	0010c87c farcall ax
 	0010c884 pop op
		0010c88c: FALL_THROUGH

	[0010c88c]
		0010c180: UNCONDITIONAL_JUMP
		0010c520: FALL_THROUGH
 	0010c88c sourceline 0x3b1
 	0010c894 jmp 0x0010ca5c
		0010ca5c: UNCONDITIONAL_JUMP

	[0010c89c]
		0010c144: CONDITIONAL_JUMP
 	0010c89c sourceline 0x3b4
 	0010c8a4 push op
 	0010c8ac mov ax,0x397
 	0010c8b8 farpush ax
 	0010c8c0 mov ax,0xc7
 	0010c8cc farpush ax
 	0010c8d4 mov ax,0x44
 	0010c8e0 farpush ax
 	0010c8e8 mov mar,0x3cef20
 	0010c8f4 mov ax,mar
 	0010c900 mov op,ax
 	0010c908 setfuncargs 0x3
 	0010c910 mov ax,0x726f20
 	0010c91c farcall ax
 	0010c924 farsubsp 0x3
 	0010c92c pop op
 	0010c934 sourceline 0x3b5
 	0010c93c mov ax,0x1
 	0010c948 mov bx,ax
 	0010c954 mov mar,0x3cef20
 	0010c960 mov ax,mar
 	0010c96c push op
 	0010c974 mov op,ax
 	0010c97c farpush bx
 	0010c984 setfuncargs 0x1
 	0010c98c mov ax,0x69ef20
 	0010c998 farcall ax
 	0010c9a0 farsubsp 0x1
 	0010c9a8 pop op
 	0010c9b0 sourceline 0x3b6
 	0010c9b8 push op
 	0010c9c0 mov ax,0x2c798e
 	0010c9cc farpush ax
 	0010c9d4 mov ax,0x138
 	0010c9e0 farpush ax
 	0010c9e8 mov ax,0x92
 	0010c9f4 farpush ax
 	0010c9fc mov ax,0x0
 	0010ca08 farpush ax
 	0010ca10 mov mar,0x3cef20
 	0010ca1c mov ax,mar
 	0010ca28 mov op,ax
 	0010ca30 setfuncargs 0x4
 	0010ca38 mov ax,0x6aef20
 	0010ca44 farcall ax
 	0010ca4c farsubsp 0x4
 	0010ca54 pop op
		0010ca5c: FALL_THROUGH

	[0010ca5c]
		0010c88c: UNCONDITIONAL_JUMP
		0010c89c: FALL_THROUGH
 	0010ca5c sourceline 0x3b8
 	0010ca64 jmp 0x0010d41c
		0010d41c: UNCONDITIONAL_JUMP

	[0010ca6c]
		0010be5c: CONDITIONAL_JUMP
 	0010ca6c sourceline 0x3bb
 	0010ca74 mov mar,0x72ef20
 	0010ca80 memread4 ax
 	0010ca88 jz 0x0010cc60
		0010cc60: CONDITIONAL_JUMP
		0010ca90: FALL_THROUGH

	[0010ca90]
		0010ca6c: FALL_THROUGH
 	0010ca90 sourceline 0x3bd
 	0010ca98 push op
 	0010caa0 mov ax,0x397
 	0010caac farpush ax
 	0010cab4 mov ax,0xc7
 	0010cac0 farpush ax
 	0010cac8 mov ax,0x44
 	0010cad4 farpush ax
 	0010cadc mov mar,0x3cef20
 	0010cae8 mov ax,mar
 	0010caf4 mov op,ax
 	0010cafc setfuncargs 0x3
 	0010cb04 mov ax,0x726f20
 	0010cb10 farcall ax
 	0010cb18 farsubsp 0x3
 	0010cb20 pop op
 	0010cb28 sourceline 0x3be
 	0010cb30 mov ax,0x1
 	0010cb3c mov bx,ax
 	0010cb48 mov mar,0x3cef20
 	0010cb54 mov ax,mar
 	0010cb60 push op
 	0010cb68 mov op,ax
 	0010cb70 farpush bx
 	0010cb78 setfuncargs 0x1
 	0010cb80 mov ax,0x69ef20
 	0010cb8c farcall ax
 	0010cb94 farsubsp 0x1
 	0010cb9c pop op
 	0010cba4 sourceline 0x3bf
 	0010cbac push op
 	0010cbb4 mov ax,0x2b5861
 	0010cbc0 farpush ax
 	0010cbc8 mov ax,0x138
 	0010cbd4 farpush ax
 	0010cbdc mov ax,0x92
 	0010cbe8 farpush ax
 	0010cbf0 mov ax,0x0
 	0010cbfc farpush ax
 	0010cc04 mov mar,0x3cef20
 	0010cc10 mov ax,mar
 	0010cc1c mov op,ax
 	0010cc24 setfuncargs 0x4
 	0010cc2c mov ax,0x6aef20
 	0010cc38 farcall ax
 	0010cc40 farsubsp 0x4
 	0010cc48 pop op
 	0010cc50 sourceline 0x3c0
 	0010cc58 jmp 0x0010d41c
		0010d41c: UNCONDITIONAL_JUMP

	[0010cc60]
		0010ca6c: CONDITIONAL_JUMP
 	0010cc60 sourceline 0x3c3
 	0010cc68 push op
 	0010cc70 mov ax,0x2
 	0010cc7c farpush ax
 	0010cc84 mov mar,0x736f20
 	0010cc90 mov ax,mar
 	0010cc9c mov op,ax
 	0010cca4 setfuncargs 0x1
 	0010ccac mov ax,0x6d6f20
 	0010ccb8 farcall ax
 	0010ccc0 farsubsp 0x1
 	0010ccc8 pop op
 	0010ccd0 lnot ax
 	0010ccd8 jz 0x0010ceb0
		0010ceb0: CONDITIONAL_JUMP
		0010cce0: FALL_THROUGH

	[0010cce0]
		0010cc60: FALL_THROUGH
 	0010cce0 sourceline 0x3c5
 	0010cce8 push op
 	0010ccf0 mov ax,0x397
 	0010ccfc farpush ax
 	0010cd04 mov ax,0xc7
 	0010cd10 farpush ax
 	0010cd18 mov ax,0x44
 	0010cd24 farpush ax
 	0010cd2c mov mar,0x3cef20
 	0010cd38 mov ax,mar
 	0010cd44 mov op,ax
 	0010cd4c setfuncargs 0x3
 	0010cd54 mov ax,0x726f20
 	0010cd60 farcall ax
 	0010cd68 farsubsp 0x3
 	0010cd70 pop op
 	0010cd78 sourceline 0x3c6
 	0010cd80 mov ax,0x1
 	0010cd8c mov bx,ax
 	0010cd98 mov mar,0x3cef20
 	0010cda4 mov ax,mar
 	0010cdb0 push op
 	0010cdb8 mov op,ax
 	0010cdc0 farpush bx
 	0010cdc8 setfuncargs 0x1
 	0010cdd0 mov ax,0x69ef20
 	0010cddc farcall ax
 	0010cde4 farsubsp 0x1
 	0010cdec pop op
 	0010cdf4 sourceline 0x3c7
 	0010cdfc push op
 	0010ce04 mov ax,0x2b5861
 	0010ce10 farpush ax
 	0010ce18 mov ax,0x138
 	0010ce24 farpush ax
 	0010ce2c mov ax,0x92
 	0010ce38 farpush ax
 	0010ce40 mov ax,0x0
 	0010ce4c farpush ax
 	0010ce54 mov mar,0x3cef20
 	0010ce60 mov ax,mar
 	0010ce6c mov op,ax
 	0010ce74 setfuncargs 0x4
 	0010ce7c mov ax,0x6aef20
 	0010ce88 farcall ax
 	0010ce90 farsubsp 0x4
 	0010ce98 pop op
 	0010cea0 sourceline 0x3c8
 	0010cea8 jmp 0x0010d41c
		0010d41c: UNCONDITIONAL_JUMP

	[0010ceb0]
		0010cc60: CONDITIONAL_JUMP
 	0010ceb0 sourceline 0x3cb
 	0010ceb8 mov mar,0x73ef20
 	0010cec4 memread4 ax
 	0010cecc lnot ax
 	0010ced4 jz 0x0010d25c
		0010d25c: CONDITIONAL_JUMP
		0010cedc: FALL_THROUGH

	[0010cedc]
		0010ceb0: FALL_THROUGH
 	0010cedc sourceline 0x3cd
 	0010cee4 setfuncargs 0x0
 	0010ceec mov ax,0x6def20
 	0010cef8 farcall ax
 	0010cf00 lnot ax
 	0010cf08 jz 0x0010cf64
		0010cf64: CONDITIONAL_JUMP
		0010cf10: FALL_THROUGH

	[0010cf10]
		0010cedc: FALL_THROUGH
 	0010cf10 mov ax,0x87
 	0010cf1c farpush ax
 	0010cf24 mov ax,0x4d
 	0010cf30 farpush ax
 	0010cf38 setfuncargs 0x2
 	0010cf40 mov ax,0x6e6f20
 	0010cf4c farcall ax
 	0010cf54 farsubsp 0x2
 	0010cf5c jmp 0x0010d24c
		0010d24c: UNCONDITIONAL_JUMP

	[0010cf64]
		0010cedc: CONDITIONAL_JUMP
 	0010cf64 sourceline 0x3d0
 	0010cf6c mov ax,0x3
 	0010cf78 mov bx,ax
 	0010cf84 mov mar,0x3cef20
 	0010cf90 mov ax,mar
 	0010cf9c push op
 	0010cfa4 mov op,ax
 	0010cfac farpush bx
 	0010cfb4 setfuncargs 0x1
 	0010cfbc mov ax,0x69ef20
 	0010cfc8 farcall ax
 	0010cfd0 farsubsp 0x1
 	0010cfd8 pop op
 	0010cfe0 sourceline 0x3d1
 	0010cfe8 push op
 	0010cff0 mov ax,0x397
 	0010cffc farpush ax
 	0010d004 mov ax,0x0
 	0010d010 farpush ax
 	0010d018 mov mar,0x3cef20
 	0010d024 mov ax,mar
 	0010d030 mov op,ax
 	0010d038 setfuncargs 0x2
 	0010d040 mov ax,0x6eef20
 	0010d04c farcall ax
 	0010d054 farsubsp 0x2
 	0010d05c pop op
 	0010d064 sourceline 0x3d2
 	0010d06c push op
 	0010d074 mov ax,0x2b5856
 	0010d080 farpush ax
 	0010d088 mov mar,0x3cef20
 	0010d094 mov ax,mar
 	0010d0a0 mov op,ax
 	0010d0a8 setfuncargs 0x1
 	0010d0b0 mov ax,0x6f6f20
 	0010d0bc farcall ax
 	0010d0c4 farsubsp 0x1
 	0010d0cc pop op
 	0010d0d4 sourceline 0x3d3
 	0010d0dc mov mar,0x6b6f20
 	0010d0e8 mov ax,mar
 	0010d0f4 push op
 	0010d0fc mov op,ax
 	0010d104 setfuncargs 0x0
 	0010d10c mov ax,0x516f20
 	0010d118 farcall ax
 	0010d120 pop op
 	0010d128 push ax
 	0010d130 mov ax,0x33
 	0010d13c pop bx
 	0010d144 cmpeq bx,ax
 	0010d150 mov ax,bx
 	0010d15c jz 0x0010d1f8
		0010d1f8: CONDITIONAL_JUMP
		0010d164: FALL_THROUGH

	[0010d164]
		0010cf64: FALL_THROUGH
 	0010d164 sourceline 0x3d5
 	0010d16c mov mar,0x6b6f20
 	0010d178 mov ax,mar
 	0010d184 push op
 	0010d18c mov op,ax
 	0010d194 setfuncargs 0x0
 	0010d19c mov ax,0x50ef20
 	0010d1a8 farcall ax
 	0010d1b0 pop op
 	0010d1b8 jz 0x0010d1f8
		0010d1f8: CONDITIONAL_JUMP
		0010d1c0: FALL_THROUGH

	[0010d1c0]
		0010d164: FALL_THROUGH
 	0010d1c0 mov ax,0x96
 	0010d1cc farpush ax
 	0010d1d4 setfuncargs 0x1
 	0010d1dc mov ax,0x426f20
 	0010d1e8 farcall ax
 	0010d1f0 farsubsp 0x1
		0010d1f8: FALL_THROUGH

	[0010d1f8]
		0010cf64: CONDITIONAL_JUMP
		0010d164: CONDITIONAL_JUMP
		0010d1c0: FALL_THROUGH
 	0010d1f8 sourceline 0x3d7
 	0010d200 push op
 	0010d208 mov mar,0x6cef20
 	0010d214 mov ax,mar
 	0010d220 mov op,ax
 	0010d228 setfuncargs 0x0
 	0010d230 mov ax,0x71ef20
 	0010d23c farcall ax
 	0010d244 pop op
		0010d24c: FALL_THROUGH

	[0010d24c]
		0010cf10: UNCONDITIONAL_JUMP
		0010d1f8: FALL_THROUGH
 	0010d24c sourceline 0x3d9
 	0010d254 jmp 0x0010d41c
		0010d41c: UNCONDITIONAL_JUMP

	[0010d25c]
		0010ceb0: CONDITIONAL_JUMP
 	0010d25c sourceline 0x3dc
 	0010d264 push op
 	0010d26c mov ax,0x397
 	0010d278 farpush ax
 	0010d280 mov ax,0xc7
 	0010d28c farpush ax
 	0010d294 mov ax,0x44
 	0010d2a0 farpush ax
 	0010d2a8 mov mar,0x3cef20
 	0010d2b4 mov ax,mar
 	0010d2c0 mov op,ax
 	0010d2c8 setfuncargs 0x3
 	0010d2d0 mov ax,0x726f20
 	0010d2dc farcall ax
 	0010d2e4 farsubsp 0x3
 	0010d2ec pop op
 	0010d2f4 sourceline 0x3dd
 	0010d2fc mov ax,0x1
 	0010d308 mov bx,ax
 	0010d314 mov mar,0x3cef20
 	0010d320 mov ax,mar
 	0010d32c push op
 	0010d334 mov op,ax
 	0010d33c farpush bx
 	0010d344 setfuncargs 0x1
 	0010d34c mov ax,0x69ef20
 	0010d358 farcall ax
 	0010d360 farsubsp 0x1
 	0010d368 pop op
 	0010d370 sourceline 0x3de
 	0010d378 push op
 	0010d380 mov ax,0x2b5861
 	0010d38c farpush ax
 	0010d394 mov ax,0x138
 	0010d3a0 farpush ax
 	0010d3a8 mov ax,0x92
 	0010d3b4 farpush ax
 	0010d3bc mov ax,0x0
 	0010d3c8 farpush ax
 	0010d3d0 mov mar,0x3cef20
 	0010d3dc mov ax,mar
 	0010d3e8 mov op,ax
 	0010d3f0 setfuncargs 0x4
 	0010d3f8 mov ax,0x6aef20
 	0010d404 farcall ax
 	0010d40c farsubsp 0x4
 	0010d414 pop op
		0010d41c: FALL_THROUGH

	[0010d41c]
		0010ca5c: UNCONDITIONAL_JUMP
		0010ca90: UNCONDITIONAL_JUMP
		0010cce0: UNCONDITIONAL_JUMP
		0010d24c: UNCONDITIONAL_JUMP
		0010d25c: FALL_THROUGH
 	0010d41c sourceline 0x3e3
 	0010d424 jmp 0x0010d4d8
		0010d4d8: UNCONDITIONAL_JUMP

	[0010d42c]
		0010bd20: CONDITIONAL_JUMP
 	0010d42c sourceline 0x3e4
 	0010d434 push op
 	0010d43c mov ax,0x2b5909
 	0010d448 farpush ax
 	0010d450 mov ax,0x138
 	0010d45c farpush ax
 	0010d464 mov ax,0x92
 	0010d470 farpush ax
 	0010d478 mov ax,0x0
 	0010d484 farpush ax
 	0010d48c mov mar,0x3cef20
 	0010d498 mov ax,mar
 	0010d4a4 mov op,ax
 	0010d4ac setfuncargs 0x4
 	0010d4b4 mov ax,0x6aef20
 	0010d4c0 farcall ax
 	0010d4c8 farsubsp 0x4
 	0010d4d0 pop op
		0010d4d8: FALL_THROUGH

	[0010d4d8]
		0010d41c: UNCONDITIONAL_JUMP
		0010d42c: FALL_THROUGH
 	0010d4d8 sourceline 0x3e5
 	0010d4e0 stackptr 0x4
 	0010d4e8 memzero.ptr
 	0010d4ec sub sp,0x4
 	0010d4f8 jmp 0x0010d5ac
		0010d5ac: UNCONDITIONAL_JUMP

	[0010d500]
		0010bc50: CONDITIONAL_JUMP
 	0010d500 sourceline 0x3e6
 	0010d508 push op
 	0010d510 mov ax,0x2b5909
 	0010d51c farpush ax
 	0010d524 mov ax,0x138
 	0010d530 farpush ax
 	0010d538 mov ax,0x92
 	0010d544 farpush ax
 	0010d54c mov ax,0x0
 	0010d558 farpush ax
 	0010d560 mov mar,0x3cef20
 	0010d56c mov ax,mar
 	0010d578 mov op,ax
 	0010d580 setfuncargs 0x4
 	0010d588 mov ax,0x6aef20
 	0010d594 farcall ax
 	0010d59c farsubsp 0x4
 	0010d5a4 pop op
		0010d5ac: FALL_THROUGH

	[0010d5ac]
		0010d4d8: UNCONDITIONAL_JUMP
		0010d500: FALL_THROUGH
 	0010d5ac sourceline 0x3e7
 	0010d5b4 jmp 0x0010d668
		0010d668: UNCONDITIONAL_JUMP

	[0010d5bc]
		0010bbc0: CONDITIONAL_JUMP
 	0010d5bc sourceline 0x3e8
 	0010d5c4 push op
 	0010d5cc mov ax,0x2b5909
 	0010d5d8 farpush ax
 	0010d5e0 mov ax,0x138
 	0010d5ec farpush ax
 	0010d5f4 mov ax,0x92
 	0010d600 farpush ax
 	0010d608 mov ax,0x0
 	0010d614 farpush ax
 	0010d61c mov mar,0x3cef20
 	0010d628 mov ax,mar
 	0010d634 mov op,ax
 	0010d63c setfuncargs 0x4
 	0010d644 mov ax,0x6aef20
 	0010d650 farcall ax
 	0010d658 farsubsp 0x4
 	0010d660 pop op
		0010d668: FALL_THROUGH

	[0010d668]
		0010bb6c: CONDITIONAL_JUMP
		0010d5ac: UNCONDITIONAL_JUMP
		0010d5bc: FALL_THROUGH
 	0010d668 sourceline 0x3ea
 	0010d670 stackptr 0xc
 	0010d678 memread4 ax
 	0010d680 push ax
 	0010d688 mov ax,0x3
 	0010d694 pop bx
 	0010d69c cmpeq bx,ax
 	0010d6a8 mov ax,bx
 	0010d6b4 jz 0x0010d720
		0010d720: CONDITIONAL_JUMP
		0010d6bc: FALL_THROUGH

	[0010d6bc]
		0010d668: FALL_THROUGH
 	0010d6bc sourceline 0x3ec
 	0010d6c4 mov mar,0x30ef20
 	0010d6d0 mov ax,mar
 	0010d6dc push op
 	0010d6e4 mov op,ax
 	0010d6ec setfuncargs 0x0
 	0010d6f4 mov ax,0x316f20
 	0010d700 farcall ax
 	0010d708 pop op
 	0010d710 lnot ax
 	0010d718 jz 0x0010d720
		0010d720: CONDITIONAL_JUMP
		0010d720: FALL_THROUGH

	[0010d720]
		0010ba48: CONDITIONAL_JUMP
		0010d668: CONDITIONAL_JUMP
		0010d6bc: CONDITIONAL_JUMP
		0010d6bc: FALL_THROUGH
 	0010d720 sourceline 0x3f2
 	0010d728 stackptr 0x8
 	0010d730 memread4 ax
 	0010d738 push ax
 	0010d740 mov ax,0x5
 	0010d74c pop bx
 	0010d754 cmpeq bx,ax
 	0010d760 mov ax,bx
 	0010d76c jz 0x0010de58
		0010de58: CONDITIONAL_JUMP
		0010d774: FALL_THROUGH

	[0010d774]
		0010d720: FALL_THROUGH
 	0010d774 sourceline 0x3f4
 	0010d77c mov ax,0x1
 	0010d788 mov bx,ax
 	0010d794 mov mar,0x3cef20
 	0010d7a0 mov ax,mar
 	0010d7ac push op
 	0010d7b4 mov op,ax
 	0010d7bc farpush bx
 	0010d7c4 setfuncargs 0x1
 	0010d7cc mov ax,0x69ef20
 	0010d7d8 farcall ax
 	0010d7e0 farsubsp 0x1
 	0010d7e8 pop op
 	0010d7f0 sourceline 0x3f5
 	0010d7f8 stackptr 0xc
 	0010d800 memread4 ax
 	0010d808 push ax
 	0010d810 mov ax,0x0
 	0010d81c pop bx
 	0010d824 cmpeq bx,ax
 	0010d830 mov ax,bx
 	0010d83c jz 0x0010d844
		0010d844: CONDITIONAL_JUMP
		0010d844: FALL_THROUGH

	[0010d844]
		0010d774: CONDITIONAL_JUMP
		0010d774: FALL_THROUGH
 	0010d844 sourceline 0x3f9
 	0010d84c stackptr 0xc
 	0010d854 memread4 ax
 	0010d85c push ax
 	0010d864 mov ax,0x1
 	0010d870 pop bx
 	0010d878 cmpeq bx,ax
 	0010d884 mov ax,bx
 	0010d890 jz 0x0010d898
		0010d898: CONDITIONAL_JUMP
		0010d898: FALL_THROUGH

	[0010d898]
		0010d844: CONDITIONAL_JUMP
		0010d844: FALL_THROUGH
 	0010d898 sourceline 0x3fd
 	0010d8a0 stackptr 0xc
 	0010d8a8 memread4 ax
 	0010d8b0 push ax
 	0010d8b8 mov ax,0x3
 	0010d8c4 pop bx
 	0010d8cc cmpeq bx,ax
 	0010d8d8 mov ax,bx
 	0010d8e4 jz 0x0010de58
		0010de58: CONDITIONAL_JUMP
		0010d8ec: FALL_THROUGH

	[0010d8ec]
		0010d898: FALL_THROUGH
 	0010d8ec sourceline 0x3ff
 	0010d8f4 mov ax,0x4
 	0010d900 farpush ax
 	0010d908 setfuncargs 0x1
 	0010d910 mov ax,0x4a6f20
 	0010d91c farcall ax
 	0010d924 farsubsp 0x1
 	0010d92c mov mar,sp
 	0010d938 memwrite4 ax
 	0010d940 add sp,0x4
 	0010d94c sourceline 0x400
 	0010d954 stackptr 0x4
 	0010d95c memread4 ax
 	0010d964 push ax
 	0010d96c mov ax,0x0
 	0010d978 pop bx
 	0010d980 cmpeq bx,ax
 	0010d98c mov ax,bx
 	0010d998 jz 0x0010da4c
		0010da4c: CONDITIONAL_JUMP
		0010d9a0: FALL_THROUGH

	[0010d9a0]
		0010d8ec: FALL_THROUGH
 	0010d9a0 push op
 	0010d9a8 mov ax,0x2b594b
 	0010d9b4 farpush ax
 	0010d9bc mov ax,0x138
 	0010d9c8 farpush ax
 	0010d9d0 mov ax,0x92
 	0010d9dc farpush ax
 	0010d9e4 mov ax,0x0
 	0010d9f0 farpush ax
 	0010d9f8 mov mar,0x3cef20
 	0010da04 mov ax,mar
 	0010da10 mov op,ax
 	0010da18 setfuncargs 0x4
 	0010da20 mov ax,0x6aef20
 	0010da2c farcall ax
 	0010da34 farsubsp 0x4
 	0010da3c pop op
 	0010da44 jmp 0x0010de44
		0010de44: UNCONDITIONAL_JUMP

	[0010da4c]
		0010d8ec: CONDITIONAL_JUMP
 	0010da4c sourceline 0x401
 	0010da54 stackptr 0x4
 	0010da5c memread4 ax
 	0010da64 push ax
 	0010da6c mov ax,0x1
 	0010da78 pop bx
 	0010da80 cmpeq bx,ax
 	0010da8c mov ax,bx
 	0010da98 jz 0x0010db4c
		0010db4c: CONDITIONAL_JUMP
		0010daa0: FALL_THROUGH

	[0010daa0]
		0010da4c: FALL_THROUGH
 	0010daa0 push op
 	0010daa8 mov ax,0x2b5972
 	0010dab4 farpush ax
 	0010dabc mov ax,0x138
 	0010dac8 farpush ax
 	0010dad0 mov ax,0x92
 	0010dadc farpush ax
 	0010dae4 mov ax,0x0
 	0010daf0 farpush ax
 	0010daf8 mov mar,0x3cef20
 	0010db04 mov ax,mar
 	0010db10 mov op,ax
 	0010db18 setfuncargs 0x4
 	0010db20 mov ax,0x6aef20
 	0010db2c farcall ax
 	0010db34 farsubsp 0x4
 	0010db3c pop op
 	0010db44 jmp 0x0010de44
		0010de44: UNCONDITIONAL_JUMP

	[0010db4c]
		0010da4c: CONDITIONAL_JUMP
 	0010db4c sourceline 0x402
 	0010db54 stackptr 0x4
 	0010db5c memread4 ax
 	0010db64 push ax
 	0010db6c mov ax,0x2
 	0010db78 pop bx
 	0010db80 cmpeq bx,ax
 	0010db8c mov ax,bx
 	0010db98 jz 0x0010dc4c
		0010dc4c: CONDITIONAL_JUMP
		0010dba0: FALL_THROUGH

	[0010dba0]
		0010db4c: FALL_THROUGH
 	0010dba0 push op
 	0010dba8 mov ax,0x2b5991
 	0010dbb4 farpush ax
 	0010dbbc mov ax,0x138
 	0010dbc8 farpush ax
 	0010dbd0 mov ax,0x92
 	0010dbdc farpush ax
 	0010dbe4 mov ax,0x0
 	0010dbf0 farpush ax
 	0010dbf8 mov mar,0x3cef20
 	0010dc04 mov ax,mar
 	0010dc10 mov op,ax
 	0010dc18 setfuncargs 0x4
 	0010dc20 mov ax,0x6aef20
 	0010dc2c farcall ax
 	0010dc34 farsubsp 0x4
 	0010dc3c pop op
 	0010dc44 jmp 0x0010de44
		0010de44: UNCONDITIONAL_JUMP

	[0010dc4c]
		0010db4c: CONDITIONAL_JUMP
 	0010dc4c sourceline 0x403
 	0010dc54 stackptr 0x4
 	0010dc5c memread4 ax
 	0010dc64 push ax
 	0010dc6c mov ax,0x3
 	0010dc78 pop bx
 	0010dc80 cmpeq bx,ax
 	0010dc8c mov ax,bx
 	0010dc98 jz 0x0010dd4c
		0010dd4c: CONDITIONAL_JUMP
		0010dca0: FALL_THROUGH

	[0010dca0]
		0010dc4c: FALL_THROUGH
 	0010dca0 push op
 	0010dca8 mov ax,0x2b59ad
 	0010dcb4 farpush ax
 	0010dcbc mov ax,0x138
 	0010dcc8 farpush ax
 	0010dcd0 mov ax,0x92
 	0010dcdc farpush ax
 	0010dce4 mov ax,0x0
 	0010dcf0 farpush ax
 	0010dcf8 mov mar,0x3cef20
 	0010dd04 mov ax,mar
 	0010dd10 mov op,ax
 	0010dd18 setfuncargs 0x4
 	0010dd20 mov ax,0x6aef20
 	0010dd2c farcall ax
 	0010dd34 farsubsp 0x4
 	0010dd3c pop op
 	0010dd44 jmp 0x0010de44
		0010de44: UNCONDITIONAL_JUMP

	[0010dd4c]
		0010dc4c: CONDITIONAL_JUMP
 	0010dd4c sourceline 0x404
 	0010dd54 stackptr 0x4
 	0010dd5c memread4 ax
 	0010dd64 push ax
 	0010dd6c mov ax,0x4
 	0010dd78 pop bx
 	0010dd80 cmpeq bx,ax
 	0010dd8c mov ax,bx
 	0010dd98 jz 0x0010de44
		0010de44: CONDITIONAL_JUMP
		0010dda0: FALL_THROUGH

	[0010dda0]
		0010dd4c: FALL_THROUGH
 	0010dda0 push op
 	0010dda8 mov ax,0x2b59d0
 	0010ddb4 farpush ax
 	0010ddbc mov ax,0x138
 	0010ddc8 farpush ax
 	0010ddd0 mov ax,0x92
 	0010dddc farpush ax
 	0010dde4 mov ax,0x0
 	0010ddf0 farpush ax
 	0010ddf8 mov mar,0x3cef20
 	0010de04 mov ax,mar
 	0010de10 mov op,ax
 	0010de18 setfuncargs 0x4
 	0010de20 mov ax,0x6aef20
 	0010de2c farcall ax
 	0010de34 farsubsp 0x4
 	0010de3c pop op
		0010de44: FALL_THROUGH

	[0010de44]
		0010d9a0: UNCONDITIONAL_JUMP
		0010daa0: UNCONDITIONAL_JUMP
		0010dba0: UNCONDITIONAL_JUMP
		0010dca0: UNCONDITIONAL_JUMP
		0010dd4c: CONDITIONAL_JUMP
		0010dda0: FALL_THROUGH
 	0010de44 sourceline 0x405
 	0010de4c sub sp,0x4
		0010de58: FALL_THROUGH

	[0010de58]
		0010d720: CONDITIONAL_JUMP
		0010d898: CONDITIONAL_JUMP
		0010de44: FALL_THROUGH
 	0010de58 sourceline 0x407
 	0010de60 mov ax,0x0
 	0010de6c ret

iPhone_Look$0:
	[0010de98]
 	0010de98 sourceline 0x41d
 	0010dea0 thisaddr
 	0010dea8 sourceline 0x41e
*	0010deb0 mov mar,0x42ef20
 	0010debc push mar
 	0010dec4 pop mar
 	0010decc memread.ptr ax
 	0010ded4 push ax
 	0010dedc pop mar
 	0010dee4 mov ax,mar
 	0010def0 push op
 	0010def8 mov op,ax
 	0010df00 setfuncargs 0x0
 	0010df08 mov ax,0x3d6f20
 	0010df14 farcall ax
 	0010df1c pop op
 	0010df24 push ax
 	0010df2c mov ax,0x6
 	0010df38 pop bx
 	0010df40 cmpeq bx,ax
 	0010df4c mov ax,bx
 	0010df58 jz 0x0010e0a0
		0010e0a0: CONDITIONAL_JUMP
		0010df60: FALL_THROUGH

	[0010df60]
		0010de98: FALL_THROUGH
 	0010df60 sourceline 0x420
 	0010df68 mov ax,0x1
 	0010df74 mov bx,ax
 	0010df80 mov mar,0x3cef20
 	0010df8c mov ax,mar
 	0010df98 push op
 	0010dfa0 mov op,ax
 	0010dfa8 farpush bx
 	0010dfb0 setfuncargs 0x1
 	0010dfb8 mov ax,0x69ef20
 	0010dfc4 farcall ax
 	0010dfcc farsubsp 0x1
 	0010dfd4 pop op
 	0010dfdc sourceline 0x421
 	0010dfe4 push op
 	0010dfec mov ax,0x2bd429
 	0010dff8 farpush ax
 	0010e000 mov ax,0x138
 	0010e00c farpush ax
 	0010e014 mov ax,0x92
 	0010e020 farpush ax
 	0010e028 mov ax,0x0
 	0010e034 farpush ax
 	0010e03c mov mar,0x3cef20
 	0010e048 mov ax,mar
 	0010e054 mov op,ax
 	0010e05c setfuncargs 0x4
 	0010e064 mov ax,0x6aef20
 	0010e070 farcall ax
 	0010e078 farsubsp 0x4
 	0010e080 pop op
 	0010e088 sourceline 0x422
 	0010e090 mov ax,0x0
 	0010e09c ret

	[0010e0a0]
		0010de98: CONDITIONAL_JUMP
 	0010e0a0 sourceline 0x424
 	0010e0a8 mov mar,0x42ef20
 	0010e0b4 push mar
 	0010e0bc pop mar
 	0010e0c4 memread.ptr ax
 	0010e0cc push ax
 	0010e0d4 pop mar
 	0010e0dc mov ax,mar
 	0010e0e8 push op
 	0010e0f0 mov op,ax
 	0010e0f8 setfuncargs 0x0
 	0010e100 mov ax,0x3d6f20
 	0010e10c farcall ax
 	0010e114 pop op
 	0010e11c push ax
 	0010e124 mov ax,0xd
 	0010e130 pop bx
 	0010e138 cmpeq bx,ax
 	0010e144 mov ax,bx
 	0010e150 jz 0x0010e328
		0010e328: CONDITIONAL_JUMP
		0010e158: FALL_THROUGH

	[0010e158]
		0010e0a0: FALL_THROUGH
 	0010e158 sourceline 0x426
 	0010e160 mov mar,0x746f20
 	0010e16c mov ax,mar
 	0010e178 push op
 	0010e180 mov op,ax
 	0010e188 setfuncargs 0x0
 	0010e190 mov ax,0x516f20
 	0010e19c farcall ax
 	0010e1a4 pop op
 	0010e1ac push ax
 	0010e1b4 mov ax,0x44
 	0010e1c0 pop bx
 	0010e1c8 cmpneq bx,ax
 	0010e1d4 mov ax,bx
 	0010e1e0 jz 0x0010e328
		0010e328: CONDITIONAL_JUMP
		0010e1e8: FALL_THROUGH

	[0010e1e8]
		0010e158: FALL_THROUGH
 	0010e1e8 sourceline 0x428
 	0010e1f0 mov ax,0x1
 	0010e1fc mov bx,ax
 	0010e208 mov mar,0x3cef20
 	0010e214 mov ax,mar
 	0010e220 push op
 	0010e228 mov op,ax
 	0010e230 farpush bx
 	0010e238 setfuncargs 0x1
 	0010e240 mov ax,0x69ef20
 	0010e24c farcall ax
 	0010e254 farsubsp 0x1
 	0010e25c pop op
 	0010e264 sourceline 0x429
 	0010e26c push op
 	0010e274 mov ax,0x2c7f84
 	0010e280 farpush ax
 	0010e288 mov ax,0x138
 	0010e294 farpush ax
 	0010e29c mov ax,0x92
 	0010e2a8 farpush ax
 	0010e2b0 mov ax,0x0
 	0010e2bc farpush ax
 	0010e2c4 mov mar,0x3cef20
 	0010e2d0 mov ax,mar
 	0010e2dc mov op,ax
 	0010e2e4 setfuncargs 0x4
 	0010e2ec mov ax,0x6aef20
 	0010e2f8 farcall ax
 	0010e300 farsubsp 0x4
 	0010e308 pop op
 	0010e310 sourceline 0x42a
 	0010e318 mov ax,0x0
 	0010e324 ret

	[0010e328]
		0010e0a0: CONDITIONAL_JUMP
		0010e158: CONDITIONAL_JUMP
 	0010e328 sourceline 0x42d
 	0010e330 mov mar,0x42ef20
 	0010e33c push mar
 	0010e344 pop mar
 	0010e34c memread.ptr ax
 	0010e354 push ax
 	0010e35c pop mar
 	0010e364 mov ax,mar
 	0010e370 push op
 	0010e378 mov op,ax
 	0010e380 setfuncargs 0x0
 	0010e388 mov ax,0x3d6f20
 	0010e394 farcall ax
 	0010e39c pop op
 	0010e3a4 push ax
 	0010e3ac mov ax,0xa
 	0010e3b8 pop bx
 	0010e3c0 cmpeq bx,ax
 	0010e3cc mov ax,bx
 	0010e3d8 jz 0x0010e5a8
		0010e5a8: CONDITIONAL_JUMP
		0010e3e0: FALL_THROUGH

	[0010e3e0]
		0010e328: FALL_THROUGH
 	0010e3e0 sourceline 0x42f
 	0010e3e8 mov mar,0x74ef20
 	0010e3f4 memread4 ax
 	0010e3fc jz 0x0010e554
		0010e554: CONDITIONAL_JUMP
		0010e404: FALL_THROUGH

	[0010e404]
		0010e3e0: FALL_THROUGH
 	0010e404 sourceline 0x431
 	0010e40c mov ax,0x1
 	0010e418 mov bx,ax
 	0010e424 mov mar,0x3cef20
 	0010e430 mov ax,mar
 	0010e43c push op
 	0010e444 mov op,ax
 	0010e44c farpush bx
 	0010e454 setfuncargs 0x1
 	0010e45c mov ax,0x69ef20
 	0010e468 farcall ax
 	0010e470 farsubsp 0x1
 	0010e478 pop op
 	0010e480 sourceline 0x432
 	0010e488 push op
 	0010e490 mov ax,0x2c7f84
 	0010e49c farpush ax
 	0010e4a4 mov ax,0x138
 	0010e4b0 farpush ax
 	0010e4b8 mov ax,0x92
 	0010e4c4 farpush ax
 	0010e4cc mov ax,0x0
 	0010e4d8 farpush ax
 	0010e4e0 mov mar,0x3cef20
 	0010e4ec mov ax,mar
 	0010e4f8 mov op,ax
 	0010e500 setfuncargs 0x4
 	0010e508 mov ax,0x6aef20
 	0010e514 farcall ax
 	0010e51c farsubsp 0x4
 	0010e524 pop op
 	0010e52c sourceline 0x433
 	0010e534 mov ax,0x0
 	0010e540 ret

	[0010e554]
		0010e3e0: CONDITIONAL_JUMP
 	0010e554 sourceline 0x435
 	0010e55c mov ax,0x0
 	0010e568 farpush ax
 	0010e570 mov ax,0x4
 	0010e57c farpush ax
 	0010e584 setfuncargs 0x2
 	0010e58c mov ax,0x756f20
 	0010e598 farcall ax
 	0010e5a0 farsubsp 0x2
		0010e5a8: FALL_THROUGH

	[0010e5a8]
		0010e328: CONDITIONAL_JUMP
		0010e554: FALL_THROUGH
 	0010e5a8 sourceline 0x437
 	0010e5b0 mov mar,0x42ef20
 	0010e5bc push mar
 	0010e5c4 pop mar
 	0010e5cc memread.ptr ax
 	0010e5d4 push ax
 	0010e5dc pop mar
 	0010e5e4 mov ax,mar
 	0010e5f0 push op
 	0010e5f8 mov op,ax
 	0010e600 setfuncargs 0x0
 	0010e608 mov ax,0x3d6f20
 	0010e614 farcall ax
 	0010e61c pop op
 	0010e624 push ax
 	0010e62c mov ax,0x18
 	0010e638 pop bx
 	0010e640 cmpeq bx,ax
 	0010e64c mov ax,bx
 	0010e658 jnz 0x0010e730
		0010e730: CONDITIONAL_JUMP
		0010e660: FALL_THROUGH

	[0010e660]
		0010e5a8: FALL_THROUGH
 	0010e660 push ax
 	0010e668 mov mar,0x42ef20
 	0010e674 push mar
 	0010e67c pop mar
 	0010e684 memread.ptr ax
 	0010e68c push ax
 	0010e694 pop mar
 	0010e69c mov ax,mar
 	0010e6a8 push op
 	0010e6b0 mov op,ax
 	0010e6b8 setfuncargs 0x0
 	0010e6c0 mov ax,0x3d6f20
 	0010e6cc farcall ax
 	0010e6d4 pop op
 	0010e6dc push ax
 	0010e6e4 mov ax,0x19
 	0010e6f0 pop bx
 	0010e6f8 cmpeq bx,ax
 	0010e704 mov ax,bx
 	0010e710 pop bx
 	0010e718 lor bx,ax
 	0010e724 mov ax,bx
		0010e730: FALL_THROUGH

	[0010e730]
		0010e5a8: CONDITIONAL_JUMP
		0010e660: FALL_THROUGH
 	0010e730 jnz 0x0010e808
		0010e808: CONDITIONAL_JUMP
		0010e738: FALL_THROUGH

	[0010e738]
		0010e730: FALL_THROUGH
 	0010e738 push ax
 	0010e740 mov mar,0x42ef20
 	0010e74c push mar
 	0010e754 pop mar
 	0010e75c memread.ptr ax
 	0010e764 push ax
 	0010e76c pop mar
 	0010e774 mov ax,mar
 	0010e780 push op
 	0010e788 mov op,ax
 	0010e790 setfuncargs 0x0
 	0010e798 mov ax,0x3d6f20
 	0010e7a4 farcall ax
 	0010e7ac pop op
 	0010e7b4 push ax
 	0010e7bc mov ax,0x1a
 	0010e7c8 pop bx
 	0010e7d0 cmpeq bx,ax
 	0010e7dc mov ax,bx
 	0010e7e8 pop bx
 	0010e7f0 lor bx,ax
 	0010e7fc mov ax,bx
		0010e808: FALL_THROUGH

	[0010e808]
		0010e730: CONDITIONAL_JUMP
		0010e738: FALL_THROUGH
 	0010e808 jnz 0x0010e8e0
		0010e8e0: CONDITIONAL_JUMP
		0010e810: FALL_THROUGH

	[0010e810]
		0010e808: FALL_THROUGH
 	0010e810 push ax
 	0010e818 mov mar,0x42ef20
 	0010e824 push mar
 	0010e82c pop mar
 	0010e834 memread.ptr ax
 	0010e83c push ax
 	0010e844 pop mar
 	0010e84c mov ax,mar
 	0010e858 push op
 	0010e860 mov op,ax
 	0010e868 setfuncargs 0x0
 	0010e870 mov ax,0x3d6f20
 	0010e87c farcall ax
 	0010e884 pop op
 	0010e88c push ax
 	0010e894 mov ax,0x1b
 	0010e8a0 pop bx
 	0010e8a8 cmpeq bx,ax
 	0010e8b4 mov ax,bx
 	0010e8c0 pop bx
 	0010e8c8 lor bx,ax
 	0010e8d4 mov ax,bx
		0010e8e0: FALL_THROUGH

	[0010e8e0]
		0010e808: CONDITIONAL_JUMP
		0010e810: FALL_THROUGH
 	0010e8e0 jnz 0x0010e9b8
		0010e9b8: CONDITIONAL_JUMP
		0010e8e8: FALL_THROUGH

	[0010e8e8]
		0010e8e0: FALL_THROUGH
 	0010e8e8 push ax
 	0010e8f0 mov mar,0x42ef20
 	0010e8fc push mar
 	0010e904 pop mar
 	0010e90c memread.ptr ax
 	0010e914 push ax
 	0010e91c pop mar
 	0010e924 mov ax,mar
 	0010e930 push op
 	0010e938 mov op,ax
 	0010e940 setfuncargs 0x0
 	0010e948 mov ax,0x3d6f20
 	0010e954 farcall ax
 	0010e95c pop op
 	0010e964 push ax
 	0010e96c mov ax,0x1c
 	0010e978 pop bx
 	0010e980 cmpeq bx,ax
 	0010e98c mov ax,bx
 	0010e998 pop bx
 	0010e9a0 lor bx,ax
 	0010e9ac mov ax,bx
		0010e9b8: FALL_THROUGH

	[0010e9b8]
		0010e8e0: CONDITIONAL_JUMP
		0010e8e8: FALL_THROUGH
 	0010e9b8 jnz 0x0010ea90
		0010ea90: CONDITIONAL_JUMP
		0010e9c0: FALL_THROUGH

	[0010e9c0]
		0010e9b8: FALL_THROUGH
 	0010e9c0 push ax
 	0010e9c8 mov mar,0x42ef20
 	0010e9d4 push mar
 	0010e9dc pop mar
 	0010e9e4 memread.ptr ax
 	0010e9ec push ax
 	0010e9f4 pop mar
 	0010e9fc mov ax,mar
 	0010ea08 push op
 	0010ea10 mov op,ax
 	0010ea18 setfuncargs 0x0
 	0010ea20 mov ax,0x3d6f20
 	0010ea2c farcall ax
 	0010ea34 pop op
 	0010ea3c push ax
 	0010ea44 mov ax,0x1e
 	0010ea50 pop bx
 	0010ea58 cmpeq bx,ax
 	0010ea64 mov ax,bx
 	0010ea70 pop bx
 	0010ea78 lor bx,ax
 	0010ea84 mov ax,bx
		0010ea90: FALL_THROUGH

	[0010ea90]
		0010e9b8: CONDITIONAL_JUMP
		0010e9c0: FALL_THROUGH
 	0010ea90 jz 0x0010ebd8
		0010ebd8: CONDITIONAL_JUMP
		0010ea98: FALL_THROUGH

	[0010ea98]
		0010ea90: FALL_THROUGH
 	0010ea98 sourceline 0x439
 	0010eaa0 mov ax,0x1
 	0010eaac mov bx,ax
 	0010eab8 mov mar,0x3cef20
 	0010eac4 mov ax,mar
 	0010ead0 push op
 	0010ead8 mov op,ax
 	0010eae0 farpush bx
 	0010eae8 setfuncargs 0x1
 	0010eaf0 mov ax,0x69ef20
 	0010eafc farcall ax
 	0010eb04 farsubsp 0x1
 	0010eb0c pop op
 	0010eb14 sourceline 0x43a
 	0010eb1c push op
 	0010eb24 mov ax,0x2bd470
 	0010eb30 farpush ax
 	0010eb38 mov ax,0x138
 	0010eb44 farpush ax
 	0010eb4c mov ax,0x92
 	0010eb58 farpush ax
 	0010eb60 mov ax,0x0
 	0010eb6c farpush ax
 	0010eb74 mov mar,0x3cef20
 	0010eb80 mov ax,mar
 	0010eb8c mov op,ax
 	0010eb94 setfuncargs 0x4
 	0010eb9c mov ax,0x6aef20
 	0010eba8 farcall ax
 	0010ebb0 farsubsp 0x4
 	0010ebb8 pop op
 	0010ebc0 sourceline 0x43b
 	0010ebc8 mov ax,0x0
 	0010ebd4 ret

	[0010ebd8]
		0010ea90: CONDITIONAL_JUMP
 	0010ebd8 sourceline 0x43d
 	0010ebe0 mov mar,0x42ef20
 	0010ebec push mar
 	0010ebf4 pop mar
 	0010ebfc memread.ptr ax
 	0010ec04 push ax
 	0010ec0c pop mar
 	0010ec14 mov ax,mar
 	0010ec20 push op
 	0010ec28 mov op,ax
 	0010ec30 setfuncargs 0x0
 	0010ec38 mov ax,0x3d6f20
 	0010ec44 farcall ax
 	0010ec4c pop op
 	0010ec54 push ax
 	0010ec5c mov ax,0x23
 	0010ec68 pop bx
 	0010ec70 cmpeq bx,ax
 	0010ec7c mov ax,bx
 	0010ec88 jnz 0x0010ed60
		0010ed60: CONDITIONAL_JUMP
		0010ec90: FALL_THROUGH

	[0010ec90]
		0010ebd8: FALL_THROUGH
 	0010ec90 push ax
 	0010ec98 mov mar,0x42ef20
 	0010eca4 push mar
 	0010ecac pop mar
 	0010ecb4 memread.ptr ax
 	0010ecbc push ax
 	0010ecc4 pop mar
 	0010eccc mov ax,mar
 	0010ecd8 push op
 	0010ece0 mov op,ax
 	0010ece8 setfuncargs 0x0
 	0010ecf0 mov ax,0x3d6f20
 	0010ecfc farcall ax
 	0010ed04 pop op
 	0010ed0c push ax
 	0010ed14 mov ax,0x1d
 	0010ed20 pop bx
 	0010ed28 cmpeq bx,ax
 	0010ed34 mov ax,bx
 	0010ed40 pop bx
 	0010ed48 lor bx,ax
 	0010ed54 mov ax,bx
		0010ed60: FALL_THROUGH

	[0010ed60]
		0010ebd8: CONDITIONAL_JUMP
		0010ec90: FALL_THROUGH
 	0010ed60 jnz 0x0010ee38
		0010ee38: CONDITIONAL_JUMP
		0010ed68: FALL_THROUGH

	[0010ed68]
		0010ed60: FALL_THROUGH
 	0010ed68 push ax
 	0010ed70 mov mar,0x42ef20
 	0010ed7c push mar
 	0010ed84 pop mar
 	0010ed8c memread.ptr ax
 	0010ed94 push ax
 	0010ed9c pop mar
 	0010eda4 mov ax,mar
 	0010edb0 push op
 	0010edb8 mov op,ax
 	0010edc0 setfuncargs 0x0
 	0010edc8 mov ax,0x3d6f20
 	0010edd4 farcall ax
 	0010eddc pop op
 	0010ede4 push ax
 	0010edec mov ax,0x26
 	0010edf8 pop bx
 	0010ee00 cmpeq bx,ax
 	0010ee0c mov ax,bx
 	0010ee18 pop bx
 	0010ee20 lor bx,ax
 	0010ee2c mov ax,bx
		0010ee38: FALL_THROUGH

	[0010ee38]
		0010ed60: CONDITIONAL_JUMP
		0010ed68: FALL_THROUGH
 	0010ee38 jz 0x0010ef80
		0010ef80: CONDITIONAL_JUMP
		0010ee40: FALL_THROUGH

	[0010ee40]
		0010ee38: FALL_THROUGH
 	0010ee40 sourceline 0x43f
 	0010ee48 mov ax,0x1
 	0010ee54 mov bx,ax
 	0010ee60 mov mar,0x3cef20
 	0010ee6c mov ax,mar
 	0010ee78 push op
 	0010ee80 mov op,ax
 	0010ee88 farpush bx
 	0010ee90 setfuncargs 0x1
 	0010ee98 mov ax,0x69ef20
 	0010eea4 farcall ax
 	0010eeac farsubsp 0x1
 	0010eeb4 pop op
 	0010eebc sourceline 0x440
 	0010eec4 push op
 	0010eecc mov ax,0x2b5a62
 	0010eed8 farpush ax
 	0010eee0 mov ax,0x138
 	0010eeec farpush ax
 	0010eef4 mov ax,0x92
 	0010ef00 farpush ax
 	0010ef08 mov ax,0x0
 	0010ef14 farpush ax
 	0010ef1c mov mar,0x3cef20
 	0010ef28 mov ax,mar
 	0010ef34 mov op,ax
 	0010ef3c setfuncargs 0x4
 	0010ef44 mov ax,0x6aef20
 	0010ef50 farcall ax
 	0010ef58 farsubsp 0x4
 	0010ef60 pop op
 	0010ef68 sourceline 0x441
 	0010ef70 mov ax,0x0
 	0010ef7c ret

	[0010ef80]
		0010ee38: CONDITIONAL_JUMP
 	0010ef80 sourceline 0x443
 	0010ef88 setfuncargs 0x0
 	0010ef90 mov ax,0x75ef20
 	0010ef9c farcall ax
 	0010efa4 sourceline 0x444
 	0010efac mov ax,0x0
 	0010efb8 mov bx,ax
 	0010efc4 mov mar,0x3cef20
 	0010efd0 mov ax,mar
 	0010efdc push op
 	0010efe4 mov op,ax
 	0010efec farpush bx
 	0010eff4 setfuncargs 0x1
 	0010effc mov ax,0x766f20
 	0010f008 farcall ax
 	0010f010 farsubsp 0x1
 	0010f018 pop op
 	0010f020 sourceline 0x445
 	0010f028 mov ax,0x5
 	0010f034 farpush ax
 	0010f03c setfuncargs 0x1
 	0010f044 mov ax,0x426f20
 	0010f050 farcall ax
 	0010f058 farsubsp 0x1
 	0010f060 sourceline 0x446
 	0010f068 mov mar,0x3cef20
 	0010f074 mov ax,mar
 	0010f080 push op
 	0010f088 mov op,ax
 	0010f090 setfuncargs 0x0
 	0010f098 mov ax,0x3d6f20
 	0010f0a4 farcall ax
 	0010f0ac pop op
 	0010f0b4 push ax
 	0010f0bc mov ax,0x8
 	0010f0c8 pop bx
 	0010f0d0 cmpeq bx,ax
 	0010f0dc mov ax,bx
 	0010f0e8 jz 0x0010f240
		0010f240: CONDITIONAL_JUMP
		0010f0f0: FALL_THROUGH

	[0010f0f0]
		0010ef80: FALL_THROUGH
 	0010f0f0 sourceline 0x448
 	0010f0f8 setfuncargs 0x0
 	0010f100 mov ax,0x76ef20
 	0010f10c farcall ax
 	0010f114 push ax
 	0010f11c mov ax,0x1
 	0010f128 pop bx
 	0010f130 cmpeq bx,ax
 	0010f13c mov ax,bx
 	0010f148 jz 0x0010f1c0
		0010f1c0: CONDITIONAL_JUMP
		0010f150: FALL_THROUGH

	[0010f150]
		0010f0f0: FALL_THROUGH
 	0010f150 push op
 	0010f158 mov ax,0xaa
 	0010f164 farpush ax
 	0010f16c mov mar,0x3cef20
 	0010f178 mov ax,mar
 	0010f184 mov op,ax
 	0010f18c setfuncargs 0x1
 	0010f194 mov ax,0x51ef20
 	0010f1a0 farcall ax
 	0010f1a8 farsubsp 0x1
 	0010f1b0 pop op
 	0010f1b8 jmp 0x0010f230
		0010f230: UNCONDITIONAL_JUMP

	[0010f1c0]
		0010f0f0: CONDITIONAL_JUMP
 	0010f1c0 sourceline 0x44a
 	0010f1c8 push op
 	0010f1d0 mov ax,0x10
 	0010f1dc farpush ax
 	0010f1e4 mov mar,0x3cef20
 	0010f1f0 mov ax,mar
 	0010f1fc mov op,ax
 	0010f204 setfuncargs 0x1
 	0010f20c mov ax,0x51ef20
 	0010f218 farcall ax
 	0010f220 farsubsp 0x1
 	0010f228 pop op
		0010f230: FALL_THROUGH

	[0010f230]
		0010f150: UNCONDITIONAL_JUMP
		0010f1c0: FALL_THROUGH
 	0010f230 sourceline 0x44b
 	0010f238 jmp 0x0010f6fc
		0010f6fc: UNCONDITIONAL_JUMP

	[0010f240]
		0010ef80: CONDITIONAL_JUMP
 	0010f240 sourceline 0x44c
 	0010f248 mov mar,0x3cef20
 	0010f254 mov ax,mar
 	0010f260 push op
 	0010f268 mov op,ax
 	0010f270 setfuncargs 0x0
 	0010f278 mov ax,0x3d6f20
 	0010f284 farcall ax
 	0010f28c pop op
 	0010f294 push ax
 	0010f29c mov ax,0x12
 	0010f2a8 pop bx
 	0010f2b0 cmpeq bx,ax
 	0010f2bc mov ax,bx
 	0010f2c8 jz 0x0010f340
		0010f340: CONDITIONAL_JUMP
		0010f2d0: FALL_THROUGH

	[0010f2d0]
		0010f240: FALL_THROUGH
 	0010f2d0 push op
 	0010f2d8 mov ax,0xab
 	0010f2e4 farpush ax
 	0010f2ec mov mar,0x3cef20
 	0010f2f8 mov ax,mar
 	0010f304 mov op,ax
 	0010f30c setfuncargs 0x1
 	0010f314 mov ax,0x51ef20
 	0010f320 farcall ax
 	0010f328 farsubsp 0x1
 	0010f330 pop op
 	0010f338 jmp 0x0010f6fc
		0010f6fc: UNCONDITIONAL_JUMP

	[0010f340]
		0010f240: CONDITIONAL_JUMP
 	0010f340 sourceline 0x44d
 	0010f348 mov mar,0x3cef20
 	0010f354 mov ax,mar
 	0010f360 push op
 	0010f368 mov op,ax
 	0010f370 setfuncargs 0x0
 	0010f378 mov ax,0x3d6f20
 	0010f384 farcall ax
 	0010f38c pop op
 	0010f394 push ax
 	0010f39c mov ax,0x22
 	0010f3a8 pop bx
 	0010f3b0 cmpeq bx,ax
 	0010f3bc mov ax,bx
 	0010f3c8 jnz 0x0010f478
		0010f478: CONDITIONAL_JUMP
		0010f3d0: FALL_THROUGH

	[0010f3d0]
		0010f340: FALL_THROUGH
 	0010f3d0 push ax
 	0010f3d8 mov mar,0x3cef20
 	0010f3e4 mov ax,mar
 	0010f3f0 push op
 	0010f3f8 mov op,ax
 	0010f400 setfuncargs 0x0
 	0010f408 mov ax,0x3d6f20
 	0010f414 farcall ax
 	0010f41c pop op
 	0010f424 push ax
 	0010f42c mov ax,0x25
 	0010f438 pop bx
 	0010f440 cmpeq bx,ax
 	0010f44c mov ax,bx
 	0010f458 pop bx
 	0010f460 lor bx,ax
 	0010f46c mov ax,bx
		0010f478: FALL_THROUGH

	[0010f478]
		0010f340: CONDITIONAL_JUMP
		0010f3d0: FALL_THROUGH
 	0010f478 jz 0x0010f4f0
		0010f4f0: CONDITIONAL_JUMP
		0010f480: FALL_THROUGH

	[0010f480]
		0010f478: FALL_THROUGH
 	0010f480 push op
 	0010f488 mov ax,0xe3
 	0010f494 farpush ax
 	0010f49c mov mar,0x3cef20
 	0010f4a8 mov ax,mar
 	0010f4b4 mov op,ax
 	0010f4bc setfuncargs 0x1
 	0010f4c4 mov ax,0x51ef20
 	0010f4d0 farcall ax
 	0010f4d8 farsubsp 0x1
 	0010f4e0 pop op
 	0010f4e8 jmp 0x0010f6fc
		0010f6fc: UNCONDITIONAL_JUMP

	[0010f4f0]
		0010f478: CONDITIONAL_JUMP
 	0010f4f0 sourceline 0x44e
 	0010f4f8 mov mar,0x3cef20
 	0010f504 mov ax,mar
 	0010f510 push op
 	0010f518 mov op,ax
 	0010f520 setfuncargs 0x0
 	0010f528 mov ax,0x3d6f20
 	0010f534 farcall ax
 	0010f53c pop op
 	0010f544 push ax
 	0010f54c mov ax,0x27
 	0010f558 pop bx
 	0010f560 cmpeq bx,ax
 	0010f56c mov ax,bx
 	0010f578 jz 0x0010f5f0
		0010f5f0: CONDITIONAL_JUMP
		0010f580: FALL_THROUGH

	[0010f580]
		0010f4f0: FALL_THROUGH
 	0010f580 push op
 	0010f588 mov ax,0xe4
 	0010f594 farpush ax
 	0010f59c mov mar,0x3cef20
 	0010f5a8 mov ax,mar
 	0010f5b4 mov op,ax
 	0010f5bc setfuncargs 0x1
 	0010f5c4 mov ax,0x51ef20
 	0010f5d0 farcall ax
 	0010f5d8 farsubsp 0x1
 	0010f5e0 pop op
 	0010f5e8 jmp 0x0010f6fc
		0010f6fc: UNCONDITIONAL_JUMP

	[0010f5f0]
		0010f4f0: CONDITIONAL_JUMP
 	0010f5f0 sourceline 0x451
 	0010f5f8 mov mar,0x776f20
 	0010f604 memread4 ax
 	0010f60c lnot ax
 	0010f614 jz 0x0010f68c
		0010f68c: CONDITIONAL_JUMP
		0010f61c: FALL_THROUGH

	[0010f61c]
		0010f5f0: FALL_THROUGH
 	0010f61c push op
 	0010f624 mov ax,0x10
 	0010f630 farpush ax
 	0010f638 mov mar,0x3cef20
 	0010f644 mov ax,mar
 	0010f650 mov op,ax
 	0010f658 setfuncargs 0x1
 	0010f660 mov ax,0x51ef20
 	0010f66c farcall ax
 	0010f674 farsubsp 0x1
 	0010f67c pop op
 	0010f684 jmp 0x0010f6fc
		0010f6fc: UNCONDITIONAL_JUMP

	[0010f68c]
		0010f5f0: CONDITIONAL_JUMP
 	0010f68c sourceline 0x452
 	0010f694 push op
 	0010f69c mov ax,0x7e
 	0010f6a8 farpush ax
 	0010f6b0 mov mar,0x3cef20
 	0010f6bc mov ax,mar
 	0010f6c8 mov op,ax
 	0010f6d0 setfuncargs 0x1
 	0010f6d8 mov ax,0x51ef20
 	0010f6e4 farcall ax
 	0010f6ec farsubsp 0x1
 	0010f6f4 pop op
		0010f6fc: FALL_THROUGH

	[0010f6fc]
		0010f230: UNCONDITIONAL_JUMP
		0010f2d0: UNCONDITIONAL_JUMP
		0010f480: UNCONDITIONAL_JUMP
		0010f580: UNCONDITIONAL_JUMP
		0010f61c: UNCONDITIONAL_JUMP
		0010f68c: FALL_THROUGH
 	0010f6fc sourceline 0x455
 	0010f704 mov mar,0x3cef20
 	0010f710 mov ax,mar
 	0010f71c push op
 	0010f724 mov op,ax
 	0010f72c setfuncargs 0x0
 	0010f734 mov ax,0x3d6f20
 	0010f740 farcall ax
 	0010f748 pop op
 	0010f750 push ax
 	0010f758 mov ax,0x10
 	0010f764 pop bx
 	0010f76c cmpeq bx,ax
 	0010f778 mov ax,bx
 	0010f784 jz 0x0010fa8c
		0010fa8c: CONDITIONAL_JUMP
		0010f78c: FALL_THROUGH

	[0010f78c]
		0010f6fc: FALL_THROUGH
 	0010f78c mov ax,0x0
 	0010f798 push ax
 	0010f7a0 mov ax,0x1
 	0010f7ac assertlte ax,0x10
 	0010f7b8 mul ax,0x8
 	0010f7c4 mov cx,ax
 	0010f7d0 pop ax
 	0010f7d8 mov bx,ax
 	0010f7e4 mov mar,0x77ef20
 	0010f7f0 add mar,cx
 	0010f7fc mov ax,mar
 	0010f808 push op
 	0010f810 mov op,ax
 	0010f818 farpush bx
 	0010f820 setfuncargs 0x1
 	0010f828 mov ax,0x786f20
 	0010f834 farcall ax
 	0010f83c farsubsp 0x1
 	0010f844 pop op
 	0010f84c mov ax,0x0
 	0010f858 push ax
 	0010f860 mov ax,0x2
 	0010f86c assertlte ax,0x10
 	0010f878 mul ax,0x8
 	0010f884 mov cx,ax
 	0010f890 pop ax
 	0010f898 mov bx,ax
 	0010f8a4 mov mar,0x77ef20
 	0010f8b0 add mar,cx
 	0010f8bc mov ax,mar
 	0010f8c8 push op
 	0010f8d0 mov op,ax
 	0010f8d8 farpush bx
 	0010f8e0 setfuncargs 0x1
 	0010f8e8 mov ax,0x786f20
 	0010f8f4 farcall ax
 	0010f8fc farsubsp 0x1
 	0010f904 pop op
 	0010f90c mov ax,0x0
 	0010f918 push ax
 	0010f920 mov ax,0x3
 	0010f92c assertlte ax,0x10
 	0010f938 mul ax,0x8
 	0010f944 mov cx,ax
 	0010f950 pop ax
 	0010f958 mov bx,ax
 	0010f964 mov mar,0x77ef20
 	0010f970 add mar,cx
 	0010f97c mov ax,mar
 	0010f988 push op
 	0010f990 mov op,ax
 	0010f998 farpush bx
 	0010f9a0 setfuncargs 0x1
 	0010f9a8 mov ax,0x786f20
 	0010f9b4 farcall ax
 	0010f9bc farsubsp 0x1
 	0010f9c4 pop op
 	0010f9cc mov ax,0x0
 	0010f9d8 push ax
 	0010f9e0 mov ax,0x4
 	0010f9ec assertlte ax,0x10
 	0010f9f8 mul ax,0x8
 	0010fa04 mov cx,ax
 	0010fa10 pop ax
 	0010fa18 mov bx,ax
 	0010fa24 mov mar,0x77ef20
 	0010fa30 add mar,cx
 	0010fa3c mov ax,mar
 	0010fa48 push op
 	0010fa50 mov op,ax
 	0010fa58 farpush bx
 	0010fa60 setfuncargs 0x1
 	0010fa68 mov ax,0x786f20
 	0010fa74 farcall ax
 	0010fa7c farsubsp 0x1
 	0010fa84 pop op
		0010fa8c: FALL_THROUGH

	[0010fa8c]
		0010f6fc: CONDITIONAL_JUMP
		0010f78c: FALL_THROUGH
 	0010fa8c sourceline 0x457
 	0010fa94 mov mar,0x42ef20
 	0010faa0 push mar
 	0010faa8 pop mar
 	0010fab0 memread.ptr ax
 	0010fab8 push ax
 	0010fac0 pop mar
 	0010fac8 mov ax,mar
 	0010fad4 push op
 	0010fadc mov op,ax
 	0010fae4 setfuncargs 0x0
 	0010faec mov ax,0x3d6f20
 	0010faf8 farcall ax
 	0010fb00 pop op
 	0010fb08 push ax
 	0010fb10 mov ax,0xd
 	0010fb1c pop bx
 	0010fb24 cmpeq bx,ax
 	0010fb30 mov ax,bx
 	0010fb3c jz 0x0010fcc4
		0010fcc4: CONDITIONAL_JUMP
		0010fb44: FALL_THROUGH

	[0010fb44]
		0010fa8c: FALL_THROUGH
 	0010fb44 mov ax,0x0
 	0010fb50 push ax
 	0010fb58 mov ax,0x1
 	0010fb64 assertlte ax,0x10
 	0010fb70 mul ax,0x8
 	0010fb7c mov cx,ax
 	0010fb88 pop ax
 	0010fb90 mov bx,ax
 	0010fb9c mov mar,0x77ef20
 	0010fba8 add mar,cx
 	0010fbb4 mov ax,mar
 	0010fbc0 push op
 	0010fbc8 mov op,ax
 	0010fbd0 farpush bx
 	0010fbd8 setfuncargs 0x1
 	0010fbe0 mov ax,0x786f20
 	0010fbec farcall ax
 	0010fbf4 farsubsp 0x1
 	0010fbfc pop op
 	0010fc04 mov ax,0x0
 	0010fc10 push ax
 	0010fc18 mov ax,0x2
 	0010fc24 assertlte ax,0x10
 	0010fc30 mul ax,0x8
 	0010fc3c mov cx,ax
 	0010fc48 pop ax
 	0010fc50 mov bx,ax
 	0010fc5c mov mar,0x77ef20
 	0010fc68 add mar,cx
 	0010fc74 mov ax,mar
 	0010fc80 push op
 	0010fc88 mov op,ax
 	0010fc90 farpush bx
 	0010fc98 setfuncargs 0x1
 	0010fca0 mov ax,0x786f20
 	0010fcac farcall ax
 	0010fcb4 farsubsp 0x1
 	0010fcbc pop op
		0010fcc4: FALL_THROUGH

	[0010fcc4]
		0010fa8c: CONDITIONAL_JUMP
		0010fb44: FALL_THROUGH
 	0010fcc4 sourceline 0x459
 	0010fccc mov mar,0x42ef20
 	0010fcd8 push mar
 	0010fce0 pop mar
 	0010fce8 memread.ptr ax
 	0010fcf0 push ax
 	0010fcf8 pop mar
 	0010fd00 mov ax,mar
 	0010fd0c push op
 	0010fd14 mov op,ax
 	0010fd1c setfuncargs 0x0
 	0010fd24 mov ax,0x3d6f20
 	0010fd30 farcall ax
 	0010fd38 pop op
 	0010fd40 push ax
 	0010fd48 mov ax,0x27
 	0010fd54 pop bx
 	0010fd5c cmpeq bx,ax
 	0010fd68 mov ax,bx
 	0010fd74 jz 0x0010fefc
		0010fefc: CONDITIONAL_JUMP
		0010fd7c: FALL_THROUGH

	[0010fd7c]
		0010fcc4: FALL_THROUGH
 	0010fd7c mov ax,0x0
 	0010fd88 push ax
 	0010fd90 mov ax,0x1
 	0010fd9c assertlte ax,0x10
 	0010fda8 mul ax,0x8
 	0010fdb4 mov cx,ax
 	0010fdc0 pop ax
 	0010fdc8 mov bx,ax
 	0010fdd4 mov mar,0x77ef20
 	0010fde0 add mar,cx
 	0010fdec mov ax,mar
 	0010fdf8 push op
 	0010fe00 mov op,ax
 	0010fe08 farpush bx
 	0010fe10 setfuncargs 0x1
 	0010fe18 mov ax,0x786f20
 	0010fe24 farcall ax
 	0010fe2c farsubsp 0x1
 	0010fe34 pop op
 	0010fe3c mov ax,0x0
 	0010fe48 push ax
 	0010fe50 mov ax,0x2
 	0010fe5c assertlte ax,0x10
 	0010fe68 mul ax,0x8
 	0010fe74 mov cx,ax
 	0010fe80 pop ax
 	0010fe88 mov bx,ax
 	0010fe94 mov mar,0x77ef20
 	0010fea0 add mar,cx
 	0010feac mov ax,mar
 	0010feb8 push op
 	0010fec0 mov op,ax
 	0010fec8 farpush bx
 	0010fed0 setfuncargs 0x1
 	0010fed8 mov ax,0x786f20
 	0010fee4 farcall ax
 	0010feec farsubsp 0x1
 	0010fef4 pop op
		0010fefc: FALL_THROUGH

	[0010fefc]
		0010fcc4: CONDITIONAL_JUMP
		0010fd7c: FALL_THROUGH
 	0010fefc sourceline 0x45b
 	0010ff04 mov mar,0x42ef20
 	0010ff10 push mar
 	0010ff18 pop mar
 	0010ff20 memread.ptr ax
 	0010ff28 push ax
 	0010ff30 pop mar
 	0010ff38 mov ax,mar
 	0010ff44 push op
 	0010ff4c mov op,ax
 	0010ff54 setfuncargs 0x0
 	0010ff5c mov ax,0x3d6f20
 	0010ff68 farcall ax
 	0010ff70 pop op
 	0010ff78 push ax
 	0010ff80 mov ax,0x16
 	0010ff8c pop bx
 	0010ff94 cmpeq bx,ax
 	0010ffa0 mov ax,bx
 	0010ffac jz 0x001101dc
		001101dc: CONDITIONAL_JUMP
		0010ffb4: FALL_THROUGH

	[0010ffb4]
		0010fefc: FALL_THROUGH
 	0010ffb4 sourceline 0x45d
 	0010ffbc mov mar,0x42ef20
 	0010ffc8 push mar
 	0010ffd0 pop mar
 	0010ffd8 memread.ptr ax
 	0010ffe0 push ax
 	0010ffe8 pop mar
 	0010fff0 mov ax,mar
 	0010fffc push op
 	00110004 mov op,ax
 	0011000c setfuncargs 0x0
 	00110014 mov ax,0x78ef20
 	00110020 farcall ax
 	00110028 pop op
 	00110030 push ax
 	00110038 mov ax,0x84
 	00110044 pop bx
 	0011004c cmpgt bx,ax
 	00110058 mov ax,bx
 	00110064 jz 0x001100c0
		001100c0: CONDITIONAL_JUMP
		0011006c: FALL_THROUGH

	[0011006c]
		0010ffb4: FALL_THROUGH
 	0011006c mov ax,0x0
 	00110078 farpush ax
 	00110080 mov ax,0x1
 	0011008c farpush ax
 	00110094 setfuncargs 0x2
 	0011009c mov ax,0x756f20
 	001100a8 farcall ax
 	001100b0 farsubsp 0x2
 	001100b8 jmp 0x00110114
		00110114: UNCONDITIONAL_JUMP

	[001100c0]
		0010ffb4: CONDITIONAL_JUMP
 	001100c0 sourceline 0x45e
 	001100c8 mov ax,0x3e7
 	001100d4 farpush ax
 	001100dc mov ax,0x1
 	001100e8 farpush ax
 	001100f0 setfuncargs 0x2
 	001100f8 mov ax,0x756f20
 	00110104 farcall ax
 	0011010c farsubsp 0x2
		00110114: FALL_THROUGH

	[00110114]
		0011006c: UNCONDITIONAL_JUMP
		001100c0: FALL_THROUGH
 	00110114 sourceline 0x45f
 	0011011c mov ax,0x3e8
 	00110128 push ax
 	00110130 mov ax,0x0
 	0011013c assertlte ax,0x28
 	00110148 mul ax,0x8
 	00110154 mov cx,ax
 	00110160 pop ax
 	00110168 mov bx,ax
 	00110174 mov mar,0x6fef20
 	00110180 add mar,cx
 	0011018c mov ax,mar
 	00110198 push op
 	001101a0 mov op,ax
 	001101a8 farpush bx
 	001101b0 setfuncargs 0x1
 	001101b8 mov ax,0x796f20
 	001101c4 farcall ax
 	001101cc farsubsp 0x1
 	001101d4 pop op
		001101dc: FALL_THROUGH

	[001101dc]
		0010fefc: CONDITIONAL_JUMP
		00110114: FALL_THROUGH
 	001101dc sourceline 0x462
 	001101e4 mov mar,0x42ef20
 	001101f0 push mar
 	001101f8 pop mar
 	00110200 memread.ptr ax
 	00110208 push ax
 	00110210 pop mar
 	00110218 mov ax,mar
 	00110224 push op
 	0011022c mov op,ax
 	00110234 setfuncargs 0x0
 	0011023c mov ax,0x3d6f20
 	00110248 farcall ax
 	00110250 pop op
 	00110258 push ax
 	00110260 mov ax,0x2
 	0011026c pop bx
 	00110274 cmpeq bx,ax
 	00110280 mov ax,bx
 	0011028c jz 0x001102e8
		001102e8: CONDITIONAL_JUMP
		00110294: FALL_THROUGH

	[00110294]
		001101dc: FALL_THROUGH
 	00110294 sourceline 0x464
 	0011029c mov ax,0x0
 	001102a8 farpush ax
 	001102b0 mov ax,0x5
 	001102bc farpush ax
 	001102c4 setfuncargs 0x2
 	001102cc mov ax,0x756f20
 	001102d8 farcall ax
 	001102e0 farsubsp 0x2
		001102e8: FALL_THROUGH

	[001102e8]
		001101dc: CONDITIONAL_JUMP
		00110294: FALL_THROUGH
 	001102e8 sourceline 0x467
 	001102f0 push op
 	001102f8 mov ax,0x0
 	00110304 farpush ax
 	0011030c mov ax,0x32
 	00110318 farpush ax
 	00110320 mov mar,0x79ef20
 	0011032c mov ax,mar
 	00110338 mov op,ax
 	00110340 setfuncargs 0x2
 	00110348 mov ax,0x2fef20
 	00110354 farcall ax
 	0011035c farsubsp 0x2
 	00110364 pop op
 	0011036c sourceline 0x468
 	00110374 push op
 	0011037c mov ax,0x426
 	00110388 farpush ax
 	00110390 mov ax,0x398
 	0011039c farpush ax
 	001103a4 mov ax,0x0
 	001103b0 farpush ax
 	001103b8 mov ax,0x3
 	001103c4 farpush ax
 	001103cc mov ax,0x0
 	001103d8 farpush ax
 	001103e0 mov mar,0x3cef20
 	001103ec mov ax,mar
 	001103f8 mov op,ax
 	00110400 setfuncargs 0x5
 	00110408 mov ax,0x536f20
 	00110414 farcall ax
 	0011041c farsubsp 0x5
 	00110424 pop op
 	0011042c sourceline 0x469
 	00110434 mov mar,0x3cef20
 	00110440 mov ax,mar
 	0011044c push op
 	00110454 mov op,ax
 	0011045c setfuncargs 0x0
 	00110464 mov ax,0x78ef20
 	00110470 farcall ax
 	00110478 pop op
 	00110480 mov mar,sp
 	0011048c memwrite4 ax
 	00110494 add sp,0x4
 	001104a0 stackptr 0x4
 	001104a8 memread4 ax
 	001104b0 push ax
 	001104b8 mov ax,0x7
 	001104c4 pop bx
 	001104cc sub bx,ax
 	001104d8 mov ax,bx
 	001104e4 mov bx,ax
 	001104f0 mov mar,0x3cef20
 	001104fc mov ax,mar
 	00110508 push op
 	00110510 mov op,ax
 	00110518 farpush bx
 	00110520 setfuncargs 0x1
 	00110528 mov ax,0x526f20
 	00110534 farcall ax
 	0011053c farsubsp 0x1
 	00110544 pop op
 	0011054c sourceline 0x46a
 	00110554 mov ax,0x8ef
 	00110560 mov bx,ax
 	0011056c mov mar,0x7a6f20
 	00110578 mov ax,mar
 	00110584 push op
 	0011058c mov op,ax
 	00110594 farpush bx
 	0011059c setfuncargs 0x1
 	001105a4 mov ax,0x356f20
 	001105b0 farcall ax
 	001105b8 farsubsp 0x1
 	001105c0 pop op
 	001105c8 sourceline 0x46b
 	001105d0 mov ax,0x8e8
 	001105dc mov bx,ax
 	001105e8 mov mar,0x7aef20
 	001105f4 mov ax,mar
 	00110600 push op
 	00110608 mov op,ax
 	00110610 farpush bx
 	00110618 setfuncargs 0x1
 	00110620 mov ax,0x356f20
 	0011062c farcall ax
 	00110634 farsubsp 0x1
 	0011063c pop op
 	00110644 sourceline 0x46c
 	0011064c mov ax,0x8ea
 	00110658 mov bx,ax
 	00110664 mov mar,0x7b6f20
 	00110670 mov ax,mar
 	0011067c push op
 	00110684 mov op,ax
 	0011068c farpush bx
 	00110694 setfuncargs 0x1
 	0011069c mov ax,0x356f20
 	001106a8 farcall ax
 	001106b0 farsubsp 0x1
 	001106b8 pop op
 	001106c0 sourceline 0x46d
 	001106c8 mov ax,0x8e9
 	001106d4 mov bx,ax
 	001106e0 mov mar,0x7bef20
 	001106ec mov ax,mar
 	001106f8 push op
 	00110700 mov op,ax
 	00110708 farpush bx
 	00110710 setfuncargs 0x1
 	00110718 mov ax,0x356f20
 	00110724 farcall ax
 	0011072c farsubsp 0x1
 	00110734 pop op
 	0011073c sourceline 0x46e
 	00110744 mov ax,0x0
 	00110750 mov bx,ax
 	0011075c mov mar,0x30ef20
 	00110768 mov ax,mar
 	00110774 push op
 	0011077c mov op,ax
 	00110784 farpush bx
 	0011078c setfuncargs 0x1
 	00110794 mov ax,0x3a6f20
 	001107a0 farcall ax
 	001107a8 farsubsp 0x1
 	001107b0 pop op
 	001107b8 sourceline 0x46f
 	001107c0 mov ax,0x0
 	001107cc mov bx,ax
 	001107d8 mov mar,0x67ef20
 	001107e4 mov ax,mar
 	001107f0 push op
 	001107f8 mov op,ax
 	00110800 farpush bx
 	00110808 setfuncargs 0x1
 	00110810 mov ax,0x3a6f20
 	0011081c farcall ax
 	00110824 farsubsp 0x1
 	0011082c pop op
 	00110834 sourceline 0x470
 	0011083c mov ax,0x0
 	00110848 mov bx,ax
 	00110854 mov mar,0x3cef20
 	00110860 mov ax,mar
 	0011086c push op
 	00110874 mov op,ax
 	0011087c farpush bx
 	00110884 setfuncargs 0x1
 	0011088c mov ax,0x436f20
 	00110898 farcall ax
 	001108a0 farsubsp 0x1
 	001108a8 pop op
 	001108b0 sourceline 0x471
 	001108b8 mov ax,0x28
 	001108c4 farpush ax
 	001108cc setfuncargs 0x1
 	001108d4 mov ax,0x426f20
 	001108e0 farcall ax
 	001108e8 farsubsp 0x1
 	001108f0 sourceline 0x472
 	001108f8 mov ax,0x1
 	00110904 mov bx,ax
 	00110910 mov mar,0x31ef20
 	0011091c mov ax,mar
 	00110928 push op
 	00110930 mov op,ax
 	00110938 farpush bx
 	00110940 setfuncargs 0x1
 	00110948 mov ax,0x3a6f20
 	00110954 farcall ax
 	0011095c farsubsp 0x1
 	00110964 pop op
 	0011096c sourceline 0x473
 	00110974 mov ax,0x0
 	00110980 sub sp,0x4
 	0011098c ret

iCheesebar_Look$0:
	[00110990]
 	00110990 sourceline 0x478
 	00110998 thisaddr
 	001109a0 sourceline 0x479
 	001109a8 mov ax,0x1
 	001109b4 mov bx,ax
*	001109c0 mov mar,0x3cef20
 	001109cc mov ax,mar
 	001109d8 push op
 	001109e0 mov op,ax
 	001109e8 farpush bx
 	001109f0 setfuncargs 0x1
 	001109f8 mov ax,0x69ef20
 	00110a04 farcall ax
 	00110a0c farsubsp 0x1
 	00110a14 pop op
 	00110a1c sourceline 0x47a
 	00110a24 push op
 	00110a2c mov ax,0x2b5a88
 	00110a38 farpush ax
 	00110a40 mov ax,0x138
 	00110a4c farpush ax
 	00110a54 mov ax,0x92
 	00110a60 farpush ax
 	00110a68 mov ax,0x0
 	00110a74 farpush ax
 	00110a7c mov mar,0x3cef20
 	00110a88 mov ax,mar
 	00110a94 mov op,ax
 	00110a9c setfuncargs 0x4
 	00110aa4 mov ax,0x6aef20
 	00110ab0 farcall ax
 	00110ab8 farsubsp 0x4
 	00110ac0 pop op
 	00110ac8 sourceline 0x47b
 	00110ad0 mov ax,0x0
 	00110adc ret

iDocumentsEnvelope_Look$0:
	[00110ae0]
 	00110ae0 sourceline 0x47f
 	00110ae8 thisaddr
 	00110af0 sourceline 0x480
 	00110af8 mov ax,0x1
 	00110b04 mov bx,ax
*	00110b10 mov mar,0x3cef20
 	00110b1c mov ax,mar
 	00110b28 push op
 	00110b30 mov op,ax
 	00110b38 farpush bx
 	00110b40 setfuncargs 0x1
 	00110b48 mov ax,0x69ef20
 	00110b54 farcall ax
 	00110b5c farsubsp 0x1
 	00110b64 pop op
 	00110b6c sourceline 0x481
 	00110b74 push op
 	00110b7c mov ax,0x2b5afc
 	00110b88 farpush ax
 	00110b90 mov ax,0x138
 	00110b9c farpush ax
 	00110ba4 mov ax,0x92
 	00110bb0 farpush ax
 	00110bb8 mov ax,0x0
 	00110bc4 farpush ax
 	00110bcc mov mar,0x3cef20
 	00110bd8 mov ax,mar
 	00110be4 mov op,ax
 	00110bec setfuncargs 0x4
 	00110bf4 mov ax,0x6aef20
 	00110c00 farcall ax
 	00110c08 farsubsp 0x4
 	00110c10 pop op
 	00110c18 sourceline 0x482
 	00110c20 mov mar,sp
 	00110c2c memzero 0x4
 	00110c34 add sp,0x4
 	00110c40 sourceline 0x483
 	00110c48 mov ax,0x0
 	00110c54 mov mar,sp
 	00110c60 memwrite4 ax
 	00110c68 add sp,0x4
		00110c74: FALL_THROUGH

	[00110c74]
		00110de8: UNCONDITIONAL_JUMP
		00110ae0: FALL_THROUGH
 	00110c74 stackptr 0x4
 	00110c7c memread4 ax
 	00110c84 push ax
 	00110c8c mov mar,0x63ef20
 	00110c98 mov ax,mar
 	00110ca4 push op
 	00110cac mov op,ax
 	00110cb4 setfuncargs 0x0
 	00110cbc mov ax,0x646f20
 	00110cc8 farcall ax
 	00110cd0 pop op
 	00110cd8 pop bx
 	00110ce0 cmplt bx,ax
 	00110cec mov ax,bx
 	00110cf8 jz 0x00110e14
		00110e14: CONDITIONAL_JUMP
		00110d00: FALL_THROUGH

	[00110d00]
		00110c74: FALL_THROUGH
 	00110d00 sourceline 0x484
 	00110d08 stackptr 0x4
 	00110d10 memread4 ax
 	00110d18 mov dx,ax
 	00110d24 mov mar,0x63ef20
 	00110d30 mov ax,mar
 	00110d3c push op
 	00110d44 mov op,ax
 	00110d4c farpush dx
 	00110d54 setfuncargs 0x1
 	00110d5c mov ax,0x7c6f20
 	00110d68 farcall ax
 	00110d70 farsubsp 0x1
 	00110d78 pop op
 	00110d80 push ax
 	00110d88 mov mar,0x7cef20
 	00110d94 mov ax,mar
 	00110da0 pop bx
 	00110da8 cmpeq bx,ax
 	00110db4 mov ax,bx
 	00110dc0 jz 0x00110de8
		00110de8: CONDITIONAL_JUMP
		00110dc8: FALL_THROUGH

	[00110dc8]
		00110d00: FALL_THROUGH
 	00110dc8 stackptr 0x4
 	00110dd0 memread4 ax
 	00110dd8 stackptr 0x8
 	00110de0 memwrite4 ax
		00110de8: FALL_THROUGH

	[00110de8]
		00110d00: CONDITIONAL_JUMP
		00110dc8: FALL_THROUGH
 	00110de8 stackptr 0x4
 	00110df0 memread4 ax
 	00110df8 add ax,0x1
 	00110e04 memwrite4 ax
 	00110e0c jmp 0x00110c74
		00110c74: UNCONDITIONAL_JUMP

	[00110e14]
		00110c74: CONDITIONAL_JUMP
 	00110e14 sub sp,0x4
 	00110e20 sourceline 0x485
 	00110e28 push op
 	00110e30 mov mar,0x7cef20
 	00110e3c mov ax,mar
 	00110e48 farpush ax
 	00110e50 mov mar,0x3cef20
 	00110e5c mov ax,mar
 	00110e68 mov op,ax
 	00110e70 setfuncargs 0x1
 	00110e78 mov ax,0x7d6f20
 	00110e84 farcall ax
 	00110e8c farsubsp 0x1
 	00110e94 pop op
 	00110e9c sourceline 0x486
 	00110ea4 push op
 	00110eac stackptr 0x8
 	00110eb4 memread4 ax
 	00110ebc farpush ax
 	00110ec4 mov mar,0x7def20
 	00110ed0 mov ax,mar
 	00110edc farpush ax
 	00110ee4 mov mar,0x3cef20
 	00110ef0 mov ax,mar
 	00110efc mov op,ax
 	00110f04 setfuncargs 0x2
 	00110f0c mov ax,0x7e6f20
 	00110f18 farcall ax
 	00110f20 farsubsp 0x2
 	00110f28 pop op
 	00110f30 sourceline 0x487
 	00110f38 push op
 	00110f40 mov ax,0x7cfe
 	00110f4c farpush ax
 	00110f54 mov ax,0x32
 	00110f60 farpush ax
 	00110f68 mov mar,0x7eef20
 	00110f74 mov ax,mar
 	00110f80 mov op,ax
 	00110f88 setfuncargs 0x2
 	00110f90 mov ax,0x2fef20
 	00110f9c farcall ax
 	00110fa4 farsubsp 0x2
 	00110fac pop op
 	00110fb4 sourceline 0x488
 	00110fbc mov ax,0x0
 	00110fc8 sub sp,0x4
 	00110fd4 ret

iDocumentsOpened_Look$0:
	[00110fd8]
 	00110fd8 sourceline 0x48c
 	00110fe0 thisaddr
 	00110fe8 sourceline 0x48d
 	00110ff0 mov ax,0x1
 	00110ffc mov bx,ax
*	00111008 mov mar,0x3cef20
 	00111014 mov ax,mar
 	00111020 push op
 	00111028 mov op,ax
 	00111030 farpush bx
 	00111038 setfuncargs 0x1
 	00111040 mov ax,0x69ef20
 	0011104c farcall ax
 	00111054 farsubsp 0x1
 	0011105c pop op
 	00111064 sourceline 0x48e
 	0011106c mov ax,0x2b5b46
 	00111078 farpush ax
 	00111080 setfuncargs 0x1
 	00111088 mov ax,0x7f6f20
 	00111094 farcall ax
 	0011109c farsubsp 0x1
 	001110a4 jz 0x00111198
		00111198: CONDITIONAL_JUMP
		001110ac: FALL_THROUGH

	[001110ac]
		00110fd8: FALL_THROUGH
 	001110ac sourceline 0x490
 	001110b4 push op
 	001110bc mov ax,0x2b5b60
 	001110c8 farpush ax
 	001110d0 mov ax,0x138
 	001110dc farpush ax
 	001110e4 mov ax,0x92
 	001110f0 farpush ax
 	001110f8 mov ax,0x0
 	00111104 farpush ax
 	0011110c mov mar,0x3cef20
 	00111118 mov ax,mar
 	00111124 mov op,ax
 	0011112c setfuncargs 0x4
 	00111134 mov ax,0x6aef20
 	00111140 farcall ax
 	00111148 farsubsp 0x4
 	00111150 pop op
 	00111158 sourceline 0x491
 	00111160 mov ax,0x1e
 	0011116c farpush ax
 	00111174 setfuncargs 0x1
 	0011117c mov ax,0x426f20
 	00111188 farcall ax
 	00111190 farsubsp 0x1
		00111198: FALL_THROUGH

	[00111198]
		00110fd8: CONDITIONAL_JUMP
		001110ac: FALL_THROUGH
 	00111198 sourceline 0x493
 	001111a0 push op
 	001111a8 mov ax,0x2b5bad
 	001111b4 farpush ax
 	001111bc mov ax,0x138
 	001111c8 farpush ax
 	001111d0 mov ax,0x92
 	001111dc farpush ax
 	001111e4 mov ax,0x0
 	001111f0 farpush ax
 	001111f8 mov mar,0x3cef20
 	00111204 mov ax,mar
 	00111210 mov op,ax
 	00111218 setfuncargs 0x4
 	00111220 mov ax,0x6aef20
 	0011122c farcall ax
 	00111234 farsubsp 0x4
 	0011123c pop op
 	00111244 sourceline 0x494
 	0011124c push op
 	00111254 mov ax,0x2b5cb5
 	00111260 farpush ax
 	00111268 mov ax,0x138
 	00111274 farpush ax
 	0011127c mov ax,0x92
 	00111288 farpush ax
 	00111290 mov ax,0x0
 	0011129c farpush ax
 	001112a4 mov mar,0x3cef20
 	001112b0 mov ax,mar
 	001112bc mov op,ax
 	001112c4 setfuncargs 0x4
 	001112cc mov ax,0x6aef20
 	001112d8 farcall ax
 	001112e0 farsubsp 0x4
 	001112e8 pop op
 	001112f0 sourceline 0x495
 	001112f8 push op
 	00111300 mov ax,0x2b5dc2
 	0011130c farpush ax
 	00111314 mov ax,0x138
 	00111320 farpush ax
 	00111328 mov ax,0x92
 	00111334 farpush ax
 	0011133c mov ax,0x0
 	00111348 farpush ax
 	00111350 mov mar,0x3cef20
 	0011135c mov ax,mar
 	00111368 mov op,ax
 	00111370 setfuncargs 0x4
 	00111378 mov ax,0x6aef20
 	00111384 farcall ax
 	0011138c farsubsp 0x4
 	00111394 pop op
 	0011139c sourceline 0x496
 	001113a4 push op
 	001113ac mov ax,0x2b5e9b
 	001113b8 farpush ax
 	001113c0 mov ax,0x138
 	001113cc farpush ax
 	001113d4 mov ax,0x92
 	001113e0 farpush ax
 	001113e8 mov ax,0x0
 	001113f4 farpush ax
 	001113fc mov mar,0x3cef20
 	00111408 mov ax,mar
 	00111414 mov op,ax
 	0011141c setfuncargs 0x4
 	00111424 mov ax,0x6aef20
 	00111430 farcall ax
 	00111438 farsubsp 0x4
 	00111440 pop op
 	00111448 sourceline 0x497
 	00111450 push op
 	00111458 mov ax,0x2b5fa6
 	00111464 farpush ax
 	0011146c mov ax,0x138
 	00111478 farpush ax
 	00111480 mov ax,0x92
 	0011148c farpush ax
 	00111494 mov ax,0x0
 	001114a0 farpush ax
 	001114a8 mov mar,0x3cef20
 	001114b4 mov ax,mar
 	001114c0 mov op,ax
 	001114c8 setfuncargs 0x4
 	001114d0 mov ax,0x6aef20
 	001114dc farcall ax
 	001114e4 farsubsp 0x4
 	001114ec pop op
 	001114f4 sourceline 0x499
 	001114fc mov ax,0x1
 	00111508 mov mar,0x7fef20
 	00111514 memwrite4 ax
 	0011151c sourceline 0x49a
 	00111524 mov ax,0x0
 	00111530 ret

iAccessCard_Look$0:
	[00111534]
 	00111534 sourceline 0x49e
 	0011153c thisaddr
 	00111544 sourceline 0x49f
 	0011154c mov ax,0x1
 	00111558 mov bx,ax
*	00111564 mov mar,0x3cef20
 	00111570 mov ax,mar
 	0011157c push op
 	00111584 mov op,ax
 	0011158c farpush bx
 	00111594 setfuncargs 0x1
 	0011159c mov ax,0x69ef20
 	001115a8 farcall ax
 	001115b0 farsubsp 0x1
 	001115b8 pop op
 	001115c0 sourceline 0x4a0
 	001115c8 push op
 	001115d0 mov ax,0x2b608f
 	001115dc farpush ax
 	001115e4 mov ax,0x138
 	001115f0 farpush ax
 	001115f8 mov ax,0x92
 	00111604 farpush ax
 	0011160c mov ax,0x0
 	00111618 farpush ax
 	00111620 mov mar,0x3cef20
 	0011162c mov ax,mar
 	00111638 mov op,ax
 	00111640 setfuncargs 0x4
 	00111648 mov ax,0x6aef20
 	00111654 farcall ax
 	0011165c farsubsp 0x4
 	00111664 pop op
 	0011166c sourceline 0x4a1
 	00111674 mov ax,0x0
 	00111680 ret

iBrush_Look$0:
	[00111684]
 	00111684 sourceline 0x4a5
 	0011168c thisaddr
 	00111694 sourceline 0x4a6
 	0011169c mov ax,0x1
 	001116a8 mov bx,ax
*	001116b4 mov mar,0x3cef20
 	001116c0 mov ax,mar
 	001116cc push op
 	001116d4 mov op,ax
 	001116dc farpush bx
 	001116e4 setfuncargs 0x1
 	001116ec mov ax,0x69ef20
 	001116f8 farcall ax
 	00111700 farsubsp 0x1
 	00111708 pop op
 	00111710 sourceline 0x4a7
 	00111718 push op
 	00111720 mov ax,0x2b611c
 	0011172c farpush ax
 	00111734 mov ax,0x138
 	00111740 farpush ax
 	00111748 mov ax,0x92
 	00111754 farpush ax
 	0011175c mov ax,0x0
 	00111768 farpush ax
 	00111770 mov mar,0x3cef20
 	0011177c mov ax,mar
 	00111788 mov op,ax
 	00111790 setfuncargs 0x4
 	00111798 mov ax,0x6aef20
 	001117a4 farcall ax
 	001117ac farsubsp 0x4
 	001117b4 pop op
 	001117bc sourceline 0x4a8
 	001117c4 mov ax,0x0
 	001117d0 ret

iSticky_Look$0:
	[001117d4]
 	001117d4 sourceline 0x4ac
 	001117dc thisaddr
 	001117e4 sourceline 0x4ad
 	001117ec mov ax,0x1
 	001117f8 mov bx,ax
*	00111804 mov mar,0x3cef20
 	00111810 mov ax,mar
 	0011181c push op
 	00111824 mov op,ax
 	0011182c farpush bx
 	00111834 setfuncargs 0x1
 	0011183c mov ax,0x69ef20
 	00111848 farcall ax
 	00111850 farsubsp 0x1
 	00111858 pop op
 	00111860 sourceline 0x4ae
 	00111868 push op
 	00111870 mov ax,0x2b6158
 	0011187c farpush ax
 	00111884 mov ax,0x138
 	00111890 farpush ax
 	00111898 mov ax,0x92
 	001118a4 farpush ax
 	001118ac mov ax,0x0
 	001118b8 farpush ax
 	001118c0 mov mar,0x3cef20
 	001118cc mov ax,mar
 	001118d8 mov op,ax
 	001118e0 setfuncargs 0x4
 	001118e8 mov ax,0x6aef20
 	001118f4 farcall ax
 	001118fc farsubsp 0x4
 	00111904 pop op
 	0011190c sourceline 0x4af
 	00111914 mov ax,0x0
 	00111920 ret

iMoney_Look$0:
	[00111924]
 	00111924 sourceline 0x4b3
 	0011192c thisaddr
 	00111934 sourceline 0x4b4
 	0011193c mov ax,0x1
 	00111948 mov bx,ax
*	00111954 mov mar,0x3cef20
 	00111960 mov ax,mar
 	0011196c push op
 	00111974 mov op,ax
 	0011197c farpush bx
 	00111984 setfuncargs 0x1
 	0011198c mov ax,0x69ef20
 	00111998 farcall ax
 	001119a0 farsubsp 0x1
 	001119a8 pop op
 	001119b0 sourceline 0x4b5
 	001119b8 push op
 	001119c0 mov ax,0x2b6193
 	001119cc farpush ax
 	001119d4 mov ax,0x138
 	001119e0 farpush ax
 	001119e8 mov ax,0x92
 	001119f4 farpush ax
 	001119fc mov ax,0x0
 	00111a08 farpush ax
 	00111a10 mov mar,0x3cef20
 	00111a1c mov ax,mar
 	00111a28 mov op,ax
 	00111a30 setfuncargs 0x4
 	00111a38 mov ax,0x6aef20
 	00111a44 farcall ax
 	00111a4c farsubsp 0x4
 	00111a54 pop op
 	00111a5c sourceline 0x4b6
 	00111a64 mov ax,0x0
 	00111a70 ret

iPhoneBook_Look$0:
	[00111a74]
 	00111a74 sourceline 0x4ba
 	00111a7c thisaddr
 	00111a84 sourceline 0x4bb
 	00111a8c mov ax,0x1
 	00111a98 mov bx,ax
*	00111aa4 mov mar,0x3cef20
 	00111ab0 mov ax,mar
 	00111abc push op
 	00111ac4 mov op,ax
 	00111acc farpush bx
 	00111ad4 setfuncargs 0x1
 	00111adc mov ax,0x69ef20
 	00111ae8 farcall ax
 	00111af0 farsubsp 0x1
 	00111af8 pop op
 	00111b00 sourceline 0x4bc
 	00111b08 push op
 	00111b10 mov ax,0x2b61d3
 	00111b1c farpush ax
 	00111b24 mov ax,0x138
 	00111b30 farpush ax
 	00111b38 mov ax,0x92
 	00111b44 farpush ax
 	00111b4c mov ax,0x0
 	00111b58 farpush ax
 	00111b60 mov mar,0x3cef20
 	00111b6c mov ax,mar
 	00111b78 mov op,ax
 	00111b80 setfuncargs 0x4
 	00111b88 mov ax,0x6aef20
 	00111b94 farcall ax
 	00111b9c farsubsp 0x4
 	00111ba4 pop op
 	00111bac sourceline 0x4bd
 	00111bb4 mov ax,0x0
 	00111bc0 ret

iCoffee_Look$0:
	[00111bc4]
 	00111bc4 sourceline 0x4c1
 	00111bcc thisaddr
 	00111bd4 sourceline 0x4c2
 	00111bdc mov ax,0x1
 	00111be8 mov bx,ax
*	00111bf4 mov mar,0x3cef20
 	00111c00 mov ax,mar
 	00111c0c push op
 	00111c14 mov op,ax
 	00111c1c farpush bx
 	00111c24 setfuncargs 0x1
 	00111c2c mov ax,0x69ef20
 	00111c38 farcall ax
 	00111c40 farsubsp 0x1
 	00111c48 pop op
 	00111c50 sourceline 0x4c3
 	00111c58 push op
 	00111c60 mov ax,0x2b61ec
 	00111c6c farpush ax
 	00111c74 mov ax,0x138
 	00111c80 farpush ax
 	00111c88 mov ax,0x92
 	00111c94 farpush ax
 	00111c9c mov ax,0x0
 	00111ca8 farpush ax
 	00111cb0 mov mar,0x3cef20
 	00111cbc mov ax,mar
 	00111cc8 mov op,ax
 	00111cd0 setfuncargs 0x4
 	00111cd8 mov ax,0x6aef20
 	00111ce4 farcall ax
 	00111cec farsubsp 0x4
 	00111cf4 pop op
 	00111cfc sourceline 0x4c4
 	00111d04 mov ax,0x0
 	00111d10 ret

iScissors_Look$0:
	[00111d14]
 	00111d14 sourceline 0x4c8
 	00111d1c thisaddr
 	00111d24 sourceline 0x4c9
 	00111d2c mov ax,0x1
 	00111d38 mov bx,ax
*	00111d44 mov mar,0x3cef20
 	00111d50 mov ax,mar
 	00111d5c push op
 	00111d64 mov op,ax
 	00111d6c farpush bx
 	00111d74 setfuncargs 0x1
 	00111d7c mov ax,0x69ef20
 	00111d88 farcall ax
 	00111d90 farsubsp 0x1
 	00111d98 pop op
 	00111da0 sourceline 0x4ca
 	00111da8 push op
 	00111db0 mov ax,0x2b621a
 	00111dbc farpush ax
 	00111dc4 mov ax,0x138
 	00111dd0 farpush ax
 	00111dd8 mov ax,0x92
 	00111de4 farpush ax
 	00111dec mov ax,0x0
 	00111df8 farpush ax
 	00111e00 mov mar,0x3cef20
 	00111e0c mov ax,mar
 	00111e18 mov op,ax
 	00111e20 setfuncargs 0x4
 	00111e28 mov ax,0x6aef20
 	00111e34 farcall ax
 	00111e3c farsubsp 0x4
 	00111e44 pop op
 	00111e4c sourceline 0x4cb
 	00111e54 mov ax,0x0
 	00111e60 ret

iBrushHair_Look$0:
	[00111e64]
 	00111e64 sourceline 0x4cf
 	00111e6c thisaddr
 	00111e74 sourceline 0x4d0
 	00111e7c mov ax,0x1
 	00111e88 mov bx,ax
*	00111e94 mov mar,0x3cef20
 	00111ea0 mov ax,mar
 	00111eac push op
 	00111eb4 mov op,ax
 	00111ebc farpush bx
 	00111ec4 setfuncargs 0x1
 	00111ecc mov ax,0x69ef20
 	00111ed8 farcall ax
 	00111ee0 farsubsp 0x1
 	00111ee8 pop op
 	00111ef0 sourceline 0x4d1
 	00111ef8 push op
 	00111f00 mov ax,0x2b6234
 	00111f0c farpush ax
 	00111f14 mov ax,0x138
 	00111f20 farpush ax
 	00111f28 mov ax,0x92
 	00111f34 farpush ax
 	00111f3c mov ax,0x0
 	00111f48 farpush ax
 	00111f50 mov mar,0x3cef20
 	00111f5c mov ax,mar
 	00111f68 mov op,ax
 	00111f70 setfuncargs 0x4
 	00111f78 mov ax,0x6aef20
 	00111f84 farcall ax
 	00111f8c farsubsp 0x4
 	00111f94 pop op
 	00111f9c sourceline 0x4d2
 	00111fa4 mov ax,0x0
 	00111fb0 ret

iRabanPhone_Look$0:
	[00111fb4]
 	00111fb4 sourceline 0x4d6
 	00111fbc thisaddr
 	00111fc4 sourceline 0x4d7
*	00111fcc mov mar,0x806f20
 	00111fd8 memread4 ax
 	00111fe0 lnot ax
 	00111fe8 jz 0x00112128
		00112128: CONDITIONAL_JUMP
		00111ff0: FALL_THROUGH

	[00111ff0]
		00111fb4: FALL_THROUGH
 	00111ff0 sourceline 0x4d9
 	00111ff8 mov ax,0x1
 	00112004 mov bx,ax
 	00112010 mov mar,0x3cef20
 	0011201c mov ax,mar
 	00112028 push op
 	00112030 mov op,ax
 	00112038 farpush bx
 	00112040 setfuncargs 0x1
 	00112048 mov ax,0x69ef20
 	00112054 farcall ax
 	0011205c farsubsp 0x1
 	00112064 pop op
 	0011206c sourceline 0x4da
 	00112074 push op
 	0011207c mov ax,0x2b6257
 	00112088 farpush ax
 	00112090 mov ax,0x138
 	0011209c farpush ax
 	001120a4 mov ax,0x92
 	001120b0 farpush ax
 	001120b8 mov ax,0x0
 	001120c4 farpush ax
 	001120cc mov mar,0x3cef20
 	001120d8 mov ax,mar
 	001120e4 mov op,ax
 	001120ec setfuncargs 0x4
 	001120f4 mov ax,0x6aef20
 	00112100 farcall ax
 	00112108 farsubsp 0x4
 	00112110 pop op
 	00112118 sourceline 0x4db
 	00112120 jmp 0x00112250
		00112250: UNCONDITIONAL_JUMP

	[00112128]
		00111fb4: CONDITIONAL_JUMP
 	00112128 sourceline 0x4de
 	00112130 mov ax,0x1
 	0011213c mov bx,ax
 	00112148 mov mar,0x3cef20
 	00112154 mov ax,mar
 	00112160 push op
 	00112168 mov op,ax
 	00112170 farpush bx
 	00112178 setfuncargs 0x1
 	00112180 mov ax,0x69ef20
 	0011218c farcall ax
 	00112194 farsubsp 0x1
 	0011219c pop op
 	001121a4 sourceline 0x4df
 	001121ac push op
 	001121b4 mov ax,0x2b62df
 	001121c0 farpush ax
 	001121c8 mov ax,0x138
 	001121d4 farpush ax
 	001121dc mov ax,0x92
 	001121e8 farpush ax
 	001121f0 mov ax,0x0
 	001121fc farpush ax
 	00112204 mov mar,0x3cef20
 	00112210 mov ax,mar
 	0011221c mov op,ax
 	00112224 setfuncargs 0x4
 	0011222c mov ax,0x6aef20
 	00112238 farcall ax
 	00112240 farsubsp 0x4
 	00112248 pop op
		00112250: FALL_THROUGH

	[00112250]
		00111ff0: UNCONDITIONAL_JUMP
		00112128: FALL_THROUGH
 	00112250 sourceline 0x4e1
 	00112258 mov ax,0x0
 	00112264 ret

iLibraryCard_Look$0:
	[00112268]
 	00112268 sourceline 0x4e5
 	00112270 thisaddr
 	00112278 sourceline 0x4e6
 	00112280 mov ax,0x1
 	0011228c mov bx,ax
*	00112298 mov mar,0x3cef20
 	001122a4 mov ax,mar
 	001122b0 push op
 	001122b8 mov op,ax
 	001122c0 farpush bx
 	001122c8 setfuncargs 0x1
 	001122d0 mov ax,0x69ef20
 	001122dc farcall ax
 	001122e4 farsubsp 0x1
 	001122ec pop op
 	001122f4 sourceline 0x4e7
 	001122fc push op
 	00112304 mov ax,0x2b6330
 	00112310 farpush ax
 	00112318 mov ax,0x138
 	00112324 farpush ax
 	0011232c mov ax,0x92
 	00112338 farpush ax
 	00112340 mov ax,0x0
 	0011234c farpush ax
 	00112354 mov mar,0x3cef20
 	00112360 mov ax,mar
 	0011236c mov op,ax
 	00112374 setfuncargs 0x4
 	0011237c mov ax,0x6aef20
 	00112388 farcall ax
 	00112390 farsubsp 0x4
 	00112398 pop op
 	001123a0 sourceline 0x4e8
 	001123a8 mov ax,0x0
 	001123b4 ret

iPharmacyCard_Look$0:
	[001123b8]
 	001123b8 sourceline 0x4ec
 	001123c0 thisaddr
 	001123c8 sourceline 0x4ed
 	001123d0 mov ax,0x1
 	001123dc mov bx,ax
*	001123e8 mov mar,0x3cef20
 	001123f4 mov ax,mar
 	00112400 push op
 	00112408 mov op,ax
 	00112410 farpush bx
 	00112418 setfuncargs 0x1
 	00112420 mov ax,0x69ef20
 	0011242c farcall ax
 	00112434 farsubsp 0x1
 	0011243c pop op
 	00112444 sourceline 0x4ee
 	0011244c push op
 	00112454 mov ax,0x2b6373
 	00112460 farpush ax
 	00112468 mov ax,0x138
 	00112474 farpush ax
 	0011247c mov ax,0x92
 	00112488 farpush ax
 	00112490 mov ax,0x0
 	0011249c farpush ax
 	001124a4 mov mar,0x3cef20
 	001124b0 mov ax,mar
 	001124bc mov op,ax
 	001124c4 setfuncargs 0x4
 	001124cc mov ax,0x6aef20
 	001124d8 farcall ax
 	001124e0 farsubsp 0x4
 	001124e8 pop op
 	001124f0 sourceline 0x4ef
 	001124f8 mov ax,0x0
 	00112504 ret

iPills_Look$0:
	[00112508]
 	00112508 sourceline 0x4f3
 	00112510 thisaddr
 	00112518 sourceline 0x4f4
 	00112520 mov ax,0x1
 	0011252c mov bx,ax
*	00112538 mov mar,0x3cef20
 	00112544 mov ax,mar
 	00112550 push op
 	00112558 mov op,ax
 	00112560 farpush bx
 	00112568 setfuncargs 0x1
 	00112570 mov ax,0x69ef20
 	0011257c farcall ax
 	00112584 farsubsp 0x1
 	0011258c pop op
 	00112594 sourceline 0x4f5
 	0011259c push op
 	001125a4 mov ax,0x2b63ac
 	001125b0 farpush ax
 	001125b8 mov ax,0x138
 	001125c4 farpush ax
 	001125cc mov ax,0x92
 	001125d8 farpush ax
 	001125e0 mov ax,0x0
 	001125ec farpush ax
 	001125f4 mov mar,0x3cef20
 	00112600 mov ax,mar
 	0011260c mov op,ax
 	00112614 setfuncargs 0x4
 	0011261c mov ax,0x6aef20
 	00112628 farcall ax
 	00112630 farsubsp 0x4
 	00112638 pop op
 	00112640 sourceline 0x4f6
 	00112648 mov ax,0x0
 	00112654 ret

iPeroxie_Look$0:
	[00112658]
 	00112658 sourceline 0x4fa
 	00112660 thisaddr
 	00112668 sourceline 0x4fb
 	00112670 mov ax,0x1
 	0011267c mov bx,ax
*	00112688 mov mar,0x3cef20
 	00112694 mov ax,mar
 	001126a0 push op
 	001126a8 mov op,ax
 	001126b0 farpush bx
 	001126b8 setfuncargs 0x1
 	001126c0 mov ax,0x69ef20
 	001126cc farcall ax
 	001126d4 farsubsp 0x1
 	001126dc pop op
 	001126e4 sourceline 0x4fc
 	001126ec push op
 	001126f4 mov ax,0x2b63cd
 	00112700 farpush ax
 	00112708 mov ax,0x138
 	00112714 farpush ax
 	0011271c mov ax,0x92
 	00112728 farpush ax
 	00112730 mov ax,0x0
 	0011273c farpush ax
 	00112744 mov mar,0x3cef20
 	00112750 mov ax,mar
 	0011275c mov op,ax
 	00112764 setfuncargs 0x4
 	0011276c mov ax,0x6aef20
 	00112778 farcall ax
 	00112780 farsubsp 0x4
 	00112788 pop op
 	00112790 sourceline 0x4fd
 	00112798 mov ax,0x0
 	001127a4 ret

iKnife_Look$0:
	[001127a8]
 	001127a8 sourceline 0x501
 	001127b0 thisaddr
 	001127b8 sourceline 0x502
 	001127c0 mov ax,0x1
 	001127cc mov bx,ax
*	001127d8 mov mar,0x3cef20
 	001127e4 mov ax,mar
 	001127f0 push op
 	001127f8 mov op,ax
 	00112800 farpush bx
 	00112808 setfuncargs 0x1
 	00112810 mov ax,0x69ef20
 	0011281c farcall ax
 	00112824 farsubsp 0x1
 	0011282c pop op
 	00112834 sourceline 0x503
 	0011283c push op
 	00112844 mov ax,0x2b63e6
 	00112850 farpush ax
 	00112858 mov ax,0x138
 	00112864 farpush ax
 	0011286c mov ax,0x92
 	00112878 farpush ax
 	00112880 mov ax,0x0
 	0011288c farpush ax
 	00112894 mov mar,0x3cef20
 	001128a0 mov ax,mar
 	001128ac mov op,ax
 	001128b4 setfuncargs 0x4
 	001128bc mov ax,0x6aef20
 	001128c8 farcall ax
 	001128d0 farsubsp 0x4
 	001128d8 pop op
 	001128e0 sourceline 0x504
 	001128e8 mov ax,0x0
 	001128f4 ret

iMustache_Look$0:
	[001128f8]
 	001128f8 sourceline 0x508
 	00112900 thisaddr
 	00112908 sourceline 0x509
 	00112910 mov ax,0x1
 	0011291c mov bx,ax
*	00112928 mov mar,0x3cef20
 	00112934 mov ax,mar
 	00112940 push op
 	00112948 mov op,ax
 	00112950 farpush bx
 	00112958 setfuncargs 0x1
 	00112960 mov ax,0x69ef20
 	0011296c farcall ax
 	00112974 farsubsp 0x1
 	0011297c pop op
 	00112984 sourceline 0x50a
 	0011298c push op
 	00112994 mov ax,0x2b6427
 	001129a0 farpush ax
 	001129a8 mov ax,0x138
 	001129b4 farpush ax
 	001129bc mov ax,0x92
 	001129c8 farpush ax
 	001129d0 mov ax,0x0
 	001129dc farpush ax
 	001129e4 mov mar,0x3cef20
 	001129f0 mov ax,mar
 	001129fc mov op,ax
 	00112a04 setfuncargs 0x4
 	00112a0c mov ax,0x6aef20
 	00112a18 farcall ax
 	00112a20 farsubsp 0x4
 	00112a28 pop op
 	00112a30 sourceline 0x50b
 	00112a38 mov ax,0x0
 	00112a44 ret

iFakePapers_Look$0:
	[00112a48]
 	00112a48 sourceline 0x50f
 	00112a50 thisaddr
 	00112a58 sourceline 0x510
 	00112a60 mov ax,0x1
 	00112a6c mov bx,ax
*	00112a78 mov mar,0x3cef20
 	00112a84 mov ax,mar
 	00112a90 push op
 	00112a98 mov op,ax
 	00112aa0 farpush bx
 	00112aa8 setfuncargs 0x1
 	00112ab0 mov ax,0x69ef20
 	00112abc farcall ax
 	00112ac4 farsubsp 0x1
 	00112acc pop op
 	00112ad4 sourceline 0x511
 	00112adc push op
 	00112ae4 mov ax,0x2b6463
 	00112af0 farpush ax
 	00112af8 mov ax,0x138
 	00112b04 farpush ax
 	00112b0c mov ax,0x92
 	00112b18 farpush ax
 	00112b20 mov ax,0x0
 	00112b2c farpush ax
 	00112b34 mov mar,0x3cef20
 	00112b40 mov ax,mar
 	00112b4c mov op,ax
 	00112b54 setfuncargs 0x4
 	00112b5c mov ax,0x6aef20
 	00112b68 farcall ax
 	00112b70 farsubsp 0x4
 	00112b78 pop op
 	00112b80 sourceline 0x512
 	00112b88 mov ax,0x0
 	00112b94 ret

iTableLeg_Look$0:
	[00112b98]
 	00112b98 sourceline 0x516
 	00112ba0 thisaddr
 	00112ba8 sourceline 0x517
 	00112bb0 mov ax,0x1
 	00112bbc mov bx,ax
*	00112bc8 mov mar,0x3cef20
 	00112bd4 mov ax,mar
 	00112be0 push op
 	00112be8 mov op,ax
 	00112bf0 farpush bx
 	00112bf8 setfuncargs 0x1
 	00112c00 mov ax,0x69ef20
 	00112c0c farcall ax
 	00112c14 farsubsp 0x1
 	00112c1c pop op
 	00112c24 sourceline 0x518
 	00112c2c push op
 	00112c34 mov ax,0x2b6498
 	00112c40 farpush ax
 	00112c48 mov ax,0x138
 	00112c54 farpush ax
 	00112c5c mov ax,0x92
 	00112c68 farpush ax
 	00112c70 mov ax,0x0
 	00112c7c farpush ax
 	00112c84 mov mar,0x3cef20
 	00112c90 mov ax,mar
 	00112c9c mov op,ax
 	00112ca4 setfuncargs 0x4
 	00112cac mov ax,0x6aef20
 	00112cb8 farcall ax
 	00112cc0 farsubsp 0x4
 	00112cc8 pop op
 	00112cd0 sourceline 0x519
 	00112cd8 mov ax,0x0
 	00112ce4 ret

iMapHut_Look$0:
	[00112ce8]
 	00112ce8 sourceline 0x51d
 	00112cf0 thisaddr
 	00112cf8 sourceline 0x51e
 	00112d00 mov ax,0x1
 	00112d0c mov bx,ax
*	00112d18 mov mar,0x3cef20
 	00112d24 mov ax,mar
 	00112d30 push op
 	00112d38 mov op,ax
 	00112d40 farpush bx
 	00112d48 setfuncargs 0x1
 	00112d50 mov ax,0x69ef20
 	00112d5c farcall ax
 	00112d64 farsubsp 0x1
 	00112d6c pop op
 	00112d74 sourceline 0x51f
 	00112d7c mov mar,0x80ef20
 	00112d88 memread4 ax
 	00112d90 lnot ax
 	00112d98 jz 0x00112e48
		00112e48: CONDITIONAL_JUMP
		00112da0: FALL_THROUGH

	[00112da0]
		00112ce8: FALL_THROUGH
 	00112da0 push op
 	00112da8 mov ax,0x7cfe
 	00112db4 farpush ax
 	00112dbc mov mar,0x816f20
 	00112dc8 mov ax,mar
 	00112dd4 farpush ax
 	00112ddc mov mar,0x81ef20
 	00112de8 mov ax,mar
 	00112df4 mov op,ax
 	00112dfc setfuncargs 0x2
 	00112e04 mov ax,0x7e6f20
 	00112e10 farcall ax
 	00112e18 farsubsp 0x2
 	00112e20 pop op
 	00112e28 mov ax,0x1
 	00112e34 mov mar,0x80ef20
 	00112e40 memwrite4 ax
		00112e48: FALL_THROUGH

	[00112e48]
		00112ce8: CONDITIONAL_JUMP
		00112da0: FALL_THROUGH
 	00112e48 sourceline 0x521
 	00112e50 mov mar,0x826f20
 	00112e5c memread4 ax
 	00112e64 lnot ax
 	00112e6c jz 0x00112f30
		00112f30: CONDITIONAL_JUMP
		00112e74: FALL_THROUGH

	[00112e74]
		00112e48: FALL_THROUGH
 	00112e74 sourceline 0x523
 	00112e7c push op
 	00112e84 mov ax,0x2b64c0
 	00112e90 farpush ax
 	00112e98 mov ax,0x138
 	00112ea4 farpush ax
 	00112eac mov ax,0x92
 	00112eb8 farpush ax
 	00112ec0 mov ax,0x0
 	00112ecc farpush ax
 	00112ed4 mov mar,0x3cef20
 	00112ee0 mov ax,mar
 	00112eec mov op,ax
 	00112ef4 setfuncargs 0x4
 	00112efc mov ax,0x6aef20
 	00112f08 farcall ax
 	00112f10 farsubsp 0x4
 	00112f18 pop op
 	00112f20 sourceline 0x524
 	00112f28 jmp 0x00112fdc
		00112fdc: UNCONDITIONAL_JUMP

	[00112f30]
		00112e48: CONDITIONAL_JUMP
 	00112f30 sourceline 0x527
 	00112f38 push op
 	00112f40 mov ax,0x2b65a8
 	00112f4c farpush ax
 	00112f54 mov ax,0x138
 	00112f60 farpush ax
 	00112f68 mov ax,0x92
 	00112f74 farpush ax
 	00112f7c mov ax,0x0
 	00112f88 farpush ax
 	00112f90 mov mar,0x3cef20
 	00112f9c mov ax,mar
 	00112fa8 mov op,ax
 	00112fb0 setfuncargs 0x4
 	00112fb8 mov ax,0x6aef20
 	00112fc4 farcall ax
 	00112fcc farsubsp 0x4
 	00112fd4 pop op
		00112fdc: FALL_THROUGH

	[00112fdc]
		00112e74: UNCONDITIONAL_JUMP
		00112f30: FALL_THROUGH
 	00112fdc sourceline 0x529
 	00112fe4 mov ax,0x0
 	00112ff0 ret

iWoodenBoard_Look$0:
	[00112ff4]
 	00112ff4 sourceline 0x52e
 	00112ffc thisaddr
 	00113004 sourceline 0x52f
 	0011300c mov ax,0x1
 	00113018 mov bx,ax
*	00113024 mov mar,0x3cef20
 	00113030 mov ax,mar
 	0011303c push op
 	00113044 mov op,ax
 	0011304c farpush bx
 	00113054 setfuncargs 0x1
 	0011305c mov ax,0x69ef20
 	00113068 farcall ax
 	00113070 farsubsp 0x1
 	00113078 pop op
 	00113080 sourceline 0x530
 	00113088 push op
 	00113090 mov ax,0x2b6609
 	0011309c farpush ax
 	001130a4 mov ax,0x138
 	001130b0 farpush ax
 	001130b8 mov ax,0x92
 	001130c4 farpush ax
 	001130cc mov ax,0x0
 	001130d8 farpush ax
 	001130e0 mov mar,0x3cef20
 	001130ec mov ax,mar
 	001130f8 mov op,ax
 	00113100 setfuncargs 0x4
 	00113108 mov ax,0x6aef20
 	00113114 farcall ax
 	0011311c farsubsp 0x4
 	00113124 pop op
 	0011312c sourceline 0x531
 	00113134 mov ax,0x0
 	00113140 ret

iWaxBlock_Look$0:
	[00113144]
 	00113144 sourceline 0x536
 	0011314c thisaddr
 	00113154 sourceline 0x537
 	0011315c mov ax,0x1
 	00113168 mov bx,ax
*	00113174 mov mar,0x3cef20
 	00113180 mov ax,mar
 	0011318c push op
 	00113194 mov op,ax
 	0011319c farpush bx
 	001131a4 setfuncargs 0x1
 	001131ac mov ax,0x69ef20
 	001131b8 farcall ax
 	001131c0 farsubsp 0x1
 	001131c8 pop op
 	001131d0 sourceline 0x538
 	001131d8 push op
 	001131e0 mov ax,0x2b6623
 	001131ec farpush ax
 	001131f4 mov ax,0x138
 	00113200 farpush ax
 	00113208 mov ax,0x92
 	00113214 farpush ax
 	0011321c mov ax,0x0
 	00113228 farpush ax
 	00113230 mov mar,0x3cef20
 	0011323c mov ax,mar
 	00113248 mov op,ax
 	00113250 setfuncargs 0x4
 	00113258 mov ax,0x6aef20
 	00113264 farcall ax
 	0011326c farsubsp 0x4
 	00113274 pop op
 	0011327c sourceline 0x539
 	00113284 mov ax,0x0
 	00113290 ret

iWoodenStick_Look$0:
	[00113294]
 	00113294 sourceline 0x53d
 	0011329c thisaddr
 	001132a4 sourceline 0x53e
 	001132ac mov ax,0x1
 	001132b8 mov bx,ax
*	001132c4 mov mar,0x3cef20
 	001132d0 mov ax,mar
 	001132dc push op
 	001132e4 mov op,ax
 	001132ec farpush bx
 	001132f4 setfuncargs 0x1
 	001132fc mov ax,0x69ef20
 	00113308 farcall ax
 	00113310 farsubsp 0x1
 	00113318 pop op
 	00113320 sourceline 0x53f
 	00113328 push op
 	00113330 mov ax,0x2b6644
 	0011333c farpush ax
 	00113344 mov ax,0x138
 	00113350 farpush ax
 	00113358 mov ax,0x92
 	00113364 farpush ax
 	0011336c mov ax,0x0
 	00113378 farpush ax
 	00113380 mov mar,0x3cef20
 	0011338c mov ax,mar
 	00113398 mov op,ax
 	001133a0 setfuncargs 0x4
 	001133a8 mov ax,0x6aef20
 	001133b4 farcall ax
 	001133bc farsubsp 0x4
 	001133c4 pop op
 	001133cc sourceline 0x540
 	001133d4 mov ax,0x0
 	001133e0 ret

iLittleRope_Look$0:
	[001133e4]
 	001133e4 sourceline 0x545
 	001133ec thisaddr
 	001133f4 sourceline 0x546
 	001133fc mov ax,0x1
 	00113408 mov bx,ax
*	00113414 mov mar,0x3cef20
 	00113420 mov ax,mar
 	0011342c push op
 	00113434 mov op,ax
 	0011343c farpush bx
 	00113444 setfuncargs 0x1
 	0011344c mov ax,0x69ef20
 	00113458 farcall ax
 	00113460 farsubsp 0x1
 	00113468 pop op
 	00113470 sourceline 0x547
 	00113478 push op
 	00113480 mov ax,0x2b6678
 	0011348c farpush ax
 	00113494 mov ax,0x138
 	001134a0 farpush ax
 	001134a8 mov ax,0x92
 	001134b4 farpush ax
 	001134bc mov ax,0x0
 	001134c8 farpush ax
 	001134d0 mov mar,0x3cef20
 	001134dc mov ax,mar
 	001134e8 mov op,ax
 	001134f0 setfuncargs 0x4
 	001134f8 mov ax,0x6aef20
 	00113504 farcall ax
 	0011350c farsubsp 0x4
 	00113514 pop op
 	0011351c sourceline 0x548
 	00113524 mov ax,0x0
 	00113530 ret

iSoftWax_Look$0:
	[00113534]
 	00113534 sourceline 0x54d
 	0011353c thisaddr
 	00113544 sourceline 0x54e
 	0011354c mov ax,0x1
 	00113558 mov bx,ax
*	00113564 mov mar,0x3cef20
 	00113570 mov ax,mar
 	0011357c push op
 	00113584 mov op,ax
 	0011358c farpush bx
 	00113594 setfuncargs 0x1
 	0011359c mov ax,0x69ef20
 	001135a8 farcall ax
 	001135b0 farsubsp 0x1
 	001135b8 pop op
 	001135c0 sourceline 0x54f
 	001135c8 push op
 	001135d0 mov ax,0x2b66a3
 	001135dc farpush ax
 	001135e4 mov ax,0x138
 	001135f0 farpush ax
 	001135f8 mov ax,0x92
 	00113604 farpush ax
 	0011360c mov ax,0x0
 	00113618 farpush ax
 	00113620 mov mar,0x3cef20
 	0011362c mov ax,mar
 	00113638 mov op,ax
 	00113640 setfuncargs 0x4
 	00113648 mov ax,0x6aef20
 	00113654 farcall ax
 	0011365c farsubsp 0x4
 	00113664 pop op
 	0011366c sourceline 0x550
 	00113674 mov ax,0x0
 	00113680 ret

iCandle_Look$0:
	[00113684]
 	00113684 sourceline 0x555
 	0011368c thisaddr
 	00113694 sourceline 0x556
 	0011369c mov ax,0x1
 	001136a8 mov bx,ax
*	001136b4 mov mar,0x3cef20
 	001136c0 mov ax,mar
 	001136cc push op
 	001136d4 mov op,ax
 	001136dc farpush bx
 	001136e4 setfuncargs 0x1
 	001136ec mov ax,0x69ef20
 	001136f8 farcall ax
 	00113700 farsubsp 0x1
 	00113708 pop op
 	00113710 sourceline 0x557
 	00113718 push op
 	00113720 mov ax,0x2b66b5
 	0011372c farpush ax
 	00113734 mov ax,0x138
 	00113740 farpush ax
 	00113748 mov ax,0x92
 	00113754 farpush ax
 	0011375c mov ax,0x0
 	00113768 farpush ax
 	00113770 mov mar,0x3cef20
 	0011377c mov ax,mar
 	00113788 mov op,ax
 	00113790 setfuncargs 0x4
 	00113798 mov ax,0x6aef20
 	001137a4 farcall ax
 	001137ac farsubsp 0x4
 	001137b4 pop op
 	001137bc sourceline 0x558
 	001137c4 mov ax,0x0
 	001137d0 ret

iFiringCandle_Look$0:
	[001137d4]
 	001137d4 sourceline 0x55c
 	001137dc thisaddr
 	001137e4 sourceline 0x55d
 	001137ec mov ax,0x1
 	001137f8 mov bx,ax
*	00113804 mov mar,0x3cef20
 	00113810 mov ax,mar
 	0011381c push op
 	00113824 mov op,ax
 	0011382c farpush bx
 	00113834 setfuncargs 0x1
 	0011383c mov ax,0x69ef20
 	00113848 farcall ax
 	00113850 farsubsp 0x1
 	00113858 pop op
 	00113860 sourceline 0x55e
 	00113868 push op
 	00113870 mov ax,0x2b66ca
 	0011387c farpush ax
 	00113884 mov ax,0x138
 	00113890 farpush ax
 	00113898 mov ax,0x92
 	001138a4 farpush ax
 	001138ac mov ax,0x0
 	001138b8 farpush ax
 	001138c0 mov mar,0x3cef20
 	001138cc mov ax,mar
 	001138d8 mov op,ax
 	001138e0 setfuncargs 0x4
 	001138e8 mov ax,0x6aef20
 	001138f4 farcall ax
 	001138fc farsubsp 0x4
 	00113904 pop op
 	0011390c sourceline 0x55f
 	00113914 mov ax,0x0
 	00113920 ret

iSumerianSymbol_Look$0:
	[00113924]
 	00113924 sourceline 0x564
 	0011392c thisaddr
 	00113934 sourceline 0x565
 	0011393c mov ax,0x0
 	00113948 mov bx,ax
*	00113954 mov mar,0x30ef20
 	00113960 mov ax,mar
 	0011396c push op
 	00113974 mov op,ax
 	0011397c farpush bx
 	00113984 setfuncargs 0x1
 	0011398c mov ax,0x3a6f20
 	00113998 farcall ax
 	001139a0 farsubsp 0x1
 	001139a8 pop op
 	001139b0 sourceline 0x566
 	001139b8 mov ax,0x0
 	001139c4 mov bx,ax
 	001139d0 mov mar,0x67ef20
 	001139dc mov ax,mar
 	001139e8 push op
 	001139f0 mov op,ax
 	001139f8 farpush bx
 	00113a00 setfuncargs 0x1
 	00113a08 mov ax,0x3a6f20
 	00113a14 farcall ax
 	00113a1c farsubsp 0x1
 	00113a24 pop op
 	00113a2c sourceline 0x567
 	00113a34 mov ax,0x1
 	00113a40 mov bx,ax
 	00113a4c mov mar,0x386f20
 	00113a58 mov ax,mar
 	00113a64 push op
 	00113a6c mov op,ax
 	00113a74 farpush bx
 	00113a7c setfuncargs 0x1
 	00113a84 mov ax,0x3a6f20
 	00113a90 farcall ax
 	00113a98 farsubsp 0x1
 	00113aa0 pop op
 	00113aa8 sourceline 0x568
 	00113ab0 mov ax,0x1
 	00113abc mov mar,0x32ef20
 	00113ac8 memwrite4 ax
 	00113ad0 sourceline 0x569
 	00113ad8 mov ax,0x0
 	00113ae4 mov mar,0x3b6f20
 	00113af0 memwrite4 ax
 	00113af8 sourceline 0x56a
 	00113b00 mov ax,0x4b
 	00113b0c farpush ax
 	00113b14 mov ax,0x9e
 	00113b20 farpush ax
 	00113b28 setfuncargs 0x2
 	00113b30 mov ax,0x686f20
 	00113b3c farcall ax
 	00113b44 farsubsp 0x2
 	00113b4c sourceline 0x56b
 	00113b54 mov ax,0x1
 	00113b60 mov bx,ax
 	00113b6c mov mar,0x3cef20
 	00113b78 mov ax,mar
 	00113b84 push op
 	00113b8c mov op,ax
 	00113b94 farpush bx
 	00113b9c setfuncargs 0x1
 	00113ba4 mov ax,0x69ef20
 	00113bb0 farcall ax
 	00113bb8 farsubsp 0x1
 	00113bc0 pop op
 	00113bc8 sourceline 0x56c
 	00113bd0 mov ax,0xf1
 	00113bdc farpush ax
 	00113be4 mov ax,0x2
 	00113bf0 farpush ax
 	00113bf8 setfuncargs 0x2
 	00113c00 mov ax,0x376f20
 	00113c0c farcall ax
 	00113c14 farsubsp 0x2
 	00113c1c sourceline 0x56d
 	00113c24 mov ax,0x2
 	00113c30 mov bx,ax
 	00113c3c mov mar,0x336f20
 	00113c48 mov ax,mar
 	00113c54 farpush bx
 	00113c5c setfuncargs 0x1
 	00113c64 mov ax,0x37ef20
 	00113c70 farcall ax
 	00113c78 farsubsp 0x1
 	00113c80 sourceline 0x56e
 	00113c88 mov mar,0x82ef20
 	00113c94 memread4 ax
 	00113c9c lnot ax
 	00113ca4 jz 0x00113d58
		00113d58: CONDITIONAL_JUMP
		00113cac: FALL_THROUGH

	[00113cac]
		00113924: FALL_THROUGH
 	00113cac push op
 	00113cb4 mov ax,0x2b66de
 	00113cc0 farpush ax
 	00113cc8 mov ax,0x138
 	00113cd4 farpush ax
 	00113cdc mov ax,0x92
 	00113ce8 farpush ax
 	00113cf0 mov ax,0x0
 	00113cfc farpush ax
 	00113d04 mov mar,0x3cef20
 	00113d10 mov ax,mar
 	00113d1c mov op,ax
 	00113d24 setfuncargs 0x4
 	00113d2c mov ax,0x6aef20
 	00113d38 farcall ax
 	00113d40 farsubsp 0x4
 	00113d48 pop op
 	00113d50 jmp 0x00113e04
		00113e04: UNCONDITIONAL_JUMP

	[00113d58]
		00113924: CONDITIONAL_JUMP
 	00113d58 sourceline 0x56f
 	00113d60 push op
 	00113d68 mov ax,0x2b6705
 	00113d74 farpush ax
 	00113d7c mov ax,0x138
 	00113d88 farpush ax
 	00113d90 mov ax,0x92
 	00113d9c farpush ax
 	00113da4 mov ax,0x0
 	00113db0 farpush ax
 	00113db8 mov mar,0x3cef20
 	00113dc4 mov ax,mar
 	00113dd0 mov op,ax
 	00113dd8 setfuncargs 0x4
 	00113de0 mov ax,0x6aef20
 	00113dec farcall ax
 	00113df4 farsubsp 0x4
 	00113dfc pop op
		00113e04: FALL_THROUGH

	[00113e04]
		00113cac: UNCONDITIONAL_JUMP
		00113d58: FALL_THROUGH
 	00113e04 sourceline 0x570
 	00113e0c mov ax,0x4b
 	00113e18 farpush ax
 	00113e20 mov ax,0x9e
 	00113e2c farpush ax
 	00113e34 setfuncargs 0x2
 	00113e3c mov ax,0x686f20
 	00113e48 farcall ax
 	00113e50 farsubsp 0x2
 	00113e58 sourceline 0x571
 	00113e60 mov ax,0x0
 	00113e6c ret

iFutureCode_Look$0:
	[00113e70]
 	00113e70 sourceline 0x575
 	00113e78 thisaddr
 	00113e80 sourceline 0x576
 	00113e88 mov ax,0x0
 	00113e94 mov bx,ax
*	00113ea0 mov mar,0x30ef20
 	00113eac mov ax,mar
 	00113eb8 push op
 	00113ec0 mov op,ax
 	00113ec8 farpush bx
 	00113ed0 setfuncargs 0x1
 	00113ed8 mov ax,0x3a6f20
 	00113ee4 farcall ax
 	00113eec farsubsp 0x1
 	00113ef4 pop op
 	00113efc sourceline 0x577
 	00113f04 mov ax,0x0
 	00113f10 mov bx,ax
 	00113f1c mov mar,0x67ef20
 	00113f28 mov ax,mar
 	00113f34 push op
 	00113f3c mov op,ax
 	00113f44 farpush bx
 	00113f4c setfuncargs 0x1
 	00113f54 mov ax,0x3a6f20
 	00113f60 farcall ax
 	00113f68 farsubsp 0x1
 	00113f70 pop op
 	00113f78 sourceline 0x578
 	00113f80 mov ax,0x1
 	00113f8c mov bx,ax
 	00113f98 mov mar,0x36ef20
 	00113fa4 mov ax,mar
 	00113fb0 push op
 	00113fb8 mov op,ax
 	00113fc0 farpush bx
 	00113fc8 setfuncargs 0x1
 	00113fd0 mov ax,0x3a6f20
 	00113fdc farcall ax
 	00113fe4 farsubsp 0x1
 	00113fec pop op
 	00113ff4 sourceline 0x579
 	00113ffc mov ax,0x1
 	00114008 mov mar,0x32ef20
 	00114014 memwrite4 ax
 	0011401c sourceline 0x57a
 	00114024 mov ax,0x0
 	00114030 mov mar,0x3b6f20
 	0011403c memwrite4 ax
 	00114044 sourceline 0x57b
 	0011404c mov ax,0x4b
 	00114058 farpush ax
 	00114060 mov ax,0x9e
 	0011406c farpush ax
 	00114074 setfuncargs 0x2
 	0011407c mov ax,0x686f20
 	00114088 farcall ax
 	00114090 farsubsp 0x2
 	00114098 sourceline 0x57c
 	001140a0 mov ax,0x1
 	001140ac mov bx,ax
 	001140b8 mov mar,0x3cef20
 	001140c4 mov ax,mar
 	001140d0 push op
 	001140d8 mov op,ax
 	001140e0 farpush bx
 	001140e8 setfuncargs 0x1
 	001140f0 mov ax,0x69ef20
 	001140fc farcall ax
 	00114104 farsubsp 0x1
 	0011410c pop op
 	00114114 sourceline 0x57d
 	0011411c mov ax,0xf1
 	00114128 farpush ax
 	00114130 mov ax,0x2
 	0011413c farpush ax
 	00114144 setfuncargs 0x2
 	0011414c mov ax,0x376f20
 	00114158 farcall ax
 	00114160 farsubsp 0x2
 	00114168 sourceline 0x57e
 	00114170 mov ax,0x2
 	0011417c mov bx,ax
 	00114188 mov mar,0x336f20
 	00114194 mov ax,mar
 	001141a0 farpush bx
 	001141a8 setfuncargs 0x1
 	001141b0 mov ax,0x37ef20
 	001141bc farcall ax
 	001141c4 farsubsp 0x1
 	001141cc sourceline 0x57f
 	001141d4 push op
 	001141dc mov ax,0x2b6749
 	001141e8 farpush ax
 	001141f0 mov ax,0x138
 	001141fc farpush ax
 	00114204 mov ax,0x92
 	00114210 farpush ax
 	00114218 mov ax,0x0
 	00114224 farpush ax
 	0011422c mov mar,0x3cef20
 	00114238 mov ax,mar
 	00114244 mov op,ax
 	0011424c setfuncargs 0x4
 	00114254 mov ax,0x6aef20
 	00114260 farcall ax
 	00114268 farsubsp 0x4
 	00114270 pop op
 	00114278 sourceline 0x580
 	00114280 mov ax,0x4b
 	0011428c farpush ax
 	00114294 mov ax,0x9e
 	001142a0 farpush ax
 	001142a8 setfuncargs 0x2
 	001142b0 mov ax,0x686f20
 	001142bc farcall ax
 	001142c4 farsubsp 0x2
 	001142cc sourceline 0x581
 	001142d4 mov ax,0x0
 	001142e0 ret

iWireBox_Look$0:
	[001142e4]
 	001142e4 sourceline 0x585
 	001142ec thisaddr
 	001142f4 sourceline 0x586
 	001142fc mov ax,0x1
 	00114308 mov bx,ax
*	00114314 mov mar,0x3cef20
 	00114320 mov ax,mar
 	0011432c push op
 	00114334 mov op,ax
 	0011433c farpush bx
 	00114344 setfuncargs 0x1
 	0011434c mov ax,0x69ef20
 	00114358 farcall ax
 	00114360 farsubsp 0x1
 	00114368 pop op
 	00114370 sourceline 0x587
 	00114378 push op
 	00114380 mov ax,0x2b67a8
 	0011438c farpush ax
 	00114394 mov ax,0x138
 	001143a0 farpush ax
 	001143a8 mov ax,0x92
 	001143b4 farpush ax
 	001143bc mov ax,0x0
 	001143c8 farpush ax
 	001143d0 mov mar,0x3cef20
 	001143dc mov ax,mar
 	001143e8 mov op,ax
 	001143f0 setfuncargs 0x4
 	001143f8 mov ax,0x6aef20
 	00114404 farcall ax
 	0011440c farsubsp 0x4
 	00114414 pop op
 	0011441c sourceline 0x588
 	00114424 mov ax,0x0
 	00114430 ret

iSumerianSymbol2_Look$0:
	[00114434]
 	00114434 sourceline 0x58c
 	0011443c thisaddr
 	00114444 sourceline 0x58d
 	0011444c mov ax,0x0
 	00114458 mov bx,ax
*	00114464 mov mar,0x30ef20
 	00114470 mov ax,mar
 	0011447c push op
 	00114484 mov op,ax
 	0011448c farpush bx
 	00114494 setfuncargs 0x1
 	0011449c mov ax,0x3a6f20
 	001144a8 farcall ax
 	001144b0 farsubsp 0x1
 	001144b8 pop op
 	001144c0 sourceline 0x58e
 	001144c8 mov ax,0x0
 	001144d4 mov bx,ax
 	001144e0 mov mar,0x67ef20
 	001144ec mov ax,mar
 	001144f8 push op
 	00114500 mov op,ax
 	00114508 farpush bx
 	00114510 setfuncargs 0x1
 	00114518 mov ax,0x3a6f20
 	00114524 farcall ax
 	0011452c farsubsp 0x1
 	00114534 pop op
 	0011453c sourceline 0x58f
 	00114544 mov ax,0x0
 	00114550 setfuncargs 0x0
 	00114558 mov ax,0x3e6f20
 	00114564 farcall ax
 	0011456c push ax
 	00114574 mov ax,0x2c787b
 	00114580 pop bx
 	00114588 streq bx,ax
 	00114594 mov ax,bx
 	001145a0 jz 0x00114624
		00114624: CONDITIONAL_JUMP
		001145a8: FALL_THROUGH

	[001145a8]
		00114434: FALL_THROUGH
 	001145a8 mov ax,0x8a5
 	001145b4 mov bx,ax
 	001145c0 mov mar,0x38ef20
 	001145cc mov ax,mar
 	001145d8 push op
 	001145e0 mov op,ax
 	001145e8 farpush bx
 	001145f0 setfuncargs 0x1
 	001145f8 mov ax,0x836f20
 	00114604 farcall ax
 	0011460c farsubsp 0x1
 	00114614 pop op
 	0011461c jmp 0x001146a0
		001146a0: UNCONDITIONAL_JUMP

	[00114624]
		00114434: CONDITIONAL_JUMP
 	00114624 sourceline 0x590
 	0011462c mov ax,0x8a6
 	00114638 mov bx,ax
 	00114644 mov mar,0x38ef20
 	00114650 mov ax,mar
 	0011465c push op
 	00114664 mov op,ax
 	0011466c farpush bx
 	00114674 setfuncargs 0x1
 	0011467c mov ax,0x836f20
 	00114688 farcall ax
 	00114690 farsubsp 0x1
 	00114698 pop op
		001146a0: FALL_THROUGH

	[001146a0]
		001145a8: UNCONDITIONAL_JUMP
		00114624: FALL_THROUGH
 	001146a0 sourceline 0x591
 	001146a8 mov ax,0x1
 	001146b4 mov bx,ax
 	001146c0 mov mar,0x38ef20
 	001146cc mov ax,mar
 	001146d8 push op
 	001146e0 mov op,ax
 	001146e8 farpush bx
 	001146f0 setfuncargs 0x1
 	001146f8 mov ax,0x3a6f20
 	00114704 farcall ax
 	0011470c farsubsp 0x1
 	00114714 pop op
 	0011471c sourceline 0x592
 	00114724 mov ax,0x1
 	00114730 mov mar,0x32ef20
 	0011473c memwrite4 ax
 	00114744 sourceline 0x593
 	0011474c mov ax,0x0
 	00114758 mov mar,0x3b6f20
 	00114764 memwrite4 ax
 	0011476c sourceline 0x594
 	00114774 mov ax,0x4b
 	00114780 farpush ax
 	00114788 mov ax,0x9e
 	00114794 farpush ax
 	0011479c setfuncargs 0x2
 	001147a4 mov ax,0x686f20
 	001147b0 farcall ax
 	001147b8 farsubsp 0x2
 	001147c0 sourceline 0x595
 	001147c8 mov ax,0x1
 	001147d4 mov bx,ax
 	001147e0 mov mar,0x3cef20
 	001147ec mov ax,mar
 	001147f8 push op
 	00114800 mov op,ax
 	00114808 farpush bx
 	00114810 setfuncargs 0x1
 	00114818 mov ax,0x69ef20
 	00114824 farcall ax
 	0011482c farsubsp 0x1
 	00114834 pop op
 	0011483c sourceline 0x596
 	00114844 mov ax,0xf1
 	00114850 farpush ax
 	00114858 mov ax,0x2
 	00114864 farpush ax
 	0011486c setfuncargs 0x2
 	00114874 mov ax,0x376f20
 	00114880 farcall ax
 	00114888 farsubsp 0x2
 	00114890 sourceline 0x597
 	00114898 mov ax,0x2
 	001148a4 mov bx,ax
 	001148b0 mov mar,0x336f20
 	001148bc mov ax,mar
 	001148c8 farpush bx
 	001148d0 setfuncargs 0x1
 	001148d8 mov ax,0x37ef20
 	001148e4 farcall ax
 	001148ec farsubsp 0x1
 	001148f4 sourceline 0x598
 	001148fc push op
 	00114904 mov ax,0x2b67c6
 	00114910 farpush ax
 	00114918 mov ax,0x138
 	00114924 farpush ax
 	0011492c mov ax,0x92
 	00114938 farpush ax
 	00114940 mov ax,0x0
 	0011494c farpush ax
 	00114954 mov mar,0x3cef20
 	00114960 mov ax,mar
 	0011496c mov op,ax
 	00114974 setfuncargs 0x4
 	0011497c mov ax,0x6aef20
 	00114988 farcall ax
 	00114990 farsubsp 0x4
 	00114998 pop op
 	001149a0 sourceline 0x599
 	001149a8 mov ax,0x4b
 	001149b4 farpush ax
 	001149bc mov ax,0x9e
 	001149c8 farpush ax
 	001149d0 setfuncargs 0x2
 	001149d8 mov ax,0x686f20
 	001149e4 farcall ax
 	001149ec farsubsp 0x2
 	001149f4 sourceline 0x59a
 	001149fc mov ax,0x0
 	00114a08 ret

iPhoto_Look$0:
	[00114a0c]
 	00114a0c sourceline 0x59e
 	00114a14 thisaddr
 	00114a1c sourceline 0x59f
 	00114a24 mov ax,0x1
 	00114a30 mov bx,ax
*	00114a3c mov mar,0x3cef20
 	00114a48 mov ax,mar
 	00114a54 push op
 	00114a5c mov op,ax
 	00114a64 farpush bx
 	00114a6c setfuncargs 0x1
 	00114a74 mov ax,0x69ef20
 	00114a80 farcall ax
 	00114a88 farsubsp 0x1
 	00114a90 pop op
 	00114a98 sourceline 0x5a0
 	00114aa0 push op
 	00114aa8 mov ax,0x2b67ed
 	00114ab4 farpush ax
 	00114abc mov ax,0x138
 	00114ac8 farpush ax
 	00114ad0 mov ax,0x92
 	00114adc farpush ax
 	00114ae4 mov ax,0x0
 	00114af0 farpush ax
 	00114af8 mov mar,0x3cef20
 	00114b04 mov ax,mar
 	00114b10 mov op,ax
 	00114b18 setfuncargs 0x4
 	00114b20 mov ax,0x6aef20
 	00114b2c farcall ax
 	00114b34 farsubsp 0x4
 	00114b3c pop op
 	00114b44 sourceline 0x5a1
 	00114b4c mov ax,0x2b6827
 	00114b58 farpush ax
 	00114b60 setfuncargs 0x1
 	00114b68 mov ax,0x7f6f20
 	00114b74 farcall ax
 	00114b7c farsubsp 0x1
 	00114b84 jz 0x00114d8c
		00114d8c: CONDITIONAL_JUMP
		00114b8c: FALL_THROUGH

	[00114b8c]
		00114a0c: FALL_THROUGH
 	00114b8c sourceline 0x5a3
 	00114b94 push op
 	00114b9c mov ax,0x2b682f
 	00114ba8 farpush ax
 	00114bb0 mov ax,0x138
 	00114bbc farpush ax
 	00114bc4 mov ax,0x92
 	00114bd0 farpush ax
 	00114bd8 mov ax,0x0
 	00114be4 farpush ax
 	00114bec mov mar,0x3cef20
 	00114bf8 mov ax,mar
 	00114c04 mov op,ax
 	00114c0c setfuncargs 0x4
 	00114c14 mov ax,0x6aef20
 	00114c20 farcall ax
 	00114c28 farsubsp 0x4
 	00114c30 pop op
 	00114c38 sourceline 0x5a4
 	00114c40 push op
 	00114c48 mov ax,0x0
 	00114c54 farpush ax
 	00114c5c mov ax,0x32
 	00114c68 farpush ax
 	00114c70 mov mar,0x83ef20
 	00114c7c mov ax,mar
 	00114c88 mov op,ax
 	00114c90 setfuncargs 0x2
 	00114c98 mov ax,0x2fef20
 	00114ca4 farcall ax
 	00114cac farsubsp 0x2
 	00114cb4 pop op
 	00114cbc sourceline 0x5a5
 	00114cc4 mov ax,0x46
 	00114cd0 farpush ax
 	00114cd8 setfuncargs 0x1
 	00114ce0 mov ax,0x426f20
 	00114cec farcall ax
 	00114cf4 farsubsp 0x1
 	00114cfc sourceline 0x5a6
 	00114d04 push op
 	00114d0c mov ax,0x7cfe
 	00114d18 farpush ax
 	00114d20 mov mar,0x846f20
 	00114d2c mov ax,mar
 	00114d38 farpush ax
 	00114d40 mov mar,0x3cef20
 	00114d4c mov ax,mar
 	00114d58 mov op,ax
 	00114d60 setfuncargs 0x2
 	00114d68 mov ax,0x7e6f20
 	00114d74 farcall ax
 	00114d7c farsubsp 0x2
 	00114d84 pop op
		00114d8c: FALL_THROUGH

	[00114d8c]
		00114a0c: CONDITIONAL_JUMP
		00114b8c: FALL_THROUGH
 	00114d8c sourceline 0x5a8
 	00114d94 mov ax,0x0
 	00114da0 ret

iBlood_Look$0:
	[00114da4]
 	00114da4 sourceline 0x5ad
 	00114dac thisaddr
 	00114db4 sourceline 0x5ae
 	00114dbc mov ax,0x1
 	00114dc8 mov bx,ax
*	00114dd4 mov mar,0x3cef20
 	00114de0 mov ax,mar
 	00114dec push op
 	00114df4 mov op,ax
 	00114dfc farpush bx
 	00114e04 setfuncargs 0x1
 	00114e0c mov ax,0x69ef20
 	00114e18 farcall ax
 	00114e20 farsubsp 0x1
 	00114e28 pop op
 	00114e30 sourceline 0x5af
 	00114e38 mov mar,0x84ef20
 	00114e44 memread4 ax
 	00114e4c lnot ax
 	00114e54 jz 0x00115000
		00115000: CONDITIONAL_JUMP
		00114e5c: FALL_THROUGH

	[00114e5c]
		00114da4: FALL_THROUGH
 	00114e5c sourceline 0x5b1
 	00114e64 mov mar,0x856f20
 	00114e70 memread4 ax
 	00114e78 lnot ax
 	00114e80 jz 0x00114f44
		00114f44: CONDITIONAL_JUMP
		00114e88: FALL_THROUGH

	[00114e88]
		00114e5c: FALL_THROUGH
 	00114e88 sourceline 0x5b3
 	00114e90 push op
 	00114e98 mov ax,0x2b6875
 	00114ea4 farpush ax
 	00114eac mov ax,0x138
 	00114eb8 farpush ax
 	00114ec0 mov ax,0x92
 	00114ecc farpush ax
 	00114ed4 mov ax,0x0
 	00114ee0 farpush ax
 	00114ee8 mov mar,0x3cef20
 	00114ef4 mov ax,mar
 	00114f00 mov op,ax
 	00114f08 setfuncargs 0x4
 	00114f10 mov ax,0x6aef20
 	00114f1c farcall ax
 	00114f24 farsubsp 0x4
 	00114f2c pop op
 	00114f34 sourceline 0x5b4
 	00114f3c jmp 0x00114ff0
		00114ff0: UNCONDITIONAL_JUMP

	[00114f44]
		00114e5c: CONDITIONAL_JUMP
 	00114f44 sourceline 0x5b7
 	00114f4c push op
 	00114f54 mov ax,0x2b68e6
 	00114f60 farpush ax
 	00114f68 mov ax,0x138
 	00114f74 farpush ax
 	00114f7c mov ax,0x92
 	00114f88 farpush ax
 	00114f90 mov ax,0x0
 	00114f9c farpush ax
 	00114fa4 mov mar,0x3cef20
 	00114fb0 mov ax,mar
 	00114fbc mov op,ax
 	00114fc4 setfuncargs 0x4
 	00114fcc mov ax,0x6aef20
 	00114fd8 farcall ax
 	00114fe0 farsubsp 0x4
 	00114fe8 pop op
		00114ff0: FALL_THROUGH

	[00114ff0]
		00114e88: UNCONDITIONAL_JUMP
		00114f44: FALL_THROUGH
 	00114ff0 sourceline 0x5b9
 	00114ff8 jmp 0x001150ac
		001150ac: UNCONDITIONAL_JUMP

	[00115000]
		00114da4: CONDITIONAL_JUMP
 	00115000 sourceline 0x5ba
 	00115008 push op
 	00115010 mov ax,0x2b691e
 	0011501c farpush ax
 	00115024 mov ax,0x138
 	00115030 farpush ax
 	00115038 mov ax,0x92
 	00115044 farpush ax
 	0011504c mov ax,0x0
 	00115058 farpush ax
 	00115060 mov mar,0x3cef20
 	0011506c mov ax,mar
 	00115078 mov op,ax
 	00115080 setfuncargs 0x4
 	00115088 mov ax,0x6aef20
 	00115094 farcall ax
 	0011509c farsubsp 0x4
 	001150a4 pop op
		001150ac: FALL_THROUGH

	[001150ac]
		00114ff0: UNCONDITIONAL_JUMP
		00115000: FALL_THROUGH
 	001150ac sourceline 0x5bb
 	001150b4 mov ax,0x0
 	001150c0 ret

iKey_Look$0:
	[001150c4]
 	001150c4 sourceline 0x5c0
 	001150cc thisaddr
 	001150d4 sourceline 0x5c1
*	001150dc mov mar,0x85ef20
 	001150e8 memread4 ax
 	001150f0 lnot ax
 	001150f8 jz 0x00115238
		00115238: CONDITIONAL_JUMP
		00115100: FALL_THROUGH

	[00115100]
		001150c4: FALL_THROUGH
 	00115100 sourceline 0x5c3
 	00115108 mov ax,0x1
 	00115114 mov bx,ax
 	00115120 mov mar,0x3cef20
 	0011512c mov ax,mar
 	00115138 push op
 	00115140 mov op,ax
 	00115148 farpush bx
 	00115150 setfuncargs 0x1
 	00115158 mov ax,0x69ef20
 	00115164 farcall ax
 	0011516c farsubsp 0x1
 	00115174 pop op
 	0011517c sourceline 0x5c4
 	00115184 push op
 	0011518c mov ax,0x2b6989
 	00115198 farpush ax
 	001151a0 mov ax,0x138
 	001151ac farpush ax
 	001151b4 mov ax,0x92
 	001151c0 farpush ax
 	001151c8 mov ax,0x0
 	001151d4 farpush ax
 	001151dc mov mar,0x3cef20
 	001151e8 mov ax,mar
 	001151f4 mov op,ax
 	001151fc setfuncargs 0x4
 	00115204 mov ax,0x6aef20
 	00115210 farcall ax
 	00115218 farsubsp 0x4
 	00115220 pop op
 	00115228 sourceline 0x5c5
 	00115230 jmp 0x00115360
		00115360: UNCONDITIONAL_JUMP

	[00115238]
		001150c4: CONDITIONAL_JUMP
 	00115238 sourceline 0x5c8
 	00115240 mov ax,0x1
 	0011524c mov bx,ax
 	00115258 mov mar,0x3cef20
 	00115264 mov ax,mar
 	00115270 push op
 	00115278 mov op,ax
 	00115280 farpush bx
 	00115288 setfuncargs 0x1
 	00115290 mov ax,0x69ef20
 	0011529c farcall ax
 	001152a4 farsubsp 0x1
 	001152ac pop op
 	001152b4 sourceline 0x5c9
 	001152bc push op
 	001152c4 mov ax,0x2b69eb
 	001152d0 farpush ax
 	001152d8 mov ax,0x138
 	001152e4 farpush ax
 	001152ec mov ax,0x92
 	001152f8 farpush ax
 	00115300 mov ax,0x0
 	0011530c farpush ax
 	00115314 mov mar,0x3cef20
 	00115320 mov ax,mar
 	0011532c mov op,ax
 	00115334 setfuncargs 0x4
 	0011533c mov ax,0x6aef20
 	00115348 farcall ax
 	00115350 farsubsp 0x4
 	00115358 pop op
		00115360: FALL_THROUGH

	[00115360]
		00115100: UNCONDITIONAL_JUMP
		00115238: FALL_THROUGH
 	00115360 sourceline 0x5cb
 	00115368 mov ax,0x0
 	00115374 ret

iDiary_Look$0:
	[00115378]
 	00115378 sourceline 0x5d0
 	00115380 thisaddr
 	00115388 sourceline 0x5d1
 	00115390 mov ax,0x1
 	0011539c mov bx,ax
*	001153a8 mov mar,0x3cef20
 	001153b4 mov ax,mar
 	001153c0 push op
 	001153c8 mov op,ax
 	001153d0 farpush bx
 	001153d8 setfuncargs 0x1
 	001153e0 mov ax,0x69ef20
 	001153ec farcall ax
 	001153f4 farsubsp 0x1
 	001153fc pop op
 	00115404 sourceline 0x5d2
 	0011540c push op
 	00115414 mov ax,0x2b6a15
 	00115420 farpush ax
 	00115428 mov ax,0x138
 	00115434 farpush ax
 	0011543c mov ax,0x92
 	00115448 farpush ax
 	00115450 mov ax,0x0
 	0011545c farpush ax
 	00115464 mov mar,0x3cef20
 	00115470 mov ax,mar
 	0011547c mov op,ax
 	00115484 setfuncargs 0x4
 	0011548c mov ax,0x6aef20
 	00115498 farcall ax
 	001154a0 farsubsp 0x4
 	001154a8 pop op
 	001154b0 sourceline 0x5d3
 	001154b8 push op
 	001154c0 mov ax,0x2b6b26
 	001154cc farpush ax
 	001154d4 mov ax,0x138
 	001154e0 farpush ax
 	001154e8 mov ax,0x92
 	001154f4 farpush ax
 	001154fc mov ax,0x0
 	00115508 farpush ax
 	00115510 mov mar,0x3cef20
 	0011551c mov ax,mar
 	00115528 mov op,ax
 	00115530 setfuncargs 0x4
 	00115538 mov ax,0x6aef20
 	00115544 farcall ax
 	0011554c farsubsp 0x4
 	00115554 pop op
 	0011555c sourceline 0x5d4
 	00115564 push op
 	0011556c mov ax,0x2b6c07
 	00115578 farpush ax
 	00115580 mov ax,0x138
 	0011558c farpush ax
 	00115594 mov ax,0x92
 	001155a0 farpush ax
 	001155a8 mov ax,0x0
 	001155b4 farpush ax
 	001155bc mov mar,0x3cef20
 	001155c8 mov ax,mar
 	001155d4 mov op,ax
 	001155dc setfuncargs 0x4
 	001155e4 mov ax,0x6aef20
 	001155f0 farcall ax
 	001155f8 farsubsp 0x4
 	00115600 pop op
 	00115608 sourceline 0x5d5
 	00115610 mov ax,0x0
 	0011561c ret

iLocalCurrency_Look$0:
	[00115620]
 	00115620 sourceline 0x5da
 	00115628 thisaddr
 	00115630 sourceline 0x5db
 	00115638 mov ax,0x1
 	00115644 mov bx,ax
*	00115650 mov mar,0x3cef20
 	0011565c mov ax,mar
 	00115668 push op
 	00115670 mov op,ax
 	00115678 farpush bx
 	00115680 setfuncargs 0x1
 	00115688 mov ax,0x69ef20
 	00115694 farcall ax
 	0011569c farsubsp 0x1
 	001156a4 pop op
 	001156ac sourceline 0x5dc
 	001156b4 push op
 	001156bc mov ax,0x2b6cc8
 	001156c8 farpush ax
 	001156d0 mov ax,0x138
 	001156dc farpush ax
 	001156e4 mov ax,0x92
 	001156f0 farpush ax
 	001156f8 mov ax,0x0
 	00115704 farpush ax
 	0011570c mov mar,0x3cef20
 	00115718 mov ax,mar
 	00115724 mov op,ax
 	0011572c setfuncargs 0x4
 	00115734 mov ax,0x6aef20
 	00115740 farcall ax
 	00115748 farsubsp 0x4
 	00115750 pop op
 	00115758 sourceline 0x5dd
 	00115760 mov ax,0x0
 	0011576c ret

iMold_Look$0:
	[00115770]
 	00115770 sourceline 0x5e1
 	00115778 thisaddr
 	00115780 sourceline 0x5e2
 	00115788 mov ax,0x1
 	00115794 mov bx,ax
*	001157a0 mov mar,0x3cef20
 	001157ac mov ax,mar
 	001157b8 push op
 	001157c0 mov op,ax
 	001157c8 farpush bx
 	001157d0 setfuncargs 0x1
 	001157d8 mov ax,0x69ef20
 	001157e4 farcall ax
 	001157ec farsubsp 0x1
 	001157f4 pop op
 	001157fc sourceline 0x5e3
 	00115804 push op
 	0011580c mov ax,0x2b6cff
 	00115818 farpush ax
 	00115820 mov ax,0x138
 	0011582c farpush ax
 	00115834 mov ax,0x92
 	00115840 farpush ax
 	00115848 mov ax,0x0
 	00115854 farpush ax
 	0011585c mov mar,0x3cef20
 	00115868 mov ax,mar
 	00115874 mov op,ax
 	0011587c setfuncargs 0x4
 	00115884 mov ax,0x6aef20
 	00115890 farcall ax
 	00115898 farsubsp 0x4
 	001158a0 pop op
 	001158a8 sourceline 0x5e4
 	001158b0 mov ax,0x0
 	001158bc ret

iBrochure_Look$0:
	[001158c0]
 	001158c0 sourceline 0x5e9
 	001158c8 thisaddr
 	001158d0 sourceline 0x5ea
 	001158d8 mov ax,0x1
 	001158e4 mov bx,ax
*	001158f0 mov mar,0x3cef20
 	001158fc mov ax,mar
 	00115908 push op
 	00115910 mov op,ax
 	00115918 farpush bx
 	00115920 setfuncargs 0x1
 	00115928 mov ax,0x69ef20
 	00115934 farcall ax
 	0011593c farsubsp 0x1
 	00115944 pop op
 	0011594c sourceline 0x5eb
 	00115954 push op
 	0011595c mov ax,0x2b6d24
 	00115968 farpush ax
 	00115970 mov ax,0x138
 	0011597c farpush ax
 	00115984 mov ax,0x92
 	00115990 farpush ax
 	00115998 mov ax,0x0
 	001159a4 farpush ax
 	001159ac mov mar,0x3cef20
 	001159b8 mov ax,mar
 	001159c4 mov op,ax
 	001159cc setfuncargs 0x4
 	001159d4 mov ax,0x6aef20
 	001159e0 farcall ax
 	001159e8 farsubsp 0x4
 	001159f0 pop op
 	001159f8 sourceline 0x5ec
 	00115a00 mov ax,0x0
 	00115a0c ret

iCoin_Look$0:
	[00115a10]
 	00115a10 sourceline 0x5f1
 	00115a18 thisaddr
 	00115a20 sourceline 0x5f2
 	00115a28 mov ax,0x1
 	00115a34 mov bx,ax
*	00115a40 mov mar,0x3cef20
 	00115a4c mov ax,mar
 	00115a58 push op
 	00115a60 mov op,ax
 	00115a68 farpush bx
 	00115a70 setfuncargs 0x1
 	00115a78 mov ax,0x69ef20
 	00115a84 farcall ax
 	00115a8c farsubsp 0x1
 	00115a94 pop op
 	00115a9c sourceline 0x5f3
 	00115aa4 push op
 	00115aac mov ax,0x2b6dfd
 	00115ab8 farpush ax
 	00115ac0 mov ax,0x138
 	00115acc farpush ax
 	00115ad4 mov ax,0x92
 	00115ae0 farpush ax
 	00115ae8 mov ax,0x0
 	00115af4 farpush ax
 	00115afc mov mar,0x3cef20
 	00115b08 mov ax,mar
 	00115b14 mov op,ax
 	00115b1c setfuncargs 0x4
 	00115b24 mov ax,0x6aef20
 	00115b30 farcall ax
 	00115b38 farsubsp 0x4
 	00115b40 pop op
 	00115b48 sourceline 0x5f4
 	00115b50 mov ax,0x0
 	00115b5c ret

iBottleWater_Look$0:
	[00115b60]
 	00115b60 sourceline 0x5f9
 	00115b68 thisaddr
 	00115b70 sourceline 0x5fa
 	00115b78 mov ax,0x1
 	00115b84 mov bx,ax
*	00115b90 mov mar,0x3cef20
 	00115b9c mov ax,mar
 	00115ba8 push op
 	00115bb0 mov op,ax
 	00115bb8 farpush bx
 	00115bc0 setfuncargs 0x1
 	00115bc8 mov ax,0x69ef20
 	00115bd4 farcall ax
 	00115bdc farsubsp 0x1
 	00115be4 pop op
 	00115bec sourceline 0x5fb
 	00115bf4 push op
 	00115bfc mov ax,0x2b6e2c
 	00115c08 farpush ax
 	00115c10 mov ax,0x138
 	00115c1c farpush ax
 	00115c24 mov ax,0x92
 	00115c30 farpush ax
 	00115c38 mov ax,0x0
 	00115c44 farpush ax
 	00115c4c mov mar,0x3cef20
 	00115c58 mov ax,mar
 	00115c64 mov op,ax
 	00115c6c setfuncargs 0x4
 	00115c74 mov ax,0x6aef20
 	00115c80 farcall ax
 	00115c88 farsubsp 0x4
 	00115c90 pop op
 	00115c98 sourceline 0x5fc
 	00115ca0 mov ax,0x0
 	00115cac ret

iCamera_Look$0:
	[00115cb0]
 	00115cb0 sourceline 0x601
 	00115cb8 thisaddr
 	00115cc0 sourceline 0x602
 	00115cc8 mov ax,0x1
 	00115cd4 mov bx,ax
*	00115ce0 mov mar,0x3cef20
 	00115cec mov ax,mar
 	00115cf8 push op
 	00115d00 mov op,ax
 	00115d08 farpush bx
 	00115d10 setfuncargs 0x1
 	00115d18 mov ax,0x69ef20
 	00115d24 farcall ax
 	00115d2c farsubsp 0x1
 	00115d34 pop op
 	00115d3c sourceline 0x603
 	00115d44 mov mar,0x866f20
 	00115d50 memread4 ax
 	00115d58 lnot ax
 	00115d60 jz 0x00115e14
		00115e14: CONDITIONAL_JUMP
		00115d68: FALL_THROUGH

	[00115d68]
		00115cb0: FALL_THROUGH
 	00115d68 push op
 	00115d70 mov ax,0x2b6e41
 	00115d7c farpush ax
 	00115d84 mov ax,0x138
 	00115d90 farpush ax
 	00115d98 mov ax,0x92
 	00115da4 farpush ax
 	00115dac mov ax,0x0
 	00115db8 farpush ax
 	00115dc0 mov mar,0x3cef20
 	00115dcc mov ax,mar
 	00115dd8 mov op,ax
 	00115de0 setfuncargs 0x4
 	00115de8 mov ax,0x6aef20
 	00115df4 farcall ax
 	00115dfc farsubsp 0x4
 	00115e04 pop op
 	00115e0c jmp 0x00115fd0
		00115fd0: UNCONDITIONAL_JUMP

	[00115e14]
		00115cb0: CONDITIONAL_JUMP
 	00115e14 sourceline 0x606
 	00115e1c mov mar,0x86ef20
 	00115e28 memread4 ax
 	00115e30 lnot ax
 	00115e38 jz 0x00115f24
		00115f24: CONDITIONAL_JUMP
		00115e40: FALL_THROUGH

	[00115e40]
		00115e14: FALL_THROUGH
 	00115e40 sourceline 0x608
 	00115e48 push op
 	00115e50 mov ax,0x2b6e9e
 	00115e5c farpush ax
 	00115e64 mov ax,0x138
 	00115e70 farpush ax
 	00115e78 mov ax,0x92
 	00115e84 farpush ax
 	00115e8c mov ax,0x0
 	00115e98 farpush ax
 	00115ea0 mov mar,0x3cef20
 	00115eac mov ax,mar
 	00115eb8 mov op,ax
 	00115ec0 setfuncargs 0x4
 	00115ec8 mov ax,0x6aef20
 	00115ed4 farcall ax
 	00115edc farsubsp 0x4
 	00115ee4 pop op
 	00115eec sourceline 0x609
 	00115ef4 mov ax,0x1
 	00115f00 mov mar,0x876f20
 	00115f0c memwrite4 ax
 	00115f14 sourceline 0x60a
 	00115f1c jmp 0x00115fd0
		00115fd0: UNCONDITIONAL_JUMP

	[00115f24]
		00115e14: CONDITIONAL_JUMP
 	00115f24 sourceline 0x60b
 	00115f2c push op
 	00115f34 mov ax,0x2b6ecf
 	00115f40 farpush ax
 	00115f48 mov ax,0x138
 	00115f54 farpush ax
 	00115f5c mov ax,0x92
 	00115f68 farpush ax
 	00115f70 mov ax,0x0
 	00115f7c farpush ax
 	00115f84 mov mar,0x3cef20
 	00115f90 mov ax,mar
 	00115f9c mov op,ax
 	00115fa4 setfuncargs 0x4
 	00115fac mov ax,0x6aef20
 	00115fb8 farcall ax
 	00115fc0 farsubsp 0x4
 	00115fc8 pop op
		00115fd0: FALL_THROUGH

	[00115fd0]
		00115d68: UNCONDITIONAL_JUMP
		00115e40: UNCONDITIONAL_JUMP
		00115f24: FALL_THROUGH
 	00115fd0 sourceline 0x60d
 	00115fd8 mov ax,0x0
 	00115fe4 ret

iMuseumBook_Look$0:
	[00115fe8]
 	00115fe8 sourceline 0x614
 	00115ff0 thisaddr
 	00115ff8 sourceline 0x615
 	00116000 mov ax,0x1
 	0011600c mov bx,ax
*	00116018 mov mar,0x3cef20
 	00116024 mov ax,mar
 	00116030 push op
 	00116038 mov op,ax
 	00116040 farpush bx
 	00116048 setfuncargs 0x1
 	00116050 mov ax,0x69ef20
 	0011605c farcall ax
 	00116064 farsubsp 0x1
 	0011606c pop op
 	00116074 sourceline 0x616
 	0011607c push op
 	00116084 mov ax,0x2b6f14
 	00116090 farpush ax
 	00116098 mov ax,0x138
 	001160a4 farpush ax
 	001160ac mov ax,0x92
 	001160b8 farpush ax
 	001160c0 mov ax,0x0
 	001160cc farpush ax
 	001160d4 mov mar,0x3cef20
 	001160e0 mov ax,mar
 	001160ec mov op,ax
 	001160f4 setfuncargs 0x4
 	001160fc mov ax,0x6aef20
 	00116108 farcall ax
 	00116110 farsubsp 0x4
 	00116118 pop op
 	00116120 sourceline 0x617
 	00116128 push op
 	00116130 mov ax,0x2b7023
 	0011613c farpush ax
 	00116144 mov ax,0x138
 	00116150 farpush ax
 	00116158 mov ax,0x92
 	00116164 farpush ax
 	0011616c mov ax,0x0
 	00116178 farpush ax
 	00116180 mov mar,0x3cef20
 	0011618c mov ax,mar
 	00116198 mov op,ax
 	001161a0 setfuncargs 0x4
 	001161a8 mov ax,0x6aef20
 	001161b4 farcall ax
 	001161bc farsubsp 0x4
 	001161c4 pop op
 	001161cc sourceline 0x618
 	001161d4 push op
 	001161dc mov ax,0x2b7128
 	001161e8 farpush ax
 	001161f0 mov ax,0x138
 	001161fc farpush ax
 	00116204 mov ax,0x92
 	00116210 farpush ax
 	00116218 mov ax,0x0
 	00116224 farpush ax
 	0011622c mov mar,0x3cef20
 	00116238 mov ax,mar
 	00116244 mov op,ax
 	0011624c setfuncargs 0x4
 	00116254 mov ax,0x6aef20
 	00116260 farcall ax
 	00116268 farsubsp 0x4
 	00116270 pop op
 	00116278 sourceline 0x619
 	00116280 push op
 	00116288 mov ax,0x2b721e
 	00116294 farpush ax
 	0011629c mov ax,0x138
 	001162a8 farpush ax
 	001162b0 mov ax,0x92
 	001162bc farpush ax
 	001162c4 mov ax,0x0
 	001162d0 farpush ax
 	001162d8 mov mar,0x3cef20
 	001162e4 mov ax,mar
 	001162f0 mov op,ax
 	001162f8 setfuncargs 0x4
 	00116300 mov ax,0x6aef20
 	0011630c farcall ax
 	00116314 farsubsp 0x4
 	0011631c pop op
 	00116324 sourceline 0x61a
 	0011632c push op
 	00116334 mov ax,0x2b7314
 	00116340 farpush ax
 	00116348 mov ax,0x138
 	00116354 farpush ax
 	0011635c mov ax,0x92
 	00116368 farpush ax
 	00116370 mov ax,0x0
 	0011637c farpush ax
 	00116384 mov mar,0x3cef20
 	00116390 mov ax,mar
 	0011639c mov op,ax
 	001163a4 setfuncargs 0x4
 	001163ac mov ax,0x6aef20
 	001163b8 farcall ax
 	001163c0 farsubsp 0x4
 	001163c8 pop op
 	001163d0 sourceline 0x61b
 	001163d8 mov ax,0x1
 	001163e4 mov mar,0x87ef20
 	001163f0 memwrite4 ax
 	001163f8 sourceline 0x61c
 	00116400 mov ax,0x0
 	0011640c ret

iParchment_Look$0:
	[00116410]
 	00116410 sourceline 0x622
 	00116418 thisaddr
 	00116420 sourceline 0x623
 	00116428 mov ax,0x1
 	00116434 mov bx,ax
*	00116440 mov mar,0x3cef20
 	0011644c mov ax,mar
 	00116458 push op
 	00116460 mov op,ax
 	00116468 farpush bx
 	00116470 setfuncargs 0x1
 	00116478 mov ax,0x69ef20
 	00116484 farcall ax
 	0011648c farsubsp 0x1
 	00116494 pop op
 	0011649c sourceline 0x624
 	001164a4 push op
 	001164ac mov ax,0x2b7352
 	001164b8 farpush ax
 	001164c0 mov ax,0x138
 	001164cc farpush ax
 	001164d4 mov ax,0x92
 	001164e0 farpush ax
 	001164e8 mov ax,0x0
 	001164f4 farpush ax
 	001164fc mov mar,0x3cef20
 	00116508 mov ax,mar
 	00116514 mov op,ax
 	0011651c setfuncargs 0x4
 	00116524 mov ax,0x6aef20
 	00116530 farcall ax
 	00116538 farsubsp 0x4
 	00116540 pop op
 	00116548 sourceline 0x625
 	00116550 mov ax,0x0
 	0011655c ret

iLetter_Look$0:
	[00116560]
 	00116560 sourceline 0x62a
 	00116568 thisaddr
 	00116570 sourceline 0x62b
 	00116578 mov ax,0x1
 	00116584 mov bx,ax
*	00116590 mov mar,0x3cef20
 	0011659c mov ax,mar
 	001165a8 push op
 	001165b0 mov op,ax
 	001165b8 farpush bx
 	001165c0 setfuncargs 0x1
 	001165c8 mov ax,0x69ef20
 	001165d4 farcall ax
 	001165dc farsubsp 0x1
 	001165e4 pop op
 	001165ec sourceline 0x62c
 	001165f4 push op
 	001165fc mov ax,0x2b7412
 	00116608 farpush ax
 	00116610 mov ax,0x138
 	0011661c farpush ax
 	00116624 mov ax,0x92
 	00116630 farpush ax
 	00116638 mov ax,0x0
 	00116644 farpush ax
 	0011664c mov mar,0x3cef20
 	00116658 mov ax,mar
 	00116664 mov op,ax
 	0011666c setfuncargs 0x4
 	00116674 mov ax,0x6aef20
 	00116680 farcall ax
 	00116688 farsubsp 0x4
 	00116690 pop op
 	00116698 sourceline 0x62d
 	001166a0 push op
 	001166a8 mov mar,0x886f20
 	001166b4 mov ax,mar
 	001166c0 farpush ax
 	001166c8 mov mar,0x3cef20
 	001166d4 mov ax,mar
 	001166e0 mov op,ax
 	001166e8 setfuncargs 0x1
 	001166f0 mov ax,0x7d6f20
 	001166fc farcall ax
 	00116704 farsubsp 0x1
 	0011670c pop op
 	00116714 sourceline 0x62e
 	0011671c push op
 	00116724 mov ax,0x7cfe
 	00116730 farpush ax
 	00116738 mov mar,0x88ef20
 	00116744 mov ax,mar
 	00116750 farpush ax
 	00116758 mov mar,0x3cef20
 	00116764 mov ax,mar
 	00116770 mov op,ax
 	00116778 setfuncargs 0x2
 	00116780 mov ax,0x7e6f20
 	0011678c farcall ax
 	00116794 farsubsp 0x2
 	0011679c pop op
 	001167a4 sourceline 0x62f
 	001167ac push op
 	001167b4 mov ax,0x7cfe
 	001167c0 farpush ax
 	001167c8 mov ax,0x32
 	001167d4 farpush ax
 	001167dc mov mar,0x7eef20
 	001167e8 mov ax,mar
 	001167f4 mov op,ax
 	001167fc setfuncargs 0x2
 	00116804 mov ax,0x2fef20
 	00116810 farcall ax
 	00116818 farsubsp 0x2
 	00116820 pop op
 	00116828 sourceline 0x630
 	00116830 mov ax,0x0
 	0011683c ret

iMysteryLetter_Look$0:
	[00116840]
 	00116840 sourceline 0x635
 	00116848 thisaddr
 	00116850 sourceline 0x636
 	00116858 mov ax,0x1
 	00116864 mov bx,ax
*	00116870 mov mar,0x3cef20
 	0011687c mov ax,mar
 	00116888 push op
 	00116890 mov op,ax
 	00116898 farpush bx
 	001168a0 setfuncargs 0x1
 	001168a8 mov ax,0x69ef20
 	001168b4 farcall ax
 	001168bc farsubsp 0x1
 	001168c4 pop op
 	001168cc sourceline 0x637
 	001168d4 push op
 	001168dc mov ax,0x2b7453
 	001168e8 farpush ax
 	001168f0 mov ax,0x138
 	001168fc farpush ax
 	00116904 mov ax,0x92
 	00116910 farpush ax
 	00116918 mov ax,0x0
 	00116924 farpush ax
 	0011692c mov mar,0x3cef20
 	00116938 mov ax,mar
 	00116944 mov op,ax
 	0011694c setfuncargs 0x4
 	00116954 mov ax,0x6aef20
 	00116960 farcall ax
 	00116968 farsubsp 0x4
 	00116970 pop op
 	00116978 sourceline 0x638
 	00116980 mov ax,0x1
 	0011698c mov mar,0x896f20
 	00116998 memwrite4 ax
 	001169a0 sourceline 0x639
 	001169a8 mov ax,0x0
 	001169b4 ret

iBoatKey_Look$0:
	[001169b8]
 	001169b8 sourceline 0x63e
 	001169c0 thisaddr
 	001169c8 sourceline 0x63f
 	001169d0 mov ax,0x1
 	001169dc mov bx,ax
*	001169e8 mov mar,0x3cef20
 	001169f4 mov ax,mar
 	00116a00 push op
 	00116a08 mov op,ax
 	00116a10 farpush bx
 	00116a18 setfuncargs 0x1
 	00116a20 mov ax,0x69ef20
 	00116a2c farcall ax
 	00116a34 farsubsp 0x1
 	00116a3c pop op
 	00116a44 sourceline 0x640
 	00116a4c push op
 	00116a54 mov ax,0x2b74db
 	00116a60 farpush ax
 	00116a68 mov ax,0x138
 	00116a74 farpush ax
 	00116a7c mov ax,0x92
 	00116a88 farpush ax
 	00116a90 mov ax,0x0
 	00116a9c farpush ax
 	00116aa4 mov mar,0x3cef20
 	00116ab0 mov ax,mar
 	00116abc mov op,ax
 	00116ac4 setfuncargs 0x4
 	00116acc mov ax,0x6aef20
 	00116ad8 farcall ax
 	00116ae0 farsubsp 0x4
 	00116ae8 pop op
 	00116af0 sourceline 0x641
 	00116af8 mov ax,0x0
 	00116b04 ret

iKODrops_Look$0:
	[00116b08]
 	00116b08 sourceline 0x646
 	00116b10 thisaddr
 	00116b18 sourceline 0x647
 	00116b20 mov ax,0x1
 	00116b2c mov bx,ax
*	00116b38 mov mar,0x3cef20
 	00116b44 mov ax,mar
 	00116b50 push op
 	00116b58 mov op,ax
 	00116b60 farpush bx
 	00116b68 setfuncargs 0x1
 	00116b70 mov ax,0x69ef20
 	00116b7c farcall ax
 	00116b84 farsubsp 0x1
 	00116b8c pop op
 	00116b94 sourceline 0x648
 	00116b9c push op
 	00116ba4 mov ax,0x2b7518
 	00116bb0 farpush ax
 	00116bb8 mov ax,0x138
 	00116bc4 farpush ax
 	00116bcc mov ax,0x92
 	00116bd8 farpush ax
 	00116be0 mov ax,0x0
 	00116bec farpush ax
 	00116bf4 mov mar,0x3cef20
 	00116c00 mov ax,mar
 	00116c0c mov op,ax
 	00116c14 setfuncargs 0x4
 	00116c1c mov ax,0x6aef20
 	00116c28 farcall ax
 	00116c30 farsubsp 0x4
 	00116c38 pop op
 	00116c40 sourceline 0x649
 	00116c48 mov ax,0x0
 	00116c54 ret

iPhone_UseInv$0:
	[00116c58]
 	00116c58 sourceline 0x64e
 	00116c60 thisaddr
 	00116c68 sourceline 0x64f
*	00116c70 mov mar,0x3cef20
 	00116c7c mov ax,mar
 	00116c88 push op
 	00116c90 mov op,ax
 	00116c98 setfuncargs 0x0
 	00116ca0 mov ax,0x89ef20
 	00116cac farcall ax
 	00116cb4 pop op
 	00116cbc push ax
 	00116cc4 mov mar,0x8a6f20
 	00116cd0 mov ax,mar
 	00116cdc pop bx
 	00116ce4 cmpeq bx,ax
 	00116cf0 mov ax,bx
 	00116cfc jz 0x00116e3c
		00116e3c: CONDITIONAL_JUMP
		00116d04: FALL_THROUGH

	[00116d04]
		00116c58: FALL_THROUGH
 	00116d04 sourceline 0x651
 	00116d0c mov ax,0x1
 	00116d18 mov bx,ax
 	00116d24 mov mar,0x3cef20
 	00116d30 mov ax,mar
 	00116d3c push op
 	00116d44 mov op,ax
 	00116d4c farpush bx
 	00116d54 setfuncargs 0x1
 	00116d5c mov ax,0x69ef20
 	00116d68 farcall ax
 	00116d70 farsubsp 0x1
 	00116d78 pop op
 	00116d80 sourceline 0x652
 	00116d88 push op
 	00116d90 mov ax,0x2b8d98
 	00116d9c farpush ax
 	00116da4 mov ax,0x138
 	00116db0 farpush ax
 	00116db8 mov ax,0x92
 	00116dc4 farpush ax
 	00116dcc mov ax,0x0
 	00116dd8 farpush ax
 	00116de0 mov mar,0x3cef20
 	00116dec mov ax,mar
 	00116df8 mov op,ax
 	00116e00 setfuncargs 0x4
 	00116e08 mov ax,0x6aef20
 	00116e14 farcall ax
 	00116e1c farsubsp 0x4
 	00116e24 pop op
 	00116e2c sourceline 0x653
 	00116e34 jmp 0x00117754
		00117754: UNCONDITIONAL_JUMP

	[00116e3c]
		00116c58: CONDITIONAL_JUMP
 	00116e3c sourceline 0x655
 	00116e44 mov mar,0x3cef20
 	00116e50 mov ax,mar
 	00116e5c push op
 	00116e64 mov op,ax
 	00116e6c setfuncargs 0x0
 	00116e74 mov ax,0x89ef20
 	00116e80 farcall ax
 	00116e88 pop op
 	00116e90 push ax
 	00116e98 mov mar,0x7cef20
 	00116ea4 mov ax,mar
 	00116eb0 pop bx
 	00116eb8 cmpeq bx,ax
 	00116ec4 mov ax,bx
 	00116ed0 jnz 0x00116f8c
		00116f8c: CONDITIONAL_JUMP
		00116ed8: FALL_THROUGH

	[00116ed8]
		00116e3c: FALL_THROUGH
 	00116ed8 push ax
 	00116ee0 mov mar,0x3cef20
 	00116eec mov ax,mar
 	00116ef8 push op
 	00116f00 mov op,ax
 	00116f08 setfuncargs 0x0
 	00116f10 mov ax,0x89ef20
 	00116f1c farcall ax
 	00116f24 pop op
 	00116f2c push ax
 	00116f34 mov mar,0x886f20
 	00116f40 mov ax,mar
 	00116f4c pop bx
 	00116f54 cmpeq bx,ax
 	00116f60 mov ax,bx
 	00116f6c pop bx
 	00116f74 lor bx,ax
 	00116f80 mov ax,bx
		00116f8c: FALL_THROUGH

	[00116f8c]
		00116e3c: CONDITIONAL_JUMP
		00116ed8: FALL_THROUGH
 	00116f8c jz 0x001170cc
		001170cc: CONDITIONAL_JUMP
		00116f94: FALL_THROUGH

	[00116f94]
		00116f8c: FALL_THROUGH
 	00116f94 sourceline 0x657
 	00116f9c mov ax,0x1
 	00116fa8 mov bx,ax
 	00116fb4 mov mar,0x3cef20
 	00116fc0 mov ax,mar
 	00116fcc push op
 	00116fd4 mov op,ax
 	00116fdc farpush bx
 	00116fe4 setfuncargs 0x1
 	00116fec mov ax,0x69ef20
 	00116ff8 farcall ax
 	00117000 farsubsp 0x1
 	00117008 pop op
 	00117010 sourceline 0x658
 	00117018 push op
 	00117020 mov ax,0x2b7598
 	0011702c farpush ax
 	00117034 mov ax,0x138
 	00117040 farpush ax
 	00117048 mov ax,0x92
 	00117054 farpush ax
 	0011705c mov ax,0x0
 	00117068 farpush ax
 	00117070 mov mar,0x3cef20
 	0011707c mov ax,mar
 	00117088 mov op,ax
 	00117090 setfuncargs 0x4
 	00117098 mov ax,0x6aef20
 	001170a4 farcall ax
 	001170ac farsubsp 0x4
 	001170b4 pop op
 	001170bc sourceline 0x659
 	001170c4 jmp 0x00117754
		00117754: UNCONDITIONAL_JUMP

	[001170cc]
		00116f8c: CONDITIONAL_JUMP
 	001170cc sourceline 0x65b
 	001170d4 mov mar,0x3cef20
 	001170e0 mov ax,mar
 	001170ec push op
 	001170f4 mov op,ax
 	001170fc setfuncargs 0x0
 	00117104 mov ax,0x89ef20
 	00117110 farcall ax
 	00117118 pop op
 	00117120 push ax
 	00117128 mov mar,0x8aef20
 	00117134 mov ax,mar
 	00117140 pop bx
 	00117148 cmpeq bx,ax
 	00117154 mov ax,bx
 	00117160 jz 0x001172a0
		001172a0: CONDITIONAL_JUMP
		00117168: FALL_THROUGH

	[00117168]
		001170cc: FALL_THROUGH
 	00117168 sourceline 0x65d
 	00117170 mov ax,0x1
 	0011717c mov bx,ax
 	00117188 mov mar,0x3cef20
 	00117194 mov ax,mar
 	001171a0 push op
 	001171a8 mov op,ax
 	001171b0 farpush bx
 	001171b8 setfuncargs 0x1
 	001171c0 mov ax,0x69ef20
 	001171cc farcall ax
 	001171d4 farsubsp 0x1
 	001171dc pop op
 	001171e4 sourceline 0x65e
 	001171ec push op
 	001171f4 mov ax,0x2b8dd8
 	00117200 farpush ax
 	00117208 mov ax,0x138
 	00117214 farpush ax
 	0011721c mov ax,0x92
 	00117228 farpush ax
 	00117230 mov ax,0x0
 	0011723c farpush ax
 	00117244 mov mar,0x3cef20
 	00117250 mov ax,mar
 	0011725c mov op,ax
 	00117264 setfuncargs 0x4
 	0011726c mov ax,0x6aef20
 	00117278 farcall ax
 	00117280 farsubsp 0x4
 	00117288 pop op
 	00117290 sourceline 0x65f
 	00117298 jmp 0x00117754
		00117754: UNCONDITIONAL_JUMP

	[001172a0]
		001170cc: CONDITIONAL_JUMP
 	001172a0 sourceline 0x661
 	001172a8 mov mar,0x3cef20
 	001172b4 mov ax,mar
 	001172c0 push op
 	001172c8 mov op,ax
 	001172d0 setfuncargs 0x0
 	001172d8 mov ax,0x89ef20
 	001172e4 farcall ax
 	001172ec pop op
 	001172f4 push ax
 	001172fc mov mar,0x8b6f20
 	00117308 mov ax,mar
 	00117314 pop bx
 	0011731c cmpeq bx,ax
 	00117328 mov ax,bx
 	00117334 jnz 0x001173f0
		001173f0: CONDITIONAL_JUMP
		0011733c: FALL_THROUGH

	[0011733c]
		001172a0: FALL_THROUGH
 	0011733c push ax
 	00117344 mov mar,0x3cef20
 	00117350 mov ax,mar
 	0011735c push op
 	00117364 mov op,ax
 	0011736c setfuncargs 0x0
 	00117374 mov ax,0x89ef20
 	00117380 farcall ax
 	00117388 pop op
 	00117390 push ax
 	00117398 mov mar,0x8bef20
 	001173a4 mov ax,mar
 	001173b0 pop bx
 	001173b8 cmpeq bx,ax
 	001173c4 mov ax,bx
 	001173d0 pop bx
 	001173d8 lor bx,ax
 	001173e4 mov ax,bx
		001173f0: FALL_THROUGH

	[001173f0]
		001172a0: CONDITIONAL_JUMP
		0011733c: FALL_THROUGH
 	001173f0 jz 0x00117530
		00117530: CONDITIONAL_JUMP
		001173f8: FALL_THROUGH

	[001173f8]
		001173f0: FALL_THROUGH
 	001173f8 sourceline 0x663
 	00117400 mov ax,0x1
 	0011740c mov bx,ax
 	00117418 mov mar,0x3cef20
 	00117424 mov ax,mar
 	00117430 push op
 	00117438 mov op,ax
 	00117440 farpush bx
 	00117448 setfuncargs 0x1
 	00117450 mov ax,0x69ef20
 	0011745c farcall ax
 	00117464 farsubsp 0x1
 	0011746c pop op
 	00117474 sourceline 0x664
 	0011747c push op
 	00117484 mov ax,0x2b85d4
 	00117490 farpush ax
 	00117498 mov ax,0x138
 	001174a4 farpush ax
 	001174ac mov ax,0x92
 	001174b8 farpush ax
 	001174c0 mov ax,0x0
 	001174cc farpush ax
 	001174d4 mov mar,0x3cef20
 	001174e0 mov ax,mar
 	001174ec mov op,ax
 	001174f4 setfuncargs 0x4
 	001174fc mov ax,0x6aef20
 	00117508 farcall ax
 	00117510 farsubsp 0x4
 	00117518 pop op
 	00117520 sourceline 0x665
 	00117528 jmp 0x00117754
		00117754: UNCONDITIONAL_JUMP

	[00117530]
		001173f0: CONDITIONAL_JUMP
 	00117530 sourceline 0x667
 	00117538 mov mar,0x3cef20
 	00117544 mov ax,mar
 	00117550 push op
 	00117558 mov op,ax
 	00117560 setfuncargs 0x0
 	00117568 mov ax,0x89ef20
 	00117574 farcall ax
 	0011757c pop op
 	00117584 push ax
 	0011758c mov mar,0x8c6f20
 	00117598 mov ax,mar
 	001175a4 pop bx
 	001175ac cmpeq bx,ax
 	001175b8 mov ax,bx
 	001175c4 jz 0x00117704
		00117704: CONDITIONAL_JUMP
		001175cc: FALL_THROUGH

	[001175cc]
		00117530: FALL_THROUGH
 	001175cc sourceline 0x669
 	001175d4 mov ax,0x1
 	001175e0 mov bx,ax
 	001175ec mov mar,0x3cef20
 	001175f8 mov ax,mar
 	00117604 push op
 	0011760c mov op,ax
 	00117614 farpush bx
 	0011761c setfuncargs 0x1
 	00117624 mov ax,0x69ef20
 	00117630 farcall ax
 	00117638 farsubsp 0x1
 	00117640 pop op
 	00117648 sourceline 0x66a
 	00117650 push op
 	00117658 mov ax,0x2ba410
 	00117664 farpush ax
 	0011766c mov ax,0x138
 	00117678 farpush ax
 	00117680 mov ax,0x92
 	0011768c farpush ax
 	00117694 mov ax,0x0
 	001176a0 farpush ax
 	001176a8 mov mar,0x3cef20
 	001176b4 mov ax,mar
 	001176c0 mov op,ax
 	001176c8 setfuncargs 0x4
 	001176d0 mov ax,0x6aef20
 	001176dc farcall ax
 	001176e4 farsubsp 0x4
 	001176ec pop op
 	001176f4 sourceline 0x66b
 	001176fc jmp 0x00117754
		00117754: UNCONDITIONAL_JUMP

	[00117704]
		00117530: CONDITIONAL_JUMP
 	00117704 sourceline 0x66d
 	0011770c mov ax,0x3
 	00117718 push ax
 	00117720 mov ax,0x5
 	0011772c push ax
 	00117734 mov ax,0x10ae5c
 	00117740 call ax
 	00117748 sub sp,0x8
		00117754: FALL_THROUGH

	[00117754]
		00116d04: UNCONDITIONAL_JUMP
		00116f94: UNCONDITIONAL_JUMP
		00117168: UNCONDITIONAL_JUMP
		001173f8: UNCONDITIONAL_JUMP
		001175cc: UNCONDITIONAL_JUMP
		00117704: FALL_THROUGH
 	00117754 sourceline 0x66e
 	0011775c mov ax,0x0
 	00117768 ret

iKey_UseInv$0:
	[0011776c]
 	0011776c sourceline 0x673
 	00117774 thisaddr
 	0011777c sourceline 0x674
*	00117784 mov mar,0x3cef20
 	00117790 mov ax,mar
 	0011779c push op
 	001177a4 mov op,ax
 	001177ac setfuncargs 0x0
 	001177b4 mov ax,0x89ef20
 	001177c0 farcall ax
 	001177c8 pop op
 	001177d0 push ax
 	001177d8 mov mar,0x8cef20
 	001177e4 mov ax,mar
 	001177f0 pop bx
 	001177f8 cmpeq bx,ax
 	00117804 mov ax,bx
 	00117810 jnz 0x001178cc
		001178cc: CONDITIONAL_JUMP
		00117818: FALL_THROUGH

	[00117818]
		0011776c: FALL_THROUGH
 	00117818 push ax
 	00117820 mov mar,0x3cef20
 	0011782c mov ax,mar
 	00117838 push op
 	00117840 mov op,ax
 	00117848 setfuncargs 0x0
 	00117850 mov ax,0x89ef20
 	0011785c farcall ax
 	00117864 pop op
 	0011786c push ax
 	00117874 mov mar,0x8d6f20
 	00117880 mov ax,mar
 	0011788c pop bx
 	00117894 cmpeq bx,ax
 	001178a0 mov ax,bx
 	001178ac pop bx
 	001178b4 lor bx,ax
 	001178c0 mov ax,bx
		001178cc: FALL_THROUGH

	[001178cc]
		0011776c: CONDITIONAL_JUMP
		00117818: FALL_THROUGH
 	001178cc jnz 0x00117988
		00117988: CONDITIONAL_JUMP
		001178d4: FALL_THROUGH

	[001178d4]
		001178cc: FALL_THROUGH
 	001178d4 push ax
 	001178dc mov mar,0x3cef20
 	001178e8 mov ax,mar
 	001178f4 push op
 	001178fc mov op,ax
 	00117904 setfuncargs 0x0
 	0011790c mov ax,0x89ef20
 	00117918 farcall ax
 	00117920 pop op
 	00117928 push ax
 	00117930 mov mar,0x8b6f20
 	0011793c mov ax,mar
 	00117948 pop bx
 	00117950 cmpeq bx,ax
 	0011795c mov ax,bx
 	00117968 pop bx
 	00117970 lor bx,ax
 	0011797c mov ax,bx
		00117988: FALL_THROUGH

	[00117988]
		001178cc: CONDITIONAL_JUMP
		001178d4: FALL_THROUGH
 	00117988 jnz 0x00117a44
		00117a44: CONDITIONAL_JUMP
		00117990: FALL_THROUGH

	[00117990]
		00117988: FALL_THROUGH
 	00117990 push ax
 	00117998 mov mar,0x3cef20
 	001179a4 mov ax,mar
 	001179b0 push op
 	001179b8 mov op,ax
 	001179c0 setfuncargs 0x0
 	001179c8 mov ax,0x89ef20
 	001179d4 farcall ax
 	001179dc pop op
 	001179e4 push ax
 	001179ec mov mar,0x8bef20
 	001179f8 mov ax,mar
 	00117a04 pop bx
 	00117a0c cmpeq bx,ax
 	00117a18 mov ax,bx
 	00117a24 pop bx
 	00117a2c lor bx,ax
 	00117a38 mov ax,bx
		00117a44: FALL_THROUGH

	[00117a44]
		00117988: CONDITIONAL_JUMP
		00117990: FALL_THROUGH
 	00117a44 jnz 0x00117b00
		00117b00: CONDITIONAL_JUMP
		00117a4c: FALL_THROUGH

	[00117a4c]
		00117a44: FALL_THROUGH
 	00117a4c push ax
 	00117a54 mov mar,0x3cef20
 	00117a60 mov ax,mar
 	00117a6c push op
 	00117a74 mov op,ax
 	00117a7c setfuncargs 0x0
 	00117a84 mov ax,0x89ef20
 	00117a90 farcall ax
 	00117a98 pop op
 	00117aa0 push ax
 	00117aa8 mov mar,0x8c6f20
 	00117ab4 mov ax,mar
 	00117ac0 pop bx
 	00117ac8 cmpeq bx,ax
 	00117ad4 mov ax,bx
 	00117ae0 pop bx
 	00117ae8 lor bx,ax
 	00117af4 mov ax,bx
		00117b00: FALL_THROUGH

	[00117b00]
		00117a44: CONDITIONAL_JUMP
		00117a4c: FALL_THROUGH
 	00117b00 jnz 0x00117bbc
		00117bbc: CONDITIONAL_JUMP
		00117b08: FALL_THROUGH

	[00117b08]
		00117b00: FALL_THROUGH
 	00117b08 push ax
 	00117b10 mov mar,0x3cef20
 	00117b1c mov ax,mar
 	00117b28 push op
 	00117b30 mov op,ax
 	00117b38 setfuncargs 0x0
 	00117b40 mov ax,0x89ef20
 	00117b4c farcall ax
 	00117b54 pop op
 	00117b5c push ax
 	00117b64 mov mar,0x7def20
 	00117b70 mov ax,mar
 	00117b7c pop bx
 	00117b84 cmpeq bx,ax
 	00117b90 mov ax,bx
 	00117b9c pop bx
 	00117ba4 lor bx,ax
 	00117bb0 mov ax,bx
		00117bbc: FALL_THROUGH

	[00117bbc]
		00117b00: CONDITIONAL_JUMP
		00117b08: FALL_THROUGH
 	00117bbc jnz 0x00117c78
		00117c78: CONDITIONAL_JUMP
		00117bc4: FALL_THROUGH

	[00117bc4]
		00117bbc: FALL_THROUGH
 	00117bc4 push ax
 	00117bcc mov mar,0x3cef20
 	00117bd8 mov ax,mar
 	00117be4 push op
 	00117bec mov op,ax
 	00117bf4 setfuncargs 0x0
 	00117bfc mov ax,0x89ef20
 	00117c08 farcall ax
 	00117c10 pop op
 	00117c18 push ax
 	00117c20 mov mar,0x8def20
 	00117c2c mov ax,mar
 	00117c38 pop bx
 	00117c40 cmpeq bx,ax
 	00117c4c mov ax,bx
 	00117c58 pop bx
 	00117c60 lor bx,ax
 	00117c6c mov ax,bx
		00117c78: FALL_THROUGH

	[00117c78]
		00117bbc: CONDITIONAL_JUMP
		00117bc4: FALL_THROUGH
 	00117c78 jnz 0x00117d34
		00117d34: CONDITIONAL_JUMP
		00117c80: FALL_THROUGH

	[00117c80]
		00117c78: FALL_THROUGH
 	00117c80 push ax
 	00117c88 mov mar,0x3cef20
 	00117c94 mov ax,mar
 	00117ca0 push op
 	00117ca8 mov op,ax
 	00117cb0 setfuncargs 0x0
 	00117cb8 mov ax,0x89ef20
 	00117cc4 farcall ax
 	00117ccc pop op
 	00117cd4 push ax
 	00117cdc mov mar,0x8aef20
 	00117ce8 mov ax,mar
 	00117cf4 pop bx
 	00117cfc cmpeq bx,ax
 	00117d08 mov ax,bx
 	00117d14 pop bx
 	00117d1c lor bx,ax
 	00117d28 mov ax,bx
		00117d34: FALL_THROUGH

	[00117d34]
		00117c78: CONDITIONAL_JUMP
		00117c80: FALL_THROUGH
 	00117d34 jnz 0x00117df0
		00117df0: CONDITIONAL_JUMP
		00117d3c: FALL_THROUGH

	[00117d3c]
		00117d34: FALL_THROUGH
 	00117d3c push ax
 	00117d44 mov mar,0x3cef20
 	00117d50 mov ax,mar
 	00117d5c push op
 	00117d64 mov op,ax
 	00117d6c setfuncargs 0x0
 	00117d74 mov ax,0x89ef20
 	00117d80 farcall ax
 	00117d88 pop op
 	00117d90 push ax
 	00117d98 mov mar,0x8e6f20
 	00117da4 mov ax,mar
 	00117db0 pop bx
 	00117db8 cmpeq bx,ax
 	00117dc4 mov ax,bx
 	00117dd0 pop bx
 	00117dd8 lor bx,ax
 	00117de4 mov ax,bx
		00117df0: FALL_THROUGH

	[00117df0]
		00117d34: CONDITIONAL_JUMP
		00117d3c: FALL_THROUGH
 	00117df0 jnz 0x00117eac
		00117eac: CONDITIONAL_JUMP
		00117df8: FALL_THROUGH

	[00117df8]
		00117df0: FALL_THROUGH
 	00117df8 push ax
 	00117e00 mov mar,0x3cef20
 	00117e0c mov ax,mar
 	00117e18 push op
 	00117e20 mov op,ax
 	00117e28 setfuncargs 0x0
 	00117e30 mov ax,0x89ef20
 	00117e3c farcall ax
 	00117e44 pop op
 	00117e4c push ax
 	00117e54 mov mar,0x8eef20
 	00117e60 mov ax,mar
 	00117e6c pop bx
 	00117e74 cmpeq bx,ax
 	00117e80 mov ax,bx
 	00117e8c pop bx
 	00117e94 lor bx,ax
 	00117ea0 mov ax,bx
		00117eac: FALL_THROUGH

	[00117eac]
		00117df0: CONDITIONAL_JUMP
		00117df8: FALL_THROUGH
 	00117eac jnz 0x00117f68
		00117f68: CONDITIONAL_JUMP
		00117eb4: FALL_THROUGH

	[00117eb4]
		00117eac: FALL_THROUGH
 	00117eb4 push ax
 	00117ebc mov mar,0x3cef20
 	00117ec8 mov ax,mar
 	00117ed4 push op
 	00117edc mov op,ax
 	00117ee4 setfuncargs 0x0
 	00117eec mov ax,0x89ef20
 	00117ef8 farcall ax
 	00117f00 pop op
 	00117f08 push ax
 	00117f10 mov mar,0x8f6f20
 	00117f1c mov ax,mar
 	00117f28 pop bx
 	00117f30 cmpeq bx,ax
 	00117f3c mov ax,bx
 	00117f48 pop bx
 	00117f50 lor bx,ax
 	00117f5c mov ax,bx
		00117f68: FALL_THROUGH

	[00117f68]
		00117eac: CONDITIONAL_JUMP
		00117eb4: FALL_THROUGH
 	00117f68 jnz 0x00118024
		00118024: CONDITIONAL_JUMP
		00117f70: FALL_THROUGH

	[00117f70]
		00117f68: FALL_THROUGH
 	00117f70 push ax
 	00117f78 mov mar,0x3cef20
 	00117f84 mov ax,mar
 	00117f90 push op
 	00117f98 mov op,ax
 	00117fa0 setfuncargs 0x0
 	00117fa8 mov ax,0x89ef20
 	00117fb4 farcall ax
 	00117fbc pop op
 	00117fc4 push ax
 	00117fcc mov mar,0x8fef20
 	00117fd8 mov ax,mar
 	00117fe4 pop bx
 	00117fec cmpeq bx,ax
 	00117ff8 mov ax,bx
 	00118004 pop bx
 	0011800c lor bx,ax
 	00118018 mov ax,bx
		00118024: FALL_THROUGH

	[00118024]
		00117f68: CONDITIONAL_JUMP
		00117f70: FALL_THROUGH
 	00118024 jnz 0x001180e0
		001180e0: CONDITIONAL_JUMP
		0011802c: FALL_THROUGH

	[0011802c]
		00118024: FALL_THROUGH
 	0011802c push ax
 	00118034 mov mar,0x3cef20
 	00118040 mov ax,mar
 	0011804c push op
 	00118054 mov op,ax
 	0011805c setfuncargs 0x0
 	00118064 mov ax,0x89ef20
 	00118070 farcall ax
 	00118078 pop op
 	00118080 push ax
 	00118088 mov mar,0x906f20
 	00118094 mov ax,mar
 	001180a0 pop bx
 	001180a8 cmpeq bx,ax
 	001180b4 mov ax,bx
 	001180c0 pop bx
 	001180c8 lor bx,ax
 	001180d4 mov ax,bx
		001180e0: FALL_THROUGH

	[001180e0]
		00118024: CONDITIONAL_JUMP
		0011802c: FALL_THROUGH
 	001180e0 jnz 0x0011819c
		0011819c: CONDITIONAL_JUMP
		001180e8: FALL_THROUGH

	[001180e8]
		001180e0: FALL_THROUGH
 	001180e8 push ax
 	001180f0 mov mar,0x3cef20
 	001180fc mov ax,mar
 	00118108 push op
 	00118110 mov op,ax
 	00118118 setfuncargs 0x0
 	00118120 mov ax,0x89ef20
 	0011812c farcall ax
 	00118134 pop op
 	0011813c push ax
 	00118144 mov mar,0x90ef20
 	00118150 mov ax,mar
 	0011815c pop bx
 	00118164 cmpeq bx,ax
 	00118170 mov ax,bx
 	0011817c pop bx
 	00118184 lor bx,ax
 	00118190 mov ax,bx
		0011819c: FALL_THROUGH

	[0011819c]
		001180e0: CONDITIONAL_JUMP
		001180e8: FALL_THROUGH
 	0011819c jnz 0x00118258
		00118258: CONDITIONAL_JUMP
		001181a4: FALL_THROUGH

	[001181a4]
		0011819c: FALL_THROUGH
 	001181a4 push ax
 	001181ac mov mar,0x3cef20
 	001181b8 mov ax,mar
 	001181c4 push op
 	001181cc mov op,ax
 	001181d4 setfuncargs 0x0
 	001181dc mov ax,0x89ef20
 	001181e8 farcall ax
 	001181f0 pop op
 	001181f8 push ax
 	00118200 mov mar,0x916f20
 	0011820c mov ax,mar
 	00118218 pop bx
 	00118220 cmpeq bx,ax
 	0011822c mov ax,bx
 	00118238 pop bx
 	00118240 lor bx,ax
 	0011824c mov ax,bx
		00118258: FALL_THROUGH

	[00118258]
		0011819c: CONDITIONAL_JUMP
		001181a4: FALL_THROUGH
 	00118258 jnz 0x00118314
		00118314: CONDITIONAL_JUMP
		00118260: FALL_THROUGH

	[00118260]
		00118258: FALL_THROUGH
 	00118260 push ax
 	00118268 mov mar,0x3cef20
 	00118274 mov ax,mar
 	00118280 push op
 	00118288 mov op,ax
 	00118290 setfuncargs 0x0
 	00118298 mov ax,0x89ef20
 	001182a4 farcall ax
 	001182ac pop op
 	001182b4 push ax
 	001182bc mov mar,0x91ef20
 	001182c8 mov ax,mar
 	001182d4 pop bx
 	001182dc cmpeq bx,ax
 	001182e8 mov ax,bx
 	001182f4 pop bx
 	001182fc lor bx,ax
 	00118308 mov ax,bx
		00118314: FALL_THROUGH

	[00118314]
		00118258: CONDITIONAL_JUMP
		00118260: FALL_THROUGH
 	00118314 jnz 0x001183d0
		001183d0: CONDITIONAL_JUMP
		0011831c: FALL_THROUGH

	[0011831c]
		00118314: FALL_THROUGH
 	0011831c push ax
 	00118324 mov mar,0x3cef20
 	00118330 mov ax,mar
 	0011833c push op
 	00118344 mov op,ax
 	0011834c setfuncargs 0x0
 	00118354 mov ax,0x89ef20
 	00118360 farcall ax
 	00118368 pop op
 	00118370 push ax
 	00118378 mov mar,0x926f20
 	00118384 mov ax,mar
 	00118390 pop bx
 	00118398 cmpeq bx,ax
 	001183a4 mov ax,bx
 	001183b0 pop bx
 	001183b8 lor bx,ax
 	001183c4 mov ax,bx
		001183d0: FALL_THROUGH

	[001183d0]
		00118314: CONDITIONAL_JUMP
		0011831c: FALL_THROUGH
 	001183d0 jnz 0x0011848c
		0011848c: CONDITIONAL_JUMP
		001183d8: FALL_THROUGH

	[001183d8]
		001183d0: FALL_THROUGH
 	001183d8 push ax
 	001183e0 mov mar,0x3cef20
 	001183ec mov ax,mar
 	001183f8 push op
 	00118400 mov op,ax
 	00118408 setfuncargs 0x0
 	00118410 mov ax,0x89ef20
 	0011841c farcall ax
 	00118424 pop op
 	0011842c push ax
 	00118434 mov mar,0x92ef20
 	00118440 mov ax,mar
 	0011844c pop bx
 	00118454 cmpeq bx,ax
 	00118460 mov ax,bx
 	0011846c pop bx
 	00118474 lor bx,ax
 	00118480 mov ax,bx
		0011848c: FALL_THROUGH

	[0011848c]
		001183d0: CONDITIONAL_JUMP
		001183d8: FALL_THROUGH
 	0011848c jnz 0x00118548
		00118548: CONDITIONAL_JUMP
		00118494: FALL_THROUGH

	[00118494]
		0011848c: FALL_THROUGH
 	00118494 push ax
 	0011849c mov mar,0x3cef20
 	001184a8 mov ax,mar
 	001184b4 push op
 	001184bc mov op,ax
 	001184c4 setfuncargs 0x0
 	001184cc mov ax,0x89ef20
 	001184d8 farcall ax
 	001184e0 pop op
 	001184e8 push ax
 	001184f0 mov mar,0x936f20
 	001184fc mov ax,mar
 	00118508 pop bx
 	00118510 cmpeq bx,ax
 	0011851c mov ax,bx
 	00118528 pop bx
 	00118530 lor bx,ax
 	0011853c mov ax,bx
		00118548: FALL_THROUGH

	[00118548]
		0011848c: CONDITIONAL_JUMP
		00118494: FALL_THROUGH
 	00118548 jnz 0x00118604
		00118604: CONDITIONAL_JUMP
		00118550: FALL_THROUGH

	[00118550]
		00118548: FALL_THROUGH
 	00118550 push ax
 	00118558 mov mar,0x3cef20
 	00118564 mov ax,mar
 	00118570 push op
 	00118578 mov op,ax
 	00118580 setfuncargs 0x0
 	00118588 mov ax,0x89ef20
 	00118594 farcall ax
 	0011859c pop op
 	001185a4 push ax
 	001185ac mov mar,0x93ef20
 	001185b8 mov ax,mar
 	001185c4 pop bx
 	001185cc cmpeq bx,ax
 	001185d8 mov ax,bx
 	001185e4 pop bx
 	001185ec lor bx,ax
 	001185f8 mov ax,bx
		00118604: FALL_THROUGH

	[00118604]
		00118548: CONDITIONAL_JUMP
		00118550: FALL_THROUGH
 	00118604 jnz 0x001186c0
		001186c0: CONDITIONAL_JUMP
		0011860c: FALL_THROUGH

	[0011860c]
		00118604: FALL_THROUGH
 	0011860c push ax
 	00118614 mov mar,0x3cef20
 	00118620 mov ax,mar
 	0011862c push op
 	00118634 mov op,ax
 	0011863c setfuncargs 0x0
 	00118644 mov ax,0x89ef20
 	00118650 farcall ax
 	00118658 pop op
 	00118660 push ax
 	00118668 mov mar,0x946f20
 	00118674 mov ax,mar
 	00118680 pop bx
 	00118688 cmpeq bx,ax
 	00118694 mov ax,bx
 	001186a0 pop bx
 	001186a8 lor bx,ax
 	001186b4 mov ax,bx
		001186c0: FALL_THROUGH

	[001186c0]
		00118604: CONDITIONAL_JUMP
		0011860c: FALL_THROUGH
 	001186c0 jnz 0x0011877c
		0011877c: CONDITIONAL_JUMP
		001186c8: FALL_THROUGH

	[001186c8]
		001186c0: FALL_THROUGH
 	001186c8 push ax
 	001186d0 mov mar,0x3cef20
 	001186dc mov ax,mar
 	001186e8 push op
 	001186f0 mov op,ax
 	001186f8 setfuncargs 0x0
 	00118700 mov ax,0x89ef20
 	0011870c farcall ax
 	00118714 pop op
 	0011871c push ax
 	00118724 mov mar,0x94ef20
 	00118730 mov ax,mar
 	0011873c pop bx
 	00118744 cmpeq bx,ax
 	00118750 mov ax,bx
 	0011875c pop bx
 	00118764 lor bx,ax
 	00118770 mov ax,bx
		0011877c: FALL_THROUGH

	[0011877c]
		001186c0: CONDITIONAL_JUMP
		001186c8: FALL_THROUGH
 	0011877c jnz 0x00118838
		00118838: CONDITIONAL_JUMP
		00118784: FALL_THROUGH

	[00118784]
		0011877c: FALL_THROUGH
 	00118784 push ax
 	0011878c mov mar,0x3cef20
 	00118798 mov ax,mar
 	001187a4 push op
 	001187ac mov op,ax
 	001187b4 setfuncargs 0x0
 	001187bc mov ax,0x89ef20
 	001187c8 farcall ax
 	001187d0 pop op
 	001187d8 push ax
 	001187e0 mov mar,0x956f20
 	001187ec mov ax,mar
 	001187f8 pop bx
 	00118800 cmpeq bx,ax
 	0011880c mov ax,bx
 	00118818 pop bx
 	00118820 lor bx,ax
 	0011882c mov ax,bx
		00118838: FALL_THROUGH

	[00118838]
		0011877c: CONDITIONAL_JUMP
		00118784: FALL_THROUGH
 	00118838 jnz 0x001188f4
		001188f4: CONDITIONAL_JUMP
		00118840: FALL_THROUGH

	[00118840]
		00118838: FALL_THROUGH
 	00118840 push ax
 	00118848 mov mar,0x3cef20
 	00118854 mov ax,mar
 	00118860 push op
 	00118868 mov op,ax
 	00118870 setfuncargs 0x0
 	00118878 mov ax,0x89ef20
 	00118884 farcall ax
 	0011888c pop op
 	00118894 push ax
 	0011889c mov mar,0x95ef20
 	001188a8 mov ax,mar
 	001188b4 pop bx
 	001188bc cmpeq bx,ax
 	001188c8 mov ax,bx
 	001188d4 pop bx
 	001188dc lor bx,ax
 	001188e8 mov ax,bx
		001188f4: FALL_THROUGH

	[001188f4]
		00118838: CONDITIONAL_JUMP
		00118840: FALL_THROUGH
 	001188f4 jnz 0x001189b0
		001189b0: CONDITIONAL_JUMP
		001188fc: FALL_THROUGH

	[001188fc]
		001188f4: FALL_THROUGH
 	001188fc push ax
 	00118904 mov mar,0x3cef20
 	00118910 mov ax,mar
 	0011891c push op
 	00118924 mov op,ax
 	0011892c setfuncargs 0x0
 	00118934 mov ax,0x89ef20
 	00118940 farcall ax
 	00118948 pop op
 	00118950 push ax
 	00118958 mov mar,0x88ef20
 	00118964 mov ax,mar
 	00118970 pop bx
 	00118978 cmpeq bx,ax
 	00118984 mov ax,bx
 	00118990 pop bx
 	00118998 lor bx,ax
 	001189a4 mov ax,bx
		001189b0: FALL_THROUGH

	[001189b0]
		001188f4: CONDITIONAL_JUMP
		001188fc: FALL_THROUGH
 	001189b0 jnz 0x00118a6c
		00118a6c: CONDITIONAL_JUMP
		001189b8: FALL_THROUGH

	[001189b8]
		001189b0: FALL_THROUGH
 	001189b8 push ax
 	001189c0 mov mar,0x3cef20
 	001189cc mov ax,mar
 	001189d8 push op
 	001189e0 mov op,ax
 	001189e8 setfuncargs 0x0
 	001189f0 mov ax,0x89ef20
 	001189fc farcall ax
 	00118a04 pop op
 	00118a0c push ax
 	00118a14 mov mar,0x886f20
 	00118a20 mov ax,mar
 	00118a2c pop bx
 	00118a34 cmpeq bx,ax
 	00118a40 mov ax,bx
 	00118a4c pop bx
 	00118a54 lor bx,ax
 	00118a60 mov ax,bx
		00118a6c: FALL_THROUGH

	[00118a6c]
		001189b0: CONDITIONAL_JUMP
		001189b8: FALL_THROUGH
 	00118a6c jnz 0x00118b28
		00118b28: CONDITIONAL_JUMP
		00118a74: FALL_THROUGH

	[00118a74]
		00118a6c: FALL_THROUGH
 	00118a74 push ax
 	00118a7c mov mar,0x3cef20
 	00118a88 mov ax,mar
 	00118a94 push op
 	00118a9c mov op,ax
 	00118aa4 setfuncargs 0x0
 	00118aac mov ax,0x89ef20
 	00118ab8 farcall ax
 	00118ac0 pop op
 	00118ac8 push ax
 	00118ad0 mov mar,0x966f20
 	00118adc mov ax,mar
 	00118ae8 pop bx
 	00118af0 cmpeq bx,ax
 	00118afc mov ax,bx
 	00118b08 pop bx
 	00118b10 lor bx,ax
 	00118b1c mov ax,bx
		00118b28: FALL_THROUGH

	[00118b28]
		00118a6c: CONDITIONAL_JUMP
		00118a74: FALL_THROUGH
 	00118b28 jnz 0x00118be4
		00118be4: CONDITIONAL_JUMP
		00118b30: FALL_THROUGH

	[00118b30]
		00118b28: FALL_THROUGH
 	00118b30 push ax
 	00118b38 mov mar,0x3cef20
 	00118b44 mov ax,mar
 	00118b50 push op
 	00118b58 mov op,ax
 	00118b60 setfuncargs 0x0
 	00118b68 mov ax,0x89ef20
 	00118b74 farcall ax
 	00118b7c pop op
 	00118b84 push ax
 	00118b8c mov mar,0x96ef20
 	00118b98 mov ax,mar
 	00118ba4 pop bx
 	00118bac cmpeq bx,ax
 	00118bb8 mov ax,bx
 	00118bc4 pop bx
 	00118bcc lor bx,ax
 	00118bd8 mov ax,bx
		00118be4: FALL_THROUGH

	[00118be4]
		00118b28: CONDITIONAL_JUMP
		00118b30: FALL_THROUGH
 	00118be4 jz 0x00118d24
		00118d24: CONDITIONAL_JUMP
		00118bec: FALL_THROUGH

	[00118bec]
		00118be4: FALL_THROUGH
 	00118bec sourceline 0x67b
 	00118bf4 mov ax,0x1
 	00118c00 mov bx,ax
 	00118c0c mov mar,0x3cef20
 	00118c18 mov ax,mar
 	00118c24 push op
 	00118c2c mov op,ax
 	00118c34 farpush bx
 	00118c3c setfuncargs 0x1
 	00118c44 mov ax,0x69ef20
 	00118c50 farcall ax
 	00118c58 farsubsp 0x1
 	00118c60 pop op
 	00118c68 sourceline 0x67c
 	00118c70 push op
 	00118c78 mov ax,0x2b7684
 	00118c84 farpush ax
 	00118c8c mov ax,0x138
 	00118c98 farpush ax
 	00118ca0 mov ax,0x92
 	00118cac farpush ax
 	00118cb4 mov ax,0x0
 	00118cc0 farpush ax
 	00118cc8 mov mar,0x3cef20
 	00118cd4 mov ax,mar
 	00118ce0 mov op,ax
 	00118ce8 setfuncargs 0x4
 	00118cf0 mov ax,0x6aef20
 	00118cfc farcall ax
 	00118d04 farsubsp 0x4
 	00118d0c pop op
 	00118d14 sourceline 0x67d
 	00118d1c jmp 0x00118f48
		00118f48: UNCONDITIONAL_JUMP

	[00118d24]
		00118be4: CONDITIONAL_JUMP
 	00118d24 sourceline 0x67f
 	00118d2c mov mar,0x3cef20
 	00118d38 mov ax,mar
 	00118d44 push op
 	00118d4c mov op,ax
 	00118d54 setfuncargs 0x0
 	00118d5c mov ax,0x89ef20
 	00118d68 farcall ax
 	00118d70 pop op
 	00118d78 push ax
 	00118d80 mov mar,0x976f20
 	00118d8c mov ax,mar
 	00118d98 pop bx
 	00118da0 cmpeq bx,ax
 	00118dac mov ax,bx
 	00118db8 jz 0x00118ef8
		00118ef8: CONDITIONAL_JUMP
		00118dc0: FALL_THROUGH

	[00118dc0]
		00118d24: FALL_THROUGH
 	00118dc0 sourceline 0x681
 	00118dc8 mov ax,0x1
 	00118dd4 mov bx,ax
 	00118de0 mov mar,0x3cef20
 	00118dec mov ax,mar
 	00118df8 push op
 	00118e00 mov op,ax
 	00118e08 farpush bx
 	00118e10 setfuncargs 0x1
 	00118e18 mov ax,0x69ef20
 	00118e24 farcall ax
 	00118e2c farsubsp 0x1
 	00118e34 pop op
 	00118e3c sourceline 0x682
 	00118e44 push op
 	00118e4c mov ax,0x2b76aa
 	00118e58 farpush ax
 	00118e60 mov ax,0x138
 	00118e6c farpush ax
 	00118e74 mov ax,0x92
 	00118e80 farpush ax
 	00118e88 mov ax,0x0
 	00118e94 farpush ax
 	00118e9c mov mar,0x3cef20
 	00118ea8 mov ax,mar
 	00118eb4 mov op,ax
 	00118ebc setfuncargs 0x4
 	00118ec4 mov ax,0x6aef20
 	00118ed0 farcall ax
 	00118ed8 farsubsp 0x4
 	00118ee0 pop op
 	00118ee8 sourceline 0x683
 	00118ef0 jmp 0x00118f48
		00118f48: UNCONDITIONAL_JUMP

	[00118ef8]
		00118d24: CONDITIONAL_JUMP
 	00118ef8 sourceline 0x685
 	00118f00 mov ax,0x3
 	00118f0c push ax
 	00118f14 mov ax,0x5
 	00118f20 push ax
 	00118f28 mov ax,0x10ae5c
 	00118f34 call ax
 	00118f3c sub sp,0x8
		00118f48: FALL_THROUGH

	[00118f48]
		00118bec: UNCONDITIONAL_JUMP
		00118dc0: UNCONDITIONAL_JUMP
		00118ef8: FALL_THROUGH
 	00118f48 sourceline 0x686
 	00118f50 mov ax,0x0
 	00118f5c ret

iLibraryCard_UseInv$0:
	[00118f60]
 	00118f60 sourceline 0x68c
 	00118f68 thisaddr
 	00118f70 sourceline 0x68d
*	00118f78 mov mar,0x3cef20
 	00118f84 mov ax,mar
 	00118f90 push op
 	00118f98 mov op,ax
 	00118fa0 setfuncargs 0x0
 	00118fa8 mov ax,0x89ef20
 	00118fb4 farcall ax
 	00118fbc pop op
 	00118fc4 push ax
 	00118fcc mov mar,0x8b6f20
 	00118fd8 mov ax,mar
 	00118fe4 pop bx
 	00118fec cmpeq bx,ax
 	00118ff8 mov ax,bx
 	00119004 jnz 0x001190c0
		001190c0: CONDITIONAL_JUMP
		0011900c: FALL_THROUGH

	[0011900c]
		00118f60: FALL_THROUGH
 	0011900c push ax
 	00119014 mov mar,0x3cef20
 	00119020 mov ax,mar
 	0011902c push op
 	00119034 mov op,ax
 	0011903c setfuncargs 0x0
 	00119044 mov ax,0x89ef20
 	00119050 farcall ax
 	00119058 pop op
 	00119060 push ax
 	00119068 mov mar,0x8bef20
 	00119074 mov ax,mar
 	00119080 pop bx
 	00119088 cmpeq bx,ax
 	00119094 mov ax,bx
 	001190a0 pop bx
 	001190a8 lor bx,ax
 	001190b4 mov ax,bx
		001190c0: FALL_THROUGH

	[001190c0]
		00118f60: CONDITIONAL_JUMP
		0011900c: FALL_THROUGH
 	001190c0 jz 0x00119200
		00119200: CONDITIONAL_JUMP
		001190c8: FALL_THROUGH

	[001190c8]
		001190c0: FALL_THROUGH
 	001190c8 sourceline 0x68f
 	001190d0 mov ax,0x1
 	001190dc mov bx,ax
 	001190e8 mov mar,0x3cef20
 	001190f4 mov ax,mar
 	00119100 push op
 	00119108 mov op,ax
 	00119110 farpush bx
 	00119118 setfuncargs 0x1
 	00119120 mov ax,0x69ef20
 	0011912c farcall ax
 	00119134 farsubsp 0x1
 	0011913c pop op
 	00119144 sourceline 0x690
 	0011914c push op
 	00119154 mov ax,0x2ba036
 	00119160 farpush ax
 	00119168 mov ax,0x138
 	00119174 farpush ax
 	0011917c mov ax,0x92
 	00119188 farpush ax
 	00119190 mov ax,0x0
 	0011919c farpush ax
 	001191a4 mov mar,0x3cef20
 	001191b0 mov ax,mar
 	001191bc mov op,ax
 	001191c4 setfuncargs 0x4
 	001191cc mov ax,0x6aef20
 	001191d8 farcall ax
 	001191e0 farsubsp 0x4
 	001191e8 pop op
 	001191f0 sourceline 0x691
 	001191f8 jmp 0x00119250
		00119250: UNCONDITIONAL_JUMP

	[00119200]
		001190c0: CONDITIONAL_JUMP
 	00119200 sourceline 0x693
 	00119208 mov ax,0x3
 	00119214 push ax
 	0011921c mov ax,0x5
 	00119228 push ax
 	00119230 mov ax,0x10ae5c
 	0011923c call ax
 	00119244 sub sp,0x8
		00119250: FALL_THROUGH

	[00119250]
		001190c8: UNCONDITIONAL_JUMP
		00119200: FALL_THROUGH
 	00119250 sourceline 0x694
 	00119258 mov ax,0x0
 	00119264 ret

iPharmacyCard_UseInv$0:
	[00119268]
 	00119268 sourceline 0x69a
 	00119270 thisaddr
 	00119278 sourceline 0x69b
*	00119280 mov mar,0x3cef20
 	0011928c mov ax,mar
 	00119298 push op
 	001192a0 mov op,ax
 	001192a8 setfuncargs 0x0
 	001192b0 mov ax,0x89ef20
 	001192bc farcall ax
 	001192c4 pop op
 	001192cc push ax
 	001192d4 mov mar,0x8b6f20
 	001192e0 mov ax,mar
 	001192ec pop bx
 	001192f4 cmpeq bx,ax
 	00119300 mov ax,bx
 	0011930c jnz 0x001193c8
		001193c8: CONDITIONAL_JUMP
		00119314: FALL_THROUGH

	[00119314]
		00119268: FALL_THROUGH
 	00119314 push ax
 	0011931c mov mar,0x3cef20
 	00119328 mov ax,mar
 	00119334 push op
 	0011933c mov op,ax
 	00119344 setfuncargs 0x0
 	0011934c mov ax,0x89ef20
 	00119358 farcall ax
 	00119360 pop op
 	00119368 push ax
 	00119370 mov mar,0x8bef20
 	0011937c mov ax,mar
 	00119388 pop bx
 	00119390 cmpeq bx,ax
 	0011939c mov ax,bx
 	001193a8 pop bx
 	001193b0 lor bx,ax
 	001193bc mov ax,bx
		001193c8: FALL_THROUGH

	[001193c8]
		00119268: CONDITIONAL_JUMP
		00119314: FALL_THROUGH
 	001193c8 jz 0x00119508
		00119508: CONDITIONAL_JUMP
		001193d0: FALL_THROUGH

	[001193d0]
		001193c8: FALL_THROUGH
 	001193d0 sourceline 0x69d
 	001193d8 mov ax,0x1
 	001193e4 mov bx,ax
 	001193f0 mov mar,0x3cef20
 	001193fc mov ax,mar
 	00119408 push op
 	00119410 mov op,ax
 	00119418 farpush bx
 	00119420 setfuncargs 0x1
 	00119428 mov ax,0x69ef20
 	00119434 farcall ax
 	0011943c farsubsp 0x1
 	00119444 pop op
 	0011944c sourceline 0x69e
 	00119454 push op
 	0011945c mov ax,0x2ba036
 	00119468 farpush ax
 	00119470 mov ax,0x138
 	0011947c farpush ax
 	00119484 mov ax,0x92
 	00119490 farpush ax
 	00119498 mov ax,0x0
 	001194a4 farpush ax
 	001194ac mov mar,0x3cef20
 	001194b8 mov ax,mar
 	001194c4 mov op,ax
 	001194cc setfuncargs 0x4
 	001194d4 mov ax,0x6aef20
 	001194e0 farcall ax
 	001194e8 farsubsp 0x4
 	001194f0 pop op
 	001194f8 sourceline 0x69f
 	00119500 jmp 0x00119558
		00119558: UNCONDITIONAL_JUMP

	[00119508]
		001193c8: CONDITIONAL_JUMP
 	00119508 sourceline 0x6a1
 	00119510 mov ax,0x3
 	0011951c push ax
 	00119524 mov ax,0x5
 	00119530 push ax
 	00119538 mov ax,0x10ae5c
 	00119544 call ax
 	0011954c sub sp,0x8
		00119558: FALL_THROUGH

	[00119558]
		001193d0: UNCONDITIONAL_JUMP
		00119508: FALL_THROUGH
 	00119558 sourceline 0x6a2
 	00119560 mov ax,0x0
 	0011956c ret

iFakePapers_UseInv$0:
	[00119570]
 	00119570 sourceline 0x6a8
 	00119578 thisaddr
 	00119580 sourceline 0x6a9
*	00119588 mov mar,0x3cef20
 	00119594 mov ax,mar
 	001195a0 push op
 	001195a8 mov op,ax
 	001195b0 setfuncargs 0x0
 	001195b8 mov ax,0x89ef20
 	001195c4 farcall ax
 	001195cc pop op
 	001195d4 push ax
 	001195dc mov mar,0x8b6f20
 	001195e8 mov ax,mar
 	001195f4 pop bx
 	001195fc cmpeq bx,ax
 	00119608 mov ax,bx
 	00119614 jnz 0x001196d0
		001196d0: CONDITIONAL_JUMP
		0011961c: FALL_THROUGH

	[0011961c]
		00119570: FALL_THROUGH
 	0011961c push ax
 	00119624 mov mar,0x3cef20
 	00119630 mov ax,mar
 	0011963c push op
 	00119644 mov op,ax
 	0011964c setfuncargs 0x0
 	00119654 mov ax,0x89ef20
 	00119660 farcall ax
 	00119668 pop op
 	00119670 push ax
 	00119678 mov mar,0x8bef20
 	00119684 mov ax,mar
 	00119690 pop bx
 	00119698 cmpeq bx,ax
 	001196a4 mov ax,bx
 	001196b0 pop bx
 	001196b8 lor bx,ax
 	001196c4 mov ax,bx
		001196d0: FALL_THROUGH

	[001196d0]
		00119570: CONDITIONAL_JUMP
		0011961c: FALL_THROUGH
 	001196d0 jz 0x00119810
		00119810: CONDITIONAL_JUMP
		001196d8: FALL_THROUGH

	[001196d8]
		001196d0: FALL_THROUGH
 	001196d8 sourceline 0x6ab
 	001196e0 mov ax,0x1
 	001196ec mov bx,ax
 	001196f8 mov mar,0x3cef20
 	00119704 mov ax,mar
 	00119710 push op
 	00119718 mov op,ax
 	00119720 farpush bx
 	00119728 setfuncargs 0x1
 	00119730 mov ax,0x69ef20
 	0011973c farcall ax
 	00119744 farsubsp 0x1
 	0011974c pop op
 	00119754 sourceline 0x6ac
 	0011975c push op
 	00119764 mov ax,0x2ba036
 	00119770 farpush ax
 	00119778 mov ax,0x138
 	00119784 farpush ax
 	0011978c mov ax,0x92
 	00119798 farpush ax
 	001197a0 mov ax,0x0
 	001197ac farpush ax
 	001197b4 mov mar,0x3cef20
 	001197c0 mov ax,mar
 	001197cc mov op,ax
 	001197d4 setfuncargs 0x4
 	001197dc mov ax,0x6aef20
 	001197e8 farcall ax
 	001197f0 farsubsp 0x4
 	001197f8 pop op
 	00119800 sourceline 0x6ad
 	00119808 jmp 0x00119860
		00119860: UNCONDITIONAL_JUMP

	[00119810]
		001196d0: CONDITIONAL_JUMP
 	00119810 sourceline 0x6af
 	00119818 mov ax,0x3
 	00119824 push ax
 	0011982c mov ax,0x5
 	00119838 push ax
 	00119840 mov ax,0x10ae5c
 	0011984c call ax
 	00119854 sub sp,0x8
		00119860: FALL_THROUGH

	[00119860]
		001196d8: UNCONDITIONAL_JUMP
		00119810: FALL_THROUGH
 	00119860 sourceline 0x6b0
 	00119868 mov ax,0x0
 	00119874 ret

iTableLeg_UseInv$0:
	[00119878]
 	00119878 sourceline 0x6b5
 	00119880 thisaddr
 	00119888 sourceline 0x6b6
*	00119890 mov mar,0x3cef20
 	0011989c mov ax,mar
 	001198a8 push op
 	001198b0 mov op,ax
 	001198b8 setfuncargs 0x0
 	001198c0 mov ax,0x89ef20
 	001198cc farcall ax
 	001198d4 pop op
 	001198dc push ax
 	001198e4 mov mar,0x8bef20
 	001198f0 mov ax,mar
 	001198fc pop bx
 	00119904 cmpeq bx,ax
 	00119910 mov ax,bx
 	0011991c jz 0x00119a5c
		00119a5c: CONDITIONAL_JUMP
		00119924: FALL_THROUGH

	[00119924]
		00119878: FALL_THROUGH
 	00119924 sourceline 0x6b8
 	0011992c mov ax,0x1
 	00119938 mov bx,ax
 	00119944 mov mar,0x3cef20
 	00119950 mov ax,mar
 	0011995c push op
 	00119964 mov op,ax
 	0011996c farpush bx
 	00119974 setfuncargs 0x1
 	0011997c mov ax,0x69ef20
 	00119988 farcall ax
 	00119990 farsubsp 0x1
 	00119998 pop op
 	001199a0 sourceline 0x6b9
 	001199a8 push op
 	001199b0 mov ax,0x2b9bcf
 	001199bc farpush ax
 	001199c4 mov ax,0x138
 	001199d0 farpush ax
 	001199d8 mov ax,0x92
 	001199e4 farpush ax
 	001199ec mov ax,0x0
 	001199f8 farpush ax
 	00119a00 mov mar,0x3cef20
 	00119a0c mov ax,mar
 	00119a18 mov op,ax
 	00119a20 setfuncargs 0x4
 	00119a28 mov ax,0x6aef20
 	00119a34 farcall ax
 	00119a3c farsubsp 0x4
 	00119a44 pop op
 	00119a4c sourceline 0x6ba
 	00119a54 jmp 0x00119aac
		00119aac: UNCONDITIONAL_JUMP

	[00119a5c]
		00119878: CONDITIONAL_JUMP
 	00119a5c sourceline 0x6bc
 	00119a64 mov ax,0x3
 	00119a70 push ax
 	00119a78 mov ax,0x5
 	00119a84 push ax
 	00119a8c mov ax,0x10ae5c
 	00119a98 call ax
 	00119aa0 sub sp,0x8
		00119aac: FALL_THROUGH

	[00119aac]
		00119924: UNCONDITIONAL_JUMP
		00119a5c: FALL_THROUGH
 	00119aac sourceline 0x6bd
 	00119ab4 mov ax,0x0
 	00119ac0 ret

iFutureCode_UseInv$0:
	[00119ac4]
 	00119ac4 sourceline 0x6c4
 	00119acc thisaddr
 	00119ad4 sourceline 0x6c5
*	00119adc mov mar,0x3cef20
 	00119ae8 mov ax,mar
 	00119af4 push op
 	00119afc mov op,ax
 	00119b04 setfuncargs 0x0
 	00119b0c mov ax,0x89ef20
 	00119b18 farcall ax
 	00119b20 pop op
 	00119b28 push ax
 	00119b30 mov mar,0x956f20
 	00119b3c mov ax,mar
 	00119b48 pop bx
 	00119b50 cmpeq bx,ax
 	00119b5c mov ax,bx
 	00119b68 jnz 0x00119c24
		00119c24: CONDITIONAL_JUMP
		00119b70: FALL_THROUGH

	[00119b70]
		00119ac4: FALL_THROUGH
 	00119b70 push ax
 	00119b78 mov mar,0x3cef20
 	00119b84 mov ax,mar
 	00119b90 push op
 	00119b98 mov op,ax
 	00119ba0 setfuncargs 0x0
 	00119ba8 mov ax,0x89ef20
 	00119bb4 farcall ax
 	00119bbc pop op
 	00119bc4 push ax
 	00119bcc mov mar,0x95ef20
 	00119bd8 mov ax,mar
 	00119be4 pop bx
 	00119bec cmpeq bx,ax
 	00119bf8 mov ax,bx
 	00119c04 pop bx
 	00119c0c lor bx,ax
 	00119c18 mov ax,bx
		00119c24: FALL_THROUGH

	[00119c24]
		00119ac4: CONDITIONAL_JUMP
		00119b70: FALL_THROUGH
 	00119c24 jz 0x00119d64
		00119d64: CONDITIONAL_JUMP
		00119c2c: FALL_THROUGH

	[00119c2c]
		00119c24: FALL_THROUGH
 	00119c2c sourceline 0x6c7
 	00119c34 mov ax,0x1
 	00119c40 mov bx,ax
 	00119c4c mov mar,0x3cef20
 	00119c58 mov ax,mar
 	00119c64 push op
 	00119c6c mov op,ax
 	00119c74 farpush bx
 	00119c7c setfuncargs 0x1
 	00119c84 mov ax,0x69ef20
 	00119c90 farcall ax
 	00119c98 farsubsp 0x1
 	00119ca0 pop op
 	00119ca8 sourceline 0x6c8
 	00119cb0 push op
 	00119cb8 mov ax,0x2ba18d
 	00119cc4 farpush ax
 	00119ccc mov ax,0x138
 	00119cd8 farpush ax
 	00119ce0 mov ax,0x92
 	00119cec farpush ax
 	00119cf4 mov ax,0x0
 	00119d00 farpush ax
 	00119d08 mov mar,0x3cef20
 	00119d14 mov ax,mar
 	00119d20 mov op,ax
 	00119d28 setfuncargs 0x4
 	00119d30 mov ax,0x6aef20
 	00119d3c farcall ax
 	00119d44 farsubsp 0x4
 	00119d4c pop op
 	00119d54 sourceline 0x6c9
 	00119d5c jmp 0x0011abf8
		0011abf8: UNCONDITIONAL_JUMP

	[00119d64]
		00119c24: CONDITIONAL_JUMP
 	00119d64 sourceline 0x6cb
 	00119d6c mov mar,0x3cef20
 	00119d78 mov ax,mar
 	00119d84 push op
 	00119d8c mov op,ax
 	00119d94 setfuncargs 0x0
 	00119d9c mov ax,0x89ef20
 	00119da8 farcall ax
 	00119db0 pop op
 	00119db8 push ax
 	00119dc0 mov mar,0x93ef20
 	00119dcc mov ax,mar
 	00119dd8 pop bx
 	00119de0 cmpeq bx,ax
 	00119dec mov ax,bx
 	00119df8 jz 0x00119f38
		00119f38: CONDITIONAL_JUMP
		00119e00: FALL_THROUGH

	[00119e00]
		00119d64: FALL_THROUGH
 	00119e00 sourceline 0x6cd
 	00119e08 mov ax,0x1
 	00119e14 mov bx,ax
 	00119e20 mov mar,0x3cef20
 	00119e2c mov ax,mar
 	00119e38 push op
 	00119e40 mov op,ax
 	00119e48 farpush bx
 	00119e50 setfuncargs 0x1
 	00119e58 mov ax,0x69ef20
 	00119e64 farcall ax
 	00119e6c farsubsp 0x1
 	00119e74 pop op
 	00119e7c sourceline 0x6ce
 	00119e84 push op
 	00119e8c mov ax,0x2b9ee0
 	00119e98 farpush ax
 	00119ea0 mov ax,0x138
 	00119eac farpush ax
 	00119eb4 mov ax,0x92
 	00119ec0 farpush ax
 	00119ec8 mov ax,0x0
 	00119ed4 farpush ax
 	00119edc mov mar,0x3cef20
 	00119ee8 mov ax,mar
 	00119ef4 mov op,ax
 	00119efc setfuncargs 0x4
 	00119f04 mov ax,0x6aef20
 	00119f10 farcall ax
 	00119f18 farsubsp 0x4
 	00119f20 pop op
 	00119f28 sourceline 0x6cf
 	00119f30 jmp 0x0011abf8
		0011abf8: UNCONDITIONAL_JUMP

	[00119f38]
		00119d64: CONDITIONAL_JUMP
 	00119f38 sourceline 0x6d1
 	00119f40 mov mar,0x3cef20
 	00119f4c mov ax,mar
 	00119f58 push op
 	00119f60 mov op,ax
 	00119f68 setfuncargs 0x0
 	00119f70 mov ax,0x89ef20
 	00119f7c farcall ax
 	00119f84 pop op
 	00119f8c push ax
 	00119f94 mov mar,0x916f20
 	00119fa0 mov ax,mar
 	00119fac pop bx
 	00119fb4 cmpeq bx,ax
 	00119fc0 mov ax,bx
 	00119fcc jz 0x0011a10c
		0011a10c: CONDITIONAL_JUMP
		00119fd4: FALL_THROUGH

	[00119fd4]
		00119f38: FALL_THROUGH
 	00119fd4 sourceline 0x6d3
 	00119fdc mov ax,0x1
 	00119fe8 mov bx,ax
 	00119ff4 mov mar,0x3cef20
 	0011a000 mov ax,mar
 	0011a00c push op
 	0011a014 mov op,ax
 	0011a01c farpush bx
 	0011a024 setfuncargs 0x1
 	0011a02c mov ax,0x69ef20
 	0011a038 farcall ax
 	0011a040 farsubsp 0x1
 	0011a048 pop op
 	0011a050 sourceline 0x6d4
 	0011a058 push op
 	0011a060 mov ax,0x2b9fe5
 	0011a06c farpush ax
 	0011a074 mov ax,0x138
 	0011a080 farpush ax
 	0011a088 mov ax,0x92
 	0011a094 farpush ax
 	0011a09c mov ax,0x0
 	0011a0a8 farpush ax
 	0011a0b0 mov mar,0x3cef20
 	0011a0bc mov ax,mar
 	0011a0c8 mov op,ax
 	0011a0d0 setfuncargs 0x4
 	0011a0d8 mov ax,0x6aef20
 	0011a0e4 farcall ax
 	0011a0ec farsubsp 0x4
 	0011a0f4 pop op
 	0011a0fc sourceline 0x6d5
 	0011a104 jmp 0x0011abf8
		0011abf8: UNCONDITIONAL_JUMP

	[0011a10c]
		00119f38: CONDITIONAL_JUMP
 	0011a10c sourceline 0x6d7
 	0011a114 mov mar,0x3cef20
 	0011a120 mov ax,mar
 	0011a12c push op
 	0011a134 mov op,ax
 	0011a13c setfuncargs 0x0
 	0011a144 mov ax,0x89ef20
 	0011a150 farcall ax
 	0011a158 pop op
 	0011a160 push ax
 	0011a168 mov mar,0x97ef20
 	0011a174 mov ax,mar
 	0011a180 pop bx
 	0011a188 cmpeq bx,ax
 	0011a194 mov ax,bx
 	0011a1a0 jnz 0x0011a25c
		0011a25c: CONDITIONAL_JUMP
		0011a1a8: FALL_THROUGH

	[0011a1a8]
		0011a10c: FALL_THROUGH
 	0011a1a8 push ax
 	0011a1b0 mov mar,0x3cef20
 	0011a1bc mov ax,mar
 	0011a1c8 push op
 	0011a1d0 mov op,ax
 	0011a1d8 setfuncargs 0x0
 	0011a1e0 mov ax,0x89ef20
 	0011a1ec farcall ax
 	0011a1f4 pop op
 	0011a1fc push ax
 	0011a204 mov mar,0x90ef20
 	0011a210 mov ax,mar
 	0011a21c pop bx
 	0011a224 cmpeq bx,ax
 	0011a230 mov ax,bx
 	0011a23c pop bx
 	0011a244 lor bx,ax
 	0011a250 mov ax,bx
		0011a25c: FALL_THROUGH

	[0011a25c]
		0011a10c: CONDITIONAL_JUMP
		0011a1a8: FALL_THROUGH
 	0011a25c jz 0x0011a39c
		0011a39c: CONDITIONAL_JUMP
		0011a264: FALL_THROUGH

	[0011a264]
		0011a25c: FALL_THROUGH
 	0011a264 sourceline 0x6d9
 	0011a26c mov ax,0x1
 	0011a278 mov bx,ax
 	0011a284 mov mar,0x3cef20
 	0011a290 mov ax,mar
 	0011a29c push op
 	0011a2a4 mov op,ax
 	0011a2ac farpush bx
 	0011a2b4 setfuncargs 0x1
 	0011a2bc mov ax,0x69ef20
 	0011a2c8 farcall ax
 	0011a2d0 farsubsp 0x1
 	0011a2d8 pop op
 	0011a2e0 sourceline 0x6da
 	0011a2e8 push op
 	0011a2f0 mov ax,0x2b9a2e
 	0011a2fc farpush ax
 	0011a304 mov ax,0x138
 	0011a310 farpush ax
 	0011a318 mov ax,0x92
 	0011a324 farpush ax
 	0011a32c mov ax,0x0
 	0011a338 farpush ax
 	0011a340 mov mar,0x3cef20
 	0011a34c mov ax,mar
 	0011a358 mov op,ax
 	0011a360 setfuncargs 0x4
 	0011a368 mov ax,0x6aef20
 	0011a374 farcall ax
 	0011a37c farsubsp 0x4
 	0011a384 pop op
 	0011a38c sourceline 0x6db
 	0011a394 jmp 0x0011abf8
		0011abf8: UNCONDITIONAL_JUMP

	[0011a39c]
		0011a25c: CONDITIONAL_JUMP
 	0011a39c sourceline 0x6dd
 	0011a3a4 mov mar,0x3cef20
 	0011a3b0 mov ax,mar
 	0011a3bc push op
 	0011a3c4 mov op,ax
 	0011a3cc setfuncargs 0x0
 	0011a3d4 mov ax,0x89ef20
 	0011a3e0 farcall ax
 	0011a3e8 pop op
 	0011a3f0 push ax
 	0011a3f8 mov mar,0x886f20
 	0011a404 mov ax,mar
 	0011a410 pop bx
 	0011a418 cmpeq bx,ax
 	0011a424 mov ax,bx
 	0011a430 jz 0x0011a570
		0011a570: CONDITIONAL_JUMP
		0011a438: FALL_THROUGH

	[0011a438]
		0011a39c: FALL_THROUGH
 	0011a438 sourceline 0x6df
 	0011a440 mov ax,0x1
 	0011a44c mov bx,ax
 	0011a458 mov mar,0x3cef20
 	0011a464 mov ax,mar
 	0011a470 push op
 	0011a478 mov op,ax
 	0011a480 farpush bx
 	0011a488 setfuncargs 0x1
 	0011a490 mov ax,0x69ef20
 	0011a49c farcall ax
 	0011a4a4 farsubsp 0x1
 	0011a4ac pop op
 	0011a4b4 sourceline 0x6e0
 	0011a4bc push op
 	0011a4c4 mov ax,0x2b9adb
 	0011a4d0 farpush ax
 	0011a4d8 mov ax,0x138
 	0011a4e4 farpush ax
 	0011a4ec mov ax,0x92
 	0011a4f8 farpush ax
 	0011a500 mov ax,0x0
 	0011a50c farpush ax
 	0011a514 mov mar,0x3cef20
 	0011a520 mov ax,mar
 	0011a52c mov op,ax
 	0011a534 setfuncargs 0x4
 	0011a53c mov ax,0x6aef20
 	0011a548 farcall ax
 	0011a550 farsubsp 0x4
 	0011a558 pop op
 	0011a560 sourceline 0x6e1
 	0011a568 jmp 0x0011abf8
		0011abf8: UNCONDITIONAL_JUMP

	[0011a570]
		0011a39c: CONDITIONAL_JUMP
 	0011a570 sourceline 0x6e3
 	0011a578 mov mar,0x3cef20
 	0011a584 mov ax,mar
 	0011a590 push op
 	0011a598 mov op,ax
 	0011a5a0 setfuncargs 0x0
 	0011a5a8 mov ax,0x89ef20
 	0011a5b4 farcall ax
 	0011a5bc pop op
 	0011a5c4 push ax
 	0011a5cc mov mar,0x8b6f20
 	0011a5d8 mov ax,mar
 	0011a5e4 pop bx
 	0011a5ec cmpeq bx,ax
 	0011a5f8 mov ax,bx
 	0011a604 jnz 0x0011a6c0
		0011a6c0: CONDITIONAL_JUMP
		0011a60c: FALL_THROUGH

	[0011a60c]
		0011a570: FALL_THROUGH
 	0011a60c push ax
 	0011a614 mov mar,0x3cef20
 	0011a620 mov ax,mar
 	0011a62c push op
 	0011a634 mov op,ax
 	0011a63c setfuncargs 0x0
 	0011a644 mov ax,0x89ef20
 	0011a650 farcall ax
 	0011a658 pop op
 	0011a660 push ax
 	0011a668 mov mar,0x8bef20
 	0011a674 mov ax,mar
 	0011a680 pop bx
 	0011a688 cmpeq bx,ax
 	0011a694 mov ax,bx
 	0011a6a0 pop bx
 	0011a6a8 lor bx,ax
 	0011a6b4 mov ax,bx
		0011a6c0: FALL_THROUGH

	[0011a6c0]
		0011a570: CONDITIONAL_JUMP
		0011a60c: FALL_THROUGH
 	0011a6c0 jz 0x0011a800
		0011a800: CONDITIONAL_JUMP
		0011a6c8: FALL_THROUGH

	[0011a6c8]
		0011a6c0: FALL_THROUGH
 	0011a6c8 sourceline 0x6e5
 	0011a6d0 mov ax,0x1
 	0011a6dc mov bx,ax
 	0011a6e8 mov mar,0x3cef20
 	0011a6f4 mov ax,mar
 	0011a700 push op
 	0011a708 mov op,ax
 	0011a710 farpush bx
 	0011a718 setfuncargs 0x1
 	0011a720 mov ax,0x69ef20
 	0011a72c farcall ax
 	0011a734 farsubsp 0x1
 	0011a73c pop op
 	0011a744 sourceline 0x6e6
 	0011a74c push op
 	0011a754 mov ax,0x2ba036
 	0011a760 farpush ax
 	0011a768 mov ax,0x138
 	0011a774 farpush ax
 	0011a77c mov ax,0x92
 	0011a788 farpush ax
 	0011a790 mov ax,0x0
 	0011a79c farpush ax
 	0011a7a4 mov mar,0x3cef20
 	0011a7b0 mov ax,mar
 	0011a7bc mov op,ax
 	0011a7c4 setfuncargs 0x4
 	0011a7cc mov ax,0x6aef20
 	0011a7d8 farcall ax
 	0011a7e0 farsubsp 0x4
 	0011a7e8 pop op
 	0011a7f0 sourceline 0x6e7
 	0011a7f8 jmp 0x0011abf8
		0011abf8: UNCONDITIONAL_JUMP

	[0011a800]
		0011a6c0: CONDITIONAL_JUMP
 	0011a800 sourceline 0x6e9
 	0011a808 mov mar,0x3cef20
 	0011a814 mov ax,mar
 	0011a820 push op
 	0011a828 mov op,ax
 	0011a830 setfuncargs 0x0
 	0011a838 mov ax,0x89ef20
 	0011a844 farcall ax
 	0011a84c pop op
 	0011a854 push ax
 	0011a85c mov mar,0x94ef20
 	0011a868 mov ax,mar
 	0011a874 pop bx
 	0011a87c cmpeq bx,ax
 	0011a888 mov ax,bx
 	0011a894 jz 0x0011a9d4
		0011a9d4: CONDITIONAL_JUMP
		0011a89c: FALL_THROUGH

	[0011a89c]
		0011a800: FALL_THROUGH
 	0011a89c sourceline 0x6eb
 	0011a8a4 mov ax,0x1
 	0011a8b0 mov bx,ax
 	0011a8bc mov mar,0x3cef20
 	0011a8c8 mov ax,mar
 	0011a8d4 push op
 	0011a8dc mov op,ax
 	0011a8e4 farpush bx
 	0011a8ec setfuncargs 0x1
 	0011a8f4 mov ax,0x69ef20
 	0011a900 farcall ax
 	0011a908 farsubsp 0x1
 	0011a910 pop op
 	0011a918 sourceline 0x6ec
 	0011a920 push op
 	0011a928 mov ax,0x2b9b31
 	0011a934 farpush ax
 	0011a93c mov ax,0x138
 	0011a948 farpush ax
 	0011a950 mov ax,0x92
 	0011a95c farpush ax
 	0011a964 mov ax,0x0
 	0011a970 farpush ax
 	0011a978 mov mar,0x3cef20
 	0011a984 mov ax,mar
 	0011a990 mov op,ax
 	0011a998 setfuncargs 0x4
 	0011a9a0 mov ax,0x6aef20
 	0011a9ac farcall ax
 	0011a9b4 farsubsp 0x4
 	0011a9bc pop op
 	0011a9c4 sourceline 0x6ed
 	0011a9cc jmp 0x0011abf8
		0011abf8: UNCONDITIONAL_JUMP

	[0011a9d4]
		0011a800: CONDITIONAL_JUMP
 	0011a9d4 sourceline 0x6ef
 	0011a9dc mov mar,0x3cef20
 	0011a9e8 mov ax,mar
 	0011a9f4 push op
 	0011a9fc mov op,ax
 	0011aa04 setfuncargs 0x0
 	0011aa0c mov ax,0x89ef20
 	0011aa18 farcall ax
 	0011aa20 pop op
 	0011aa28 push ax
 	0011aa30 mov mar,0x936f20
 	0011aa3c mov ax,mar
 	0011aa48 pop bx
 	0011aa50 cmpeq bx,ax
 	0011aa5c mov ax,bx
 	0011aa68 jz 0x0011aba8
		0011aba8: CONDITIONAL_JUMP
		0011aa70: FALL_THROUGH

	[0011aa70]
		0011a9d4: FALL_THROUGH
 	0011aa70 sourceline 0x6f1
 	0011aa78 mov ax,0x1
 	0011aa84 mov bx,ax
 	0011aa90 mov mar,0x3cef20
 	0011aa9c mov ax,mar
 	0011aaa8 push op
 	0011aab0 mov op,ax
 	0011aab8 farpush bx
 	0011aac0 setfuncargs 0x1
 	0011aac8 mov ax,0x69ef20
 	0011aad4 farcall ax
 	0011aadc farsubsp 0x1
 	0011aae4 pop op
 	0011aaec sourceline 0x6f2
 	0011aaf4 push op
 	0011aafc mov ax,0x2ba18d
 	0011ab08 farpush ax
 	0011ab10 mov ax,0x138
 	0011ab1c farpush ax
 	0011ab24 mov ax,0x92
 	0011ab30 farpush ax
 	0011ab38 mov ax,0x0
 	0011ab44 farpush ax
 	0011ab4c mov mar,0x3cef20
 	0011ab58 mov ax,mar
 	0011ab64 mov op,ax
 	0011ab6c setfuncargs 0x4
 	0011ab74 mov ax,0x6aef20
 	0011ab80 farcall ax
 	0011ab88 farsubsp 0x4
 	0011ab90 pop op
 	0011ab98 sourceline 0x6f3
 	0011aba0 jmp 0x0011abf8
		0011abf8: UNCONDITIONAL_JUMP

	[0011aba8]
		0011a9d4: CONDITIONAL_JUMP
 	0011aba8 sourceline 0x6f5
 	0011abb0 mov ax,0x3
 	0011abbc push ax
 	0011abc4 mov ax,0x5
 	0011abd0 push ax
 	0011abd8 mov ax,0x10ae5c
 	0011abe4 call ax
 	0011abec sub sp,0x8
		0011abf8: FALL_THROUGH

	[0011abf8]
		00119c2c: UNCONDITIONAL_JUMP
		00119e00: UNCONDITIONAL_JUMP
		00119fd4: UNCONDITIONAL_JUMP
		0011a264: UNCONDITIONAL_JUMP
		0011a438: UNCONDITIONAL_JUMP
		0011a6c8: UNCONDITIONAL_JUMP
		0011a89c: UNCONDITIONAL_JUMP
		0011aa70: UNCONDITIONAL_JUMP
		0011aba8: FALL_THROUGH
 	0011abf8 sourceline 0x6f6
 	0011ac00 mov ax,0x0
 	0011ac0c ret

iKODrops_UseInv$0:
	[0011ac10]
 	0011ac10 sourceline 0x6fb
 	0011ac18 thisaddr
 	0011ac20 sourceline 0x6fc
*	0011ac28 mov mar,0x3cef20
 	0011ac34 mov ax,mar
 	0011ac40 push op
 	0011ac48 mov op,ax
 	0011ac50 setfuncargs 0x0
 	0011ac58 mov ax,0x89ef20
 	0011ac64 farcall ax
 	0011ac6c pop op
 	0011ac74 push ax
 	0011ac7c mov mar,0x906f20
 	0011ac88 mov ax,mar
 	0011ac94 pop bx
 	0011ac9c cmpeq bx,ax
 	0011aca8 mov ax,bx
 	0011acb4 jz 0x0011adf4
		0011adf4: CONDITIONAL_JUMP
		0011acbc: FALL_THROUGH

	[0011acbc]
		0011ac10: FALL_THROUGH
 	0011acbc sourceline 0x6fe
 	0011acc4 mov ax,0x1
 	0011acd0 mov bx,ax
 	0011acdc mov mar,0x3cef20
 	0011ace8 mov ax,mar
 	0011acf4 push op
 	0011acfc mov op,ax
 	0011ad04 farpush bx
 	0011ad0c setfuncargs 0x1
 	0011ad14 mov ax,0x69ef20
 	0011ad20 farcall ax
 	0011ad28 farsubsp 0x1
 	0011ad30 pop op
 	0011ad38 sourceline 0x6ff
 	0011ad40 push op
 	0011ad48 mov ax,0x2ba4bb
 	0011ad54 farpush ax
 	0011ad5c mov ax,0x138
 	0011ad68 farpush ax
 	0011ad70 mov ax,0x92
 	0011ad7c farpush ax
 	0011ad84 mov ax,0x0
 	0011ad90 farpush ax
 	0011ad98 mov mar,0x3cef20
 	0011ada4 mov ax,mar
 	0011adb0 mov op,ax
 	0011adb8 setfuncargs 0x4
 	0011adc0 mov ax,0x6aef20
 	0011adcc farcall ax
 	0011add4 farsubsp 0x4
 	0011addc pop op
 	0011ade4 sourceline 0x700
 	0011adec jmp 0x0011bfe0
		0011bfe0: UNCONDITIONAL_JUMP

	[0011adf4]
		0011ac10: CONDITIONAL_JUMP
 	0011adf4 sourceline 0x702
 	0011adfc mov mar,0x3cef20
 	0011ae08 mov ax,mar
 	0011ae14 push op
 	0011ae1c mov op,ax
 	0011ae24 setfuncargs 0x0
 	0011ae2c mov ax,0x89ef20
 	0011ae38 farcall ax
 	0011ae40 pop op
 	0011ae48 push ax
 	0011ae50 mov mar,0x94ef20
 	0011ae5c mov ax,mar
 	0011ae68 pop bx
 	0011ae70 cmpeq bx,ax
 	0011ae7c mov ax,bx
 	0011ae88 jz 0x0011afc8
		0011afc8: CONDITIONAL_JUMP
		0011ae90: FALL_THROUGH

	[0011ae90]
		0011adf4: FALL_THROUGH
 	0011ae90 sourceline 0x704
 	0011ae98 mov ax,0x1
 	0011aea4 mov bx,ax
 	0011aeb0 mov mar,0x3cef20
 	0011aebc mov ax,mar
 	0011aec8 push op
 	0011aed0 mov op,ax
 	0011aed8 farpush bx
 	0011aee0 setfuncargs 0x1
 	0011aee8 mov ax,0x69ef20
 	0011aef4 farcall ax
 	0011aefc farsubsp 0x1
 	0011af04 pop op
 	0011af0c sourceline 0x705
 	0011af14 push op
 	0011af1c mov ax,0x2b81dc
 	0011af28 farpush ax
 	0011af30 mov ax,0x138
 	0011af3c farpush ax
 	0011af44 mov ax,0x92
 	0011af50 farpush ax
 	0011af58 mov ax,0x0
 	0011af64 farpush ax
 	0011af6c mov mar,0x3cef20
 	0011af78 mov ax,mar
 	0011af84 mov op,ax
 	0011af8c setfuncargs 0x4
 	0011af94 mov ax,0x6aef20
 	0011afa0 farcall ax
 	0011afa8 farsubsp 0x4
 	0011afb0 pop op
 	0011afb8 sourceline 0x706
 	0011afc0 jmp 0x0011bfe0
		0011bfe0: UNCONDITIONAL_JUMP

	[0011afc8]
		0011adf4: CONDITIONAL_JUMP
 	0011afc8 sourceline 0x708
 	0011afd0 mov mar,0x3cef20
 	0011afdc mov ax,mar
 	0011afe8 push op
 	0011aff0 mov op,ax
 	0011aff8 setfuncargs 0x0
 	0011b000 mov ax,0x89ef20
 	0011b00c farcall ax
 	0011b014 pop op
 	0011b01c push ax
 	0011b024 mov mar,0x8cef20
 	0011b030 mov ax,mar
 	0011b03c pop bx
 	0011b044 cmpeq bx,ax
 	0011b050 mov ax,bx
 	0011b05c jnz 0x0011b118
		0011b118: CONDITIONAL_JUMP
		0011b064: FALL_THROUGH

	[0011b064]
		0011afc8: FALL_THROUGH
 	0011b064 push ax
 	0011b06c mov mar,0x3cef20
 	0011b078 mov ax,mar
 	0011b084 push op
 	0011b08c mov op,ax
 	0011b094 setfuncargs 0x0
 	0011b09c mov ax,0x89ef20
 	0011b0a8 farcall ax
 	0011b0b0 pop op
 	0011b0b8 push ax
 	0011b0c0 mov mar,0x8d6f20
 	0011b0cc mov ax,mar
 	0011b0d8 pop bx
 	0011b0e0 cmpeq bx,ax
 	0011b0ec mov ax,bx
 	0011b0f8 pop bx
 	0011b100 lor bx,ax
 	0011b10c mov ax,bx
		0011b118: FALL_THROUGH

	[0011b118]
		0011afc8: CONDITIONAL_JUMP
		0011b064: FALL_THROUGH
 	0011b118 jnz 0x0011b1d4
		0011b1d4: CONDITIONAL_JUMP
		0011b120: FALL_THROUGH

	[0011b120]
		0011b118: FALL_THROUGH
 	0011b120 push ax
 	0011b128 mov mar,0x3cef20
 	0011b134 mov ax,mar
 	0011b140 push op
 	0011b148 mov op,ax
 	0011b150 setfuncargs 0x0
 	0011b158 mov ax,0x89ef20
 	0011b164 farcall ax
 	0011b16c pop op
 	0011b174 push ax
 	0011b17c mov mar,0x8b6f20
 	0011b188 mov ax,mar
 	0011b194 pop bx
 	0011b19c cmpeq bx,ax
 	0011b1a8 mov ax,bx
 	0011b1b4 pop bx
 	0011b1bc lor bx,ax
 	0011b1c8 mov ax,bx
		0011b1d4: FALL_THROUGH

	[0011b1d4]
		0011b118: CONDITIONAL_JUMP
		0011b120: FALL_THROUGH
 	0011b1d4 jnz 0x0011b290
		0011b290: CONDITIONAL_JUMP
		0011b1dc: FALL_THROUGH

	[0011b1dc]
		0011b1d4: FALL_THROUGH
 	0011b1dc push ax
 	0011b1e4 mov mar,0x3cef20
 	0011b1f0 mov ax,mar
 	0011b1fc push op
 	0011b204 mov op,ax
 	0011b20c setfuncargs 0x0
 	0011b214 mov ax,0x89ef20
 	0011b220 farcall ax
 	0011b228 pop op
 	0011b230 push ax
 	0011b238 mov mar,0x8bef20
 	0011b244 mov ax,mar
 	0011b250 pop bx
 	0011b258 cmpeq bx,ax
 	0011b264 mov ax,bx
 	0011b270 pop bx
 	0011b278 lor bx,ax
 	0011b284 mov ax,bx
		0011b290: FALL_THROUGH

	[0011b290]
		0011b1d4: CONDITIONAL_JUMP
		0011b1dc: FALL_THROUGH
 	0011b290 jnz 0x0011b34c
		0011b34c: CONDITIONAL_JUMP
		0011b298: FALL_THROUGH

	[0011b298]
		0011b290: FALL_THROUGH
 	0011b298 push ax
 	0011b2a0 mov mar,0x3cef20
 	0011b2ac mov ax,mar
 	0011b2b8 push op
 	0011b2c0 mov op,ax
 	0011b2c8 setfuncargs 0x0
 	0011b2d0 mov ax,0x89ef20
 	0011b2dc farcall ax
 	0011b2e4 pop op
 	0011b2ec push ax
 	0011b2f4 mov mar,0x7def20
 	0011b300 mov ax,mar
 	0011b30c pop bx
 	0011b314 cmpeq bx,ax
 	0011b320 mov ax,bx
 	0011b32c pop bx
 	0011b334 lor bx,ax
 	0011b340 mov ax,bx
		0011b34c: FALL_THROUGH

	[0011b34c]
		0011b290: CONDITIONAL_JUMP
		0011b298: FALL_THROUGH
 	0011b34c jnz 0x0011b408
		0011b408: CONDITIONAL_JUMP
		0011b354: FALL_THROUGH

	[0011b354]
		0011b34c: FALL_THROUGH
 	0011b354 push ax
 	0011b35c mov mar,0x3cef20
 	0011b368 mov ax,mar
 	0011b374 push op
 	0011b37c mov op,ax
 	0011b384 setfuncargs 0x0
 	0011b38c mov ax,0x89ef20
 	0011b398 farcall ax
 	0011b3a0 pop op
 	0011b3a8 push ax
 	0011b3b0 mov mar,0x8def20
 	0011b3bc mov ax,mar
 	0011b3c8 pop bx
 	0011b3d0 cmpeq bx,ax
 	0011b3dc mov ax,bx
 	0011b3e8 pop bx
 	0011b3f0 lor bx,ax
 	0011b3fc mov ax,bx
		0011b408: FALL_THROUGH

	[0011b408]
		0011b34c: CONDITIONAL_JUMP
		0011b354: FALL_THROUGH
 	0011b408 jnz 0x0011b4c4
		0011b4c4: CONDITIONAL_JUMP
		0011b410: FALL_THROUGH

	[0011b410]
		0011b408: FALL_THROUGH
 	0011b410 push ax
 	0011b418 mov mar,0x3cef20
 	0011b424 mov ax,mar
 	0011b430 push op
 	0011b438 mov op,ax
 	0011b440 setfuncargs 0x0
 	0011b448 mov ax,0x89ef20
 	0011b454 farcall ax
 	0011b45c pop op
 	0011b464 push ax
 	0011b46c mov mar,0x8aef20
 	0011b478 mov ax,mar
 	0011b484 pop bx
 	0011b48c cmpeq bx,ax
 	0011b498 mov ax,bx
 	0011b4a4 pop bx
 	0011b4ac lor bx,ax
 	0011b4b8 mov ax,bx
		0011b4c4: FALL_THROUGH

	[0011b4c4]
		0011b408: CONDITIONAL_JUMP
		0011b410: FALL_THROUGH
 	0011b4c4 jnz 0x0011b580
		0011b580: CONDITIONAL_JUMP
		0011b4cc: FALL_THROUGH

	[0011b4cc]
		0011b4c4: FALL_THROUGH
 	0011b4cc push ax
 	0011b4d4 mov mar,0x3cef20
 	0011b4e0 mov ax,mar
 	0011b4ec push op
 	0011b4f4 mov op,ax
 	0011b4fc setfuncargs 0x0
 	0011b504 mov ax,0x89ef20
 	0011b510 farcall ax
 	0011b518 pop op
 	0011b520 push ax
 	0011b528 mov mar,0x8eef20
 	0011b534 mov ax,mar
 	0011b540 pop bx
 	0011b548 cmpeq bx,ax
 	0011b554 mov ax,bx
 	0011b560 pop bx
 	0011b568 lor bx,ax
 	0011b574 mov ax,bx
		0011b580: FALL_THROUGH

	[0011b580]
		0011b4c4: CONDITIONAL_JUMP
		0011b4cc: FALL_THROUGH
 	0011b580 jnz 0x0011b63c
		0011b63c: CONDITIONAL_JUMP
		0011b588: FALL_THROUGH

	[0011b588]
		0011b580: FALL_THROUGH
 	0011b588 push ax
 	0011b590 mov mar,0x3cef20
 	0011b59c mov ax,mar
 	0011b5a8 push op
 	0011b5b0 mov op,ax
 	0011b5b8 setfuncargs 0x0
 	0011b5c0 mov ax,0x89ef20
 	0011b5cc farcall ax
 	0011b5d4 pop op
 	0011b5dc push ax
 	0011b5e4 mov mar,0x8f6f20
 	0011b5f0 mov ax,mar
 	0011b5fc pop bx
 	0011b604 cmpeq bx,ax
 	0011b610 mov ax,bx
 	0011b61c pop bx
 	0011b624 lor bx,ax
 	0011b630 mov ax,bx
		0011b63c: FALL_THROUGH

	[0011b63c]
		0011b580: CONDITIONAL_JUMP
		0011b588: FALL_THROUGH
 	0011b63c jnz 0x0011b6f8
		0011b6f8: CONDITIONAL_JUMP
		0011b644: FALL_THROUGH

	[0011b644]
		0011b63c: FALL_THROUGH
 	0011b644 push ax
 	0011b64c mov mar,0x3cef20
 	0011b658 mov ax,mar
 	0011b664 push op
 	0011b66c mov op,ax
 	0011b674 setfuncargs 0x0
 	0011b67c mov ax,0x89ef20
 	0011b688 farcall ax
 	0011b690 pop op
 	0011b698 push ax
 	0011b6a0 mov mar,0x8fef20
 	0011b6ac mov ax,mar
 	0011b6b8 pop bx
 	0011b6c0 cmpeq bx,ax
 	0011b6cc mov ax,bx
 	0011b6d8 pop bx
 	0011b6e0 lor bx,ax
 	0011b6ec mov ax,bx
		0011b6f8: FALL_THROUGH

	[0011b6f8]
		0011b63c: CONDITIONAL_JUMP
		0011b644: FALL_THROUGH
 	0011b6f8 jnz 0x0011b7b4
		0011b7b4: CONDITIONAL_JUMP
		0011b700: FALL_THROUGH

	[0011b700]
		0011b6f8: FALL_THROUGH
 	0011b700 push ax
 	0011b708 mov mar,0x3cef20
 	0011b714 mov ax,mar
 	0011b720 push op
 	0011b728 mov op,ax
 	0011b730 setfuncargs 0x0
 	0011b738 mov ax,0x89ef20
 	0011b744 farcall ax
 	0011b74c pop op
 	0011b754 push ax
 	0011b75c mov mar,0x976f20
 	0011b768 mov ax,mar
 	0011b774 pop bx
 	0011b77c cmpeq bx,ax
 	0011b788 mov ax,bx
 	0011b794 pop bx
 	0011b79c lor bx,ax
 	0011b7a8 mov ax,bx
		0011b7b4: FALL_THROUGH

	[0011b7b4]
		0011b6f8: CONDITIONAL_JUMP
		0011b700: FALL_THROUGH
 	0011b7b4 jnz 0x0011b870
		0011b870: CONDITIONAL_JUMP
		0011b7bc: FALL_THROUGH

	[0011b7bc]
		0011b7b4: FALL_THROUGH
 	0011b7bc push ax
 	0011b7c4 mov mar,0x3cef20
 	0011b7d0 mov ax,mar
 	0011b7dc push op
 	0011b7e4 mov op,ax
 	0011b7ec setfuncargs 0x0
 	0011b7f4 mov ax,0x89ef20
 	0011b800 farcall ax
 	0011b808 pop op
 	0011b810 push ax
 	0011b818 mov mar,0x846f20
 	0011b824 mov ax,mar
 	0011b830 pop bx
 	0011b838 cmpeq bx,ax
 	0011b844 mov ax,bx
 	0011b850 pop bx
 	0011b858 lor bx,ax
 	0011b864 mov ax,bx
		0011b870: FALL_THROUGH

	[0011b870]
		0011b7b4: CONDITIONAL_JUMP
		0011b7bc: FALL_THROUGH
 	0011b870 jnz 0x0011b92c
		0011b92c: CONDITIONAL_JUMP
		0011b878: FALL_THROUGH

	[0011b878]
		0011b870: FALL_THROUGH
 	0011b878 push ax
 	0011b880 mov mar,0x3cef20
 	0011b88c mov ax,mar
 	0011b898 push op
 	0011b8a0 mov op,ax
 	0011b8a8 setfuncargs 0x0
 	0011b8b0 mov ax,0x89ef20
 	0011b8bc farcall ax
 	0011b8c4 pop op
 	0011b8cc push ax
 	0011b8d4 mov mar,0x90ef20
 	0011b8e0 mov ax,mar
 	0011b8ec pop bx
 	0011b8f4 cmpeq bx,ax
 	0011b900 mov ax,bx
 	0011b90c pop bx
 	0011b914 lor bx,ax
 	0011b920 mov ax,bx
		0011b92c: FALL_THROUGH

	[0011b92c]
		0011b870: CONDITIONAL_JUMP
		0011b878: FALL_THROUGH
 	0011b92c jnz 0x0011b9e8
		0011b9e8: CONDITIONAL_JUMP
		0011b934: FALL_THROUGH

	[0011b934]
		0011b92c: FALL_THROUGH
 	0011b934 push ax
 	0011b93c mov mar,0x3cef20
 	0011b948 mov ax,mar
 	0011b954 push op
 	0011b95c mov op,ax
 	0011b964 setfuncargs 0x0
 	0011b96c mov ax,0x89ef20
 	0011b978 farcall ax
 	0011b980 pop op
 	0011b988 push ax
 	0011b990 mov mar,0x916f20
 	0011b99c mov ax,mar
 	0011b9a8 pop bx
 	0011b9b0 cmpeq bx,ax
 	0011b9bc mov ax,bx
 	0011b9c8 pop bx
 	0011b9d0 lor bx,ax
 	0011b9dc mov ax,bx
		0011b9e8: FALL_THROUGH

	[0011b9e8]
		0011b92c: CONDITIONAL_JUMP
		0011b934: FALL_THROUGH
 	0011b9e8 jnz 0x0011baa4
		0011baa4: CONDITIONAL_JUMP
		0011b9f0: FALL_THROUGH

	[0011b9f0]
		0011b9e8: FALL_THROUGH
 	0011b9f0 push ax
 	0011b9f8 mov mar,0x3cef20
 	0011ba04 mov ax,mar
 	0011ba10 push op
 	0011ba18 mov op,ax
 	0011ba20 setfuncargs 0x0
 	0011ba28 mov ax,0x89ef20
 	0011ba34 farcall ax
 	0011ba3c pop op
 	0011ba44 push ax
 	0011ba4c mov mar,0x926f20
 	0011ba58 mov ax,mar
 	0011ba64 pop bx
 	0011ba6c cmpeq bx,ax
 	0011ba78 mov ax,bx
 	0011ba84 pop bx
 	0011ba8c lor bx,ax
 	0011ba98 mov ax,bx
		0011baa4: FALL_THROUGH

	[0011baa4]
		0011b9e8: CONDITIONAL_JUMP
		0011b9f0: FALL_THROUGH
 	0011baa4 jnz 0x0011bb60
		0011bb60: CONDITIONAL_JUMP
		0011baac: FALL_THROUGH

	[0011baac]
		0011baa4: FALL_THROUGH
 	0011baac push ax
 	0011bab4 mov mar,0x3cef20
 	0011bac0 mov ax,mar
 	0011bacc push op
 	0011bad4 mov op,ax
 	0011badc setfuncargs 0x0
 	0011bae4 mov ax,0x89ef20
 	0011baf0 farcall ax
 	0011baf8 pop op
 	0011bb00 push ax
 	0011bb08 mov mar,0x936f20
 	0011bb14 mov ax,mar
 	0011bb20 pop bx
 	0011bb28 cmpeq bx,ax
 	0011bb34 mov ax,bx
 	0011bb40 pop bx
 	0011bb48 lor bx,ax
 	0011bb54 mov ax,bx
		0011bb60: FALL_THROUGH

	[0011bb60]
		0011baa4: CONDITIONAL_JUMP
		0011baac: FALL_THROUGH
 	0011bb60 jnz 0x0011bc1c
		0011bc1c: CONDITIONAL_JUMP
		0011bb68: FALL_THROUGH

	[0011bb68]
		0011bb60: FALL_THROUGH
 	0011bb68 push ax
 	0011bb70 mov mar,0x3cef20
 	0011bb7c mov ax,mar
 	0011bb88 push op
 	0011bb90 mov op,ax
 	0011bb98 setfuncargs 0x0
 	0011bba0 mov ax,0x89ef20
 	0011bbac farcall ax
 	0011bbb4 pop op
 	0011bbbc push ax
 	0011bbc4 mov mar,0x956f20
 	0011bbd0 mov ax,mar
 	0011bbdc pop bx
 	0011bbe4 cmpeq bx,ax
 	0011bbf0 mov ax,bx
 	0011bbfc pop bx
 	0011bc04 lor bx,ax
 	0011bc10 mov ax,bx
		0011bc1c: FALL_THROUGH

	[0011bc1c]
		0011bb60: CONDITIONAL_JUMP
		0011bb68: FALL_THROUGH
 	0011bc1c jnz 0x0011bcd8
		0011bcd8: CONDITIONAL_JUMP
		0011bc24: FALL_THROUGH

	[0011bc24]
		0011bc1c: FALL_THROUGH
 	0011bc24 push ax
 	0011bc2c mov mar,0x3cef20
 	0011bc38 mov ax,mar
 	0011bc44 push op
 	0011bc4c mov op,ax
 	0011bc54 setfuncargs 0x0
 	0011bc5c mov ax,0x89ef20
 	0011bc68 farcall ax
 	0011bc70 pop op
 	0011bc78 push ax
 	0011bc80 mov mar,0x95ef20
 	0011bc8c mov ax,mar
 	0011bc98 pop bx
 	0011bca0 cmpeq bx,ax
 	0011bcac mov ax,bx
 	0011bcb8 pop bx
 	0011bcc0 lor bx,ax
 	0011bccc mov ax,bx
		0011bcd8: FALL_THROUGH

	[0011bcd8]
		0011bc1c: CONDITIONAL_JUMP
		0011bc24: FALL_THROUGH
 	0011bcd8 jnz 0x0011bd94
		0011bd94: CONDITIONAL_JUMP
		0011bce0: FALL_THROUGH

	[0011bce0]
		0011bcd8: FALL_THROUGH
 	0011bce0 push ax
 	0011bce8 mov mar,0x3cef20
 	0011bcf4 mov ax,mar
 	0011bd00 push op
 	0011bd08 mov op,ax
 	0011bd10 setfuncargs 0x0
 	0011bd18 mov ax,0x89ef20
 	0011bd24 farcall ax
 	0011bd2c pop op
 	0011bd34 push ax
 	0011bd3c mov mar,0x88ef20
 	0011bd48 mov ax,mar
 	0011bd54 pop bx
 	0011bd5c cmpeq bx,ax
 	0011bd68 mov ax,bx
 	0011bd74 pop bx
 	0011bd7c lor bx,ax
 	0011bd88 mov ax,bx
		0011bd94: FALL_THROUGH

	[0011bd94]
		0011bcd8: CONDITIONAL_JUMP
		0011bce0: FALL_THROUGH
 	0011bd94 jnz 0x0011be50
		0011be50: CONDITIONAL_JUMP
		0011bd9c: FALL_THROUGH

	[0011bd9c]
		0011bd94: FALL_THROUGH
 	0011bd9c push ax
 	0011bda4 mov mar,0x3cef20
 	0011bdb0 mov ax,mar
 	0011bdbc push op
 	0011bdc4 mov op,ax
 	0011bdcc setfuncargs 0x0
 	0011bdd4 mov ax,0x89ef20
 	0011bde0 farcall ax
 	0011bde8 pop op
 	0011bdf0 push ax
 	0011bdf8 mov mar,0x966f20
 	0011be04 mov ax,mar
 	0011be10 pop bx
 	0011be18 cmpeq bx,ax
 	0011be24 mov ax,bx
 	0011be30 pop bx
 	0011be38 lor bx,ax
 	0011be44 mov ax,bx
		0011be50: FALL_THROUGH

	[0011be50]
		0011bd94: CONDITIONAL_JUMP
		0011bd9c: FALL_THROUGH
 	0011be50 jz 0x0011bf90
		0011bf90: CONDITIONAL_JUMP
		0011be58: FALL_THROUGH

	[0011be58]
		0011be50: FALL_THROUGH
 	0011be58 sourceline 0x70f
 	0011be60 mov ax,0x1
 	0011be6c mov bx,ax
 	0011be78 mov mar,0x3cef20
 	0011be84 mov ax,mar
 	0011be90 push op
 	0011be98 mov op,ax
 	0011bea0 farpush bx
 	0011bea8 setfuncargs 0x1
 	0011beb0 mov ax,0x69ef20
 	0011bebc farcall ax
 	0011bec4 farsubsp 0x1
 	0011becc pop op
 	0011bed4 sourceline 0x710
 	0011bedc push op
 	0011bee4 mov ax,0x2b7a89
 	0011bef0 farpush ax
 	0011bef8 mov ax,0x138
 	0011bf04 farpush ax
 	0011bf0c mov ax,0x92
 	0011bf18 farpush ax
 	0011bf20 mov ax,0x0
 	0011bf2c farpush ax
 	0011bf34 mov mar,0x3cef20
 	0011bf40 mov ax,mar
 	0011bf4c mov op,ax
 	0011bf54 setfuncargs 0x4
 	0011bf5c mov ax,0x6aef20
 	0011bf68 farcall ax
 	0011bf70 farsubsp 0x4
 	0011bf78 pop op
 	0011bf80 sourceline 0x711
 	0011bf88 jmp 0x0011bfe0
		0011bfe0: UNCONDITIONAL_JUMP

	[0011bf90]
		0011be50: CONDITIONAL_JUMP
 	0011bf90 sourceline 0x713
 	0011bf98 mov ax,0x3
 	0011bfa4 push ax
 	0011bfac mov ax,0x5
 	0011bfb8 push ax
 	0011bfc0 mov ax,0x10ae5c
 	0011bfcc call ax
 	0011bfd4 sub sp,0x8
		0011bfe0: FALL_THROUGH

	[0011bfe0]
		0011acbc: UNCONDITIONAL_JUMP
		0011ae90: UNCONDITIONAL_JUMP
		0011be58: UNCONDITIONAL_JUMP
		0011bf90: FALL_THROUGH
 	0011bfe0 sourceline 0x714
 	0011bfe8 mov ax,0x0
 	0011bff4 ret

iLetter_UseInv$0:
	[0011bff8]
 	0011bff8 sourceline 0x719
 	0011c000 thisaddr
 	0011c008 sourceline 0x71a
*	0011c010 mov mar,0x3cef20
 	0011c01c mov ax,mar
 	0011c028 push op
 	0011c030 mov op,ax
 	0011c038 setfuncargs 0x0
 	0011c040 mov ax,0x89ef20
 	0011c04c farcall ax
 	0011c054 pop op
 	0011c05c push ax
 	0011c064 mov mar,0x7def20
 	0011c070 mov ax,mar
 	0011c07c pop bx
 	0011c084 cmpeq bx,ax
 	0011c090 mov ax,bx
 	0011c09c jnz 0x0011c158
		0011c158: CONDITIONAL_JUMP
		0011c0a4: FALL_THROUGH

	[0011c0a4]
		0011bff8: FALL_THROUGH
 	0011c0a4 push ax
 	0011c0ac mov mar,0x3cef20
 	0011c0b8 mov ax,mar
 	0011c0c4 push op
 	0011c0cc mov op,ax
 	0011c0d4 setfuncargs 0x0
 	0011c0dc mov ax,0x89ef20
 	0011c0e8 farcall ax
 	0011c0f0 pop op
 	0011c0f8 push ax
 	0011c100 mov mar,0x8d6f20
 	0011c10c mov ax,mar
 	0011c118 pop bx
 	0011c120 cmpeq bx,ax
 	0011c12c mov ax,bx
 	0011c138 pop bx
 	0011c140 lor bx,ax
 	0011c14c mov ax,bx
		0011c158: FALL_THROUGH

	[0011c158]
		0011bff8: CONDITIONAL_JUMP
		0011c0a4: FALL_THROUGH
 	0011c158 jnz 0x0011c214
		0011c214: CONDITIONAL_JUMP
		0011c160: FALL_THROUGH

	[0011c160]
		0011c158: FALL_THROUGH
 	0011c160 push ax
 	0011c168 mov mar,0x3cef20
 	0011c174 mov ax,mar
 	0011c180 push op
 	0011c188 mov op,ax
 	0011c190 setfuncargs 0x0
 	0011c198 mov ax,0x89ef20
 	0011c1a4 farcall ax
 	0011c1ac pop op
 	0011c1b4 push ax
 	0011c1bc mov mar,0x8eef20
 	0011c1c8 mov ax,mar
 	0011c1d4 pop bx
 	0011c1dc cmpeq bx,ax
 	0011c1e8 mov ax,bx
 	0011c1f4 pop bx
 	0011c1fc lor bx,ax
 	0011c208 mov ax,bx
		0011c214: FALL_THROUGH

	[0011c214]
		0011c158: CONDITIONAL_JUMP
		0011c160: FALL_THROUGH
 	0011c214 jnz 0x0011c2d0
		0011c2d0: CONDITIONAL_JUMP
		0011c21c: FALL_THROUGH

	[0011c21c]
		0011c214: FALL_THROUGH
 	0011c21c push ax
 	0011c224 mov mar,0x3cef20
 	0011c230 mov ax,mar
 	0011c23c push op
 	0011c244 mov op,ax
 	0011c24c setfuncargs 0x0
 	0011c254 mov ax,0x89ef20
 	0011c260 farcall ax
 	0011c268 pop op
 	0011c270 push ax
 	0011c278 mov mar,0x8f6f20
 	0011c284 mov ax,mar
 	0011c290 pop bx
 	0011c298 cmpeq bx,ax
 	0011c2a4 mov ax,bx
 	0011c2b0 pop bx
 	0011c2b8 lor bx,ax
 	0011c2c4 mov ax,bx
		0011c2d0: FALL_THROUGH

	[0011c2d0]
		0011c214: CONDITIONAL_JUMP
		0011c21c: FALL_THROUGH
 	0011c2d0 jnz 0x0011c38c
		0011c38c: CONDITIONAL_JUMP
		0011c2d8: FALL_THROUGH

	[0011c2d8]
		0011c2d0: FALL_THROUGH
 	0011c2d8 push ax
 	0011c2e0 mov mar,0x3cef20
 	0011c2ec mov ax,mar
 	0011c2f8 push op
 	0011c300 mov op,ax
 	0011c308 setfuncargs 0x0
 	0011c310 mov ax,0x89ef20
 	0011c31c farcall ax
 	0011c324 pop op
 	0011c32c push ax
 	0011c334 mov mar,0x90ef20
 	0011c340 mov ax,mar
 	0011c34c pop bx
 	0011c354 cmpeq bx,ax
 	0011c360 mov ax,bx
 	0011c36c pop bx
 	0011c374 lor bx,ax
 	0011c380 mov ax,bx
		0011c38c: FALL_THROUGH

	[0011c38c]
		0011c2d0: CONDITIONAL_JUMP
		0011c2d8: FALL_THROUGH
 	0011c38c jnz 0x0011c448
		0011c448: CONDITIONAL_JUMP
		0011c394: FALL_THROUGH

	[0011c394]
		0011c38c: FALL_THROUGH
 	0011c394 push ax
 	0011c39c mov mar,0x3cef20
 	0011c3a8 mov ax,mar
 	0011c3b4 push op
 	0011c3bc mov op,ax
 	0011c3c4 setfuncargs 0x0
 	0011c3cc mov ax,0x89ef20
 	0011c3d8 farcall ax
 	0011c3e0 pop op
 	0011c3e8 push ax
 	0011c3f0 mov mar,0x926f20
 	0011c3fc mov ax,mar
 	0011c408 pop bx
 	0011c410 cmpeq bx,ax
 	0011c41c mov ax,bx
 	0011c428 pop bx
 	0011c430 lor bx,ax
 	0011c43c mov ax,bx
		0011c448: FALL_THROUGH

	[0011c448]
		0011c38c: CONDITIONAL_JUMP
		0011c394: FALL_THROUGH
 	0011c448 jnz 0x0011c504
		0011c504: CONDITIONAL_JUMP
		0011c450: FALL_THROUGH

	[0011c450]
		0011c448: FALL_THROUGH
 	0011c450 push ax
 	0011c458 mov mar,0x3cef20
 	0011c464 mov ax,mar
 	0011c470 push op
 	0011c478 mov op,ax
 	0011c480 setfuncargs 0x0
 	0011c488 mov ax,0x89ef20
 	0011c494 farcall ax
 	0011c49c pop op
 	0011c4a4 push ax
 	0011c4ac mov mar,0x936f20
 	0011c4b8 mov ax,mar
 	0011c4c4 pop bx
 	0011c4cc cmpeq bx,ax
 	0011c4d8 mov ax,bx
 	0011c4e4 pop bx
 	0011c4ec lor bx,ax
 	0011c4f8 mov ax,bx
		0011c504: FALL_THROUGH

	[0011c504]
		0011c448: CONDITIONAL_JUMP
		0011c450: FALL_THROUGH
 	0011c504 jnz 0x0011c5c0
		0011c5c0: CONDITIONAL_JUMP
		0011c50c: FALL_THROUGH

	[0011c50c]
		0011c504: FALL_THROUGH
 	0011c50c push ax
 	0011c514 mov mar,0x3cef20
 	0011c520 mov ax,mar
 	0011c52c push op
 	0011c534 mov op,ax
 	0011c53c setfuncargs 0x0
 	0011c544 mov ax,0x89ef20
 	0011c550 farcall ax
 	0011c558 pop op
 	0011c560 push ax
 	0011c568 mov mar,0x95ef20
 	0011c574 mov ax,mar
 	0011c580 pop bx
 	0011c588 cmpeq bx,ax
 	0011c594 mov ax,bx
 	0011c5a0 pop bx
 	0011c5a8 lor bx,ax
 	0011c5b4 mov ax,bx
		0011c5c0: FALL_THROUGH

	[0011c5c0]
		0011c504: CONDITIONAL_JUMP
		0011c50c: FALL_THROUGH
 	0011c5c0 jz 0x0011c700
		0011c700: CONDITIONAL_JUMP
		0011c5c8: FALL_THROUGH

	[0011c5c8]
		0011c5c0: FALL_THROUGH
 	0011c5c8 sourceline 0x71e
 	0011c5d0 mov ax,0x1
 	0011c5dc mov bx,ax
 	0011c5e8 mov mar,0x3cef20
 	0011c5f4 mov ax,mar
 	0011c600 push op
 	0011c608 mov op,ax
 	0011c610 farpush bx
 	0011c618 setfuncargs 0x1
 	0011c620 mov ax,0x69ef20
 	0011c62c farcall ax
 	0011c634 farsubsp 0x1
 	0011c63c pop op
 	0011c644 sourceline 0x71f
 	0011c64c push op
 	0011c654 mov ax,0x2b9adb
 	0011c660 farpush ax
 	0011c668 mov ax,0x138
 	0011c674 farpush ax
 	0011c67c mov ax,0x92
 	0011c688 farpush ax
 	0011c690 mov ax,0x0
 	0011c69c farpush ax
 	0011c6a4 mov mar,0x3cef20
 	0011c6b0 mov ax,mar
 	0011c6bc mov op,ax
 	0011c6c4 setfuncargs 0x4
 	0011c6cc mov ax,0x6aef20
 	0011c6d8 farcall ax
 	0011c6e0 farsubsp 0x4
 	0011c6e8 pop op
 	0011c6f0 sourceline 0x720
 	0011c6f8 jmp 0x0011caf8
		0011caf8: UNCONDITIONAL_JUMP

	[0011c700]
		0011c5c0: CONDITIONAL_JUMP
 	0011c700 sourceline 0x722
 	0011c708 mov mar,0x3cef20
 	0011c714 mov ax,mar
 	0011c720 push op
 	0011c728 mov op,ax
 	0011c730 setfuncargs 0x0
 	0011c738 mov ax,0x89ef20
 	0011c744 farcall ax
 	0011c74c pop op
 	0011c754 push ax
 	0011c75c mov mar,0x8bef20
 	0011c768 mov ax,mar
 	0011c774 pop bx
 	0011c77c cmpeq bx,ax
 	0011c788 mov ax,bx
 	0011c794 jz 0x0011c8d4
		0011c8d4: CONDITIONAL_JUMP
		0011c79c: FALL_THROUGH

	[0011c79c]
		0011c700: FALL_THROUGH
 	0011c79c sourceline 0x724
 	0011c7a4 mov ax,0x1
 	0011c7b0 mov bx,ax
 	0011c7bc mov mar,0x3cef20
 	0011c7c8 mov ax,mar
 	0011c7d4 push op
 	0011c7dc mov op,ax
 	0011c7e4 farpush bx
 	0011c7ec setfuncargs 0x1
 	0011c7f4 mov ax,0x69ef20
 	0011c800 farcall ax
 	0011c808 farsubsp 0x1
 	0011c810 pop op
 	0011c818 sourceline 0x725
 	0011c820 push op
 	0011c828 mov ax,0x2b8b2a
 	0011c834 farpush ax
 	0011c83c mov ax,0x138
 	0011c848 farpush ax
 	0011c850 mov ax,0x92
 	0011c85c farpush ax
 	0011c864 mov ax,0x0
 	0011c870 farpush ax
 	0011c878 mov mar,0x3cef20
 	0011c884 mov ax,mar
 	0011c890 mov op,ax
 	0011c898 setfuncargs 0x4
 	0011c8a0 mov ax,0x6aef20
 	0011c8ac farcall ax
 	0011c8b4 farsubsp 0x4
 	0011c8bc pop op
 	0011c8c4 sourceline 0x726
 	0011c8cc jmp 0x0011caf8
		0011caf8: UNCONDITIONAL_JUMP

	[0011c8d4]
		0011c700: CONDITIONAL_JUMP
 	0011c8d4 sourceline 0x728
 	0011c8dc mov mar,0x3cef20
 	0011c8e8 mov ax,mar
 	0011c8f4 push op
 	0011c8fc mov op,ax
 	0011c904 setfuncargs 0x0
 	0011c90c mov ax,0x89ef20
 	0011c918 farcall ax
 	0011c920 pop op
 	0011c928 push ax
 	0011c930 mov mar,0x8b6f20
 	0011c93c mov ax,mar
 	0011c948 pop bx
 	0011c950 cmpeq bx,ax
 	0011c95c mov ax,bx
 	0011c968 jz 0x0011caa8
		0011caa8: CONDITIONAL_JUMP
		0011c970: FALL_THROUGH

	[0011c970]
		0011c8d4: FALL_THROUGH
 	0011c970 sourceline 0x72a
 	0011c978 mov ax,0x1
 	0011c984 mov bx,ax
 	0011c990 mov mar,0x3cef20
 	0011c99c mov ax,mar
 	0011c9a8 push op
 	0011c9b0 mov op,ax
 	0011c9b8 farpush bx
 	0011c9c0 setfuncargs 0x1
 	0011c9c8 mov ax,0x69ef20
 	0011c9d4 farcall ax
 	0011c9dc farsubsp 0x1
 	0011c9e4 pop op
 	0011c9ec sourceline 0x72b
 	0011c9f4 push op
 	0011c9fc mov ax,0x2ba036
 	0011ca08 farpush ax
 	0011ca10 mov ax,0x138
 	0011ca1c farpush ax
 	0011ca24 mov ax,0x92
 	0011ca30 farpush ax
 	0011ca38 mov ax,0x0
 	0011ca44 farpush ax
 	0011ca4c mov mar,0x3cef20
 	0011ca58 mov ax,mar
 	0011ca64 mov op,ax
 	0011ca6c setfuncargs 0x4
 	0011ca74 mov ax,0x6aef20
 	0011ca80 farcall ax
 	0011ca88 farsubsp 0x4
 	0011ca90 pop op
 	0011ca98 sourceline 0x72c
 	0011caa0 jmp 0x0011caf8
		0011caf8: UNCONDITIONAL_JUMP

	[0011caa8]
		0011c8d4: CONDITIONAL_JUMP
 	0011caa8 sourceline 0x72e
 	0011cab0 mov ax,0x3
 	0011cabc push ax
 	0011cac4 mov ax,0x5
 	0011cad0 push ax
 	0011cad8 mov ax,0x10ae5c
 	0011cae4 call ax
 	0011caec sub sp,0x8
		0011caf8: FALL_THROUGH

	[0011caf8]
		0011c5c8: UNCONDITIONAL_JUMP
		0011c79c: UNCONDITIONAL_JUMP
		0011c970: UNCONDITIONAL_JUMP
		0011caa8: FALL_THROUGH
 	0011caf8 sourceline 0x72f
 	0011cb00 mov ax,0x0
 	0011cb0c ret

iLocalCurrency_UseInv$0:
	[0011cb10]
 	0011cb10 sourceline 0x735
 	0011cb18 thisaddr
 	0011cb20 sourceline 0x736
*	0011cb28 mov mar,0x3cef20
 	0011cb34 mov ax,mar
 	0011cb40 push op
 	0011cb48 mov op,ax
 	0011cb50 setfuncargs 0x0
 	0011cb58 mov ax,0x89ef20
 	0011cb64 farcall ax
 	0011cb6c pop op
 	0011cb74 push ax
 	0011cb7c mov mar,0x93ef20
 	0011cb88 mov ax,mar
 	0011cb94 pop bx
 	0011cb9c cmpeq bx,ax
 	0011cba8 mov ax,bx
 	0011cbb4 jz 0x0011ccf4
		0011ccf4: CONDITIONAL_JUMP
		0011cbbc: FALL_THROUGH

	[0011cbbc]
		0011cb10: FALL_THROUGH
 	0011cbbc sourceline 0x738
 	0011cbc4 mov ax,0x1
 	0011cbd0 mov bx,ax
 	0011cbdc mov mar,0x3cef20
 	0011cbe8 mov ax,mar
 	0011cbf4 push op
 	0011cbfc mov op,ax
 	0011cc04 farpush bx
 	0011cc0c setfuncargs 0x1
 	0011cc14 mov ax,0x69ef20
 	0011cc20 farcall ax
 	0011cc28 farsubsp 0x1
 	0011cc30 pop op
 	0011cc38 sourceline 0x739
 	0011cc40 push op
 	0011cc48 mov ax,0x2b9eaf
 	0011cc54 farpush ax
 	0011cc5c mov ax,0x138
 	0011cc68 farpush ax
 	0011cc70 mov ax,0x92
 	0011cc7c farpush ax
 	0011cc84 mov ax,0x0
 	0011cc90 farpush ax
 	0011cc98 mov mar,0x3cef20
 	0011cca4 mov ax,mar
 	0011ccb0 mov op,ax
 	0011ccb8 setfuncargs 0x4
 	0011ccc0 mov ax,0x6aef20
 	0011cccc farcall ax
 	0011ccd4 farsubsp 0x4
 	0011ccdc pop op
 	0011cce4 sourceline 0x73a
 	0011ccec jmp 0x0011d37c
		0011d37c: UNCONDITIONAL_JUMP

	[0011ccf4]
		0011cb10: CONDITIONAL_JUMP
 	0011ccf4 sourceline 0x73c
 	0011ccfc mov mar,0x3cef20
 	0011cd08 mov ax,mar
 	0011cd14 push op
 	0011cd1c mov op,ax
 	0011cd24 setfuncargs 0x0
 	0011cd2c mov ax,0x89ef20
 	0011cd38 farcall ax
 	0011cd40 pop op
 	0011cd48 push ax
 	0011cd50 mov mar,0x886f20
 	0011cd5c mov ax,mar
 	0011cd68 pop bx
 	0011cd70 cmpeq bx,ax
 	0011cd7c mov ax,bx
 	0011cd88 jz 0x0011cec8
		0011cec8: CONDITIONAL_JUMP
		0011cd90: FALL_THROUGH

	[0011cd90]
		0011ccf4: FALL_THROUGH
 	0011cd90 sourceline 0x73e
 	0011cd98 mov ax,0x1
 	0011cda4 mov bx,ax
 	0011cdb0 mov mar,0x3cef20
 	0011cdbc mov ax,mar
 	0011cdc8 push op
 	0011cdd0 mov op,ax
 	0011cdd8 farpush bx
 	0011cde0 setfuncargs 0x1
 	0011cde8 mov ax,0x69ef20
 	0011cdf4 farcall ax
 	0011cdfc farsubsp 0x1
 	0011ce04 pop op
 	0011ce0c sourceline 0x73f
 	0011ce14 push op
 	0011ce1c mov ax,0x2b9adb
 	0011ce28 farpush ax
 	0011ce30 mov ax,0x138
 	0011ce3c farpush ax
 	0011ce44 mov ax,0x92
 	0011ce50 farpush ax
 	0011ce58 mov ax,0x0
 	0011ce64 farpush ax
 	0011ce6c mov mar,0x3cef20
 	0011ce78 mov ax,mar
 	0011ce84 mov op,ax
 	0011ce8c setfuncargs 0x4
 	0011ce94 mov ax,0x6aef20
 	0011cea0 farcall ax
 	0011cea8 farsubsp 0x4
 	0011ceb0 pop op
 	0011ceb8 sourceline 0x740
 	0011cec0 jmp 0x0011d37c
		0011d37c: UNCONDITIONAL_JUMP

	[0011cec8]
		0011ccf4: CONDITIONAL_JUMP
 	0011cec8 sourceline 0x742
 	0011ced0 mov mar,0x3cef20
 	0011cedc mov ax,mar
 	0011cee8 push op
 	0011cef0 mov op,ax
 	0011cef8 setfuncargs 0x0
 	0011cf00 mov ax,0x89ef20
 	0011cf0c farcall ax
 	0011cf14 pop op
 	0011cf1c push ax
 	0011cf24 mov mar,0x8d6f20
 	0011cf30 mov ax,mar
 	0011cf3c pop bx
 	0011cf44 cmpeq bx,ax
 	0011cf50 mov ax,bx
 	0011cf5c jz 0x0011d09c
		0011d09c: CONDITIONAL_JUMP
		0011cf64: FALL_THROUGH

	[0011cf64]
		0011cec8: FALL_THROUGH
 	0011cf64 sourceline 0x744
 	0011cf6c mov ax,0x1
 	0011cf78 mov bx,ax
 	0011cf84 mov mar,0x3cef20
 	0011cf90 mov ax,mar
 	0011cf9c push op
 	0011cfa4 mov op,ax
 	0011cfac farpush bx
 	0011cfb4 setfuncargs 0x1
 	0011cfbc mov ax,0x69ef20
 	0011cfc8 farcall ax
 	0011cfd0 farsubsp 0x1
 	0011cfd8 pop op
 	0011cfe0 sourceline 0x745
 	0011cfe8 push op
 	0011cff0 mov ax,0x2b9e85
 	0011cffc farpush ax
 	0011d004 mov ax,0x138
 	0011d010 farpush ax
 	0011d018 mov ax,0x92
 	0011d024 farpush ax
 	0011d02c mov ax,0x0
 	0011d038 farpush ax
 	0011d040 mov mar,0x3cef20
 	0011d04c mov ax,mar
 	0011d058 mov op,ax
 	0011d060 setfuncargs 0x4
 	0011d068 mov ax,0x6aef20
 	0011d074 farcall ax
 	0011d07c farsubsp 0x4
 	0011d084 pop op
 	0011d08c sourceline 0x746
 	0011d094 jmp 0x0011d37c
		0011d37c: UNCONDITIONAL_JUMP

	[0011d09c]
		0011cec8: CONDITIONAL_JUMP
 	0011d09c sourceline 0x748
 	0011d0a4 mov mar,0x3cef20
 	0011d0b0 mov ax,mar
 	0011d0bc push op
 	0011d0c4 mov op,ax
 	0011d0cc setfuncargs 0x0
 	0011d0d4 mov ax,0x89ef20
 	0011d0e0 farcall ax
 	0011d0e8 pop op
 	0011d0f0 push ax
 	0011d0f8 mov mar,0x8b6f20
 	0011d104 mov ax,mar
 	0011d110 pop bx
 	0011d118 cmpeq bx,ax
 	0011d124 mov ax,bx
 	0011d130 jnz 0x0011d1ec
		0011d1ec: CONDITIONAL_JUMP
		0011d138: FALL_THROUGH

	[0011d138]
		0011d09c: FALL_THROUGH
 	0011d138 push ax
 	0011d140 mov mar,0x3cef20
 	0011d14c mov ax,mar
 	0011d158 push op
 	0011d160 mov op,ax
 	0011d168 setfuncargs 0x0
 	0011d170 mov ax,0x89ef20
 	0011d17c farcall ax
 	0011d184 pop op
 	0011d18c push ax
 	0011d194 mov mar,0x8bef20
 	0011d1a0 mov ax,mar
 	0011d1ac pop bx
 	0011d1b4 cmpeq bx,ax
 	0011d1c0 mov ax,bx
 	0011d1cc pop bx
 	0011d1d4 lor bx,ax
 	0011d1e0 mov ax,bx
		0011d1ec: FALL_THROUGH

	[0011d1ec]
		0011d09c: CONDITIONAL_JUMP
		0011d138: FALL_THROUGH
 	0011d1ec jz 0x0011d32c
		0011d32c: CONDITIONAL_JUMP
		0011d1f4: FALL_THROUGH

	[0011d1f4]
		0011d1ec: FALL_THROUGH
 	0011d1f4 sourceline 0x74a
 	0011d1fc mov ax,0x1
 	0011d208 mov bx,ax
 	0011d214 mov mar,0x3cef20
 	0011d220 mov ax,mar
 	0011d22c push op
 	0011d234 mov op,ax
 	0011d23c farpush bx
 	0011d244 setfuncargs 0x1
 	0011d24c mov ax,0x69ef20
 	0011d258 farcall ax
 	0011d260 farsubsp 0x1
 	0011d268 pop op
 	0011d270 sourceline 0x74b
 	0011d278 push op
 	0011d280 mov ax,0x2b7c00
 	0011d28c farpush ax
 	0011d294 mov ax,0x138
 	0011d2a0 farpush ax
 	0011d2a8 mov ax,0x92
 	0011d2b4 farpush ax
 	0011d2bc mov ax,0x0
 	0011d2c8 farpush ax
 	0011d2d0 mov mar,0x3cef20
 	0011d2dc mov ax,mar
 	0011d2e8 mov op,ax
 	0011d2f0 setfuncargs 0x4
 	0011d2f8 mov ax,0x6aef20
 	0011d304 farcall ax
 	0011d30c farsubsp 0x4
 	0011d314 pop op
 	0011d31c sourceline 0x74c
 	0011d324 jmp 0x0011d37c
		0011d37c: UNCONDITIONAL_JUMP

	[0011d32c]
		0011d1ec: CONDITIONAL_JUMP
 	0011d32c sourceline 0x74e
 	0011d334 mov ax,0x3
 	0011d340 push ax
 	0011d348 mov ax,0x5
 	0011d354 push ax
 	0011d35c mov ax,0x10ae5c
 	0011d368 call ax
 	0011d370 sub sp,0x8
		0011d37c: FALL_THROUGH

	[0011d37c]
		0011cbbc: UNCONDITIONAL_JUMP
		0011cd90: UNCONDITIONAL_JUMP
		0011cf64: UNCONDITIONAL_JUMP
		0011d1f4: UNCONDITIONAL_JUMP
		0011d32c: FALL_THROUGH
 	0011d37c sourceline 0x74f
 	0011d384 mov ax,0x0
 	0011d390 ret

iMoney_UseInv$0:
	[0011d394]
 	0011d394 sourceline 0x756
 	0011d39c thisaddr
 	0011d3a4 sourceline 0x757
*	0011d3ac mov mar,0x3cef20
 	0011d3b8 mov ax,mar
 	0011d3c4 push op
 	0011d3cc mov op,ax
 	0011d3d4 setfuncargs 0x0
 	0011d3dc mov ax,0x89ef20
 	0011d3e8 farcall ax
 	0011d3f0 pop op
 	0011d3f8 push ax
 	0011d400 mov mar,0x8b6f20
 	0011d40c mov ax,mar
 	0011d418 pop bx
 	0011d420 cmpeq bx,ax
 	0011d42c mov ax,bx
 	0011d438 jnz 0x0011d4f4
		0011d4f4: CONDITIONAL_JUMP
		0011d440: FALL_THROUGH

	[0011d440]
		0011d394: FALL_THROUGH
 	0011d440 push ax
 	0011d448 mov mar,0x3cef20
 	0011d454 mov ax,mar
 	0011d460 push op
 	0011d468 mov op,ax
 	0011d470 setfuncargs 0x0
 	0011d478 mov ax,0x89ef20
 	0011d484 farcall ax
 	0011d48c pop op
 	0011d494 push ax
 	0011d49c mov mar,0x8bef20
 	0011d4a8 mov ax,mar
 	0011d4b4 pop bx
 	0011d4bc cmpeq bx,ax
 	0011d4c8 mov ax,bx
 	0011d4d4 pop bx
 	0011d4dc lor bx,ax
 	0011d4e8 mov ax,bx
		0011d4f4: FALL_THROUGH

	[0011d4f4]
		0011d394: CONDITIONAL_JUMP
		0011d440: FALL_THROUGH
 	0011d4f4 jz 0x0011d634
		0011d634: CONDITIONAL_JUMP
		0011d4fc: FALL_THROUGH

	[0011d4fc]
		0011d4f4: FALL_THROUGH
 	0011d4fc sourceline 0x759
 	0011d504 mov ax,0x1
 	0011d510 mov bx,ax
 	0011d51c mov mar,0x3cef20
 	0011d528 mov ax,mar
 	0011d534 push op
 	0011d53c mov op,ax
 	0011d544 farpush bx
 	0011d54c setfuncargs 0x1
 	0011d554 mov ax,0x69ef20
 	0011d560 farcall ax
 	0011d568 farsubsp 0x1
 	0011d570 pop op
 	0011d578 sourceline 0x75a
 	0011d580 push op
 	0011d588 mov ax,0x2b851d
 	0011d594 farpush ax
 	0011d59c mov ax,0x138
 	0011d5a8 farpush ax
 	0011d5b0 mov ax,0x92
 	0011d5bc farpush ax
 	0011d5c4 mov ax,0x0
 	0011d5d0 farpush ax
 	0011d5d8 mov mar,0x3cef20
 	0011d5e4 mov ax,mar
 	0011d5f0 mov op,ax
 	0011d5f8 setfuncargs 0x4
 	0011d600 mov ax,0x6aef20
 	0011d60c farcall ax
 	0011d614 farsubsp 0x4
 	0011d61c pop op
 	0011d624 sourceline 0x75b
 	0011d62c jmp 0x0011e120
		0011e120: UNCONDITIONAL_JUMP

	[0011d634]
		0011d4f4: CONDITIONAL_JUMP
 	0011d634 sourceline 0x75c
 	0011d63c mov mar,0x3cef20
 	0011d648 mov ax,mar
 	0011d654 push op
 	0011d65c mov op,ax
 	0011d664 setfuncargs 0x0
 	0011d66c mov ax,0x89ef20
 	0011d678 farcall ax
 	0011d680 pop op
 	0011d688 push ax
 	0011d690 mov mar,0x7cef20
 	0011d69c mov ax,mar
 	0011d6a8 pop bx
 	0011d6b0 cmpeq bx,ax
 	0011d6bc mov ax,bx
 	0011d6c8 jnz 0x0011d784
		0011d784: CONDITIONAL_JUMP
		0011d6d0: FALL_THROUGH

	[0011d6d0]
		0011d634: FALL_THROUGH
 	0011d6d0 push ax
 	0011d6d8 mov mar,0x3cef20
 	0011d6e4 mov ax,mar
 	0011d6f0 push op
 	0011d6f8 mov op,ax
 	0011d700 setfuncargs 0x0
 	0011d708 mov ax,0x89ef20
 	0011d714 farcall ax
 	0011d71c pop op
 	0011d724 push ax
 	0011d72c mov mar,0x886f20
 	0011d738 mov ax,mar
 	0011d744 pop bx
 	0011d74c cmpeq bx,ax
 	0011d758 mov ax,bx
 	0011d764 pop bx
 	0011d76c lor bx,ax
 	0011d778 mov ax,bx
		0011d784: FALL_THROUGH

	[0011d784]
		0011d634: CONDITIONAL_JUMP
		0011d6d0: FALL_THROUGH
 	0011d784 jz 0x0011d8c4
		0011d8c4: CONDITIONAL_JUMP
		0011d78c: FALL_THROUGH

	[0011d78c]
		0011d784: FALL_THROUGH
 	0011d78c sourceline 0x75e
 	0011d794 mov ax,0x1
 	0011d7a0 mov bx,ax
 	0011d7ac mov mar,0x3cef20
 	0011d7b8 mov ax,mar
 	0011d7c4 push op
 	0011d7cc mov op,ax
 	0011d7d4 farpush bx
 	0011d7dc setfuncargs 0x1
 	0011d7e4 mov ax,0x69ef20
 	0011d7f0 farcall ax
 	0011d7f8 farsubsp 0x1
 	0011d800 pop op
 	0011d808 sourceline 0x75f
 	0011d810 push op
 	0011d818 mov ax,0x2b9adb
 	0011d824 farpush ax
 	0011d82c mov ax,0x138
 	0011d838 farpush ax
 	0011d840 mov ax,0x92
 	0011d84c farpush ax
 	0011d854 mov ax,0x0
 	0011d860 farpush ax
 	0011d868 mov mar,0x3cef20
 	0011d874 mov ax,mar
 	0011d880 mov op,ax
 	0011d888 setfuncargs 0x4
 	0011d890 mov ax,0x6aef20
 	0011d89c farcall ax
 	0011d8a4 farsubsp 0x4
 	0011d8ac pop op
 	0011d8b4 sourceline 0x760
 	0011d8bc jmp 0x0011e120
		0011e120: UNCONDITIONAL_JUMP

	[0011d8c4]
		0011d784: CONDITIONAL_JUMP
 	0011d8c4 sourceline 0x761
 	0011d8cc mov mar,0x3cef20
 	0011d8d8 mov ax,mar
 	0011d8e4 push op
 	0011d8ec mov op,ax
 	0011d8f4 setfuncargs 0x0
 	0011d8fc mov ax,0x89ef20
 	0011d908 farcall ax
 	0011d910 pop op
 	0011d918 push ax
 	0011d920 mov mar,0x926f20
 	0011d92c mov ax,mar
 	0011d938 pop bx
 	0011d940 cmpeq bx,ax
 	0011d94c mov ax,bx
 	0011d958 jnz 0x0011da14
		0011da14: CONDITIONAL_JUMP
		0011d960: FALL_THROUGH

	[0011d960]
		0011d8c4: FALL_THROUGH
 	0011d960 push ax
 	0011d968 mov mar,0x3cef20
 	0011d974 mov ax,mar
 	0011d980 push op
 	0011d988 mov op,ax
 	0011d990 setfuncargs 0x0
 	0011d998 mov ax,0x89ef20
 	0011d9a4 farcall ax
 	0011d9ac pop op
 	0011d9b4 push ax
 	0011d9bc mov mar,0x93ef20
 	0011d9c8 mov ax,mar
 	0011d9d4 pop bx
 	0011d9dc cmpeq bx,ax
 	0011d9e8 mov ax,bx
 	0011d9f4 pop bx
 	0011d9fc lor bx,ax
 	0011da08 mov ax,bx
		0011da14: FALL_THROUGH

	[0011da14]
		0011d8c4: CONDITIONAL_JUMP
		0011d960: FALL_THROUGH
 	0011da14 jz 0x0011db54
		0011db54: CONDITIONAL_JUMP
		0011da1c: FALL_THROUGH

	[0011da1c]
		0011da14: FALL_THROUGH
 	0011da1c sourceline 0x763
 	0011da24 mov ax,0x1
 	0011da30 mov bx,ax
 	0011da3c mov mar,0x3cef20
 	0011da48 mov ax,mar
 	0011da54 push op
 	0011da5c mov op,ax
 	0011da64 farpush bx
 	0011da6c setfuncargs 0x1
 	0011da74 mov ax,0x69ef20
 	0011da80 farcall ax
 	0011da88 farsubsp 0x1
 	0011da90 pop op
 	0011da98 sourceline 0x764
 	0011daa0 push op
 	0011daa8 mov ax,0x2b9e85
 	0011dab4 farpush ax
 	0011dabc mov ax,0x138
 	0011dac8 farpush ax
 	0011dad0 mov ax,0x92
 	0011dadc farpush ax
 	0011dae4 mov ax,0x0
 	0011daf0 farpush ax
 	0011daf8 mov mar,0x3cef20
 	0011db04 mov ax,mar
 	0011db10 mov op,ax
 	0011db18 setfuncargs 0x4
 	0011db20 mov ax,0x6aef20
 	0011db2c farcall ax
 	0011db34 farsubsp 0x4
 	0011db3c pop op
 	0011db44 sourceline 0x765
 	0011db4c jmp 0x0011e120
		0011e120: UNCONDITIONAL_JUMP

	[0011db54]
		0011da14: CONDITIONAL_JUMP
 	0011db54 sourceline 0x766
 	0011db5c mov mar,0x3cef20
 	0011db68 mov ax,mar
 	0011db74 push op
 	0011db7c mov op,ax
 	0011db84 setfuncargs 0x0
 	0011db8c mov ax,0x89ef20
 	0011db98 farcall ax
 	0011dba0 pop op
 	0011dba8 push ax
 	0011dbb0 mov mar,0x8a6f20
 	0011dbbc mov ax,mar
 	0011dbc8 pop bx
 	0011dbd0 cmpeq bx,ax
 	0011dbdc mov ax,bx
 	0011dbe8 jz 0x0011dd28
		0011dd28: CONDITIONAL_JUMP
		0011dbf0: FALL_THROUGH

	[0011dbf0]
		0011db54: FALL_THROUGH
 	0011dbf0 sourceline 0x768
 	0011dbf8 mov ax,0x1
 	0011dc04 mov bx,ax
 	0011dc10 mov mar,0x3cef20
 	0011dc1c mov ax,mar
 	0011dc28 push op
 	0011dc30 mov op,ax
 	0011dc38 farpush bx
 	0011dc40 setfuncargs 0x1
 	0011dc48 mov ax,0x69ef20
 	0011dc54 farcall ax
 	0011dc5c farsubsp 0x1
 	0011dc64 pop op
 	0011dc6c sourceline 0x769
 	0011dc74 push op
 	0011dc7c mov ax,0x2b7cd7
 	0011dc88 farpush ax
 	0011dc90 mov ax,0x138
 	0011dc9c farpush ax
 	0011dca4 mov ax,0x92
 	0011dcb0 farpush ax
 	0011dcb8 mov ax,0x0
 	0011dcc4 farpush ax
 	0011dccc mov mar,0x3cef20
 	0011dcd8 mov ax,mar
 	0011dce4 mov op,ax
 	0011dcec setfuncargs 0x4
 	0011dcf4 mov ax,0x6aef20
 	0011dd00 farcall ax
 	0011dd08 farsubsp 0x4
 	0011dd10 pop op
 	0011dd18 sourceline 0x76a
 	0011dd20 jmp 0x0011e120
		0011e120: UNCONDITIONAL_JUMP

	[0011dd28]
		0011db54: CONDITIONAL_JUMP
 	0011dd28 sourceline 0x76b
 	0011dd30 mov mar,0x3cef20
 	0011dd3c mov ax,mar
 	0011dd48 push op
 	0011dd50 mov op,ax
 	0011dd58 setfuncargs 0x0
 	0011dd60 mov ax,0x89ef20
 	0011dd6c farcall ax
 	0011dd74 pop op
 	0011dd7c push ax
 	0011dd84 mov mar,0x8c6f20
 	0011dd90 mov ax,mar
 	0011dd9c pop bx
 	0011dda4 cmpeq bx,ax
 	0011ddb0 mov ax,bx
 	0011ddbc jz 0x0011defc
		0011defc: CONDITIONAL_JUMP
		0011ddc4: FALL_THROUGH

	[0011ddc4]
		0011dd28: FALL_THROUGH
 	0011ddc4 sourceline 0x76d
 	0011ddcc mov ax,0x1
 	0011ddd8 mov bx,ax
 	0011dde4 mov mar,0x3cef20
 	0011ddf0 mov ax,mar
 	0011ddfc push op
 	0011de04 mov op,ax
 	0011de0c farpush bx
 	0011de14 setfuncargs 0x1
 	0011de1c mov ax,0x69ef20
 	0011de28 farcall ax
 	0011de30 farsubsp 0x1
 	0011de38 pop op
 	0011de40 sourceline 0x76e
 	0011de48 push op
 	0011de50 mov ax,0x2ba410
 	0011de5c farpush ax
 	0011de64 mov ax,0x138
 	0011de70 farpush ax
 	0011de78 mov ax,0x92
 	0011de84 farpush ax
 	0011de8c mov ax,0x0
 	0011de98 farpush ax
 	0011dea0 mov mar,0x3cef20
 	0011deac mov ax,mar
 	0011deb8 mov op,ax
 	0011dec0 setfuncargs 0x4
 	0011dec8 mov ax,0x6aef20
 	0011ded4 farcall ax
 	0011dedc farsubsp 0x4
 	0011dee4 pop op
 	0011deec sourceline 0x76f
 	0011def4 jmp 0x0011e120
		0011e120: UNCONDITIONAL_JUMP

	[0011defc]
		0011dd28: CONDITIONAL_JUMP
 	0011defc sourceline 0x770
 	0011df04 mov mar,0x3cef20
 	0011df10 mov ax,mar
 	0011df1c push op
 	0011df24 mov op,ax
 	0011df2c setfuncargs 0x0
 	0011df34 mov ax,0x89ef20
 	0011df40 farcall ax
 	0011df48 pop op
 	0011df50 push ax
 	0011df58 mov mar,0x986f20
 	0011df64 mov ax,mar
 	0011df70 pop bx
 	0011df78 cmpeq bx,ax
 	0011df84 mov ax,bx
 	0011df90 jz 0x0011e0d0
		0011e0d0: CONDITIONAL_JUMP
		0011df98: FALL_THROUGH

	[0011df98]
		0011defc: FALL_THROUGH
 	0011df98 sourceline 0x772
 	0011dfa0 mov ax,0x1
 	0011dfac mov bx,ax
 	0011dfb8 mov mar,0x3cef20
 	0011dfc4 mov ax,mar
 	0011dfd0 push op
 	0011dfd8 mov op,ax
 	0011dfe0 farpush bx
 	0011dfe8 setfuncargs 0x1
 	0011dff0 mov ax,0x69ef20
 	0011dffc farcall ax
 	0011e004 farsubsp 0x1
 	0011e00c pop op
 	0011e014 sourceline 0x773
 	0011e01c push op
 	0011e024 mov ax,0x2ba111
 	0011e030 farpush ax
 	0011e038 mov ax,0x138
 	0011e044 farpush ax
 	0011e04c mov ax,0x92
 	0011e058 farpush ax
 	0011e060 mov ax,0x0
 	0011e06c farpush ax
 	0011e074 mov mar,0x3cef20
 	0011e080 mov ax,mar
 	0011e08c mov op,ax
 	0011e094 setfuncargs 0x4
 	0011e09c mov ax,0x6aef20
 	0011e0a8 farcall ax
 	0011e0b0 farsubsp 0x4
 	0011e0b8 pop op
 	0011e0c0 sourceline 0x774
 	0011e0c8 jmp 0x0011e120
		0011e120: UNCONDITIONAL_JUMP

	[0011e0d0]
		0011defc: CONDITIONAL_JUMP
 	0011e0d0 sourceline 0x775
 	0011e0d8 mov ax,0x3
 	0011e0e4 push ax
 	0011e0ec mov ax,0x5
 	0011e0f8 push ax
 	0011e100 mov ax,0x10ae5c
 	0011e10c call ax
 	0011e114 sub sp,0x8
		0011e120: FALL_THROUGH

	[0011e120]
		0011d4fc: UNCONDITIONAL_JUMP
		0011d78c: UNCONDITIONAL_JUMP
		0011da1c: UNCONDITIONAL_JUMP
		0011dbf0: UNCONDITIONAL_JUMP
		0011ddc4: UNCONDITIONAL_JUMP
		0011df98: UNCONDITIONAL_JUMP
		0011e0d0: FALL_THROUGH
 	0011e120 sourceline 0x776
 	0011e128 mov ax,0x0
 	0011e134 ret

iScissors_UseInv$0:
	[0011e138]
 	0011e138 sourceline 0x77b
 	0011e140 thisaddr
 	0011e148 sourceline 0x77c
*	0011e150 mov mar,0x3cef20
 	0011e15c mov ax,mar
 	0011e168 push op
 	0011e170 mov op,ax
 	0011e178 setfuncargs 0x0
 	0011e180 mov ax,0x89ef20
 	0011e18c farcall ax
 	0011e194 pop op
 	0011e19c push ax
 	0011e1a4 mov mar,0x98ef20
 	0011e1b0 mov ax,mar
 	0011e1bc pop bx
 	0011e1c4 cmpeq bx,ax
 	0011e1d0 mov ax,bx
 	0011e1dc jz 0x0011e6e4
		0011e6e4: CONDITIONAL_JUMP
		0011e1e4: FALL_THROUGH

	[0011e1e4]
		0011e138: FALL_THROUGH
 	0011e1e4 sourceline 0x77e
 	0011e1ec push op
 	0011e1f4 mov mar,0x8def20
 	0011e200 mov ax,mar
 	0011e20c farpush ax
 	0011e214 mov mar,0x3cef20
 	0011e220 mov ax,mar
 	0011e22c mov op,ax
 	0011e234 setfuncargs 0x1
 	0011e23c mov ax,0x996f20
 	0011e248 farcall ax
 	0011e250 farsubsp 0x1
 	0011e258 pop op
 	0011e260 jz 0x0011e5ac
		0011e5ac: CONDITIONAL_JUMP
		0011e268: FALL_THROUGH

	[0011e268]
		0011e1e4: FALL_THROUGH
 	0011e268 sourceline 0x780
 	0011e270 mov ax,0x1
 	0011e27c mov bx,ax
 	0011e288 mov mar,0x3cef20
 	0011e294 mov ax,mar
 	0011e2a0 push op
 	0011e2a8 mov op,ax
 	0011e2b0 farpush bx
 	0011e2b8 setfuncargs 0x1
 	0011e2c0 mov ax,0x69ef20
 	0011e2cc farcall ax
 	0011e2d4 farsubsp 0x1
 	0011e2dc pop op
 	0011e2e4 sourceline 0x781
 	0011e2ec push op
 	0011e2f4 mov mar,0x98ef20
 	0011e300 mov ax,mar
 	0011e30c farpush ax
 	0011e314 mov mar,0x3cef20
 	0011e320 mov ax,mar
 	0011e32c mov op,ax
 	0011e334 setfuncargs 0x1
 	0011e33c mov ax,0x7d6f20
 	0011e348 farcall ax
 	0011e350 farsubsp 0x1
 	0011e358 pop op
 	0011e360 sourceline 0x782
 	0011e368 push op
 	0011e370 mov ax,0x7cfe
 	0011e37c farpush ax
 	0011e384 mov mar,0x99ef20
 	0011e390 mov ax,mar
 	0011e39c farpush ax
 	0011e3a4 mov mar,0x3cef20
 	0011e3b0 mov ax,mar
 	0011e3bc mov op,ax
 	0011e3c4 setfuncargs 0x2
 	0011e3cc mov ax,0x7e6f20
 	0011e3d8 farcall ax
 	0011e3e0 farsubsp 0x2
 	0011e3e8 pop op
 	0011e3f0 sourceline 0x783
 	0011e3f8 push op
 	0011e400 mov ax,0x0
 	0011e40c farpush ax
 	0011e414 mov ax,0x32
 	0011e420 farpush ax
 	0011e428 mov mar,0x9a6f20
 	0011e434 mov ax,mar
 	0011e440 mov op,ax
 	0011e448 setfuncargs 0x2
 	0011e450 mov ax,0x2fef20
 	0011e45c farcall ax
 	0011e464 farsubsp 0x2
 	0011e46c pop op
 	0011e474 sourceline 0x784
 	0011e47c push op
 	0011e484 mov ax,0x2b81fd
 	0011e490 farpush ax
 	0011e498 mov ax,0x138
 	0011e4a4 farpush ax
 	0011e4ac mov ax,0x92
 	0011e4b8 farpush ax
 	0011e4c0 mov ax,0x0
 	0011e4cc farpush ax
 	0011e4d4 mov mar,0x3cef20
 	0011e4e0 mov ax,mar
 	0011e4ec mov op,ax
 	0011e4f4 setfuncargs 0x4
 	0011e4fc mov ax,0x6aef20
 	0011e508 farcall ax
 	0011e510 farsubsp 0x4
 	0011e518 pop op
 	0011e520 sourceline 0x785
 	0011e528 mov ax,0x0
 	0011e534 mov bx,ax
 	0011e540 mov mar,0x3cef20
 	0011e54c mov ax,mar
 	0011e558 push op
 	0011e560 mov op,ax
 	0011e568 farpush bx
 	0011e570 setfuncargs 0x1
 	0011e578 mov ax,0x436f20
 	0011e584 farcall ax
 	0011e58c farsubsp 0x1
 	0011e594 pop op
 	0011e59c sourceline 0x786
 	0011e5a4 jmp 0x0011e6d4
		0011e6d4: UNCONDITIONAL_JUMP

	[0011e5ac]
		0011e1e4: CONDITIONAL_JUMP
 	0011e5ac sourceline 0x789
 	0011e5b4 mov ax,0x1
 	0011e5c0 mov bx,ax
 	0011e5cc mov mar,0x3cef20
 	0011e5d8 mov ax,mar
 	0011e5e4 push op
 	0011e5ec mov op,ax
 	0011e5f4 farpush bx
 	0011e5fc setfuncargs 0x1
 	0011e604 mov ax,0x69ef20
 	0011e610 farcall ax
 	0011e618 farsubsp 0x1
 	0011e620 pop op
 	0011e628 sourceline 0x78a
 	0011e630 push op
 	0011e638 mov ax,0x2b8228
 	0011e644 farpush ax
 	0011e64c mov ax,0x138
 	0011e658 farpush ax
 	0011e660 mov ax,0x92
 	0011e66c farpush ax
 	0011e674 mov ax,0x0
 	0011e680 farpush ax
 	0011e688 mov mar,0x3cef20
 	0011e694 mov ax,mar
 	0011e6a0 mov op,ax
 	0011e6a8 setfuncargs 0x4
 	0011e6b0 mov ax,0x6aef20
 	0011e6bc farcall ax
 	0011e6c4 farsubsp 0x4
 	0011e6cc pop op
		0011e6d4: FALL_THROUGH

	[0011e6d4]
		0011e268: UNCONDITIONAL_JUMP
		0011e5ac: FALL_THROUGH
 	0011e6d4 sourceline 0x78c
 	0011e6dc jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[0011e6e4]
		0011e138: CONDITIONAL_JUMP
 	0011e6e4 sourceline 0x78e
 	0011e6ec mov mar,0x3cef20
 	0011e6f8 mov ax,mar
 	0011e704 push op
 	0011e70c mov op,ax
 	0011e714 setfuncargs 0x0
 	0011e71c mov ax,0x89ef20
 	0011e728 farcall ax
 	0011e730 pop op
 	0011e738 push ax
 	0011e740 mov mar,0x976f20
 	0011e74c mov ax,mar
 	0011e758 pop bx
 	0011e760 cmpeq bx,ax
 	0011e76c mov ax,bx
 	0011e778 jz 0x0011e8b8
		0011e8b8: CONDITIONAL_JUMP
		0011e780: FALL_THROUGH

	[0011e780]
		0011e6e4: FALL_THROUGH
 	0011e780 sourceline 0x790
 	0011e788 mov ax,0x1
 	0011e794 mov bx,ax
 	0011e7a0 mov mar,0x3cef20
 	0011e7ac mov ax,mar
 	0011e7b8 push op
 	0011e7c0 mov op,ax
 	0011e7c8 farpush bx
 	0011e7d0 setfuncargs 0x1
 	0011e7d8 mov ax,0x69ef20
 	0011e7e4 farcall ax
 	0011e7ec farsubsp 0x1
 	0011e7f4 pop op
 	0011e7fc sourceline 0x791
 	0011e804 push op
 	0011e80c mov ax,0x2b7dfc
 	0011e818 farpush ax
 	0011e820 mov ax,0x138
 	0011e82c farpush ax
 	0011e834 mov ax,0x92
 	0011e840 farpush ax
 	0011e848 mov ax,0x0
 	0011e854 farpush ax
 	0011e85c mov mar,0x3cef20
 	0011e868 mov ax,mar
 	0011e874 mov op,ax
 	0011e87c setfuncargs 0x4
 	0011e884 mov ax,0x6aef20
 	0011e890 farcall ax
 	0011e898 farsubsp 0x4
 	0011e8a0 pop op
 	0011e8a8 sourceline 0x792
 	0011e8b0 jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[0011e8b8]
		0011e6e4: CONDITIONAL_JUMP
 	0011e8b8 sourceline 0x794
 	0011e8c0 mov mar,0x3cef20
 	0011e8cc mov ax,mar
 	0011e8d8 push op
 	0011e8e0 mov op,ax
 	0011e8e8 setfuncargs 0x0
 	0011e8f0 mov ax,0x89ef20
 	0011e8fc farcall ax
 	0011e904 pop op
 	0011e90c push ax
 	0011e914 mov mar,0x9aef20
 	0011e920 mov ax,mar
 	0011e92c pop bx
 	0011e934 cmpeq bx,ax
 	0011e940 mov ax,bx
 	0011e94c jnz 0x0011ea08
		0011ea08: CONDITIONAL_JUMP
		0011e954: FALL_THROUGH

	[0011e954]
		0011e8b8: FALL_THROUGH
 	0011e954 push ax
 	0011e95c mov mar,0x3cef20
 	0011e968 mov ax,mar
 	0011e974 push op
 	0011e97c mov op,ax
 	0011e984 setfuncargs 0x0
 	0011e98c mov ax,0x89ef20
 	0011e998 farcall ax
 	0011e9a0 pop op
 	0011e9a8 push ax
 	0011e9b0 mov mar,0x9b6f20
 	0011e9bc mov ax,mar
 	0011e9c8 pop bx
 	0011e9d0 cmpeq bx,ax
 	0011e9dc mov ax,bx
 	0011e9e8 pop bx
 	0011e9f0 lor bx,ax
 	0011e9fc mov ax,bx
		0011ea08: FALL_THROUGH

	[0011ea08]
		0011e8b8: CONDITIONAL_JUMP
		0011e954: FALL_THROUGH
 	0011ea08 jnz 0x0011eac4
		0011eac4: CONDITIONAL_JUMP
		0011ea10: FALL_THROUGH

	[0011ea10]
		0011ea08: FALL_THROUGH
 	0011ea10 push ax
 	0011ea18 mov mar,0x3cef20
 	0011ea24 mov ax,mar
 	0011ea30 push op
 	0011ea38 mov op,ax
 	0011ea40 setfuncargs 0x0
 	0011ea48 mov ax,0x89ef20
 	0011ea54 farcall ax
 	0011ea5c pop op
 	0011ea64 push ax
 	0011ea6c mov mar,0x91ef20
 	0011ea78 mov ax,mar
 	0011ea84 pop bx
 	0011ea8c cmpeq bx,ax
 	0011ea98 mov ax,bx
 	0011eaa4 pop bx
 	0011eaac lor bx,ax
 	0011eab8 mov ax,bx
		0011eac4: FALL_THROUGH

	[0011eac4]
		0011ea08: CONDITIONAL_JUMP
		0011ea10: FALL_THROUGH
 	0011eac4 jz 0x0011ec04
		0011ec04: CONDITIONAL_JUMP
		0011eacc: FALL_THROUGH

	[0011eacc]
		0011eac4: FALL_THROUGH
 	0011eacc sourceline 0x796
 	0011ead4 mov ax,0x1
 	0011eae0 mov bx,ax
 	0011eaec mov mar,0x3cef20
 	0011eaf8 mov ax,mar
 	0011eb04 push op
 	0011eb0c mov op,ax
 	0011eb14 farpush bx
 	0011eb1c setfuncargs 0x1
 	0011eb24 mov ax,0x69ef20
 	0011eb30 farcall ax
 	0011eb38 farsubsp 0x1
 	0011eb40 pop op
 	0011eb48 sourceline 0x797
 	0011eb50 push op
 	0011eb58 mov ax,0x2ba161
 	0011eb64 farpush ax
 	0011eb6c mov ax,0x138
 	0011eb78 farpush ax
 	0011eb80 mov ax,0x92
 	0011eb8c farpush ax
 	0011eb94 mov ax,0x0
 	0011eba0 farpush ax
 	0011eba8 mov mar,0x3cef20
 	0011ebb4 mov ax,mar
 	0011ebc0 mov op,ax
 	0011ebc8 setfuncargs 0x4
 	0011ebd0 mov ax,0x6aef20
 	0011ebdc farcall ax
 	0011ebe4 farsubsp 0x4
 	0011ebec pop op
 	0011ebf4 sourceline 0x798
 	0011ebfc jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[0011ec04]
		0011eac4: CONDITIONAL_JUMP
 	0011ec04 sourceline 0x79a
 	0011ec0c mov mar,0x3cef20
 	0011ec18 mov ax,mar
 	0011ec24 push op
 	0011ec2c mov op,ax
 	0011ec34 setfuncargs 0x0
 	0011ec3c mov ax,0x89ef20
 	0011ec48 farcall ax
 	0011ec50 pop op
 	0011ec58 push ax
 	0011ec60 mov mar,0x886f20
 	0011ec6c mov ax,mar
 	0011ec78 pop bx
 	0011ec80 cmpeq bx,ax
 	0011ec8c mov ax,bx
 	0011ec98 jnz 0x0011ed54
		0011ed54: CONDITIONAL_JUMP
		0011eca0: FALL_THROUGH

	[0011eca0]
		0011ec04: FALL_THROUGH
 	0011eca0 push ax
 	0011eca8 mov mar,0x3cef20
 	0011ecb4 mov ax,mar
 	0011ecc0 push op
 	0011ecc8 mov op,ax
 	0011ecd0 setfuncargs 0x0
 	0011ecd8 mov ax,0x89ef20
 	0011ece4 farcall ax
 	0011ecec pop op
 	0011ecf4 push ax
 	0011ecfc mov mar,0x9bef20
 	0011ed08 mov ax,mar
 	0011ed14 pop bx
 	0011ed1c cmpeq bx,ax
 	0011ed28 mov ax,bx
 	0011ed34 pop bx
 	0011ed3c lor bx,ax
 	0011ed48 mov ax,bx
		0011ed54: FALL_THROUGH

	[0011ed54]
		0011ec04: CONDITIONAL_JUMP
		0011eca0: FALL_THROUGH
 	0011ed54 jz 0x0011ee94
		0011ee94: CONDITIONAL_JUMP
		0011ed5c: FALL_THROUGH

	[0011ed5c]
		0011ed54: FALL_THROUGH
 	0011ed5c sourceline 0x79c
 	0011ed64 mov ax,0x1
 	0011ed70 mov bx,ax
 	0011ed7c mov mar,0x3cef20
 	0011ed88 mov ax,mar
 	0011ed94 push op
 	0011ed9c mov op,ax
 	0011eda4 farpush bx
 	0011edac setfuncargs 0x1
 	0011edb4 mov ax,0x69ef20
 	0011edc0 farcall ax
 	0011edc8 farsubsp 0x1
 	0011edd0 pop op
 	0011edd8 sourceline 0x79d
 	0011ede0 push op
 	0011ede8 mov ax,0x2ba036
 	0011edf4 farpush ax
 	0011edfc mov ax,0x138
 	0011ee08 farpush ax
 	0011ee10 mov ax,0x92
 	0011ee1c farpush ax
 	0011ee24 mov ax,0x0
 	0011ee30 farpush ax
 	0011ee38 mov mar,0x3cef20
 	0011ee44 mov ax,mar
 	0011ee50 mov op,ax
 	0011ee58 setfuncargs 0x4
 	0011ee60 mov ax,0x6aef20
 	0011ee6c farcall ax
 	0011ee74 farsubsp 0x4
 	0011ee7c pop op
 	0011ee84 sourceline 0x79e
 	0011ee8c jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[0011ee94]
		0011ed54: CONDITIONAL_JUMP
 	0011ee94 sourceline 0x7a0
 	0011ee9c mov mar,0x3cef20
 	0011eea8 mov ax,mar
 	0011eeb4 push op
 	0011eebc mov op,ax
 	0011eec4 setfuncargs 0x0
 	0011eecc mov ax,0x89ef20
 	0011eed8 farcall ax
 	0011eee0 pop op
 	0011eee8 push ax
 	0011eef0 mov mar,0x8bef20
 	0011eefc mov ax,mar
 	0011ef08 pop bx
 	0011ef10 cmpeq bx,ax
 	0011ef1c mov ax,bx
 	0011ef28 jz 0x0011f068
		0011f068: CONDITIONAL_JUMP
		0011ef30: FALL_THROUGH

	[0011ef30]
		0011ee94: FALL_THROUGH
 	0011ef30 sourceline 0x7a2
 	0011ef38 mov ax,0x1
 	0011ef44 mov bx,ax
 	0011ef50 mov mar,0x3cef20
 	0011ef5c mov ax,mar
 	0011ef68 push op
 	0011ef70 mov op,ax
 	0011ef78 farpush bx
 	0011ef80 setfuncargs 0x1
 	0011ef88 mov ax,0x69ef20
 	0011ef94 farcall ax
 	0011ef9c farsubsp 0x1
 	0011efa4 pop op
 	0011efac sourceline 0x7a3
 	0011efb4 push op
 	0011efbc mov ax,0x2b8607
 	0011efc8 farpush ax
 	0011efd0 mov ax,0x138
 	0011efdc farpush ax
 	0011efe4 mov ax,0x92
 	0011eff0 farpush ax
 	0011eff8 mov ax,0x0
 	0011f004 farpush ax
 	0011f00c mov mar,0x3cef20
 	0011f018 mov ax,mar
 	0011f024 mov op,ax
 	0011f02c setfuncargs 0x4
 	0011f034 mov ax,0x6aef20
 	0011f040 farcall ax
 	0011f048 farsubsp 0x4
 	0011f050 pop op
 	0011f058 sourceline 0x7a4
 	0011f060 jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[0011f068]
		0011ee94: CONDITIONAL_JUMP
 	0011f068 sourceline 0x7a6
 	0011f070 mov mar,0x3cef20
 	0011f07c mov ax,mar
 	0011f088 push op
 	0011f090 mov op,ax
 	0011f098 setfuncargs 0x0
 	0011f0a0 mov ax,0x89ef20
 	0011f0ac farcall ax
 	0011f0b4 pop op
 	0011f0bc push ax
 	0011f0c4 mov mar,0x92ef20
 	0011f0d0 mov ax,mar
 	0011f0dc pop bx
 	0011f0e4 cmpeq bx,ax
 	0011f0f0 mov ax,bx
 	0011f0fc jz 0x0011f23c
		0011f23c: CONDITIONAL_JUMP
		0011f104: FALL_THROUGH

	[0011f104]
		0011f068: FALL_THROUGH
 	0011f104 sourceline 0x7a8
 	0011f10c mov ax,0x1
 	0011f118 mov bx,ax
 	0011f124 mov mar,0x3cef20
 	0011f130 mov ax,mar
 	0011f13c push op
 	0011f144 mov op,ax
 	0011f14c farpush bx
 	0011f154 setfuncargs 0x1
 	0011f15c mov ax,0x69ef20
 	0011f168 farcall ax
 	0011f170 farsubsp 0x1
 	0011f178 pop op
 	0011f180 sourceline 0x7a9
 	0011f188 push op
 	0011f190 mov ax,0x2b9df6
 	0011f19c farpush ax
 	0011f1a4 mov ax,0x138
 	0011f1b0 farpush ax
 	0011f1b8 mov ax,0x92
 	0011f1c4 farpush ax
 	0011f1cc mov ax,0x0
 	0011f1d8 farpush ax
 	0011f1e0 mov mar,0x3cef20
 	0011f1ec mov ax,mar
 	0011f1f8 mov op,ax
 	0011f200 setfuncargs 0x4
 	0011f208 mov ax,0x6aef20
 	0011f214 farcall ax
 	0011f21c farsubsp 0x4
 	0011f224 pop op
 	0011f22c sourceline 0x7aa
 	0011f234 jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[0011f23c]
		0011f068: CONDITIONAL_JUMP
 	0011f23c sourceline 0x7ac
 	0011f244 mov mar,0x3cef20
 	0011f250 mov ax,mar
 	0011f25c push op
 	0011f264 mov op,ax
 	0011f26c setfuncargs 0x0
 	0011f274 mov ax,0x89ef20
 	0011f280 farcall ax
 	0011f288 pop op
 	0011f290 push ax
 	0011f298 mov mar,0x7cef20
 	0011f2a4 mov ax,mar
 	0011f2b0 pop bx
 	0011f2b8 cmpeq bx,ax
 	0011f2c4 mov ax,bx
 	0011f2d0 jnz 0x0011f38c
		0011f38c: CONDITIONAL_JUMP
		0011f2d8: FALL_THROUGH

	[0011f2d8]
		0011f23c: FALL_THROUGH
 	0011f2d8 push ax
 	0011f2e0 mov mar,0x3cef20
 	0011f2ec mov ax,mar
 	0011f2f8 push op
 	0011f300 mov op,ax
 	0011f308 setfuncargs 0x0
 	0011f310 mov ax,0x89ef20
 	0011f31c farcall ax
 	0011f324 pop op
 	0011f32c push ax
 	0011f334 mov mar,0x7def20
 	0011f340 mov ax,mar
 	0011f34c pop bx
 	0011f354 cmpeq bx,ax
 	0011f360 mov ax,bx
 	0011f36c pop bx
 	0011f374 lor bx,ax
 	0011f380 mov ax,bx
		0011f38c: FALL_THROUGH

	[0011f38c]
		0011f23c: CONDITIONAL_JUMP
		0011f2d8: FALL_THROUGH
 	0011f38c jz 0x0011f4cc
		0011f4cc: CONDITIONAL_JUMP
		0011f394: FALL_THROUGH

	[0011f394]
		0011f38c: FALL_THROUGH
 	0011f394 sourceline 0x7ae
 	0011f39c mov ax,0x1
 	0011f3a8 mov bx,ax
 	0011f3b4 mov mar,0x3cef20
 	0011f3c0 mov ax,mar
 	0011f3cc push op
 	0011f3d4 mov op,ax
 	0011f3dc farpush bx
 	0011f3e4 setfuncargs 0x1
 	0011f3ec mov ax,0x69ef20
 	0011f3f8 farcall ax
 	0011f400 farsubsp 0x1
 	0011f408 pop op
 	0011f410 sourceline 0x7af
 	0011f418 push op
 	0011f420 mov ax,0x2b8caf
 	0011f42c farpush ax
 	0011f434 mov ax,0x138
 	0011f440 farpush ax
 	0011f448 mov ax,0x92
 	0011f454 farpush ax
 	0011f45c mov ax,0x0
 	0011f468 farpush ax
 	0011f470 mov mar,0x3cef20
 	0011f47c mov ax,mar
 	0011f488 mov op,ax
 	0011f490 setfuncargs 0x4
 	0011f498 mov ax,0x6aef20
 	0011f4a4 farcall ax
 	0011f4ac farsubsp 0x4
 	0011f4b4 pop op
 	0011f4bc sourceline 0x7b0
 	0011f4c4 jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[0011f4cc]
		0011f38c: CONDITIONAL_JUMP
 	0011f4cc sourceline 0x7b2
 	0011f4d4 mov mar,0x3cef20
 	0011f4e0 mov ax,mar
 	0011f4ec push op
 	0011f4f4 mov op,ax
 	0011f4fc setfuncargs 0x0
 	0011f504 mov ax,0x89ef20
 	0011f510 farcall ax
 	0011f518 pop op
 	0011f520 push ax
 	0011f528 mov mar,0x8d6f20
 	0011f534 mov ax,mar
 	0011f540 pop bx
 	0011f548 cmpeq bx,ax
 	0011f554 mov ax,bx
 	0011f560 jnz 0x0011f61c
		0011f61c: CONDITIONAL_JUMP
		0011f568: FALL_THROUGH

	[0011f568]
		0011f4cc: FALL_THROUGH
 	0011f568 push ax
 	0011f570 mov mar,0x3cef20
 	0011f57c mov ax,mar
 	0011f588 push op
 	0011f590 mov op,ax
 	0011f598 setfuncargs 0x0
 	0011f5a0 mov ax,0x89ef20
 	0011f5ac farcall ax
 	0011f5b4 pop op
 	0011f5bc push ax
 	0011f5c4 mov mar,0x926f20
 	0011f5d0 mov ax,mar
 	0011f5dc pop bx
 	0011f5e4 cmpeq bx,ax
 	0011f5f0 mov ax,bx
 	0011f5fc pop bx
 	0011f604 lor bx,ax
 	0011f610 mov ax,bx
		0011f61c: FALL_THROUGH

	[0011f61c]
		0011f4cc: CONDITIONAL_JUMP
		0011f568: FALL_THROUGH
 	0011f61c jz 0x0011f75c
		0011f75c: CONDITIONAL_JUMP
		0011f624: FALL_THROUGH

	[0011f624]
		0011f61c: FALL_THROUGH
 	0011f624 sourceline 0x7b4
 	0011f62c mov ax,0x1
 	0011f638 mov bx,ax
 	0011f644 mov mar,0x3cef20
 	0011f650 mov ax,mar
 	0011f65c push op
 	0011f664 mov op,ax
 	0011f66c farpush bx
 	0011f674 setfuncargs 0x1
 	0011f67c mov ax,0x69ef20
 	0011f688 farcall ax
 	0011f690 farsubsp 0x1
 	0011f698 pop op
 	0011f6a0 sourceline 0x7b5
 	0011f6a8 push op
 	0011f6b0 mov ax,0x2b851d
 	0011f6bc farpush ax
 	0011f6c4 mov ax,0x138
 	0011f6d0 farpush ax
 	0011f6d8 mov ax,0x92
 	0011f6e4 farpush ax
 	0011f6ec mov ax,0x0
 	0011f6f8 farpush ax
 	0011f700 mov mar,0x3cef20
 	0011f70c mov ax,mar
 	0011f718 mov op,ax
 	0011f720 setfuncargs 0x4
 	0011f728 mov ax,0x6aef20
 	0011f734 farcall ax
 	0011f73c farsubsp 0x4
 	0011f744 pop op
 	0011f74c sourceline 0x7b6
 	0011f754 jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[0011f75c]
		0011f61c: CONDITIONAL_JUMP
 	0011f75c sourceline 0x7b8
 	0011f764 mov mar,0x3cef20
 	0011f770 mov ax,mar
 	0011f77c push op
 	0011f784 mov op,ax
 	0011f78c setfuncargs 0x0
 	0011f794 mov ax,0x89ef20
 	0011f7a0 farcall ax
 	0011f7a8 pop op
 	0011f7b0 push ax
 	0011f7b8 mov mar,0x8a6f20
 	0011f7c4 mov ax,mar
 	0011f7d0 pop bx
 	0011f7d8 cmpeq bx,ax
 	0011f7e4 mov ax,bx
 	0011f7f0 jnz 0x0011f8ac
		0011f8ac: CONDITIONAL_JUMP
		0011f7f8: FALL_THROUGH

	[0011f7f8]
		0011f75c: FALL_THROUGH
 	0011f7f8 push ax
 	0011f800 mov mar,0x3cef20
 	0011f80c mov ax,mar
 	0011f818 push op
 	0011f820 mov op,ax
 	0011f828 setfuncargs 0x0
 	0011f830 mov ax,0x89ef20
 	0011f83c farcall ax
 	0011f844 pop op
 	0011f84c push ax
 	0011f854 mov mar,0x8c6f20
 	0011f860 mov ax,mar
 	0011f86c pop bx
 	0011f874 cmpeq bx,ax
 	0011f880 mov ax,bx
 	0011f88c pop bx
 	0011f894 lor bx,ax
 	0011f8a0 mov ax,bx
		0011f8ac: FALL_THROUGH

	[0011f8ac]
		0011f75c: CONDITIONAL_JUMP
		0011f7f8: FALL_THROUGH
 	0011f8ac jnz 0x0011f968
		0011f968: CONDITIONAL_JUMP
		0011f8b4: FALL_THROUGH

	[0011f8b4]
		0011f8ac: FALL_THROUGH
 	0011f8b4 push ax
 	0011f8bc mov mar,0x3cef20
 	0011f8c8 mov ax,mar
 	0011f8d4 push op
 	0011f8dc mov op,ax
 	0011f8e4 setfuncargs 0x0
 	0011f8ec mov ax,0x89ef20
 	0011f8f8 farcall ax
 	0011f900 pop op
 	0011f908 push ax
 	0011f910 mov mar,0x8def20
 	0011f91c mov ax,mar
 	0011f928 pop bx
 	0011f930 cmpeq bx,ax
 	0011f93c mov ax,bx
 	0011f948 pop bx
 	0011f950 lor bx,ax
 	0011f95c mov ax,bx
		0011f968: FALL_THROUGH

	[0011f968]
		0011f8ac: CONDITIONAL_JUMP
		0011f8b4: FALL_THROUGH
 	0011f968 jnz 0x0011fa24
		0011fa24: CONDITIONAL_JUMP
		0011f970: FALL_THROUGH

	[0011f970]
		0011f968: FALL_THROUGH
 	0011f970 push ax
 	0011f978 mov mar,0x3cef20
 	0011f984 mov ax,mar
 	0011f990 push op
 	0011f998 mov op,ax
 	0011f9a0 setfuncargs 0x0
 	0011f9a8 mov ax,0x89ef20
 	0011f9b4 farcall ax
 	0011f9bc pop op
 	0011f9c4 push ax
 	0011f9cc mov mar,0x9c6f20
 	0011f9d8 mov ax,mar
 	0011f9e4 pop bx
 	0011f9ec cmpeq bx,ax
 	0011f9f8 mov ax,bx
 	0011fa04 pop bx
 	0011fa0c lor bx,ax
 	0011fa18 mov ax,bx
		0011fa24: FALL_THROUGH

	[0011fa24]
		0011f968: CONDITIONAL_JUMP
		0011f970: FALL_THROUGH
 	0011fa24 jnz 0x0011fae0
		0011fae0: CONDITIONAL_JUMP
		0011fa2c: FALL_THROUGH

	[0011fa2c]
		0011fa24: FALL_THROUGH
 	0011fa2c push ax
 	0011fa34 mov mar,0x3cef20
 	0011fa40 mov ax,mar
 	0011fa4c push op
 	0011fa54 mov op,ax
 	0011fa5c setfuncargs 0x0
 	0011fa64 mov ax,0x89ef20
 	0011fa70 farcall ax
 	0011fa78 pop op
 	0011fa80 push ax
 	0011fa88 mov mar,0x9cef20
 	0011fa94 mov ax,mar
 	0011faa0 pop bx
 	0011faa8 cmpeq bx,ax
 	0011fab4 mov ax,bx
 	0011fac0 pop bx
 	0011fac8 lor bx,ax
 	0011fad4 mov ax,bx
		0011fae0: FALL_THROUGH

	[0011fae0]
		0011fa24: CONDITIONAL_JUMP
		0011fa2c: FALL_THROUGH
 	0011fae0 jnz 0x0011fb9c
		0011fb9c: CONDITIONAL_JUMP
		0011fae8: FALL_THROUGH

	[0011fae8]
		0011fae0: FALL_THROUGH
 	0011fae8 push ax
 	0011faf0 mov mar,0x3cef20
 	0011fafc mov ax,mar
 	0011fb08 push op
 	0011fb10 mov op,ax
 	0011fb18 setfuncargs 0x0
 	0011fb20 mov ax,0x89ef20
 	0011fb2c farcall ax
 	0011fb34 pop op
 	0011fb3c push ax
 	0011fb44 mov mar,0x9d6f20
 	0011fb50 mov ax,mar
 	0011fb5c pop bx
 	0011fb64 cmpeq bx,ax
 	0011fb70 mov ax,bx
 	0011fb7c pop bx
 	0011fb84 lor bx,ax
 	0011fb90 mov ax,bx
		0011fb9c: FALL_THROUGH

	[0011fb9c]
		0011fae0: CONDITIONAL_JUMP
		0011fae8: FALL_THROUGH
 	0011fb9c jnz 0x0011fc58
		0011fc58: CONDITIONAL_JUMP
		0011fba4: FALL_THROUGH

	[0011fba4]
		0011fb9c: FALL_THROUGH
 	0011fba4 push ax
 	0011fbac mov mar,0x3cef20
 	0011fbb8 mov ax,mar
 	0011fbc4 push op
 	0011fbcc mov op,ax
 	0011fbd4 setfuncargs 0x0
 	0011fbdc mov ax,0x89ef20
 	0011fbe8 farcall ax
 	0011fbf0 pop op
 	0011fbf8 push ax
 	0011fc00 mov mar,0x8eef20
 	0011fc0c mov ax,mar
 	0011fc18 pop bx
 	0011fc20 cmpeq bx,ax
 	0011fc2c mov ax,bx
 	0011fc38 pop bx
 	0011fc40 lor bx,ax
 	0011fc4c mov ax,bx
		0011fc58: FALL_THROUGH

	[0011fc58]
		0011fb9c: CONDITIONAL_JUMP
		0011fba4: FALL_THROUGH
 	0011fc58 jnz 0x0011fd14
		0011fd14: CONDITIONAL_JUMP
		0011fc60: FALL_THROUGH

	[0011fc60]
		0011fc58: FALL_THROUGH
 	0011fc60 push ax
 	0011fc68 mov mar,0x3cef20
 	0011fc74 mov ax,mar
 	0011fc80 push op
 	0011fc88 mov op,ax
 	0011fc90 setfuncargs 0x0
 	0011fc98 mov ax,0x89ef20
 	0011fca4 farcall ax
 	0011fcac pop op
 	0011fcb4 push ax
 	0011fcbc mov mar,0x9def20
 	0011fcc8 mov ax,mar
 	0011fcd4 pop bx
 	0011fcdc cmpeq bx,ax
 	0011fce8 mov ax,bx
 	0011fcf4 pop bx
 	0011fcfc lor bx,ax
 	0011fd08 mov ax,bx
		0011fd14: FALL_THROUGH

	[0011fd14]
		0011fc58: CONDITIONAL_JUMP
		0011fc60: FALL_THROUGH
 	0011fd14 jnz 0x0011fdd0
		0011fdd0: CONDITIONAL_JUMP
		0011fd1c: FALL_THROUGH

	[0011fd1c]
		0011fd14: FALL_THROUGH
 	0011fd1c push ax
 	0011fd24 mov mar,0x3cef20
 	0011fd30 mov ax,mar
 	0011fd3c push op
 	0011fd44 mov op,ax
 	0011fd4c setfuncargs 0x0
 	0011fd54 mov ax,0x89ef20
 	0011fd60 farcall ax
 	0011fd68 pop op
 	0011fd70 push ax
 	0011fd78 mov mar,0x97ef20
 	0011fd84 mov ax,mar
 	0011fd90 pop bx
 	0011fd98 cmpeq bx,ax
 	0011fda4 mov ax,bx
 	0011fdb0 pop bx
 	0011fdb8 lor bx,ax
 	0011fdc4 mov ax,bx
		0011fdd0: FALL_THROUGH

	[0011fdd0]
		0011fd14: CONDITIONAL_JUMP
		0011fd1c: FALL_THROUGH
 	0011fdd0 jnz 0x0011fe8c
		0011fe8c: CONDITIONAL_JUMP
		0011fdd8: FALL_THROUGH

	[0011fdd8]
		0011fdd0: FALL_THROUGH
 	0011fdd8 push ax
 	0011fde0 mov mar,0x3cef20
 	0011fdec mov ax,mar
 	0011fdf8 push op
 	0011fe00 mov op,ax
 	0011fe08 setfuncargs 0x0
 	0011fe10 mov ax,0x89ef20
 	0011fe1c farcall ax
 	0011fe24 pop op
 	0011fe2c push ax
 	0011fe34 mov mar,0x90ef20
 	0011fe40 mov ax,mar
 	0011fe4c pop bx
 	0011fe54 cmpeq bx,ax
 	0011fe60 mov ax,bx
 	0011fe6c pop bx
 	0011fe74 lor bx,ax
 	0011fe80 mov ax,bx
		0011fe8c: FALL_THROUGH

	[0011fe8c]
		0011fdd0: CONDITIONAL_JUMP
		0011fdd8: FALL_THROUGH
 	0011fe8c jnz 0x0011ff48
		0011ff48: CONDITIONAL_JUMP
		0011fe94: FALL_THROUGH

	[0011fe94]
		0011fe8c: FALL_THROUGH
 	0011fe94 push ax
 	0011fe9c mov mar,0x3cef20
 	0011fea8 mov ax,mar
 	0011feb4 push op
 	0011febc mov op,ax
 	0011fec4 setfuncargs 0x0
 	0011fecc mov ax,0x89ef20
 	0011fed8 farcall ax
 	0011fee0 pop op
 	0011fee8 push ax
 	0011fef0 mov mar,0x916f20
 	0011fefc mov ax,mar
 	0011ff08 pop bx
 	0011ff10 cmpeq bx,ax
 	0011ff1c mov ax,bx
 	0011ff28 pop bx
 	0011ff30 lor bx,ax
 	0011ff3c mov ax,bx
		0011ff48: FALL_THROUGH

	[0011ff48]
		0011fe8c: CONDITIONAL_JUMP
		0011fe94: FALL_THROUGH
 	0011ff48 jnz 0x00120004
		00120004: CONDITIONAL_JUMP
		0011ff50: FALL_THROUGH

	[0011ff50]
		0011ff48: FALL_THROUGH
 	0011ff50 push ax
 	0011ff58 mov mar,0x3cef20
 	0011ff64 mov ax,mar
 	0011ff70 push op
 	0011ff78 mov op,ax
 	0011ff80 setfuncargs 0x0
 	0011ff88 mov ax,0x89ef20
 	0011ff94 farcall ax
 	0011ff9c pop op
 	0011ffa4 push ax
 	0011ffac mov mar,0x8f6f20
 	0011ffb8 mov ax,mar
 	0011ffc4 pop bx
 	0011ffcc cmpeq bx,ax
 	0011ffd8 mov ax,bx
 	0011ffe4 pop bx
 	0011ffec lor bx,ax
 	0011fff8 mov ax,bx
		00120004: FALL_THROUGH

	[00120004]
		0011ff48: CONDITIONAL_JUMP
		0011ff50: FALL_THROUGH
 	00120004 jnz 0x001200c0
		001200c0: CONDITIONAL_JUMP
		0012000c: FALL_THROUGH

	[0012000c]
		00120004: FALL_THROUGH
 	0012000c push ax
 	00120014 mov mar,0x3cef20
 	00120020 mov ax,mar
 	0012002c push op
 	00120034 mov op,ax
 	0012003c setfuncargs 0x0
 	00120044 mov ax,0x89ef20
 	00120050 farcall ax
 	00120058 pop op
 	00120060 push ax
 	00120068 mov mar,0x936f20
 	00120074 mov ax,mar
 	00120080 pop bx
 	00120088 cmpeq bx,ax
 	00120094 mov ax,bx
 	001200a0 pop bx
 	001200a8 lor bx,ax
 	001200b4 mov ax,bx
		001200c0: FALL_THROUGH

	[001200c0]
		00120004: CONDITIONAL_JUMP
		0012000c: FALL_THROUGH
 	001200c0 jnz 0x0012017c
		0012017c: CONDITIONAL_JUMP
		001200c8: FALL_THROUGH

	[001200c8]
		001200c0: FALL_THROUGH
 	001200c8 push ax
 	001200d0 mov mar,0x3cef20
 	001200dc mov ax,mar
 	001200e8 push op
 	001200f0 mov op,ax
 	001200f8 setfuncargs 0x0
 	00120100 mov ax,0x89ef20
 	0012010c farcall ax
 	00120114 pop op
 	0012011c push ax
 	00120124 mov mar,0x886f20
 	00120130 mov ax,mar
 	0012013c pop bx
 	00120144 cmpeq bx,ax
 	00120150 mov ax,bx
 	0012015c pop bx
 	00120164 lor bx,ax
 	00120170 mov ax,bx
		0012017c: FALL_THROUGH

	[0012017c]
		001200c0: CONDITIONAL_JUMP
		001200c8: FALL_THROUGH
 	0012017c jnz 0x00120238
		00120238: CONDITIONAL_JUMP
		00120184: FALL_THROUGH

	[00120184]
		0012017c: FALL_THROUGH
 	00120184 push ax
 	0012018c mov mar,0x3cef20
 	00120198 mov ax,mar
 	001201a4 push op
 	001201ac mov op,ax
 	001201b4 setfuncargs 0x0
 	001201bc mov ax,0x89ef20
 	001201c8 farcall ax
 	001201d0 pop op
 	001201d8 push ax
 	001201e0 mov mar,0x88ef20
 	001201ec mov ax,mar
 	001201f8 pop bx
 	00120200 cmpeq bx,ax
 	0012020c mov ax,bx
 	00120218 pop bx
 	00120220 lor bx,ax
 	0012022c mov ax,bx
		00120238: FALL_THROUGH

	[00120238]
		0012017c: CONDITIONAL_JUMP
		00120184: FALL_THROUGH
 	00120238 jz 0x00120378
		00120378: CONDITIONAL_JUMP
		00120240: FALL_THROUGH

	[00120240]
		00120238: FALL_THROUGH
 	00120240 sourceline 0x7bd
 	00120248 mov ax,0x1
 	00120254 mov bx,ax
 	00120260 mov mar,0x3cef20
 	0012026c mov ax,mar
 	00120278 push op
 	00120280 mov op,ax
 	00120288 farpush bx
 	00120290 setfuncargs 0x1
 	00120298 mov ax,0x69ef20
 	001202a4 farcall ax
 	001202ac farsubsp 0x1
 	001202b4 pop op
 	001202bc sourceline 0x7be
 	001202c4 push op
 	001202cc mov ax,0x2ba036
 	001202d8 farpush ax
 	001202e0 mov ax,0x138
 	001202ec farpush ax
 	001202f4 mov ax,0x92
 	00120300 farpush ax
 	00120308 mov ax,0x0
 	00120314 farpush ax
 	0012031c mov mar,0x3cef20
 	00120328 mov ax,mar
 	00120334 mov op,ax
 	0012033c setfuncargs 0x4
 	00120344 mov ax,0x6aef20
 	00120350 farcall ax
 	00120358 farsubsp 0x4
 	00120360 pop op
 	00120368 sourceline 0x7bf
 	00120370 jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[00120378]
		00120238: CONDITIONAL_JUMP
 	00120378 sourceline 0x7c1
 	00120380 mov mar,0x3cef20
 	0012038c mov ax,mar
 	00120398 push op
 	001203a0 mov op,ax
 	001203a8 setfuncargs 0x0
 	001203b0 mov ax,0x89ef20
 	001203bc farcall ax
 	001203c4 pop op
 	001203cc push ax
 	001203d4 mov mar,0x956f20
 	001203e0 mov ax,mar
 	001203ec pop bx
 	001203f4 cmpeq bx,ax
 	00120400 mov ax,bx
 	0012040c jnz 0x001204c8
		001204c8: CONDITIONAL_JUMP
		00120414: FALL_THROUGH

	[00120414]
		00120378: FALL_THROUGH
 	00120414 push ax
 	0012041c mov mar,0x3cef20
 	00120428 mov ax,mar
 	00120434 push op
 	0012043c mov op,ax
 	00120444 setfuncargs 0x0
 	0012044c mov ax,0x89ef20
 	00120458 farcall ax
 	00120460 pop op
 	00120468 push ax
 	00120470 mov mar,0x95ef20
 	0012047c mov ax,mar
 	00120488 pop bx
 	00120490 cmpeq bx,ax
 	0012049c mov ax,bx
 	001204a8 pop bx
 	001204b0 lor bx,ax
 	001204bc mov ax,bx
		001204c8: FALL_THROUGH

	[001204c8]
		00120378: CONDITIONAL_JUMP
		00120414: FALL_THROUGH
 	001204c8 jz 0x00120608
		00120608: CONDITIONAL_JUMP
		001204d0: FALL_THROUGH

	[001204d0]
		001204c8: FALL_THROUGH
 	001204d0 sourceline 0x7c3
 	001204d8 mov ax,0x1
 	001204e4 mov bx,ax
 	001204f0 mov mar,0x3cef20
 	001204fc mov ax,mar
 	00120508 push op
 	00120510 mov op,ax
 	00120518 farpush bx
 	00120520 setfuncargs 0x1
 	00120528 mov ax,0x69ef20
 	00120534 farcall ax
 	0012053c farsubsp 0x1
 	00120544 pop op
 	0012054c sourceline 0x7c4
 	00120554 push op
 	0012055c mov ax,0x2ba2b0
 	00120568 farpush ax
 	00120570 mov ax,0x138
 	0012057c farpush ax
 	00120584 mov ax,0x92
 	00120590 farpush ax
 	00120598 mov ax,0x0
 	001205a4 farpush ax
 	001205ac mov mar,0x3cef20
 	001205b8 mov ax,mar
 	001205c4 mov op,ax
 	001205cc setfuncargs 0x4
 	001205d4 mov ax,0x6aef20
 	001205e0 farcall ax
 	001205e8 farsubsp 0x4
 	001205f0 pop op
 	001205f8 sourceline 0x7c5
 	00120600 jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[00120608]
		001204c8: CONDITIONAL_JUMP
 	00120608 sourceline 0x7c7
 	00120610 mov mar,0x3cef20
 	0012061c mov ax,mar
 	00120628 push op
 	00120630 mov op,ax
 	00120638 setfuncargs 0x0
 	00120640 mov ax,0x89ef20
 	0012064c farcall ax
 	00120654 pop op
 	0012065c push ax
 	00120664 mov mar,0x9e6f20
 	00120670 mov ax,mar
 	0012067c pop bx
 	00120684 cmpeq bx,ax
 	00120690 mov ax,bx
 	0012069c jz 0x001207dc
		001207dc: CONDITIONAL_JUMP
		001206a4: FALL_THROUGH

	[001206a4]
		00120608: FALL_THROUGH
 	001206a4 sourceline 0x7c9
 	001206ac mov ax,0x1
 	001206b8 mov bx,ax
 	001206c4 mov mar,0x3cef20
 	001206d0 mov ax,mar
 	001206dc push op
 	001206e4 mov op,ax
 	001206ec farpush bx
 	001206f4 setfuncargs 0x1
 	001206fc mov ax,0x69ef20
 	00120708 farcall ax
 	00120710 farsubsp 0x1
 	00120718 pop op
 	00120720 sourceline 0x7ca
 	00120728 push op
 	00120730 mov ax,0x2b95d0
 	0012073c farpush ax
 	00120744 mov ax,0x138
 	00120750 farpush ax
 	00120758 mov ax,0x92
 	00120764 farpush ax
 	0012076c mov ax,0x0
 	00120778 farpush ax
 	00120780 mov mar,0x3cef20
 	0012078c mov ax,mar
 	00120798 mov op,ax
 	001207a0 setfuncargs 0x4
 	001207a8 mov ax,0x6aef20
 	001207b4 farcall ax
 	001207bc farsubsp 0x4
 	001207c4 pop op
 	001207cc sourceline 0x7cb
 	001207d4 jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[001207dc]
		00120608: CONDITIONAL_JUMP
 	001207dc sourceline 0x7cd
 	001207e4 mov mar,0x3cef20
 	001207f0 mov ax,mar
 	001207fc push op
 	00120804 mov op,ax
 	0012080c setfuncargs 0x0
 	00120814 mov ax,0x89ef20
 	00120820 farcall ax
 	00120828 pop op
 	00120830 push ax
 	00120838 mov mar,0x99ef20
 	00120844 mov ax,mar
 	00120850 pop bx
 	00120858 cmpeq bx,ax
 	00120864 mov ax,bx
 	00120870 jz 0x001209b0
		001209b0: CONDITIONAL_JUMP
		00120878: FALL_THROUGH

	[00120878]
		001207dc: FALL_THROUGH
 	00120878 sourceline 0x7cf
 	00120880 mov ax,0x1
 	0012088c mov bx,ax
 	00120898 mov mar,0x3cef20
 	001208a4 mov ax,mar
 	001208b0 push op
 	001208b8 mov op,ax
 	001208c0 farpush bx
 	001208c8 setfuncargs 0x1
 	001208d0 mov ax,0x69ef20
 	001208dc farcall ax
 	001208e4 farsubsp 0x1
 	001208ec pop op
 	001208f4 sourceline 0x7d0
 	001208fc push op
 	00120904 mov ax,0x2b940a
 	00120910 farpush ax
 	00120918 mov ax,0x138
 	00120924 farpush ax
 	0012092c mov ax,0x92
 	00120938 farpush ax
 	00120940 mov ax,0x0
 	0012094c farpush ax
 	00120954 mov mar,0x3cef20
 	00120960 mov ax,mar
 	0012096c mov op,ax
 	00120974 setfuncargs 0x4
 	0012097c mov ax,0x6aef20
 	00120988 farcall ax
 	00120990 farsubsp 0x4
 	00120998 pop op
 	001209a0 sourceline 0x7d1
 	001209a8 jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[001209b0]
		001207dc: CONDITIONAL_JUMP
 	001209b0 sourceline 0x7d3
 	001209b8 mov mar,0x3cef20
 	001209c4 mov ax,mar
 	001209d0 push op
 	001209d8 mov op,ax
 	001209e0 setfuncargs 0x0
 	001209e8 mov ax,0x89ef20
 	001209f4 farcall ax
 	001209fc pop op
 	00120a04 push ax
 	00120a0c mov mar,0x8cef20
 	00120a18 mov ax,mar
 	00120a24 pop bx
 	00120a2c cmpeq bx,ax
 	00120a38 mov ax,bx
 	00120a44 jz 0x00120b84
		00120b84: CONDITIONAL_JUMP
		00120a4c: FALL_THROUGH

	[00120a4c]
		001209b0: FALL_THROUGH
 	00120a4c sourceline 0x7d5
 	00120a54 mov ax,0x1
 	00120a60 mov bx,ax
 	00120a6c mov mar,0x3cef20
 	00120a78 mov ax,mar
 	00120a84 push op
 	00120a8c mov op,ax
 	00120a94 farpush bx
 	00120a9c setfuncargs 0x1
 	00120aa4 mov ax,0x69ef20
 	00120ab0 farcall ax
 	00120ab8 farsubsp 0x1
 	00120ac0 pop op
 	00120ac8 sourceline 0x7d6
 	00120ad0 push op
 	00120ad8 mov ax,0x2b85d4
 	00120ae4 farpush ax
 	00120aec mov ax,0x138
 	00120af8 farpush ax
 	00120b00 mov ax,0x92
 	00120b0c farpush ax
 	00120b14 mov ax,0x0
 	00120b20 farpush ax
 	00120b28 mov mar,0x3cef20
 	00120b34 mov ax,mar
 	00120b40 mov op,ax
 	00120b48 setfuncargs 0x4
 	00120b50 mov ax,0x6aef20
 	00120b5c farcall ax
 	00120b64 farsubsp 0x4
 	00120b6c pop op
 	00120b74 sourceline 0x7d7
 	00120b7c jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[00120b84]
		001209b0: CONDITIONAL_JUMP
 	00120b84 sourceline 0x7d9
 	00120b8c mov mar,0x3cef20
 	00120b98 mov ax,mar
 	00120ba4 push op
 	00120bac mov op,ax
 	00120bb4 setfuncargs 0x0
 	00120bbc mov ax,0x89ef20
 	00120bc8 farcall ax
 	00120bd0 pop op
 	00120bd8 push ax
 	00120be0 mov mar,0x9eef20
 	00120bec mov ax,mar
 	00120bf8 pop bx
 	00120c00 cmpeq bx,ax
 	00120c0c mov ax,bx
 	00120c18 jz 0x00120d58
		00120d58: CONDITIONAL_JUMP
		00120c20: FALL_THROUGH

	[00120c20]
		00120b84: FALL_THROUGH
 	00120c20 sourceline 0x7db
 	00120c28 mov ax,0x1
 	00120c34 mov bx,ax
 	00120c40 mov mar,0x3cef20
 	00120c4c mov ax,mar
 	00120c58 push op
 	00120c60 mov op,ax
 	00120c68 farpush bx
 	00120c70 setfuncargs 0x1
 	00120c78 mov ax,0x69ef20
 	00120c84 farcall ax
 	00120c8c farsubsp 0x1
 	00120c94 pop op
 	00120c9c sourceline 0x7dc
 	00120ca4 push op
 	00120cac mov ax,0x2ba161
 	00120cb8 farpush ax
 	00120cc0 mov ax,0x138
 	00120ccc farpush ax
 	00120cd4 mov ax,0x92
 	00120ce0 farpush ax
 	00120ce8 mov ax,0x0
 	00120cf4 farpush ax
 	00120cfc mov mar,0x3cef20
 	00120d08 mov ax,mar
 	00120d14 mov op,ax
 	00120d1c setfuncargs 0x4
 	00120d24 mov ax,0x6aef20
 	00120d30 farcall ax
 	00120d38 farsubsp 0x4
 	00120d40 pop op
 	00120d48 sourceline 0x7dd
 	00120d50 jmp 0x00120da8
		00120da8: UNCONDITIONAL_JUMP

	[00120d58]
		00120b84: CONDITIONAL_JUMP
 	00120d58 sourceline 0x7df
 	00120d60 mov ax,0x3
 	00120d6c push ax
 	00120d74 mov ax,0x5
 	00120d80 push ax
 	00120d88 mov ax,0x10ae5c
 	00120d94 call ax
 	00120d9c sub sp,0x8
		00120da8: FALL_THROUGH

	[00120da8]
		0011e6d4: UNCONDITIONAL_JUMP
		0011e780: UNCONDITIONAL_JUMP
		0011eacc: UNCONDITIONAL_JUMP
		0011ed5c: UNCONDITIONAL_JUMP
		0011ef30: UNCONDITIONAL_JUMP
		0011f104: UNCONDITIONAL_JUMP
		0011f394: UNCONDITIONAL_JUMP
		0011f624: UNCONDITIONAL_JUMP
		00120240: UNCONDITIONAL_JUMP
		001204d0: UNCONDITIONAL_JUMP
		001206a4: UNCONDITIONAL_JUMP
		00120878: UNCONDITIONAL_JUMP
		00120a4c: UNCONDITIONAL_JUMP
		00120c20: UNCONDITIONAL_JUMP
		00120d58: FALL_THROUGH
 	00120da8 sourceline 0x7e0
 	00120db0 mov ax,0x0
 	00120dbc ret

iBottleWater_UseInv$0:
	[00120dc0]
 	00120dc0 sourceline 0x7e7
 	00120dc8 thisaddr
 	00120dd0 sourceline 0x7e8
*	00120dd8 mov mar,0x3cef20
 	00120de4 mov ax,mar
 	00120df0 push op
 	00120df8 mov op,ax
 	00120e00 setfuncargs 0x0
 	00120e08 mov ax,0x89ef20
 	00120e14 farcall ax
 	00120e1c pop op
 	00120e24 push ax
 	00120e2c mov mar,0x8cef20
 	00120e38 mov ax,mar
 	00120e44 pop bx
 	00120e4c cmpeq bx,ax
 	00120e58 mov ax,bx
 	00120e64 jnz 0x00120f20
		00120f20: CONDITIONAL_JUMP
		00120e6c: FALL_THROUGH

	[00120e6c]
		00120dc0: FALL_THROUGH
 	00120e6c push ax
 	00120e74 mov mar,0x3cef20
 	00120e80 mov ax,mar
 	00120e8c push op
 	00120e94 mov op,ax
 	00120e9c setfuncargs 0x0
 	00120ea4 mov ax,0x89ef20
 	00120eb0 farcall ax
 	00120eb8 pop op
 	00120ec0 push ax
 	00120ec8 mov mar,0x8d6f20
 	00120ed4 mov ax,mar
 	00120ee0 pop bx
 	00120ee8 cmpeq bx,ax
 	00120ef4 mov ax,bx
 	00120f00 pop bx
 	00120f08 lor bx,ax
 	00120f14 mov ax,bx
		00120f20: FALL_THROUGH

	[00120f20]
		00120dc0: CONDITIONAL_JUMP
		00120e6c: FALL_THROUGH
 	00120f20 jnz 0x00120fdc
		00120fdc: CONDITIONAL_JUMP
		00120f28: FALL_THROUGH

	[00120f28]
		00120f20: FALL_THROUGH
 	00120f28 push ax
 	00120f30 mov mar,0x3cef20
 	00120f3c mov ax,mar
 	00120f48 push op
 	00120f50 mov op,ax
 	00120f58 setfuncargs 0x0
 	00120f60 mov ax,0x89ef20
 	00120f6c farcall ax
 	00120f74 pop op
 	00120f7c push ax
 	00120f84 mov mar,0x8b6f20
 	00120f90 mov ax,mar
 	00120f9c pop bx
 	00120fa4 cmpeq bx,ax
 	00120fb0 mov ax,bx
 	00120fbc pop bx
 	00120fc4 lor bx,ax
 	00120fd0 mov ax,bx
		00120fdc: FALL_THROUGH

	[00120fdc]
		00120f20: CONDITIONAL_JUMP
		00120f28: FALL_THROUGH
 	00120fdc jnz 0x00121098
		00121098: CONDITIONAL_JUMP
		00120fe4: FALL_THROUGH

	[00120fe4]
		00120fdc: FALL_THROUGH
 	00120fe4 push ax
 	00120fec mov mar,0x3cef20
 	00120ff8 mov ax,mar
 	00121004 push op
 	0012100c mov op,ax
 	00121014 setfuncargs 0x0
 	0012101c mov ax,0x89ef20
 	00121028 farcall ax
 	00121030 pop op
 	00121038 push ax
 	00121040 mov mar,0x8bef20
 	0012104c mov ax,mar
 	00121058 pop bx
 	00121060 cmpeq bx,ax
 	0012106c mov ax,bx
 	00121078 pop bx
 	00121080 lor bx,ax
 	0012108c mov ax,bx
		00121098: FALL_THROUGH

	[00121098]
		00120fdc: CONDITIONAL_JUMP
		00120fe4: FALL_THROUGH
 	00121098 jnz 0x00121154
		00121154: CONDITIONAL_JUMP
		001210a0: FALL_THROUGH

	[001210a0]
		00121098: FALL_THROUGH
 	001210a0 push ax
 	001210a8 mov mar,0x3cef20
 	001210b4 mov ax,mar
 	001210c0 push op
 	001210c8 mov op,ax
 	001210d0 setfuncargs 0x0
 	001210d8 mov ax,0x89ef20
 	001210e4 farcall ax
 	001210ec pop op
 	001210f4 push ax
 	001210fc mov mar,0x8def20
 	00121108 mov ax,mar
 	00121114 pop bx
 	0012111c cmpeq bx,ax
 	00121128 mov ax,bx
 	00121134 pop bx
 	0012113c lor bx,ax
 	00121148 mov ax,bx
		00121154: FALL_THROUGH

	[00121154]
		00121098: CONDITIONAL_JUMP
		001210a0: FALL_THROUGH
 	00121154 jnz 0x00121210
		00121210: CONDITIONAL_JUMP
		0012115c: FALL_THROUGH

	[0012115c]
		00121154: FALL_THROUGH
 	0012115c push ax
 	00121164 mov mar,0x3cef20
 	00121170 mov ax,mar
 	0012117c push op
 	00121184 mov op,ax
 	0012118c setfuncargs 0x0
 	00121194 mov ax,0x89ef20
 	001211a0 farcall ax
 	001211a8 pop op
 	001211b0 push ax
 	001211b8 mov mar,0x8aef20
 	001211c4 mov ax,mar
 	001211d0 pop bx
 	001211d8 cmpeq bx,ax
 	001211e4 mov ax,bx
 	001211f0 pop bx
 	001211f8 lor bx,ax
 	00121204 mov ax,bx
		00121210: FALL_THROUGH

	[00121210]
		00121154: CONDITIONAL_JUMP
		0012115c: FALL_THROUGH
 	00121210 jnz 0x001212cc
		001212cc: CONDITIONAL_JUMP
		00121218: FALL_THROUGH

	[00121218]
		00121210: FALL_THROUGH
 	00121218 push ax
 	00121220 mov mar,0x3cef20
 	0012122c mov ax,mar
 	00121238 push op
 	00121240 mov op,ax
 	00121248 setfuncargs 0x0
 	00121250 mov ax,0x89ef20
 	0012125c farcall ax
 	00121264 pop op
 	0012126c push ax
 	00121274 mov mar,0x8fef20
 	00121280 mov ax,mar
 	0012128c pop bx
 	00121294 cmpeq bx,ax
 	001212a0 mov ax,bx
 	001212ac pop bx
 	001212b4 lor bx,ax
 	001212c0 mov ax,bx
		001212cc: FALL_THROUGH

	[001212cc]
		00121210: CONDITIONAL_JUMP
		00121218: FALL_THROUGH
 	001212cc jnz 0x00121388
		00121388: CONDITIONAL_JUMP
		001212d4: FALL_THROUGH

	[001212d4]
		001212cc: FALL_THROUGH
 	001212d4 push ax
 	001212dc mov mar,0x3cef20
 	001212e8 mov ax,mar
 	001212f4 push op
 	001212fc mov op,ax
 	00121304 setfuncargs 0x0
 	0012130c mov ax,0x89ef20
 	00121318 farcall ax
 	00121320 pop op
 	00121328 push ax
 	00121330 mov mar,0x976f20
 	0012133c mov ax,mar
 	00121348 pop bx
 	00121350 cmpeq bx,ax
 	0012135c mov ax,bx
 	00121368 pop bx
 	00121370 lor bx,ax
 	0012137c mov ax,bx
		00121388: FALL_THROUGH

	[00121388]
		001212cc: CONDITIONAL_JUMP
		001212d4: FALL_THROUGH
 	00121388 jnz 0x00121444
		00121444: CONDITIONAL_JUMP
		00121390: FALL_THROUGH

	[00121390]
		00121388: FALL_THROUGH
 	00121390 push ax
 	00121398 mov mar,0x3cef20
 	001213a4 mov ax,mar
 	001213b0 push op
 	001213b8 mov op,ax
 	001213c0 setfuncargs 0x0
 	001213c8 mov ax,0x89ef20
 	001213d4 farcall ax
 	001213dc pop op
 	001213e4 push ax
 	001213ec mov mar,0x846f20
 	001213f8 mov ax,mar
 	00121404 pop bx
 	0012140c cmpeq bx,ax
 	00121418 mov ax,bx
 	00121424 pop bx
 	0012142c lor bx,ax
 	00121438 mov ax,bx
		00121444: FALL_THROUGH

	[00121444]
		00121388: CONDITIONAL_JUMP
		00121390: FALL_THROUGH
 	00121444 jnz 0x00121500
		00121500: CONDITIONAL_JUMP
		0012144c: FALL_THROUGH

	[0012144c]
		00121444: FALL_THROUGH
 	0012144c push ax
 	00121454 mov mar,0x3cef20
 	00121460 mov ax,mar
 	0012146c push op
 	00121474 mov op,ax
 	0012147c setfuncargs 0x0
 	00121484 mov ax,0x89ef20
 	00121490 farcall ax
 	00121498 pop op
 	001214a0 push ax
 	001214a8 mov mar,0x916f20
 	001214b4 mov ax,mar
 	001214c0 pop bx
 	001214c8 cmpeq bx,ax
 	001214d4 mov ax,bx
 	001214e0 pop bx
 	001214e8 lor bx,ax
 	001214f4 mov ax,bx
		00121500: FALL_THROUGH

	[00121500]
		00121444: CONDITIONAL_JUMP
		0012144c: FALL_THROUGH
 	00121500 jnz 0x001215bc
		001215bc: CONDITIONAL_JUMP
		00121508: FALL_THROUGH

	[00121508]
		00121500: FALL_THROUGH
 	00121508 push ax
 	00121510 mov mar,0x3cef20
 	0012151c mov ax,mar
 	00121528 push op
 	00121530 mov op,ax
 	00121538 setfuncargs 0x0
 	00121540 mov ax,0x89ef20
 	0012154c farcall ax
 	00121554 pop op
 	0012155c push ax
 	00121564 mov mar,0x926f20
 	00121570 mov ax,mar
 	0012157c pop bx
 	00121584 cmpeq bx,ax
 	00121590 mov ax,bx
 	0012159c pop bx
 	001215a4 lor bx,ax
 	001215b0 mov ax,bx
		001215bc: FALL_THROUGH

	[001215bc]
		00121500: CONDITIONAL_JUMP
		00121508: FALL_THROUGH
 	001215bc jnz 0x00121678
		00121678: CONDITIONAL_JUMP
		001215c4: FALL_THROUGH

	[001215c4]
		001215bc: FALL_THROUGH
 	001215c4 push ax
 	001215cc mov mar,0x3cef20
 	001215d8 mov ax,mar
 	001215e4 push op
 	001215ec mov op,ax
 	001215f4 setfuncargs 0x0
 	001215fc mov ax,0x89ef20
 	00121608 farcall ax
 	00121610 pop op
 	00121618 push ax
 	00121620 mov mar,0x92ef20
 	0012162c mov ax,mar
 	00121638 pop bx
 	00121640 cmpeq bx,ax
 	0012164c mov ax,bx
 	00121658 pop bx
 	00121660 lor bx,ax
 	0012166c mov ax,bx
		00121678: FALL_THROUGH

	[00121678]
		001215bc: CONDITIONAL_JUMP
		001215c4: FALL_THROUGH
 	00121678 jnz 0x00121734
		00121734: CONDITIONAL_JUMP
		00121680: FALL_THROUGH

	[00121680]
		00121678: FALL_THROUGH
 	00121680 push ax
 	00121688 mov mar,0x3cef20
 	00121694 mov ax,mar
 	001216a0 push op
 	001216a8 mov op,ax
 	001216b0 setfuncargs 0x0
 	001216b8 mov ax,0x89ef20
 	001216c4 farcall ax
 	001216cc pop op
 	001216d4 push ax
 	001216dc mov mar,0x946f20
 	001216e8 mov ax,mar
 	001216f4 pop bx
 	001216fc cmpeq bx,ax
 	00121708 mov ax,bx
 	00121714 pop bx
 	0012171c lor bx,ax
 	00121728 mov ax,bx
		00121734: FALL_THROUGH

	[00121734]
		00121678: CONDITIONAL_JUMP
		00121680: FALL_THROUGH
 	00121734 jnz 0x001217f0
		001217f0: CONDITIONAL_JUMP
		0012173c: FALL_THROUGH

	[0012173c]
		00121734: FALL_THROUGH
 	0012173c push ax
 	00121744 mov mar,0x3cef20
 	00121750 mov ax,mar
 	0012175c push op
 	00121764 mov op,ax
 	0012176c setfuncargs 0x0
 	00121774 mov ax,0x89ef20
 	00121780 farcall ax
 	00121788 pop op
 	00121790 push ax
 	00121798 mov mar,0x956f20
 	001217a4 mov ax,mar
 	001217b0 pop bx
 	001217b8 cmpeq bx,ax
 	001217c4 mov ax,bx
 	001217d0 pop bx
 	001217d8 lor bx,ax
 	001217e4 mov ax,bx
		001217f0: FALL_THROUGH

	[001217f0]
		00121734: CONDITIONAL_JUMP
		0012173c: FALL_THROUGH
 	001217f0 jnz 0x001218ac
		001218ac: CONDITIONAL_JUMP
		001217f8: FALL_THROUGH

	[001217f8]
		001217f0: FALL_THROUGH
 	001217f8 push ax
 	00121800 mov mar,0x3cef20
 	0012180c mov ax,mar
 	00121818 push op
 	00121820 mov op,ax
 	00121828 setfuncargs 0x0
 	00121830 mov ax,0x89ef20
 	0012183c farcall ax
 	00121844 pop op
 	0012184c push ax
 	00121854 mov mar,0x886f20
 	00121860 mov ax,mar
 	0012186c pop bx
 	00121874 cmpeq bx,ax
 	00121880 mov ax,bx
 	0012188c pop bx
 	00121894 lor bx,ax
 	001218a0 mov ax,bx
		001218ac: FALL_THROUGH

	[001218ac]
		001217f0: CONDITIONAL_JUMP
		001217f8: FALL_THROUGH
 	001218ac jnz 0x00121968
		00121968: CONDITIONAL_JUMP
		001218b4: FALL_THROUGH

	[001218b4]
		001218ac: FALL_THROUGH
 	001218b4 push ax
 	001218bc mov mar,0x3cef20
 	001218c8 mov ax,mar
 	001218d4 push op
 	001218dc mov op,ax
 	001218e4 setfuncargs 0x0
 	001218ec mov ax,0x89ef20
 	001218f8 farcall ax
 	00121900 pop op
 	00121908 push ax
 	00121910 mov mar,0x966f20
 	0012191c mov ax,mar
 	00121928 pop bx
 	00121930 cmpeq bx,ax
 	0012193c mov ax,bx
 	00121948 pop bx
 	00121950 lor bx,ax
 	0012195c mov ax,bx
		00121968: FALL_THROUGH

	[00121968]
		001218ac: CONDITIONAL_JUMP
		001218b4: FALL_THROUGH
 	00121968 jz 0x00121aa8
		00121aa8: CONDITIONAL_JUMP
		00121970: FALL_THROUGH

	[00121970]
		00121968: FALL_THROUGH
 	00121970 sourceline 0x7f1
 	00121978 mov ax,0x1
 	00121984 mov bx,ax
 	00121990 mov mar,0x3cef20
 	0012199c mov ax,mar
 	001219a8 push op
 	001219b0 mov op,ax
 	001219b8 farpush bx
 	001219c0 setfuncargs 0x1
 	001219c8 mov ax,0x69ef20
 	001219d4 farcall ax
 	001219dc farsubsp 0x1
 	001219e4 pop op
 	001219ec sourceline 0x7f2
 	001219f4 push op
 	001219fc mov ax,0x2b80bb
 	00121a08 farpush ax
 	00121a10 mov ax,0x138
 	00121a1c farpush ax
 	00121a24 mov ax,0x92
 	00121a30 farpush ax
 	00121a38 mov ax,0x0
 	00121a44 farpush ax
 	00121a4c mov mar,0x3cef20
 	00121a58 mov ax,mar
 	00121a64 mov op,ax
 	00121a6c setfuncargs 0x4
 	00121a74 mov ax,0x6aef20
 	00121a80 farcall ax
 	00121a88 farsubsp 0x4
 	00121a90 pop op
 	00121a98 sourceline 0x7f3
 	00121aa0 jmp 0x00122884
		00122884: UNCONDITIONAL_JUMP

	[00121aa8]
		00121968: CONDITIONAL_JUMP
 	00121aa8 sourceline 0x7f5
 	00121ab0 mov mar,0x3cef20
 	00121abc mov ax,mar
 	00121ac8 push op
 	00121ad0 mov op,ax
 	00121ad8 setfuncargs 0x0
 	00121ae0 mov ax,0x89ef20
 	00121aec farcall ax
 	00121af4 pop op
 	00121afc push ax
 	00121b04 mov mar,0x7def20
 	00121b10 mov ax,mar
 	00121b1c pop bx
 	00121b24 cmpeq bx,ax
 	00121b30 mov ax,bx
 	00121b3c jnz 0x00121bf8
		00121bf8: CONDITIONAL_JUMP
		00121b44: FALL_THROUGH

	[00121b44]
		00121aa8: FALL_THROUGH
 	00121b44 push ax
 	00121b4c mov mar,0x3cef20
 	00121b58 mov ax,mar
 	00121b64 push op
 	00121b6c mov op,ax
 	00121b74 setfuncargs 0x0
 	00121b7c mov ax,0x89ef20
 	00121b88 farcall ax
 	00121b90 pop op
 	00121b98 push ax
 	00121ba0 mov mar,0x8eef20
 	00121bac mov ax,mar
 	00121bb8 pop bx
 	00121bc0 cmpeq bx,ax
 	00121bcc mov ax,bx
 	00121bd8 pop bx
 	00121be0 lor bx,ax
 	00121bec mov ax,bx
		00121bf8: FALL_THROUGH

	[00121bf8]
		00121aa8: CONDITIONAL_JUMP
		00121b44: FALL_THROUGH
 	00121bf8 jnz 0x00121cb4
		00121cb4: CONDITIONAL_JUMP
		00121c00: FALL_THROUGH

	[00121c00]
		00121bf8: FALL_THROUGH
 	00121c00 push ax
 	00121c08 mov mar,0x3cef20
 	00121c14 mov ax,mar
 	00121c20 push op
 	00121c28 mov op,ax
 	00121c30 setfuncargs 0x0
 	00121c38 mov ax,0x89ef20
 	00121c44 farcall ax
 	00121c4c pop op
 	00121c54 push ax
 	00121c5c mov mar,0x8f6f20
 	00121c68 mov ax,mar
 	00121c74 pop bx
 	00121c7c cmpeq bx,ax
 	00121c88 mov ax,bx
 	00121c94 pop bx
 	00121c9c lor bx,ax
 	00121ca8 mov ax,bx
		00121cb4: FALL_THROUGH

	[00121cb4]
		00121bf8: CONDITIONAL_JUMP
		00121c00: FALL_THROUGH
 	00121cb4 jnz 0x00121d70
		00121d70: CONDITIONAL_JUMP
		00121cbc: FALL_THROUGH

	[00121cbc]
		00121cb4: FALL_THROUGH
 	00121cbc push ax
 	00121cc4 mov mar,0x3cef20
 	00121cd0 mov ax,mar
 	00121cdc push op
 	00121ce4 mov op,ax
 	00121cec setfuncargs 0x0
 	00121cf4 mov ax,0x89ef20
 	00121d00 farcall ax
 	00121d08 pop op
 	00121d10 push ax
 	00121d18 mov mar,0x90ef20
 	00121d24 mov ax,mar
 	00121d30 pop bx
 	00121d38 cmpeq bx,ax
 	00121d44 mov ax,bx
 	00121d50 pop bx
 	00121d58 lor bx,ax
 	00121d64 mov ax,bx
		00121d70: FALL_THROUGH

	[00121d70]
		00121cb4: CONDITIONAL_JUMP
		00121cbc: FALL_THROUGH
 	00121d70 jnz 0x00121e2c
		00121e2c: CONDITIONAL_JUMP
		00121d78: FALL_THROUGH

	[00121d78]
		00121d70: FALL_THROUGH
 	00121d78 push ax
 	00121d80 mov mar,0x3cef20
 	00121d8c mov ax,mar
 	00121d98 push op
 	00121da0 mov op,ax
 	00121da8 setfuncargs 0x0
 	00121db0 mov ax,0x89ef20
 	00121dbc farcall ax
 	00121dc4 pop op
 	00121dcc push ax
 	00121dd4 mov mar,0x936f20
 	00121de0 mov ax,mar
 	00121dec pop bx
 	00121df4 cmpeq bx,ax
 	00121e00 mov ax,bx
 	00121e0c pop bx
 	00121e14 lor bx,ax
 	00121e20 mov ax,bx
		00121e2c: FALL_THROUGH

	[00121e2c]
		00121d70: CONDITIONAL_JUMP
		00121d78: FALL_THROUGH
 	00121e2c jnz 0x00121ee8
		00121ee8: CONDITIONAL_JUMP
		00121e34: FALL_THROUGH

	[00121e34]
		00121e2c: FALL_THROUGH
 	00121e34 push ax
 	00121e3c mov mar,0x3cef20
 	00121e48 mov ax,mar
 	00121e54 push op
 	00121e5c mov op,ax
 	00121e64 setfuncargs 0x0
 	00121e6c mov ax,0x89ef20
 	00121e78 farcall ax
 	00121e80 pop op
 	00121e88 push ax
 	00121e90 mov mar,0x95ef20
 	00121e9c mov ax,mar
 	00121ea8 pop bx
 	00121eb0 cmpeq bx,ax
 	00121ebc mov ax,bx
 	00121ec8 pop bx
 	00121ed0 lor bx,ax
 	00121edc mov ax,bx
		00121ee8: FALL_THROUGH

	[00121ee8]
		00121e2c: CONDITIONAL_JUMP
		00121e34: FALL_THROUGH
 	00121ee8 jnz 0x00121fa4
		00121fa4: CONDITIONAL_JUMP
		00121ef0: FALL_THROUGH

	[00121ef0]
		00121ee8: FALL_THROUGH
 	00121ef0 push ax
 	00121ef8 mov mar,0x3cef20
 	00121f04 mov ax,mar
 	00121f10 push op
 	00121f18 mov op,ax
 	00121f20 setfuncargs 0x0
 	00121f28 mov ax,0x89ef20
 	00121f34 farcall ax
 	00121f3c pop op
 	00121f44 push ax
 	00121f4c mov mar,0x88ef20
 	00121f58 mov ax,mar
 	00121f64 pop bx
 	00121f6c cmpeq bx,ax
 	00121f78 mov ax,bx
 	00121f84 pop bx
 	00121f8c lor bx,ax
 	00121f98 mov ax,bx
		00121fa4: FALL_THROUGH

	[00121fa4]
		00121ee8: CONDITIONAL_JUMP
		00121ef0: FALL_THROUGH
 	00121fa4 jz 0x001220e4
		001220e4: CONDITIONAL_JUMP
		00121fac: FALL_THROUGH

	[00121fac]
		00121fa4: FALL_THROUGH
 	00121fac sourceline 0x7f9
 	00121fb4 mov ax,0x1
 	00121fc0 mov bx,ax
 	00121fcc mov mar,0x3cef20
 	00121fd8 mov ax,mar
 	00121fe4 push op
 	00121fec mov op,ax
 	00121ff4 farpush bx
 	00121ffc setfuncargs 0x1
 	00122004 mov ax,0x69ef20
 	00122010 farcall ax
 	00122018 farsubsp 0x1
 	00122020 pop op
 	00122028 sourceline 0x7fa
 	00122030 push op
 	00122038 mov ax,0x2b9b31
 	00122044 farpush ax
 	0012204c mov ax,0x138
 	00122058 farpush ax
 	00122060 mov ax,0x92
 	0012206c farpush ax
 	00122074 mov ax,0x0
 	00122080 farpush ax
 	00122088 mov mar,0x3cef20
 	00122094 mov ax,mar
 	001220a0 mov op,ax
 	001220a8 setfuncargs 0x4
 	001220b0 mov ax,0x6aef20
 	001220bc farcall ax
 	001220c4 farsubsp 0x4
 	001220cc pop op
 	001220d4 sourceline 0x7fb
 	001220dc jmp 0x00122884
		00122884: UNCONDITIONAL_JUMP

	[001220e4]
		00121fa4: CONDITIONAL_JUMP
 	001220e4 sourceline 0x7fd
 	001220ec mov mar,0x3cef20
 	001220f8 mov ax,mar
 	00122104 push op
 	0012210c mov op,ax
 	00122114 setfuncargs 0x0
 	0012211c mov ax,0x89ef20
 	00122128 farcall ax
 	00122130 pop op
 	00122138 push ax
 	00122140 mov mar,0x8c6f20
 	0012214c mov ax,mar
 	00122158 pop bx
 	00122160 cmpeq bx,ax
 	0012216c mov ax,bx
 	00122178 jz 0x001222b8
		001222b8: CONDITIONAL_JUMP
		00122180: FALL_THROUGH

	[00122180]
		001220e4: FALL_THROUGH
 	00122180 sourceline 0x7ff
 	00122188 mov ax,0x1
 	00122194 mov bx,ax
 	001221a0 mov mar,0x3cef20
 	001221ac mov ax,mar
 	001221b8 push op
 	001221c0 mov op,ax
 	001221c8 farpush bx
 	001221d0 setfuncargs 0x1
 	001221d8 mov ax,0x69ef20
 	001221e4 farcall ax
 	001221ec farsubsp 0x1
 	001221f4 pop op
 	001221fc sourceline 0x800
 	00122204 push op
 	0012220c mov ax,0x2ba52f
 	00122218 farpush ax
 	00122220 mov ax,0x138
 	0012222c farpush ax
 	00122234 mov ax,0x92
 	00122240 farpush ax
 	00122248 mov ax,0x0
 	00122254 farpush ax
 	0012225c mov mar,0x3cef20
 	00122268 mov ax,mar
 	00122274 mov op,ax
 	0012227c setfuncargs 0x4
 	00122284 mov ax,0x6aef20
 	00122290 farcall ax
 	00122298 farsubsp 0x4
 	001222a0 pop op
 	001222a8 sourceline 0x801
 	001222b0 jmp 0x00122884
		00122884: UNCONDITIONAL_JUMP

	[001222b8]
		001220e4: CONDITIONAL_JUMP
 	001222b8 sourceline 0x803
 	001222c0 mov mar,0x3cef20
 	001222cc mov ax,mar
 	001222d8 push op
 	001222e0 mov op,ax
 	001222e8 setfuncargs 0x0
 	001222f0 mov ax,0x89ef20
 	001222fc farcall ax
 	00122304 pop op
 	0012230c push ax
 	00122314 mov mar,0x8e6f20
 	00122320 mov ax,mar
 	0012232c pop bx
 	00122334 cmpeq bx,ax
 	00122340 mov ax,bx
 	0012234c jz 0x0012248c
		0012248c: CONDITIONAL_JUMP
		00122354: FALL_THROUGH

	[00122354]
		001222b8: FALL_THROUGH
 	00122354 sourceline 0x805
 	0012235c mov ax,0x1
 	00122368 mov bx,ax
 	00122374 mov mar,0x3cef20
 	00122380 mov ax,mar
 	0012238c push op
 	00122394 mov op,ax
 	0012239c farpush bx
 	001223a4 setfuncargs 0x1
 	001223ac mov ax,0x69ef20
 	001223b8 farcall ax
 	001223c0 farsubsp 0x1
 	001223c8 pop op
 	001223d0 sourceline 0x806
 	001223d8 push op
 	001223e0 mov ax,0x2b9daa
 	001223ec farpush ax
 	001223f4 mov ax,0x138
 	00122400 farpush ax
 	00122408 mov ax,0x92
 	00122414 farpush ax
 	0012241c mov ax,0x0
 	00122428 farpush ax
 	00122430 mov mar,0x3cef20
 	0012243c mov ax,mar
 	00122448 mov op,ax
 	00122450 setfuncargs 0x4
 	00122458 mov ax,0x6aef20
 	00122464 farcall ax
 	0012246c farsubsp 0x4
 	00122474 pop op
 	0012247c sourceline 0x807
 	00122484 jmp 0x00122884
		00122884: UNCONDITIONAL_JUMP

	[0012248c]
		001222b8: CONDITIONAL_JUMP
 	0012248c sourceline 0x809
 	00122494 mov mar,0x3cef20
 	001224a0 mov ax,mar
 	001224ac push op
 	001224b4 mov op,ax
 	001224bc setfuncargs 0x0
 	001224c4 mov ax,0x89ef20
 	001224d0 farcall ax
 	001224d8 pop op
 	001224e0 push ax
 	001224e8 mov mar,0x906f20
 	001224f4 mov ax,mar
 	00122500 pop bx
 	00122508 cmpeq bx,ax
 	00122514 mov ax,bx
 	00122520 jz 0x00122660
		00122660: CONDITIONAL_JUMP
		00122528: FALL_THROUGH

	[00122528]
		0012248c: FALL_THROUGH
 	00122528 sourceline 0x80b
 	00122530 mov ax,0x1
 	0012253c mov bx,ax
 	00122548 mov mar,0x3cef20
 	00122554 mov ax,mar
 	00122560 push op
 	00122568 mov op,ax
 	00122570 farpush bx
 	00122578 setfuncargs 0x1
 	00122580 mov ax,0x69ef20
 	0012258c farcall ax
 	00122594 farsubsp 0x1
 	0012259c pop op
 	001225a4 sourceline 0x80c
 	001225ac push op
 	001225b4 mov ax,0x2ba4bb
 	001225c0 farpush ax
 	001225c8 mov ax,0x138
 	001225d4 farpush ax
 	001225dc mov ax,0x92
 	001225e8 farpush ax
 	001225f0 mov ax,0x0
 	001225fc farpush ax
 	00122604 mov mar,0x3cef20
 	00122610 mov ax,mar
 	0012261c mov op,ax
 	00122624 setfuncargs 0x4
 	0012262c mov ax,0x6aef20
 	00122638 farcall ax
 	00122640 farsubsp 0x4
 	00122648 pop op
 	00122650 sourceline 0x80d
 	00122658 jmp 0x00122884
		00122884: UNCONDITIONAL_JUMP

	[00122660]
		0012248c: CONDITIONAL_JUMP
 	00122660 sourceline 0x80f
 	00122668 mov mar,0x3cef20
 	00122674 mov ax,mar
 	00122680 push op
 	00122688 mov op,ax
 	00122690 setfuncargs 0x0
 	00122698 mov ax,0x89ef20
 	001226a4 farcall ax
 	001226ac pop op
 	001226b4 push ax
 	001226bc mov mar,0x96ef20
 	001226c8 mov ax,mar
 	001226d4 pop bx
 	001226dc cmpeq bx,ax
 	001226e8 mov ax,bx
 	001226f4 jz 0x00122834
		00122834: CONDITIONAL_JUMP
		001226fc: FALL_THROUGH

	[001226fc]
		00122660: FALL_THROUGH
 	001226fc sourceline 0x811
 	00122704 mov ax,0x1
 	00122710 mov bx,ax
 	0012271c mov mar,0x3cef20
 	00122728 mov ax,mar
 	00122734 push op
 	0012273c mov op,ax
 	00122744 farpush bx
 	0012274c setfuncargs 0x1
 	00122754 mov ax,0x69ef20
 	00122760 farcall ax
 	00122768 farsubsp 0x1
 	00122770 pop op
 	00122778 sourceline 0x812
 	00122780 push op
 	00122788 mov ax,0x2b81dc
 	00122794 farpush ax
 	0012279c mov ax,0x138
 	001227a8 farpush ax
 	001227b0 mov ax,0x92
 	001227bc farpush ax
 	001227c4 mov ax,0x0
 	001227d0 farpush ax
 	001227d8 mov mar,0x3cef20
 	001227e4 mov ax,mar
 	001227f0 mov op,ax
 	001227f8 setfuncargs 0x4
 	00122800 mov ax,0x6aef20
 	0012280c farcall ax
 	00122814 farsubsp 0x4
 	0012281c pop op
 	00122824 sourceline 0x813
 	0012282c jmp 0x00122884
		00122884: UNCONDITIONAL_JUMP

	[00122834]
		00122660: CONDITIONAL_JUMP
 	00122834 sourceline 0x815
 	0012283c mov ax,0x3
 	00122848 push ax
 	00122850 mov ax,0x5
 	0012285c push ax
 	00122864 mov ax,0x10ae5c
 	00122870 call ax
 	00122878 sub sp,0x8
		00122884: FALL_THROUGH

	[00122884]
		00121970: UNCONDITIONAL_JUMP
		00121fac: UNCONDITIONAL_JUMP
		00122180: UNCONDITIONAL_JUMP
		00122354: UNCONDITIONAL_JUMP
		00122528: UNCONDITIONAL_JUMP
		001226fc: UNCONDITIONAL_JUMP
		00122834: FALL_THROUGH
 	00122884 sourceline 0x816
 	0012288c mov ax,0x0
 	00122898 ret

iBrush_UseInv$0:
	[0012289c]
 	0012289c sourceline 0x81c
 	001228a4 thisaddr
 	001228ac sourceline 0x81d
*	001228b4 mov mar,0x3cef20
 	001228c0 mov ax,mar
 	001228cc push op
 	001228d4 mov op,ax
 	001228dc setfuncargs 0x0
 	001228e4 mov ax,0x89ef20
 	001228f0 farcall ax
 	001228f8 pop op
 	00122900 push ax
 	00122908 mov mar,0x8b6f20
 	00122914 mov ax,mar
 	00122920 pop bx
 	00122928 cmpeq bx,ax
 	00122934 mov ax,bx
 	00122940 jz 0x00122e48
		00122e48: CONDITIONAL_JUMP
		00122948: FALL_THROUGH

	[00122948]
		0012289c: FALL_THROUGH
 	00122948 sourceline 0x81f
 	00122950 push op
 	00122958 mov mar,0x8def20
 	00122964 mov ax,mar
 	00122970 farpush ax
 	00122978 mov mar,0x3cef20
 	00122984 mov ax,mar
 	00122990 mov op,ax
 	00122998 setfuncargs 0x1
 	001229a0 mov ax,0x996f20
 	001229ac farcall ax
 	001229b4 farsubsp 0x1
 	001229bc pop op
 	001229c4 jz 0x00122d10
		00122d10: CONDITIONAL_JUMP
		001229cc: FALL_THROUGH

	[001229cc]
		00122948: FALL_THROUGH
 	001229cc sourceline 0x821
 	001229d4 mov ax,0x1
 	001229e0 mov bx,ax
 	001229ec mov mar,0x3cef20
 	001229f8 mov ax,mar
 	00122a04 push op
 	00122a0c mov op,ax
 	00122a14 farpush bx
 	00122a1c setfuncargs 0x1
 	00122a24 mov ax,0x69ef20
 	00122a30 farcall ax
 	00122a38 farsubsp 0x1
 	00122a40 pop op
 	00122a48 sourceline 0x822
 	00122a50 push op
 	00122a58 mov mar,0x98ef20
 	00122a64 mov ax,mar
 	00122a70 farpush ax
 	00122a78 mov mar,0x3cef20
 	00122a84 mov ax,mar
 	00122a90 mov op,ax
 	00122a98 setfuncargs 0x1
 	00122aa0 mov ax,0x7d6f20
 	00122aac farcall ax
 	00122ab4 farsubsp 0x1
 	00122abc pop op
 	00122ac4 sourceline 0x823
 	00122acc push op
 	00122ad4 mov ax,0x7cfe
 	00122ae0 farpush ax
 	00122ae8 mov mar,0x99ef20
 	00122af4 mov ax,mar
 	00122b00 farpush ax
 	00122b08 mov mar,0x3cef20
 	00122b14 mov ax,mar
 	00122b20 mov op,ax
 	00122b28 setfuncargs 0x2
 	00122b30 mov ax,0x7e6f20
 	00122b3c farcall ax
 	00122b44 farsubsp 0x2
 	00122b4c pop op
 	00122b54 sourceline 0x824
 	00122b5c push op
 	00122b64 mov ax,0x0
 	00122b70 farpush ax
 	00122b78 mov ax,0x32
 	00122b84 farpush ax
 	00122b8c mov mar,0x9a6f20
 	00122b98 mov ax,mar
 	00122ba4 mov op,ax
 	00122bac setfuncargs 0x2
 	00122bb4 mov ax,0x2fef20
 	00122bc0 farcall ax
 	00122bc8 farsubsp 0x2
 	00122bd0 pop op
 	00122bd8 sourceline 0x825
 	00122be0 push op
 	00122be8 mov ax,0x2b81fd
 	00122bf4 farpush ax
 	00122bfc mov ax,0x138
 	00122c08 farpush ax
 	00122c10 mov ax,0x92
 	00122c1c farpush ax
 	00122c24 mov ax,0x0
 	00122c30 farpush ax
 	00122c38 mov mar,0x3cef20
 	00122c44 mov ax,mar
 	00122c50 mov op,ax
 	00122c58 setfuncargs 0x4
 	00122c60 mov ax,0x6aef20
 	00122c6c farcall ax
 	00122c74 farsubsp 0x4
 	00122c7c pop op
 	00122c84 sourceline 0x826
 	00122c8c mov ax,0x0
 	00122c98 mov bx,ax
 	00122ca4 mov mar,0x3cef20
 	00122cb0 mov ax,mar
 	00122cbc push op
 	00122cc4 mov op,ax
 	00122ccc farpush bx
 	00122cd4 setfuncargs 0x1
 	00122cdc mov ax,0x436f20
 	00122ce8 farcall ax
 	00122cf0 farsubsp 0x1
 	00122cf8 pop op
 	00122d00 sourceline 0x827
 	00122d08 jmp 0x00122e38
		00122e38: UNCONDITIONAL_JUMP

	[00122d10]
		00122948: CONDITIONAL_JUMP
 	00122d10 sourceline 0x82a
 	00122d18 mov ax,0x1
 	00122d24 mov bx,ax
 	00122d30 mov mar,0x3cef20
 	00122d3c mov ax,mar
 	00122d48 push op
 	00122d50 mov op,ax
 	00122d58 farpush bx
 	00122d60 setfuncargs 0x1
 	00122d68 mov ax,0x69ef20
 	00122d74 farcall ax
 	00122d7c farsubsp 0x1
 	00122d84 pop op
 	00122d8c sourceline 0x82b
 	00122d94 push op
 	00122d9c mov ax,0x2b8228
 	00122da8 farpush ax
 	00122db0 mov ax,0x138
 	00122dbc farpush ax
 	00122dc4 mov ax,0x92
 	00122dd0 farpush ax
 	00122dd8 mov ax,0x0
 	00122de4 farpush ax
 	00122dec mov mar,0x3cef20
 	00122df8 mov ax,mar
 	00122e04 mov op,ax
 	00122e0c setfuncargs 0x4
 	00122e14 mov ax,0x6aef20
 	00122e20 farcall ax
 	00122e28 farsubsp 0x4
 	00122e30 pop op
		00122e38: FALL_THROUGH

	[00122e38]
		001229cc: UNCONDITIONAL_JUMP
		00122d10: FALL_THROUGH
 	00122e38 sourceline 0x82d
 	00122e40 jmp 0x001232fc
		001232fc: UNCONDITIONAL_JUMP

	[00122e48]
		0012289c: CONDITIONAL_JUMP
 	00122e48 sourceline 0x82f
 	00122e50 mov mar,0x3cef20
 	00122e5c mov ax,mar
 	00122e68 push op
 	00122e70 mov op,ax
 	00122e78 setfuncargs 0x0
 	00122e80 mov ax,0x89ef20
 	00122e8c farcall ax
 	00122e94 pop op
 	00122e9c push ax
 	00122ea4 mov mar,0x8c6f20
 	00122eb0 mov ax,mar
 	00122ebc pop bx
 	00122ec4 cmpeq bx,ax
 	00122ed0 mov ax,bx
 	00122edc jnz 0x00122f98
		00122f98: CONDITIONAL_JUMP
		00122ee4: FALL_THROUGH

	[00122ee4]
		00122e48: FALL_THROUGH
 	00122ee4 push ax
 	00122eec mov mar,0x3cef20
 	00122ef8 mov ax,mar
 	00122f04 push op
 	00122f0c mov op,ax
 	00122f14 setfuncargs 0x0
 	00122f1c mov ax,0x89ef20
 	00122f28 farcall ax
 	00122f30 pop op
 	00122f38 push ax
 	00122f40 mov mar,0x9f6f20
 	00122f4c mov ax,mar
 	00122f58 pop bx
 	00122f60 cmpeq bx,ax
 	00122f6c mov ax,bx
 	00122f78 pop bx
 	00122f80 lor bx,ax
 	00122f8c mov ax,bx
		00122f98: FALL_THROUGH

	[00122f98]
		00122e48: CONDITIONAL_JUMP
		00122ee4: FALL_THROUGH
 	00122f98 jz 0x001230d8
		001230d8: CONDITIONAL_JUMP
		00122fa0: FALL_THROUGH

	[00122fa0]
		00122f98: FALL_THROUGH
 	00122fa0 sourceline 0x831
 	00122fa8 mov ax,0x1
 	00122fb4 mov bx,ax
 	00122fc0 mov mar,0x3cef20
 	00122fcc mov ax,mar
 	00122fd8 push op
 	00122fe0 mov op,ax
 	00122fe8 farpush bx
 	00122ff0 setfuncargs 0x1
 	00122ff8 mov ax,0x69ef20
 	00123004 farcall ax
 	0012300c farsubsp 0x1
 	00123014 pop op
 	0012301c sourceline 0x832
 	00123024 push op
 	0012302c mov ax,0x2ba4ea
 	00123038 farpush ax
 	00123040 mov ax,0x138
 	0012304c farpush ax
 	00123054 mov ax,0x92
 	00123060 farpush ax
 	00123068 mov ax,0x0
 	00123074 farpush ax
 	0012307c mov mar,0x3cef20
 	00123088 mov ax,mar
 	00123094 mov op,ax
 	0012309c setfuncargs 0x4
 	001230a4 mov ax,0x6aef20
 	001230b0 farcall ax
 	001230b8 farsubsp 0x4
 	001230c0 pop op
 	001230c8 sourceline 0x833
 	001230d0 jmp 0x001232fc
		001232fc: UNCONDITIONAL_JUMP

	[001230d8]
		00122f98: CONDITIONAL_JUMP
 	001230d8 sourceline 0x835
 	001230e0 mov mar,0x3cef20
 	001230ec mov ax,mar
 	001230f8 push op
 	00123100 mov op,ax
 	00123108 setfuncargs 0x0
 	00123110 mov ax,0x89ef20
 	0012311c farcall ax
 	00123124 pop op
 	0012312c push ax
 	00123134 mov mar,0x8bef20
 	00123140 mov ax,mar
 	0012314c pop bx
 	00123154 cmpeq bx,ax
 	00123160 mov ax,bx
 	0012316c jz 0x001232ac
		001232ac: CONDITIONAL_JUMP
		00123174: FALL_THROUGH

	[00123174]
		001230d8: FALL_THROUGH
 	00123174 sourceline 0x837
 	0012317c mov ax,0x1
 	00123188 mov bx,ax
 	00123194 mov mar,0x3cef20
 	001231a0 mov ax,mar
 	001231ac push op
 	001231b4 mov op,ax
 	001231bc farpush bx
 	001231c4 setfuncargs 0x1
 	001231cc mov ax,0x69ef20
 	001231d8 farcall ax
 	001231e0 farsubsp 0x1
 	001231e8 pop op
 	001231f0 sourceline 0x838
 	001231f8 push op
 	00123200 mov ax,0x2b8480
 	0012320c farpush ax
 	00123214 mov ax,0x138
 	00123220 farpush ax
 	00123228 mov ax,0x92
 	00123234 farpush ax
 	0012323c mov ax,0x0
 	00123248 farpush ax
 	00123250 mov mar,0x3cef20
 	0012325c mov ax,mar
 	00123268 mov op,ax
 	00123270 setfuncargs 0x4
 	00123278 mov ax,0x6aef20
 	00123284 farcall ax
 	0012328c farsubsp 0x4
 	00123294 pop op
 	0012329c sourceline 0x839
 	001232a4 jmp 0x001232fc
		001232fc: UNCONDITIONAL_JUMP

	[001232ac]
		001230d8: CONDITIONAL_JUMP
 	001232ac sourceline 0x83b
 	001232b4 mov ax,0x3
 	001232c0 push ax
 	001232c8 mov ax,0x5
 	001232d4 push ax
 	001232dc mov ax,0x10ae5c
 	001232e8 call ax
 	001232f0 sub sp,0x8
		001232fc: FALL_THROUGH

	[001232fc]
		00122e38: UNCONDITIONAL_JUMP
		00122fa0: UNCONDITIONAL_JUMP
		00123174: UNCONDITIONAL_JUMP
		001232ac: FALL_THROUGH
 	001232fc sourceline 0x83c
 	00123304 mov ax,0x0
 	00123310 ret

iKnife_UseInv$0:
	[00123314]
 	00123314 sourceline 0x841
 	0012331c thisaddr
 	00123324 sourceline 0x842
*	0012332c mov mar,0x3cef20
 	00123338 mov ax,mar
 	00123344 push op
 	0012334c mov op,ax
 	00123354 setfuncargs 0x0
 	0012335c mov ax,0x89ef20
 	00123368 farcall ax
 	00123370 pop op
 	00123378 push ax
 	00123380 mov mar,0x976f20
 	0012338c mov ax,mar
 	00123398 pop bx
 	001233a0 cmpeq bx,ax
 	001233ac mov ax,bx
 	001233b8 jz 0x001234f8
		001234f8: CONDITIONAL_JUMP
		001233c0: FALL_THROUGH

	[001233c0]
		00123314: FALL_THROUGH
 	001233c0 sourceline 0x844
 	001233c8 mov ax,0x1
 	001233d4 mov bx,ax
 	001233e0 mov mar,0x3cef20
 	001233ec mov ax,mar
 	001233f8 push op
 	00123400 mov op,ax
 	00123408 farpush bx
 	00123410 setfuncargs 0x1
 	00123418 mov ax,0x69ef20
 	00123424 farcall ax
 	0012342c farsubsp 0x1
 	00123434 pop op
 	0012343c sourceline 0x845
 	00123444 push op
 	0012344c mov ax,0x2b948a
 	00123458 farpush ax
 	00123460 mov ax,0x138
 	0012346c farpush ax
 	00123474 mov ax,0x92
 	00123480 farpush ax
 	00123488 mov ax,0x0
 	00123494 farpush ax
 	0012349c mov mar,0x3cef20
 	001234a8 mov ax,mar
 	001234b4 mov op,ax
 	001234bc setfuncargs 0x4
 	001234c4 mov ax,0x6aef20
 	001234d0 farcall ax
 	001234d8 farsubsp 0x4
 	001234e0 pop op
 	001234e8 sourceline 0x846
 	001234f0 jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[001234f8]
		00123314: CONDITIONAL_JUMP
 	001234f8 sourceline 0x848
 	00123500 mov mar,0x3cef20
 	0012350c mov ax,mar
 	00123518 push op
 	00123520 mov op,ax
 	00123528 setfuncargs 0x0
 	00123530 mov ax,0x89ef20
 	0012353c farcall ax
 	00123544 pop op
 	0012354c push ax
 	00123554 mov mar,0x92ef20
 	00123560 mov ax,mar
 	0012356c pop bx
 	00123574 cmpeq bx,ax
 	00123580 mov ax,bx
 	0012358c jz 0x001236cc
		001236cc: CONDITIONAL_JUMP
		00123594: FALL_THROUGH

	[00123594]
		001234f8: FALL_THROUGH
 	00123594 sourceline 0x84a
 	0012359c mov ax,0x1
 	001235a8 mov bx,ax
 	001235b4 mov mar,0x3cef20
 	001235c0 mov ax,mar
 	001235cc push op
 	001235d4 mov op,ax
 	001235dc farpush bx
 	001235e4 setfuncargs 0x1
 	001235ec mov ax,0x69ef20
 	001235f8 farcall ax
 	00123600 farsubsp 0x1
 	00123608 pop op
 	00123610 sourceline 0x84b
 	00123618 push op
 	00123620 mov ax,0x2b9df6
 	0012362c farpush ax
 	00123634 mov ax,0x138
 	00123640 farpush ax
 	00123648 mov ax,0x92
 	00123654 farpush ax
 	0012365c mov ax,0x0
 	00123668 farpush ax
 	00123670 mov mar,0x3cef20
 	0012367c mov ax,mar
 	00123688 mov op,ax
 	00123690 setfuncargs 0x4
 	00123698 mov ax,0x6aef20
 	001236a4 farcall ax
 	001236ac farsubsp 0x4
 	001236b4 pop op
 	001236bc sourceline 0x84c
 	001236c4 jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[001236cc]
		001234f8: CONDITIONAL_JUMP
 	001236cc sourceline 0x84e
 	001236d4 mov mar,0x3cef20
 	001236e0 mov ax,mar
 	001236ec push op
 	001236f4 mov op,ax
 	001236fc setfuncargs 0x0
 	00123704 mov ax,0x89ef20
 	00123710 farcall ax
 	00123718 pop op
 	00123720 push ax
 	00123728 mov mar,0x9fef20
 	00123734 mov ax,mar
 	00123740 pop bx
 	00123748 cmpeq bx,ax
 	00123754 mov ax,bx
 	00123760 jz 0x001238a0
		001238a0: CONDITIONAL_JUMP
		00123768: FALL_THROUGH

	[00123768]
		001236cc: FALL_THROUGH
 	00123768 sourceline 0x850
 	00123770 mov ax,0x1
 	0012377c mov bx,ax
 	00123788 mov mar,0x3cef20
 	00123794 mov ax,mar
 	001237a0 push op
 	001237a8 mov op,ax
 	001237b0 farpush bx
 	001237b8 setfuncargs 0x1
 	001237c0 mov ax,0x69ef20
 	001237cc farcall ax
 	001237d4 farsubsp 0x1
 	001237dc pop op
 	001237e4 sourceline 0x851
 	001237ec push op
 	001237f4 mov ax,0x2b986f
 	00123800 farpush ax
 	00123808 mov ax,0x138
 	00123814 farpush ax
 	0012381c mov ax,0x92
 	00123828 farpush ax
 	00123830 mov ax,0x0
 	0012383c farpush ax
 	00123844 mov mar,0x3cef20
 	00123850 mov ax,mar
 	0012385c mov op,ax
 	00123864 setfuncargs 0x4
 	0012386c mov ax,0x6aef20
 	00123878 farcall ax
 	00123880 farsubsp 0x4
 	00123888 pop op
 	00123890 sourceline 0x852
 	00123898 jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[001238a0]
		001236cc: CONDITIONAL_JUMP
 	001238a0 sourceline 0x854
 	001238a8 mov mar,0x3cef20
 	001238b4 mov ax,mar
 	001238c0 push op
 	001238c8 mov op,ax
 	001238d0 setfuncargs 0x0
 	001238d8 mov ax,0x89ef20
 	001238e4 farcall ax
 	001238ec pop op
 	001238f4 push ax
 	001238fc mov mar,0x9def20
 	00123908 mov ax,mar
 	00123914 pop bx
 	0012391c cmpeq bx,ax
 	00123928 mov ax,bx
 	00123934 jnz 0x001239f0
		001239f0: CONDITIONAL_JUMP
		0012393c: FALL_THROUGH

	[0012393c]
		001238a0: FALL_THROUGH
 	0012393c push ax
 	00123944 mov mar,0x3cef20
 	00123950 mov ax,mar
 	0012395c push op
 	00123964 mov op,ax
 	0012396c setfuncargs 0x0
 	00123974 mov ax,0x89ef20
 	00123980 farcall ax
 	00123988 pop op
 	00123990 push ax
 	00123998 mov mar,0x9aef20
 	001239a4 mov ax,mar
 	001239b0 pop bx
 	001239b8 cmpeq bx,ax
 	001239c4 mov ax,bx
 	001239d0 pop bx
 	001239d8 lor bx,ax
 	001239e4 mov ax,bx
		001239f0: FALL_THROUGH

	[001239f0]
		001238a0: CONDITIONAL_JUMP
		0012393c: FALL_THROUGH
 	001239f0 jnz 0x00123aac
		00123aac: CONDITIONAL_JUMP
		001239f8: FALL_THROUGH

	[001239f8]
		001239f0: FALL_THROUGH
 	001239f8 push ax
 	00123a00 mov mar,0x3cef20
 	00123a0c mov ax,mar
 	00123a18 push op
 	00123a20 mov op,ax
 	00123a28 setfuncargs 0x0
 	00123a30 mov ax,0x89ef20
 	00123a3c farcall ax
 	00123a44 pop op
 	00123a4c push ax
 	00123a54 mov mar,0x9eef20
 	00123a60 mov ax,mar
 	00123a6c pop bx
 	00123a74 cmpeq bx,ax
 	00123a80 mov ax,bx
 	00123a8c pop bx
 	00123a94 lor bx,ax
 	00123aa0 mov ax,bx
		00123aac: FALL_THROUGH

	[00123aac]
		001239f0: CONDITIONAL_JUMP
		001239f8: FALL_THROUGH
 	00123aac jnz 0x00123b68
		00123b68: CONDITIONAL_JUMP
		00123ab4: FALL_THROUGH

	[00123ab4]
		00123aac: FALL_THROUGH
 	00123ab4 push ax
 	00123abc mov mar,0x3cef20
 	00123ac8 mov ax,mar
 	00123ad4 push op
 	00123adc mov op,ax
 	00123ae4 setfuncargs 0x0
 	00123aec mov ax,0x89ef20
 	00123af8 farcall ax
 	00123b00 pop op
 	00123b08 push ax
 	00123b10 mov mar,0x91ef20
 	00123b1c mov ax,mar
 	00123b28 pop bx
 	00123b30 cmpeq bx,ax
 	00123b3c mov ax,bx
 	00123b48 pop bx
 	00123b50 lor bx,ax
 	00123b5c mov ax,bx
		00123b68: FALL_THROUGH

	[00123b68]
		00123aac: CONDITIONAL_JUMP
		00123ab4: FALL_THROUGH
 	00123b68 jnz 0x00123c24
		00123c24: CONDITIONAL_JUMP
		00123b70: FALL_THROUGH

	[00123b70]
		00123b68: FALL_THROUGH
 	00123b70 push ax
 	00123b78 mov mar,0x3cef20
 	00123b84 mov ax,mar
 	00123b90 push op
 	00123b98 mov op,ax
 	00123ba0 setfuncargs 0x0
 	00123ba8 mov ax,0x89ef20
 	00123bb4 farcall ax
 	00123bbc pop op
 	00123bc4 push ax
 	00123bcc mov mar,0x9b6f20
 	00123bd8 mov ax,mar
 	00123be4 pop bx
 	00123bec cmpeq bx,ax
 	00123bf8 mov ax,bx
 	00123c04 pop bx
 	00123c0c lor bx,ax
 	00123c18 mov ax,bx
		00123c24: FALL_THROUGH

	[00123c24]
		00123b68: CONDITIONAL_JUMP
		00123b70: FALL_THROUGH
 	00123c24 jnz 0x00123ce0
		00123ce0: CONDITIONAL_JUMP
		00123c2c: FALL_THROUGH

	[00123c2c]
		00123c24: FALL_THROUGH
 	00123c2c push ax
 	00123c34 mov mar,0x3cef20
 	00123c40 mov ax,mar
 	00123c4c push op
 	00123c54 mov op,ax
 	00123c5c setfuncargs 0x0
 	00123c64 mov ax,0x89ef20
 	00123c70 farcall ax
 	00123c78 pop op
 	00123c80 push ax
 	00123c88 mov mar,0x9bef20
 	00123c94 mov ax,mar
 	00123ca0 pop bx
 	00123ca8 cmpeq bx,ax
 	00123cb4 mov ax,bx
 	00123cc0 pop bx
 	00123cc8 lor bx,ax
 	00123cd4 mov ax,bx
		00123ce0: FALL_THROUGH

	[00123ce0]
		00123c24: CONDITIONAL_JUMP
		00123c2c: FALL_THROUGH
 	00123ce0 jz 0x00123e20
		00123e20: CONDITIONAL_JUMP
		00123ce8: FALL_THROUGH

	[00123ce8]
		00123ce0: FALL_THROUGH
 	00123ce8 sourceline 0x856
 	00123cf0 mov ax,0x1
 	00123cfc mov bx,ax
 	00123d08 mov mar,0x3cef20
 	00123d14 mov ax,mar
 	00123d20 push op
 	00123d28 mov op,ax
 	00123d30 farpush bx
 	00123d38 setfuncargs 0x1
 	00123d40 mov ax,0x69ef20
 	00123d4c farcall ax
 	00123d54 farsubsp 0x1
 	00123d5c pop op
 	00123d64 sourceline 0x857
 	00123d6c push op
 	00123d74 mov ax,0x2ba161
 	00123d80 farpush ax
 	00123d88 mov ax,0x138
 	00123d94 farpush ax
 	00123d9c mov ax,0x92
 	00123da8 farpush ax
 	00123db0 mov ax,0x0
 	00123dbc farpush ax
 	00123dc4 mov mar,0x3cef20
 	00123dd0 mov ax,mar
 	00123ddc mov op,ax
 	00123de4 setfuncargs 0x4
 	00123dec mov ax,0x6aef20
 	00123df8 farcall ax
 	00123e00 farsubsp 0x4
 	00123e08 pop op
 	00123e10 sourceline 0x858
 	00123e18 jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[00123e20]
		00123ce0: CONDITIONAL_JUMP
 	00123e20 sourceline 0x85a
 	00123e28 mov mar,0x3cef20
 	00123e34 mov ax,mar
 	00123e40 push op
 	00123e48 mov op,ax
 	00123e50 setfuncargs 0x0
 	00123e58 mov ax,0x89ef20
 	00123e64 farcall ax
 	00123e6c pop op
 	00123e74 push ax
 	00123e7c mov mar,0xa06f20
 	00123e88 mov ax,mar
 	00123e94 pop bx
 	00123e9c cmpeq bx,ax
 	00123ea8 mov ax,bx
 	00123eb4 jnz 0x00123f70
		00123f70: CONDITIONAL_JUMP
		00123ebc: FALL_THROUGH

	[00123ebc]
		00123e20: FALL_THROUGH
 	00123ebc push ax
 	00123ec4 mov mar,0x3cef20
 	00123ed0 mov ax,mar
 	00123edc push op
 	00123ee4 mov op,ax
 	00123eec setfuncargs 0x0
 	00123ef4 mov ax,0x89ef20
 	00123f00 farcall ax
 	00123f08 pop op
 	00123f10 push ax
 	00123f18 mov mar,0xa0ef20
 	00123f24 mov ax,mar
 	00123f30 pop bx
 	00123f38 cmpeq bx,ax
 	00123f44 mov ax,bx
 	00123f50 pop bx
 	00123f58 lor bx,ax
 	00123f64 mov ax,bx
		00123f70: FALL_THROUGH

	[00123f70]
		00123e20: CONDITIONAL_JUMP
		00123ebc: FALL_THROUGH
 	00123f70 jz 0x001240b0
		001240b0: CONDITIONAL_JUMP
		00123f78: FALL_THROUGH

	[00123f78]
		00123f70: FALL_THROUGH
 	00123f78 sourceline 0x85c
 	00123f80 mov ax,0x1
 	00123f8c mov bx,ax
 	00123f98 mov mar,0x3cef20
 	00123fa4 mov ax,mar
 	00123fb0 push op
 	00123fb8 mov op,ax
 	00123fc0 farpush bx
 	00123fc8 setfuncargs 0x1
 	00123fd0 mov ax,0x69ef20
 	00123fdc farcall ax
 	00123fe4 farsubsp 0x1
 	00123fec pop op
 	00123ff4 sourceline 0x85d
 	00123ffc push op
 	00124004 mov ax,0x2b9bcf
 	00124010 farpush ax
 	00124018 mov ax,0x138
 	00124024 farpush ax
 	0012402c mov ax,0x92
 	00124038 farpush ax
 	00124040 mov ax,0x0
 	0012404c farpush ax
 	00124054 mov mar,0x3cef20
 	00124060 mov ax,mar
 	0012406c mov op,ax
 	00124074 setfuncargs 0x4
 	0012407c mov ax,0x6aef20
 	00124088 farcall ax
 	00124090 farsubsp 0x4
 	00124098 pop op
 	001240a0 sourceline 0x85e
 	001240a8 jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[001240b0]
		00123f70: CONDITIONAL_JUMP
 	001240b0 sourceline 0x860
 	001240b8 mov mar,0x3cef20
 	001240c4 mov ax,mar
 	001240d0 push op
 	001240d8 mov op,ax
 	001240e0 setfuncargs 0x0
 	001240e8 mov ax,0x89ef20
 	001240f4 farcall ax
 	001240fc pop op
 	00124104 push ax
 	0012410c mov mar,0x956f20
 	00124118 mov ax,mar
 	00124124 pop bx
 	0012412c cmpeq bx,ax
 	00124138 mov ax,bx
 	00124144 jnz 0x00124200
		00124200: CONDITIONAL_JUMP
		0012414c: FALL_THROUGH

	[0012414c]
		001240b0: FALL_THROUGH
 	0012414c push ax
 	00124154 mov mar,0x3cef20
 	00124160 mov ax,mar
 	0012416c push op
 	00124174 mov op,ax
 	0012417c setfuncargs 0x0
 	00124184 mov ax,0x89ef20
 	00124190 farcall ax
 	00124198 pop op
 	001241a0 push ax
 	001241a8 mov mar,0x95ef20
 	001241b4 mov ax,mar
 	001241c0 pop bx
 	001241c8 cmpeq bx,ax
 	001241d4 mov ax,bx
 	001241e0 pop bx
 	001241e8 lor bx,ax
 	001241f4 mov ax,bx
		00124200: FALL_THROUGH

	[00124200]
		001240b0: CONDITIONAL_JUMP
		0012414c: FALL_THROUGH
 	00124200 jz 0x00124340
		00124340: CONDITIONAL_JUMP
		00124208: FALL_THROUGH

	[00124208]
		00124200: FALL_THROUGH
 	00124208 sourceline 0x862
 	00124210 mov ax,0x1
 	0012421c mov bx,ax
 	00124228 mov mar,0x3cef20
 	00124234 mov ax,mar
 	00124240 push op
 	00124248 mov op,ax
 	00124250 farpush bx
 	00124258 setfuncargs 0x1
 	00124260 mov ax,0x69ef20
 	0012426c farcall ax
 	00124274 farsubsp 0x1
 	0012427c pop op
 	00124284 sourceline 0x863
 	0012428c push op
 	00124294 mov ax,0x2ba2b0
 	001242a0 farpush ax
 	001242a8 mov ax,0x138
 	001242b4 farpush ax
 	001242bc mov ax,0x92
 	001242c8 farpush ax
 	001242d0 mov ax,0x0
 	001242dc farpush ax
 	001242e4 mov mar,0x3cef20
 	001242f0 mov ax,mar
 	001242fc mov op,ax
 	00124304 setfuncargs 0x4
 	0012430c mov ax,0x6aef20
 	00124318 farcall ax
 	00124320 farsubsp 0x4
 	00124328 pop op
 	00124330 sourceline 0x864
 	00124338 jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[00124340]
		00124200: CONDITIONAL_JUMP
 	00124340 sourceline 0x866
 	00124348 mov mar,0x3cef20
 	00124354 mov ax,mar
 	00124360 push op
 	00124368 mov op,ax
 	00124370 setfuncargs 0x0
 	00124378 mov ax,0x89ef20
 	00124384 farcall ax
 	0012438c pop op
 	00124394 push ax
 	0012439c mov mar,0x98ef20
 	001243a8 mov ax,mar
 	001243b4 pop bx
 	001243bc cmpeq bx,ax
 	001243c8 mov ax,bx
 	001243d4 jz 0x00124514
		00124514: CONDITIONAL_JUMP
		001243dc: FALL_THROUGH

	[001243dc]
		00124340: FALL_THROUGH
 	001243dc sourceline 0x868
 	001243e4 mov ax,0x1
 	001243f0 mov bx,ax
 	001243fc mov mar,0x3cef20
 	00124408 mov ax,mar
 	00124414 push op
 	0012441c mov op,ax
 	00124424 farpush bx
 	0012442c setfuncargs 0x1
 	00124434 mov ax,0x69ef20
 	00124440 farcall ax
 	00124448 farsubsp 0x1
 	00124450 pop op
 	00124458 sourceline 0x869
 	00124460 push op
 	00124468 mov ax,0x2b8480
 	00124474 farpush ax
 	0012447c mov ax,0x138
 	00124488 farpush ax
 	00124490 mov ax,0x92
 	0012449c farpush ax
 	001244a4 mov ax,0x0
 	001244b0 farpush ax
 	001244b8 mov mar,0x3cef20
 	001244c4 mov ax,mar
 	001244d0 mov op,ax
 	001244d8 setfuncargs 0x4
 	001244e0 mov ax,0x6aef20
 	001244ec farcall ax
 	001244f4 farsubsp 0x4
 	001244fc pop op
 	00124504 sourceline 0x86a
 	0012450c jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[00124514]
		00124340: CONDITIONAL_JUMP
 	00124514 sourceline 0x86c
 	0012451c mov mar,0x3cef20
 	00124528 mov ax,mar
 	00124534 push op
 	0012453c mov op,ax
 	00124544 setfuncargs 0x0
 	0012454c mov ax,0x89ef20
 	00124558 farcall ax
 	00124560 pop op
 	00124568 push ax
 	00124570 mov mar,0x99ef20
 	0012457c mov ax,mar
 	00124588 pop bx
 	00124590 cmpeq bx,ax
 	0012459c mov ax,bx
 	001245a8 jz 0x001246e8
		001246e8: CONDITIONAL_JUMP
		001245b0: FALL_THROUGH

	[001245b0]
		00124514: FALL_THROUGH
 	001245b0 sourceline 0x86e
 	001245b8 mov ax,0x1
 	001245c4 mov bx,ax
 	001245d0 mov mar,0x3cef20
 	001245dc mov ax,mar
 	001245e8 push op
 	001245f0 mov op,ax
 	001245f8 farpush bx
 	00124600 setfuncargs 0x1
 	00124608 mov ax,0x69ef20
 	00124614 farcall ax
 	0012461c farsubsp 0x1
 	00124624 pop op
 	0012462c sourceline 0x86f
 	00124634 push op
 	0012463c mov ax,0x2b940a
 	00124648 farpush ax
 	00124650 mov ax,0x138
 	0012465c farpush ax
 	00124664 mov ax,0x92
 	00124670 farpush ax
 	00124678 mov ax,0x0
 	00124684 farpush ax
 	0012468c mov mar,0x3cef20
 	00124698 mov ax,mar
 	001246a4 mov op,ax
 	001246ac setfuncargs 0x4
 	001246b4 mov ax,0x6aef20
 	001246c0 farcall ax
 	001246c8 farsubsp 0x4
 	001246d0 pop op
 	001246d8 sourceline 0x870
 	001246e0 jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[001246e8]
		00124514: CONDITIONAL_JUMP
 	001246e8 sourceline 0x872
 	001246f0 mov mar,0x3cef20
 	001246fc mov ax,mar
 	00124708 push op
 	00124710 mov op,ax
 	00124718 setfuncargs 0x0
 	00124720 mov ax,0x89ef20
 	0012472c farcall ax
 	00124734 pop op
 	0012473c push ax
 	00124744 mov mar,0x8d6f20
 	00124750 mov ax,mar
 	0012475c pop bx
 	00124764 cmpeq bx,ax
 	00124770 mov ax,bx
 	0012477c jnz 0x00124838
		00124838: CONDITIONAL_JUMP
		00124784: FALL_THROUGH

	[00124784]
		001246e8: FALL_THROUGH
 	00124784 push ax
 	0012478c mov mar,0x3cef20
 	00124798 mov ax,mar
 	001247a4 push op
 	001247ac mov op,ax
 	001247b4 setfuncargs 0x0
 	001247bc mov ax,0x89ef20
 	001247c8 farcall ax
 	001247d0 pop op
 	001247d8 push ax
 	001247e0 mov mar,0x926f20
 	001247ec mov ax,mar
 	001247f8 pop bx
 	00124800 cmpeq bx,ax
 	0012480c mov ax,bx
 	00124818 pop bx
 	00124820 lor bx,ax
 	0012482c mov ax,bx
		00124838: FALL_THROUGH

	[00124838]
		001246e8: CONDITIONAL_JUMP
		00124784: FALL_THROUGH
 	00124838 jz 0x00124978
		00124978: CONDITIONAL_JUMP
		00124840: FALL_THROUGH

	[00124840]
		00124838: FALL_THROUGH
 	00124840 sourceline 0x874
 	00124848 mov ax,0x1
 	00124854 mov bx,ax
 	00124860 mov mar,0x3cef20
 	0012486c mov ax,mar
 	00124878 push op
 	00124880 mov op,ax
 	00124888 farpush bx
 	00124890 setfuncargs 0x1
 	00124898 mov ax,0x69ef20
 	001248a4 farcall ax
 	001248ac farsubsp 0x1
 	001248b4 pop op
 	001248bc sourceline 0x875
 	001248c4 push op
 	001248cc mov ax,0x2b851d
 	001248d8 farpush ax
 	001248e0 mov ax,0x138
 	001248ec farpush ax
 	001248f4 mov ax,0x92
 	00124900 farpush ax
 	00124908 mov ax,0x0
 	00124914 farpush ax
 	0012491c mov mar,0x3cef20
 	00124928 mov ax,mar
 	00124934 mov op,ax
 	0012493c setfuncargs 0x4
 	00124944 mov ax,0x6aef20
 	00124950 farcall ax
 	00124958 farsubsp 0x4
 	00124960 pop op
 	00124968 sourceline 0x876
 	00124970 jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[00124978]
		00124838: CONDITIONAL_JUMP
 	00124978 sourceline 0x878
 	00124980 mov mar,0x3cef20
 	0012498c mov ax,mar
 	00124998 push op
 	001249a0 mov op,ax
 	001249a8 setfuncargs 0x0
 	001249b0 mov ax,0x89ef20
 	001249bc farcall ax
 	001249c4 pop op
 	001249cc push ax
 	001249d4 mov mar,0x886f20
 	001249e0 mov ax,mar
 	001249ec pop bx
 	001249f4 cmpeq bx,ax
 	00124a00 mov ax,bx
 	00124a0c jnz 0x00124ac8
		00124ac8: CONDITIONAL_JUMP
		00124a14: FALL_THROUGH

	[00124a14]
		00124978: FALL_THROUGH
 	00124a14 push ax
 	00124a1c mov mar,0x3cef20
 	00124a28 mov ax,mar
 	00124a34 push op
 	00124a3c mov op,ax
 	00124a44 setfuncargs 0x0
 	00124a4c mov ax,0x89ef20
 	00124a58 farcall ax
 	00124a60 pop op
 	00124a68 push ax
 	00124a70 mov mar,0x7cef20
 	00124a7c mov ax,mar
 	00124a88 pop bx
 	00124a90 cmpeq bx,ax
 	00124a9c mov ax,bx
 	00124aa8 pop bx
 	00124ab0 lor bx,ax
 	00124abc mov ax,bx
		00124ac8: FALL_THROUGH

	[00124ac8]
		00124978: CONDITIONAL_JUMP
		00124a14: FALL_THROUGH
 	00124ac8 jz 0x00124c08
		00124c08: CONDITIONAL_JUMP
		00124ad0: FALL_THROUGH

	[00124ad0]
		00124ac8: FALL_THROUGH
 	00124ad0 sourceline 0x87a
 	00124ad8 mov ax,0x1
 	00124ae4 mov bx,ax
 	00124af0 mov mar,0x3cef20
 	00124afc mov ax,mar
 	00124b08 push op
 	00124b10 mov op,ax
 	00124b18 farpush bx
 	00124b20 setfuncargs 0x1
 	00124b28 mov ax,0x69ef20
 	00124b34 farcall ax
 	00124b3c farsubsp 0x1
 	00124b44 pop op
 	00124b4c sourceline 0x87b
 	00124b54 push op
 	00124b5c mov ax,0x2b855e
 	00124b68 farpush ax
 	00124b70 mov ax,0x138
 	00124b7c farpush ax
 	00124b84 mov ax,0x92
 	00124b90 farpush ax
 	00124b98 mov ax,0x0
 	00124ba4 farpush ax
 	00124bac mov mar,0x3cef20
 	00124bb8 mov ax,mar
 	00124bc4 mov op,ax
 	00124bcc setfuncargs 0x4
 	00124bd4 mov ax,0x6aef20
 	00124be0 farcall ax
 	00124be8 farsubsp 0x4
 	00124bf0 pop op
 	00124bf8 sourceline 0x87c
 	00124c00 jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[00124c08]
		00124ac8: CONDITIONAL_JUMP
 	00124c08 sourceline 0x87e
 	00124c10 mov mar,0x3cef20
 	00124c1c mov ax,mar
 	00124c28 push op
 	00124c30 mov op,ax
 	00124c38 setfuncargs 0x0
 	00124c40 mov ax,0x89ef20
 	00124c4c farcall ax
 	00124c54 pop op
 	00124c5c push ax
 	00124c64 mov mar,0x8c6f20
 	00124c70 mov ax,mar
 	00124c7c pop bx
 	00124c84 cmpeq bx,ax
 	00124c90 mov ax,bx
 	00124c9c jnz 0x00124d58
		00124d58: CONDITIONAL_JUMP
		00124ca4: FALL_THROUGH

	[00124ca4]
		00124c08: FALL_THROUGH
 	00124ca4 push ax
 	00124cac mov mar,0x3cef20
 	00124cb8 mov ax,mar
 	00124cc4 push op
 	00124ccc mov op,ax
 	00124cd4 setfuncargs 0x0
 	00124cdc mov ax,0x89ef20
 	00124ce8 farcall ax
 	00124cf0 pop op
 	00124cf8 push ax
 	00124d00 mov mar,0x8a6f20
 	00124d0c mov ax,mar
 	00124d18 pop bx
 	00124d20 cmpeq bx,ax
 	00124d2c mov ax,bx
 	00124d38 pop bx
 	00124d40 lor bx,ax
 	00124d4c mov ax,bx
		00124d58: FALL_THROUGH

	[00124d58]
		00124c08: CONDITIONAL_JUMP
		00124ca4: FALL_THROUGH
 	00124d58 jnz 0x00124e14
		00124e14: CONDITIONAL_JUMP
		00124d60: FALL_THROUGH

	[00124d60]
		00124d58: FALL_THROUGH
 	00124d60 push ax
 	00124d68 mov mar,0x3cef20
 	00124d74 mov ax,mar
 	00124d80 push op
 	00124d88 mov op,ax
 	00124d90 setfuncargs 0x0
 	00124d98 mov ax,0x89ef20
 	00124da4 farcall ax
 	00124dac pop op
 	00124db4 push ax
 	00124dbc mov mar,0x7def20
 	00124dc8 mov ax,mar
 	00124dd4 pop bx
 	00124ddc cmpeq bx,ax
 	00124de8 mov ax,bx
 	00124df4 pop bx
 	00124dfc lor bx,ax
 	00124e08 mov ax,bx
		00124e14: FALL_THROUGH

	[00124e14]
		00124d58: CONDITIONAL_JUMP
		00124d60: FALL_THROUGH
 	00124e14 jnz 0x00124ed0
		00124ed0: CONDITIONAL_JUMP
		00124e1c: FALL_THROUGH

	[00124e1c]
		00124e14: FALL_THROUGH
 	00124e1c push ax
 	00124e24 mov mar,0x3cef20
 	00124e30 mov ax,mar
 	00124e3c push op
 	00124e44 mov op,ax
 	00124e4c setfuncargs 0x0
 	00124e54 mov ax,0x89ef20
 	00124e60 farcall ax
 	00124e68 pop op
 	00124e70 push ax
 	00124e78 mov mar,0x8def20
 	00124e84 mov ax,mar
 	00124e90 pop bx
 	00124e98 cmpeq bx,ax
 	00124ea4 mov ax,bx
 	00124eb0 pop bx
 	00124eb8 lor bx,ax
 	00124ec4 mov ax,bx
		00124ed0: FALL_THROUGH

	[00124ed0]
		00124e14: CONDITIONAL_JUMP
		00124e1c: FALL_THROUGH
 	00124ed0 jnz 0x00124f8c
		00124f8c: CONDITIONAL_JUMP
		00124ed8: FALL_THROUGH

	[00124ed8]
		00124ed0: FALL_THROUGH
 	00124ed8 push ax
 	00124ee0 mov mar,0x3cef20
 	00124eec mov ax,mar
 	00124ef8 push op
 	00124f00 mov op,ax
 	00124f08 setfuncargs 0x0
 	00124f10 mov ax,0x89ef20
 	00124f1c farcall ax
 	00124f24 pop op
 	00124f2c push ax
 	00124f34 mov mar,0x9e6f20
 	00124f40 mov ax,mar
 	00124f4c pop bx
 	00124f54 cmpeq bx,ax
 	00124f60 mov ax,bx
 	00124f6c pop bx
 	00124f74 lor bx,ax
 	00124f80 mov ax,bx
		00124f8c: FALL_THROUGH

	[00124f8c]
		00124ed0: CONDITIONAL_JUMP
		00124ed8: FALL_THROUGH
 	00124f8c jnz 0x00125048
		00125048: CONDITIONAL_JUMP
		00124f94: FALL_THROUGH

	[00124f94]
		00124f8c: FALL_THROUGH
 	00124f94 push ax
 	00124f9c mov mar,0x3cef20
 	00124fa8 mov ax,mar
 	00124fb4 push op
 	00124fbc mov op,ax
 	00124fc4 setfuncargs 0x0
 	00124fcc mov ax,0x89ef20
 	00124fd8 farcall ax
 	00124fe0 pop op
 	00124fe8 push ax
 	00124ff0 mov mar,0x9c6f20
 	00124ffc mov ax,mar
 	00125008 pop bx
 	00125010 cmpeq bx,ax
 	0012501c mov ax,bx
 	00125028 pop bx
 	00125030 lor bx,ax
 	0012503c mov ax,bx
		00125048: FALL_THROUGH

	[00125048]
		00124f8c: CONDITIONAL_JUMP
		00124f94: FALL_THROUGH
 	00125048 jnz 0x00125104
		00125104: CONDITIONAL_JUMP
		00125050: FALL_THROUGH

	[00125050]
		00125048: FALL_THROUGH
 	00125050 push ax
 	00125058 mov mar,0x3cef20
 	00125064 mov ax,mar
 	00125070 push op
 	00125078 mov op,ax
 	00125080 setfuncargs 0x0
 	00125088 mov ax,0x89ef20
 	00125094 farcall ax
 	0012509c pop op
 	001250a4 push ax
 	001250ac mov mar,0x9cef20
 	001250b8 mov ax,mar
 	001250c4 pop bx
 	001250cc cmpeq bx,ax
 	001250d8 mov ax,bx
 	001250e4 pop bx
 	001250ec lor bx,ax
 	001250f8 mov ax,bx
		00125104: FALL_THROUGH

	[00125104]
		00125048: CONDITIONAL_JUMP
		00125050: FALL_THROUGH
 	00125104 jnz 0x001251c0
		001251c0: CONDITIONAL_JUMP
		0012510c: FALL_THROUGH

	[0012510c]
		00125104: FALL_THROUGH
 	0012510c push ax
 	00125114 mov mar,0x3cef20
 	00125120 mov ax,mar
 	0012512c push op
 	00125134 mov op,ax
 	0012513c setfuncargs 0x0
 	00125144 mov ax,0x89ef20
 	00125150 farcall ax
 	00125158 pop op
 	00125160 push ax
 	00125168 mov mar,0x9d6f20
 	00125174 mov ax,mar
 	00125180 pop bx
 	00125188 cmpeq bx,ax
 	00125194 mov ax,bx
 	001251a0 pop bx
 	001251a8 lor bx,ax
 	001251b4 mov ax,bx
		001251c0: FALL_THROUGH

	[001251c0]
		00125104: CONDITIONAL_JUMP
		0012510c: FALL_THROUGH
 	001251c0 jnz 0x0012527c
		0012527c: CONDITIONAL_JUMP
		001251c8: FALL_THROUGH

	[001251c8]
		001251c0: FALL_THROUGH
 	001251c8 push ax
 	001251d0 mov mar,0x3cef20
 	001251dc mov ax,mar
 	001251e8 push op
 	001251f0 mov op,ax
 	001251f8 setfuncargs 0x0
 	00125200 mov ax,0x89ef20
 	0012520c farcall ax
 	00125214 pop op
 	0012521c push ax
 	00125224 mov mar,0x8eef20
 	00125230 mov ax,mar
 	0012523c pop bx
 	00125244 cmpeq bx,ax
 	00125250 mov ax,bx
 	0012525c pop bx
 	00125264 lor bx,ax
 	00125270 mov ax,bx
		0012527c: FALL_THROUGH

	[0012527c]
		001251c0: CONDITIONAL_JUMP
		001251c8: FALL_THROUGH
 	0012527c jnz 0x00125338
		00125338: CONDITIONAL_JUMP
		00125284: FALL_THROUGH

	[00125284]
		0012527c: FALL_THROUGH
 	00125284 push ax
 	0012528c mov mar,0x3cef20
 	00125298 mov ax,mar
 	001252a4 push op
 	001252ac mov op,ax
 	001252b4 setfuncargs 0x0
 	001252bc mov ax,0x89ef20
 	001252c8 farcall ax
 	001252d0 pop op
 	001252d8 push ax
 	001252e0 mov mar,0x8f6f20
 	001252ec mov ax,mar
 	001252f8 pop bx
 	00125300 cmpeq bx,ax
 	0012530c mov ax,bx
 	00125318 pop bx
 	00125320 lor bx,ax
 	0012532c mov ax,bx
		00125338: FALL_THROUGH

	[00125338]
		0012527c: CONDITIONAL_JUMP
		00125284: FALL_THROUGH
 	00125338 jnz 0x001253f4
		001253f4: CONDITIONAL_JUMP
		00125340: FALL_THROUGH

	[00125340]
		00125338: FALL_THROUGH
 	00125340 push ax
 	00125348 mov mar,0x3cef20
 	00125354 mov ax,mar
 	00125360 push op
 	00125368 mov op,ax
 	00125370 setfuncargs 0x0
 	00125378 mov ax,0x89ef20
 	00125384 farcall ax
 	0012538c pop op
 	00125394 push ax
 	0012539c mov mar,0x97ef20
 	001253a8 mov ax,mar
 	001253b4 pop bx
 	001253bc cmpeq bx,ax
 	001253c8 mov ax,bx
 	001253d4 pop bx
 	001253dc lor bx,ax
 	001253e8 mov ax,bx
		001253f4: FALL_THROUGH

	[001253f4]
		00125338: CONDITIONAL_JUMP
		00125340: FALL_THROUGH
 	001253f4 jnz 0x001254b0
		001254b0: CONDITIONAL_JUMP
		001253fc: FALL_THROUGH

	[001253fc]
		001253f4: FALL_THROUGH
 	001253fc push ax
 	00125404 mov mar,0x3cef20
 	00125410 mov ax,mar
 	0012541c push op
 	00125424 mov op,ax
 	0012542c setfuncargs 0x0
 	00125434 mov ax,0x89ef20
 	00125440 farcall ax
 	00125448 pop op
 	00125450 push ax
 	00125458 mov mar,0x90ef20
 	00125464 mov ax,mar
 	00125470 pop bx
 	00125478 cmpeq bx,ax
 	00125484 mov ax,bx
 	00125490 pop bx
 	00125498 lor bx,ax
 	001254a4 mov ax,bx
		001254b0: FALL_THROUGH

	[001254b0]
		001253f4: CONDITIONAL_JUMP
		001253fc: FALL_THROUGH
 	001254b0 jnz 0x0012556c
		0012556c: CONDITIONAL_JUMP
		001254b8: FALL_THROUGH

	[001254b8]
		001254b0: FALL_THROUGH
 	001254b8 push ax
 	001254c0 mov mar,0x3cef20
 	001254cc mov ax,mar
 	001254d8 push op
 	001254e0 mov op,ax
 	001254e8 setfuncargs 0x0
 	001254f0 mov ax,0x89ef20
 	001254fc farcall ax
 	00125504 pop op
 	0012550c push ax
 	00125514 mov mar,0x916f20
 	00125520 mov ax,mar
 	0012552c pop bx
 	00125534 cmpeq bx,ax
 	00125540 mov ax,bx
 	0012554c pop bx
 	00125554 lor bx,ax
 	00125560 mov ax,bx
		0012556c: FALL_THROUGH

	[0012556c]
		001254b0: CONDITIONAL_JUMP
		001254b8: FALL_THROUGH
 	0012556c jnz 0x00125628
		00125628: CONDITIONAL_JUMP
		00125574: FALL_THROUGH

	[00125574]
		0012556c: FALL_THROUGH
 	00125574 push ax
 	0012557c mov mar,0x3cef20
 	00125588 mov ax,mar
 	00125594 push op
 	0012559c mov op,ax
 	001255a4 setfuncargs 0x0
 	001255ac mov ax,0x89ef20
 	001255b8 farcall ax
 	001255c0 pop op
 	001255c8 push ax
 	001255d0 mov mar,0x936f20
 	001255dc mov ax,mar
 	001255e8 pop bx
 	001255f0 cmpeq bx,ax
 	001255fc mov ax,bx
 	00125608 pop bx
 	00125610 lor bx,ax
 	0012561c mov ax,bx
		00125628: FALL_THROUGH

	[00125628]
		0012556c: CONDITIONAL_JUMP
		00125574: FALL_THROUGH
 	00125628 jnz 0x001256e4
		001256e4: CONDITIONAL_JUMP
		00125630: FALL_THROUGH

	[00125630]
		00125628: FALL_THROUGH
 	00125630 push ax
 	00125638 mov mar,0x3cef20
 	00125644 mov ax,mar
 	00125650 push op
 	00125658 mov op,ax
 	00125660 setfuncargs 0x0
 	00125668 mov ax,0x89ef20
 	00125674 farcall ax
 	0012567c pop op
 	00125684 push ax
 	0012568c mov mar,0x88ef20
 	00125698 mov ax,mar
 	001256a4 pop bx
 	001256ac cmpeq bx,ax
 	001256b8 mov ax,bx
 	001256c4 pop bx
 	001256cc lor bx,ax
 	001256d8 mov ax,bx
		001256e4: FALL_THROUGH

	[001256e4]
		00125628: CONDITIONAL_JUMP
		00125630: FALL_THROUGH
 	001256e4 jz 0x00125824
		00125824: CONDITIONAL_JUMP
		001256ec: FALL_THROUGH

	[001256ec]
		001256e4: FALL_THROUGH
 	001256ec sourceline 0x883
 	001256f4 mov ax,0x1
 	00125700 mov bx,ax
 	0012570c mov mar,0x3cef20
 	00125718 mov ax,mar
 	00125724 push op
 	0012572c mov op,ax
 	00125734 farpush bx
 	0012573c setfuncargs 0x1
 	00125744 mov ax,0x69ef20
 	00125750 farcall ax
 	00125758 farsubsp 0x1
 	00125760 pop op
 	00125768 sourceline 0x884
 	00125770 push op
 	00125778 mov ax,0x2ba036
 	00125784 farpush ax
 	0012578c mov ax,0x138
 	00125798 farpush ax
 	001257a0 mov ax,0x92
 	001257ac farpush ax
 	001257b4 mov ax,0x0
 	001257c0 farpush ax
 	001257c8 mov mar,0x3cef20
 	001257d4 mov ax,mar
 	001257e0 mov op,ax
 	001257e8 setfuncargs 0x4
 	001257f0 mov ax,0x6aef20
 	001257fc farcall ax
 	00125804 farsubsp 0x4
 	0012580c pop op
 	00125814 sourceline 0x885
 	0012581c jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[00125824]
		001256e4: CONDITIONAL_JUMP
 	00125824 sourceline 0x887
 	0012582c mov mar,0x3cef20
 	00125838 mov ax,mar
 	00125844 push op
 	0012584c mov op,ax
 	00125854 setfuncargs 0x0
 	0012585c mov ax,0x89ef20
 	00125868 farcall ax
 	00125870 pop op
 	00125878 push ax
 	00125880 mov mar,0x8cef20
 	0012588c mov ax,mar
 	00125898 pop bx
 	001258a0 cmpeq bx,ax
 	001258ac mov ax,bx
 	001258b8 jz 0x001259f8
		001259f8: CONDITIONAL_JUMP
		001258c0: FALL_THROUGH

	[001258c0]
		00125824: FALL_THROUGH
 	001258c0 sourceline 0x889
 	001258c8 mov ax,0x1
 	001258d4 mov bx,ax
 	001258e0 mov mar,0x3cef20
 	001258ec mov ax,mar
 	001258f8 push op
 	00125900 mov op,ax
 	00125908 farpush bx
 	00125910 setfuncargs 0x1
 	00125918 mov ax,0x69ef20
 	00125924 farcall ax
 	0012592c farsubsp 0x1
 	00125934 pop op
 	0012593c sourceline 0x88a
 	00125944 push op
 	0012594c mov ax,0x2b85d4
 	00125958 farpush ax
 	00125960 mov ax,0x138
 	0012596c farpush ax
 	00125974 mov ax,0x92
 	00125980 farpush ax
 	00125988 mov ax,0x0
 	00125994 farpush ax
 	0012599c mov mar,0x3cef20
 	001259a8 mov ax,mar
 	001259b4 mov op,ax
 	001259bc setfuncargs 0x4
 	001259c4 mov ax,0x6aef20
 	001259d0 farcall ax
 	001259d8 farsubsp 0x4
 	001259e0 pop op
 	001259e8 sourceline 0x88b
 	001259f0 jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[001259f8]
		00125824: CONDITIONAL_JUMP
 	001259f8 sourceline 0x88d
 	00125a00 mov mar,0x3cef20
 	00125a0c mov ax,mar
 	00125a18 push op
 	00125a20 mov op,ax
 	00125a28 setfuncargs 0x0
 	00125a30 mov ax,0x89ef20
 	00125a3c farcall ax
 	00125a44 pop op
 	00125a4c push ax
 	00125a54 mov mar,0x8b6f20
 	00125a60 mov ax,mar
 	00125a6c pop bx
 	00125a74 cmpeq bx,ax
 	00125a80 mov ax,bx
 	00125a8c jz 0x00125bcc
		00125bcc: CONDITIONAL_JUMP
		00125a94: FALL_THROUGH

	[00125a94]
		001259f8: FALL_THROUGH
 	00125a94 sourceline 0x88f
 	00125a9c mov ax,0x1
 	00125aa8 mov bx,ax
 	00125ab4 mov mar,0x3cef20
 	00125ac0 mov ax,mar
 	00125acc push op
 	00125ad4 mov op,ax
 	00125adc farpush bx
 	00125ae4 setfuncargs 0x1
 	00125aec mov ax,0x69ef20
 	00125af8 farcall ax
 	00125b00 farsubsp 0x1
 	00125b08 pop op
 	00125b10 sourceline 0x890
 	00125b18 push op
 	00125b20 mov ax,0x2b8607
 	00125b2c farpush ax
 	00125b34 mov ax,0x138
 	00125b40 farpush ax
 	00125b48 mov ax,0x92
 	00125b54 farpush ax
 	00125b5c mov ax,0x0
 	00125b68 farpush ax
 	00125b70 mov mar,0x3cef20
 	00125b7c mov ax,mar
 	00125b88 mov op,ax
 	00125b90 setfuncargs 0x4
 	00125b98 mov ax,0x6aef20
 	00125ba4 farcall ax
 	00125bac farsubsp 0x4
 	00125bb4 pop op
 	00125bbc sourceline 0x891
 	00125bc4 jmp 0x00125c1c
		00125c1c: UNCONDITIONAL_JUMP

	[00125bcc]
		001259f8: CONDITIONAL_JUMP
 	00125bcc sourceline 0x893
 	00125bd4 mov ax,0x3
 	00125be0 push ax
 	00125be8 mov ax,0x5
 	00125bf4 push ax
 	00125bfc mov ax,0x10ae5c
 	00125c08 call ax
 	00125c10 sub sp,0x8
		00125c1c: FALL_THROUGH

	[00125c1c]
		001233c0: UNCONDITIONAL_JUMP
		00123594: UNCONDITIONAL_JUMP
		00123768: UNCONDITIONAL_JUMP
		00123ce8: UNCONDITIONAL_JUMP
		00123f78: UNCONDITIONAL_JUMP
		00124208: UNCONDITIONAL_JUMP
		001243dc: UNCONDITIONAL_JUMP
		001245b0: UNCONDITIONAL_JUMP
		00124840: UNCONDITIONAL_JUMP
		00124ad0: UNCONDITIONAL_JUMP
		001256ec: UNCONDITIONAL_JUMP
		001258c0: UNCONDITIONAL_JUMP
		00125a94: UNCONDITIONAL_JUMP
		00125bcc: FALL_THROUGH
 	00125c1c sourceline 0x894
 	00125c24 mov ax,0x0
 	00125c30 ret

iMysteryLetter_UseInv$0:
	[00125c34]
 	00125c34 sourceline 0x899
 	00125c3c thisaddr
 	00125c44 sourceline 0x89a
*	00125c4c mov mar,0x3cef20
 	00125c58 mov ax,mar
 	00125c64 push op
 	00125c6c mov op,ax
 	00125c74 setfuncargs 0x0
 	00125c7c mov ax,0x89ef20
 	00125c88 farcall ax
 	00125c90 pop op
 	00125c98 push ax
 	00125ca0 mov mar,0x8bef20
 	00125cac mov ax,mar
 	00125cb8 pop bx
 	00125cc0 cmpeq bx,ax
 	00125ccc mov ax,bx
 	00125cd8 jnz 0x00125d94
		00125d94: CONDITIONAL_JUMP
		00125ce0: FALL_THROUGH

	[00125ce0]
		00125c34: FALL_THROUGH
 	00125ce0 push ax
 	00125ce8 mov mar,0x3cef20
 	00125cf4 mov ax,mar
 	00125d00 push op
 	00125d08 mov op,ax
 	00125d10 setfuncargs 0x0
 	00125d18 mov ax,0x89ef20
 	00125d24 farcall ax
 	00125d2c pop op
 	00125d34 push ax
 	00125d3c mov mar,0x8b6f20
 	00125d48 mov ax,mar
 	00125d54 pop bx
 	00125d5c cmpeq bx,ax
 	00125d68 mov ax,bx
 	00125d74 pop bx
 	00125d7c lor bx,ax
 	00125d88 mov ax,bx
		00125d94: FALL_THROUGH

	[00125d94]
		00125c34: CONDITIONAL_JUMP
		00125ce0: FALL_THROUGH
 	00125d94 jz 0x00125ed4
		00125ed4: CONDITIONAL_JUMP
		00125d9c: FALL_THROUGH

	[00125d9c]
		00125d94: FALL_THROUGH
 	00125d9c sourceline 0x89c
 	00125da4 mov ax,0x1
 	00125db0 mov bx,ax
 	00125dbc mov mar,0x3cef20
 	00125dc8 mov ax,mar
 	00125dd4 push op
 	00125ddc mov op,ax
 	00125de4 farpush bx
 	00125dec setfuncargs 0x1
 	00125df4 mov ax,0x69ef20
 	00125e00 farcall ax
 	00125e08 farsubsp 0x1
 	00125e10 pop op
 	00125e18 sourceline 0x89d
 	00125e20 push op
 	00125e28 mov ax,0x2ba036
 	00125e34 farpush ax
 	00125e3c mov ax,0x138
 	00125e48 farpush ax
 	00125e50 mov ax,0x92
 	00125e5c farpush ax
 	00125e64 mov ax,0x0
 	00125e70 farpush ax
 	00125e78 mov mar,0x3cef20
 	00125e84 mov ax,mar
 	00125e90 mov op,ax
 	00125e98 setfuncargs 0x4
 	00125ea0 mov ax,0x6aef20
 	00125eac farcall ax
 	00125eb4 farsubsp 0x4
 	00125ebc pop op
 	00125ec4 sourceline 0x89e
 	00125ecc jmp 0x001260f8
		001260f8: UNCONDITIONAL_JUMP

	[00125ed4]
		00125d94: CONDITIONAL_JUMP
 	00125ed4 sourceline 0x8a0
 	00125edc mov mar,0x3cef20
 	00125ee8 mov ax,mar
 	00125ef4 push op
 	00125efc mov op,ax
 	00125f04 setfuncargs 0x0
 	00125f0c mov ax,0x89ef20
 	00125f18 farcall ax
 	00125f20 pop op
 	00125f28 push ax
 	00125f30 mov mar,0x94ef20
 	00125f3c mov ax,mar
 	00125f48 pop bx
 	00125f50 cmpeq bx,ax
 	00125f5c mov ax,bx
 	00125f68 jz 0x001260a8
		001260a8: CONDITIONAL_JUMP
		00125f70: FALL_THROUGH

	[00125f70]
		00125ed4: FALL_THROUGH
 	00125f70 sourceline 0x8a2
 	00125f78 mov ax,0x1
 	00125f84 mov bx,ax
 	00125f90 mov mar,0x3cef20
 	00125f9c mov ax,mar
 	00125fa8 push op
 	00125fb0 mov op,ax
 	00125fb8 farpush bx
 	00125fc0 setfuncargs 0x1
 	00125fc8 mov ax,0x69ef20
 	00125fd4 farcall ax
 	00125fdc farsubsp 0x1
 	00125fe4 pop op
 	00125fec sourceline 0x8a3
 	00125ff4 push op
 	00125ffc mov ax,0x2b9b31
 	00126008 farpush ax
 	00126010 mov ax,0x138
 	0012601c farpush ax
 	00126024 mov ax,0x92
 	00126030 farpush ax
 	00126038 mov ax,0x0
 	00126044 farpush ax
 	0012604c mov mar,0x3cef20
 	00126058 mov ax,mar
 	00126064 mov op,ax
 	0012606c setfuncargs 0x4
 	00126074 mov ax,0x6aef20
 	00126080 farcall ax
 	00126088 farsubsp 0x4
 	00126090 pop op
 	00126098 sourceline 0x8a4
 	001260a0 jmp 0x001260f8
		001260f8: UNCONDITIONAL_JUMP

	[001260a8]
		00125ed4: CONDITIONAL_JUMP
 	001260a8 sourceline 0x8a6
 	001260b0 mov ax,0x3
 	001260bc push ax
 	001260c4 mov ax,0x5
 	001260d0 push ax
 	001260d8 mov ax,0x10ae5c
 	001260e4 call ax
 	001260ec sub sp,0x8
		001260f8: FALL_THROUGH

	[001260f8]
		00125d9c: UNCONDITIONAL_JUMP
		00125f70: UNCONDITIONAL_JUMP
		001260a8: FALL_THROUGH
 	001260f8 sourceline 0x8a7
 	00126100 mov ax,0x0
 	0012610c ret

iParchment_UseInv$0:
	[00126110]
 	00126110 sourceline 0x8ac
 	00126118 thisaddr
 	00126120 sourceline 0x8ad
*	00126128 mov mar,0x3cef20
 	00126134 mov ax,mar
 	00126140 push op
 	00126148 mov op,ax
 	00126150 setfuncargs 0x0
 	00126158 mov ax,0x89ef20
 	00126164 farcall ax
 	0012616c pop op
 	00126174 push ax
 	0012617c mov mar,0x956f20
 	00126188 mov ax,mar
 	00126194 pop bx
 	0012619c cmpeq bx,ax
 	001261a8 mov ax,bx
 	001261b4 jz 0x001262f4
		001262f4: CONDITIONAL_JUMP
		001261bc: FALL_THROUGH

	[001261bc]
		00126110: FALL_THROUGH
 	001261bc sourceline 0x8af
 	001261c4 mov ax,0x1
 	001261d0 mov bx,ax
 	001261dc mov mar,0x3cef20
 	001261e8 mov ax,mar
 	001261f4 push op
 	001261fc mov op,ax
 	00126204 farpush bx
 	0012620c setfuncargs 0x1
 	00126214 mov ax,0x69ef20
 	00126220 farcall ax
 	00126228 farsubsp 0x1
 	00126230 pop op
 	00126238 sourceline 0x8b0
 	00126240 push op
 	00126248 mov ax,0x2ba1f9
 	00126254 farpush ax
 	0012625c mov ax,0x138
 	00126268 farpush ax
 	00126270 mov ax,0x92
 	0012627c farpush ax
 	00126284 mov ax,0x0
 	00126290 farpush ax
 	00126298 mov mar,0x3cef20
 	001262a4 mov ax,mar
 	001262b0 mov op,ax
 	001262b8 setfuncargs 0x4
 	001262c0 mov ax,0x6aef20
 	001262cc farcall ax
 	001262d4 farsubsp 0x4
 	001262dc pop op
 	001262e4 sourceline 0x8b1
 	001262ec jmp 0x00127178
		00127178: UNCONDITIONAL_JUMP

	[001262f4]
		00126110: CONDITIONAL_JUMP
 	001262f4 sourceline 0x8b3
 	001262fc mov mar,0x3cef20
 	00126308 mov ax,mar
 	00126314 push op
 	0012631c mov op,ax
 	00126324 setfuncargs 0x0
 	0012632c mov ax,0x89ef20
 	00126338 farcall ax
 	00126340 pop op
 	00126348 push ax
 	00126350 mov mar,0x8f6f20
 	0012635c mov ax,mar
 	00126368 pop bx
 	00126370 cmpeq bx,ax
 	0012637c mov ax,bx
 	00126388 jz 0x001264c8
		001264c8: CONDITIONAL_JUMP
		00126390: FALL_THROUGH

	[00126390]
		001262f4: FALL_THROUGH
 	00126390 sourceline 0x8b5
 	00126398 mov ax,0x1
 	001263a4 mov bx,ax
 	001263b0 mov mar,0x3cef20
 	001263bc mov ax,mar
 	001263c8 push op
 	001263d0 mov op,ax
 	001263d8 farpush bx
 	001263e0 setfuncargs 0x1
 	001263e8 mov ax,0x69ef20
 	001263f4 farcall ax
 	001263fc farsubsp 0x1
 	00126404 pop op
 	0012640c sourceline 0x8b6
 	00126414 push op
 	0012641c mov ax,0x2ba18d
 	00126428 farpush ax
 	00126430 mov ax,0x138
 	0012643c farpush ax
 	00126444 mov ax,0x92
 	00126450 farpush ax
 	00126458 mov ax,0x0
 	00126464 farpush ax
 	0012646c mov mar,0x3cef20
 	00126478 mov ax,mar
 	00126484 mov op,ax
 	0012648c setfuncargs 0x4
 	00126494 mov ax,0x6aef20
 	001264a0 farcall ax
 	001264a8 farsubsp 0x4
 	001264b0 pop op
 	001264b8 sourceline 0x8b7
 	001264c0 jmp 0x00127178
		00127178: UNCONDITIONAL_JUMP

	[001264c8]
		001262f4: CONDITIONAL_JUMP
 	001264c8 sourceline 0x8b9
 	001264d0 mov mar,0x3cef20
 	001264dc mov ax,mar
 	001264e8 push op
 	001264f0 mov op,ax
 	001264f8 setfuncargs 0x0
 	00126500 mov ax,0x89ef20
 	0012650c farcall ax
 	00126514 pop op
 	0012651c push ax
 	00126524 mov mar,0x936f20
 	00126530 mov ax,mar
 	0012653c pop bx
 	00126544 cmpeq bx,ax
 	00126550 mov ax,bx
 	0012655c jz 0x00126748
		00126748: CONDITIONAL_JUMP
		00126564: FALL_THROUGH

	[00126564]
		001264c8: FALL_THROUGH
 	00126564 sourceline 0x8bb
 	0012656c mov ax,0x1
 	00126578 mov bx,ax
 	00126584 mov mar,0x3cef20
 	00126590 mov ax,mar
 	0012659c push op
 	001265a4 mov op,ax
 	001265ac farpush bx
 	001265b4 setfuncargs 0x1
 	001265bc mov ax,0x69ef20
 	001265c8 farcall ax
 	001265d0 farsubsp 0x1
 	001265d8 pop op
 	001265e0 sourceline 0x8bc
 	001265e8 push op
 	001265f0 mov ax,0x2b8e35
 	001265fc farpush ax
 	00126604 mov ax,0x138
 	00126610 farpush ax
 	00126618 mov ax,0x92
 	00126624 farpush ax
 	0012662c mov ax,0x0
 	00126638 farpush ax
 	00126640 mov mar,0x3cef20
 	0012664c mov ax,mar
 	00126658 mov op,ax
 	00126660 setfuncargs 0x4
 	00126668 mov ax,0x6aef20
 	00126674 farcall ax
 	0012667c farsubsp 0x4
 	00126684 pop op
 	0012668c sourceline 0x8bd
 	00126694 push op
 	0012669c mov ax,0x2b8f21
 	001266a8 farpush ax
 	001266b0 mov ax,0x138
 	001266bc farpush ax
 	001266c4 mov ax,0x92
 	001266d0 farpush ax
 	001266d8 mov ax,0x0
 	001266e4 farpush ax
 	001266ec mov mar,0x3cef20
 	001266f8 mov ax,mar
 	00126704 mov op,ax
 	0012670c setfuncargs 0x4
 	00126714 mov ax,0x6aef20
 	00126720 farcall ax
 	00126728 farsubsp 0x4
 	00126730 pop op
 	00126738 sourceline 0x8be
 	00126740 jmp 0x00127178
		00127178: UNCONDITIONAL_JUMP

	[00126748]
		001264c8: CONDITIONAL_JUMP
 	00126748 sourceline 0x8c0
 	00126750 mov mar,0x3cef20
 	0012675c mov ax,mar
 	00126768 push op
 	00126770 mov op,ax
 	00126778 setfuncargs 0x0
 	00126780 mov ax,0x89ef20
 	0012678c farcall ax
 	00126794 pop op
 	0012679c push ax
 	001267a4 mov mar,0x90ef20
 	001267b0 mov ax,mar
 	001267bc pop bx
 	001267c4 cmpeq bx,ax
 	001267d0 mov ax,bx
 	001267dc jz 0x0012691c
		0012691c: CONDITIONAL_JUMP
		001267e4: FALL_THROUGH

	[001267e4]
		00126748: FALL_THROUGH
 	001267e4 sourceline 0x8c2
 	001267ec mov ax,0x1
 	001267f8 mov bx,ax
 	00126804 mov mar,0x3cef20
 	00126810 mov ax,mar
 	0012681c push op
 	00126824 mov op,ax
 	0012682c farpush bx
 	00126834 setfuncargs 0x1
 	0012683c mov ax,0x69ef20
 	00126848 farcall ax
 	00126850 farsubsp 0x1
 	00126858 pop op
 	00126860 sourceline 0x8c3
 	00126868 push op
 	00126870 mov ax,0x2ba2e8
 	0012687c farpush ax
 	00126884 mov ax,0x138
 	00126890 farpush ax
 	00126898 mov ax,0x92
 	001268a4 farpush ax
 	001268ac mov ax,0x0
 	001268b8 farpush ax
 	001268c0 mov mar,0x3cef20
 	001268cc mov ax,mar
 	001268d8 mov op,ax
 	001268e0 setfuncargs 0x4
 	001268e8 mov ax,0x6aef20
 	001268f4 farcall ax
 	001268fc farsubsp 0x4
 	00126904 pop op
 	0012690c sourceline 0x8c4
 	00126914 jmp 0x00127178
		00127178: UNCONDITIONAL_JUMP

	[0012691c]
		00126748: CONDITIONAL_JUMP
 	0012691c sourceline 0x8c6
 	00126924 mov mar,0x3cef20
 	00126930 mov ax,mar
 	0012693c push op
 	00126944 mov op,ax
 	0012694c setfuncargs 0x0
 	00126954 mov ax,0x89ef20
 	00126960 farcall ax
 	00126968 pop op
 	00126970 push ax
 	00126978 mov mar,0x886f20
 	00126984 mov ax,mar
 	00126990 pop bx
 	00126998 cmpeq bx,ax
 	001269a4 mov ax,bx
 	001269b0 jz 0x00126af0
		00126af0: CONDITIONAL_JUMP
		001269b8: FALL_THROUGH

	[001269b8]
		0012691c: FALL_THROUGH
 	001269b8 sourceline 0x8c8
 	001269c0 mov ax,0x1
 	001269cc mov bx,ax
 	001269d8 mov mar,0x3cef20
 	001269e4 mov ax,mar
 	001269f0 push op
 	001269f8 mov op,ax
 	00126a00 farpush bx
 	00126a08 setfuncargs 0x1
 	00126a10 mov ax,0x69ef20
 	00126a1c farcall ax
 	00126a24 farsubsp 0x1
 	00126a2c pop op
 	00126a34 sourceline 0x8c9
 	00126a3c push op
 	00126a44 mov ax,0x2b88f3
 	00126a50 farpush ax
 	00126a58 mov ax,0x138
 	00126a64 farpush ax
 	00126a6c mov ax,0x92
 	00126a78 farpush ax
 	00126a80 mov ax,0x0
 	00126a8c farpush ax
 	00126a94 mov mar,0x3cef20
 	00126aa0 mov ax,mar
 	00126aac mov op,ax
 	00126ab4 setfuncargs 0x4
 	00126abc mov ax,0x6aef20
 	00126ac8 farcall ax
 	00126ad0 farsubsp 0x4
 	00126ad8 pop op
 	00126ae0 sourceline 0x8ca
 	00126ae8 jmp 0x00127178
		00127178: UNCONDITIONAL_JUMP

	[00126af0]
		0012691c: CONDITIONAL_JUMP
 	00126af0 sourceline 0x8cc
 	00126af8 mov mar,0x3cef20
 	00126b04 mov ax,mar
 	00126b10 push op
 	00126b18 mov op,ax
 	00126b20 setfuncargs 0x0
 	00126b28 mov ax,0x89ef20
 	00126b34 farcall ax
 	00126b3c pop op
 	00126b44 push ax
 	00126b4c mov mar,0x8b6f20
 	00126b58 mov ax,mar
 	00126b64 pop bx
 	00126b6c cmpeq bx,ax
 	00126b78 mov ax,bx
 	00126b84 jnz 0x00126c40
		00126c40: CONDITIONAL_JUMP
		00126b8c: FALL_THROUGH

	[00126b8c]
		00126af0: FALL_THROUGH
 	00126b8c push ax
 	00126b94 mov mar,0x3cef20
 	00126ba0 mov ax,mar
 	00126bac push op
 	00126bb4 mov op,ax
 	00126bbc setfuncargs 0x0
 	00126bc4 mov ax,0x89ef20
 	00126bd0 farcall ax
 	00126bd8 pop op
 	00126be0 push ax
 	00126be8 mov mar,0x8bef20
 	00126bf4 mov ax,mar
 	00126c00 pop bx
 	00126c08 cmpeq bx,ax
 	00126c14 mov ax,bx
 	00126c20 pop bx
 	00126c28 lor bx,ax
 	00126c34 mov ax,bx
		00126c40: FALL_THROUGH

	[00126c40]
		00126af0: CONDITIONAL_JUMP
		00126b8c: FALL_THROUGH
 	00126c40 jz 0x00126d80
		00126d80: CONDITIONAL_JUMP
		00126c48: FALL_THROUGH

	[00126c48]
		00126c40: FALL_THROUGH
 	00126c48 sourceline 0x8ce
 	00126c50 mov ax,0x1
 	00126c5c mov bx,ax
 	00126c68 mov mar,0x3cef20
 	00126c74 mov ax,mar
 	00126c80 push op
 	00126c88 mov op,ax
 	00126c90 farpush bx
 	00126c98 setfuncargs 0x1
 	00126ca0 mov ax,0x69ef20
 	00126cac farcall ax
 	00126cb4 farsubsp 0x1
 	00126cbc pop op
 	00126cc4 sourceline 0x8cf
 	00126ccc push op
 	00126cd4 mov ax,0x2ba2b0
 	00126ce0 farpush ax
 	00126ce8 mov ax,0x138
 	00126cf4 farpush ax
 	00126cfc mov ax,0x92
 	00126d08 farpush ax
 	00126d10 mov ax,0x0
 	00126d1c farpush ax
 	00126d24 mov mar,0x3cef20
 	00126d30 mov ax,mar
 	00126d3c mov op,ax
 	00126d44 setfuncargs 0x4
 	00126d4c mov ax,0x6aef20
 	00126d58 farcall ax
 	00126d60 farsubsp 0x4
 	00126d68 pop op
 	00126d70 sourceline 0x8d0
 	00126d78 jmp 0x00127178
		00127178: UNCONDITIONAL_JUMP

	[00126d80]
		00126c40: CONDITIONAL_JUMP
 	00126d80 sourceline 0x8d2
 	00126d88 mov mar,0x3cef20
 	00126d94 mov ax,mar
 	00126da0 push op
 	00126da8 mov op,ax
 	00126db0 setfuncargs 0x0
 	00126db8 mov ax,0x89ef20
 	00126dc4 farcall ax
 	00126dcc pop op
 	00126dd4 push ax
 	00126ddc mov mar,0x94ef20
 	00126de8 mov ax,mar
 	00126df4 pop bx
 	00126dfc cmpeq bx,ax
 	00126e08 mov ax,bx
 	00126e14 jz 0x00126f54
		00126f54: CONDITIONAL_JUMP
		00126e1c: FALL_THROUGH

	[00126e1c]
		00126d80: FALL_THROUGH
 	00126e1c sourceline 0x8d4
 	00126e24 mov ax,0x1
 	00126e30 mov bx,ax
 	00126e3c mov mar,0x3cef20
 	00126e48 mov ax,mar
 	00126e54 push op
 	00126e5c mov op,ax
 	00126e64 farpush bx
 	00126e6c setfuncargs 0x1
 	00126e74 mov ax,0x69ef20
 	00126e80 farcall ax
 	00126e88 farsubsp 0x1
 	00126e90 pop op
 	00126e98 sourceline 0x8d5
 	00126ea0 push op
 	00126ea8 mov ax,0x2b9b31
 	00126eb4 farpush ax
 	00126ebc mov ax,0x138
 	00126ec8 farpush ax
 	00126ed0 mov ax,0x92
 	00126edc farpush ax
 	00126ee4 mov ax,0x0
 	00126ef0 farpush ax
 	00126ef8 mov mar,0x3cef20
 	00126f04 mov ax,mar
 	00126f10 mov op,ax
 	00126f18 setfuncargs 0x4
 	00126f20 mov ax,0x6aef20
 	00126f2c farcall ax
 	00126f34 farsubsp 0x4
 	00126f3c pop op
 	00126f44 sourceline 0x8d6
 	00126f4c jmp 0x00127178
		00127178: UNCONDITIONAL_JUMP

	[00126f54]
		00126d80: CONDITIONAL_JUMP
 	00126f54 sourceline 0x8d8
 	00126f5c mov mar,0x3cef20
 	00126f68 mov ax,mar
 	00126f74 push op
 	00126f7c mov op,ax
 	00126f84 setfuncargs 0x0
 	00126f8c mov ax,0x89ef20
 	00126f98 farcall ax
 	00126fa0 pop op
 	00126fa8 push ax
 	00126fb0 mov mar,0x916f20
 	00126fbc mov ax,mar
 	00126fc8 pop bx
 	00126fd0 cmpeq bx,ax
 	00126fdc mov ax,bx
 	00126fe8 jz 0x00127128
		00127128: CONDITIONAL_JUMP
		00126ff0: FALL_THROUGH

	[00126ff0]
		00126f54: FALL_THROUGH
 	00126ff0 sourceline 0x8da
 	00126ff8 mov ax,0x1
 	00127004 mov bx,ax
 	00127010 mov mar,0x3cef20
 	0012701c mov ax,mar
 	00127028 push op
 	00127030 mov op,ax
 	00127038 farpush bx
 	00127040 setfuncargs 0x1
 	00127048 mov ax,0x69ef20
 	00127054 farcall ax
 	0012705c farsubsp 0x1
 	00127064 pop op
 	0012706c sourceline 0x8db
 	00127074 push op
 	0012707c mov ax,0x2b8994
 	00127088 farpush ax
 	00127090 mov ax,0x138
 	0012709c farpush ax
 	001270a4 mov ax,0x92
 	001270b0 farpush ax
 	001270b8 mov ax,0x0
 	001270c4 farpush ax
 	001270cc mov mar,0x3cef20
 	001270d8 mov ax,mar
 	001270e4 mov op,ax
 	001270ec setfuncargs 0x4
 	001270f4 mov ax,0x6aef20
 	00127100 farcall ax
 	00127108 farsubsp 0x4
 	00127110 pop op
 	00127118 sourceline 0x8dc
 	00127120 jmp 0x00127178
		00127178: UNCONDITIONAL_JUMP

	[00127128]
		00126f54: CONDITIONAL_JUMP
 	00127128 sourceline 0x8de
 	00127130 mov ax,0x3
 	0012713c push ax
 	00127144 mov ax,0x5
 	00127150 push ax
 	00127158 mov ax,0x10ae5c
 	00127164 call ax
 	0012716c sub sp,0x8
		00127178: FALL_THROUGH

	[00127178]
		001261bc: UNCONDITIONAL_JUMP
		00126390: UNCONDITIONAL_JUMP
		00126564: UNCONDITIONAL_JUMP
		001267e4: UNCONDITIONAL_JUMP
		001269b8: UNCONDITIONAL_JUMP
		00126c48: UNCONDITIONAL_JUMP
		00126e1c: UNCONDITIONAL_JUMP
		00126ff0: UNCONDITIONAL_JUMP
		00127128: FALL_THROUGH
 	00127178 sourceline 0x8df
 	00127180 mov ax,0x0
 	0012718c ret

iPhoneBook_UseInv$0:
	[00127190]
 	00127190 sourceline 0x8e6
 	00127198 thisaddr
 	001271a0 sourceline 0x8e7
*	001271a8 mov mar,0x3cef20
 	001271b4 mov ax,mar
 	001271c0 push op
 	001271c8 mov op,ax
 	001271d0 setfuncargs 0x0
 	001271d8 mov ax,0x89ef20
 	001271e4 farcall ax
 	001271ec pop op
 	001271f4 push ax
 	001271fc mov mar,0x8cef20
 	00127208 mov ax,mar
 	00127214 pop bx
 	0012721c cmpeq bx,ax
 	00127228 mov ax,bx
 	00127234 jnz 0x001272f0
		001272f0: CONDITIONAL_JUMP
		0012723c: FALL_THROUGH

	[0012723c]
		00127190: FALL_THROUGH
 	0012723c push ax
 	00127244 mov mar,0x3cef20
 	00127250 mov ax,mar
 	0012725c push op
 	00127264 mov op,ax
 	0012726c setfuncargs 0x0
 	00127274 mov ax,0x89ef20
 	00127280 farcall ax
 	00127288 pop op
 	00127290 push ax
 	00127298 mov mar,0x8aef20
 	001272a4 mov ax,mar
 	001272b0 pop bx
 	001272b8 cmpeq bx,ax
 	001272c4 mov ax,bx
 	001272d0 pop bx
 	001272d8 lor bx,ax
 	001272e4 mov ax,bx
		001272f0: FALL_THROUGH

	[001272f0]
		00127190: CONDITIONAL_JUMP
		0012723c: FALL_THROUGH
 	001272f0 jz 0x00127430
		00127430: CONDITIONAL_JUMP
		001272f8: FALL_THROUGH

	[001272f8]
		001272f0: FALL_THROUGH
 	001272f8 sourceline 0x8e9
 	00127300 mov ax,0x1
 	0012730c mov bx,ax
 	00127318 mov mar,0x3cef20
 	00127324 mov ax,mar
 	00127330 push op
 	00127338 mov op,ax
 	00127340 farpush bx
 	00127348 setfuncargs 0x1
 	00127350 mov ax,0x69ef20
 	0012735c farcall ax
 	00127364 farsubsp 0x1
 	0012736c pop op
 	00127374 sourceline 0x8ea
 	0012737c push op
 	00127384 mov ax,0x2b89d7
 	00127390 farpush ax
 	00127398 mov ax,0x138
 	001273a4 farpush ax
 	001273ac mov ax,0x92
 	001273b8 farpush ax
 	001273c0 mov ax,0x0
 	001273cc farpush ax
 	001273d4 mov mar,0x3cef20
 	001273e0 mov ax,mar
 	001273ec mov op,ax
 	001273f4 setfuncargs 0x4
 	001273fc mov ax,0x6aef20
 	00127408 farcall ax
 	00127410 farsubsp 0x4
 	00127418 pop op
 	00127420 sourceline 0x8eb
 	00127428 jmp 0x00127c8c
		00127c8c: UNCONDITIONAL_JUMP

	[00127430]
		001272f0: CONDITIONAL_JUMP
 	00127430 sourceline 0x8ed
 	00127438 mov mar,0x3cef20
 	00127444 mov ax,mar
 	00127450 push op
 	00127458 mov op,ax
 	00127460 setfuncargs 0x0
 	00127468 mov ax,0x89ef20
 	00127474 farcall ax
 	0012747c pop op
 	00127484 push ax
 	0012748c mov mar,0x7cef20
 	00127498 mov ax,mar
 	001274a4 pop bx
 	001274ac cmpeq bx,ax
 	001274b8 mov ax,bx
 	001274c4 jz 0x00127604
		00127604: CONDITIONAL_JUMP
		001274cc: FALL_THROUGH

	[001274cc]
		00127430: FALL_THROUGH
 	001274cc sourceline 0x8ef
 	001274d4 mov ax,0x1
 	001274e0 mov bx,ax
 	001274ec mov mar,0x3cef20
 	001274f8 mov ax,mar
 	00127504 push op
 	0012750c mov op,ax
 	00127514 farpush bx
 	0012751c setfuncargs 0x1
 	00127524 mov ax,0x69ef20
 	00127530 farcall ax
 	00127538 farsubsp 0x1
 	00127540 pop op
 	00127548 sourceline 0x8f0
 	00127550 push op
 	00127558 mov ax,0x2b8ba6
 	00127564 farpush ax
 	0012756c mov ax,0x138
 	00127578 farpush ax
 	00127580 mov ax,0x92
 	0012758c farpush ax
 	00127594 mov ax,0x0
 	001275a0 farpush ax
 	001275a8 mov mar,0x3cef20
 	001275b4 mov ax,mar
 	001275c0 mov op,ax
 	001275c8 setfuncargs 0x4
 	001275d0 mov ax,0x6aef20
 	001275dc farcall ax
 	001275e4 farsubsp 0x4
 	001275ec pop op
 	001275f4 sourceline 0x8f1
 	001275fc jmp 0x00127c8c
		00127c8c: UNCONDITIONAL_JUMP

	[00127604]
		00127430: CONDITIONAL_JUMP
 	00127604 sourceline 0x8f3
 	0012760c mov mar,0x3cef20
 	00127618 mov ax,mar
 	00127624 push op
 	0012762c mov op,ax
 	00127634 setfuncargs 0x0
 	0012763c mov ax,0x89ef20
 	00127648 farcall ax
 	00127650 pop op
 	00127658 push ax
 	00127660 mov mar,0x8d6f20
 	0012766c mov ax,mar
 	00127678 pop bx
 	00127680 cmpeq bx,ax
 	0012768c mov ax,bx
 	00127698 jz 0x001277d8
		001277d8: CONDITIONAL_JUMP
		001276a0: FALL_THROUGH

	[001276a0]
		00127604: FALL_THROUGH
 	001276a0 sourceline 0x8f5
 	001276a8 mov ax,0x1
 	001276b4 mov bx,ax
 	001276c0 mov mar,0x3cef20
 	001276cc mov ax,mar
 	001276d8 push op
 	001276e0 mov op,ax
 	001276e8 farpush bx
 	001276f0 setfuncargs 0x1
 	001276f8 mov ax,0x69ef20
 	00127704 farcall ax
 	0012770c farsubsp 0x1
 	00127714 pop op
 	0012771c sourceline 0x8f6
 	00127724 push op
 	0012772c mov ax,0x2b8a39
 	00127738 farpush ax
 	00127740 mov ax,0x138
 	0012774c farpush ax
 	00127754 mov ax,0x92
 	00127760 farpush ax
 	00127768 mov ax,0x0
 	00127774 farpush ax
 	0012777c mov mar,0x3cef20
 	00127788 mov ax,mar
 	00127794 mov op,ax
 	0012779c setfuncargs 0x4
 	001277a4 mov ax,0x6aef20
 	001277b0 farcall ax
 	001277b8 farsubsp 0x4
 	001277c0 pop op
 	001277c8 sourceline 0x8f7
 	001277d0 jmp 0x00127c8c
		00127c8c: UNCONDITIONAL_JUMP

	[001277d8]
		00127604: CONDITIONAL_JUMP
 	001277d8 sourceline 0x8f9
 	001277e0 mov mar,0x3cef20
 	001277ec mov ax,mar
 	001277f8 push op
 	00127800 mov op,ax
 	00127808 setfuncargs 0x0
 	00127810 mov ax,0x89ef20
 	0012781c farcall ax
 	00127824 pop op
 	0012782c push ax
 	00127834 mov mar,0x8b6f20
 	00127840 mov ax,mar
 	0012784c pop bx
 	00127854 cmpeq bx,ax
 	00127860 mov ax,bx
 	0012786c jnz 0x00127928
		00127928: CONDITIONAL_JUMP
		00127874: FALL_THROUGH

	[00127874]
		001277d8: FALL_THROUGH
 	00127874 push ax
 	0012787c mov mar,0x3cef20
 	00127888 mov ax,mar
 	00127894 push op
 	0012789c mov op,ax
 	001278a4 setfuncargs 0x0
 	001278ac mov ax,0x89ef20
 	001278b8 farcall ax
 	001278c0 pop op
 	001278c8 push ax
 	001278d0 mov mar,0x8bef20
 	001278dc mov ax,mar
 	001278e8 pop bx
 	001278f0 cmpeq bx,ax
 	001278fc mov ax,bx
 	00127908 pop bx
 	00127910 lor bx,ax
 	0012791c mov ax,bx
		00127928: FALL_THROUGH

	[00127928]
		001277d8: CONDITIONAL_JUMP
		00127874: FALL_THROUGH
 	00127928 jz 0x00127a68
		00127a68: CONDITIONAL_JUMP
		00127930: FALL_THROUGH

	[00127930]
		00127928: FALL_THROUGH
 	00127930 sourceline 0x8fb
 	00127938 mov ax,0x1
 	00127944 mov bx,ax
 	00127950 mov mar,0x3cef20
 	0012795c mov ax,mar
 	00127968 push op
 	00127970 mov op,ax
 	00127978 farpush bx
 	00127980 setfuncargs 0x1
 	00127988 mov ax,0x69ef20
 	00127994 farcall ax
 	0012799c farsubsp 0x1
 	001279a4 pop op
 	001279ac sourceline 0x8fc
 	001279b4 push op
 	001279bc mov ax,0x2ba036
 	001279c8 farpush ax
 	001279d0 mov ax,0x138
 	001279dc farpush ax
 	001279e4 mov ax,0x92
 	001279f0 farpush ax
 	001279f8 mov ax,0x0
 	00127a04 farpush ax
 	00127a0c mov mar,0x3cef20
 	00127a18 mov ax,mar
 	00127a24 mov op,ax
 	00127a2c setfuncargs 0x4
 	00127a34 mov ax,0x6aef20
 	00127a40 farcall ax
 	00127a48 farsubsp 0x4
 	00127a50 pop op
 	00127a58 sourceline 0x8fd
 	00127a60 jmp 0x00127c8c
		00127c8c: UNCONDITIONAL_JUMP

	[00127a68]
		00127928: CONDITIONAL_JUMP
 	00127a68 sourceline 0x8ff
 	00127a70 mov mar,0x3cef20
 	00127a7c mov ax,mar
 	00127a88 push op
 	00127a90 mov op,ax
 	00127a98 setfuncargs 0x0
 	00127aa0 mov ax,0x89ef20
 	00127aac farcall ax
 	00127ab4 pop op
 	00127abc push ax
 	00127ac4 mov mar,0x8c6f20
 	00127ad0 mov ax,mar
 	00127adc pop bx
 	00127ae4 cmpeq bx,ax
 	00127af0 mov ax,bx
 	00127afc jz 0x00127c3c
		00127c3c: CONDITIONAL_JUMP
		00127b04: FALL_THROUGH

	[00127b04]
		00127a68: FALL_THROUGH
 	00127b04 sourceline 0x901
 	00127b0c mov ax,0x1
 	00127b18 mov bx,ax
 	00127b24 mov mar,0x3cef20
 	00127b30 mov ax,mar
 	00127b3c push op
 	00127b44 mov op,ax
 	00127b4c farpush bx
 	00127b54 setfuncargs 0x1
 	00127b5c mov ax,0x69ef20
 	00127b68 farcall ax
 	00127b70 farsubsp 0x1
 	00127b78 pop op
 	00127b80 sourceline 0x902
 	00127b88 push op
 	00127b90 mov ax,0x2ba410
 	00127b9c farpush ax
 	00127ba4 mov ax,0x138
 	00127bb0 farpush ax
 	00127bb8 mov ax,0x92
 	00127bc4 farpush ax
 	00127bcc mov ax,0x0
 	00127bd8 farpush ax
 	00127be0 mov mar,0x3cef20
 	00127bec mov ax,mar
 	00127bf8 mov op,ax
 	00127c00 setfuncargs 0x4
 	00127c08 mov ax,0x6aef20
 	00127c14 farcall ax
 	00127c1c farsubsp 0x4
 	00127c24 pop op
 	00127c2c sourceline 0x903
 	00127c34 jmp 0x00127c8c
		00127c8c: UNCONDITIONAL_JUMP

	[00127c3c]
		00127a68: CONDITIONAL_JUMP
 	00127c3c sourceline 0x905
 	00127c44 mov ax,0x3
 	00127c50 push ax
 	00127c58 mov ax,0x5
 	00127c64 push ax
 	00127c6c mov ax,0x10ae5c
 	00127c78 call ax
 	00127c80 sub sp,0x8
		00127c8c: FALL_THROUGH

	[00127c8c]
		001272f8: UNCONDITIONAL_JUMP
		001274cc: UNCONDITIONAL_JUMP
		001276a0: UNCONDITIONAL_JUMP
		00127930: UNCONDITIONAL_JUMP
		00127b04: UNCONDITIONAL_JUMP
		00127c3c: FALL_THROUGH
 	00127c8c sourceline 0x906
 	00127c94 mov ax,0x0
 	00127ca0 ret

iDocumentsEnvelope_UseInv$0:
	[00127ca4]
 	00127ca4 sourceline 0x90b
 	00127cac thisaddr
 	00127cb4 sourceline 0x90c
*	00127cbc mov mar,0x3cef20
 	00127cc8 mov ax,mar
 	00127cd4 push op
 	00127cdc mov op,ax
 	00127ce4 setfuncargs 0x0
 	00127cec mov ax,0x89ef20
 	00127cf8 farcall ax
 	00127d00 pop op
 	00127d08 push ax
 	00127d10 mov mar,0x8d6f20
 	00127d1c mov ax,mar
 	00127d28 pop bx
 	00127d30 cmpeq bx,ax
 	00127d3c mov ax,bx
 	00127d48 jnz 0x00127e04
		00127e04: CONDITIONAL_JUMP
		00127d50: FALL_THROUGH

	[00127d50]
		00127ca4: FALL_THROUGH
 	00127d50 push ax
 	00127d58 mov mar,0x3cef20
 	00127d64 mov ax,mar
 	00127d70 push op
 	00127d78 mov op,ax
 	00127d80 setfuncargs 0x0
 	00127d88 mov ax,0x89ef20
 	00127d94 farcall ax
 	00127d9c pop op
 	00127da4 push ax
 	00127dac mov mar,0x8cef20
 	00127db8 mov ax,mar
 	00127dc4 pop bx
 	00127dcc cmpeq bx,ax
 	00127dd8 mov ax,bx
 	00127de4 pop bx
 	00127dec lor bx,ax
 	00127df8 mov ax,bx
		00127e04: FALL_THROUGH

	[00127e04]
		00127ca4: CONDITIONAL_JUMP
		00127d50: FALL_THROUGH
 	00127e04 jz 0x00127f44
		00127f44: CONDITIONAL_JUMP
		00127e0c: FALL_THROUGH

	[00127e0c]
		00127e04: FALL_THROUGH
 	00127e0c sourceline 0x90e
 	00127e14 mov ax,0x1
 	00127e20 mov bx,ax
 	00127e2c mov mar,0x3cef20
 	00127e38 mov ax,mar
 	00127e44 push op
 	00127e4c mov op,ax
 	00127e54 farpush bx
 	00127e5c setfuncargs 0x1
 	00127e64 mov ax,0x69ef20
 	00127e70 farcall ax
 	00127e78 farsubsp 0x1
 	00127e80 pop op
 	00127e88 sourceline 0x90f
 	00127e90 push op
 	00127e98 mov ax,0x2b9adb
 	00127ea4 farpush ax
 	00127eac mov ax,0x138
 	00127eb8 farpush ax
 	00127ec0 mov ax,0x92
 	00127ecc farpush ax
 	00127ed4 mov ax,0x0
 	00127ee0 farpush ax
 	00127ee8 mov mar,0x3cef20
 	00127ef4 mov ax,mar
 	00127f00 mov op,ax
 	00127f08 setfuncargs 0x4
 	00127f10 mov ax,0x6aef20
 	00127f1c farcall ax
 	00127f24 farsubsp 0x4
 	00127f2c pop op
 	00127f34 sourceline 0x910
 	00127f3c jmp 0x001286e4
		001286e4: UNCONDITIONAL_JUMP

	[00127f44]
		00127e04: CONDITIONAL_JUMP
 	00127f44 sourceline 0x912
 	00127f4c mov mar,0x3cef20
 	00127f58 mov ax,mar
 	00127f64 push op
 	00127f6c mov op,ax
 	00127f74 setfuncargs 0x0
 	00127f7c mov ax,0x89ef20
 	00127f88 farcall ax
 	00127f90 pop op
 	00127f98 push ax
 	00127fa0 mov mar,0x8b6f20
 	00127fac mov ax,mar
 	00127fb8 pop bx
 	00127fc0 cmpeq bx,ax
 	00127fcc mov ax,bx
 	00127fd8 jz 0x00128118
		00128118: CONDITIONAL_JUMP
		00127fe0: FALL_THROUGH

	[00127fe0]
		00127f44: FALL_THROUGH
 	00127fe0 sourceline 0x914
 	00127fe8 mov ax,0x1
 	00127ff4 mov bx,ax
 	00128000 mov mar,0x3cef20
 	0012800c mov ax,mar
 	00128018 push op
 	00128020 mov op,ax
 	00128028 farpush bx
 	00128030 setfuncargs 0x1
 	00128038 mov ax,0x69ef20
 	00128044 farcall ax
 	0012804c farsubsp 0x1
 	00128054 pop op
 	0012805c sourceline 0x915
 	00128064 push op
 	0012806c mov ax,0x2b8caf
 	00128078 farpush ax
 	00128080 mov ax,0x138
 	0012808c farpush ax
 	00128094 mov ax,0x92
 	001280a0 farpush ax
 	001280a8 mov ax,0x0
 	001280b4 farpush ax
 	001280bc mov mar,0x3cef20
 	001280c8 mov ax,mar
 	001280d4 mov op,ax
 	001280dc setfuncargs 0x4
 	001280e4 mov ax,0x6aef20
 	001280f0 farcall ax
 	001280f8 farsubsp 0x4
 	00128100 pop op
 	00128108 sourceline 0x916
 	00128110 jmp 0x001286e4
		001286e4: UNCONDITIONAL_JUMP

	[00128118]
		00127f44: CONDITIONAL_JUMP
 	00128118 sourceline 0x918
 	00128120 mov mar,0x3cef20
 	0012812c mov ax,mar
 	00128138 push op
 	00128140 mov op,ax
 	00128148 setfuncargs 0x0
 	00128150 mov ax,0x89ef20
 	0012815c farcall ax
 	00128164 pop op
 	0012816c push ax
 	00128174 mov mar,0x8bef20
 	00128180 mov ax,mar
 	0012818c pop bx
 	00128194 cmpeq bx,ax
 	001281a0 mov ax,bx
 	001281ac jz 0x001282ec
		001282ec: CONDITIONAL_JUMP
		001281b4: FALL_THROUGH

	[001281b4]
		00128118: FALL_THROUGH
 	001281b4 sourceline 0x91a
 	001281bc mov ax,0x1
 	001281c8 mov bx,ax
 	001281d4 mov mar,0x3cef20
 	001281e0 mov ax,mar
 	001281ec push op
 	001281f4 mov op,ax
 	001281fc farpush bx
 	00128204 setfuncargs 0x1
 	0012820c mov ax,0x69ef20
 	00128218 farcall ax
 	00128220 farsubsp 0x1
 	00128228 pop op
 	00128230 sourceline 0x91b
 	00128238 push op
 	00128240 mov ax,0x2b8b2a
 	0012824c farpush ax
 	00128254 mov ax,0x138
 	00128260 farpush ax
 	00128268 mov ax,0x92
 	00128274 farpush ax
 	0012827c mov ax,0x0
 	00128288 farpush ax
 	00128290 mov mar,0x3cef20
 	0012829c mov ax,mar
 	001282a8 mov op,ax
 	001282b0 setfuncargs 0x4
 	001282b8 mov ax,0x6aef20
 	001282c4 farcall ax
 	001282cc farsubsp 0x4
 	001282d4 pop op
 	001282dc sourceline 0x91c
 	001282e4 jmp 0x001286e4
		001286e4: UNCONDITIONAL_JUMP

	[001282ec]
		00128118: CONDITIONAL_JUMP
 	001282ec sourceline 0x91e
 	001282f4 mov mar,0x3cef20
 	00128300 mov ax,mar
 	0012830c push op
 	00128314 mov op,ax
 	0012831c setfuncargs 0x0
 	00128324 mov ax,0x89ef20
 	00128330 farcall ax
 	00128338 pop op
 	00128340 push ax
 	00128348 mov mar,0x8c6f20
 	00128354 mov ax,mar
 	00128360 pop bx
 	00128368 cmpeq bx,ax
 	00128374 mov ax,bx
 	00128380 jz 0x001284c0
		001284c0: CONDITIONAL_JUMP
		00128388: FALL_THROUGH

	[00128388]
		001282ec: FALL_THROUGH
 	00128388 sourceline 0x920
 	00128390 mov ax,0x1
 	0012839c mov bx,ax
 	001283a8 mov mar,0x3cef20
 	001283b4 mov ax,mar
 	001283c0 push op
 	001283c8 mov op,ax
 	001283d0 farpush bx
 	001283d8 setfuncargs 0x1
 	001283e0 mov ax,0x69ef20
 	001283ec farcall ax
 	001283f4 farsubsp 0x1
 	001283fc pop op
 	00128404 sourceline 0x921
 	0012840c push op
 	00128414 mov ax,0x2ba410
 	00128420 farpush ax
 	00128428 mov ax,0x138
 	00128434 farpush ax
 	0012843c mov ax,0x92
 	00128448 farpush ax
 	00128450 mov ax,0x0
 	0012845c farpush ax
 	00128464 mov mar,0x3cef20
 	00128470 mov ax,mar
 	0012847c mov op,ax
 	00128484 setfuncargs 0x4
 	0012848c mov ax,0x6aef20
 	00128498 farcall ax
 	001284a0 farsubsp 0x4
 	001284a8 pop op
 	001284b0 sourceline 0x922
 	001284b8 jmp 0x001286e4
		001286e4: UNCONDITIONAL_JUMP

	[001284c0]
		001282ec: CONDITIONAL_JUMP
 	001284c0 sourceline 0x924
 	001284c8 mov mar,0x3cef20
 	001284d4 mov ax,mar
 	001284e0 push op
 	001284e8 mov op,ax
 	001284f0 setfuncargs 0x0
 	001284f8 mov ax,0x89ef20
 	00128504 farcall ax
 	0012850c pop op
 	00128514 push ax
 	0012851c mov mar,0x8a6f20
 	00128528 mov ax,mar
 	00128534 pop bx
 	0012853c cmpeq bx,ax
 	00128548 mov ax,bx
 	00128554 jz 0x00128694
		00128694: CONDITIONAL_JUMP
		0012855c: FALL_THROUGH

	[0012855c]
		001284c0: FALL_THROUGH
 	0012855c sourceline 0x926
 	00128564 mov ax,0x1
 	00128570 mov bx,ax
 	0012857c mov mar,0x3cef20
 	00128588 mov ax,mar
 	00128594 push op
 	0012859c mov op,ax
 	001285a4 farpush bx
 	001285ac setfuncargs 0x1
 	001285b4 mov ax,0x69ef20
 	001285c0 farcall ax
 	001285c8 farsubsp 0x1
 	001285d0 pop op
 	001285d8 sourceline 0x927
 	001285e0 push op
 	001285e8 mov ax,0x2b8ba6
 	001285f4 farpush ax
 	001285fc mov ax,0x138
 	00128608 farpush ax
 	00128610 mov ax,0x92
 	0012861c farpush ax
 	00128624 mov ax,0x0
 	00128630 farpush ax
 	00128638 mov mar,0x3cef20
 	00128644 mov ax,mar
 	00128650 mov op,ax
 	00128658 setfuncargs 0x4
 	00128660 mov ax,0x6aef20
 	0012866c farcall ax
 	00128674 farsubsp 0x4
 	0012867c pop op
 	00128684 sourceline 0x928
 	0012868c jmp 0x001286e4
		001286e4: UNCONDITIONAL_JUMP

	[00128694]
		001284c0: CONDITIONAL_JUMP
 	00128694 sourceline 0x92a
 	0012869c mov ax,0x3
 	001286a8 push ax
 	001286b0 mov ax,0x5
 	001286bc push ax
 	001286c4 mov ax,0x10ae5c
 	001286d0 call ax
 	001286d8 sub sp,0x8
		001286e4: FALL_THROUGH

	[001286e4]
		00127e0c: UNCONDITIONAL_JUMP
		00127fe0: UNCONDITIONAL_JUMP
		001281b4: UNCONDITIONAL_JUMP
		00128388: UNCONDITIONAL_JUMP
		0012855c: UNCONDITIONAL_JUMP
		00128694: FALL_THROUGH
 	001286e4 sourceline 0x92b
 	001286ec mov ax,0x0
 	001286f8 ret

iDocumentsOpened_UseInv$0:
	[001286fc]
 	001286fc sourceline 0x930
 	00128704 thisaddr
 	0012870c sourceline 0x931
*	00128714 mov mar,0x3cef20
 	00128720 mov ax,mar
 	0012872c push op
 	00128734 mov op,ax
 	0012873c setfuncargs 0x0
 	00128744 mov ax,0x89ef20
 	00128750 farcall ax
 	00128758 pop op
 	00128760 push ax
 	00128768 mov mar,0x886f20
 	00128774 mov ax,mar
 	00128780 pop bx
 	00128788 cmpeq bx,ax
 	00128794 mov ax,bx
 	001287a0 jz 0x001288e0
		001288e0: CONDITIONAL_JUMP
		001287a8: FALL_THROUGH

	[001287a8]
		001286fc: FALL_THROUGH
 	001287a8 sourceline 0x933
 	001287b0 mov ax,0x1
 	001287bc mov bx,ax
 	001287c8 mov mar,0x3cef20
 	001287d4 mov ax,mar
 	001287e0 push op
 	001287e8 mov op,ax
 	001287f0 farpush bx
 	001287f8 setfuncargs 0x1
 	00128800 mov ax,0x69ef20
 	0012880c farcall ax
 	00128814 farsubsp 0x1
 	0012881c pop op
 	00128824 sourceline 0x934
 	0012882c push op
 	00128834 mov ax,0x2b9adb
 	00128840 farpush ax
 	00128848 mov ax,0x138
 	00128854 farpush ax
 	0012885c mov ax,0x92
 	00128868 farpush ax
 	00128870 mov ax,0x0
 	0012887c farpush ax
 	00128884 mov mar,0x3cef20
 	00128890 mov ax,mar
 	0012889c mov op,ax
 	001288a4 setfuncargs 0x4
 	001288ac mov ax,0x6aef20
 	001288b8 farcall ax
 	001288c0 farsubsp 0x4
 	001288c8 pop op
 	001288d0 sourceline 0x935
 	001288d8 jmp 0x001294e4
		001294e4: UNCONDITIONAL_JUMP

	[001288e0]
		001286fc: CONDITIONAL_JUMP
 	001288e0 sourceline 0x937
 	001288e8 mov mar,0x3cef20
 	001288f4 mov ax,mar
 	00128900 push op
 	00128908 mov op,ax
 	00128910 setfuncargs 0x0
 	00128918 mov ax,0x89ef20
 	00128924 farcall ax
 	0012892c pop op
 	00128934 push ax
 	0012893c mov mar,0x94ef20
 	00128948 mov ax,mar
 	00128954 pop bx
 	0012895c cmpeq bx,ax
 	00128968 mov ax,bx
 	00128974 jz 0x00128ab4
		00128ab4: CONDITIONAL_JUMP
		0012897c: FALL_THROUGH

	[0012897c]
		001288e0: FALL_THROUGH
 	0012897c sourceline 0x939
 	00128984 mov ax,0x1
 	00128990 mov bx,ax
 	0012899c mov mar,0x3cef20
 	001289a8 mov ax,mar
 	001289b4 push op
 	001289bc mov op,ax
 	001289c4 farpush bx
 	001289cc setfuncargs 0x1
 	001289d4 mov ax,0x69ef20
 	001289e0 farcall ax
 	001289e8 farsubsp 0x1
 	001289f0 pop op
 	001289f8 sourceline 0x93a
 	00128a00 push op
 	00128a08 mov ax,0x2b9b31
 	00128a14 farpush ax
 	00128a1c mov ax,0x138
 	00128a28 farpush ax
 	00128a30 mov ax,0x92
 	00128a3c farpush ax
 	00128a44 mov ax,0x0
 	00128a50 farpush ax
 	00128a58 mov mar,0x3cef20
 	00128a64 mov ax,mar
 	00128a70 mov op,ax
 	00128a78 setfuncargs 0x4
 	00128a80 mov ax,0x6aef20
 	00128a8c farcall ax
 	00128a94 farsubsp 0x4
 	00128a9c pop op
 	00128aa4 sourceline 0x93b
 	00128aac jmp 0x001294e4
		001294e4: UNCONDITIONAL_JUMP

	[00128ab4]
		001288e0: CONDITIONAL_JUMP
 	00128ab4 sourceline 0x93d
 	00128abc mov mar,0x3cef20
 	00128ac8 mov ax,mar
 	00128ad4 push op
 	00128adc mov op,ax
 	00128ae4 setfuncargs 0x0
 	00128aec mov ax,0x89ef20
 	00128af8 farcall ax
 	00128b00 pop op
 	00128b08 push ax
 	00128b10 mov mar,0x946f20
 	00128b1c mov ax,mar
 	00128b28 pop bx
 	00128b30 cmpeq bx,ax
 	00128b3c mov ax,bx
 	00128b48 jz 0x00128c88
		00128c88: CONDITIONAL_JUMP
		00128b50: FALL_THROUGH

	[00128b50]
		00128ab4: FALL_THROUGH
 	00128b50 sourceline 0x93f
 	00128b58 mov ax,0x1
 	00128b64 mov bx,ax
 	00128b70 mov mar,0x3cef20
 	00128b7c mov ax,mar
 	00128b88 push op
 	00128b90 mov op,ax
 	00128b98 farpush bx
 	00128ba0 setfuncargs 0x1
 	00128ba8 mov ax,0x69ef20
 	00128bb4 farcall ax
 	00128bbc farsubsp 0x1
 	00128bc4 pop op
 	00128bcc sourceline 0x940
 	00128bd4 push op
 	00128bdc mov ax,0x2b9e38
 	00128be8 farpush ax
 	00128bf0 mov ax,0x138
 	00128bfc farpush ax
 	00128c04 mov ax,0x92
 	00128c10 farpush ax
 	00128c18 mov ax,0x0
 	00128c24 farpush ax
 	00128c2c mov mar,0x3cef20
 	00128c38 mov ax,mar
 	00128c44 mov op,ax
 	00128c4c setfuncargs 0x4
 	00128c54 mov ax,0x6aef20
 	00128c60 farcall ax
 	00128c68 farsubsp 0x4
 	00128c70 pop op
 	00128c78 sourceline 0x941
 	00128c80 jmp 0x001294e4
		001294e4: UNCONDITIONAL_JUMP

	[00128c88]
		00128ab4: CONDITIONAL_JUMP
 	00128c88 sourceline 0x943
 	00128c90 mov mar,0x3cef20
 	00128c9c mov ax,mar
 	00128ca8 push op
 	00128cb0 mov op,ax
 	00128cb8 setfuncargs 0x0
 	00128cc0 mov ax,0x89ef20
 	00128ccc farcall ax
 	00128cd4 pop op
 	00128cdc push ax
 	00128ce4 mov mar,0x9fef20
 	00128cf0 mov ax,mar
 	00128cfc pop bx
 	00128d04 cmpeq bx,ax
 	00128d10 mov ax,bx
 	00128d1c jz 0x00128e5c
		00128e5c: CONDITIONAL_JUMP
		00128d24: FALL_THROUGH

	[00128d24]
		00128c88: FALL_THROUGH
 	00128d24 sourceline 0x945
 	00128d2c mov ax,0x1
 	00128d38 mov bx,ax
 	00128d44 mov mar,0x3cef20
 	00128d50 mov ax,mar
 	00128d5c push op
 	00128d64 mov op,ax
 	00128d6c farpush bx
 	00128d74 setfuncargs 0x1
 	00128d7c mov ax,0x69ef20
 	00128d88 farcall ax
 	00128d90 farsubsp 0x1
 	00128d98 pop op
 	00128da0 sourceline 0x946
 	00128da8 push op
 	00128db0 mov ax,0x2b9817
 	00128dbc farpush ax
 	00128dc4 mov ax,0x138
 	00128dd0 farpush ax
 	00128dd8 mov ax,0x92
 	00128de4 farpush ax
 	00128dec mov ax,0x0
 	00128df8 farpush ax
 	00128e00 mov mar,0x3cef20
 	00128e0c mov ax,mar
 	00128e18 mov op,ax
 	00128e20 setfuncargs 0x4
 	00128e28 mov ax,0x6aef20
 	00128e34 farcall ax
 	00128e3c farsubsp 0x4
 	00128e44 pop op
 	00128e4c sourceline 0x947
 	00128e54 jmp 0x001294e4
		001294e4: UNCONDITIONAL_JUMP

	[00128e5c]
		00128c88: CONDITIONAL_JUMP
 	00128e5c sourceline 0x949
 	00128e64 mov mar,0x3cef20
 	00128e70 mov ax,mar
 	00128e7c push op
 	00128e84 mov op,ax
 	00128e8c setfuncargs 0x0
 	00128e94 mov ax,0x89ef20
 	00128ea0 farcall ax
 	00128ea8 pop op
 	00128eb0 push ax
 	00128eb8 mov mar,0x8b6f20
 	00128ec4 mov ax,mar
 	00128ed0 pop bx
 	00128ed8 cmpeq bx,ax
 	00128ee4 mov ax,bx
 	00128ef0 jnz 0x00128fac
		00128fac: CONDITIONAL_JUMP
		00128ef8: FALL_THROUGH

	[00128ef8]
		00128e5c: FALL_THROUGH
 	00128ef8 push ax
 	00128f00 mov mar,0x3cef20
 	00128f0c mov ax,mar
 	00128f18 push op
 	00128f20 mov op,ax
 	00128f28 setfuncargs 0x0
 	00128f30 mov ax,0x89ef20
 	00128f3c farcall ax
 	00128f44 pop op
 	00128f4c push ax
 	00128f54 mov mar,0x8bef20
 	00128f60 mov ax,mar
 	00128f6c pop bx
 	00128f74 cmpeq bx,ax
 	00128f80 mov ax,bx
 	00128f8c pop bx
 	00128f94 lor bx,ax
 	00128fa0 mov ax,bx
		00128fac: FALL_THROUGH

	[00128fac]
		00128e5c: CONDITIONAL_JUMP
		00128ef8: FALL_THROUGH
 	00128fac jz 0x001290ec
		001290ec: CONDITIONAL_JUMP
		00128fb4: FALL_THROUGH

	[00128fb4]
		00128fac: FALL_THROUGH
 	00128fb4 sourceline 0x94b
 	00128fbc mov ax,0x1
 	00128fc8 mov bx,ax
 	00128fd4 mov mar,0x3cef20
 	00128fe0 mov ax,mar
 	00128fec push op
 	00128ff4 mov op,ax
 	00128ffc farpush bx
 	00129004 setfuncargs 0x1
 	0012900c mov ax,0x69ef20
 	00129018 farcall ax
 	00129020 farsubsp 0x1
 	00129028 pop op
 	00129030 sourceline 0x94c
 	00129038 push op
 	00129040 mov ax,0x2b8caf
 	0012904c farpush ax
 	00129054 mov ax,0x138
 	00129060 farpush ax
 	00129068 mov ax,0x92
 	00129074 farpush ax
 	0012907c mov ax,0x0
 	00129088 farpush ax
 	00129090 mov mar,0x3cef20
 	0012909c mov ax,mar
 	001290a8 mov op,ax
 	001290b0 setfuncargs 0x4
 	001290b8 mov ax,0x6aef20
 	001290c4 farcall ax
 	001290cc farsubsp 0x4
 	001290d4 pop op
 	001290dc sourceline 0x94d
 	001290e4 jmp 0x001294e4
		001294e4: UNCONDITIONAL_JUMP

	[001290ec]
		00128fac: CONDITIONAL_JUMP
 	001290ec sourceline 0x94f
 	001290f4 mov mar,0x3cef20
 	00129100 mov ax,mar
 	0012910c push op
 	00129114 mov op,ax
 	0012911c setfuncargs 0x0
 	00129124 mov ax,0x89ef20
 	00129130 farcall ax
 	00129138 pop op
 	00129140 push ax
 	00129148 mov mar,0x8c6f20
 	00129154 mov ax,mar
 	00129160 pop bx
 	00129168 cmpeq bx,ax
 	00129174 mov ax,bx
 	00129180 jz 0x001292c0
		001292c0: CONDITIONAL_JUMP
		00129188: FALL_THROUGH

	[00129188]
		001290ec: FALL_THROUGH
 	00129188 sourceline 0x951
 	00129190 mov ax,0x1
 	0012919c mov bx,ax
 	001291a8 mov mar,0x3cef20
 	001291b4 mov ax,mar
 	001291c0 push op
 	001291c8 mov op,ax
 	001291d0 farpush bx
 	001291d8 setfuncargs 0x1
 	001291e0 mov ax,0x69ef20
 	001291ec farcall ax
 	001291f4 farsubsp 0x1
 	001291fc pop op
 	00129204 sourceline 0x952
 	0012920c push op
 	00129214 mov ax,0x2ba410
 	00129220 farpush ax
 	00129228 mov ax,0x138
 	00129234 farpush ax
 	0012923c mov ax,0x92
 	00129248 farpush ax
 	00129250 mov ax,0x0
 	0012925c farpush ax
 	00129264 mov mar,0x3cef20
 	00129270 mov ax,mar
 	0012927c mov op,ax
 	00129284 setfuncargs 0x4
 	0012928c mov ax,0x6aef20
 	00129298 farcall ax
 	001292a0 farsubsp 0x4
 	001292a8 pop op
 	001292b0 sourceline 0x953
 	001292b8 jmp 0x001294e4
		001294e4: UNCONDITIONAL_JUMP

	[001292c0]
		001290ec: CONDITIONAL_JUMP
 	001292c0 sourceline 0x955
 	001292c8 mov mar,0x3cef20
 	001292d4 mov ax,mar
 	001292e0 push op
 	001292e8 mov op,ax
 	001292f0 setfuncargs 0x0
 	001292f8 mov ax,0x89ef20
 	00129304 farcall ax
 	0012930c pop op
 	00129314 push ax
 	0012931c mov mar,0x986f20
 	00129328 mov ax,mar
 	00129334 pop bx
 	0012933c cmpeq bx,ax
 	00129348 mov ax,bx
 	00129354 jz 0x00129494
		00129494: CONDITIONAL_JUMP
		0012935c: FALL_THROUGH

	[0012935c]
		001292c0: FALL_THROUGH
 	0012935c sourceline 0x957
 	00129364 mov ax,0x1
 	00129370 mov bx,ax
 	0012937c mov mar,0x3cef20
 	00129388 mov ax,mar
 	00129394 push op
 	0012939c mov op,ax
 	001293a4 farpush bx
 	001293ac setfuncargs 0x1
 	001293b4 mov ax,0x69ef20
 	001293c0 farcall ax
 	001293c8 farsubsp 0x1
 	001293d0 pop op
 	001293d8 sourceline 0x958
 	001293e0 push op
 	001293e8 mov ax,0x2ba0e7
 	001293f4 farpush ax
 	001293fc mov ax,0x138
 	00129408 farpush ax
 	00129410 mov ax,0x92
 	0012941c farpush ax
 	00129424 mov ax,0x0
 	00129430 farpush ax
 	00129438 mov mar,0x3cef20
 	00129444 mov ax,mar
 	00129450 mov op,ax
 	00129458 setfuncargs 0x4
 	00129460 mov ax,0x6aef20
 	0012946c farcall ax
 	00129474 farsubsp 0x4
 	0012947c pop op
 	00129484 sourceline 0x959
 	0012948c jmp 0x001294e4
		001294e4: UNCONDITIONAL_JUMP

	[00129494]
		001292c0: CONDITIONAL_JUMP
 	00129494 sourceline 0x95b
 	0012949c mov ax,0x3
 	001294a8 push ax
 	001294b0 mov ax,0x5
 	001294bc push ax
 	001294c4 mov ax,0x10ae5c
 	001294d0 call ax
 	001294d8 sub sp,0x8
		001294e4: FALL_THROUGH

	[001294e4]
		001287a8: UNCONDITIONAL_JUMP
		0012897c: UNCONDITIONAL_JUMP
		00128b50: UNCONDITIONAL_JUMP
		00128d24: UNCONDITIONAL_JUMP
		00128fb4: UNCONDITIONAL_JUMP
		00129188: UNCONDITIONAL_JUMP
		0012935c: UNCONDITIONAL_JUMP
		00129494: FALL_THROUGH
 	001294e4 sourceline 0x95c
 	001294ec mov ax,0x0
 	001294f8 ret

iAccessCard_UseInv$0:
	[001294fc]
 	001294fc sourceline 0x962
 	00129504 thisaddr
 	0012950c sourceline 0x963
*	00129514 mov mar,0x3cef20
 	00129520 mov ax,mar
 	0012952c push op
 	00129534 mov op,ax
 	0012953c setfuncargs 0x0
 	00129544 mov ax,0x89ef20
 	00129550 farcall ax
 	00129558 pop op
 	00129560 push ax
 	00129568 mov mar,0x8b6f20
 	00129574 mov ax,mar
 	00129580 pop bx
 	00129588 cmpeq bx,ax
 	00129594 mov ax,bx
 	001295a0 jnz 0x0012965c
		0012965c: CONDITIONAL_JUMP
		001295a8: FALL_THROUGH

	[001295a8]
		001294fc: FALL_THROUGH
 	001295a8 push ax
 	001295b0 mov mar,0x3cef20
 	001295bc mov ax,mar
 	001295c8 push op
 	001295d0 mov op,ax
 	001295d8 setfuncargs 0x0
 	001295e0 mov ax,0x89ef20
 	001295ec farcall ax
 	001295f4 pop op
 	001295fc push ax
 	00129604 mov mar,0x8bef20
 	00129610 mov ax,mar
 	0012961c pop bx
 	00129624 cmpeq bx,ax
 	00129630 mov ax,bx
 	0012963c pop bx
 	00129644 lor bx,ax
 	00129650 mov ax,bx
		0012965c: FALL_THROUGH

	[0012965c]
		001294fc: CONDITIONAL_JUMP
		001295a8: FALL_THROUGH
 	0012965c jz 0x0012979c
		0012979c: CONDITIONAL_JUMP
		00129664: FALL_THROUGH

	[00129664]
		0012965c: FALL_THROUGH
 	00129664 sourceline 0x965
 	0012966c mov ax,0x1
 	00129678 mov bx,ax
 	00129684 mov mar,0x3cef20
 	00129690 mov ax,mar
 	0012969c push op
 	001296a4 mov op,ax
 	001296ac farpush bx
 	001296b4 setfuncargs 0x1
 	001296bc mov ax,0x69ef20
 	001296c8 farcall ax
 	001296d0 farsubsp 0x1
 	001296d8 pop op
 	001296e0 sourceline 0x966
 	001296e8 push op
 	001296f0 mov ax,0x2ba036
 	001296fc farpush ax
 	00129704 mov ax,0x138
 	00129710 farpush ax
 	00129718 mov ax,0x92
 	00129724 farpush ax
 	0012972c mov ax,0x0
 	00129738 farpush ax
 	00129740 mov mar,0x3cef20
 	0012974c mov ax,mar
 	00129758 mov op,ax
 	00129760 setfuncargs 0x4
 	00129768 mov ax,0x6aef20
 	00129774 farcall ax
 	0012977c farsubsp 0x4
 	00129784 pop op
 	0012978c sourceline 0x967
 	00129794 jmp 0x001299c0
		001299c0: UNCONDITIONAL_JUMP

	[0012979c]
		0012965c: CONDITIONAL_JUMP
 	0012979c sourceline 0x969
 	001297a4 mov mar,0x3cef20
 	001297b0 mov ax,mar
 	001297bc push op
 	001297c4 mov op,ax
 	001297cc setfuncargs 0x0
 	001297d4 mov ax,0x89ef20
 	001297e0 farcall ax
 	001297e8 pop op
 	001297f0 push ax
 	001297f8 mov mar,0x93ef20
 	00129804 mov ax,mar
 	00129810 pop bx
 	00129818 cmpeq bx,ax
 	00129824 mov ax,bx
 	00129830 jz 0x00129970
		00129970: CONDITIONAL_JUMP
		00129838: FALL_THROUGH

	[00129838]
		0012979c: FALL_THROUGH
 	00129838 sourceline 0x96b
 	00129840 mov ax,0x1
 	0012984c mov bx,ax
 	00129858 mov mar,0x3cef20
 	00129864 mov ax,mar
 	00129870 push op
 	00129878 mov op,ax
 	00129880 farpush bx
 	00129888 setfuncargs 0x1
 	00129890 mov ax,0x69ef20
 	0012989c farcall ax
 	001298a4 farsubsp 0x1
 	001298ac pop op
 	001298b4 sourceline 0x96c
 	001298bc push op
 	001298c4 mov ax,0x2b9ee0
 	001298d0 farpush ax
 	001298d8 mov ax,0x138
 	001298e4 farpush ax
 	001298ec mov ax,0x92
 	001298f8 farpush ax
 	00129900 mov ax,0x0
 	0012990c farpush ax
 	00129914 mov mar,0x3cef20
 	00129920 mov ax,mar
 	0012992c mov op,ax
 	00129934 setfuncargs 0x4
 	0012993c mov ax,0x6aef20
 	00129948 farcall ax
 	00129950 farsubsp 0x4
 	00129958 pop op
 	00129960 sourceline 0x96d
 	00129968 jmp 0x001299c0
		001299c0: UNCONDITIONAL_JUMP

	[00129970]
		0012979c: CONDITIONAL_JUMP
 	00129970 sourceline 0x96f
 	00129978 mov ax,0x3
 	00129984 push ax
 	0012998c mov ax,0x5
 	00129998 push ax
 	001299a0 mov ax,0x10ae5c
 	001299ac call ax
 	001299b4 sub sp,0x8
		001299c0: FALL_THROUGH

	[001299c0]
		00129664: UNCONDITIONAL_JUMP
		00129838: UNCONDITIONAL_JUMP
		00129970: FALL_THROUGH
 	001299c0 sourceline 0x970
 	001299c8 mov ax,0x0
 	001299d4 ret

iRabanPhone_UseInv$0:
	[001299d8]
 	001299d8 sourceline 0x977
 	001299e0 thisaddr
 	001299e8 sourceline 0x978
*	001299f0 mov mar,0x3cef20
 	001299fc mov ax,mar
 	00129a08 push op
 	00129a10 mov op,ax
 	00129a18 setfuncargs 0x0
 	00129a20 mov ax,0x89ef20
 	00129a2c farcall ax
 	00129a34 pop op
 	00129a3c push ax
 	00129a44 mov mar,0x8a6f20
 	00129a50 mov ax,mar
 	00129a5c pop bx
 	00129a64 cmpeq bx,ax
 	00129a70 mov ax,bx
 	00129a7c jz 0x00129bbc
		00129bbc: CONDITIONAL_JUMP
		00129a84: FALL_THROUGH

	[00129a84]
		001299d8: FALL_THROUGH
 	00129a84 sourceline 0x97a
 	00129a8c mov ax,0x1
 	00129a98 mov bx,ax
 	00129aa4 mov mar,0x3cef20
 	00129ab0 mov ax,mar
 	00129abc push op
 	00129ac4 mov op,ax
 	00129acc farpush bx
 	00129ad4 setfuncargs 0x1
 	00129adc mov ax,0x69ef20
 	00129ae8 farcall ax
 	00129af0 farsubsp 0x1
 	00129af8 pop op
 	00129b00 sourceline 0x97b
 	00129b08 push op
 	00129b10 mov ax,0x2b8d98
 	00129b1c farpush ax
 	00129b24 mov ax,0x138
 	00129b30 farpush ax
 	00129b38 mov ax,0x92
 	00129b44 farpush ax
 	00129b4c mov ax,0x0
 	00129b58 farpush ax
 	00129b60 mov mar,0x3cef20
 	00129b6c mov ax,mar
 	00129b78 mov op,ax
 	00129b80 setfuncargs 0x4
 	00129b88 mov ax,0x6aef20
 	00129b94 farcall ax
 	00129b9c farsubsp 0x4
 	00129ba4 pop op
 	00129bac sourceline 0x97c
 	00129bb4 jmp 0x00129de0
		00129de0: UNCONDITIONAL_JUMP

	[00129bbc]
		001299d8: CONDITIONAL_JUMP
 	00129bbc sourceline 0x97e
 	00129bc4 mov mar,0x3cef20
 	00129bd0 mov ax,mar
 	00129bdc push op
 	00129be4 mov op,ax
 	00129bec setfuncargs 0x0
 	00129bf4 mov ax,0x89ef20
 	00129c00 farcall ax
 	00129c08 pop op
 	00129c10 push ax
 	00129c18 mov mar,0x8cef20
 	00129c24 mov ax,mar
 	00129c30 pop bx
 	00129c38 cmpeq bx,ax
 	00129c44 mov ax,bx
 	00129c50 jz 0x00129d90
		00129d90: CONDITIONAL_JUMP
		00129c58: FALL_THROUGH

	[00129c58]
		00129bbc: FALL_THROUGH
 	00129c58 sourceline 0x980
 	00129c60 mov ax,0x1
 	00129c6c mov bx,ax
 	00129c78 mov mar,0x3cef20
 	00129c84 mov ax,mar
 	00129c90 push op
 	00129c98 mov op,ax
 	00129ca0 farpush bx
 	00129ca8 setfuncargs 0x1
 	00129cb0 mov ax,0x69ef20
 	00129cbc farcall ax
 	00129cc4 farsubsp 0x1
 	00129ccc pop op
 	00129cd4 sourceline 0x981
 	00129cdc push op
 	00129ce4 mov ax,0x2b8dd8
 	00129cf0 farpush ax
 	00129cf8 mov ax,0x138
 	00129d04 farpush ax
 	00129d0c mov ax,0x92
 	00129d18 farpush ax
 	00129d20 mov ax,0x0
 	00129d2c farpush ax
 	00129d34 mov mar,0x3cef20
 	00129d40 mov ax,mar
 	00129d4c mov op,ax
 	00129d54 setfuncargs 0x4
 	00129d5c mov ax,0x6aef20
 	00129d68 farcall ax
 	00129d70 farsubsp 0x4
 	00129d78 pop op
 	00129d80 sourceline 0x982
 	00129d88 jmp 0x00129de0
		00129de0: UNCONDITIONAL_JUMP

	[00129d90]
		00129bbc: CONDITIONAL_JUMP
 	00129d90 sourceline 0x984
 	00129d98 mov ax,0x3
 	00129da4 push ax
 	00129dac mov ax,0x5
 	00129db8 push ax
 	00129dc0 mov ax,0x10ae5c
 	00129dcc call ax
 	00129dd4 sub sp,0x8
		00129de0: FALL_THROUGH

	[00129de0]
		00129a84: UNCONDITIONAL_JUMP
		00129c58: UNCONDITIONAL_JUMP
		00129d90: FALL_THROUGH
 	00129de0 sourceline 0x985
 	00129de8 mov ax,0x0
 	00129df4 ret

iBrochure_UseInv$0:
	[00129df8]
 	00129df8 sourceline 0x98c
 	00129e00 thisaddr
 	00129e08 sourceline 0x98d
*	00129e10 mov mar,0x3cef20
 	00129e1c mov ax,mar
 	00129e28 push op
 	00129e30 mov op,ax
 	00129e38 setfuncargs 0x0
 	00129e40 mov ax,0x89ef20
 	00129e4c farcall ax
 	00129e54 pop op
 	00129e5c push ax
 	00129e64 mov mar,0x95ef20
 	00129e70 mov ax,mar
 	00129e7c pop bx
 	00129e84 cmpeq bx,ax
 	00129e90 mov ax,bx
 	00129e9c jz 0x0012a088
		0012a088: CONDITIONAL_JUMP
		00129ea4: FALL_THROUGH

	[00129ea4]
		00129df8: FALL_THROUGH
 	00129ea4 sourceline 0x98f
 	00129eac mov ax,0x1
 	00129eb8 mov bx,ax
 	00129ec4 mov mar,0x3cef20
 	00129ed0 mov ax,mar
 	00129edc push op
 	00129ee4 mov op,ax
 	00129eec farpush bx
 	00129ef4 setfuncargs 0x1
 	00129efc mov ax,0x69ef20
 	00129f08 farcall ax
 	00129f10 farsubsp 0x1
 	00129f18 pop op
 	00129f20 sourceline 0x990
 	00129f28 push op
 	00129f30 mov ax,0x2b8e35
 	00129f3c farpush ax
 	00129f44 mov ax,0x138
 	00129f50 farpush ax
 	00129f58 mov ax,0x92
 	00129f64 farpush ax
 	00129f6c mov ax,0x0
 	00129f78 farpush ax
 	00129f80 mov mar,0x3cef20
 	00129f8c mov ax,mar
 	00129f98 mov op,ax
 	00129fa0 setfuncargs 0x4
 	00129fa8 mov ax,0x6aef20
 	00129fb4 farcall ax
 	00129fbc farsubsp 0x4
 	00129fc4 pop op
 	00129fcc sourceline 0x991
 	00129fd4 push op
 	00129fdc mov ax,0x2b8f21
 	00129fe8 farpush ax
 	00129ff0 mov ax,0x138
 	00129ffc farpush ax
 	0012a004 mov ax,0x92
 	0012a010 farpush ax
 	0012a018 mov ax,0x0
 	0012a024 farpush ax
 	0012a02c mov mar,0x3cef20
 	0012a038 mov ax,mar
 	0012a044 mov op,ax
 	0012a04c setfuncargs 0x4
 	0012a054 mov ax,0x6aef20
 	0012a060 farcall ax
 	0012a068 farsubsp 0x4
 	0012a070 pop op
 	0012a078 sourceline 0x992
 	0012a080 jmp 0x0012ae60
		0012ae60: UNCONDITIONAL_JUMP

	[0012a088]
		00129df8: CONDITIONAL_JUMP
 	0012a088 sourceline 0x994
 	0012a090 mov mar,0x3cef20
 	0012a09c mov ax,mar
 	0012a0a8 push op
 	0012a0b0 mov op,ax
 	0012a0b8 setfuncargs 0x0
 	0012a0c0 mov ax,0x89ef20
 	0012a0cc farcall ax
 	0012a0d4 pop op
 	0012a0dc push ax
 	0012a0e4 mov mar,0x93ef20
 	0012a0f0 mov ax,mar
 	0012a0fc pop bx
 	0012a104 cmpeq bx,ax
 	0012a110 mov ax,bx
 	0012a11c jz 0x0012a25c
		0012a25c: CONDITIONAL_JUMP
		0012a124: FALL_THROUGH

	[0012a124]
		0012a088: FALL_THROUGH
 	0012a124 sourceline 0x996
 	0012a12c mov ax,0x1
 	0012a138 mov bx,ax
 	0012a144 mov mar,0x3cef20
 	0012a150 mov ax,mar
 	0012a15c push op
 	0012a164 mov op,ax
 	0012a16c farpush bx
 	0012a174 setfuncargs 0x1
 	0012a17c mov ax,0x69ef20
 	0012a188 farcall ax
 	0012a190 farsubsp 0x1
 	0012a198 pop op
 	0012a1a0 sourceline 0x997
 	0012a1a8 push op
 	0012a1b0 mov ax,0x2b9ee0
 	0012a1bc farpush ax
 	0012a1c4 mov ax,0x138
 	0012a1d0 farpush ax
 	0012a1d8 mov ax,0x92
 	0012a1e4 farpush ax
 	0012a1ec mov ax,0x0
 	0012a1f8 farpush ax
 	0012a200 mov mar,0x3cef20
 	0012a20c mov ax,mar
 	0012a218 mov op,ax
 	0012a220 setfuncargs 0x4
 	0012a228 mov ax,0x6aef20
 	0012a234 farcall ax
 	0012a23c farsubsp 0x4
 	0012a244 pop op
 	0012a24c sourceline 0x998
 	0012a254 jmp 0x0012ae60
		0012ae60: UNCONDITIONAL_JUMP

	[0012a25c]
		0012a088: CONDITIONAL_JUMP
 	0012a25c sourceline 0x99a
 	0012a264 mov mar,0x3cef20
 	0012a270 mov ax,mar
 	0012a27c push op
 	0012a284 mov op,ax
 	0012a28c setfuncargs 0x0
 	0012a294 mov ax,0x89ef20
 	0012a2a0 farcall ax
 	0012a2a8 pop op
 	0012a2b0 push ax
 	0012a2b8 mov mar,0x956f20
 	0012a2c4 mov ax,mar
 	0012a2d0 pop bx
 	0012a2d8 cmpeq bx,ax
 	0012a2e4 mov ax,bx
 	0012a2f0 jz 0x0012a430
		0012a430: CONDITIONAL_JUMP
		0012a2f8: FALL_THROUGH

	[0012a2f8]
		0012a25c: FALL_THROUGH
 	0012a2f8 sourceline 0x99c
 	0012a300 mov ax,0x1
 	0012a30c mov bx,ax
 	0012a318 mov mar,0x3cef20
 	0012a324 mov ax,mar
 	0012a330 push op
 	0012a338 mov op,ax
 	0012a340 farpush bx
 	0012a348 setfuncargs 0x1
 	0012a350 mov ax,0x69ef20
 	0012a35c farcall ax
 	0012a364 farsubsp 0x1
 	0012a36c pop op
 	0012a374 sourceline 0x99d
 	0012a37c push op
 	0012a384 mov ax,0x2ba345
 	0012a390 farpush ax
 	0012a398 mov ax,0x138
 	0012a3a4 farpush ax
 	0012a3ac mov ax,0x92
 	0012a3b8 farpush ax
 	0012a3c0 mov ax,0x0
 	0012a3cc farpush ax
 	0012a3d4 mov mar,0x3cef20
 	0012a3e0 mov ax,mar
 	0012a3ec mov op,ax
 	0012a3f4 setfuncargs 0x4
 	0012a3fc mov ax,0x6aef20
 	0012a408 farcall ax
 	0012a410 farsubsp 0x4
 	0012a418 pop op
 	0012a420 sourceline 0x99e
 	0012a428 jmp 0x0012ae60
		0012ae60: UNCONDITIONAL_JUMP

	[0012a430]
		0012a25c: CONDITIONAL_JUMP
 	0012a430 sourceline 0x9a0
 	0012a438 mov mar,0x3cef20
 	0012a444 mov ax,mar
 	0012a450 push op
 	0012a458 mov op,ax
 	0012a460 setfuncargs 0x0
 	0012a468 mov ax,0x89ef20
 	0012a474 farcall ax
 	0012a47c pop op
 	0012a484 push ax
 	0012a48c mov mar,0x8f6f20
 	0012a498 mov ax,mar
 	0012a4a4 pop bx
 	0012a4ac cmpeq bx,ax
 	0012a4b8 mov ax,bx
 	0012a4c4 jz 0x0012a604
		0012a604: CONDITIONAL_JUMP
		0012a4cc: FALL_THROUGH

	[0012a4cc]
		0012a430: FALL_THROUGH
 	0012a4cc sourceline 0x9a2
 	0012a4d4 mov ax,0x1
 	0012a4e0 mov bx,ax
 	0012a4ec mov mar,0x3cef20
 	0012a4f8 mov ax,mar
 	0012a504 push op
 	0012a50c mov op,ax
 	0012a514 farpush bx
 	0012a51c setfuncargs 0x1
 	0012a524 mov ax,0x69ef20
 	0012a530 farcall ax
 	0012a538 farsubsp 0x1
 	0012a540 pop op
 	0012a548 sourceline 0x9a3
 	0012a550 push op
 	0012a558 mov ax,0x2ba18d
 	0012a564 farpush ax
 	0012a56c mov ax,0x138
 	0012a578 farpush ax
 	0012a580 mov ax,0x92
 	0012a58c farpush ax
 	0012a594 mov ax,0x0
 	0012a5a0 farpush ax
 	0012a5a8 mov mar,0x3cef20
 	0012a5b4 mov ax,mar
 	0012a5c0 mov op,ax
 	0012a5c8 setfuncargs 0x4
 	0012a5d0 mov ax,0x6aef20
 	0012a5dc farcall ax
 	0012a5e4 farsubsp 0x4
 	0012a5ec pop op
 	0012a5f4 sourceline 0x9a4
 	0012a5fc jmp 0x0012ae60
		0012ae60: UNCONDITIONAL_JUMP

	[0012a604]
		0012a430: CONDITIONAL_JUMP
 	0012a604 sourceline 0x9a6
 	0012a60c mov mar,0x3cef20
 	0012a618 mov ax,mar
 	0012a624 push op
 	0012a62c mov op,ax
 	0012a634 setfuncargs 0x0
 	0012a63c mov ax,0x89ef20
 	0012a648 farcall ax
 	0012a650 pop op
 	0012a658 push ax
 	0012a660 mov mar,0x90ef20
 	0012a66c mov ax,mar
 	0012a678 pop bx
 	0012a680 cmpeq bx,ax
 	0012a68c mov ax,bx
 	0012a698 jz 0x0012a7d8
		0012a7d8: CONDITIONAL_JUMP
		0012a6a0: FALL_THROUGH

	[0012a6a0]
		0012a604: FALL_THROUGH
 	0012a6a0 sourceline 0x9a8
 	0012a6a8 mov ax,0x1
 	0012a6b4 mov bx,ax
 	0012a6c0 mov mar,0x3cef20
 	0012a6cc mov ax,mar
 	0012a6d8 push op
 	0012a6e0 mov op,ax
 	0012a6e8 farpush bx
 	0012a6f0 setfuncargs 0x1
 	0012a6f8 mov ax,0x69ef20
 	0012a704 farcall ax
 	0012a70c farsubsp 0x1
 	0012a714 pop op
 	0012a71c sourceline 0x9a9
 	0012a724 push op
 	0012a72c mov ax,0x2b99d6
 	0012a738 farpush ax
 	0012a740 mov ax,0x138
 	0012a74c farpush ax
 	0012a754 mov ax,0x92
 	0012a760 farpush ax
 	0012a768 mov ax,0x0
 	0012a774 farpush ax
 	0012a77c mov mar,0x3cef20
 	0012a788 mov ax,mar
 	0012a794 mov op,ax
 	0012a79c setfuncargs 0x4
 	0012a7a4 mov ax,0x6aef20
 	0012a7b0 farcall ax
 	0012a7b8 farsubsp 0x4
 	0012a7c0 pop op
 	0012a7c8 sourceline 0x9aa
 	0012a7d0 jmp 0x0012ae60
		0012ae60: UNCONDITIONAL_JUMP

	[0012a7d8]
		0012a604: CONDITIONAL_JUMP
 	0012a7d8 sourceline 0x9ac
 	0012a7e0 mov mar,0x3cef20
 	0012a7ec mov ax,mar
 	0012a7f8 push op
 	0012a800 mov op,ax
 	0012a808 setfuncargs 0x0
 	0012a810 mov ax,0x89ef20
 	0012a81c farcall ax
 	0012a824 pop op
 	0012a82c push ax
 	0012a834 mov mar,0x886f20
 	0012a840 mov ax,mar
 	0012a84c pop bx
 	0012a854 cmpeq bx,ax
 	0012a860 mov ax,bx
 	0012a86c jz 0x0012a9ac
		0012a9ac: CONDITIONAL_JUMP
		0012a874: FALL_THROUGH

	[0012a874]
		0012a7d8: FALL_THROUGH
 	0012a874 sourceline 0x9ae
 	0012a87c mov ax,0x1
 	0012a888 mov bx,ax
 	0012a894 mov mar,0x3cef20
 	0012a8a0 mov ax,mar
 	0012a8ac push op
 	0012a8b4 mov op,ax
 	0012a8bc farpush bx
 	0012a8c4 setfuncargs 0x1
 	0012a8cc mov ax,0x69ef20
 	0012a8d8 farcall ax
 	0012a8e0 farsubsp 0x1
 	0012a8e8 pop op
 	0012a8f0 sourceline 0x9af
 	0012a8f8 push op
 	0012a900 mov ax,0x2b9adb
 	0012a90c farpush ax
 	0012a914 mov ax,0x138
 	0012a920 farpush ax
 	0012a928 mov ax,0x92
 	0012a934 farpush ax
 	0012a93c mov ax,0x0
 	0012a948 farpush ax
 	0012a950 mov mar,0x3cef20
 	0012a95c mov ax,mar
 	0012a968 mov op,ax
 	0012a970 setfuncargs 0x4
 	0012a978 mov ax,0x6aef20
 	0012a984 farcall ax
 	0012a98c farsubsp 0x4
 	0012a994 pop op
 	0012a99c sourceline 0x9b0
 	0012a9a4 jmp 0x0012ae60
		0012ae60: UNCONDITIONAL_JUMP

	[0012a9ac]
		0012a7d8: CONDITIONAL_JUMP
 	0012a9ac sourceline 0x9b2
 	0012a9b4 mov mar,0x3cef20
 	0012a9c0 mov ax,mar
 	0012a9cc push op
 	0012a9d4 mov op,ax
 	0012a9dc setfuncargs 0x0
 	0012a9e4 mov ax,0x89ef20
 	0012a9f0 farcall ax
 	0012a9f8 pop op
 	0012aa00 push ax
 	0012aa08 mov mar,0x8b6f20
 	0012aa14 mov ax,mar
 	0012aa20 pop bx
 	0012aa28 cmpeq bx,ax
 	0012aa34 mov ax,bx
 	0012aa40 jnz 0x0012aafc
		0012aafc: CONDITIONAL_JUMP
		0012aa48: FALL_THROUGH

	[0012aa48]
		0012a9ac: FALL_THROUGH
 	0012aa48 push ax
 	0012aa50 mov mar,0x3cef20
 	0012aa5c mov ax,mar
 	0012aa68 push op
 	0012aa70 mov op,ax
 	0012aa78 setfuncargs 0x0
 	0012aa80 mov ax,0x89ef20
 	0012aa8c farcall ax
 	0012aa94 pop op
 	0012aa9c push ax
 	0012aaa4 mov mar,0x8bef20
 	0012aab0 mov ax,mar
 	0012aabc pop bx
 	0012aac4 cmpeq bx,ax
 	0012aad0 mov ax,bx
 	0012aadc pop bx
 	0012aae4 lor bx,ax
 	0012aaf0 mov ax,bx
		0012aafc: FALL_THROUGH

	[0012aafc]
		0012a9ac: CONDITIONAL_JUMP
		0012aa48: FALL_THROUGH
 	0012aafc jz 0x0012ac3c
		0012ac3c: CONDITIONAL_JUMP
		0012ab04: FALL_THROUGH

	[0012ab04]
		0012aafc: FALL_THROUGH
 	0012ab04 sourceline 0x9b4
 	0012ab0c mov ax,0x1
 	0012ab18 mov bx,ax
 	0012ab24 mov mar,0x3cef20
 	0012ab30 mov ax,mar
 	0012ab3c push op
 	0012ab44 mov op,ax
 	0012ab4c farpush bx
 	0012ab54 setfuncargs 0x1
 	0012ab5c mov ax,0x69ef20
 	0012ab68 farcall ax
 	0012ab70 farsubsp 0x1
 	0012ab78 pop op
 	0012ab80 sourceline 0x9b5
 	0012ab88 push op
 	0012ab90 mov ax,0x2ba036
 	0012ab9c farpush ax
 	0012aba4 mov ax,0x138
 	0012abb0 farpush ax
 	0012abb8 mov ax,0x92
 	0012abc4 farpush ax
 	0012abcc mov ax,0x0
 	0012abd8 farpush ax
 	0012abe0 mov mar,0x3cef20
 	0012abec mov ax,mar
 	0012abf8 mov op,ax
 	0012ac00 setfuncargs 0x4
 	0012ac08 mov ax,0x6aef20
 	0012ac14 farcall ax
 	0012ac1c farsubsp 0x4
 	0012ac24 pop op
 	0012ac2c sourceline 0x9b6
 	0012ac34 jmp 0x0012ae60
		0012ae60: UNCONDITIONAL_JUMP

	[0012ac3c]
		0012aafc: CONDITIONAL_JUMP
 	0012ac3c sourceline 0x9b8
 	0012ac44 mov mar,0x3cef20
 	0012ac50 mov ax,mar
 	0012ac5c push op
 	0012ac64 mov op,ax
 	0012ac6c setfuncargs 0x0
 	0012ac74 mov ax,0x89ef20
 	0012ac80 farcall ax
 	0012ac88 pop op
 	0012ac90 push ax
 	0012ac98 mov mar,0x94ef20
 	0012aca4 mov ax,mar
 	0012acb0 pop bx
 	0012acb8 cmpeq bx,ax
 	0012acc4 mov ax,bx
 	0012acd0 jz 0x0012ae10
		0012ae10: CONDITIONAL_JUMP
		0012acd8: FALL_THROUGH

	[0012acd8]
		0012ac3c: FALL_THROUGH
 	0012acd8 sourceline 0x9ba
 	0012ace0 mov ax,0x1
 	0012acec mov bx,ax
 	0012acf8 mov mar,0x3cef20
 	0012ad04 mov ax,mar
 	0012ad10 push op
 	0012ad18 mov op,ax
 	0012ad20 farpush bx
 	0012ad28 setfuncargs 0x1
 	0012ad30 mov ax,0x69ef20
 	0012ad3c farcall ax
 	0012ad44 farsubsp 0x1
 	0012ad4c pop op
 	0012ad54 sourceline 0x9bb
 	0012ad5c push op
 	0012ad64 mov ax,0x2b9b31
 	0012ad70 farpush ax
 	0012ad78 mov ax,0x138
 	0012ad84 farpush ax
 	0012ad8c mov ax,0x92
 	0012ad98 farpush ax
 	0012ada0 mov ax,0x0
 	0012adac farpush ax
 	0012adb4 mov mar,0x3cef20
 	0012adc0 mov ax,mar
 	0012adcc mov op,ax
 	0012add4 setfuncargs 0x4
 	0012addc mov ax,0x6aef20
 	0012ade8 farcall ax
 	0012adf0 farsubsp 0x4
 	0012adf8 pop op
 	0012ae00 sourceline 0x9bc
 	0012ae08 jmp 0x0012ae60
		0012ae60: UNCONDITIONAL_JUMP

	[0012ae10]
		0012ac3c: CONDITIONAL_JUMP
 	0012ae10 sourceline 0x9be
 	0012ae18 mov ax,0x3
 	0012ae24 push ax
 	0012ae2c mov ax,0x5
 	0012ae38 push ax
 	0012ae40 mov ax,0x10ae5c
 	0012ae4c call ax
 	0012ae54 sub sp,0x8
		0012ae60: FALL_THROUGH

	[0012ae60]
		00129ea4: UNCONDITIONAL_JUMP
		0012a124: UNCONDITIONAL_JUMP
		0012a2f8: UNCONDITIONAL_JUMP
		0012a4cc: UNCONDITIONAL_JUMP
		0012a6a0: UNCONDITIONAL_JUMP
		0012a874: UNCONDITIONAL_JUMP
		0012ab04: UNCONDITIONAL_JUMP
		0012acd8: UNCONDITIONAL_JUMP
		0012ae10: FALL_THROUGH
 	0012ae60 sourceline 0x9bf
 	0012ae68 mov ax,0x0
 	0012ae74 ret

iCandle_UseInv$0:
	[0012ae78]
 	0012ae78 sourceline 0x9c7
 	0012ae80 thisaddr
 	0012ae88 sourceline 0x9c8
*	0012ae90 mov mar,0x3cef20
 	0012ae9c mov ax,mar
 	0012aea8 push op
 	0012aeb0 mov op,ax
 	0012aeb8 setfuncargs 0x0
 	0012aec0 mov ax,0x89ef20
 	0012aecc farcall ax
 	0012aed4 pop op
 	0012aedc push ax
 	0012aee4 mov mar,0x8b6f20
 	0012aef0 mov ax,mar
 	0012aefc pop bx
 	0012af04 cmpeq bx,ax
 	0012af10 mov ax,bx
 	0012af1c jnz 0x0012afd8
		0012afd8: CONDITIONAL_JUMP
		0012af24: FALL_THROUGH

	[0012af24]
		0012ae78: FALL_THROUGH
 	0012af24 push ax
 	0012af2c mov mar,0x3cef20
 	0012af38 mov ax,mar
 	0012af44 push op
 	0012af4c mov op,ax
 	0012af54 setfuncargs 0x0
 	0012af5c mov ax,0x89ef20
 	0012af68 farcall ax
 	0012af70 pop op
 	0012af78 push ax
 	0012af80 mov mar,0x8bef20
 	0012af8c mov ax,mar
 	0012af98 pop bx
 	0012afa0 cmpeq bx,ax
 	0012afac mov ax,bx
 	0012afb8 pop bx
 	0012afc0 lor bx,ax
 	0012afcc mov ax,bx
		0012afd8: FALL_THROUGH

	[0012afd8]
		0012ae78: CONDITIONAL_JUMP
		0012af24: FALL_THROUGH
 	0012afd8 jz 0x0012b118
		0012b118: CONDITIONAL_JUMP
		0012afe0: FALL_THROUGH

	[0012afe0]
		0012afd8: FALL_THROUGH
 	0012afe0 sourceline 0x9ca
 	0012afe8 mov ax,0x1
 	0012aff4 mov bx,ax
 	0012b000 mov mar,0x3cef20
 	0012b00c mov ax,mar
 	0012b018 push op
 	0012b020 mov op,ax
 	0012b028 farpush bx
 	0012b030 setfuncargs 0x1
 	0012b038 mov ax,0x69ef20
 	0012b044 farcall ax
 	0012b04c farsubsp 0x1
 	0012b054 pop op
 	0012b05c sourceline 0x9cb
 	0012b064 push op
 	0012b06c mov ax,0x2ba036
 	0012b078 farpush ax
 	0012b080 mov ax,0x138
 	0012b08c farpush ax
 	0012b094 mov ax,0x92
 	0012b0a0 farpush ax
 	0012b0a8 mov ax,0x0
 	0012b0b4 farpush ax
 	0012b0bc mov mar,0x3cef20
 	0012b0c8 mov ax,mar
 	0012b0d4 mov op,ax
 	0012b0dc setfuncargs 0x4
 	0012b0e4 mov ax,0x6aef20
 	0012b0f0 farcall ax
 	0012b0f8 farsubsp 0x4
 	0012b100 pop op
 	0012b108 sourceline 0x9cc
 	0012b110 jmp 0x0012b168
		0012b168: UNCONDITIONAL_JUMP

	[0012b118]
		0012afd8: CONDITIONAL_JUMP
 	0012b118 sourceline 0x9ce
 	0012b120 mov ax,0x3
 	0012b12c push ax
 	0012b134 mov ax,0x5
 	0012b140 push ax
 	0012b148 mov ax,0x10ae5c
 	0012b154 call ax
 	0012b15c sub sp,0x8
		0012b168: FALL_THROUGH

	[0012b168]
		0012afe0: UNCONDITIONAL_JUMP
		0012b118: FALL_THROUGH
 	0012b168 sourceline 0x9cf
 	0012b170 mov ax,0x0
 	0012b17c ret

iBlood_UseInv$0:
	[0012b180]
 	0012b180 sourceline 0x9d5
 	0012b188 thisaddr
 	0012b190 sourceline 0x9d6
*	0012b198 mov mar,0x3cef20
 	0012b1a4 mov ax,mar
 	0012b1b0 push op
 	0012b1b8 mov op,ax
 	0012b1c0 setfuncargs 0x0
 	0012b1c8 mov ax,0x89ef20
 	0012b1d4 farcall ax
 	0012b1dc pop op
 	0012b1e4 push ax
 	0012b1ec mov mar,0x8c6f20
 	0012b1f8 mov ax,mar
 	0012b204 pop bx
 	0012b20c cmpeq bx,ax
 	0012b218 mov ax,bx
 	0012b224 jnz 0x0012b2e0
		0012b2e0: CONDITIONAL_JUMP
		0012b22c: FALL_THROUGH

	[0012b22c]
		0012b180: FALL_THROUGH
 	0012b22c push ax
 	0012b234 mov mar,0x3cef20
 	0012b240 mov ax,mar
 	0012b24c push op
 	0012b254 mov op,ax
 	0012b25c setfuncargs 0x0
 	0012b264 mov ax,0x89ef20
 	0012b270 farcall ax
 	0012b278 pop op
 	0012b280 push ax
 	0012b288 mov mar,0x96ef20
 	0012b294 mov ax,mar
 	0012b2a0 pop bx
 	0012b2a8 cmpeq bx,ax
 	0012b2b4 mov ax,bx
 	0012b2c0 pop bx
 	0012b2c8 lor bx,ax
 	0012b2d4 mov ax,bx
		0012b2e0: FALL_THROUGH

	[0012b2e0]
		0012b180: CONDITIONAL_JUMP
		0012b22c: FALL_THROUGH
 	0012b2e0 jnz 0x0012b39c
		0012b39c: CONDITIONAL_JUMP
		0012b2e8: FALL_THROUGH

	[0012b2e8]
		0012b2e0: FALL_THROUGH
 	0012b2e8 push ax
 	0012b2f0 mov mar,0x3cef20
 	0012b2fc mov ax,mar
 	0012b308 push op
 	0012b310 mov op,ax
 	0012b318 setfuncargs 0x0
 	0012b320 mov ax,0x89ef20
 	0012b32c farcall ax
 	0012b334 pop op
 	0012b33c push ax
 	0012b344 mov mar,0x94ef20
 	0012b350 mov ax,mar
 	0012b35c pop bx
 	0012b364 cmpeq bx,ax
 	0012b370 mov ax,bx
 	0012b37c pop bx
 	0012b384 lor bx,ax
 	0012b390 mov ax,bx
		0012b39c: FALL_THROUGH

	[0012b39c]
		0012b2e0: CONDITIONAL_JUMP
		0012b2e8: FALL_THROUGH
 	0012b39c jz 0x0012b4dc
		0012b4dc: CONDITIONAL_JUMP
		0012b3a4: FALL_THROUGH

	[0012b3a4]
		0012b39c: FALL_THROUGH
 	0012b3a4 sourceline 0x9d8
 	0012b3ac mov ax,0x1
 	0012b3b8 mov bx,ax
 	0012b3c4 mov mar,0x3cef20
 	0012b3d0 mov ax,mar
 	0012b3dc push op
 	0012b3e4 mov op,ax
 	0012b3ec farpush bx
 	0012b3f4 setfuncargs 0x1
 	0012b3fc mov ax,0x69ef20
 	0012b408 farcall ax
 	0012b410 farsubsp 0x1
 	0012b418 pop op
 	0012b420 sourceline 0x9d9
 	0012b428 push op
 	0012b430 mov ax,0x2ba4bb
 	0012b43c farpush ax
 	0012b444 mov ax,0x138
 	0012b450 farpush ax
 	0012b458 mov ax,0x92
 	0012b464 farpush ax
 	0012b46c mov ax,0x0
 	0012b478 farpush ax
 	0012b480 mov mar,0x3cef20
 	0012b48c mov ax,mar
 	0012b498 mov op,ax
 	0012b4a0 setfuncargs 0x4
 	0012b4a8 mov ax,0x6aef20
 	0012b4b4 farcall ax
 	0012b4bc farsubsp 0x4
 	0012b4c4 pop op
 	0012b4cc sourceline 0x9da
 	0012b4d4 jmp 0x0012b700
		0012b700: UNCONDITIONAL_JUMP

	[0012b4dc]
		0012b39c: CONDITIONAL_JUMP
 	0012b4dc sourceline 0x9dc
 	0012b4e4 mov mar,0x3cef20
 	0012b4f0 mov ax,mar
 	0012b4fc push op
 	0012b504 mov op,ax
 	0012b50c setfuncargs 0x0
 	0012b514 mov ax,0x89ef20
 	0012b520 farcall ax
 	0012b528 pop op
 	0012b530 push ax
 	0012b538 mov mar,0x916f20
 	0012b544 mov ax,mar
 	0012b550 pop bx
 	0012b558 cmpeq bx,ax
 	0012b564 mov ax,bx
 	0012b570 jz 0x0012b6b0
		0012b6b0: CONDITIONAL_JUMP
		0012b578: FALL_THROUGH

	[0012b578]
		0012b4dc: FALL_THROUGH
 	0012b578 sourceline 0x9de
 	0012b580 mov ax,0x1
 	0012b58c mov bx,ax
 	0012b598 mov mar,0x3cef20
 	0012b5a4 mov ax,mar
 	0012b5b0 push op
 	0012b5b8 mov op,ax
 	0012b5c0 farpush bx
 	0012b5c8 setfuncargs 0x1
 	0012b5d0 mov ax,0x69ef20
 	0012b5dc farcall ax
 	0012b5e4 farsubsp 0x1
 	0012b5ec pop op
 	0012b5f4 sourceline 0x9df
 	0012b5fc push op
 	0012b604 mov ax,0x2b9f96
 	0012b610 farpush ax
 	0012b618 mov ax,0x138
 	0012b624 farpush ax
 	0012b62c mov ax,0x92
 	0012b638 farpush ax
 	0012b640 mov ax,0x0
 	0012b64c farpush ax
 	0012b654 mov mar,0x3cef20
 	0012b660 mov ax,mar
 	0012b66c mov op,ax
 	0012b674 setfuncargs 0x4
 	0012b67c mov ax,0x6aef20
 	0012b688 farcall ax
 	0012b690 farsubsp 0x4
 	0012b698 pop op
 	0012b6a0 sourceline 0x9e0
 	0012b6a8 jmp 0x0012b700
		0012b700: UNCONDITIONAL_JUMP

	[0012b6b0]
		0012b4dc: CONDITIONAL_JUMP
 	0012b6b0 sourceline 0x9e2
 	0012b6b8 mov ax,0x3
 	0012b6c4 push ax
 	0012b6cc mov ax,0x5
 	0012b6d8 push ax
 	0012b6e0 mov ax,0x10ae5c
 	0012b6ec call ax
 	0012b6f4 sub sp,0x8
		0012b700: FALL_THROUGH

	[0012b700]
		0012b3a4: UNCONDITIONAL_JUMP
		0012b578: UNCONDITIONAL_JUMP
		0012b6b0: FALL_THROUGH
 	0012b700 sourceline 0x9e3
 	0012b708 mov ax,0x0
 	0012b714 ret

iCoffee_UseInv$0:
	[0012b718]
 	0012b718 sourceline 0x9e8
 	0012b720 thisaddr
 	0012b728 sourceline 0x9e9
*	0012b730 mov mar,0x3cef20
 	0012b73c mov ax,mar
 	0012b748 push op
 	0012b750 mov op,ax
 	0012b758 setfuncargs 0x0
 	0012b760 mov ax,0x89ef20
 	0012b76c farcall ax
 	0012b774 pop op
 	0012b77c push ax
 	0012b784 mov mar,0x8cef20
 	0012b790 mov ax,mar
 	0012b79c pop bx
 	0012b7a4 cmpeq bx,ax
 	0012b7b0 mov ax,bx
 	0012b7bc jnz 0x0012b878
		0012b878: CONDITIONAL_JUMP
		0012b7c4: FALL_THROUGH

	[0012b7c4]
		0012b718: FALL_THROUGH
 	0012b7c4 push ax
 	0012b7cc mov mar,0x3cef20
 	0012b7d8 mov ax,mar
 	0012b7e4 push op
 	0012b7ec mov op,ax
 	0012b7f4 setfuncargs 0x0
 	0012b7fc mov ax,0x89ef20
 	0012b808 farcall ax
 	0012b810 pop op
 	0012b818 push ax
 	0012b820 mov mar,0x8d6f20
 	0012b82c mov ax,mar
 	0012b838 pop bx
 	0012b840 cmpeq bx,ax
 	0012b84c mov ax,bx
 	0012b858 pop bx
 	0012b860 lor bx,ax
 	0012b86c mov ax,bx
		0012b878: FALL_THROUGH

	[0012b878]
		0012b718: CONDITIONAL_JUMP
		0012b7c4: FALL_THROUGH
 	0012b878 jnz 0x0012b934
		0012b934: CONDITIONAL_JUMP
		0012b880: FALL_THROUGH

	[0012b880]
		0012b878: FALL_THROUGH
 	0012b880 push ax
 	0012b888 mov mar,0x3cef20
 	0012b894 mov ax,mar
 	0012b8a0 push op
 	0012b8a8 mov op,ax
 	0012b8b0 setfuncargs 0x0
 	0012b8b8 mov ax,0x89ef20
 	0012b8c4 farcall ax
 	0012b8cc pop op
 	0012b8d4 push ax
 	0012b8dc mov mar,0x8b6f20
 	0012b8e8 mov ax,mar
 	0012b8f4 pop bx
 	0012b8fc cmpeq bx,ax
 	0012b908 mov ax,bx
 	0012b914 pop bx
 	0012b91c lor bx,ax
 	0012b928 mov ax,bx
		0012b934: FALL_THROUGH

	[0012b934]
		0012b878: CONDITIONAL_JUMP
		0012b880: FALL_THROUGH
 	0012b934 jnz 0x0012b9f0
		0012b9f0: CONDITIONAL_JUMP
		0012b93c: FALL_THROUGH

	[0012b93c]
		0012b934: FALL_THROUGH
 	0012b93c push ax
 	0012b944 mov mar,0x3cef20
 	0012b950 mov ax,mar
 	0012b95c push op
 	0012b964 mov op,ax
 	0012b96c setfuncargs 0x0
 	0012b974 mov ax,0x89ef20
 	0012b980 farcall ax
 	0012b988 pop op
 	0012b990 push ax
 	0012b998 mov mar,0x8bef20
 	0012b9a4 mov ax,mar
 	0012b9b0 pop bx
 	0012b9b8 cmpeq bx,ax
 	0012b9c4 mov ax,bx
 	0012b9d0 pop bx
 	0012b9d8 lor bx,ax
 	0012b9e4 mov ax,bx
		0012b9f0: FALL_THROUGH

	[0012b9f0]
		0012b934: CONDITIONAL_JUMP
		0012b93c: FALL_THROUGH
 	0012b9f0 jnz 0x0012baac
		0012baac: CONDITIONAL_JUMP
		0012b9f8: FALL_THROUGH

	[0012b9f8]
		0012b9f0: FALL_THROUGH
 	0012b9f8 push ax
 	0012ba00 mov mar,0x3cef20
 	0012ba0c mov ax,mar
 	0012ba18 push op
 	0012ba20 mov op,ax
 	0012ba28 setfuncargs 0x0
 	0012ba30 mov ax,0x89ef20
 	0012ba3c farcall ax
 	0012ba44 pop op
 	0012ba4c push ax
 	0012ba54 mov mar,0x8a6f20
 	0012ba60 mov ax,mar
 	0012ba6c pop bx
 	0012ba74 cmpeq bx,ax
 	0012ba80 mov ax,bx
 	0012ba8c pop bx
 	0012ba94 lor bx,ax
 	0012baa0 mov ax,bx
		0012baac: FALL_THROUGH

	[0012baac]
		0012b9f0: CONDITIONAL_JUMP
		0012b9f8: FALL_THROUGH
 	0012baac jnz 0x0012bb68
		0012bb68: CONDITIONAL_JUMP
		0012bab4: FALL_THROUGH

	[0012bab4]
		0012baac: FALL_THROUGH
 	0012bab4 push ax
 	0012babc mov mar,0x3cef20
 	0012bac8 mov ax,mar
 	0012bad4 push op
 	0012badc mov op,ax
 	0012bae4 setfuncargs 0x0
 	0012baec mov ax,0x89ef20
 	0012baf8 farcall ax
 	0012bb00 pop op
 	0012bb08 push ax
 	0012bb10 mov mar,0x7def20
 	0012bb1c mov ax,mar
 	0012bb28 pop bx
 	0012bb30 cmpeq bx,ax
 	0012bb3c mov ax,bx
 	0012bb48 pop bx
 	0012bb50 lor bx,ax
 	0012bb5c mov ax,bx
		0012bb68: FALL_THROUGH

	[0012bb68]
		0012baac: CONDITIONAL_JUMP
		0012bab4: FALL_THROUGH
 	0012bb68 jnz 0x0012bc24
		0012bc24: CONDITIONAL_JUMP
		0012bb70: FALL_THROUGH

	[0012bb70]
		0012bb68: FALL_THROUGH
 	0012bb70 push ax
 	0012bb78 mov mar,0x3cef20
 	0012bb84 mov ax,mar
 	0012bb90 push op
 	0012bb98 mov op,ax
 	0012bba0 setfuncargs 0x0
 	0012bba8 mov ax,0x89ef20
 	0012bbb4 farcall ax
 	0012bbbc pop op
 	0012bbc4 push ax
 	0012bbcc mov mar,0x8def20
 	0012bbd8 mov ax,mar
 	0012bbe4 pop bx
 	0012bbec cmpeq bx,ax
 	0012bbf8 mov ax,bx
 	0012bc04 pop bx
 	0012bc0c lor bx,ax
 	0012bc18 mov ax,bx
		0012bc24: FALL_THROUGH

	[0012bc24]
		0012bb68: CONDITIONAL_JUMP
		0012bb70: FALL_THROUGH
 	0012bc24 jz 0x0012bd64
		0012bd64: CONDITIONAL_JUMP
		0012bc2c: FALL_THROUGH

	[0012bc2c]
		0012bc24: FALL_THROUGH
 	0012bc2c sourceline 0x9eb
 	0012bc34 mov ax,0x1
 	0012bc40 mov bx,ax
 	0012bc4c mov mar,0x3cef20
 	0012bc58 mov ax,mar
 	0012bc64 push op
 	0012bc6c mov op,ax
 	0012bc74 farpush bx
 	0012bc7c setfuncargs 0x1
 	0012bc84 mov ax,0x69ef20
 	0012bc90 farcall ax
 	0012bc98 farsubsp 0x1
 	0012bca0 pop op
 	0012bca8 sourceline 0x9ec
 	0012bcb0 push op
 	0012bcb8 mov ax,0x2b91e5
 	0012bcc4 farpush ax
 	0012bccc mov ax,0x138
 	0012bcd8 farpush ax
 	0012bce0 mov ax,0x92
 	0012bcec farpush ax
 	0012bcf4 mov ax,0x0
 	0012bd00 farpush ax
 	0012bd08 mov mar,0x3cef20
 	0012bd14 mov ax,mar
 	0012bd20 mov op,ax
 	0012bd28 setfuncargs 0x4
 	0012bd30 mov ax,0x6aef20
 	0012bd3c farcall ax
 	0012bd44 farsubsp 0x4
 	0012bd4c pop op
 	0012bd54 sourceline 0x9ed
 	0012bd5c jmp 0x0012c330
		0012c330: UNCONDITIONAL_JUMP

	[0012bd64]
		0012bc24: CONDITIONAL_JUMP
 	0012bd64 sourceline 0x9ef
 	0012bd6c mov mar,0x3cef20
 	0012bd78 mov ax,mar
 	0012bd84 push op
 	0012bd8c mov op,ax
 	0012bd94 setfuncargs 0x0
 	0012bd9c mov ax,0x89ef20
 	0012bda8 farcall ax
 	0012bdb0 pop op
 	0012bdb8 push ax
 	0012bdc0 mov mar,0x98ef20
 	0012bdcc mov ax,mar
 	0012bdd8 pop bx
 	0012bde0 cmpeq bx,ax
 	0012bdec mov ax,bx
 	0012bdf8 jz 0x0012bf38
		0012bf38: CONDITIONAL_JUMP
		0012be00: FALL_THROUGH

	[0012be00]
		0012bd64: FALL_THROUGH
 	0012be00 sourceline 0x9f1
 	0012be08 mov ax,0x1
 	0012be14 mov bx,ax
 	0012be20 mov mar,0x3cef20
 	0012be2c mov ax,mar
 	0012be38 push op
 	0012be40 mov op,ax
 	0012be48 farpush bx
 	0012be50 setfuncargs 0x1
 	0012be58 mov ax,0x69ef20
 	0012be64 farcall ax
 	0012be6c farsubsp 0x1
 	0012be74 pop op
 	0012be7c sourceline 0x9f2
 	0012be84 push op
 	0012be8c mov ax,0x2b920e
 	0012be98 farpush ax
 	0012bea0 mov ax,0x138
 	0012beac farpush ax
 	0012beb4 mov ax,0x92
 	0012bec0 farpush ax
 	0012bec8 mov ax,0x0
 	0012bed4 farpush ax
 	0012bedc mov mar,0x3cef20
 	0012bee8 mov ax,mar
 	0012bef4 mov op,ax
 	0012befc setfuncargs 0x4
 	0012bf04 mov ax,0x6aef20
 	0012bf10 farcall ax
 	0012bf18 farsubsp 0x4
 	0012bf20 pop op
 	0012bf28 sourceline 0x9f3
 	0012bf30 jmp 0x0012c330
		0012c330: UNCONDITIONAL_JUMP

	[0012bf38]
		0012bd64: CONDITIONAL_JUMP
 	0012bf38 sourceline 0x9f5
 	0012bf40 mov mar,0x3cef20
 	0012bf4c mov ax,mar
 	0012bf58 push op
 	0012bf60 mov op,ax
 	0012bf68 setfuncargs 0x0
 	0012bf70 mov ax,0x89ef20
 	0012bf7c farcall ax
 	0012bf84 pop op
 	0012bf8c push ax
 	0012bf94 mov mar,0x8c6f20
 	0012bfa0 mov ax,mar
 	0012bfac pop bx
 	0012bfb4 cmpeq bx,ax
 	0012bfc0 mov ax,bx
 	0012bfcc jz 0x0012c10c
		0012c10c: CONDITIONAL_JUMP
		0012bfd4: FALL_THROUGH

	[0012bfd4]
		0012bf38: FALL_THROUGH
 	0012bfd4 sourceline 0x9f7
 	0012bfdc mov ax,0x1
 	0012bfe8 mov bx,ax
 	0012bff4 mov mar,0x3cef20
 	0012c000 mov ax,mar
 	0012c00c push op
 	0012c014 mov op,ax
 	0012c01c farpush bx
 	0012c024 setfuncargs 0x1
 	0012c02c mov ax,0x69ef20
 	0012c038 farcall ax
 	0012c040 farsubsp 0x1
 	0012c048 pop op
 	0012c050 sourceline 0x9f8
 	0012c058 push op
 	0012c060 mov ax,0x2ba52f
 	0012c06c farpush ax
 	0012c074 mov ax,0x138
 	0012c080 farpush ax
 	0012c088 mov ax,0x92
 	0012c094 farpush ax
 	0012c09c mov ax,0x0
 	0012c0a8 farpush ax
 	0012c0b0 mov mar,0x3cef20
 	0012c0bc mov ax,mar
 	0012c0c8 mov op,ax
 	0012c0d0 setfuncargs 0x4
 	0012c0d8 mov ax,0x6aef20
 	0012c0e4 farcall ax
 	0012c0ec farsubsp 0x4
 	0012c0f4 pop op
 	0012c0fc sourceline 0x9f9
 	0012c104 jmp 0x0012c330
		0012c330: UNCONDITIONAL_JUMP

	[0012c10c]
		0012bf38: CONDITIONAL_JUMP
 	0012c10c sourceline 0x9fb
 	0012c114 mov mar,0x3cef20
 	0012c120 mov ax,mar
 	0012c12c push op
 	0012c134 mov op,ax
 	0012c13c setfuncargs 0x0
 	0012c144 mov ax,0x89ef20
 	0012c150 farcall ax
 	0012c158 pop op
 	0012c160 push ax
 	0012c168 mov mar,0x99ef20
 	0012c174 mov ax,mar
 	0012c180 pop bx
 	0012c188 cmpeq bx,ax
 	0012c194 mov ax,bx
 	0012c1a0 jz 0x0012c2e0
		0012c2e0: CONDITIONAL_JUMP
		0012c1a8: FALL_THROUGH

	[0012c1a8]
		0012c10c: FALL_THROUGH
 	0012c1a8 sourceline 0x9fd
 	0012c1b0 mov ax,0x1
 	0012c1bc mov bx,ax
 	0012c1c8 mov mar,0x3cef20
 	0012c1d4 mov ax,mar
 	0012c1e0 push op
 	0012c1e8 mov op,ax
 	0012c1f0 farpush bx
 	0012c1f8 setfuncargs 0x1
 	0012c200 mov ax,0x69ef20
 	0012c20c farcall ax
 	0012c214 farsubsp 0x1
 	0012c21c pop op
 	0012c224 sourceline 0x9fe
 	0012c22c push op
 	0012c234 mov ax,0x2b9375
 	0012c240 farpush ax
 	0012c248 mov ax,0x138
 	0012c254 farpush ax
 	0012c25c mov ax,0x92
 	0012c268 farpush ax
 	0012c270 mov ax,0x0
 	0012c27c farpush ax
 	0012c284 mov mar,0x3cef20
 	0012c290 mov ax,mar
 	0012c29c mov op,ax
 	0012c2a4 setfuncargs 0x4
 	0012c2ac mov ax,0x6aef20
 	0012c2b8 farcall ax
 	0012c2c0 farsubsp 0x4
 	0012c2c8 pop op
 	0012c2d0 sourceline 0x9ff
 	0012c2d8 jmp 0x0012c330
		0012c330: UNCONDITIONAL_JUMP

	[0012c2e0]
		0012c10c: CONDITIONAL_JUMP
 	0012c2e0 sourceline 0xa01
 	0012c2e8 mov ax,0x3
 	0012c2f4 push ax
 	0012c2fc mov ax,0x5
 	0012c308 push ax
 	0012c310 mov ax,0x10ae5c
 	0012c31c call ax
 	0012c324 sub sp,0x8
		0012c330: FALL_THROUGH

	[0012c330]
		0012bc2c: UNCONDITIONAL_JUMP
		0012be00: UNCONDITIONAL_JUMP
		0012bfd4: UNCONDITIONAL_JUMP
		0012c1a8: UNCONDITIONAL_JUMP
		0012c2e0: FALL_THROUGH
 	0012c330 sourceline 0xa02
 	0012c338 mov ax,0x0
 	0012c344 ret

iBrushHair_UseInv$0:
	[0012c348]
 	0012c348 sourceline 0xa09
 	0012c350 thisaddr
 	0012c358 sourceline 0xa0a
*	0012c360 mov mar,0x3cef20
 	0012c36c mov ax,mar
 	0012c378 push op
 	0012c380 mov op,ax
 	0012c388 setfuncargs 0x0
 	0012c390 mov ax,0x89ef20
 	0012c39c farcall ax
 	0012c3a4 pop op
 	0012c3ac push ax
 	0012c3b4 mov mar,0x9eef20
 	0012c3c0 mov ax,mar
 	0012c3cc pop bx
 	0012c3d4 cmpeq bx,ax
 	0012c3e0 mov ax,bx
 	0012c3ec jz 0x0012c7e4
		0012c7e4: CONDITIONAL_JUMP
		0012c3f4: FALL_THROUGH

	[0012c3f4]
		0012c348: FALL_THROUGH
 	0012c3f4 sourceline 0xa0c
 	0012c3fc mov ax,0x1
 	0012c408 mov bx,ax
 	0012c414 mov mar,0x3cef20
 	0012c420 mov ax,mar
 	0012c42c push op
 	0012c434 mov op,ax
 	0012c43c farpush bx
 	0012c444 setfuncargs 0x1
 	0012c44c mov ax,0x69ef20
 	0012c458 farcall ax
 	0012c460 farsubsp 0x1
 	0012c468 pop op
 	0012c470 sourceline 0xa0d
 	0012c478 push op
 	0012c480 mov ax,0x2b94e5
 	0012c48c farpush ax
 	0012c494 mov ax,0x138
 	0012c4a0 farpush ax
 	0012c4a8 mov ax,0x92
 	0012c4b4 farpush ax
 	0012c4bc mov ax,0x0
 	0012c4c8 farpush ax
 	0012c4d0 mov mar,0x3cef20
 	0012c4dc mov ax,mar
 	0012c4e8 mov op,ax
 	0012c4f0 setfuncargs 0x4
 	0012c4f8 mov ax,0x6aef20
 	0012c504 farcall ax
 	0012c50c farsubsp 0x4
 	0012c514 pop op
 	0012c51c sourceline 0xa0e
 	0012c524 push op
 	0012c52c mov ax,0x0
 	0012c538 farpush ax
 	0012c540 mov ax,0x32
 	0012c54c farpush ax
 	0012c554 mov mar,0xa16f20
 	0012c560 mov ax,mar
 	0012c56c mov op,ax
 	0012c574 setfuncargs 0x2
 	0012c57c mov ax,0x2fef20
 	0012c588 farcall ax
 	0012c590 farsubsp 0x2
 	0012c598 pop op
 	0012c5a0 sourceline 0xa0f
 	0012c5a8 push op
 	0012c5b0 mov mar,0x99ef20
 	0012c5bc mov ax,mar
 	0012c5c8 farpush ax
 	0012c5d0 mov mar,0x3cef20
 	0012c5dc mov ax,mar
 	0012c5e8 mov op,ax
 	0012c5f0 setfuncargs 0x1
 	0012c5f8 mov ax,0x7d6f20
 	0012c604 farcall ax
 	0012c60c farsubsp 0x1
 	0012c614 pop op
 	0012c61c sourceline 0xa10
 	0012c624 push op
 	0012c62c mov mar,0x9eef20
 	0012c638 mov ax,mar
 	0012c644 farpush ax
 	0012c64c mov mar,0x3cef20
 	0012c658 mov ax,mar
 	0012c664 mov op,ax
 	0012c66c setfuncargs 0x1
 	0012c674 mov ax,0x7d6f20
 	0012c680 farcall ax
 	0012c688 farsubsp 0x1
 	0012c690 pop op
 	0012c698 sourceline 0xa11
 	0012c6a0 push op
 	0012c6a8 mov ax,0x7cfe
 	0012c6b4 farpush ax
 	0012c6bc mov mar,0x9e6f20
 	0012c6c8 mov ax,mar
 	0012c6d4 farpush ax
 	0012c6dc mov mar,0x3cef20
 	0012c6e8 mov ax,mar
 	0012c6f4 mov op,ax
 	0012c6fc setfuncargs 0x2
 	0012c704 mov ax,0x7e6f20
 	0012c710 farcall ax
 	0012c718 farsubsp 0x2
 	0012c720 pop op
 	0012c728 sourceline 0xa12
 	0012c730 push op
 	0012c738 mov ax,0x2b9510
 	0012c744 farpush ax
 	0012c74c mov ax,0x138
 	0012c758 farpush ax
 	0012c760 mov ax,0x92
 	0012c76c farpush ax
 	0012c774 mov ax,0x0
 	0012c780 farpush ax
 	0012c788 mov mar,0x3cef20
 	0012c794 mov ax,mar
 	0012c7a0 mov op,ax
 	0012c7a8 setfuncargs 0x4
 	0012c7b0 mov ax,0x6aef20
 	0012c7bc farcall ax
 	0012c7c4 farsubsp 0x4
 	0012c7cc pop op
 	0012c7d4 sourceline 0xa13
 	0012c7dc jmp 0x0012cdb0
		0012cdb0: UNCONDITIONAL_JUMP

	[0012c7e4]
		0012c348: CONDITIONAL_JUMP
 	0012c7e4 sourceline 0xa15
 	0012c7ec mov mar,0x3cef20
 	0012c7f8 mov ax,mar
 	0012c804 push op
 	0012c80c mov op,ax
 	0012c814 setfuncargs 0x0
 	0012c81c mov ax,0x89ef20
 	0012c828 farcall ax
 	0012c830 pop op
 	0012c838 push ax
 	0012c840 mov mar,0x9f6f20
 	0012c84c mov ax,mar
 	0012c858 pop bx
 	0012c860 cmpeq bx,ax
 	0012c86c mov ax,bx
 	0012c878 jz 0x0012c9b8
		0012c9b8: CONDITIONAL_JUMP
		0012c880: FALL_THROUGH

	[0012c880]
		0012c7e4: FALL_THROUGH
 	0012c880 sourceline 0xa17
 	0012c888 mov ax,0x1
 	0012c894 mov bx,ax
 	0012c8a0 mov mar,0x3cef20
 	0012c8ac mov ax,mar
 	0012c8b8 push op
 	0012c8c0 mov op,ax
 	0012c8c8 farpush bx
 	0012c8d0 setfuncargs 0x1
 	0012c8d8 mov ax,0x69ef20
 	0012c8e4 farcall ax
 	0012c8ec farsubsp 0x1
 	0012c8f4 pop op
 	0012c8fc sourceline 0xa18
 	0012c904 push op
 	0012c90c mov ax,0x2b9375
 	0012c918 farpush ax
 	0012c920 mov ax,0x138
 	0012c92c farpush ax
 	0012c934 mov ax,0x92
 	0012c940 farpush ax
 	0012c948 mov ax,0x0
 	0012c954 farpush ax
 	0012c95c mov mar,0x3cef20
 	0012c968 mov ax,mar
 	0012c974 mov op,ax
 	0012c97c setfuncargs 0x4
 	0012c984 mov ax,0x6aef20
 	0012c990 farcall ax
 	0012c998 farsubsp 0x4
 	0012c9a0 pop op
 	0012c9a8 sourceline 0xa19
 	0012c9b0 jmp 0x0012cdb0
		0012cdb0: UNCONDITIONAL_JUMP

	[0012c9b8]
		0012c7e4: CONDITIONAL_JUMP
 	0012c9b8 sourceline 0xa1b
 	0012c9c0 mov mar,0x3cef20
 	0012c9cc mov ax,mar
 	0012c9d8 push op
 	0012c9e0 mov op,ax
 	0012c9e8 setfuncargs 0x0
 	0012c9f0 mov ax,0x89ef20
 	0012c9fc farcall ax
 	0012ca04 pop op
 	0012ca0c push ax
 	0012ca14 mov mar,0x8b6f20
 	0012ca20 mov ax,mar
 	0012ca2c pop bx
 	0012ca34 cmpeq bx,ax
 	0012ca40 mov ax,bx
 	0012ca4c jz 0x0012cb8c
		0012cb8c: CONDITIONAL_JUMP
		0012ca54: FALL_THROUGH

	[0012ca54]
		0012c9b8: FALL_THROUGH
 	0012ca54 sourceline 0xa1d
 	0012ca5c mov ax,0x1
 	0012ca68 mov bx,ax
 	0012ca74 mov mar,0x3cef20
 	0012ca80 mov ax,mar
 	0012ca8c push op
 	0012ca94 mov op,ax
 	0012ca9c farpush bx
 	0012caa4 setfuncargs 0x1
 	0012caac mov ax,0x69ef20
 	0012cab8 farcall ax
 	0012cac0 farsubsp 0x1
 	0012cac8 pop op
 	0012cad0 sourceline 0xa1e
 	0012cad8 push op
 	0012cae0 mov ax,0x2b940a
 	0012caec farpush ax
 	0012caf4 mov ax,0x138
 	0012cb00 farpush ax
 	0012cb08 mov ax,0x92
 	0012cb14 farpush ax
 	0012cb1c mov ax,0x0
 	0012cb28 farpush ax
 	0012cb30 mov mar,0x3cef20
 	0012cb3c mov ax,mar
 	0012cb48 mov op,ax
 	0012cb50 setfuncargs 0x4
 	0012cb58 mov ax,0x6aef20
 	0012cb64 farcall ax
 	0012cb6c farsubsp 0x4
 	0012cb74 pop op
 	0012cb7c sourceline 0xa1f
 	0012cb84 jmp 0x0012cdb0
		0012cdb0: UNCONDITIONAL_JUMP

	[0012cb8c]
		0012c9b8: CONDITIONAL_JUMP
 	0012cb8c sourceline 0xa21
 	0012cb94 mov mar,0x3cef20
 	0012cba0 mov ax,mar
 	0012cbac push op
 	0012cbb4 mov op,ax
 	0012cbbc setfuncargs 0x0
 	0012cbc4 mov ax,0x89ef20
 	0012cbd0 farcall ax
 	0012cbd8 pop op
 	0012cbe0 push ax
 	0012cbe8 mov mar,0x8bef20
 	0012cbf4 mov ax,mar
 	0012cc00 pop bx
 	0012cc08 cmpeq bx,ax
 	0012cc14 mov ax,bx
 	0012cc20 jz 0x0012cd60
		0012cd60: CONDITIONAL_JUMP
		0012cc28: FALL_THROUGH

	[0012cc28]
		0012cb8c: FALL_THROUGH
 	0012cc28 sourceline 0xa23
 	0012cc30 mov ax,0x1
 	0012cc3c mov bx,ax
 	0012cc48 mov mar,0x3cef20
 	0012cc54 mov ax,mar
 	0012cc60 push op
 	0012cc68 mov op,ax
 	0012cc70 farpush bx
 	0012cc78 setfuncargs 0x1
 	0012cc80 mov ax,0x69ef20
 	0012cc8c farcall ax
 	0012cc94 farsubsp 0x1
 	0012cc9c pop op
 	0012cca4 sourceline 0xa24
 	0012ccac push op
 	0012ccb4 mov ax,0x2b940a
 	0012ccc0 farpush ax
 	0012ccc8 mov ax,0x138
 	0012ccd4 farpush ax
 	0012ccdc mov ax,0x92
 	0012cce8 farpush ax
 	0012ccf0 mov ax,0x0
 	0012ccfc farpush ax
 	0012cd04 mov mar,0x3cef20
 	0012cd10 mov ax,mar
 	0012cd1c mov op,ax
 	0012cd24 setfuncargs 0x4
 	0012cd2c mov ax,0x6aef20
 	0012cd38 farcall ax
 	0012cd40 farsubsp 0x4
 	0012cd48 pop op
 	0012cd50 sourceline 0xa25
 	0012cd58 jmp 0x0012cdb0
		0012cdb0: UNCONDITIONAL_JUMP

	[0012cd60]
		0012cb8c: CONDITIONAL_JUMP
 	0012cd60 sourceline 0xa27
 	0012cd68 mov ax,0x3
 	0012cd74 push ax
 	0012cd7c mov ax,0x5
 	0012cd88 push ax
 	0012cd90 mov ax,0x10ae5c
 	0012cd9c call ax
 	0012cda4 sub sp,0x8
		0012cdb0: FALL_THROUGH

	[0012cdb0]
		0012c3f4: UNCONDITIONAL_JUMP
		0012c880: UNCONDITIONAL_JUMP
		0012ca54: UNCONDITIONAL_JUMP
		0012cc28: UNCONDITIONAL_JUMP
		0012cd60: FALL_THROUGH
 	0012cdb0 sourceline 0xa28
 	0012cdb8 mov ax,0x0
 	0012cdc4 ret

iPhoto_UseInv$0:
	[0012cdc8]
 	0012cdc8 sourceline 0xa2f
 	0012cdd0 thisaddr
 	0012cdd8 sourceline 0xa30
*	0012cde0 mov mar,0x3cef20
 	0012cdec mov ax,mar
 	0012cdf8 push op
 	0012ce00 mov op,ax
 	0012ce08 setfuncargs 0x0
 	0012ce10 mov ax,0x89ef20
 	0012ce1c farcall ax
 	0012ce24 pop op
 	0012ce2c push ax
 	0012ce34 mov mar,0x846f20
 	0012ce40 mov ax,mar
 	0012ce4c pop bx
 	0012ce54 cmpeq bx,ax
 	0012ce60 mov ax,bx
 	0012ce6c jz 0x0012cfac
		0012cfac: CONDITIONAL_JUMP
		0012ce74: FALL_THROUGH

	[0012ce74]
		0012cdc8: FALL_THROUGH
 	0012ce74 sourceline 0xa32
 	0012ce7c mov ax,0x1
 	0012ce88 mov bx,ax
 	0012ce94 mov mar,0x3cef20
 	0012cea0 mov ax,mar
 	0012ceac push op
 	0012ceb4 mov op,ax
 	0012cebc farpush bx
 	0012cec4 setfuncargs 0x1
 	0012cecc mov ax,0x69ef20
 	0012ced8 farcall ax
 	0012cee0 farsubsp 0x1
 	0012cee8 pop op
 	0012cef0 sourceline 0xa33
 	0012cef8 push op
 	0012cf00 mov ax,0x2b9452
 	0012cf0c farpush ax
 	0012cf14 mov ax,0x138
 	0012cf20 farpush ax
 	0012cf28 mov ax,0x92
 	0012cf34 farpush ax
 	0012cf3c mov ax,0x0
 	0012cf48 farpush ax
 	0012cf50 mov mar,0x3cef20
 	0012cf5c mov ax,mar
 	0012cf68 mov op,ax
 	0012cf70 setfuncargs 0x4
 	0012cf78 mov ax,0x6aef20
 	0012cf84 farcall ax
 	0012cf8c farsubsp 0x4
 	0012cf94 pop op
 	0012cf9c sourceline 0xa34
 	0012cfa4 jmp 0x0012d28c
		0012d28c: UNCONDITIONAL_JUMP

	[0012cfac]
		0012cdc8: CONDITIONAL_JUMP
 	0012cfac sourceline 0xa36
 	0012cfb4 mov mar,0x3cef20
 	0012cfc0 mov ax,mar
 	0012cfcc push op
 	0012cfd4 mov op,ax
 	0012cfdc setfuncargs 0x0
 	0012cfe4 mov ax,0x89ef20
 	0012cff0 farcall ax
 	0012cff8 pop op
 	0012d000 push ax
 	0012d008 mov mar,0x8b6f20
 	0012d014 mov ax,mar
 	0012d020 pop bx
 	0012d028 cmpeq bx,ax
 	0012d034 mov ax,bx
 	0012d040 jnz 0x0012d0fc
		0012d0fc: CONDITIONAL_JUMP
		0012d048: FALL_THROUGH

	[0012d048]
		0012cfac: FALL_THROUGH
 	0012d048 push ax
 	0012d050 mov mar,0x3cef20
 	0012d05c mov ax,mar
 	0012d068 push op
 	0012d070 mov op,ax
 	0012d078 setfuncargs 0x0
 	0012d080 mov ax,0x89ef20
 	0012d08c farcall ax
 	0012d094 pop op
 	0012d09c push ax
 	0012d0a4 mov mar,0x8bef20
 	0012d0b0 mov ax,mar
 	0012d0bc pop bx
 	0012d0c4 cmpeq bx,ax
 	0012d0d0 mov ax,bx
 	0012d0dc pop bx
 	0012d0e4 lor bx,ax
 	0012d0f0 mov ax,bx
		0012d0fc: FALL_THROUGH

	[0012d0fc]
		0012cfac: CONDITIONAL_JUMP
		0012d048: FALL_THROUGH
 	0012d0fc jz 0x0012d23c
		0012d23c: CONDITIONAL_JUMP
		0012d104: FALL_THROUGH

	[0012d104]
		0012d0fc: FALL_THROUGH
 	0012d104 sourceline 0xa38
 	0012d10c mov ax,0x1
 	0012d118 mov bx,ax
 	0012d124 mov mar,0x3cef20
 	0012d130 mov ax,mar
 	0012d13c push op
 	0012d144 mov op,ax
 	0012d14c farpush bx
 	0012d154 setfuncargs 0x1
 	0012d15c mov ax,0x69ef20
 	0012d168 farcall ax
 	0012d170 farsubsp 0x1
 	0012d178 pop op
 	0012d180 sourceline 0xa39
 	0012d188 push op
 	0012d190 mov ax,0x2b948a
 	0012d19c farpush ax
 	0012d1a4 mov ax,0x138
 	0012d1b0 farpush ax
 	0012d1b8 mov ax,0x92
 	0012d1c4 farpush ax
 	0012d1cc mov ax,0x0
 	0012d1d8 farpush ax
 	0012d1e0 mov mar,0x3cef20
 	0012d1ec mov ax,mar
 	0012d1f8 mov op,ax
 	0012d200 setfuncargs 0x4
 	0012d208 mov ax,0x6aef20
 	0012d214 farcall ax
 	0012d21c farsubsp 0x4
 	0012d224 pop op
 	0012d22c sourceline 0xa3a
 	0012d234 jmp 0x0012d28c
		0012d28c: UNCONDITIONAL_JUMP

	[0012d23c]
		0012d0fc: CONDITIONAL_JUMP
 	0012d23c sourceline 0xa3c
 	0012d244 mov ax,0x3
 	0012d250 push ax
 	0012d258 mov ax,0x5
 	0012d264 push ax
 	0012d26c mov ax,0x10ae5c
 	0012d278 call ax
 	0012d280 sub sp,0x8
		0012d28c: FALL_THROUGH

	[0012d28c]
		0012ce74: UNCONDITIONAL_JUMP
		0012d104: UNCONDITIONAL_JUMP
		0012d23c: FALL_THROUGH
 	0012d28c sourceline 0xa3d
 	0012d294 mov ax,0x0
 	0012d2a0 ret

iSticky_UseInv$0:
	[0012d2a4]
 	0012d2a4 sourceline 0xa44
 	0012d2ac thisaddr
 	0012d2b4 sourceline 0xa45
*	0012d2bc mov mar,0x3cef20
 	0012d2c8 mov ax,mar
 	0012d2d4 push op
 	0012d2dc mov op,ax
 	0012d2e4 setfuncargs 0x0
 	0012d2ec mov ax,0x89ef20
 	0012d2f8 farcall ax
 	0012d300 pop op
 	0012d308 push ax
 	0012d310 mov mar,0x99ef20
 	0012d31c mov ax,mar
 	0012d328 pop bx
 	0012d330 cmpeq bx,ax
 	0012d33c mov ax,bx
 	0012d348 jz 0x0012d740
		0012d740: CONDITIONAL_JUMP
		0012d350: FALL_THROUGH

	[0012d350]
		0012d2a4: FALL_THROUGH
 	0012d350 sourceline 0xa47
 	0012d358 mov ax,0x1
 	0012d364 mov bx,ax
 	0012d370 mov mar,0x3cef20
 	0012d37c mov ax,mar
 	0012d388 push op
 	0012d390 mov op,ax
 	0012d398 farpush bx
 	0012d3a0 setfuncargs 0x1
 	0012d3a8 mov ax,0x69ef20
 	0012d3b4 farcall ax
 	0012d3bc farsubsp 0x1
 	0012d3c4 pop op
 	0012d3cc sourceline 0xa48
 	0012d3d4 push op
 	0012d3dc mov ax,0x2b94e5
 	0012d3e8 farpush ax
 	0012d3f0 mov ax,0x138
 	0012d3fc farpush ax
 	0012d404 mov ax,0x92
 	0012d410 farpush ax
 	0012d418 mov ax,0x0
 	0012d424 farpush ax
 	0012d42c mov mar,0x3cef20
 	0012d438 mov ax,mar
 	0012d444 mov op,ax
 	0012d44c setfuncargs 0x4
 	0012d454 mov ax,0x6aef20
 	0012d460 farcall ax
 	0012d468 farsubsp 0x4
 	0012d470 pop op
 	0012d478 sourceline 0xa49
 	0012d480 push op
 	0012d488 mov ax,0x0
 	0012d494 farpush ax
 	0012d49c mov ax,0x32
 	0012d4a8 farpush ax
 	0012d4b0 mov mar,0xa16f20
 	0012d4bc mov ax,mar
 	0012d4c8 mov op,ax
 	0012d4d0 setfuncargs 0x2
 	0012d4d8 mov ax,0x2fef20
 	0012d4e4 farcall ax
 	0012d4ec farsubsp 0x2
 	0012d4f4 pop op
 	0012d4fc sourceline 0xa4a
 	0012d504 push op
 	0012d50c mov mar,0x99ef20
 	0012d518 mov ax,mar
 	0012d524 farpush ax
 	0012d52c mov mar,0x3cef20
 	0012d538 mov ax,mar
 	0012d544 mov op,ax
 	0012d54c setfuncargs 0x1
 	0012d554 mov ax,0x7d6f20
 	0012d560 farcall ax
 	0012d568 farsubsp 0x1
 	0012d570 pop op
 	0012d578 sourceline 0xa4b
 	0012d580 push op
 	0012d588 mov mar,0x9eef20
 	0012d594 mov ax,mar
 	0012d5a0 farpush ax
 	0012d5a8 mov mar,0x3cef20
 	0012d5b4 mov ax,mar
 	0012d5c0 mov op,ax
 	0012d5c8 setfuncargs 0x1
 	0012d5d0 mov ax,0x7d6f20
 	0012d5dc farcall ax
 	0012d5e4 farsubsp 0x1
 	0012d5ec pop op
 	0012d5f4 sourceline 0xa4c
 	0012d5fc push op
 	0012d604 mov ax,0x7cfe
 	0012d610 farpush ax
 	0012d618 mov mar,0x9e6f20
 	0012d624 mov ax,mar
 	0012d630 farpush ax
 	0012d638 mov mar,0x3cef20
 	0012d644 mov ax,mar
 	0012d650 mov op,ax
 	0012d658 setfuncargs 0x2
 	0012d660 mov ax,0x7e6f20
 	0012d66c farcall ax
 	0012d674 farsubsp 0x2
 	0012d67c pop op
 	0012d684 sourceline 0xa4d
 	0012d68c push op
 	0012d694 mov ax,0x2b9510
 	0012d6a0 farpush ax
 	0012d6a8 mov ax,0x138
 	0012d6b4 farpush ax
 	0012d6bc mov ax,0x92
 	0012d6c8 farpush ax
 	0012d6d0 mov ax,0x0
 	0012d6dc farpush ax
 	0012d6e4 mov mar,0x3cef20
 	0012d6f0 mov ax,mar
 	0012d6fc mov op,ax
 	0012d704 setfuncargs 0x4
 	0012d70c mov ax,0x6aef20
 	0012d718 farcall ax
 	0012d720 farsubsp 0x4
 	0012d728 pop op
 	0012d730 sourceline 0xa4e
 	0012d738 jmp 0x0012db38
		0012db38: UNCONDITIONAL_JUMP

	[0012d740]
		0012d2a4: CONDITIONAL_JUMP
 	0012d740 sourceline 0xa50
 	0012d748 mov mar,0x3cef20
 	0012d754 mov ax,mar
 	0012d760 push op
 	0012d768 mov op,ax
 	0012d770 setfuncargs 0x0
 	0012d778 mov ax,0x89ef20
 	0012d784 farcall ax
 	0012d78c pop op
 	0012d794 push ax
 	0012d79c mov mar,0x8bef20
 	0012d7a8 mov ax,mar
 	0012d7b4 pop bx
 	0012d7bc cmpeq bx,ax
 	0012d7c8 mov ax,bx
 	0012d7d4 jz 0x0012d914
		0012d914: CONDITIONAL_JUMP
		0012d7dc: FALL_THROUGH

	[0012d7dc]
		0012d740: FALL_THROUGH
 	0012d7dc sourceline 0xa52
 	0012d7e4 mov ax,0x1
 	0012d7f0 mov bx,ax
 	0012d7fc mov mar,0x3cef20
 	0012d808 mov ax,mar
 	0012d814 push op
 	0012d81c mov op,ax
 	0012d824 farpush bx
 	0012d82c setfuncargs 0x1
 	0012d834 mov ax,0x69ef20
 	0012d840 farcall ax
 	0012d848 farsubsp 0x1
 	0012d850 pop op
 	0012d858 sourceline 0xa53
 	0012d860 push op
 	0012d868 mov ax,0x2ba161
 	0012d874 farpush ax
 	0012d87c mov ax,0x138
 	0012d888 farpush ax
 	0012d890 mov ax,0x92
 	0012d89c farpush ax
 	0012d8a4 mov ax,0x0
 	0012d8b0 farpush ax
 	0012d8b8 mov mar,0x3cef20
 	0012d8c4 mov ax,mar
 	0012d8d0 mov op,ax
 	0012d8d8 setfuncargs 0x4
 	0012d8e0 mov ax,0x6aef20
 	0012d8ec farcall ax
 	0012d8f4 farsubsp 0x4
 	0012d8fc pop op
 	0012d904 sourceline 0xa54
 	0012d90c jmp 0x0012db38
		0012db38: UNCONDITIONAL_JUMP

	[0012d914]
		0012d740: CONDITIONAL_JUMP
 	0012d914 sourceline 0xa56
 	0012d91c mov mar,0x3cef20
 	0012d928 mov ax,mar
 	0012d934 push op
 	0012d93c mov op,ax
 	0012d944 setfuncargs 0x0
 	0012d94c mov ax,0x89ef20
 	0012d958 farcall ax
 	0012d960 pop op
 	0012d968 push ax
 	0012d970 mov mar,0x8b6f20
 	0012d97c mov ax,mar
 	0012d988 pop bx
 	0012d990 cmpeq bx,ax
 	0012d99c mov ax,bx
 	0012d9a8 jz 0x0012dae8
		0012dae8: CONDITIONAL_JUMP
		0012d9b0: FALL_THROUGH

	[0012d9b0]
		0012d914: FALL_THROUGH
 	0012d9b0 sourceline 0xa58
 	0012d9b8 mov ax,0x1
 	0012d9c4 mov bx,ax
 	0012d9d0 mov mar,0x3cef20
 	0012d9dc mov ax,mar
 	0012d9e8 push op
 	0012d9f0 mov op,ax
 	0012d9f8 farpush bx
 	0012da00 setfuncargs 0x1
 	0012da08 mov ax,0x69ef20
 	0012da14 farcall ax
 	0012da1c farsubsp 0x1
 	0012da24 pop op
 	0012da2c sourceline 0xa59
 	0012da34 push op
 	0012da3c mov ax,0x2ba161
 	0012da48 farpush ax
 	0012da50 mov ax,0x138
 	0012da5c farpush ax
 	0012da64 mov ax,0x92
 	0012da70 farpush ax
 	0012da78 mov ax,0x0
 	0012da84 farpush ax
 	0012da8c mov mar,0x3cef20
 	0012da98 mov ax,mar
 	0012daa4 mov op,ax
 	0012daac setfuncargs 0x4
 	0012dab4 mov ax,0x6aef20
 	0012dac0 farcall ax
 	0012dac8 farsubsp 0x4
 	0012dad0 pop op
 	0012dad8 sourceline 0xa5a
 	0012dae0 jmp 0x0012db38
		0012db38: UNCONDITIONAL_JUMP

	[0012dae8]
		0012d914: CONDITIONAL_JUMP
 	0012dae8 sourceline 0xa5c
 	0012daf0 mov ax,0x3
 	0012dafc push ax
 	0012db04 mov ax,0x5
 	0012db10 push ax
 	0012db18 mov ax,0x10ae5c
 	0012db24 call ax
 	0012db2c sub sp,0x8
		0012db38: FALL_THROUGH

	[0012db38]
		0012d350: UNCONDITIONAL_JUMP
		0012d7dc: UNCONDITIONAL_JUMP
		0012d9b0: UNCONDITIONAL_JUMP
		0012dae8: FALL_THROUGH
 	0012db38 sourceline 0xa5d
 	0012db40 mov ax,0x0
 	0012db4c ret

iMustache_UseInv$0:
	[0012db50]
 	0012db50 sourceline 0xa62
 	0012db58 thisaddr
 	0012db60 sourceline 0xa63
*	0012db68 mov mar,0x3cef20
 	0012db74 mov ax,mar
 	0012db80 push op
 	0012db88 mov op,ax
 	0012db90 setfuncargs 0x0
 	0012db98 mov ax,0x89ef20
 	0012dba4 farcall ax
 	0012dbac pop op
 	0012dbb4 push ax
 	0012dbbc mov mar,0x8b6f20
 	0012dbc8 mov ax,mar
 	0012dbd4 pop bx
 	0012dbdc cmpeq bx,ax
 	0012dbe8 mov ax,bx
 	0012dbf4 jz 0x0012dd34
		0012dd34: CONDITIONAL_JUMP
		0012dbfc: FALL_THROUGH

	[0012dbfc]
		0012db50: FALL_THROUGH
 	0012dbfc sourceline 0xa65
 	0012dc04 mov ax,0x1
 	0012dc10 mov bx,ax
 	0012dc1c mov mar,0x3cef20
 	0012dc28 mov ax,mar
 	0012dc34 push op
 	0012dc3c mov op,ax
 	0012dc44 farpush bx
 	0012dc4c setfuncargs 0x1
 	0012dc54 mov ax,0x69ef20
 	0012dc60 farcall ax
 	0012dc68 farsubsp 0x1
 	0012dc70 pop op
 	0012dc78 sourceline 0xa66
 	0012dc80 push op
 	0012dc88 mov ax,0x2b95d0
 	0012dc94 farpush ax
 	0012dc9c mov ax,0x138
 	0012dca8 farpush ax
 	0012dcb0 mov ax,0x92
 	0012dcbc farpush ax
 	0012dcc4 mov ax,0x0
 	0012dcd0 farpush ax
 	0012dcd8 mov mar,0x3cef20
 	0012dce4 mov ax,mar
 	0012dcf0 mov op,ax
 	0012dcf8 setfuncargs 0x4
 	0012dd00 mov ax,0x6aef20
 	0012dd0c farcall ax
 	0012dd14 farsubsp 0x4
 	0012dd1c pop op
 	0012dd24 sourceline 0xa67
 	0012dd2c jmp 0x0012df58
		0012df58: UNCONDITIONAL_JUMP

	[0012dd34]
		0012db50: CONDITIONAL_JUMP
 	0012dd34 sourceline 0xa69
 	0012dd3c mov mar,0x3cef20
 	0012dd48 mov ax,mar
 	0012dd54 push op
 	0012dd5c mov op,ax
 	0012dd64 setfuncargs 0x0
 	0012dd6c mov ax,0x89ef20
 	0012dd78 farcall ax
 	0012dd80 pop op
 	0012dd88 push ax
 	0012dd90 mov mar,0x8bef20
 	0012dd9c mov ax,mar
 	0012dda8 pop bx
 	0012ddb0 cmpeq bx,ax
 	0012ddbc mov ax,bx
 	0012ddc8 jz 0x0012df08
		0012df08: CONDITIONAL_JUMP
		0012ddd0: FALL_THROUGH

	[0012ddd0]
		0012dd34: FALL_THROUGH
 	0012ddd0 sourceline 0xa6b
 	0012ddd8 mov ax,0x1
 	0012dde4 mov bx,ax
 	0012ddf0 mov mar,0x3cef20
 	0012ddfc mov ax,mar
 	0012de08 push op
 	0012de10 mov op,ax
 	0012de18 farpush bx
 	0012de20 setfuncargs 0x1
 	0012de28 mov ax,0x69ef20
 	0012de34 farcall ax
 	0012de3c farsubsp 0x1
 	0012de44 pop op
 	0012de4c sourceline 0xa6c
 	0012de54 push op
 	0012de5c mov ax,0x2ba036
 	0012de68 farpush ax
 	0012de70 mov ax,0x138
 	0012de7c farpush ax
 	0012de84 mov ax,0x92
 	0012de90 farpush ax
 	0012de98 mov ax,0x0
 	0012dea4 farpush ax
 	0012deac mov mar,0x3cef20
 	0012deb8 mov ax,mar
 	0012dec4 mov op,ax
 	0012decc setfuncargs 0x4
 	0012ded4 mov ax,0x6aef20
 	0012dee0 farcall ax
 	0012dee8 farsubsp 0x4
 	0012def0 pop op
 	0012def8 sourceline 0xa6d
 	0012df00 jmp 0x0012df58
		0012df58: UNCONDITIONAL_JUMP

	[0012df08]
		0012dd34: CONDITIONAL_JUMP
 	0012df08 sourceline 0xa6f
 	0012df10 mov ax,0x3
 	0012df1c push ax
 	0012df24 mov ax,0x5
 	0012df30 push ax
 	0012df38 mov ax,0x10ae5c
 	0012df44 call ax
 	0012df4c sub sp,0x8
		0012df58: FALL_THROUGH

	[0012df58]
		0012dbfc: UNCONDITIONAL_JUMP
		0012ddd0: UNCONDITIONAL_JUMP
		0012df08: FALL_THROUGH
 	0012df58 sourceline 0xa70
 	0012df60 mov ax,0x0
 	0012df6c ret

iMapHut_UseInv$0:
	[0012df70]
 	0012df70 sourceline 0xa75
 	0012df78 thisaddr
 	0012df80 sourceline 0xa76
*	0012df88 mov mar,0x3cef20
 	0012df94 mov ax,mar
 	0012dfa0 push op
 	0012dfa8 mov op,ax
 	0012dfb0 setfuncargs 0x0
 	0012dfb8 mov ax,0x89ef20
 	0012dfc4 farcall ax
 	0012dfcc pop op
 	0012dfd4 push ax
 	0012dfdc mov mar,0x886f20
 	0012dfe8 mov ax,mar
 	0012dff4 pop bx
 	0012dffc cmpeq bx,ax
 	0012e008 mov ax,bx
 	0012e014 jz 0x0012e154
		0012e154: CONDITIONAL_JUMP
		0012e01c: FALL_THROUGH

	[0012e01c]
		0012df70: FALL_THROUGH
 	0012e01c sourceline 0xa78
 	0012e024 mov ax,0x1
 	0012e030 mov bx,ax
 	0012e03c mov mar,0x3cef20
 	0012e048 mov ax,mar
 	0012e054 push op
 	0012e05c mov op,ax
 	0012e064 farpush bx
 	0012e06c setfuncargs 0x1
 	0012e074 mov ax,0x69ef20
 	0012e080 farcall ax
 	0012e088 farsubsp 0x1
 	0012e090 pop op
 	0012e098 sourceline 0xa79
 	0012e0a0 push op
 	0012e0a8 mov ax,0x2b9adb
 	0012e0b4 farpush ax
 	0012e0bc mov ax,0x138
 	0012e0c8 farpush ax
 	0012e0d0 mov ax,0x92
 	0012e0dc farpush ax
 	0012e0e4 mov ax,0x0
 	0012e0f0 farpush ax
 	0012e0f8 mov mar,0x3cef20
 	0012e104 mov ax,mar
 	0012e110 mov op,ax
 	0012e118 setfuncargs 0x4
 	0012e120 mov ax,0x6aef20
 	0012e12c farcall ax
 	0012e134 farsubsp 0x4
 	0012e13c pop op
 	0012e144 sourceline 0xa7a
 	0012e14c jmp 0x0012e7dc
		0012e7dc: UNCONDITIONAL_JUMP

	[0012e154]
		0012df70: CONDITIONAL_JUMP
 	0012e154 sourceline 0xa7c
 	0012e15c mov mar,0x3cef20
 	0012e168 mov ax,mar
 	0012e174 push op
 	0012e17c mov op,ax
 	0012e184 setfuncargs 0x0
 	0012e18c mov ax,0x89ef20
 	0012e198 farcall ax
 	0012e1a0 pop op
 	0012e1a8 push ax
 	0012e1b0 mov mar,0x8b6f20
 	0012e1bc mov ax,mar
 	0012e1c8 pop bx
 	0012e1d0 cmpeq bx,ax
 	0012e1dc mov ax,bx
 	0012e1e8 jnz 0x0012e2a4
		0012e2a4: CONDITIONAL_JUMP
		0012e1f0: FALL_THROUGH

	[0012e1f0]
		0012e154: FALL_THROUGH
 	0012e1f0 push ax
 	0012e1f8 mov mar,0x3cef20
 	0012e204 mov ax,mar
 	0012e210 push op
 	0012e218 mov op,ax
 	0012e220 setfuncargs 0x0
 	0012e228 mov ax,0x89ef20
 	0012e234 farcall ax
 	0012e23c pop op
 	0012e244 push ax
 	0012e24c mov mar,0x8bef20
 	0012e258 mov ax,mar
 	0012e264 pop bx
 	0012e26c cmpeq bx,ax
 	0012e278 mov ax,bx
 	0012e284 pop bx
 	0012e28c lor bx,ax
 	0012e298 mov ax,bx
		0012e2a4: FALL_THROUGH

	[0012e2a4]
		0012e154: CONDITIONAL_JUMP
		0012e1f0: FALL_THROUGH
 	0012e2a4 jz 0x0012e3e4
		0012e3e4: CONDITIONAL_JUMP
		0012e2ac: FALL_THROUGH

	[0012e2ac]
		0012e2a4: FALL_THROUGH
 	0012e2ac sourceline 0xa7e
 	0012e2b4 mov ax,0x1
 	0012e2c0 mov bx,ax
 	0012e2cc mov mar,0x3cef20
 	0012e2d8 mov ax,mar
 	0012e2e4 push op
 	0012e2ec mov op,ax
 	0012e2f4 farpush bx
 	0012e2fc setfuncargs 0x1
 	0012e304 mov ax,0x69ef20
 	0012e310 farcall ax
 	0012e318 farsubsp 0x1
 	0012e320 pop op
 	0012e328 sourceline 0xa7f
 	0012e330 push op
 	0012e338 mov ax,0x2ba036
 	0012e344 farpush ax
 	0012e34c mov ax,0x138
 	0012e358 farpush ax
 	0012e360 mov ax,0x92
 	0012e36c farpush ax
 	0012e374 mov ax,0x0
 	0012e380 farpush ax
 	0012e388 mov mar,0x3cef20
 	0012e394 mov ax,mar
 	0012e3a0 mov op,ax
 	0012e3a8 setfuncargs 0x4
 	0012e3b0 mov ax,0x6aef20
 	0012e3bc farcall ax
 	0012e3c4 farsubsp 0x4
 	0012e3cc pop op
 	0012e3d4 sourceline 0xa80
 	0012e3dc jmp 0x0012e7dc
		0012e7dc: UNCONDITIONAL_JUMP

	[0012e3e4]
		0012e2a4: CONDITIONAL_JUMP
 	0012e3e4 sourceline 0xa82
 	0012e3ec mov mar,0x3cef20
 	0012e3f8 mov ax,mar
 	0012e404 push op
 	0012e40c mov op,ax
 	0012e414 setfuncargs 0x0
 	0012e41c mov ax,0x89ef20
 	0012e428 farcall ax
 	0012e430 pop op
 	0012e438 push ax
 	0012e440 mov mar,0x986f20
 	0012e44c mov ax,mar
 	0012e458 pop bx
 	0012e460 cmpeq bx,ax
 	0012e46c mov ax,bx
 	0012e478 jz 0x0012e5b8
		0012e5b8: CONDITIONAL_JUMP
		0012e480: FALL_THROUGH

	[0012e480]
		0012e3e4: FALL_THROUGH
 	0012e480 sourceline 0xa84
 	0012e488 mov ax,0x1
 	0012e494 mov bx,ax
 	0012e4a0 mov mar,0x3cef20
 	0012e4ac mov ax,mar
 	0012e4b8 push op
 	0012e4c0 mov op,ax
 	0012e4c8 farpush bx
 	0012e4d0 setfuncargs 0x1
 	0012e4d8 mov ax,0x69ef20
 	0012e4e4 farcall ax
 	0012e4ec farsubsp 0x1
 	0012e4f4 pop op
 	0012e4fc sourceline 0xa85
 	0012e504 push op
 	0012e50c mov ax,0x2b967b
 	0012e518 farpush ax
 	0012e520 mov ax,0x138
 	0012e52c farpush ax
 	0012e534 mov ax,0x92
 	0012e540 farpush ax
 	0012e548 mov ax,0x0
 	0012e554 farpush ax
 	0012e55c mov mar,0x3cef20
 	0012e568 mov ax,mar
 	0012e574 mov op,ax
 	0012e57c setfuncargs 0x4
 	0012e584 mov ax,0x6aef20
 	0012e590 farcall ax
 	0012e598 farsubsp 0x4
 	0012e5a0 pop op
 	0012e5a8 sourceline 0xa86
 	0012e5b0 jmp 0x0012e7dc
		0012e7dc: UNCONDITIONAL_JUMP

	[0012e5b8]
		0012e3e4: CONDITIONAL_JUMP
 	0012e5b8 sourceline 0xa88
 	0012e5c0 mov mar,0x3cef20
 	0012e5cc mov ax,mar
 	0012e5d8 push op
 	0012e5e0 mov op,ax
 	0012e5e8 setfuncargs 0x0
 	0012e5f0 mov ax,0x89ef20
 	0012e5fc farcall ax
 	0012e604 pop op
 	0012e60c push ax
 	0012e614 mov mar,0x94ef20
 	0012e620 mov ax,mar
 	0012e62c pop bx
 	0012e634 cmpeq bx,ax
 	0012e640 mov ax,bx
 	0012e64c jz 0x0012e78c
		0012e78c: CONDITIONAL_JUMP
		0012e654: FALL_THROUGH

	[0012e654]
		0012e5b8: FALL_THROUGH
 	0012e654 sourceline 0xa8a
 	0012e65c mov ax,0x1
 	0012e668 mov bx,ax
 	0012e674 mov mar,0x3cef20
 	0012e680 mov ax,mar
 	0012e68c push op
 	0012e694 mov op,ax
 	0012e69c farpush bx
 	0012e6a4 setfuncargs 0x1
 	0012e6ac mov ax,0x69ef20
 	0012e6b8 farcall ax
 	0012e6c0 farsubsp 0x1
 	0012e6c8 pop op
 	0012e6d0 sourceline 0xa8b
 	0012e6d8 push op
 	0012e6e0 mov ax,0x2b9b31
 	0012e6ec farpush ax
 	0012e6f4 mov ax,0x138
 	0012e700 farpush ax
 	0012e708 mov ax,0x92
 	0012e714 farpush ax
 	0012e71c mov ax,0x0
 	0012e728 farpush ax
 	0012e730 mov mar,0x3cef20
 	0012e73c mov ax,mar
 	0012e748 mov op,ax
 	0012e750 setfuncargs 0x4
 	0012e758 mov ax,0x6aef20
 	0012e764 farcall ax
 	0012e76c farsubsp 0x4
 	0012e774 pop op
 	0012e77c sourceline 0xa8c
 	0012e784 jmp 0x0012e7dc
		0012e7dc: UNCONDITIONAL_JUMP

	[0012e78c]
		0012e5b8: CONDITIONAL_JUMP
 	0012e78c sourceline 0xa8e
 	0012e794 mov ax,0x3
 	0012e7a0 push ax
 	0012e7a8 mov ax,0x5
 	0012e7b4 push ax
 	0012e7bc mov ax,0x10ae5c
 	0012e7c8 call ax
 	0012e7d0 sub sp,0x8
		0012e7dc: FALL_THROUGH

	[0012e7dc]
		0012e01c: UNCONDITIONAL_JUMP
		0012e2ac: UNCONDITIONAL_JUMP
		0012e480: UNCONDITIONAL_JUMP
		0012e654: UNCONDITIONAL_JUMP
		0012e78c: FALL_THROUGH
 	0012e7dc sourceline 0xa8f
 	0012e7e4 mov ax,0x0
 	0012e7f0 ret

iSumerianSymbol_UseInv$0:
	[0012e7f4]
 	0012e7f4 sourceline 0xa95
 	0012e7fc thisaddr
 	0012e804 sourceline 0xa96
*	0012e80c mov mar,0x3cef20
 	0012e818 mov ax,mar
 	0012e824 push op
 	0012e82c mov op,ax
 	0012e834 setfuncargs 0x0
 	0012e83c mov ax,0x89ef20
 	0012e848 farcall ax
 	0012e850 pop op
 	0012e858 push ax
 	0012e860 mov mar,0x8f6f20
 	0012e86c mov ax,mar
 	0012e878 pop bx
 	0012e880 cmpeq bx,ax
 	0012e88c mov ax,bx
 	0012e898 jz 0x0012e9d8
		0012e9d8: CONDITIONAL_JUMP
		0012e8a0: FALL_THROUGH

	[0012e8a0]
		0012e7f4: FALL_THROUGH
 	0012e8a0 sourceline 0xa98
 	0012e8a8 mov ax,0x1
 	0012e8b4 mov bx,ax
 	0012e8c0 mov mar,0x3cef20
 	0012e8cc mov ax,mar
 	0012e8d8 push op
 	0012e8e0 mov op,ax
 	0012e8e8 farpush bx
 	0012e8f0 setfuncargs 0x1
 	0012e8f8 mov ax,0x69ef20
 	0012e904 farcall ax
 	0012e90c farsubsp 0x1
 	0012e914 pop op
 	0012e91c sourceline 0xa99
 	0012e924 push op
 	0012e92c mov ax,0x2b9a2e
 	0012e938 farpush ax
 	0012e940 mov ax,0x138
 	0012e94c farpush ax
 	0012e954 mov ax,0x92
 	0012e960 farpush ax
 	0012e968 mov ax,0x0
 	0012e974 farpush ax
 	0012e97c mov mar,0x3cef20
 	0012e988 mov ax,mar
 	0012e994 mov op,ax
 	0012e99c setfuncargs 0x4
 	0012e9a4 mov ax,0x6aef20
 	0012e9b0 farcall ax
 	0012e9b8 farsubsp 0x4
 	0012e9c0 pop op
 	0012e9c8 sourceline 0xa9a
 	0012e9d0 jmp 0x0012ecb8
		0012ecb8: UNCONDITIONAL_JUMP

	[0012e9d8]
		0012e7f4: CONDITIONAL_JUMP
 	0012e9d8 sourceline 0xa9c
 	0012e9e0 mov mar,0x3cef20
 	0012e9ec mov ax,mar
 	0012e9f8 push op
 	0012ea00 mov op,ax
 	0012ea08 setfuncargs 0x0
 	0012ea10 mov ax,0x89ef20
 	0012ea1c farcall ax
 	0012ea24 pop op
 	0012ea2c push ax
 	0012ea34 mov mar,0x8b6f20
 	0012ea40 mov ax,mar
 	0012ea4c pop bx
 	0012ea54 cmpeq bx,ax
 	0012ea60 mov ax,bx
 	0012ea6c jnz 0x0012eb28
		0012eb28: CONDITIONAL_JUMP
		0012ea74: FALL_THROUGH

	[0012ea74]
		0012e9d8: FALL_THROUGH
 	0012ea74 push ax
 	0012ea7c mov mar,0x3cef20
 	0012ea88 mov ax,mar
 	0012ea94 push op
 	0012ea9c mov op,ax
 	0012eaa4 setfuncargs 0x0
 	0012eaac mov ax,0x89ef20
 	0012eab8 farcall ax
 	0012eac0 pop op
 	0012eac8 push ax
 	0012ead0 mov mar,0x8bef20
 	0012eadc mov ax,mar
 	0012eae8 pop bx
 	0012eaf0 cmpeq bx,ax
 	0012eafc mov ax,bx
 	0012eb08 pop bx
 	0012eb10 lor bx,ax
 	0012eb1c mov ax,bx
		0012eb28: FALL_THROUGH

	[0012eb28]
		0012e9d8: CONDITIONAL_JUMP
		0012ea74: FALL_THROUGH
 	0012eb28 jz 0x0012ec68
		0012ec68: CONDITIONAL_JUMP
		0012eb30: FALL_THROUGH

	[0012eb30]
		0012eb28: FALL_THROUGH
 	0012eb30 sourceline 0xa9e
 	0012eb38 mov ax,0x1
 	0012eb44 mov bx,ax
 	0012eb50 mov mar,0x3cef20
 	0012eb5c mov ax,mar
 	0012eb68 push op
 	0012eb70 mov op,ax
 	0012eb78 farpush bx
 	0012eb80 setfuncargs 0x1
 	0012eb88 mov ax,0x69ef20
 	0012eb94 farcall ax
 	0012eb9c farsubsp 0x1
 	0012eba4 pop op
 	0012ebac sourceline 0xa9f
 	0012ebb4 push op
 	0012ebbc mov ax,0x2ba036
 	0012ebc8 farpush ax
 	0012ebd0 mov ax,0x138
 	0012ebdc farpush ax
 	0012ebe4 mov ax,0x92
 	0012ebf0 farpush ax
 	0012ebf8 mov ax,0x0
 	0012ec04 farpush ax
 	0012ec0c mov mar,0x3cef20
 	0012ec18 mov ax,mar
 	0012ec24 mov op,ax
 	0012ec2c setfuncargs 0x4
 	0012ec34 mov ax,0x6aef20
 	0012ec40 farcall ax
 	0012ec48 farsubsp 0x4
 	0012ec50 pop op
 	0012ec58 sourceline 0xaa0
 	0012ec60 jmp 0x0012ecb8
		0012ecb8: UNCONDITIONAL_JUMP

	[0012ec68]
		0012eb28: CONDITIONAL_JUMP
 	0012ec68 sourceline 0xaa2
 	0012ec70 mov ax,0x3
 	0012ec7c push ax
 	0012ec84 mov ax,0x5
 	0012ec90 push ax
 	0012ec98 mov ax,0x10ae5c
 	0012eca4 call ax
 	0012ecac sub sp,0x8
		0012ecb8: FALL_THROUGH

	[0012ecb8]
		0012e8a0: UNCONDITIONAL_JUMP
		0012eb30: UNCONDITIONAL_JUMP
		0012ec68: FALL_THROUGH
 	0012ecb8 sourceline 0xaa3
 	0012ecc0 mov ax,0x0
 	0012eccc ret

iWoodenStick_UseInv$0:
	[0012ecd0]
 	0012ecd0 sourceline 0xaa8
 	0012ecd8 thisaddr
 	0012ece0 sourceline 0xaa9
*	0012ece8 mov mar,0x3cef20
 	0012ecf4 mov ax,mar
 	0012ed00 push op
 	0012ed08 mov op,ax
 	0012ed10 setfuncargs 0x0
 	0012ed18 mov ax,0x89ef20
 	0012ed24 farcall ax
 	0012ed2c pop op
 	0012ed34 push ax
 	0012ed3c mov mar,0xa06f20
 	0012ed48 mov ax,mar
 	0012ed54 pop bx
 	0012ed5c cmpeq bx,ax
 	0012ed68 mov ax,bx
 	0012ed74 jz 0x0012f498
		0012f498: CONDITIONAL_JUMP
		0012ed7c: FALL_THROUGH

	[0012ed7c]
		0012ecd0: FALL_THROUGH
 	0012ed7c sourceline 0xaab
 	0012ed84 mov mar,0x3cef20
 	0012ed90 mov ax,mar
 	0012ed9c push op
 	0012eda4 mov op,ax
 	0012edac setfuncargs 0x0
 	0012edb4 mov ax,0x3d6f20
 	0012edc0 farcall ax
 	0012edc8 pop op
 	0012edd0 push ax
 	0012edd8 mov ax,0x11
 	0012ede4 pop bx
 	0012edec cmpneq bx,ax
 	0012edf8 mov ax,bx
 	0012ee04 jz 0x0012eeb4
		0012eeb4: CONDITIONAL_JUMP
		0012ee0c: FALL_THROUGH

	[0012ee0c]
		0012ed7c: FALL_THROUGH
 	0012ee0c push ax
 	0012ee14 mov mar,0x3cef20
 	0012ee20 mov ax,mar
 	0012ee2c push op
 	0012ee34 mov op,ax
 	0012ee3c setfuncargs 0x0
 	0012ee44 mov ax,0x3d6f20
 	0012ee50 farcall ax
 	0012ee58 pop op
 	0012ee60 push ax
 	0012ee68 mov ax,0x12
 	0012ee74 pop bx
 	0012ee7c cmpneq bx,ax
 	0012ee88 mov ax,bx
 	0012ee94 pop bx
 	0012ee9c land bx,ax
 	0012eea8 mov ax,bx
		0012eeb4: FALL_THROUGH

	[0012eeb4]
		0012ed7c: CONDITIONAL_JUMP
		0012ee0c: FALL_THROUGH
 	0012eeb4 jz 0x0012eff4
		0012eff4: CONDITIONAL_JUMP
		0012eebc: FALL_THROUGH

	[0012eebc]
		0012eeb4: FALL_THROUGH
 	0012eebc sourceline 0xaad
 	0012eec4 mov ax,0x1
 	0012eed0 mov bx,ax
 	0012eedc mov mar,0x3cef20
 	0012eee8 mov ax,mar
 	0012eef4 push op
 	0012eefc mov op,ax
 	0012ef04 farpush bx
 	0012ef0c setfuncargs 0x1
 	0012ef14 mov ax,0x69ef20
 	0012ef20 farcall ax
 	0012ef28 farsubsp 0x1
 	0012ef30 pop op
 	0012ef38 sourceline 0xaae
 	0012ef40 push op
 	0012ef48 mov ax,0x2b9b71
 	0012ef54 farpush ax
 	0012ef5c mov ax,0x138
 	0012ef68 farpush ax
 	0012ef70 mov ax,0x92
 	0012ef7c farpush ax
 	0012ef84 mov ax,0x0
 	0012ef90 farpush ax
 	0012ef98 mov mar,0x3cef20
 	0012efa4 mov ax,mar
 	0012efb0 mov op,ax
 	0012efb8 setfuncargs 0x4
 	0012efc0 mov ax,0x6aef20
 	0012efcc farcall ax
 	0012efd4 farsubsp 0x4
 	0012efdc pop op
 	0012efe4 sourceline 0xaaf
 	0012efec jmp 0x0012f488
		0012f488: UNCONDITIONAL_JUMP

	[0012eff4]
		0012eeb4: CONDITIONAL_JUMP
 	0012eff4 sourceline 0xab0
 	0012effc mov mar,0x3cef20
 	0012f008 mov ax,mar
 	0012f014 push op
 	0012f01c mov op,ax
 	0012f024 setfuncargs 0x0
 	0012f02c mov ax,0x3d6f20
 	0012f038 farcall ax
 	0012f040 pop op
 	0012f048 push ax
 	0012f050 mov ax,0x12
 	0012f05c pop bx
 	0012f064 cmpeq bx,ax
 	0012f070 mov ax,bx
 	0012f07c jz 0x0012f1bc
		0012f1bc: CONDITIONAL_JUMP
		0012f084: FALL_THROUGH

	[0012f084]
		0012eff4: FALL_THROUGH
 	0012f084 sourceline 0xab2
 	0012f08c mov ax,0x1
 	0012f098 mov bx,ax
 	0012f0a4 mov mar,0x3cef20
 	0012f0b0 mov ax,mar
 	0012f0bc push op
 	0012f0c4 mov op,ax
 	0012f0cc farpush bx
 	0012f0d4 setfuncargs 0x1
 	0012f0dc mov ax,0x69ef20
 	0012f0e8 farcall ax
 	0012f0f0 farsubsp 0x1
 	0012f0f8 pop op
 	0012f100 sourceline 0xab3
 	0012f108 push op
 	0012f110 mov ax,0x2b9ba3
 	0012f11c farpush ax
 	0012f124 mov ax,0x138
 	0012f130 farpush ax
 	0012f138 mov ax,0x92
 	0012f144 farpush ax
 	0012f14c mov ax,0x0
 	0012f158 farpush ax
 	0012f160 mov mar,0x3cef20
 	0012f16c mov ax,mar
 	0012f178 mov op,ax
 	0012f180 setfuncargs 0x4
 	0012f188 mov ax,0x6aef20
 	0012f194 farcall ax
 	0012f19c farsubsp 0x4
 	0012f1a4 pop op
 	0012f1ac sourceline 0xab4
 	0012f1b4 jmp 0x0012f488
		0012f488: UNCONDITIONAL_JUMP

	[0012f1bc]
		0012eff4: CONDITIONAL_JUMP
 	0012f1bc sourceline 0xab5
 	0012f1c4 mov mar,0x3cef20
 	0012f1d0 mov ax,mar
 	0012f1dc push op
 	0012f1e4 mov op,ax
 	0012f1ec setfuncargs 0x0
 	0012f1f4 mov ax,0x3d6f20
 	0012f200 farcall ax
 	0012f208 pop op
 	0012f210 push ax
 	0012f218 mov ax,0x11
 	0012f224 pop bx
 	0012f22c cmpeq bx,ax
 	0012f238 mov ax,bx
 	0012f244 jz 0x0012f488
		0012f488: CONDITIONAL_JUMP
		0012f24c: FALL_THROUGH

	[0012f24c]
		0012f1bc: FALL_THROUGH
 	0012f24c sourceline 0xab7
 	0012f254 push op
 	0012f25c mov mar,0xa06f20
 	0012f268 mov ax,mar
 	0012f274 farpush ax
 	0012f27c mov mar,0x3cef20
 	0012f288 mov ax,mar
 	0012f294 mov op,ax
 	0012f29c setfuncargs 0x1
 	0012f2a4 mov ax,0x7d6f20
 	0012f2b0 farcall ax
 	0012f2b8 farsubsp 0x1
 	0012f2c0 pop op
 	0012f2c8 sourceline 0xab8
 	0012f2d0 push op
 	0012f2d8 mov mar,0x9fef20
 	0012f2e4 mov ax,mar
 	0012f2f0 farpush ax
 	0012f2f8 mov mar,0x3cef20
 	0012f304 mov ax,mar
 	0012f310 mov op,ax
 	0012f318 setfuncargs 0x1
 	0012f320 mov ax,0x7d6f20
 	0012f32c farcall ax
 	0012f334 farsubsp 0x1
 	0012f33c pop op
 	0012f344 sourceline 0xab9
 	0012f34c mov ax,0x0
 	0012f358 mov bx,ax
 	0012f364 mov mar,0x30ef20
 	0012f370 mov ax,mar
 	0012f37c push op
 	0012f384 mov op,ax
 	0012f38c farpush bx
 	0012f394 setfuncargs 0x1
 	0012f39c mov ax,0x3a6f20
 	0012f3a8 farcall ax
 	0012f3b0 farsubsp 0x1
 	0012f3b8 pop op
 	0012f3c0 sourceline 0xaba
 	0012f3c8 mov ax,0x0
 	0012f3d4 mov bx,ax
 	0012f3e0 mov mar,0x3cef20
 	0012f3ec mov ax,mar
 	0012f3f8 push op
 	0012f400 mov op,ax
 	0012f408 farpush bx
 	0012f410 setfuncargs 0x1
 	0012f418 mov ax,0x436f20
 	0012f424 farcall ax
 	0012f42c farsubsp 0x1
 	0012f434 pop op
 	0012f43c sourceline 0xabb
 	0012f444 setfuncargs 0x0
 	0012f44c mov ax,0x75ef20
 	0012f458 farcall ax
 	0012f460 sourceline 0xabc
 	0012f468 mov ax,0x1
 	0012f474 mov mar,0xa1ef20
 	0012f480 memwrite4 ax
		0012f488: FALL_THROUGH

	[0012f488]
		0012eebc: UNCONDITIONAL_JUMP
		0012f084: UNCONDITIONAL_JUMP
		0012f1bc: CONDITIONAL_JUMP
		0012f24c: FALL_THROUGH
 	0012f488 sourceline 0xabe
 	0012f490 jmp 0x0012f890
		0012f890: UNCONDITIONAL_JUMP

	[0012f498]
		0012ecd0: CONDITIONAL_JUMP
 	0012f498 sourceline 0xac0
 	0012f4a0 mov mar,0x3cef20
 	0012f4ac mov ax,mar
 	0012f4b8 push op
 	0012f4c0 mov op,ax
 	0012f4c8 setfuncargs 0x0
 	0012f4d0 mov ax,0x89ef20
 	0012f4dc farcall ax
 	0012f4e4 pop op
 	0012f4ec push ax
 	0012f4f4 mov mar,0x7def20
 	0012f500 mov ax,mar
 	0012f50c pop bx
 	0012f514 cmpeq bx,ax
 	0012f520 mov ax,bx
 	0012f52c jz 0x0012f66c
		0012f66c: CONDITIONAL_JUMP
		0012f534: FALL_THROUGH

	[0012f534]
		0012f498: FALL_THROUGH
 	0012f534 sourceline 0xac2
 	0012f53c mov ax,0x1
 	0012f548 mov bx,ax
 	0012f554 mov mar,0x3cef20
 	0012f560 mov ax,mar
 	0012f56c push op
 	0012f574 mov op,ax
 	0012f57c farpush bx
 	0012f584 setfuncargs 0x1
 	0012f58c mov ax,0x69ef20
 	0012f598 farcall ax
 	0012f5a0 farsubsp 0x1
 	0012f5a8 pop op
 	0012f5b0 sourceline 0xac3
 	0012f5b8 push op
 	0012f5c0 mov ax,0x2b9817
 	0012f5cc farpush ax
 	0012f5d4 mov ax,0x138
 	0012f5e0 farpush ax
 	0012f5e8 mov ax,0x92
 	0012f5f4 farpush ax
 	0012f5fc mov ax,0x0
 	0012f608 farpush ax
 	0012f610 mov mar,0x3cef20
 	0012f61c mov ax,mar
 	0012f628 mov op,ax
 	0012f630 setfuncargs 0x4
 	0012f638 mov ax,0x6aef20
 	0012f644 farcall ax
 	0012f64c farsubsp 0x4
 	0012f654 pop op
 	0012f65c sourceline 0xac4
 	0012f664 jmp 0x0012f890
		0012f890: UNCONDITIONAL_JUMP

	[0012f66c]
		0012f498: CONDITIONAL_JUMP
 	0012f66c sourceline 0xac6
 	0012f674 mov mar,0x3cef20
 	0012f680 mov ax,mar
 	0012f68c push op
 	0012f694 mov op,ax
 	0012f69c setfuncargs 0x0
 	0012f6a4 mov ax,0x89ef20
 	0012f6b0 farcall ax
 	0012f6b8 pop op
 	0012f6c0 push ax
 	0012f6c8 mov mar,0x8bef20
 	0012f6d4 mov ax,mar
 	0012f6e0 pop bx
 	0012f6e8 cmpeq bx,ax
 	0012f6f4 mov ax,bx
 	0012f700 jz 0x0012f840
		0012f840: CONDITIONAL_JUMP
		0012f708: FALL_THROUGH

	[0012f708]
		0012f66c: FALL_THROUGH
 	0012f708 sourceline 0xac8
 	0012f710 mov ax,0x1
 	0012f71c mov bx,ax
 	0012f728 mov mar,0x3cef20
 	0012f734 mov ax,mar
 	0012f740 push op
 	0012f748 mov op,ax
 	0012f750 farpush bx
 	0012f758 setfuncargs 0x1
 	0012f760 mov ax,0x69ef20
 	0012f76c farcall ax
 	0012f774 farsubsp 0x1
 	0012f77c pop op
 	0012f784 sourceline 0xac9
 	0012f78c push op
 	0012f794 mov ax,0x2b986f
 	0012f7a0 farpush ax
 	0012f7a8 mov ax,0x138
 	0012f7b4 farpush ax
 	0012f7bc mov ax,0x92
 	0012f7c8 farpush ax
 	0012f7d0 mov ax,0x0
 	0012f7dc farpush ax
 	0012f7e4 mov mar,0x3cef20
 	0012f7f0 mov ax,mar
 	0012f7fc mov op,ax
 	0012f804 setfuncargs 0x4
 	0012f80c mov ax,0x6aef20
 	0012f818 farcall ax
 	0012f820 farsubsp 0x4
 	0012f828 pop op
 	0012f830 sourceline 0xaca
 	0012f838 jmp 0x0012f890
		0012f890: UNCONDITIONAL_JUMP

	[0012f840]
		0012f66c: CONDITIONAL_JUMP
 	0012f840 sourceline 0xacc
 	0012f848 mov ax,0x3
 	0012f854 push ax
 	0012f85c mov ax,0x5
 	0012f868 push ax
 	0012f870 mov ax,0x10ae5c
 	0012f87c call ax
 	0012f884 sub sp,0x8
		0012f890: FALL_THROUGH

	[0012f890]
		0012f488: UNCONDITIONAL_JUMP
		0012f534: UNCONDITIONAL_JUMP
		0012f708: UNCONDITIONAL_JUMP
		0012f840: FALL_THROUGH
 	0012f890 sourceline 0xacd
 	0012f898 mov ax,0x0
 	0012f8a4 ret

iWaxBlock_UseInv$0:
	[0012f8a8]
 	0012f8a8 sourceline 0xad2
 	0012f8b0 thisaddr
 	0012f8b8 sourceline 0xad3
*	0012f8c0 mov mar,0x3cef20
 	0012f8cc mov ax,mar
 	0012f8d8 push op
 	0012f8e0 mov op,ax
 	0012f8e8 setfuncargs 0x0
 	0012f8f0 mov ax,0x89ef20
 	0012f8fc farcall ax
 	0012f904 pop op
 	0012f90c push ax
 	0012f914 mov mar,0x8bef20
 	0012f920 mov ax,mar
 	0012f92c pop bx
 	0012f934 cmpeq bx,ax
 	0012f940 mov ax,bx
 	0012f94c jnz 0x0012fa08
		0012fa08: CONDITIONAL_JUMP
		0012f954: FALL_THROUGH

	[0012f954]
		0012f8a8: FALL_THROUGH
 	0012f954 push ax
 	0012f95c mov mar,0x3cef20
 	0012f968 mov ax,mar
 	0012f974 push op
 	0012f97c mov op,ax
 	0012f984 setfuncargs 0x0
 	0012f98c mov ax,0x89ef20
 	0012f998 farcall ax
 	0012f9a0 pop op
 	0012f9a8 push ax
 	0012f9b0 mov mar,0x8b6f20
 	0012f9bc mov ax,mar
 	0012f9c8 pop bx
 	0012f9d0 cmpeq bx,ax
 	0012f9dc mov ax,bx
 	0012f9e8 pop bx
 	0012f9f0 lor bx,ax
 	0012f9fc mov ax,bx
		0012fa08: FALL_THROUGH

	[0012fa08]
		0012f8a8: CONDITIONAL_JUMP
		0012f954: FALL_THROUGH
 	0012fa08 jz 0x0012fb48
		0012fb48: CONDITIONAL_JUMP
		0012fa10: FALL_THROUGH

	[0012fa10]
		0012fa08: FALL_THROUGH
 	0012fa10 sourceline 0xad5
 	0012fa18 mov ax,0x1
 	0012fa24 mov bx,ax
 	0012fa30 mov mar,0x3cef20
 	0012fa3c mov ax,mar
 	0012fa48 push op
 	0012fa50 mov op,ax
 	0012fa58 farpush bx
 	0012fa60 setfuncargs 0x1
 	0012fa68 mov ax,0x69ef20
 	0012fa74 farcall ax
 	0012fa7c farsubsp 0x1
 	0012fa84 pop op
 	0012fa8c sourceline 0xad6
 	0012fa94 push op
 	0012fa9c mov ax,0x2ba161
 	0012faa8 farpush ax
 	0012fab0 mov ax,0x138
 	0012fabc farpush ax
 	0012fac4 mov ax,0x92
 	0012fad0 farpush ax
 	0012fad8 mov ax,0x0
 	0012fae4 farpush ax
 	0012faec mov mar,0x3cef20
 	0012faf8 mov ax,mar
 	0012fb04 mov op,ax
 	0012fb0c setfuncargs 0x4
 	0012fb14 mov ax,0x6aef20
 	0012fb20 farcall ax
 	0012fb28 farsubsp 0x4
 	0012fb30 pop op
 	0012fb38 sourceline 0xad7
 	0012fb40 jmp 0x0012fd6c
		0012fd6c: UNCONDITIONAL_JUMP

	[0012fb48]
		0012fa08: CONDITIONAL_JUMP
 	0012fb48 sourceline 0xad9
 	0012fb50 mov mar,0x3cef20
 	0012fb5c mov ax,mar
 	0012fb68 push op
 	0012fb70 mov op,ax
 	0012fb78 setfuncargs 0x0
 	0012fb80 mov ax,0x89ef20
 	0012fb8c farcall ax
 	0012fb94 pop op
 	0012fb9c push ax
 	0012fba4 mov mar,0x9def20
 	0012fbb0 mov ax,mar
 	0012fbbc pop bx
 	0012fbc4 cmpeq bx,ax
 	0012fbd0 mov ax,bx
 	0012fbdc jz 0x0012fd1c
		0012fd1c: CONDITIONAL_JUMP
		0012fbe4: FALL_THROUGH

	[0012fbe4]
		0012fb48: FALL_THROUGH
 	0012fbe4 sourceline 0xadb
 	0012fbec mov ax,0x1
 	0012fbf8 mov bx,ax
 	0012fc04 mov mar,0x3cef20
 	0012fc10 mov ax,mar
 	0012fc1c push op
 	0012fc24 mov op,ax
 	0012fc2c farpush bx
 	0012fc34 setfuncargs 0x1
 	0012fc3c mov ax,0x69ef20
 	0012fc48 farcall ax
 	0012fc50 farsubsp 0x1
 	0012fc58 pop op
 	0012fc60 sourceline 0xadc
 	0012fc68 push op
 	0012fc70 mov ax,0x2b9cb4
 	0012fc7c farpush ax
 	0012fc84 mov ax,0x138
 	0012fc90 farpush ax
 	0012fc98 mov ax,0x92
 	0012fca4 farpush ax
 	0012fcac mov ax,0x0
 	0012fcb8 farpush ax
 	0012fcc0 mov mar,0x3cef20
 	0012fccc mov ax,mar
 	0012fcd8 mov op,ax
 	0012fce0 setfuncargs 0x4
 	0012fce8 mov ax,0x6aef20
 	0012fcf4 farcall ax
 	0012fcfc farsubsp 0x4
 	0012fd04 pop op
 	0012fd0c sourceline 0xadd
 	0012fd14 jmp 0x0012fd6c
		0012fd6c: UNCONDITIONAL_JUMP

	[0012fd1c]
		0012fb48: CONDITIONAL_JUMP
 	0012fd1c sourceline 0xadf
 	0012fd24 mov ax,0x3
 	0012fd30 push ax
 	0012fd38 mov ax,0x5
 	0012fd44 push ax
 	0012fd4c mov ax,0x10ae5c
 	0012fd58 call ax
 	0012fd60 sub sp,0x8
		0012fd6c: FALL_THROUGH

	[0012fd6c]
		0012fa10: UNCONDITIONAL_JUMP
		0012fbe4: UNCONDITIONAL_JUMP
		0012fd1c: FALL_THROUGH
 	0012fd6c sourceline 0xae0
 	0012fd74 mov ax,0x0
 	0012fd80 ret

iSumerianSymbol2_UseInv$0:
	[0012fdfc]
 	0012fdfc sourceline 0xaed
 	0012fe04 thisaddr
 	0012fe0c sourceline 0xaee
*	0012fe14 mov mar,0x3cef20
 	0012fe20 mov ax,mar
 	0012fe2c push op
 	0012fe34 mov op,ax
 	0012fe3c setfuncargs 0x0
 	0012fe44 mov ax,0x89ef20
 	0012fe50 farcall ax
 	0012fe58 pop op
 	0012fe60 push ax
 	0012fe68 mov mar,0x93ef20
 	0012fe74 mov ax,mar
 	0012fe80 pop bx
 	0012fe88 cmpeq bx,ax
 	0012fe94 mov ax,bx
 	0012fea0 jz 0x0012ffe0
		0012ffe0: CONDITIONAL_JUMP
		0012fea8: FALL_THROUGH

	[0012fea8]
		0012fdfc: FALL_THROUGH
 	0012fea8 sourceline 0xaf0
 	0012feb0 mov ax,0x1
 	0012febc mov bx,ax
 	0012fec8 mov mar,0x3cef20
 	0012fed4 mov ax,mar
 	0012fee0 push op
 	0012fee8 mov op,ax
 	0012fef0 farpush bx
 	0012fef8 setfuncargs 0x1
 	0012ff00 mov ax,0x69ef20
 	0012ff0c farcall ax
 	0012ff14 farsubsp 0x1
 	0012ff1c pop op
 	0012ff24 sourceline 0xaf1
 	0012ff2c push op
 	0012ff34 mov ax,0x2b9ee0
 	0012ff40 farpush ax
 	0012ff48 mov ax,0x138
 	0012ff54 farpush ax
 	0012ff5c mov ax,0x92
 	0012ff68 farpush ax
 	0012ff70 mov ax,0x0
 	0012ff7c farpush ax
 	0012ff84 mov mar,0x3cef20
 	0012ff90 mov ax,mar
 	0012ff9c mov op,ax
 	0012ffa4 setfuncargs 0x4
 	0012ffac mov ax,0x6aef20
 	0012ffb8 farcall ax
 	0012ffc0 farsubsp 0x4
 	0012ffc8 pop op
 	0012ffd0 sourceline 0xaf2
 	0012ffd8 jmp 0x00130e74
		00130e74: UNCONDITIONAL_JUMP

	[0012ffe0]
		0012fdfc: CONDITIONAL_JUMP
 	0012ffe0 sourceline 0xaf4
 	0012ffe8 mov mar,0x3cef20
 	0012fff4 mov ax,mar
 	00130000 push op
 	00130008 mov op,ax
 	00130010 setfuncargs 0x0
 	00130018 mov ax,0x89ef20
 	00130024 farcall ax
 	0013002c pop op
 	00130034 push ax
 	0013003c mov mar,0x956f20
 	00130048 mov ax,mar
 	00130054 pop bx
 	0013005c cmpeq bx,ax
 	00130068 mov ax,bx
 	00130074 jnz 0x00130130
		00130130: CONDITIONAL_JUMP
		0013007c: FALL_THROUGH

	[0013007c]
		0012ffe0: FALL_THROUGH
 	0013007c push ax
 	00130084 mov mar,0x3cef20
 	00130090 mov ax,mar
 	0013009c push op
 	001300a4 mov op,ax
 	001300ac setfuncargs 0x0
 	001300b4 mov ax,0x89ef20
 	001300c0 farcall ax
 	001300c8 pop op
 	001300d0 push ax
 	001300d8 mov mar,0x95ef20
 	001300e4 mov ax,mar
 	001300f0 pop bx
 	001300f8 cmpeq bx,ax
 	00130104 mov ax,bx
 	00130110 pop bx
 	00130118 lor bx,ax
 	00130124 mov ax,bx
		00130130: FALL_THROUGH

	[00130130]
		0012ffe0: CONDITIONAL_JUMP
		0013007c: FALL_THROUGH
 	00130130 jz 0x00130270
		00130270: CONDITIONAL_JUMP
		00130138: FALL_THROUGH

	[00130138]
		00130130: FALL_THROUGH
 	00130138 sourceline 0xaf6
 	00130140 mov ax,0x1
 	0013014c mov bx,ax
 	00130158 mov mar,0x3cef20
 	00130164 mov ax,mar
 	00130170 push op
 	00130178 mov op,ax
 	00130180 farpush bx
 	00130188 setfuncargs 0x1
 	00130190 mov ax,0x69ef20
 	0013019c farcall ax
 	001301a4 farsubsp 0x1
 	001301ac pop op
 	001301b4 sourceline 0xaf7
 	001301bc push op
 	001301c4 mov ax,0x2ba2e8
 	001301d0 farpush ax
 	001301d8 mov ax,0x138
 	001301e4 farpush ax
 	001301ec mov ax,0x92
 	001301f8 farpush ax
 	00130200 mov ax,0x0
 	0013020c farpush ax
 	00130214 mov mar,0x3cef20
 	00130220 mov ax,mar
 	0013022c mov op,ax
 	00130234 setfuncargs 0x4
 	0013023c mov ax,0x6aef20
 	00130248 farcall ax
 	00130250 farsubsp 0x4
 	00130258 pop op
 	00130260 sourceline 0xaf8
 	00130268 jmp 0x00130e74
		00130e74: UNCONDITIONAL_JUMP

	[00130270]
		00130130: CONDITIONAL_JUMP
 	00130270 sourceline 0xafa
 	00130278 mov mar,0x3cef20
 	00130284 mov ax,mar
 	00130290 push op
 	00130298 mov op,ax
 	001302a0 setfuncargs 0x0
 	001302a8 mov ax,0x89ef20
 	001302b4 farcall ax
 	001302bc pop op
 	001302c4 push ax
 	001302cc mov mar,0x916f20
 	001302d8 mov ax,mar
 	001302e4 pop bx
 	001302ec cmpeq bx,ax
 	001302f8 mov ax,bx
 	00130304 jz 0x00130444
		00130444: CONDITIONAL_JUMP
		0013030c: FALL_THROUGH

	[0013030c]
		00130270: FALL_THROUGH
 	0013030c sourceline 0xafc
 	00130314 mov ax,0x1
 	00130320 mov bx,ax
 	0013032c mov mar,0x3cef20
 	00130338 mov ax,mar
 	00130344 push op
 	0013034c mov op,ax
 	00130354 farpush bx
 	0013035c setfuncargs 0x1
 	00130364 mov ax,0x69ef20
 	00130370 farcall ax
 	00130378 farsubsp 0x1
 	00130380 pop op
 	00130388 sourceline 0xafd
 	00130390 push op
 	00130398 mov ax,0x2ba063
 	001303a4 farpush ax
 	001303ac mov ax,0x138
 	001303b8 farpush ax
 	001303c0 mov ax,0x92
 	001303cc farpush ax
 	001303d4 mov ax,0x0
 	001303e0 farpush ax
 	001303e8 mov mar,0x3cef20
 	001303f4 mov ax,mar
 	00130400 mov op,ax
 	00130408 setfuncargs 0x4
 	00130410 mov ax,0x6aef20
 	0013041c farcall ax
 	00130424 farsubsp 0x4
 	0013042c pop op
 	00130434 sourceline 0xafe
 	0013043c jmp 0x00130e74
		00130e74: UNCONDITIONAL_JUMP

	[00130444]
		00130270: CONDITIONAL_JUMP
 	00130444 sourceline 0xb00
 	0013044c mov mar,0x3cef20
 	00130458 mov ax,mar
 	00130464 push op
 	0013046c mov op,ax
 	00130474 setfuncargs 0x0
 	0013047c mov ax,0x89ef20
 	00130488 farcall ax
 	00130490 pop op
 	00130498 push ax
 	001304a0 mov mar,0x936f20
 	001304ac mov ax,mar
 	001304b8 pop bx
 	001304c0 cmpeq bx,ax
 	001304cc mov ax,bx
 	001304d8 jz 0x00130618
		00130618: CONDITIONAL_JUMP
		001304e0: FALL_THROUGH

	[001304e0]
		00130444: FALL_THROUGH
 	001304e0 sourceline 0xb02
 	001304e8 mov ax,0x1
 	001304f4 mov bx,ax
 	00130500 mov mar,0x3cef20
 	0013050c mov ax,mar
 	00130518 push op
 	00130520 mov op,ax
 	00130528 farpush bx
 	00130530 setfuncargs 0x1
 	00130538 mov ax,0x69ef20
 	00130544 farcall ax
 	0013054c farsubsp 0x1
 	00130554 pop op
 	0013055c sourceline 0xb03
 	00130564 push op
 	0013056c mov ax,0x2b99d6
 	00130578 farpush ax
 	00130580 mov ax,0x138
 	0013058c farpush ax
 	00130594 mov ax,0x92
 	001305a0 farpush ax
 	001305a8 mov ax,0x0
 	001305b4 farpush ax
 	001305bc mov mar,0x3cef20
 	001305c8 mov ax,mar
 	001305d4 mov op,ax
 	001305dc setfuncargs 0x4
 	001305e4 mov ax,0x6aef20
 	001305f0 farcall ax
 	001305f8 farsubsp 0x4
 	00130600 pop op
 	00130608 sourceline 0xb04
 	00130610 jmp 0x00130e74
		00130e74: UNCONDITIONAL_JUMP

	[00130618]
		00130444: CONDITIONAL_JUMP
 	00130618 sourceline 0xb06
 	00130620 mov mar,0x3cef20
 	0013062c mov ax,mar
 	00130638 push op
 	00130640 mov op,ax
 	00130648 setfuncargs 0x0
 	00130650 mov ax,0x89ef20
 	0013065c farcall ax
 	00130664 pop op
 	0013066c push ax
 	00130674 mov mar,0x8f6f20
 	00130680 mov ax,mar
 	0013068c pop bx
 	00130694 cmpeq bx,ax
 	001306a0 mov ax,bx
 	001306ac jz 0x001307ec
		001307ec: CONDITIONAL_JUMP
		001306b4: FALL_THROUGH

	[001306b4]
		00130618: FALL_THROUGH
 	001306b4 sourceline 0xb08
 	001306bc mov ax,0x1
 	001306c8 mov bx,ax
 	001306d4 mov mar,0x3cef20
 	001306e0 mov ax,mar
 	001306ec push op
 	001306f4 mov op,ax
 	001306fc farpush bx
 	00130704 setfuncargs 0x1
 	0013070c mov ax,0x69ef20
 	00130718 farcall ax
 	00130720 farsubsp 0x1
 	00130728 pop op
 	00130730 sourceline 0xb09
 	00130738 push op
 	00130740 mov ax,0x2b9a2e
 	0013074c farpush ax
 	00130754 mov ax,0x138
 	00130760 farpush ax
 	00130768 mov ax,0x92
 	00130774 farpush ax
 	0013077c mov ax,0x0
 	00130788 farpush ax
 	00130790 mov mar,0x3cef20
 	0013079c mov ax,mar
 	001307a8 mov op,ax
 	001307b0 setfuncargs 0x4
 	001307b8 mov ax,0x6aef20
 	001307c4 farcall ax
 	001307cc farsubsp 0x4
 	001307d4 pop op
 	001307dc sourceline 0xb0a
 	001307e4 jmp 0x00130e74
		00130e74: UNCONDITIONAL_JUMP

	[001307ec]
		00130618: CONDITIONAL_JUMP
 	001307ec sourceline 0xb0c
 	001307f4 mov mar,0x3cef20
 	00130800 mov ax,mar
 	0013080c push op
 	00130814 mov op,ax
 	0013081c setfuncargs 0x0
 	00130824 mov ax,0x89ef20
 	00130830 farcall ax
 	00130838 pop op
 	00130840 push ax
 	00130848 mov mar,0x886f20
 	00130854 mov ax,mar
 	00130860 pop bx
 	00130868 cmpeq bx,ax
 	00130874 mov ax,bx
 	00130880 jz 0x001309c0
		001309c0: CONDITIONAL_JUMP
		00130888: FALL_THROUGH

	[00130888]
		001307ec: FALL_THROUGH
 	00130888 sourceline 0xb0e
 	00130890 mov ax,0x1
 	0013089c mov bx,ax
 	001308a8 mov mar,0x3cef20
 	001308b4 mov ax,mar
 	001308c0 push op
 	001308c8 mov op,ax
 	001308d0 farpush bx
 	001308d8 setfuncargs 0x1
 	001308e0 mov ax,0x69ef20
 	001308ec farcall ax
 	001308f4 farsubsp 0x1
 	001308fc pop op
 	00130904 sourceline 0xb0f
 	0013090c push op
 	00130914 mov ax,0x2b9adb
 	00130920 farpush ax
 	00130928 mov ax,0x138
 	00130934 farpush ax
 	0013093c mov ax,0x92
 	00130948 farpush ax
 	00130950 mov ax,0x0
 	0013095c farpush ax
 	00130964 mov mar,0x3cef20
 	00130970 mov ax,mar
 	0013097c mov op,ax
 	00130984 setfuncargs 0x4
 	0013098c mov ax,0x6aef20
 	00130998 farcall ax
 	001309a0 farsubsp 0x4
 	001309a8 pop op
 	001309b0 sourceline 0xb10
 	001309b8 jmp 0x00130e74
		00130e74: UNCONDITIONAL_JUMP

	[001309c0]
		001307ec: CONDITIONAL_JUMP
 	001309c0 sourceline 0xb12
 	001309c8 mov mar,0x3cef20
 	001309d4 mov ax,mar
 	001309e0 push op
 	001309e8 mov op,ax
 	001309f0 setfuncargs 0x0
 	001309f8 mov ax,0x89ef20
 	00130a04 farcall ax
 	00130a0c pop op
 	00130a14 push ax
 	00130a1c mov mar,0x8b6f20
 	00130a28 mov ax,mar
 	00130a34 pop bx
 	00130a3c cmpeq bx,ax
 	00130a48 mov ax,bx
 	00130a54 jnz 0x00130b10
		00130b10: CONDITIONAL_JUMP
		00130a5c: FALL_THROUGH

	[00130a5c]
		001309c0: FALL_THROUGH
 	00130a5c push ax
 	00130a64 mov mar,0x3cef20
 	00130a70 mov ax,mar
 	00130a7c push op
 	00130a84 mov op,ax
 	00130a8c setfuncargs 0x0
 	00130a94 mov ax,0x89ef20
 	00130aa0 farcall ax
 	00130aa8 pop op
 	00130ab0 push ax
 	00130ab8 mov mar,0x8bef20
 	00130ac4 mov ax,mar
 	00130ad0 pop bx
 	00130ad8 cmpeq bx,ax
 	00130ae4 mov ax,bx
 	00130af0 pop bx
 	00130af8 lor bx,ax
 	00130b04 mov ax,bx
		00130b10: FALL_THROUGH

	[00130b10]
		001309c0: CONDITIONAL_JUMP
		00130a5c: FALL_THROUGH
 	00130b10 jz 0x00130c50
		00130c50: CONDITIONAL_JUMP
		00130b18: FALL_THROUGH

	[00130b18]
		00130b10: FALL_THROUGH
 	00130b18 sourceline 0xb14
 	00130b20 mov ax,0x1
 	00130b2c mov bx,ax
 	00130b38 mov mar,0x3cef20
 	00130b44 mov ax,mar
 	00130b50 push op
 	00130b58 mov op,ax
 	00130b60 farpush bx
 	00130b68 setfuncargs 0x1
 	00130b70 mov ax,0x69ef20
 	00130b7c farcall ax
 	00130b84 farsubsp 0x1
 	00130b8c pop op
 	00130b94 sourceline 0xb15
 	00130b9c push op
 	00130ba4 mov ax,0x2ba036
 	00130bb0 farpush ax
 	00130bb8 mov ax,0x138
 	00130bc4 farpush ax
 	00130bcc mov ax,0x92
 	00130bd8 farpush ax
 	00130be0 mov ax,0x0
 	00130bec farpush ax
 	00130bf4 mov mar,0x3cef20
 	00130c00 mov ax,mar
 	00130c0c mov op,ax
 	00130c14 setfuncargs 0x4
 	00130c1c mov ax,0x6aef20
 	00130c28 farcall ax
 	00130c30 farsubsp 0x4
 	00130c38 pop op
 	00130c40 sourceline 0xb16
 	00130c48 jmp 0x00130e74
		00130e74: UNCONDITIONAL_JUMP

	[00130c50]
		00130b10: CONDITIONAL_JUMP
 	00130c50 sourceline 0xb18
 	00130c58 mov mar,0x3cef20
 	00130c64 mov ax,mar
 	00130c70 push op
 	00130c78 mov op,ax
 	00130c80 setfuncargs 0x0
 	00130c88 mov ax,0x89ef20
 	00130c94 farcall ax
 	00130c9c pop op
 	00130ca4 push ax
 	00130cac mov mar,0x94ef20
 	00130cb8 mov ax,mar
 	00130cc4 pop bx
 	00130ccc cmpeq bx,ax
 	00130cd8 mov ax,bx
 	00130ce4 jz 0x00130e24
		00130e24: CONDITIONAL_JUMP
		00130cec: FALL_THROUGH

	[00130cec]
		00130c50: FALL_THROUGH
 	00130cec sourceline 0xb1a
 	00130cf4 mov ax,0x1
 	00130d00 mov bx,ax
 	00130d0c mov mar,0x3cef20
 	00130d18 mov ax,mar
 	00130d24 push op
 	00130d2c mov op,ax
 	00130d34 farpush bx
 	00130d3c setfuncargs 0x1
 	00130d44 mov ax,0x69ef20
 	00130d50 farcall ax
 	00130d58 farsubsp 0x1
 	00130d60 pop op
 	00130d68 sourceline 0xb1b
 	00130d70 push op
 	00130d78 mov ax,0x2b9b31
 	00130d84 farpush ax
 	00130d8c mov ax,0x138
 	00130d98 farpush ax
 	00130da0 mov ax,0x92
 	00130dac farpush ax
 	00130db4 mov ax,0x0
 	00130dc0 farpush ax
 	00130dc8 mov mar,0x3cef20
 	00130dd4 mov ax,mar
 	00130de0 mov op,ax
 	00130de8 setfuncargs 0x4
 	00130df0 mov ax,0x6aef20
 	00130dfc farcall ax
 	00130e04 farsubsp 0x4
 	00130e0c pop op
 	00130e14 sourceline 0xb1c
 	00130e1c jmp 0x00130e74
		00130e74: UNCONDITIONAL_JUMP

	[00130e24]
		00130c50: CONDITIONAL_JUMP
 	00130e24 sourceline 0xb1e
 	00130e2c mov ax,0x3
 	00130e38 push ax
 	00130e40 mov ax,0x5
 	00130e4c push ax
 	00130e54 mov ax,0x10ae5c
 	00130e60 call ax
 	00130e68 sub sp,0x8
		00130e74: FALL_THROUGH

	[00130e74]
		0012fea8: UNCONDITIONAL_JUMP
		00130138: UNCONDITIONAL_JUMP
		0013030c: UNCONDITIONAL_JUMP
		001304e0: UNCONDITIONAL_JUMP
		001306b4: UNCONDITIONAL_JUMP
		00130888: UNCONDITIONAL_JUMP
		00130b18: UNCONDITIONAL_JUMP
		00130cec: UNCONDITIONAL_JUMP
		00130e24: FALL_THROUGH
 	00130e74 sourceline 0xb1f
 	00130e7c mov ax,0x0
 	00130e88 ret

iWoodenBoard_UseInv$0:
	[00130e8c]
 	00130e8c sourceline 0xb26
 	00130e94 thisaddr
 	00130e9c sourceline 0xb27
*	00130ea4 mov mar,0x3cef20
 	00130eb0 mov ax,mar
 	00130ebc push op
 	00130ec4 mov op,ax
 	00130ecc setfuncargs 0x0
 	00130ed4 mov ax,0x89ef20
 	00130ee0 farcall ax
 	00130ee8 pop op
 	00130ef0 push ax
 	00130ef8 mov mar,0x9fef20
 	00130f04 mov ax,mar
 	00130f10 pop bx
 	00130f18 cmpeq bx,ax
 	00130f24 mov ax,bx
 	00130f30 jz 0x00131654
		00131654: CONDITIONAL_JUMP
		00130f38: FALL_THROUGH

	[00130f38]
		00130e8c: FALL_THROUGH
 	00130f38 sourceline 0xb29
 	00130f40 mov mar,0x3cef20
 	00130f4c mov ax,mar
 	00130f58 push op
 	00130f60 mov op,ax
 	00130f68 setfuncargs 0x0
 	00130f70 mov ax,0x3d6f20
 	00130f7c farcall ax
 	00130f84 pop op
 	00130f8c push ax
 	00130f94 mov ax,0x11
 	00130fa0 pop bx
 	00130fa8 cmpneq bx,ax
 	00130fb4 mov ax,bx
 	00130fc0 jz 0x00131070
		00131070: CONDITIONAL_JUMP
		00130fc8: FALL_THROUGH

	[00130fc8]
		00130f38: FALL_THROUGH
 	00130fc8 push ax
 	00130fd0 mov mar,0x3cef20
 	00130fdc mov ax,mar
 	00130fe8 push op
 	00130ff0 mov op,ax
 	00130ff8 setfuncargs 0x0
 	00131000 mov ax,0x3d6f20
 	0013100c farcall ax
 	00131014 pop op
 	0013101c push ax
 	00131024 mov ax,0x12
 	00131030 pop bx
 	00131038 cmpneq bx,ax
 	00131044 mov ax,bx
 	00131050 pop bx
 	00131058 land bx,ax
 	00131064 mov ax,bx
		00131070: FALL_THROUGH

	[00131070]
		00130f38: CONDITIONAL_JUMP
		00130fc8: FALL_THROUGH
 	00131070 jz 0x001311b0
		001311b0: CONDITIONAL_JUMP
		00131078: FALL_THROUGH

	[00131078]
		00131070: FALL_THROUGH
 	00131078 sourceline 0xb2b
 	00131080 mov ax,0x1
 	0013108c mov bx,ax
 	00131098 mov mar,0x3cef20
 	001310a4 mov ax,mar
 	001310b0 push op
 	001310b8 mov op,ax
 	001310c0 farpush bx
 	001310c8 setfuncargs 0x1
 	001310d0 mov ax,0x69ef20
 	001310dc farcall ax
 	001310e4 farsubsp 0x1
 	001310ec pop op
 	001310f4 sourceline 0xb2c
 	001310fc push op
 	00131104 mov ax,0x2b9b71
 	00131110 farpush ax
 	00131118 mov ax,0x138
 	00131124 farpush ax
 	0013112c mov ax,0x92
 	00131138 farpush ax
 	00131140 mov ax,0x0
 	0013114c farpush ax
 	00131154 mov mar,0x3cef20
 	00131160 mov ax,mar
 	0013116c mov op,ax
 	00131174 setfuncargs 0x4
 	0013117c mov ax,0x6aef20
 	00131188 farcall ax
 	00131190 farsubsp 0x4
 	00131198 pop op
 	001311a0 sourceline 0xb2d
 	001311a8 jmp 0x00131644
		00131644: UNCONDITIONAL_JUMP

	[001311b0]
		00131070: CONDITIONAL_JUMP
 	001311b0 sourceline 0xb2e
 	001311b8 mov mar,0x3cef20
 	001311c4 mov ax,mar
 	001311d0 push op
 	001311d8 mov op,ax
 	001311e0 setfuncargs 0x0
 	001311e8 mov ax,0x3d6f20
 	001311f4 farcall ax
 	001311fc pop op
 	00131204 push ax
 	0013120c mov ax,0x12
 	00131218 pop bx
 	00131220 cmpeq bx,ax
 	0013122c mov ax,bx
 	00131238 jz 0x00131378
		00131378: CONDITIONAL_JUMP
		00131240: FALL_THROUGH

	[00131240]
		001311b0: FALL_THROUGH
 	00131240 sourceline 0xb30
 	00131248 mov ax,0x1
 	00131254 mov bx,ax
 	00131260 mov mar,0x3cef20
 	0013126c mov ax,mar
 	00131278 push op
 	00131280 mov op,ax
 	00131288 farpush bx
 	00131290 setfuncargs 0x1
 	00131298 mov ax,0x69ef20
 	001312a4 farcall ax
 	001312ac farsubsp 0x1
 	001312b4 pop op
 	001312bc sourceline 0xb31
 	001312c4 push op
 	001312cc mov ax,0x2b9ba3
 	001312d8 farpush ax
 	001312e0 mov ax,0x138
 	001312ec farpush ax
 	001312f4 mov ax,0x92
 	00131300 farpush ax
 	00131308 mov ax,0x0
 	00131314 farpush ax
 	0013131c mov mar,0x3cef20
 	00131328 mov ax,mar
 	00131334 mov op,ax
 	0013133c setfuncargs 0x4
 	00131344 mov ax,0x6aef20
 	00131350 farcall ax
 	00131358 farsubsp 0x4
 	00131360 pop op
 	00131368 sourceline 0xb32
 	00131370 jmp 0x00131644
		00131644: UNCONDITIONAL_JUMP

	[00131378]
		001311b0: CONDITIONAL_JUMP
 	00131378 sourceline 0xb33
 	00131380 mov mar,0x3cef20
 	0013138c mov ax,mar
 	00131398 push op
 	001313a0 mov op,ax
 	001313a8 setfuncargs 0x0
 	001313b0 mov ax,0x3d6f20
 	001313bc farcall ax
 	001313c4 pop op
 	001313cc push ax
 	001313d4 mov ax,0x11
 	001313e0 pop bx
 	001313e8 cmpeq bx,ax
 	001313f4 mov ax,bx
 	00131400 jz 0x00131644
		00131644: CONDITIONAL_JUMP
		00131408: FALL_THROUGH

	[00131408]
		00131378: FALL_THROUGH
 	00131408 sourceline 0xb35
 	00131410 push op
 	00131418 mov mar,0xa06f20
 	00131424 mov ax,mar
 	00131430 farpush ax
 	00131438 mov mar,0x3cef20
 	00131444 mov ax,mar
 	00131450 mov op,ax
 	00131458 setfuncargs 0x1
 	00131460 mov ax,0x7d6f20
 	0013146c farcall ax
 	00131474 farsubsp 0x1
 	0013147c pop op
 	00131484 sourceline 0xb36
 	0013148c push op
 	00131494 mov mar,0x9fef20
 	001314a0 mov ax,mar
 	001314ac farpush ax
 	001314b4 mov mar,0x3cef20
 	001314c0 mov ax,mar
 	001314cc mov op,ax
 	001314d4 setfuncargs 0x1
 	001314dc mov ax,0x7d6f20
 	001314e8 farcall ax
 	001314f0 farsubsp 0x1
 	001314f8 pop op
 	00131500 sourceline 0xb37
 	00131508 mov ax,0x0
 	00131514 mov bx,ax
 	00131520 mov mar,0x30ef20
 	0013152c mov ax,mar
 	00131538 push op
 	00131540 mov op,ax
 	00131548 farpush bx
 	00131550 setfuncargs 0x1
 	00131558 mov ax,0x3a6f20
 	00131564 farcall ax
 	0013156c farsubsp 0x1
 	00131574 pop op
 	0013157c sourceline 0xb38
 	00131584 mov ax,0x0
 	00131590 mov bx,ax
 	0013159c mov mar,0x3cef20
 	001315a8 mov ax,mar
 	001315b4 push op
 	001315bc mov op,ax
 	001315c4 farpush bx
 	001315cc setfuncargs 0x1
 	001315d4 mov ax,0x436f20
 	001315e0 farcall ax
 	001315e8 farsubsp 0x1
 	001315f0 pop op
 	001315f8 sourceline 0xb39
 	00131600 setfuncargs 0x0
 	00131608 mov ax,0x75ef20
 	00131614 farcall ax
 	0013161c sourceline 0xb3a
 	00131624 mov ax,0x1
 	00131630 mov mar,0xa1ef20
 	0013163c memwrite4 ax
		00131644: FALL_THROUGH

	[00131644]
		00131078: UNCONDITIONAL_JUMP
		00131240: UNCONDITIONAL_JUMP
		00131378: CONDITIONAL_JUMP
		00131408: FALL_THROUGH
 	00131644 sourceline 0xb3c
 	0013164c jmp 0x00131878
		00131878: UNCONDITIONAL_JUMP

	[00131654]
		00130e8c: CONDITIONAL_JUMP
 	00131654 sourceline 0xb3e
 	0013165c mov mar,0x3cef20
 	00131668 mov ax,mar
 	00131674 push op
 	0013167c mov op,ax
 	00131684 setfuncargs 0x0
 	0013168c mov ax,0x89ef20
 	00131698 farcall ax
 	001316a0 pop op
 	001316a8 push ax
 	001316b0 mov mar,0x8bef20
 	001316bc mov ax,mar
 	001316c8 pop bx
 	001316d0 cmpeq bx,ax
 	001316dc mov ax,bx
 	001316e8 jz 0x00131828
		00131828: CONDITIONAL_JUMP
		001316f0: FALL_THROUGH

	[001316f0]
		00131654: FALL_THROUGH
 	001316f0 sourceline 0xb40
 	001316f8 mov ax,0x1
 	00131704 mov bx,ax
 	00131710 mov mar,0x3cef20
 	0013171c mov ax,mar
 	00131728 push op
 	00131730 mov op,ax
 	00131738 farpush bx
 	00131740 setfuncargs 0x1
 	00131748 mov ax,0x69ef20
 	00131754 farcall ax
 	0013175c farsubsp 0x1
 	00131764 pop op
 	0013176c sourceline 0xb41
 	00131774 push op
 	0013177c mov ax,0x2b9bcf
 	00131788 farpush ax
 	00131790 mov ax,0x138
 	0013179c farpush ax
 	001317a4 mov ax,0x92
 	001317b0 farpush ax
 	001317b8 mov ax,0x0
 	001317c4 farpush ax
 	001317cc mov mar,0x3cef20
 	001317d8 mov ax,mar
 	001317e4 mov op,ax
 	001317ec setfuncargs 0x4
 	001317f4 mov ax,0x6aef20
 	00131800 farcall ax
 	00131808 farsubsp 0x4
 	00131810 pop op
 	00131818 sourceline 0xb42
 	00131820 jmp 0x00131878
		00131878: UNCONDITIONAL_JUMP

	[00131828]
		00131654: CONDITIONAL_JUMP
 	00131828 sourceline 0xb44
 	00131830 mov ax,0x3
 	0013183c push ax
 	00131844 mov ax,0x5
 	00131850 push ax
 	00131858 mov ax,0x10ae5c
 	00131864 call ax
 	0013186c sub sp,0x8
		00131878: FALL_THROUGH

	[00131878]
		00131644: UNCONDITIONAL_JUMP
		001316f0: UNCONDITIONAL_JUMP
		00131828: FALL_THROUGH
 	00131878 sourceline 0xb45
 	00131880 mov ax,0x0
 	0013188c ret

iSoftWax_UseInv$0:
	[00131890]
 	00131890 sourceline 0xb4a
 	00131898 thisaddr
 	001318a0 sourceline 0xb4b
*	001318a8 mov mar,0x3cef20
 	001318b4 mov ax,mar
 	001318c0 push op
 	001318c8 mov op,ax
 	001318d0 setfuncargs 0x0
 	001318d8 mov ax,0x89ef20
 	001318e4 farcall ax
 	001318ec pop op
 	001318f4 push ax
 	001318fc mov mar,0x9def20
 	00131908 mov ax,mar
 	00131914 pop bx
 	0013191c cmpeq bx,ax
 	00131928 mov ax,bx
 	00131934 jz 0x00131bfc
		00131bfc: CONDITIONAL_JUMP
		0013193c: FALL_THROUGH

	[0013193c]
		00131890: FALL_THROUGH
 	0013193c sourceline 0xb4d
 	00131944 push op
 	0013194c mov mar,0x9def20
 	00131958 mov ax,mar
 	00131964 farpush ax
 	0013196c mov mar,0x3cef20
 	00131978 mov ax,mar
 	00131984 mov op,ax
 	0013198c setfuncargs 0x1
 	00131994 mov ax,0x7d6f20
 	001319a0 farcall ax
 	001319a8 farsubsp 0x1
 	001319b0 pop op
 	001319b8 sourceline 0xb4e
 	001319c0 push op
 	001319c8 mov mar,0x9b6f20
 	001319d4 mov ax,mar
 	001319e0 farpush ax
 	001319e8 mov mar,0x3cef20
 	001319f4 mov ax,mar
 	00131a00 mov op,ax
 	00131a08 setfuncargs 0x1
 	00131a10 mov ax,0x7d6f20
 	00131a1c farcall ax
 	00131a24 farsubsp 0x1
 	00131a2c pop op
 	00131a34 sourceline 0xb4f
 	00131a3c push op
 	00131a44 mov ax,0x7cfe
 	00131a50 farpush ax
 	00131a58 mov mar,0x9bef20
 	00131a64 mov ax,mar
 	00131a70 farpush ax
 	00131a78 mov mar,0x3cef20
 	00131a84 mov ax,mar
 	00131a90 mov op,ax
 	00131a98 setfuncargs 0x2
 	00131aa0 mov ax,0x7e6f20
 	00131aac farcall ax
 	00131ab4 farsubsp 0x2
 	00131abc pop op
 	00131ac4 sourceline 0xb50
 	00131acc mov ax,0x1
 	00131ad8 mov bx,ax
 	00131ae4 mov mar,0x3cef20
 	00131af0 mov ax,mar
 	00131afc push op
 	00131b04 mov op,ax
 	00131b0c farpush bx
 	00131b14 setfuncargs 0x1
 	00131b1c mov ax,0x69ef20
 	00131b28 farcall ax
 	00131b30 farsubsp 0x1
 	00131b38 pop op
 	00131b40 sourceline 0xb51
 	00131b48 push op
 	00131b50 mov ax,0x2b9c78
 	00131b5c farpush ax
 	00131b64 mov ax,0x138
 	00131b70 farpush ax
 	00131b78 mov ax,0x92
 	00131b84 farpush ax
 	00131b8c mov ax,0x0
 	00131b98 farpush ax
 	00131ba0 mov mar,0x3cef20
 	00131bac mov ax,mar
 	00131bb8 mov op,ax
 	00131bc0 setfuncargs 0x4
 	00131bc8 mov ax,0x6aef20
 	00131bd4 farcall ax
 	00131bdc farsubsp 0x4
 	00131be4 pop op
 	00131bec sourceline 0xb52
 	00131bf4 jmp 0x00131edc
		00131edc: UNCONDITIONAL_JUMP

	[00131bfc]
		00131890: CONDITIONAL_JUMP
 	00131bfc sourceline 0xb54
 	00131c04 mov mar,0x3cef20
 	00131c10 mov ax,mar
 	00131c1c push op
 	00131c24 mov op,ax
 	00131c2c setfuncargs 0x0
 	00131c34 mov ax,0x89ef20
 	00131c40 farcall ax
 	00131c48 pop op
 	00131c50 push ax
 	00131c58 mov mar,0x8bef20
 	00131c64 mov ax,mar
 	00131c70 pop bx
 	00131c78 cmpeq bx,ax
 	00131c84 mov ax,bx
 	00131c90 jnz 0x00131d4c
		00131d4c: CONDITIONAL_JUMP
		00131c98: FALL_THROUGH

	[00131c98]
		00131bfc: FALL_THROUGH
 	00131c98 push ax
 	00131ca0 mov mar,0x3cef20
 	00131cac mov ax,mar
 	00131cb8 push op
 	00131cc0 mov op,ax
 	00131cc8 setfuncargs 0x0
 	00131cd0 mov ax,0x89ef20
 	00131cdc farcall ax
 	00131ce4 pop op
 	00131cec push ax
 	00131cf4 mov mar,0x8b6f20
 	00131d00 mov ax,mar
 	00131d0c pop bx
 	00131d14 cmpeq bx,ax
 	00131d20 mov ax,bx
 	00131d2c pop bx
 	00131d34 lor bx,ax
 	00131d40 mov ax,bx
		00131d4c: FALL_THROUGH

	[00131d4c]
		00131bfc: CONDITIONAL_JUMP
		00131c98: FALL_THROUGH
 	00131d4c jz 0x00131e8c
		00131e8c: CONDITIONAL_JUMP
		00131d54: FALL_THROUGH

	[00131d54]
		00131d4c: FALL_THROUGH
 	00131d54 sourceline 0xb56
 	00131d5c mov ax,0x1
 	00131d68 mov bx,ax
 	00131d74 mov mar,0x3cef20
 	00131d80 mov ax,mar
 	00131d8c push op
 	00131d94 mov op,ax
 	00131d9c farpush bx
 	00131da4 setfuncargs 0x1
 	00131dac mov ax,0x69ef20
 	00131db8 farcall ax
 	00131dc0 farsubsp 0x1
 	00131dc8 pop op
 	00131dd0 sourceline 0xb57
 	00131dd8 push op
 	00131de0 mov ax,0x2ba161
 	00131dec farpush ax
 	00131df4 mov ax,0x138
 	00131e00 farpush ax
 	00131e08 mov ax,0x92
 	00131e14 farpush ax
 	00131e1c mov ax,0x0
 	00131e28 farpush ax
 	00131e30 mov mar,0x3cef20
 	00131e3c mov ax,mar
 	00131e48 mov op,ax
 	00131e50 setfuncargs 0x4
 	00131e58 mov ax,0x6aef20
 	00131e64 farcall ax
 	00131e6c farsubsp 0x4
 	00131e74 pop op
 	00131e7c sourceline 0xb58
 	00131e84 jmp 0x00131edc
		00131edc: UNCONDITIONAL_JUMP

	[00131e8c]
		00131d4c: CONDITIONAL_JUMP
 	00131e8c sourceline 0xb5a
 	00131e94 mov ax,0x3
 	00131ea0 push ax
 	00131ea8 mov ax,0x5
 	00131eb4 push ax
 	00131ebc mov ax,0x10ae5c
 	00131ec8 call ax
 	00131ed0 sub sp,0x8
		00131edc: FALL_THROUGH

	[00131edc]
		0013193c: UNCONDITIONAL_JUMP
		00131d54: UNCONDITIONAL_JUMP
		00131e8c: FALL_THROUGH
 	00131edc sourceline 0xb5b
 	00131ee4 mov ax,0x0
 	00131ef0 ret

iLittleRope_UseInv$0:
	[00131ef4]
 	00131ef4 sourceline 0xb60
 	00131efc thisaddr
 	00131f04 sourceline 0xb61
*	00131f0c mov mar,0x3cef20
 	00131f18 mov ax,mar
 	00131f24 push op
 	00131f2c mov op,ax
 	00131f34 setfuncargs 0x0
 	00131f3c mov ax,0x89ef20
 	00131f48 farcall ax
 	00131f50 pop op
 	00131f58 push ax
 	00131f60 mov mar,0x9b6f20
 	00131f6c mov ax,mar
 	00131f78 pop bx
 	00131f80 cmpeq bx,ax
 	00131f8c mov ax,bx
 	00131f98 jz 0x00132260
		00132260: CONDITIONAL_JUMP
		00131fa0: FALL_THROUGH

	[00131fa0]
		00131ef4: FALL_THROUGH
 	00131fa0 sourceline 0xb63
 	00131fa8 push op
 	00131fb0 mov mar,0x9def20
 	00131fbc mov ax,mar
 	00131fc8 farpush ax
 	00131fd0 mov mar,0x3cef20
 	00131fdc mov ax,mar
 	00131fe8 mov op,ax
 	00131ff0 setfuncargs 0x1
 	00131ff8 mov ax,0x7d6f20
 	00132004 farcall ax
 	0013200c farsubsp 0x1
 	00132014 pop op
 	0013201c sourceline 0xb64
 	00132024 push op
 	0013202c mov mar,0x9b6f20
 	00132038 mov ax,mar
 	00132044 farpush ax
 	0013204c mov mar,0x3cef20
 	00132058 mov ax,mar
 	00132064 mov op,ax
 	0013206c setfuncargs 0x1
 	00132074 mov ax,0x7d6f20
 	00132080 farcall ax
 	00132088 farsubsp 0x1
 	00132090 pop op
 	00132098 sourceline 0xb65
 	001320a0 push op
 	001320a8 mov ax,0x7cfe
 	001320b4 farpush ax
 	001320bc mov mar,0x9bef20
 	001320c8 mov ax,mar
 	001320d4 farpush ax
 	001320dc mov mar,0x3cef20
 	001320e8 mov ax,mar
 	001320f4 mov op,ax
 	001320fc setfuncargs 0x2
 	00132104 mov ax,0x7e6f20
 	00132110 farcall ax
 	00132118 farsubsp 0x2
 	00132120 pop op
 	00132128 sourceline 0xb66
 	00132130 mov ax,0x1
 	0013213c mov bx,ax
 	00132148 mov mar,0x3cef20
 	00132154 mov ax,mar
 	00132160 push op
 	00132168 mov op,ax
 	00132170 farpush bx
 	00132178 setfuncargs 0x1
 	00132180 mov ax,0x69ef20
 	0013218c farcall ax
 	00132194 farsubsp 0x1
 	0013219c pop op
 	001321a4 sourceline 0xb67
 	001321ac push op
 	001321b4 mov ax,0x2b9c78
 	001321c0 farpush ax
 	001321c8 mov ax,0x138
 	001321d4 farpush ax
 	001321dc mov ax,0x92
 	001321e8 farpush ax
 	001321f0 mov ax,0x0
 	001321fc farpush ax
 	00132204 mov mar,0x3cef20
 	00132210 mov ax,mar
 	0013221c mov op,ax
 	00132224 setfuncargs 0x4
 	0013222c mov ax,0x6aef20
 	00132238 farcall ax
 	00132240 farsubsp 0x4
 	00132248 pop op
 	00132250 sourceline 0xb68
 	00132258 jmp 0x0013282c
		0013282c: UNCONDITIONAL_JUMP

	[00132260]
		00131ef4: CONDITIONAL_JUMP
 	00132260 sourceline 0xb6a
 	00132268 mov mar,0x3cef20
 	00132274 mov ax,mar
 	00132280 push op
 	00132288 mov op,ax
 	00132290 setfuncargs 0x0
 	00132298 mov ax,0x89ef20
 	001322a4 farcall ax
 	001322ac pop op
 	001322b4 push ax
 	001322bc mov mar,0x9aef20
 	001322c8 mov ax,mar
 	001322d4 pop bx
 	001322dc cmpeq bx,ax
 	001322e8 mov ax,bx
 	001322f4 jz 0x00132434
		00132434: CONDITIONAL_JUMP
		001322fc: FALL_THROUGH

	[001322fc]
		00132260: FALL_THROUGH
 	001322fc sourceline 0xb6c
 	00132304 mov ax,0x1
 	00132310 mov bx,ax
 	0013231c mov mar,0x3cef20
 	00132328 mov ax,mar
 	00132334 push op
 	0013233c mov op,ax
 	00132344 farpush bx
 	0013234c setfuncargs 0x1
 	00132354 mov ax,0x69ef20
 	00132360 farcall ax
 	00132368 farsubsp 0x1
 	00132370 pop op
 	00132378 sourceline 0xb6d
 	00132380 push op
 	00132388 mov ax,0x2b9cb4
 	00132394 farpush ax
 	0013239c mov ax,0x138
 	001323a8 farpush ax
 	001323b0 mov ax,0x92
 	001323bc farpush ax
 	001323c4 mov ax,0x0
 	001323d0 farpush ax
 	001323d8 mov mar,0x3cef20
 	001323e4 mov ax,mar
 	001323f0 mov op,ax
 	001323f8 setfuncargs 0x4
 	00132400 mov ax,0x6aef20
 	0013240c farcall ax
 	00132414 farsubsp 0x4
 	0013241c pop op
 	00132424 sourceline 0xb6e
 	0013242c jmp 0x0013282c
		0013282c: UNCONDITIONAL_JUMP

	[00132434]
		00132260: CONDITIONAL_JUMP
 	00132434 sourceline 0xb70
 	0013243c mov mar,0x3cef20
 	00132448 mov ax,mar
 	00132454 push op
 	0013245c mov op,ax
 	00132464 setfuncargs 0x0
 	0013246c mov ax,0x89ef20
 	00132478 farcall ax
 	00132480 pop op
 	00132488 push ax
 	00132490 mov mar,0x8b6f20
 	0013249c mov ax,mar
 	001324a8 pop bx
 	001324b0 cmpeq bx,ax
 	001324bc mov ax,bx
 	001324c8 jz 0x00132608
		00132608: CONDITIONAL_JUMP
		001324d0: FALL_THROUGH

	[001324d0]
		00132434: FALL_THROUGH
 	001324d0 sourceline 0xb72
 	001324d8 mov ax,0x1
 	001324e4 mov bx,ax
 	001324f0 mov mar,0x3cef20
 	001324fc mov ax,mar
 	00132508 push op
 	00132510 mov op,ax
 	00132518 farpush bx
 	00132520 setfuncargs 0x1
 	00132528 mov ax,0x69ef20
 	00132534 farcall ax
 	0013253c farsubsp 0x1
 	00132544 pop op
 	0013254c sourceline 0xb73
 	00132554 push op
 	0013255c mov ax,0x2ba036
 	00132568 farpush ax
 	00132570 mov ax,0x138
 	0013257c farpush ax
 	00132584 mov ax,0x92
 	00132590 farpush ax
 	00132598 mov ax,0x0
 	001325a4 farpush ax
 	001325ac mov mar,0x3cef20
 	001325b8 mov ax,mar
 	001325c4 mov op,ax
 	001325cc setfuncargs 0x4
 	001325d4 mov ax,0x6aef20
 	001325e0 farcall ax
 	001325e8 farsubsp 0x4
 	001325f0 pop op
 	001325f8 sourceline 0xb74
 	00132600 jmp 0x0013282c
		0013282c: UNCONDITIONAL_JUMP

	[00132608]
		00132434: CONDITIONAL_JUMP
 	00132608 sourceline 0xb76
 	00132610 mov mar,0x3cef20
 	0013261c mov ax,mar
 	00132628 push op
 	00132630 mov op,ax
 	00132638 setfuncargs 0x0
 	00132640 mov ax,0x89ef20
 	0013264c farcall ax
 	00132654 pop op
 	0013265c push ax
 	00132664 mov mar,0x8bef20
 	00132670 mov ax,mar
 	0013267c pop bx
 	00132684 cmpeq bx,ax
 	00132690 mov ax,bx
 	0013269c jz 0x001327dc
		001327dc: CONDITIONAL_JUMP
		001326a4: FALL_THROUGH

	[001326a4]
		00132608: FALL_THROUGH
 	001326a4 sourceline 0xb78
 	001326ac mov ax,0x1
 	001326b8 mov bx,ax
 	001326c4 mov mar,0x3cef20
 	001326d0 mov ax,mar
 	001326dc push op
 	001326e4 mov op,ax
 	001326ec farpush bx
 	001326f4 setfuncargs 0x1
 	001326fc mov ax,0x69ef20
 	00132708 farcall ax
 	00132710 farsubsp 0x1
 	00132718 pop op
 	00132720 sourceline 0xb79
 	00132728 push op
 	00132730 mov ax,0x2ba161
 	0013273c farpush ax
 	00132744 mov ax,0x138
 	00132750 farpush ax
 	00132758 mov ax,0x92
 	00132764 farpush ax
 	0013276c mov ax,0x0
 	00132778 farpush ax
 	00132780 mov mar,0x3cef20
 	0013278c mov ax,mar
 	00132798 mov op,ax
 	001327a0 setfuncargs 0x4
 	001327a8 mov ax,0x6aef20
 	001327b4 farcall ax
 	001327bc farsubsp 0x4
 	001327c4 pop op
 	001327cc sourceline 0xb7a
 	001327d4 jmp 0x0013282c
		0013282c: UNCONDITIONAL_JUMP

	[001327dc]
		00132608: CONDITIONAL_JUMP
 	001327dc sourceline 0xb7c
 	001327e4 mov ax,0x3
 	001327f0 push ax
 	001327f8 mov ax,0x5
 	00132804 push ax
 	0013280c mov ax,0x10ae5c
 	00132818 call ax
 	00132820 sub sp,0x8
		0013282c: FALL_THROUGH

	[0013282c]
		00131fa0: UNCONDITIONAL_JUMP
		001322fc: UNCONDITIONAL_JUMP
		001324d0: UNCONDITIONAL_JUMP
		001326a4: UNCONDITIONAL_JUMP
		001327dc: FALL_THROUGH
 	0013282c sourceline 0xb7d
 	00132834 mov ax,0x0
 	00132840 ret

iPills_UseInv$0:
	[00132844]
 	00132844 sourceline 0xb83
 	0013284c thisaddr
 	00132854 sourceline 0xb84
 	0013285c mov ax,0x1
 	00132868 mov bx,ax
*	00132874 mov mar,0x3cef20
 	00132880 mov ax,mar
 	0013288c push op
 	00132894 mov op,ax
 	0013289c farpush bx
 	001328a4 setfuncargs 0x1
 	001328ac mov ax,0x69ef20
 	001328b8 farcall ax
 	001328c0 farsubsp 0x1
 	001328c8 pop op
 	001328d0 sourceline 0xb85
 	001328d8 mov mar,0x3cef20
 	001328e4 mov ax,mar
 	001328f0 push op
 	001328f8 mov op,ax
 	00132900 setfuncargs 0x0
 	00132908 mov ax,0x89ef20
 	00132914 farcall ax
 	0013291c pop op
 	00132924 push ax
 	0013292c mov mar,0x8c6f20
 	00132938 mov ax,mar
 	00132944 pop bx
 	0013294c cmpeq bx,ax
 	00132958 mov ax,bx
 	00132964 jz 0x00132eb8
		00132eb8: CONDITIONAL_JUMP
		0013296c: FALL_THROUGH

	[0013296c]
		00132844: FALL_THROUGH
 	0013296c sourceline 0xb87
 	00132974 mov mar,0xa26f20
 	00132980 memread4 ax
 	00132988 lnot ax
 	00132990 jz 0x00132a54
		00132a54: CONDITIONAL_JUMP
		00132998: FALL_THROUGH

	[00132998]
		0013296c: FALL_THROUGH
 	00132998 sourceline 0xb89
 	001329a0 push op
 	001329a8 mov ax,0x2c7d07
 	001329b4 farpush ax
 	001329bc mov ax,0x138
 	001329c8 farpush ax
 	001329d0 mov ax,0x92
 	001329dc farpush ax
 	001329e4 mov ax,0x0
 	001329f0 farpush ax
 	001329f8 mov mar,0x3cef20
 	00132a04 mov ax,mar
 	00132a10 mov op,ax
 	00132a18 setfuncargs 0x4
 	00132a20 mov ax,0x6aef20
 	00132a2c farcall ax
 	00132a34 farsubsp 0x4
 	00132a3c pop op
 	00132a44 sourceline 0xb8a
 	00132a4c jmp 0x00132ea8
		00132ea8: UNCONDITIONAL_JUMP

	[00132a54]
		0013296c: CONDITIONAL_JUMP
 	00132a54 sourceline 0xb8d
 	00132a5c mov mar,sp
 	00132a68 memzero 0x4
 	00132a70 add sp,0x4
 	00132a7c sourceline 0xb8e
 	00132a84 mov ax,0x0
 	00132a90 mov mar,sp
 	00132a9c memwrite4 ax
 	00132aa4 add sp,0x4
		00132ab0: FALL_THROUGH

	[00132ab0]
		00132c24: UNCONDITIONAL_JUMP
		00132a54: FALL_THROUGH
 	00132ab0 stackptr 0x4
 	00132ab8 memread4 ax
 	00132ac0 push ax
 	00132ac8 mov mar,0x63ef20
 	00132ad4 mov ax,mar
 	00132ae0 push op
 	00132ae8 mov op,ax
 	00132af0 setfuncargs 0x0
 	00132af8 mov ax,0x646f20
 	00132b04 farcall ax
 	00132b0c pop op
 	00132b14 pop bx
 	00132b1c cmplt bx,ax
 	00132b28 mov ax,bx
 	00132b34 jz 0x00132c50
		00132c50: CONDITIONAL_JUMP
		00132b3c: FALL_THROUGH

	[00132b3c]
		00132ab0: FALL_THROUGH
 	00132b3c sourceline 0xb8f
 	00132b44 stackptr 0x4
 	00132b4c memread4 ax
 	00132b54 mov dx,ax
 	00132b60 mov mar,0x63ef20
 	00132b6c mov ax,mar
 	00132b78 push op
 	00132b80 mov op,ax
 	00132b88 farpush dx
 	00132b90 setfuncargs 0x1
 	00132b98 mov ax,0x7c6f20
 	00132ba4 farcall ax
 	00132bac farsubsp 0x1
 	00132bb4 pop op
 	00132bbc push ax
 	00132bc4 mov mar,0x8c6f20
 	00132bd0 mov ax,mar
 	00132bdc pop bx
 	00132be4 cmpeq bx,ax
 	00132bf0 mov ax,bx
 	00132bfc jz 0x00132c24
		00132c24: CONDITIONAL_JUMP
		00132c04: FALL_THROUGH

	[00132c04]
		00132b3c: FALL_THROUGH
 	00132c04 stackptr 0x4
 	00132c0c memread4 ax
 	00132c14 stackptr 0x8
 	00132c1c memwrite4 ax
		00132c24: FALL_THROUGH

	[00132c24]
		00132b3c: CONDITIONAL_JUMP
		00132c04: FALL_THROUGH
 	00132c24 stackptr 0x4
 	00132c2c memread4 ax
 	00132c34 add ax,0x1
 	00132c40 memwrite4 ax
 	00132c48 jmp 0x00132ab0
		00132ab0: UNCONDITIONAL_JUMP

	[00132c50]
		00132ab0: CONDITIONAL_JUMP
 	00132c50 sub sp,0x4
 	00132c5c sourceline 0xb90
 	00132c64 push op
 	00132c6c mov mar,0x8c6f20
 	00132c78 mov ax,mar
 	00132c84 farpush ax
 	00132c8c mov mar,0x3cef20
 	00132c98 mov ax,mar
 	00132ca4 mov op,ax
 	00132cac setfuncargs 0x1
 	00132cb4 mov ax,0x7d6f20
 	00132cc0 farcall ax
 	00132cc8 farsubsp 0x1
 	00132cd0 pop op
 	00132cd8 sourceline 0xb91
 	00132ce0 push op
 	00132ce8 mov mar,0x8e6f20
 	00132cf4 mov ax,mar
 	00132d00 farpush ax
 	00132d08 mov mar,0x3cef20
 	00132d14 mov ax,mar
 	00132d20 mov op,ax
 	00132d28 setfuncargs 0x1
 	00132d30 mov ax,0x7d6f20
 	00132d3c farcall ax
 	00132d44 farsubsp 0x1
 	00132d4c pop op
 	00132d54 sourceline 0xb92
 	00132d5c push op
 	00132d64 stackptr 0x8
 	00132d6c memread4 ax
 	00132d74 farpush ax
 	00132d7c mov mar,0x96ef20
 	00132d88 mov ax,mar
 	00132d94 farpush ax
 	00132d9c mov mar,0x3cef20
 	00132da8 mov ax,mar
 	00132db4 mov op,ax
 	00132dbc setfuncargs 0x2
 	00132dc4 mov ax,0x7e6f20
 	00132dd0 farcall ax
 	00132dd8 farsubsp 0x2
 	00132de0 pop op
 	00132de8 sourceline 0xb93
 	00132df0 push op
 	00132df8 mov ax,0x2ba3cb
 	00132e04 farpush ax
 	00132e0c mov ax,0x138
 	00132e18 farpush ax
 	00132e20 mov ax,0x92
 	00132e2c farpush ax
 	00132e34 mov ax,0x0
 	00132e40 farpush ax
 	00132e48 mov mar,0x3cef20
 	00132e54 mov ax,mar
 	00132e60 mov op,ax
 	00132e68 setfuncargs 0x4
 	00132e70 mov ax,0x6aef20
 	00132e7c farcall ax
 	00132e84 farsubsp 0x4
 	00132e8c pop op
 	00132e94 sourceline 0xb94
 	00132e9c sub sp,0x4
		00132ea8: FALL_THROUGH

	[00132ea8]
		00132998: UNCONDITIONAL_JUMP
		00132c50: FALL_THROUGH
 	00132ea8 sourceline 0xb95
 	00132eb0 jmp 0x001330dc
		001330dc: UNCONDITIONAL_JUMP

	[00132eb8]
		00132844: CONDITIONAL_JUMP
 	00132eb8 sourceline 0xb97
 	00132ec0 mov mar,0x3cef20
 	00132ecc mov ax,mar
 	00132ed8 push op
 	00132ee0 mov op,ax
 	00132ee8 setfuncargs 0x0
 	00132ef0 mov ax,0x89ef20
 	00132efc farcall ax
 	00132f04 pop op
 	00132f0c push ax
 	00132f14 mov mar,0x94ef20
 	00132f20 mov ax,mar
 	00132f2c pop bx
 	00132f34 cmpeq bx,ax
 	00132f40 mov ax,bx
 	00132f4c jz 0x0013308c
		0013308c: CONDITIONAL_JUMP
		00132f54: FALL_THROUGH

	[00132f54]
		00132eb8: FALL_THROUGH
 	00132f54 sourceline 0xb99
 	00132f5c mov ax,0x1
 	00132f68 mov bx,ax
 	00132f74 mov mar,0x3cef20
 	00132f80 mov ax,mar
 	00132f8c push op
 	00132f94 mov op,ax
 	00132f9c farpush bx
 	00132fa4 setfuncargs 0x1
 	00132fac mov ax,0x69ef20
 	00132fb8 farcall ax
 	00132fc0 farsubsp 0x1
 	00132fc8 pop op
 	00132fd0 sourceline 0xb9a
 	00132fd8 push op
 	00132fe0 mov ax,0x2b9daa
 	00132fec farpush ax
 	00132ff4 mov ax,0x138
 	00133000 farpush ax
 	00133008 mov ax,0x92
 	00133014 farpush ax
 	0013301c mov ax,0x0
 	00133028 farpush ax
 	00133030 mov mar,0x3cef20
 	0013303c mov ax,mar
 	00133048 mov op,ax
 	00133050 setfuncargs 0x4
 	00133058 mov ax,0x6aef20
 	00133064 farcall ax
 	0013306c farsubsp 0x4
 	00133074 pop op
 	0013307c sourceline 0xb9b
 	00133084 jmp 0x001330dc
		001330dc: UNCONDITIONAL_JUMP

	[0013308c]
		00132eb8: CONDITIONAL_JUMP
 	0013308c sourceline 0xb9d
 	00133094 mov ax,0x3
 	001330a0 push ax
 	001330a8 mov ax,0x5
 	001330b4 push ax
 	001330bc mov ax,0x10ae5c
 	001330c8 call ax
 	001330d0 sub sp,0x8
		001330dc: FALL_THROUGH

	[001330dc]
		00132ea8: UNCONDITIONAL_JUMP
		00132f54: UNCONDITIONAL_JUMP
		0013308c: FALL_THROUGH
 	001330dc sourceline 0xb9e
 	001330e4 mov ax,0x0
 	001330f0 ret

iCheesebar_UseInv$0:
	[0013316c]
 	0013316c sourceline 0xbaa
 	00133174 thisaddr
 	0013317c sourceline 0xbab
*	00133184 mov mar,0x3cef20
 	00133190 mov ax,mar
 	0013319c push op
 	001331a4 mov op,ax
 	001331ac setfuncargs 0x0
 	001331b4 mov ax,0x89ef20
 	001331c0 farcall ax
 	001331c8 pop op
 	001331d0 push ax
 	001331d8 mov mar,0x8b6f20
 	001331e4 mov ax,mar
 	001331f0 pop bx
 	001331f8 cmpeq bx,ax
 	00133204 mov ax,bx
 	00133210 jnz 0x001332cc
		001332cc: CONDITIONAL_JUMP
		00133218: FALL_THROUGH

	[00133218]
		0013316c: FALL_THROUGH
 	00133218 push ax
 	00133220 mov mar,0x3cef20
 	0013322c mov ax,mar
 	00133238 push op
 	00133240 mov op,ax
 	00133248 setfuncargs 0x0
 	00133250 mov ax,0x89ef20
 	0013325c farcall ax
 	00133264 pop op
 	0013326c push ax
 	00133274 mov mar,0x8bef20
 	00133280 mov ax,mar
 	0013328c pop bx
 	00133294 cmpeq bx,ax
 	001332a0 mov ax,bx
 	001332ac pop bx
 	001332b4 lor bx,ax
 	001332c0 mov ax,bx
		001332cc: FALL_THROUGH

	[001332cc]
		0013316c: CONDITIONAL_JUMP
		00133218: FALL_THROUGH
 	001332cc jz 0x0013340c
		0013340c: CONDITIONAL_JUMP
		001332d4: FALL_THROUGH

	[001332d4]
		001332cc: FALL_THROUGH
 	001332d4 sourceline 0xbad
 	001332dc mov ax,0x1
 	001332e8 mov bx,ax
 	001332f4 mov mar,0x3cef20
 	00133300 mov ax,mar
 	0013330c push op
 	00133314 mov op,ax
 	0013331c farpush bx
 	00133324 setfuncargs 0x1
 	0013332c mov ax,0x69ef20
 	00133338 farcall ax
 	00133340 farsubsp 0x1
 	00133348 pop op
 	00133350 sourceline 0xbae
 	00133358 push op
 	00133360 mov ax,0x2b9df6
 	0013336c farpush ax
 	00133374 mov ax,0x138
 	00133380 farpush ax
 	00133388 mov ax,0x92
 	00133394 farpush ax
 	0013339c mov ax,0x0
 	001333a8 farpush ax
 	001333b0 mov mar,0x3cef20
 	001333bc mov ax,mar
 	001333c8 mov op,ax
 	001333d0 setfuncargs 0x4
 	001333d8 mov ax,0x6aef20
 	001333e4 farcall ax
 	001333ec farsubsp 0x4
 	001333f4 pop op
 	001333fc sourceline 0xbaf
 	00133404 jmp 0x0013345c
		0013345c: UNCONDITIONAL_JUMP

	[0013340c]
		001332cc: CONDITIONAL_JUMP
 	0013340c sourceline 0xbb1
 	00133414 mov ax,0x3
 	00133420 push ax
 	00133428 mov ax,0x5
 	00133434 push ax
 	0013343c mov ax,0x10ae5c
 	00133448 call ax
 	00133450 sub sp,0x8
		0013345c: FALL_THROUGH

	[0013345c]
		001332d4: UNCONDITIONAL_JUMP
		0013340c: FALL_THROUGH
 	0013345c sourceline 0xbb2
 	00133464 mov ax,0x0
 	00133470 ret

iCamera_UseInv$0:
	[00133474]
 	00133474 sourceline 0xbb7
 	0013347c thisaddr
 	00133484 sourceline 0xbb8
*	0013348c mov mar,0x3cef20
 	00133498 mov ax,mar
 	001334a4 push op
 	001334ac mov op,ax
 	001334b4 setfuncargs 0x0
 	001334bc mov ax,0x89ef20
 	001334c8 farcall ax
 	001334d0 pop op
 	001334d8 push ax
 	001334e0 mov mar,0x8cef20
 	001334ec mov ax,mar
 	001334f8 pop bx
 	00133500 cmpeq bx,ax
 	0013350c mov ax,bx
 	00133518 jnz 0x001335d4
		001335d4: CONDITIONAL_JUMP
		00133520: FALL_THROUGH

	[00133520]
		00133474: FALL_THROUGH
 	00133520 push ax
 	00133528 mov mar,0x3cef20
 	00133534 mov ax,mar
 	00133540 push op
 	00133548 mov op,ax
 	00133550 setfuncargs 0x0
 	00133558 mov ax,0x89ef20
 	00133564 farcall ax
 	0013356c pop op
 	00133574 push ax
 	0013357c mov mar,0x8d6f20
 	00133588 mov ax,mar
 	00133594 pop bx
 	0013359c cmpeq bx,ax
 	001335a8 mov ax,bx
 	001335b4 pop bx
 	001335bc lor bx,ax
 	001335c8 mov ax,bx
		001335d4: FALL_THROUGH

	[001335d4]
		00133474: CONDITIONAL_JUMP
		00133520: FALL_THROUGH
 	001335d4 jnz 0x00133690
		00133690: CONDITIONAL_JUMP
		001335dc: FALL_THROUGH

	[001335dc]
		001335d4: FALL_THROUGH
 	001335dc push ax
 	001335e4 mov mar,0x3cef20
 	001335f0 mov ax,mar
 	001335fc push op
 	00133604 mov op,ax
 	0013360c setfuncargs 0x0
 	00133614 mov ax,0x89ef20
 	00133620 farcall ax
 	00133628 pop op
 	00133630 push ax
 	00133638 mov mar,0x8b6f20
 	00133644 mov ax,mar
 	00133650 pop bx
 	00133658 cmpeq bx,ax
 	00133664 mov ax,bx
 	00133670 pop bx
 	00133678 lor bx,ax
 	00133684 mov ax,bx
		00133690: FALL_THROUGH

	[00133690]
		001335d4: CONDITIONAL_JUMP
		001335dc: FALL_THROUGH
 	00133690 jnz 0x0013374c
		0013374c: CONDITIONAL_JUMP
		00133698: FALL_THROUGH

	[00133698]
		00133690: FALL_THROUGH
 	00133698 push ax
 	001336a0 mov mar,0x3cef20
 	001336ac mov ax,mar
 	001336b8 push op
 	001336c0 mov op,ax
 	001336c8 setfuncargs 0x0
 	001336d0 mov ax,0x89ef20
 	001336dc farcall ax
 	001336e4 pop op
 	001336ec push ax
 	001336f4 mov mar,0x8bef20
 	00133700 mov ax,mar
 	0013370c pop bx
 	00133714 cmpeq bx,ax
 	00133720 mov ax,bx
 	0013372c pop bx
 	00133734 lor bx,ax
 	00133740 mov ax,bx
		0013374c: FALL_THROUGH

	[0013374c]
		00133690: CONDITIONAL_JUMP
		00133698: FALL_THROUGH
 	0013374c jnz 0x00133808
		00133808: CONDITIONAL_JUMP
		00133754: FALL_THROUGH

	[00133754]
		0013374c: FALL_THROUGH
 	00133754 push ax
 	0013375c mov mar,0x3cef20
 	00133768 mov ax,mar
 	00133774 push op
 	0013377c mov op,ax
 	00133784 setfuncargs 0x0
 	0013378c mov ax,0x89ef20
 	00133798 farcall ax
 	001337a0 pop op
 	001337a8 push ax
 	001337b0 mov mar,0x8c6f20
 	001337bc mov ax,mar
 	001337c8 pop bx
 	001337d0 cmpeq bx,ax
 	001337dc mov ax,bx
 	001337e8 pop bx
 	001337f0 lor bx,ax
 	001337fc mov ax,bx
		00133808: FALL_THROUGH

	[00133808]
		0013374c: CONDITIONAL_JUMP
		00133754: FALL_THROUGH
 	00133808 jnz 0x001338c4
		001338c4: CONDITIONAL_JUMP
		00133810: FALL_THROUGH

	[00133810]
		00133808: FALL_THROUGH
 	00133810 push ax
 	00133818 mov mar,0x3cef20
 	00133824 mov ax,mar
 	00133830 push op
 	00133838 mov op,ax
 	00133840 setfuncargs 0x0
 	00133848 mov ax,0x89ef20
 	00133854 farcall ax
 	0013385c pop op
 	00133864 push ax
 	0013386c mov mar,0x8def20
 	00133878 mov ax,mar
 	00133884 pop bx
 	0013388c cmpeq bx,ax
 	00133898 mov ax,bx
 	001338a4 pop bx
 	001338ac lor bx,ax
 	001338b8 mov ax,bx
		001338c4: FALL_THROUGH

	[001338c4]
		00133808: CONDITIONAL_JUMP
		00133810: FALL_THROUGH
 	001338c4 jnz 0x00133980
		00133980: CONDITIONAL_JUMP
		001338cc: FALL_THROUGH

	[001338cc]
		001338c4: FALL_THROUGH
 	001338cc push ax
 	001338d4 mov mar,0x3cef20
 	001338e0 mov ax,mar
 	001338ec push op
 	001338f4 mov op,ax
 	001338fc setfuncargs 0x0
 	00133904 mov ax,0x89ef20
 	00133910 farcall ax
 	00133918 pop op
 	00133920 push ax
 	00133928 mov mar,0x8aef20
 	00133934 mov ax,mar
 	00133940 pop bx
 	00133948 cmpeq bx,ax
 	00133954 mov ax,bx
 	00133960 pop bx
 	00133968 lor bx,ax
 	00133974 mov ax,bx
		00133980: FALL_THROUGH

	[00133980]
		001338c4: CONDITIONAL_JUMP
		001338cc: FALL_THROUGH
 	00133980 jnz 0x00133a3c
		00133a3c: CONDITIONAL_JUMP
		00133988: FALL_THROUGH

	[00133988]
		00133980: FALL_THROUGH
 	00133988 push ax
 	00133990 mov mar,0x3cef20
 	0013399c mov ax,mar
 	001339a8 push op
 	001339b0 mov op,ax
 	001339b8 setfuncargs 0x0
 	001339c0 mov ax,0x89ef20
 	001339cc farcall ax
 	001339d4 pop op
 	001339dc push ax
 	001339e4 mov mar,0x8e6f20
 	001339f0 mov ax,mar
 	001339fc pop bx
 	00133a04 cmpeq bx,ax
 	00133a10 mov ax,bx
 	00133a1c pop bx
 	00133a24 lor bx,ax
 	00133a30 mov ax,bx
		00133a3c: FALL_THROUGH

	[00133a3c]
		00133980: CONDITIONAL_JUMP
		00133988: FALL_THROUGH
 	00133a3c jnz 0x00133af8
		00133af8: CONDITIONAL_JUMP
		00133a44: FALL_THROUGH

	[00133a44]
		00133a3c: FALL_THROUGH
 	00133a44 push ax
 	00133a4c mov mar,0x3cef20
 	00133a58 mov ax,mar
 	00133a64 push op
 	00133a6c mov op,ax
 	00133a74 setfuncargs 0x0
 	00133a7c mov ax,0x89ef20
 	00133a88 farcall ax
 	00133a90 pop op
 	00133a98 push ax
 	00133aa0 mov mar,0x8eef20
 	00133aac mov ax,mar
 	00133ab8 pop bx
 	00133ac0 cmpeq bx,ax
 	00133acc mov ax,bx
 	00133ad8 pop bx
 	00133ae0 lor bx,ax
 	00133aec mov ax,bx
		00133af8: FALL_THROUGH

	[00133af8]
		00133a3c: CONDITIONAL_JUMP
		00133a44: FALL_THROUGH
 	00133af8 jnz 0x00133bb4
		00133bb4: CONDITIONAL_JUMP
		00133b00: FALL_THROUGH

	[00133b00]
		00133af8: FALL_THROUGH
 	00133b00 push ax
 	00133b08 mov mar,0x3cef20
 	00133b14 mov ax,mar
 	00133b20 push op
 	00133b28 mov op,ax
 	00133b30 setfuncargs 0x0
 	00133b38 mov ax,0x89ef20
 	00133b44 farcall ax
 	00133b4c pop op
 	00133b54 push ax
 	00133b5c mov mar,0x8f6f20
 	00133b68 mov ax,mar
 	00133b74 pop bx
 	00133b7c cmpeq bx,ax
 	00133b88 mov ax,bx
 	00133b94 pop bx
 	00133b9c lor bx,ax
 	00133ba8 mov ax,bx
		00133bb4: FALL_THROUGH

	[00133bb4]
		00133af8: CONDITIONAL_JUMP
		00133b00: FALL_THROUGH
 	00133bb4 jnz 0x00133c70
		00133c70: CONDITIONAL_JUMP
		00133bbc: FALL_THROUGH

	[00133bbc]
		00133bb4: FALL_THROUGH
 	00133bbc push ax
 	00133bc4 mov mar,0x3cef20
 	00133bd0 mov ax,mar
 	00133bdc push op
 	00133be4 mov op,ax
 	00133bec setfuncargs 0x0
 	00133bf4 mov ax,0x89ef20
 	00133c00 farcall ax
 	00133c08 pop op
 	00133c10 push ax
 	00133c18 mov mar,0x8fef20
 	00133c24 mov ax,mar
 	00133c30 pop bx
 	00133c38 cmpeq bx,ax
 	00133c44 mov ax,bx
 	00133c50 pop bx
 	00133c58 lor bx,ax
 	00133c64 mov ax,bx
		00133c70: FALL_THROUGH

	[00133c70]
		00133bb4: CONDITIONAL_JUMP
		00133bbc: FALL_THROUGH
 	00133c70 jnz 0x00133d2c
		00133d2c: CONDITIONAL_JUMP
		00133c78: FALL_THROUGH

	[00133c78]
		00133c70: FALL_THROUGH
 	00133c78 push ax
 	00133c80 mov mar,0x3cef20
 	00133c8c mov ax,mar
 	00133c98 push op
 	00133ca0 mov op,ax
 	00133ca8 setfuncargs 0x0
 	00133cb0 mov ax,0x89ef20
 	00133cbc farcall ax
 	00133cc4 pop op
 	00133ccc push ax
 	00133cd4 mov mar,0x906f20
 	00133ce0 mov ax,mar
 	00133cec pop bx
 	00133cf4 cmpeq bx,ax
 	00133d00 mov ax,bx
 	00133d0c pop bx
 	00133d14 lor bx,ax
 	00133d20 mov ax,bx
		00133d2c: FALL_THROUGH

	[00133d2c]
		00133c70: CONDITIONAL_JUMP
		00133c78: FALL_THROUGH
 	00133d2c jnz 0x00133de8
		00133de8: CONDITIONAL_JUMP
		00133d34: FALL_THROUGH

	[00133d34]
		00133d2c: FALL_THROUGH
 	00133d34 push ax
 	00133d3c mov mar,0x3cef20
 	00133d48 mov ax,mar
 	00133d54 push op
 	00133d5c mov op,ax
 	00133d64 setfuncargs 0x0
 	00133d6c mov ax,0x89ef20
 	00133d78 farcall ax
 	00133d80 pop op
 	00133d88 push ax
 	00133d90 mov mar,0x976f20
 	00133d9c mov ax,mar
 	00133da8 pop bx
 	00133db0 cmpeq bx,ax
 	00133dbc mov ax,bx
 	00133dc8 pop bx
 	00133dd0 lor bx,ax
 	00133ddc mov ax,bx
		00133de8: FALL_THROUGH

	[00133de8]
		00133d2c: CONDITIONAL_JUMP
		00133d34: FALL_THROUGH
 	00133de8 jnz 0x00133ea4
		00133ea4: CONDITIONAL_JUMP
		00133df0: FALL_THROUGH

	[00133df0]
		00133de8: FALL_THROUGH
 	00133df0 push ax
 	00133df8 mov mar,0x3cef20
 	00133e04 mov ax,mar
 	00133e10 push op
 	00133e18 mov op,ax
 	00133e20 setfuncargs 0x0
 	00133e28 mov ax,0x89ef20
 	00133e34 farcall ax
 	00133e3c pop op
 	00133e44 push ax
 	00133e4c mov mar,0x846f20
 	00133e58 mov ax,mar
 	00133e64 pop bx
 	00133e6c cmpeq bx,ax
 	00133e78 mov ax,bx
 	00133e84 pop bx
 	00133e8c lor bx,ax
 	00133e98 mov ax,bx
		00133ea4: FALL_THROUGH

	[00133ea4]
		00133de8: CONDITIONAL_JUMP
		00133df0: FALL_THROUGH
 	00133ea4 jnz 0x00133f60
		00133f60: CONDITIONAL_JUMP
		00133eac: FALL_THROUGH

	[00133eac]
		00133ea4: FALL_THROUGH
 	00133eac push ax
 	00133eb4 mov mar,0x3cef20
 	00133ec0 mov ax,mar
 	00133ecc push op
 	00133ed4 mov op,ax
 	00133edc setfuncargs 0x0
 	00133ee4 mov ax,0x89ef20
 	00133ef0 farcall ax
 	00133ef8 pop op
 	00133f00 push ax
 	00133f08 mov mar,0x90ef20
 	00133f14 mov ax,mar
 	00133f20 pop bx
 	00133f28 cmpeq bx,ax
 	00133f34 mov ax,bx
 	00133f40 pop bx
 	00133f48 lor bx,ax
 	00133f54 mov ax,bx
		00133f60: FALL_THROUGH

	[00133f60]
		00133ea4: CONDITIONAL_JUMP
		00133eac: FALL_THROUGH
 	00133f60 jnz 0x0013401c
		0013401c: CONDITIONAL_JUMP
		00133f68: FALL_THROUGH

	[00133f68]
		00133f60: FALL_THROUGH
 	00133f68 push ax
 	00133f70 mov mar,0x3cef20
 	00133f7c mov ax,mar
 	00133f88 push op
 	00133f90 mov op,ax
 	00133f98 setfuncargs 0x0
 	00133fa0 mov ax,0x89ef20
 	00133fac farcall ax
 	00133fb4 pop op
 	00133fbc push ax
 	00133fc4 mov mar,0x916f20
 	00133fd0 mov ax,mar
 	00133fdc pop bx
 	00133fe4 cmpeq bx,ax
 	00133ff0 mov ax,bx
 	00133ffc pop bx
 	00134004 lor bx,ax
 	00134010 mov ax,bx
		0013401c: FALL_THROUGH

	[0013401c]
		00133f60: CONDITIONAL_JUMP
		00133f68: FALL_THROUGH
 	0013401c jnz 0x001340d8
		001340d8: CONDITIONAL_JUMP
		00134024: FALL_THROUGH

	[00134024]
		0013401c: FALL_THROUGH
 	00134024 push ax
 	0013402c mov mar,0x3cef20
 	00134038 mov ax,mar
 	00134044 push op
 	0013404c mov op,ax
 	00134054 setfuncargs 0x0
 	0013405c mov ax,0x89ef20
 	00134068 farcall ax
 	00134070 pop op
 	00134078 push ax
 	00134080 mov mar,0x926f20
 	0013408c mov ax,mar
 	00134098 pop bx
 	001340a0 cmpeq bx,ax
 	001340ac mov ax,bx
 	001340b8 pop bx
 	001340c0 lor bx,ax
 	001340cc mov ax,bx
		001340d8: FALL_THROUGH

	[001340d8]
		0013401c: CONDITIONAL_JUMP
		00134024: FALL_THROUGH
 	001340d8 jnz 0x00134194
		00134194: CONDITIONAL_JUMP
		001340e0: FALL_THROUGH

	[001340e0]
		001340d8: FALL_THROUGH
 	001340e0 push ax
 	001340e8 mov mar,0x3cef20
 	001340f4 mov ax,mar
 	00134100 push op
 	00134108 mov op,ax
 	00134110 setfuncargs 0x0
 	00134118 mov ax,0x89ef20
 	00134124 farcall ax
 	0013412c pop op
 	00134134 push ax
 	0013413c mov mar,0x92ef20
 	00134148 mov ax,mar
 	00134154 pop bx
 	0013415c cmpeq bx,ax
 	00134168 mov ax,bx
 	00134174 pop bx
 	0013417c lor bx,ax
 	00134188 mov ax,bx
		00134194: FALL_THROUGH

	[00134194]
		001340d8: CONDITIONAL_JUMP
		001340e0: FALL_THROUGH
 	00134194 jnz 0x00134250
		00134250: CONDITIONAL_JUMP
		0013419c: FALL_THROUGH

	[0013419c]
		00134194: FALL_THROUGH
 	0013419c push ax
 	001341a4 mov mar,0x3cef20
 	001341b0 mov ax,mar
 	001341bc push op
 	001341c4 mov op,ax
 	001341cc setfuncargs 0x0
 	001341d4 mov ax,0x89ef20
 	001341e0 farcall ax
 	001341e8 pop op
 	001341f0 push ax
 	001341f8 mov mar,0x936f20
 	00134204 mov ax,mar
 	00134210 pop bx
 	00134218 cmpeq bx,ax
 	00134224 mov ax,bx
 	00134230 pop bx
 	00134238 lor bx,ax
 	00134244 mov ax,bx
		00134250: FALL_THROUGH

	[00134250]
		00134194: CONDITIONAL_JUMP
		0013419c: FALL_THROUGH
 	00134250 jnz 0x0013430c
		0013430c: CONDITIONAL_JUMP
		00134258: FALL_THROUGH

	[00134258]
		00134250: FALL_THROUGH
 	00134258 push ax
 	00134260 mov mar,0x3cef20
 	0013426c mov ax,mar
 	00134278 push op
 	00134280 mov op,ax
 	00134288 setfuncargs 0x0
 	00134290 mov ax,0x89ef20
 	0013429c farcall ax
 	001342a4 pop op
 	001342ac push ax
 	001342b4 mov mar,0x93ef20
 	001342c0 mov ax,mar
 	001342cc pop bx
 	001342d4 cmpeq bx,ax
 	001342e0 mov ax,bx
 	001342ec pop bx
 	001342f4 lor bx,ax
 	00134300 mov ax,bx
		0013430c: FALL_THROUGH

	[0013430c]
		00134250: CONDITIONAL_JUMP
		00134258: FALL_THROUGH
 	0013430c jnz 0x001343c8
		001343c8: CONDITIONAL_JUMP
		00134314: FALL_THROUGH

	[00134314]
		0013430c: FALL_THROUGH
 	00134314 push ax
 	0013431c mov mar,0x3cef20
 	00134328 mov ax,mar
 	00134334 push op
 	0013433c mov op,ax
 	00134344 setfuncargs 0x0
 	0013434c mov ax,0x89ef20
 	00134358 farcall ax
 	00134360 pop op
 	00134368 push ax
 	00134370 mov mar,0x94ef20
 	0013437c mov ax,mar
 	00134388 pop bx
 	00134390 cmpeq bx,ax
 	0013439c mov ax,bx
 	001343a8 pop bx
 	001343b0 lor bx,ax
 	001343bc mov ax,bx
		001343c8: FALL_THROUGH

	[001343c8]
		0013430c: CONDITIONAL_JUMP
		00134314: FALL_THROUGH
 	001343c8 jnz 0x00134484
		00134484: CONDITIONAL_JUMP
		001343d0: FALL_THROUGH

	[001343d0]
		001343c8: FALL_THROUGH
 	001343d0 push ax
 	001343d8 mov mar,0x3cef20
 	001343e4 mov ax,mar
 	001343f0 push op
 	001343f8 mov op,ax
 	00134400 setfuncargs 0x0
 	00134408 mov ax,0x89ef20
 	00134414 farcall ax
 	0013441c pop op
 	00134424 push ax
 	0013442c mov mar,0x956f20
 	00134438 mov ax,mar
 	00134444 pop bx
 	0013444c cmpeq bx,ax
 	00134458 mov ax,bx
 	00134464 pop bx
 	0013446c lor bx,ax
 	00134478 mov ax,bx
		00134484: FALL_THROUGH

	[00134484]
		001343c8: CONDITIONAL_JUMP
		001343d0: FALL_THROUGH
 	00134484 jz 0x001345c4
		001345c4: CONDITIONAL_JUMP
		0013448c: FALL_THROUGH

	[0013448c]
		00134484: FALL_THROUGH
 	0013448c sourceline 0xbc0
 	00134494 mov ax,0x1
 	001344a0 mov bx,ax
 	001344ac mov mar,0x3cef20
 	001344b8 mov ax,mar
 	001344c4 push op
 	001344cc mov op,ax
 	001344d4 farpush bx
 	001344dc setfuncargs 0x1
 	001344e4 mov ax,0x69ef20
 	001344f0 farcall ax
 	001344f8 farsubsp 0x1
 	00134500 pop op
 	00134508 sourceline 0xbc1
 	00134510 push op
 	00134518 mov ax,0x2b9e38
 	00134524 farpush ax
 	0013452c mov ax,0x138
 	00134538 farpush ax
 	00134540 mov ax,0x92
 	0013454c farpush ax
 	00134554 mov ax,0x0
 	00134560 farpush ax
 	00134568 mov mar,0x3cef20
 	00134574 mov ax,mar
 	00134580 mov op,ax
 	00134588 setfuncargs 0x4
 	00134590 mov ax,0x6aef20
 	0013459c farcall ax
 	001345a4 farsubsp 0x4
 	001345ac pop op
 	001345b4 sourceline 0xbc2
 	001345bc jmp 0x001347e8
		001347e8: UNCONDITIONAL_JUMP

	[001345c4]
		00134484: CONDITIONAL_JUMP
 	001345c4 sourceline 0xbc4
 	001345cc mov mar,0x3cef20
 	001345d8 mov ax,mar
 	001345e4 push op
 	001345ec mov op,ax
 	001345f4 setfuncargs 0x0
 	001345fc mov ax,0x89ef20
 	00134608 farcall ax
 	00134610 pop op
 	00134618 push ax
 	00134620 mov mar,0x7def20
 	0013462c mov ax,mar
 	00134638 pop bx
 	00134640 cmpeq bx,ax
 	0013464c mov ax,bx
 	00134658 jz 0x00134798
		00134798: CONDITIONAL_JUMP
		00134660: FALL_THROUGH

	[00134660]
		001345c4: FALL_THROUGH
 	00134660 sourceline 0xbc6
 	00134668 mov ax,0x1
 	00134674 mov bx,ax
 	00134680 mov mar,0x3cef20
 	0013468c mov ax,mar
 	00134698 push op
 	001346a0 mov op,ax
 	001346a8 farpush bx
 	001346b0 setfuncargs 0x1
 	001346b8 mov ax,0x69ef20
 	001346c4 farcall ax
 	001346cc farsubsp 0x1
 	001346d4 pop op
 	001346dc sourceline 0xbc7
 	001346e4 push op
 	001346ec mov ax,0x2b9e5e
 	001346f8 farpush ax
 	00134700 mov ax,0x138
 	0013470c farpush ax
 	00134714 mov ax,0x92
 	00134720 farpush ax
 	00134728 mov ax,0x0
 	00134734 farpush ax
 	0013473c mov mar,0x3cef20
 	00134748 mov ax,mar
 	00134754 mov op,ax
 	0013475c setfuncargs 0x4
 	00134764 mov ax,0x6aef20
 	00134770 farcall ax
 	00134778 farsubsp 0x4
 	00134780 pop op
 	00134788 sourceline 0xbc8
 	00134790 jmp 0x001347e8
		001347e8: UNCONDITIONAL_JUMP

	[00134798]
		001345c4: CONDITIONAL_JUMP
 	00134798 sourceline 0xbca
 	001347a0 mov ax,0x3
 	001347ac push ax
 	001347b4 mov ax,0x5
 	001347c0 push ax
 	001347c8 mov ax,0x10ae5c
 	001347d4 call ax
 	001347dc sub sp,0x8
		001347e8: FALL_THROUGH

	[001347e8]
		0013448c: UNCONDITIONAL_JUMP
		00134660: UNCONDITIONAL_JUMP
		00134798: FALL_THROUGH
 	001347e8 sourceline 0xbcb
 	001347f0 mov ax,0x0
 	001347fc ret

iCoin_UseInv$0:
	[00134800]
 	00134800 sourceline 0xbd0
 	00134808 thisaddr
 	00134810 sourceline 0xbd1
*	00134818 mov mar,0x3cef20
 	00134824 mov ax,mar
 	00134830 push op
 	00134838 mov op,ax
 	00134840 setfuncargs 0x0
 	00134848 mov ax,0x89ef20
 	00134854 farcall ax
 	0013485c pop op
 	00134864 push ax
 	0013486c mov mar,0x8d6f20
 	00134878 mov ax,mar
 	00134884 pop bx
 	0013488c cmpeq bx,ax
 	00134898 mov ax,bx
 	001348a4 jz 0x001349e4
		001349e4: CONDITIONAL_JUMP
		001348ac: FALL_THROUGH

	[001348ac]
		00134800: FALL_THROUGH
 	001348ac sourceline 0xbd3
 	001348b4 mov ax,0x1
 	001348c0 mov bx,ax
 	001348cc mov mar,0x3cef20
 	001348d8 mov ax,mar
 	001348e4 push op
 	001348ec mov op,ax
 	001348f4 farpush bx
 	001348fc setfuncargs 0x1
 	00134904 mov ax,0x69ef20
 	00134910 farcall ax
 	00134918 farsubsp 0x1
 	00134920 pop op
 	00134928 sourceline 0xbd4
 	00134930 push op
 	00134938 mov ax,0x2b9e85
 	00134944 farpush ax
 	0013494c mov ax,0x138
 	00134958 farpush ax
 	00134960 mov ax,0x92
 	0013496c farpush ax
 	00134974 mov ax,0x0
 	00134980 farpush ax
 	00134988 mov mar,0x3cef20
 	00134994 mov ax,mar
 	001349a0 mov op,ax
 	001349a8 setfuncargs 0x4
 	001349b0 mov ax,0x6aef20
 	001349bc farcall ax
 	001349c4 farsubsp 0x4
 	001349cc pop op
 	001349d4 sourceline 0xbd5
 	001349dc jmp 0x00135010
		00135010: UNCONDITIONAL_JUMP

	[001349e4]
		00134800: CONDITIONAL_JUMP
 	001349e4 sourceline 0xbd7
 	001349ec mov mar,0x3cef20
 	001349f8 mov ax,mar
 	00134a04 push op
 	00134a0c mov op,ax
 	00134a14 setfuncargs 0x0
 	00134a1c mov ax,0x89ef20
 	00134a28 farcall ax
 	00134a30 pop op
 	00134a38 push ax
 	00134a40 mov mar,0x926f20
 	00134a4c mov ax,mar
 	00134a58 pop bx
 	00134a60 cmpeq bx,ax
 	00134a6c mov ax,bx
 	00134a78 jz 0x00134bb8
		00134bb8: CONDITIONAL_JUMP
		00134a80: FALL_THROUGH

	[00134a80]
		001349e4: FALL_THROUGH
 	00134a80 sourceline 0xbd9
 	00134a88 mov ax,0x1
 	00134a94 mov bx,ax
 	00134aa0 mov mar,0x3cef20
 	00134aac mov ax,mar
 	00134ab8 push op
 	00134ac0 mov op,ax
 	00134ac8 farpush bx
 	00134ad0 setfuncargs 0x1
 	00134ad8 mov ax,0x69ef20
 	00134ae4 farcall ax
 	00134aec farsubsp 0x1
 	00134af4 pop op
 	00134afc sourceline 0xbda
 	00134b04 push op
 	00134b0c mov ax,0x2b9eaf
 	00134b18 farpush ax
 	00134b20 mov ax,0x138
 	00134b2c farpush ax
 	00134b34 mov ax,0x92
 	00134b40 farpush ax
 	00134b48 mov ax,0x0
 	00134b54 farpush ax
 	00134b5c mov mar,0x3cef20
 	00134b68 mov ax,mar
 	00134b74 mov op,ax
 	00134b7c setfuncargs 0x4
 	00134b84 mov ax,0x6aef20
 	00134b90 farcall ax
 	00134b98 farsubsp 0x4
 	00134ba0 pop op
 	00134ba8 sourceline 0xbdb
 	00134bb0 jmp 0x00135010
		00135010: UNCONDITIONAL_JUMP

	[00134bb8]
		001349e4: CONDITIONAL_JUMP
 	00134bb8 sourceline 0xbdd
 	00134bc0 mov mar,0x3cef20
 	00134bcc mov ax,mar
 	00134bd8 push op
 	00134be0 mov op,ax
 	00134be8 setfuncargs 0x0
 	00134bf0 mov ax,0x89ef20
 	00134bfc farcall ax
 	00134c04 pop op
 	00134c0c push ax
 	00134c14 mov mar,0x8def20
 	00134c20 mov ax,mar
 	00134c2c pop bx
 	00134c34 cmpeq bx,ax
 	00134c40 mov ax,bx
 	00134c4c jnz 0x00134d08
		00134d08: CONDITIONAL_JUMP
		00134c54: FALL_THROUGH

	[00134c54]
		00134bb8: FALL_THROUGH
 	00134c54 push ax
 	00134c5c mov mar,0x3cef20
 	00134c68 mov ax,mar
 	00134c74 push op
 	00134c7c mov op,ax
 	00134c84 setfuncargs 0x0
 	00134c8c mov ax,0x89ef20
 	00134c98 farcall ax
 	00134ca0 pop op
 	00134ca8 push ax
 	00134cb0 mov mar,0x8f6f20
 	00134cbc mov ax,mar
 	00134cc8 pop bx
 	00134cd0 cmpeq bx,ax
 	00134cdc mov ax,bx
 	00134ce8 pop bx
 	00134cf0 lor bx,ax
 	00134cfc mov ax,bx
		00134d08: FALL_THROUGH

	[00134d08]
		00134bb8: CONDITIONAL_JUMP
		00134c54: FALL_THROUGH
 	00134d08 jnz 0x00134dc4
		00134dc4: CONDITIONAL_JUMP
		00134d10: FALL_THROUGH

	[00134d10]
		00134d08: FALL_THROUGH
 	00134d10 push ax
 	00134d18 mov mar,0x3cef20
 	00134d24 mov ax,mar
 	00134d30 push op
 	00134d38 mov op,ax
 	00134d40 setfuncargs 0x0
 	00134d48 mov ax,0x89ef20
 	00134d54 farcall ax
 	00134d5c pop op
 	00134d64 push ax
 	00134d6c mov mar,0x90ef20
 	00134d78 mov ax,mar
 	00134d84 pop bx
 	00134d8c cmpeq bx,ax
 	00134d98 mov ax,bx
 	00134da4 pop bx
 	00134dac lor bx,ax
 	00134db8 mov ax,bx
		00134dc4: FALL_THROUGH

	[00134dc4]
		00134d08: CONDITIONAL_JUMP
		00134d10: FALL_THROUGH
 	00134dc4 jnz 0x00134e80
		00134e80: CONDITIONAL_JUMP
		00134dcc: FALL_THROUGH

	[00134dcc]
		00134dc4: FALL_THROUGH
 	00134dcc push ax
 	00134dd4 mov mar,0x3cef20
 	00134de0 mov ax,mar
 	00134dec push op
 	00134df4 mov op,ax
 	00134dfc setfuncargs 0x0
 	00134e04 mov ax,0x89ef20
 	00134e10 farcall ax
 	00134e18 pop op
 	00134e20 push ax
 	00134e28 mov mar,0x936f20
 	00134e34 mov ax,mar
 	00134e40 pop bx
 	00134e48 cmpeq bx,ax
 	00134e54 mov ax,bx
 	00134e60 pop bx
 	00134e68 lor bx,ax
 	00134e74 mov ax,bx
		00134e80: FALL_THROUGH

	[00134e80]
		00134dc4: CONDITIONAL_JUMP
		00134dcc: FALL_THROUGH
 	00134e80 jz 0x00134fc0
		00134fc0: CONDITIONAL_JUMP
		00134e88: FALL_THROUGH

	[00134e88]
		00134e80: FALL_THROUGH
 	00134e88 sourceline 0xbdf
 	00134e90 mov ax,0x1
 	00134e9c mov bx,ax
 	00134ea8 mov mar,0x3cef20
 	00134eb4 mov ax,mar
 	00134ec0 push op
 	00134ec8 mov op,ax
 	00134ed0 farpush bx
 	00134ed8 setfuncargs 0x1
 	00134ee0 mov ax,0x69ef20
 	00134eec farcall ax
 	00134ef4 farsubsp 0x1
 	00134efc pop op
 	00134f04 sourceline 0xbe0
 	00134f0c push op
 	00134f14 mov ax,0x2b9ee0
 	00134f20 farpush ax
 	00134f28 mov ax,0x138
 	00134f34 farpush ax
 	00134f3c mov ax,0x92
 	00134f48 farpush ax
 	00134f50 mov ax,0x0
 	00134f5c farpush ax
 	00134f64 mov mar,0x3cef20
 	00134f70 mov ax,mar
 	00134f7c mov op,ax
 	00134f84 setfuncargs 0x4
 	00134f8c mov ax,0x6aef20
 	00134f98 farcall ax
 	00134fa0 farsubsp 0x4
 	00134fa8 pop op
 	00134fb0 sourceline 0xbe1
 	00134fb8 jmp 0x00135010
		00135010: UNCONDITIONAL_JUMP

	[00134fc0]
		00134e80: CONDITIONAL_JUMP
 	00134fc0 sourceline 0xbe3
 	00134fc8 mov ax,0x3
 	00134fd4 push ax
 	00134fdc mov ax,0x5
 	00134fe8 push ax
 	00134ff0 mov ax,0x10ae5c
 	00134ffc call ax
 	00135004 sub sp,0x8
		00135010: FALL_THROUGH

	[00135010]
		001348ac: UNCONDITIONAL_JUMP
		00134a80: UNCONDITIONAL_JUMP
		00134e88: UNCONDITIONAL_JUMP
		00134fc0: FALL_THROUGH
 	00135010 sourceline 0xbe4
 	00135018 mov ax,0x0
 	00135024 ret

iDiary_UseInv$0:
	[00135028]
 	00135028 sourceline 0xbeb
 	00135030 thisaddr
 	00135038 sourceline 0xbec
*	00135040 mov mar,0x3cef20
 	0013504c mov ax,mar
 	00135058 push op
 	00135060 mov op,ax
 	00135068 setfuncargs 0x0
 	00135070 mov ax,0x89ef20
 	0013507c farcall ax
 	00135084 pop op
 	0013508c push ax
 	00135094 mov mar,0x956f20
 	001350a0 mov ax,mar
 	001350ac pop bx
 	001350b4 cmpeq bx,ax
 	001350c0 mov ax,bx
 	001350cc jz 0x0013520c
		0013520c: CONDITIONAL_JUMP
		001350d4: FALL_THROUGH

	[001350d4]
		00135028: FALL_THROUGH
 	001350d4 sourceline 0xbee
 	001350dc mov ax,0x1
 	001350e8 mov bx,ax
 	001350f4 mov mar,0x3cef20
 	00135100 mov ax,mar
 	0013510c push op
 	00135114 mov op,ax
 	0013511c farpush bx
 	00135124 setfuncargs 0x1
 	0013512c mov ax,0x69ef20
 	00135138 farcall ax
 	00135140 farsubsp 0x1
 	00135148 pop op
 	00135150 sourceline 0xbef
 	00135158 push op
 	00135160 mov ax,0x2ba260
 	0013516c farpush ax
 	00135174 mov ax,0x138
 	00135180 farpush ax
 	00135188 mov ax,0x92
 	00135194 farpush ax
 	0013519c mov ax,0x0
 	001351a8 farpush ax
 	001351b0 mov mar,0x3cef20
 	001351bc mov ax,mar
 	001351c8 mov op,ax
 	001351d0 setfuncargs 0x4
 	001351d8 mov ax,0x6aef20
 	001351e4 farcall ax
 	001351ec farsubsp 0x4
 	001351f4 pop op
 	001351fc sourceline 0xbf0
 	00135204 jmp 0x00135c3c
		00135c3c: UNCONDITIONAL_JUMP

	[0013520c]
		00135028: CONDITIONAL_JUMP
 	0013520c sourceline 0xbf2
 	00135214 mov mar,0x3cef20
 	00135220 mov ax,mar
 	0013522c push op
 	00135234 mov op,ax
 	0013523c setfuncargs 0x0
 	00135244 mov ax,0x89ef20
 	00135250 farcall ax
 	00135258 pop op
 	00135260 push ax
 	00135268 mov mar,0x95ef20
 	00135274 mov ax,mar
 	00135280 pop bx
 	00135288 cmpeq bx,ax
 	00135294 mov ax,bx
 	001352a0 jz 0x001353e0
		001353e0: CONDITIONAL_JUMP
		001352a8: FALL_THROUGH

	[001352a8]
		0013520c: FALL_THROUGH
 	001352a8 sourceline 0xbf4
 	001352b0 mov ax,0x1
 	001352bc mov bx,ax
 	001352c8 mov mar,0x3cef20
 	001352d4 mov ax,mar
 	001352e0 push op
 	001352e8 mov op,ax
 	001352f0 farpush bx
 	001352f8 setfuncargs 0x1
 	00135300 mov ax,0x69ef20
 	0013530c farcall ax
 	00135314 farsubsp 0x1
 	0013531c pop op
 	00135324 sourceline 0xbf5
 	0013532c push op
 	00135334 mov ax,0x2b9f53
 	00135340 farpush ax
 	00135348 mov ax,0x138
 	00135354 farpush ax
 	0013535c mov ax,0x92
 	00135368 farpush ax
 	00135370 mov ax,0x0
 	0013537c farpush ax
 	00135384 mov mar,0x3cef20
 	00135390 mov ax,mar
 	0013539c mov op,ax
 	001353a4 setfuncargs 0x4
 	001353ac mov ax,0x6aef20
 	001353b8 farcall ax
 	001353c0 farsubsp 0x4
 	001353c8 pop op
 	001353d0 sourceline 0xbf6
 	001353d8 jmp 0x00135c3c
		00135c3c: UNCONDITIONAL_JUMP

	[001353e0]
		0013520c: CONDITIONAL_JUMP
 	001353e0 sourceline 0xbf8
 	001353e8 mov mar,0x3cef20
 	001353f4 mov ax,mar
 	00135400 push op
 	00135408 mov op,ax
 	00135410 setfuncargs 0x0
 	00135418 mov ax,0x89ef20
 	00135424 farcall ax
 	0013542c pop op
 	00135434 push ax
 	0013543c mov mar,0x906f20
 	00135448 mov ax,mar
 	00135454 pop bx
 	0013545c cmpeq bx,ax
 	00135468 mov ax,bx
 	00135474 jz 0x001355b4
		001355b4: CONDITIONAL_JUMP
		0013547c: FALL_THROUGH

	[0013547c]
		001353e0: FALL_THROUGH
 	0013547c sourceline 0xbfa
 	00135484 mov ax,0x1
 	00135490 mov bx,ax
 	0013549c mov mar,0x3cef20
 	001354a8 mov ax,mar
 	001354b4 push op
 	001354bc mov op,ax
 	001354c4 farpush bx
 	001354cc setfuncargs 0x1
 	001354d4 mov ax,0x69ef20
 	001354e0 farcall ax
 	001354e8 farsubsp 0x1
 	001354f0 pop op
 	001354f8 sourceline 0xbfb
 	00135500 push op
 	00135508 mov ax,0x2b9f96
 	00135514 farpush ax
 	0013551c mov ax,0x138
 	00135528 farpush ax
 	00135530 mov ax,0x92
 	0013553c farpush ax
 	00135544 mov ax,0x0
 	00135550 farpush ax
 	00135558 mov mar,0x3cef20
 	00135564 mov ax,mar
 	00135570 mov op,ax
 	00135578 setfuncargs 0x4
 	00135580 mov ax,0x6aef20
 	0013558c farcall ax
 	00135594 farsubsp 0x4
 	0013559c pop op
 	001355a4 sourceline 0xbfc
 	001355ac jmp 0x00135c3c
		00135c3c: UNCONDITIONAL_JUMP

	[001355b4]
		001353e0: CONDITIONAL_JUMP
 	001355b4 sourceline 0xbfe
 	001355bc mov mar,0x3cef20
 	001355c8 mov ax,mar
 	001355d4 push op
 	001355dc mov op,ax
 	001355e4 setfuncargs 0x0
 	001355ec mov ax,0x89ef20
 	001355f8 farcall ax
 	00135600 pop op
 	00135608 push ax
 	00135610 mov mar,0x8f6f20
 	0013561c mov ax,mar
 	00135628 pop bx
 	00135630 cmpeq bx,ax
 	0013563c mov ax,bx
 	00135648 jz 0x00135788
		00135788: CONDITIONAL_JUMP
		00135650: FALL_THROUGH

	[00135650]
		001355b4: FALL_THROUGH
 	00135650 sourceline 0xc00
 	00135658 mov ax,0x1
 	00135664 mov bx,ax
 	00135670 mov mar,0x3cef20
 	0013567c mov ax,mar
 	00135688 push op
 	00135690 mov op,ax
 	00135698 farpush bx
 	001356a0 setfuncargs 0x1
 	001356a8 mov ax,0x69ef20
 	001356b4 farcall ax
 	001356bc farsubsp 0x1
 	001356c4 pop op
 	001356cc sourceline 0xc01
 	001356d4 push op
 	001356dc mov ax,0x2b9fe5
 	001356e8 farpush ax
 	001356f0 mov ax,0x138
 	001356fc farpush ax
 	00135704 mov ax,0x92
 	00135710 farpush ax
 	00135718 mov ax,0x0
 	00135724 farpush ax
 	0013572c mov mar,0x3cef20
 	00135738 mov ax,mar
 	00135744 mov op,ax
 	0013574c setfuncargs 0x4
 	00135754 mov ax,0x6aef20
 	00135760 farcall ax
 	00135768 farsubsp 0x4
 	00135770 pop op
 	00135778 sourceline 0xc02
 	00135780 jmp 0x00135c3c
		00135c3c: UNCONDITIONAL_JUMP

	[00135788]
		001355b4: CONDITIONAL_JUMP
 	00135788 sourceline 0xc04
 	00135790 mov mar,0x3cef20
 	0013579c mov ax,mar
 	001357a8 push op
 	001357b0 mov op,ax
 	001357b8 setfuncargs 0x0
 	001357c0 mov ax,0x89ef20
 	001357cc farcall ax
 	001357d4 pop op
 	001357dc push ax
 	001357e4 mov mar,0x8b6f20
 	001357f0 mov ax,mar
 	001357fc pop bx
 	00135804 cmpeq bx,ax
 	00135810 mov ax,bx
 	0013581c jnz 0x001358d8
		001358d8: CONDITIONAL_JUMP
		00135824: FALL_THROUGH

	[00135824]
		00135788: FALL_THROUGH
 	00135824 push ax
 	0013582c mov mar,0x3cef20
 	00135838 mov ax,mar
 	00135844 push op
 	0013584c mov op,ax
 	00135854 setfuncargs 0x0
 	0013585c mov ax,0x89ef20
 	00135868 farcall ax
 	00135870 pop op
 	00135878 push ax
 	00135880 mov mar,0x8bef20
 	0013588c mov ax,mar
 	00135898 pop bx
 	001358a0 cmpeq bx,ax
 	001358ac mov ax,bx
 	001358b8 pop bx
 	001358c0 lor bx,ax
 	001358cc mov ax,bx
		001358d8: FALL_THROUGH

	[001358d8]
		00135788: CONDITIONAL_JUMP
		00135824: FALL_THROUGH
 	001358d8 jz 0x00135a18
		00135a18: CONDITIONAL_JUMP
		001358e0: FALL_THROUGH

	[001358e0]
		001358d8: FALL_THROUGH
 	001358e0 sourceline 0xc06
 	001358e8 mov ax,0x1
 	001358f4 mov bx,ax
 	00135900 mov mar,0x3cef20
 	0013590c mov ax,mar
 	00135918 push op
 	00135920 mov op,ax
 	00135928 farpush bx
 	00135930 setfuncargs 0x1
 	00135938 mov ax,0x69ef20
 	00135944 farcall ax
 	0013594c farsubsp 0x1
 	00135954 pop op
 	0013595c sourceline 0xc07
 	00135964 push op
 	0013596c mov ax,0x2ba036
 	00135978 farpush ax
 	00135980 mov ax,0x138
 	0013598c farpush ax
 	00135994 mov ax,0x92
 	001359a0 farpush ax
 	001359a8 mov ax,0x0
 	001359b4 farpush ax
 	001359bc mov mar,0x3cef20
 	001359c8 mov ax,mar
 	001359d4 mov op,ax
 	001359dc setfuncargs 0x4
 	001359e4 mov ax,0x6aef20
 	001359f0 farcall ax
 	001359f8 farsubsp 0x4
 	00135a00 pop op
 	00135a08 sourceline 0xc08
 	00135a10 jmp 0x00135c3c
		00135c3c: UNCONDITIONAL_JUMP

	[00135a18]
		001358d8: CONDITIONAL_JUMP
 	00135a18 sourceline 0xc0a
 	00135a20 mov mar,0x3cef20
 	00135a2c mov ax,mar
 	00135a38 push op
 	00135a40 mov op,ax
 	00135a48 setfuncargs 0x0
 	00135a50 mov ax,0x89ef20
 	00135a5c farcall ax
 	00135a64 pop op
 	00135a6c push ax
 	00135a74 mov mar,0x90ef20
 	00135a80 mov ax,mar
 	00135a8c pop bx
 	00135a94 cmpeq bx,ax
 	00135aa0 mov ax,bx
 	00135aac jz 0x00135bec
		00135bec: CONDITIONAL_JUMP
		00135ab4: FALL_THROUGH

	[00135ab4]
		00135a18: FALL_THROUGH
 	00135ab4 sourceline 0xc0c
 	00135abc mov ax,0x1
 	00135ac8 mov bx,ax
 	00135ad4 mov mar,0x3cef20
 	00135ae0 mov ax,mar
 	00135aec push op
 	00135af4 mov op,ax
 	00135afc farpush bx
 	00135b04 setfuncargs 0x1
 	00135b0c mov ax,0x69ef20
 	00135b18 farcall ax
 	00135b20 farsubsp 0x1
 	00135b28 pop op
 	00135b30 sourceline 0xc0d
 	00135b38 push op
 	00135b40 mov ax,0x2ba063
 	00135b4c farpush ax
 	00135b54 mov ax,0x138
 	00135b60 farpush ax
 	00135b68 mov ax,0x92
 	00135b74 farpush ax
 	00135b7c mov ax,0x0
 	00135b88 farpush ax
 	00135b90 mov mar,0x3cef20
 	00135b9c mov ax,mar
 	00135ba8 mov op,ax
 	00135bb0 setfuncargs 0x4
 	00135bb8 mov ax,0x6aef20
 	00135bc4 farcall ax
 	00135bcc farsubsp 0x4
 	00135bd4 pop op
 	00135bdc sourceline 0xc0e
 	00135be4 jmp 0x00135c3c
		00135c3c: UNCONDITIONAL_JUMP

	[00135bec]
		00135a18: CONDITIONAL_JUMP
 	00135bec sourceline 0xc10
 	00135bf4 mov ax,0x3
 	00135c00 push ax
 	00135c08 mov ax,0x5
 	00135c14 push ax
 	00135c1c mov ax,0x10ae5c
 	00135c28 call ax
 	00135c30 sub sp,0x8
		00135c3c: FALL_THROUGH

	[00135c3c]
		001350d4: UNCONDITIONAL_JUMP
		001352a8: UNCONDITIONAL_JUMP
		0013547c: UNCONDITIONAL_JUMP
		00135650: UNCONDITIONAL_JUMP
		001358e0: UNCONDITIONAL_JUMP
		00135ab4: UNCONDITIONAL_JUMP
		00135bec: FALL_THROUGH
 	00135c3c sourceline 0xc11
 	00135c44 mov ax,0x0
 	00135c50 ret

iFiringCandle_UseInv$0:
	[00135c54]
 	00135c54 sourceline 0xc18
 	00135c5c thisaddr
 	00135c64 sourceline 0xc19
*	00135c6c mov mar,0x3cef20
 	00135c78 mov ax,mar
 	00135c84 push op
 	00135c8c mov op,ax
 	00135c94 setfuncargs 0x0
 	00135c9c mov ax,0x89ef20
 	00135ca8 farcall ax
 	00135cb0 pop op
 	00135cb8 push ax
 	00135cc0 mov mar,0x8c6f20
 	00135ccc mov ax,mar
 	00135cd8 pop bx
 	00135ce0 cmpeq bx,ax
 	00135cec mov ax,bx
 	00135cf8 jz 0x00135e38
		00135e38: CONDITIONAL_JUMP
		00135d00: FALL_THROUGH

	[00135d00]
		00135c54: FALL_THROUGH
 	00135d00 sourceline 0xc1b
 	00135d08 mov ax,0x1
 	00135d14 mov bx,ax
 	00135d20 mov mar,0x3cef20
 	00135d2c mov ax,mar
 	00135d38 push op
 	00135d40 mov op,ax
 	00135d48 farpush bx
 	00135d50 setfuncargs 0x1
 	00135d58 mov ax,0x69ef20
 	00135d64 farcall ax
 	00135d6c farsubsp 0x1
 	00135d74 pop op
 	00135d7c sourceline 0xc1c
 	00135d84 push op
 	00135d8c mov ax,0x2ba443
 	00135d98 farpush ax
 	00135da0 mov ax,0x138
 	00135dac farpush ax
 	00135db4 mov ax,0x92
 	00135dc0 farpush ax
 	00135dc8 mov ax,0x0
 	00135dd4 farpush ax
 	00135ddc mov mar,0x3cef20
 	00135de8 mov ax,mar
 	00135df4 mov op,ax
 	00135dfc setfuncargs 0x4
 	00135e04 mov ax,0x6aef20
 	00135e10 farcall ax
 	00135e18 farsubsp 0x4
 	00135e20 pop op
 	00135e28 sourceline 0xc1d
 	00135e30 jmp 0x001362ec
		001362ec: UNCONDITIONAL_JUMP

	[00135e38]
		00135c54: CONDITIONAL_JUMP
 	00135e38 sourceline 0xc1f
 	00135e40 mov mar,0x3cef20
 	00135e4c mov ax,mar
 	00135e58 push op
 	00135e60 mov op,ax
 	00135e68 setfuncargs 0x0
 	00135e70 mov ax,0x89ef20
 	00135e7c farcall ax
 	00135e84 pop op
 	00135e8c push ax
 	00135e94 mov mar,0x7def20
 	00135ea0 mov ax,mar
 	00135eac pop bx
 	00135eb4 cmpeq bx,ax
 	00135ec0 mov ax,bx
 	00135ecc jnz 0x00135f88
		00135f88: CONDITIONAL_JUMP
		00135ed4: FALL_THROUGH

	[00135ed4]
		00135e38: FALL_THROUGH
 	00135ed4 push ax
 	00135edc mov mar,0x3cef20
 	00135ee8 mov ax,mar
 	00135ef4 push op
 	00135efc mov op,ax
 	00135f04 setfuncargs 0x0
 	00135f0c mov ax,0x89ef20
 	00135f18 farcall ax
 	00135f20 pop op
 	00135f28 push ax
 	00135f30 mov mar,0x8eef20
 	00135f3c mov ax,mar
 	00135f48 pop bx
 	00135f50 cmpeq bx,ax
 	00135f5c mov ax,bx
 	00135f68 pop bx
 	00135f70 lor bx,ax
 	00135f7c mov ax,bx
		00135f88: FALL_THROUGH

	[00135f88]
		00135e38: CONDITIONAL_JUMP
		00135ed4: FALL_THROUGH
 	00135f88 jz 0x001360c8
		001360c8: CONDITIONAL_JUMP
		00135f90: FALL_THROUGH

	[00135f90]
		00135f88: FALL_THROUGH
 	00135f90 sourceline 0xc21
 	00135f98 mov ax,0x1
 	00135fa4 mov bx,ax
 	00135fb0 mov mar,0x3cef20
 	00135fbc mov ax,mar
 	00135fc8 push op
 	00135fd0 mov op,ax
 	00135fd8 farpush bx
 	00135fe0 setfuncargs 0x1
 	00135fe8 mov ax,0x69ef20
 	00135ff4 farcall ax
 	00135ffc farsubsp 0x1
 	00136004 pop op
 	0013600c sourceline 0xc22
 	00136014 push op
 	0013601c mov ax,0x2ba0e7
 	00136028 farpush ax
 	00136030 mov ax,0x138
 	0013603c farpush ax
 	00136044 mov ax,0x92
 	00136050 farpush ax
 	00136058 mov ax,0x0
 	00136064 farpush ax
 	0013606c mov mar,0x3cef20
 	00136078 mov ax,mar
 	00136084 mov op,ax
 	0013608c setfuncargs 0x4
 	00136094 mov ax,0x6aef20
 	001360a0 farcall ax
 	001360a8 farsubsp 0x4
 	001360b0 pop op
 	001360b8 sourceline 0xc23
 	001360c0 jmp 0x001362ec
		001362ec: UNCONDITIONAL_JUMP

	[001360c8]
		00135f88: CONDITIONAL_JUMP
 	001360c8 sourceline 0xc25
 	001360d0 mov mar,0x3cef20
 	001360dc mov ax,mar
 	001360e8 push op
 	001360f0 mov op,ax
 	001360f8 setfuncargs 0x0
 	00136100 mov ax,0x89ef20
 	0013610c farcall ax
 	00136114 pop op
 	0013611c push ax
 	00136124 mov mar,0x8d6f20
 	00136130 mov ax,mar
 	0013613c pop bx
 	00136144 cmpeq bx,ax
 	00136150 mov ax,bx
 	0013615c jz 0x0013629c
		0013629c: CONDITIONAL_JUMP
		00136164: FALL_THROUGH

	[00136164]
		001360c8: FALL_THROUGH
 	00136164 sourceline 0xc27
 	0013616c mov ax,0x1
 	00136178 mov bx,ax
 	00136184 mov mar,0x3cef20
 	00136190 mov ax,mar
 	0013619c push op
 	001361a4 mov op,ax
 	001361ac farpush bx
 	001361b4 setfuncargs 0x1
 	001361bc mov ax,0x69ef20
 	001361c8 farcall ax
 	001361d0 farsubsp 0x1
 	001361d8 pop op
 	001361e0 sourceline 0xc28
 	001361e8 push op
 	001361f0 mov ax,0x2ba111
 	001361fc farpush ax
 	00136204 mov ax,0x138
 	00136210 farpush ax
 	00136218 mov ax,0x92
 	00136224 farpush ax
 	0013622c mov ax,0x0
 	00136238 farpush ax
 	00136240 mov mar,0x3cef20
 	0013624c mov ax,mar
 	00136258 mov op,ax
 	00136260 setfuncargs 0x4
 	00136268 mov ax,0x6aef20
 	00136274 farcall ax
 	0013627c farsubsp 0x4
 	00136284 pop op
 	0013628c sourceline 0xc29
 	00136294 jmp 0x001362ec
		001362ec: UNCONDITIONAL_JUMP

	[0013629c]
		001360c8: CONDITIONAL_JUMP
 	0013629c sourceline 0xc2b
 	001362a4 mov ax,0x3
 	001362b0 push ax
 	001362b8 mov ax,0x5
 	001362c4 push ax
 	001362cc mov ax,0x10ae5c
 	001362d8 call ax
 	001362e0 sub sp,0x8
		001362ec: FALL_THROUGH

	[001362ec]
		00135d00: UNCONDITIONAL_JUMP
		00135f90: UNCONDITIONAL_JUMP
		00136164: UNCONDITIONAL_JUMP
		0013629c: FALL_THROUGH
 	001362ec sourceline 0xc2c
 	001362f4 mov ax,0x0
 	00136300 ret

iMold_UseInv$0:
	[00136304]
 	00136304 sourceline 0xc31
 	0013630c thisaddr
 	00136314 sourceline 0xc32
*	0013631c mov mar,0x3cef20
 	00136328 mov ax,mar
 	00136334 push op
 	0013633c mov op,ax
 	00136344 setfuncargs 0x0
 	0013634c mov ax,0x89ef20
 	00136358 farcall ax
 	00136360 pop op
 	00136368 push ax
 	00136370 mov mar,0x8cef20
 	0013637c mov ax,mar
 	00136388 pop bx
 	00136390 cmpeq bx,ax
 	0013639c mov ax,bx
 	001363a8 jnz 0x00136464
		00136464: CONDITIONAL_JUMP
		001363b0: FALL_THROUGH

	[001363b0]
		00136304: FALL_THROUGH
 	001363b0 push ax
 	001363b8 mov mar,0x3cef20
 	001363c4 mov ax,mar
 	001363d0 push op
 	001363d8 mov op,ax
 	001363e0 setfuncargs 0x0
 	001363e8 mov ax,0x89ef20
 	001363f4 farcall ax
 	001363fc pop op
 	00136404 push ax
 	0013640c mov mar,0x8d6f20
 	00136418 mov ax,mar
 	00136424 pop bx
 	0013642c cmpeq bx,ax
 	00136438 mov ax,bx
 	00136444 pop bx
 	0013644c lor bx,ax
 	00136458 mov ax,bx
		00136464: FALL_THROUGH

	[00136464]
		00136304: CONDITIONAL_JUMP
		001363b0: FALL_THROUGH
 	00136464 jnz 0x00136520
		00136520: CONDITIONAL_JUMP
		0013646c: FALL_THROUGH

	[0013646c]
		00136464: FALL_THROUGH
 	0013646c push ax
 	00136474 mov mar,0x3cef20
 	00136480 mov ax,mar
 	0013648c push op
 	00136494 mov op,ax
 	0013649c setfuncargs 0x0
 	001364a4 mov ax,0x89ef20
 	001364b0 farcall ax
 	001364b8 pop op
 	001364c0 push ax
 	001364c8 mov mar,0x8c6f20
 	001364d4 mov ax,mar
 	001364e0 pop bx
 	001364e8 cmpeq bx,ax
 	001364f4 mov ax,bx
 	00136500 pop bx
 	00136508 lor bx,ax
 	00136514 mov ax,bx
		00136520: FALL_THROUGH

	[00136520]
		00136464: CONDITIONAL_JUMP
		0013646c: FALL_THROUGH
 	00136520 jnz 0x001365dc
		001365dc: CONDITIONAL_JUMP
		00136528: FALL_THROUGH

	[00136528]
		00136520: FALL_THROUGH
 	00136528 push ax
 	00136530 mov mar,0x3cef20
 	0013653c mov ax,mar
 	00136548 push op
 	00136550 mov op,ax
 	00136558 setfuncargs 0x0
 	00136560 mov ax,0x89ef20
 	0013656c farcall ax
 	00136574 pop op
 	0013657c push ax
 	00136584 mov mar,0x7def20
 	00136590 mov ax,mar
 	0013659c pop bx
 	001365a4 cmpeq bx,ax
 	001365b0 mov ax,bx
 	001365bc pop bx
 	001365c4 lor bx,ax
 	001365d0 mov ax,bx
		001365dc: FALL_THROUGH

	[001365dc]
		00136520: CONDITIONAL_JUMP
		00136528: FALL_THROUGH
 	001365dc jnz 0x00136698
		00136698: CONDITIONAL_JUMP
		001365e4: FALL_THROUGH

	[001365e4]
		001365dc: FALL_THROUGH
 	001365e4 push ax
 	001365ec mov mar,0x3cef20
 	001365f8 mov ax,mar
 	00136604 push op
 	0013660c mov op,ax
 	00136614 setfuncargs 0x0
 	0013661c mov ax,0x89ef20
 	00136628 farcall ax
 	00136630 pop op
 	00136638 push ax
 	00136640 mov mar,0x8def20
 	0013664c mov ax,mar
 	00136658 pop bx
 	00136660 cmpeq bx,ax
 	0013666c mov ax,bx
 	00136678 pop bx
 	00136680 lor bx,ax
 	0013668c mov ax,bx
		00136698: FALL_THROUGH

	[00136698]
		001365dc: CONDITIONAL_JUMP
		001365e4: FALL_THROUGH
 	00136698 jnz 0x00136754
		00136754: CONDITIONAL_JUMP
		001366a0: FALL_THROUGH

	[001366a0]
		00136698: FALL_THROUGH
 	001366a0 push ax
 	001366a8 mov mar,0x3cef20
 	001366b4 mov ax,mar
 	001366c0 push op
 	001366c8 mov op,ax
 	001366d0 setfuncargs 0x0
 	001366d8 mov ax,0x89ef20
 	001366e4 farcall ax
 	001366ec pop op
 	001366f4 push ax
 	001366fc mov mar,0x8aef20
 	00136708 mov ax,mar
 	00136714 pop bx
 	0013671c cmpeq bx,ax
 	00136728 mov ax,bx
 	00136734 pop bx
 	0013673c lor bx,ax
 	00136748 mov ax,bx
		00136754: FALL_THROUGH

	[00136754]
		00136698: CONDITIONAL_JUMP
		001366a0: FALL_THROUGH
 	00136754 jnz 0x00136810
		00136810: CONDITIONAL_JUMP
		0013675c: FALL_THROUGH

	[0013675c]
		00136754: FALL_THROUGH
 	0013675c push ax
 	00136764 mov mar,0x3cef20
 	00136770 mov ax,mar
 	0013677c push op
 	00136784 mov op,ax
 	0013678c setfuncargs 0x0
 	00136794 mov ax,0x89ef20
 	001367a0 farcall ax
 	001367a8 pop op
 	001367b0 push ax
 	001367b8 mov mar,0x8e6f20
 	001367c4 mov ax,mar
 	001367d0 pop bx
 	001367d8 cmpeq bx,ax
 	001367e4 mov ax,bx
 	001367f0 pop bx
 	001367f8 lor bx,ax
 	00136804 mov ax,bx
		00136810: FALL_THROUGH

	[00136810]
		00136754: CONDITIONAL_JUMP
		0013675c: FALL_THROUGH
 	00136810 jnz 0x001368cc
		001368cc: CONDITIONAL_JUMP
		00136818: FALL_THROUGH

	[00136818]
		00136810: FALL_THROUGH
 	00136818 push ax
 	00136820 mov mar,0x3cef20
 	0013682c mov ax,mar
 	00136838 push op
 	00136840 mov op,ax
 	00136848 setfuncargs 0x0
 	00136850 mov ax,0x89ef20
 	0013685c farcall ax
 	00136864 pop op
 	0013686c push ax
 	00136874 mov mar,0x8eef20
 	00136880 mov ax,mar
 	0013688c pop bx
 	00136894 cmpeq bx,ax
 	001368a0 mov ax,bx
 	001368ac pop bx
 	001368b4 lor bx,ax
 	001368c0 mov ax,bx
		001368cc: FALL_THROUGH

	[001368cc]
		00136810: CONDITIONAL_JUMP
		00136818: FALL_THROUGH
 	001368cc jnz 0x00136988
		00136988: CONDITIONAL_JUMP
		001368d4: FALL_THROUGH

	[001368d4]
		001368cc: FALL_THROUGH
 	001368d4 push ax
 	001368dc mov mar,0x3cef20
 	001368e8 mov ax,mar
 	001368f4 push op
 	001368fc mov op,ax
 	00136904 setfuncargs 0x0
 	0013690c mov ax,0x89ef20
 	00136918 farcall ax
 	00136920 pop op
 	00136928 push ax
 	00136930 mov mar,0x8f6f20
 	0013693c mov ax,mar
 	00136948 pop bx
 	00136950 cmpeq bx,ax
 	0013695c mov ax,bx
 	00136968 pop bx
 	00136970 lor bx,ax
 	0013697c mov ax,bx
		00136988: FALL_THROUGH

	[00136988]
		001368cc: CONDITIONAL_JUMP
		001368d4: FALL_THROUGH
 	00136988 jnz 0x00136a44
		00136a44: CONDITIONAL_JUMP
		00136990: FALL_THROUGH

	[00136990]
		00136988: FALL_THROUGH
 	00136990 push ax
 	00136998 mov mar,0x3cef20
 	001369a4 mov ax,mar
 	001369b0 push op
 	001369b8 mov op,ax
 	001369c0 setfuncargs 0x0
 	001369c8 mov ax,0x89ef20
 	001369d4 farcall ax
 	001369dc pop op
 	001369e4 push ax
 	001369ec mov mar,0x8fef20
 	001369f8 mov ax,mar
 	00136a04 pop bx
 	00136a0c cmpeq bx,ax
 	00136a18 mov ax,bx
 	00136a24 pop bx
 	00136a2c lor bx,ax
 	00136a38 mov ax,bx
		00136a44: FALL_THROUGH

	[00136a44]
		00136988: CONDITIONAL_JUMP
		00136990: FALL_THROUGH
 	00136a44 jnz 0x00136b00
		00136b00: CONDITIONAL_JUMP
		00136a4c: FALL_THROUGH

	[00136a4c]
		00136a44: FALL_THROUGH
 	00136a4c push ax
 	00136a54 mov mar,0x3cef20
 	00136a60 mov ax,mar
 	00136a6c push op
 	00136a74 mov op,ax
 	00136a7c setfuncargs 0x0
 	00136a84 mov ax,0x89ef20
 	00136a90 farcall ax
 	00136a98 pop op
 	00136aa0 push ax
 	00136aa8 mov mar,0x906f20
 	00136ab4 mov ax,mar
 	00136ac0 pop bx
 	00136ac8 cmpeq bx,ax
 	00136ad4 mov ax,bx
 	00136ae0 pop bx
 	00136ae8 lor bx,ax
 	00136af4 mov ax,bx
		00136b00: FALL_THROUGH

	[00136b00]
		00136a44: CONDITIONAL_JUMP
		00136a4c: FALL_THROUGH
 	00136b00 jnz 0x00136bbc
		00136bbc: CONDITIONAL_JUMP
		00136b08: FALL_THROUGH

	[00136b08]
		00136b00: FALL_THROUGH
 	00136b08 push ax
 	00136b10 mov mar,0x3cef20
 	00136b1c mov ax,mar
 	00136b28 push op
 	00136b30 mov op,ax
 	00136b38 setfuncargs 0x0
 	00136b40 mov ax,0x89ef20
 	00136b4c farcall ax
 	00136b54 pop op
 	00136b5c push ax
 	00136b64 mov mar,0x976f20
 	00136b70 mov ax,mar
 	00136b7c pop bx
 	00136b84 cmpeq bx,ax
 	00136b90 mov ax,bx
 	00136b9c pop bx
 	00136ba4 lor bx,ax
 	00136bb0 mov ax,bx
		00136bbc: FALL_THROUGH

	[00136bbc]
		00136b00: CONDITIONAL_JUMP
		00136b08: FALL_THROUGH
 	00136bbc jnz 0x00136c78
		00136c78: CONDITIONAL_JUMP
		00136bc4: FALL_THROUGH

	[00136bc4]
		00136bbc: FALL_THROUGH
 	00136bc4 push ax
 	00136bcc mov mar,0x3cef20
 	00136bd8 mov ax,mar
 	00136be4 push op
 	00136bec mov op,ax
 	00136bf4 setfuncargs 0x0
 	00136bfc mov ax,0x89ef20
 	00136c08 farcall ax
 	00136c10 pop op
 	00136c18 push ax
 	00136c20 mov mar,0x846f20
 	00136c2c mov ax,mar
 	00136c38 pop bx
 	00136c40 cmpeq bx,ax
 	00136c4c mov ax,bx
 	00136c58 pop bx
 	00136c60 lor bx,ax
 	00136c6c mov ax,bx
		00136c78: FALL_THROUGH

	[00136c78]
		00136bbc: CONDITIONAL_JUMP
		00136bc4: FALL_THROUGH
 	00136c78 jnz 0x00136d34
		00136d34: CONDITIONAL_JUMP
		00136c80: FALL_THROUGH

	[00136c80]
		00136c78: FALL_THROUGH
 	00136c80 push ax
 	00136c88 mov mar,0x3cef20
 	00136c94 mov ax,mar
 	00136ca0 push op
 	00136ca8 mov op,ax
 	00136cb0 setfuncargs 0x0
 	00136cb8 mov ax,0x89ef20
 	00136cc4 farcall ax
 	00136ccc pop op
 	00136cd4 push ax
 	00136cdc mov mar,0x90ef20
 	00136ce8 mov ax,mar
 	00136cf4 pop bx
 	00136cfc cmpeq bx,ax
 	00136d08 mov ax,bx
 	00136d14 pop bx
 	00136d1c lor bx,ax
 	00136d28 mov ax,bx
		00136d34: FALL_THROUGH

	[00136d34]
		00136c78: CONDITIONAL_JUMP
		00136c80: FALL_THROUGH
 	00136d34 jnz 0x00136df0
		00136df0: CONDITIONAL_JUMP
		00136d3c: FALL_THROUGH

	[00136d3c]
		00136d34: FALL_THROUGH
 	00136d3c push ax
 	00136d44 mov mar,0x3cef20
 	00136d50 mov ax,mar
 	00136d5c push op
 	00136d64 mov op,ax
 	00136d6c setfuncargs 0x0
 	00136d74 mov ax,0x89ef20
 	00136d80 farcall ax
 	00136d88 pop op
 	00136d90 push ax
 	00136d98 mov mar,0x916f20
 	00136da4 mov ax,mar
 	00136db0 pop bx
 	00136db8 cmpeq bx,ax
 	00136dc4 mov ax,bx
 	00136dd0 pop bx
 	00136dd8 lor bx,ax
 	00136de4 mov ax,bx
		00136df0: FALL_THROUGH

	[00136df0]
		00136d34: CONDITIONAL_JUMP
		00136d3c: FALL_THROUGH
 	00136df0 jz 0x00136f30
		00136f30: CONDITIONAL_JUMP
		00136df8: FALL_THROUGH

	[00136df8]
		00136df0: FALL_THROUGH
 	00136df8 sourceline 0xc37
 	00136e00 mov ax,0x1
 	00136e0c mov bx,ax
 	00136e18 mov mar,0x3cef20
 	00136e24 mov ax,mar
 	00136e30 push op
 	00136e38 mov op,ax
 	00136e40 farpush bx
 	00136e48 setfuncargs 0x1
 	00136e50 mov ax,0x69ef20
 	00136e5c farcall ax
 	00136e64 farsubsp 0x1
 	00136e6c pop op
 	00136e74 sourceline 0xc38
 	00136e7c push op
 	00136e84 mov ax,0x2ba139
 	00136e90 farpush ax
 	00136e98 mov ax,0x138
 	00136ea4 farpush ax
 	00136eac mov ax,0x92
 	00136eb8 farpush ax
 	00136ec0 mov ax,0x0
 	00136ecc farpush ax
 	00136ed4 mov mar,0x3cef20
 	00136ee0 mov ax,mar
 	00136eec mov op,ax
 	00136ef4 setfuncargs 0x4
 	00136efc mov ax,0x6aef20
 	00136f08 farcall ax
 	00136f10 farsubsp 0x4
 	00136f18 pop op
 	00136f20 sourceline 0xc39
 	00136f28 jmp 0x00137210
		00137210: UNCONDITIONAL_JUMP

	[00136f30]
		00136df0: CONDITIONAL_JUMP
 	00136f30 sourceline 0xc3b
 	00136f38 mov mar,0x3cef20
 	00136f44 mov ax,mar
 	00136f50 push op
 	00136f58 mov op,ax
 	00136f60 setfuncargs 0x0
 	00136f68 mov ax,0x89ef20
 	00136f74 farcall ax
 	00136f7c pop op
 	00136f84 push ax
 	00136f8c mov mar,0x8b6f20
 	00136f98 mov ax,mar
 	00136fa4 pop bx
 	00136fac cmpeq bx,ax
 	00136fb8 mov ax,bx
 	00136fc4 jnz 0x00137080
		00137080: CONDITIONAL_JUMP
		00136fcc: FALL_THROUGH

	[00136fcc]
		00136f30: FALL_THROUGH
 	00136fcc push ax
 	00136fd4 mov mar,0x3cef20
 	00136fe0 mov ax,mar
 	00136fec push op
 	00136ff4 mov op,ax
 	00136ffc setfuncargs 0x0
 	00137004 mov ax,0x89ef20
 	00137010 farcall ax
 	00137018 pop op
 	00137020 push ax
 	00137028 mov mar,0x8bef20
 	00137034 mov ax,mar
 	00137040 pop bx
 	00137048 cmpeq bx,ax
 	00137054 mov ax,bx
 	00137060 pop bx
 	00137068 lor bx,ax
 	00137074 mov ax,bx
		00137080: FALL_THROUGH

	[00137080]
		00136f30: CONDITIONAL_JUMP
		00136fcc: FALL_THROUGH
 	00137080 jz 0x001371c0
		001371c0: CONDITIONAL_JUMP
		00137088: FALL_THROUGH

	[00137088]
		00137080: FALL_THROUGH
 	00137088 sourceline 0xc3d
 	00137090 mov ax,0x1
 	0013709c mov bx,ax
 	001370a8 mov mar,0x3cef20
 	001370b4 mov ax,mar
 	001370c0 push op
 	001370c8 mov op,ax
 	001370d0 farpush bx
 	001370d8 setfuncargs 0x1
 	001370e0 mov ax,0x69ef20
 	001370ec farcall ax
 	001370f4 farsubsp 0x1
 	001370fc pop op
 	00137104 sourceline 0xc3e
 	0013710c push op
 	00137114 mov ax,0x2ba161
 	00137120 farpush ax
 	00137128 mov ax,0x138
 	00137134 farpush ax
 	0013713c mov ax,0x92
 	00137148 farpush ax
 	00137150 mov ax,0x0
 	0013715c farpush ax
 	00137164 mov mar,0x3cef20
 	00137170 mov ax,mar
 	0013717c mov op,ax
 	00137184 setfuncargs 0x4
 	0013718c mov ax,0x6aef20
 	00137198 farcall ax
 	001371a0 farsubsp 0x4
 	001371a8 pop op
 	001371b0 sourceline 0xc3f
 	001371b8 jmp 0x00137210
		00137210: UNCONDITIONAL_JUMP

	[001371c0]
		00137080: CONDITIONAL_JUMP
 	001371c0 sourceline 0xc41
 	001371c8 mov ax,0x3
 	001371d4 push ax
 	001371dc mov ax,0x5
 	001371e8 push ax
 	001371f0 mov ax,0x10ae5c
 	001371fc call ax
 	00137204 sub sp,0x8
		00137210: FALL_THROUGH

	[00137210]
		00136df8: UNCONDITIONAL_JUMP
		00137088: UNCONDITIONAL_JUMP
		001371c0: FALL_THROUGH
 	00137210 sourceline 0xc42
 	00137218 mov ax,0x0
 	00137224 ret

iMuseumBook_UseInv$0:
	[00137228]
 	00137228 sourceline 0xc47
 	00137230 thisaddr
 	00137238 sourceline 0xc48
*	00137240 mov mar,0x3cef20
 	0013724c mov ax,mar
 	00137258 push op
 	00137260 mov op,ax
 	00137268 setfuncargs 0x0
 	00137270 mov ax,0x89ef20
 	0013727c farcall ax
 	00137284 pop op
 	0013728c push ax
 	00137294 mov mar,0x8f6f20
 	001372a0 mov ax,mar
 	001372ac pop bx
 	001372b4 cmpeq bx,ax
 	001372c0 mov ax,bx
 	001372cc jz 0x0013740c
		0013740c: CONDITIONAL_JUMP
		001372d4: FALL_THROUGH

	[001372d4]
		00137228: FALL_THROUGH
 	001372d4 sourceline 0xc4a
 	001372dc mov ax,0x1
 	001372e8 mov bx,ax
 	001372f4 mov mar,0x3cef20
 	00137300 mov ax,mar
 	0013730c push op
 	00137314 mov op,ax
 	0013731c farpush bx
 	00137324 setfuncargs 0x1
 	0013732c mov ax,0x69ef20
 	00137338 farcall ax
 	00137340 farsubsp 0x1
 	00137348 pop op
 	00137350 sourceline 0xc4b
 	00137358 push op
 	00137360 mov ax,0x2ba18d
 	0013736c farpush ax
 	00137374 mov ax,0x138
 	00137380 farpush ax
 	00137388 mov ax,0x92
 	00137394 farpush ax
 	0013739c mov ax,0x0
 	001373a8 farpush ax
 	001373b0 mov mar,0x3cef20
 	001373bc mov ax,mar
 	001373c8 mov op,ax
 	001373d0 setfuncargs 0x4
 	001373d8 mov ax,0x6aef20
 	001373e4 farcall ax
 	001373ec farsubsp 0x4
 	001373f4 pop op
 	001373fc sourceline 0xc4c
 	00137404 jmp 0x00137e3c
		00137e3c: UNCONDITIONAL_JUMP

	[0013740c]
		00137228: CONDITIONAL_JUMP
 	0013740c sourceline 0xc4e
 	00137414 mov mar,0x3cef20
 	00137420 mov ax,mar
 	0013742c push op
 	00137434 mov op,ax
 	0013743c setfuncargs 0x0
 	00137444 mov ax,0x89ef20
 	00137450 farcall ax
 	00137458 pop op
 	00137460 push ax
 	00137468 mov mar,0x95ef20
 	00137474 mov ax,mar
 	00137480 pop bx
 	00137488 cmpeq bx,ax
 	00137494 mov ax,bx
 	001374a0 jz 0x001375e0
		001375e0: CONDITIONAL_JUMP
		001374a8: FALL_THROUGH

	[001374a8]
		0013740c: FALL_THROUGH
 	001374a8 sourceline 0xc50
 	001374b0 mov ax,0x1
 	001374bc mov bx,ax
 	001374c8 mov mar,0x3cef20
 	001374d4 mov ax,mar
 	001374e0 push op
 	001374e8 mov op,ax
 	001374f0 farpush bx
 	001374f8 setfuncargs 0x1
 	00137500 mov ax,0x69ef20
 	0013750c farcall ax
 	00137514 farsubsp 0x1
 	0013751c pop op
 	00137524 sourceline 0xc51
 	0013752c push op
 	00137534 mov ax,0x2ba1f9
 	00137540 farpush ax
 	00137548 mov ax,0x138
 	00137554 farpush ax
 	0013755c mov ax,0x92
 	00137568 farpush ax
 	00137570 mov ax,0x0
 	0013757c farpush ax
 	00137584 mov mar,0x3cef20
 	00137590 mov ax,mar
 	0013759c mov op,ax
 	001375a4 setfuncargs 0x4
 	001375ac mov ax,0x6aef20
 	001375b8 farcall ax
 	001375c0 farsubsp 0x4
 	001375c8 pop op
 	001375d0 sourceline 0xc52
 	001375d8 jmp 0x00137e3c
		00137e3c: UNCONDITIONAL_JUMP

	[001375e0]
		0013740c: CONDITIONAL_JUMP
 	001375e0 sourceline 0xc54
 	001375e8 mov mar,0x3cef20
 	001375f4 mov ax,mar
 	00137600 push op
 	00137608 mov op,ax
 	00137610 setfuncargs 0x0
 	00137618 mov ax,0x89ef20
 	00137624 farcall ax
 	0013762c pop op
 	00137634 push ax
 	0013763c mov mar,0x916f20
 	00137648 mov ax,mar
 	00137654 pop bx
 	0013765c cmpeq bx,ax
 	00137668 mov ax,bx
 	00137674 jz 0x001377b4
		001377b4: CONDITIONAL_JUMP
		0013767c: FALL_THROUGH

	[0013767c]
		001375e0: FALL_THROUGH
 	0013767c sourceline 0xc56
 	00137684 mov ax,0x1
 	00137690 mov bx,ax
 	0013769c mov mar,0x3cef20
 	001376a8 mov ax,mar
 	001376b4 push op
 	001376bc mov op,ax
 	001376c4 farpush bx
 	001376cc setfuncargs 0x1
 	001376d4 mov ax,0x69ef20
 	001376e0 farcall ax
 	001376e8 farsubsp 0x1
 	001376f0 pop op
 	001376f8 sourceline 0xc57
 	00137700 push op
 	00137708 mov ax,0x2ba260
 	00137714 farpush ax
 	0013771c mov ax,0x138
 	00137728 farpush ax
 	00137730 mov ax,0x92
 	0013773c farpush ax
 	00137744 mov ax,0x0
 	00137750 farpush ax
 	00137758 mov mar,0x3cef20
 	00137764 mov ax,mar
 	00137770 mov op,ax
 	00137778 setfuncargs 0x4
 	00137780 mov ax,0x6aef20
 	0013778c farcall ax
 	00137794 farsubsp 0x4
 	0013779c pop op
 	001377a4 sourceline 0xc58
 	001377ac jmp 0x00137e3c
		00137e3c: UNCONDITIONAL_JUMP

	[001377b4]
		001375e0: CONDITIONAL_JUMP
 	001377b4 sourceline 0xc5a
 	001377bc mov mar,0x3cef20
 	001377c8 mov ax,mar
 	001377d4 push op
 	001377dc mov op,ax
 	001377e4 setfuncargs 0x0
 	001377ec mov ax,0x89ef20
 	001377f8 farcall ax
 	00137800 pop op
 	00137808 push ax
 	00137810 mov mar,0x8b6f20
 	0013781c mov ax,mar
 	00137828 pop bx
 	00137830 cmpeq bx,ax
 	0013783c mov ax,bx
 	00137848 jnz 0x00137904
		00137904: CONDITIONAL_JUMP
		00137850: FALL_THROUGH

	[00137850]
		001377b4: FALL_THROUGH
 	00137850 push ax
 	00137858 mov mar,0x3cef20
 	00137864 mov ax,mar
 	00137870 push op
 	00137878 mov op,ax
 	00137880 setfuncargs 0x0
 	00137888 mov ax,0x89ef20
 	00137894 farcall ax
 	0013789c pop op
 	001378a4 push ax
 	001378ac mov mar,0x8bef20
 	001378b8 mov ax,mar
 	001378c4 pop bx
 	001378cc cmpeq bx,ax
 	001378d8 mov ax,bx
 	001378e4 pop bx
 	001378ec lor bx,ax
 	001378f8 mov ax,bx
		00137904: FALL_THROUGH

	[00137904]
		001377b4: CONDITIONAL_JUMP
		00137850: FALL_THROUGH
 	00137904 jz 0x00137a44
		00137a44: CONDITIONAL_JUMP
		0013790c: FALL_THROUGH

	[0013790c]
		00137904: FALL_THROUGH
 	0013790c sourceline 0xc5c
 	00137914 mov ax,0x1
 	00137920 mov bx,ax
 	0013792c mov mar,0x3cef20
 	00137938 mov ax,mar
 	00137944 push op
 	0013794c mov op,ax
 	00137954 farpush bx
 	0013795c setfuncargs 0x1
 	00137964 mov ax,0x69ef20
 	00137970 farcall ax
 	00137978 farsubsp 0x1
 	00137980 pop op
 	00137988 sourceline 0xc5d
 	00137990 push op
 	00137998 mov ax,0x2ba2b0
 	001379a4 farpush ax
 	001379ac mov ax,0x138
 	001379b8 farpush ax
 	001379c0 mov ax,0x92
 	001379cc farpush ax
 	001379d4 mov ax,0x0
 	001379e0 farpush ax
 	001379e8 mov mar,0x3cef20
 	001379f4 mov ax,mar
 	00137a00 mov op,ax
 	00137a08 setfuncargs 0x4
 	00137a10 mov ax,0x6aef20
 	00137a1c farcall ax
 	00137a24 farsubsp 0x4
 	00137a2c pop op
 	00137a34 sourceline 0xc5e
 	00137a3c jmp 0x00137e3c
		00137e3c: UNCONDITIONAL_JUMP

	[00137a44]
		00137904: CONDITIONAL_JUMP
 	00137a44 sourceline 0xc60
 	00137a4c mov mar,0x3cef20
 	00137a58 mov ax,mar
 	00137a64 push op
 	00137a6c mov op,ax
 	00137a74 setfuncargs 0x0
 	00137a7c mov ax,0x89ef20
 	00137a88 farcall ax
 	00137a90 pop op
 	00137a98 push ax
 	00137aa0 mov mar,0x90ef20
 	00137aac mov ax,mar
 	00137ab8 pop bx
 	00137ac0 cmpeq bx,ax
 	00137acc mov ax,bx
 	00137ad8 jz 0x00137c18
		00137c18: CONDITIONAL_JUMP
		00137ae0: FALL_THROUGH

	[00137ae0]
		00137a44: FALL_THROUGH
 	00137ae0 sourceline 0xc62
 	00137ae8 mov ax,0x1
 	00137af4 mov bx,ax
 	00137b00 mov mar,0x3cef20
 	00137b0c mov ax,mar
 	00137b18 push op
 	00137b20 mov op,ax
 	00137b28 farpush bx
 	00137b30 setfuncargs 0x1
 	00137b38 mov ax,0x69ef20
 	00137b44 farcall ax
 	00137b4c farsubsp 0x1
 	00137b54 pop op
 	00137b5c sourceline 0xc63
 	00137b64 push op
 	00137b6c mov ax,0x2ba2e8
 	00137b78 farpush ax
 	00137b80 mov ax,0x138
 	00137b8c farpush ax
 	00137b94 mov ax,0x92
 	00137ba0 farpush ax
 	00137ba8 mov ax,0x0
 	00137bb4 farpush ax
 	00137bbc mov mar,0x3cef20
 	00137bc8 mov ax,mar
 	00137bd4 mov op,ax
 	00137bdc setfuncargs 0x4
 	00137be4 mov ax,0x6aef20
 	00137bf0 farcall ax
 	00137bf8 farsubsp 0x4
 	00137c00 pop op
 	00137c08 sourceline 0xc64
 	00137c10 jmp 0x00137e3c
		00137e3c: UNCONDITIONAL_JUMP

	[00137c18]
		00137a44: CONDITIONAL_JUMP
 	00137c18 sourceline 0xc66
 	00137c20 mov mar,0x3cef20
 	00137c2c mov ax,mar
 	00137c38 push op
 	00137c40 mov op,ax
 	00137c48 setfuncargs 0x0
 	00137c50 mov ax,0x89ef20
 	00137c5c farcall ax
 	00137c64 pop op
 	00137c6c push ax
 	00137c74 mov mar,0x936f20
 	00137c80 mov ax,mar
 	00137c8c pop bx
 	00137c94 cmpeq bx,ax
 	00137ca0 mov ax,bx
 	00137cac jz 0x00137dec
		00137dec: CONDITIONAL_JUMP
		00137cb4: FALL_THROUGH

	[00137cb4]
		00137c18: FALL_THROUGH
 	00137cb4 sourceline 0xc68
 	00137cbc mov ax,0x1
 	00137cc8 mov bx,ax
 	00137cd4 mov mar,0x3cef20
 	00137ce0 mov ax,mar
 	00137cec push op
 	00137cf4 mov op,ax
 	00137cfc farpush bx
 	00137d04 setfuncargs 0x1
 	00137d0c mov ax,0x69ef20
 	00137d18 farcall ax
 	00137d20 farsubsp 0x1
 	00137d28 pop op
 	00137d30 sourceline 0xc69
 	00137d38 push op
 	00137d40 mov ax,0x2ba345
 	00137d4c farpush ax
 	00137d54 mov ax,0x138
 	00137d60 farpush ax
 	00137d68 mov ax,0x92
 	00137d74 farpush ax
 	00137d7c mov ax,0x0
 	00137d88 farpush ax
 	00137d90 mov mar,0x3cef20
 	00137d9c mov ax,mar
 	00137da8 mov op,ax
 	00137db0 setfuncargs 0x4
 	00137db8 mov ax,0x6aef20
 	00137dc4 farcall ax
 	00137dcc farsubsp 0x4
 	00137dd4 pop op
 	00137ddc sourceline 0xc6a
 	00137de4 jmp 0x00137e3c
		00137e3c: UNCONDITIONAL_JUMP

	[00137dec]
		00137c18: CONDITIONAL_JUMP
 	00137dec sourceline 0xc6c
 	00137df4 mov ax,0x3
 	00137e00 push ax
 	00137e08 mov ax,0x5
 	00137e14 push ax
 	00137e1c mov ax,0x10ae5c
 	00137e28 call ax
 	00137e30 sub sp,0x8
		00137e3c: FALL_THROUGH

	[00137e3c]
		001372d4: UNCONDITIONAL_JUMP
		001374a8: UNCONDITIONAL_JUMP
		0013767c: UNCONDITIONAL_JUMP
		0013790c: UNCONDITIONAL_JUMP
		00137ae0: UNCONDITIONAL_JUMP
		00137cb4: UNCONDITIONAL_JUMP
		00137dec: FALL_THROUGH
 	00137e3c sourceline 0xc6d
 	00137e44 mov ax,0x0
 	00137e50 ret

iPeroxie_UseInv$0:
	[00137e54]
 	00137e54 sourceline 0xc72
 	00137e5c thisaddr
 	00137e64 sourceline 0xc73
 	00137e6c mov ax,0x1
 	00137e78 mov bx,ax
*	00137e84 mov mar,0x3cef20
 	00137e90 mov ax,mar
 	00137e9c push op
 	00137ea4 mov op,ax
 	00137eac farpush bx
 	00137eb4 setfuncargs 0x1
 	00137ebc mov ax,0x69ef20
 	00137ec8 farcall ax
 	00137ed0 farsubsp 0x1
 	00137ed8 pop op
 	00137ee0 sourceline 0xc74
 	00137ee8 mov mar,0x3cef20
 	00137ef4 mov ax,mar
 	00137f00 push op
 	00137f08 mov op,ax
 	00137f10 setfuncargs 0x0
 	00137f18 mov ax,0x89ef20
 	00137f24 farcall ax
 	00137f2c pop op
 	00137f34 push ax
 	00137f3c mov mar,0x8e6f20
 	00137f48 mov ax,mar
 	00137f54 pop bx
 	00137f5c cmpeq bx,ax
 	00137f68 mov ax,bx
 	00137f74 jz 0x001384c8
		001384c8: CONDITIONAL_JUMP
		00137f7c: FALL_THROUGH

	[00137f7c]
		00137e54: FALL_THROUGH
 	00137f7c sourceline 0xc76
 	00137f84 mov mar,0xa26f20
 	00137f90 memread4 ax
 	00137f98 lnot ax
 	00137fa0 jz 0x00138064
		00138064: CONDITIONAL_JUMP
		00137fa8: FALL_THROUGH

	[00137fa8]
		00137f7c: FALL_THROUGH
 	00137fa8 sourceline 0xc78
 	00137fb0 push op
 	00137fb8 mov ax,0x2c7d07
 	00137fc4 farpush ax
 	00137fcc mov ax,0x138
 	00137fd8 farpush ax
 	00137fe0 mov ax,0x92
 	00137fec farpush ax
 	00137ff4 mov ax,0x0
 	00138000 farpush ax
 	00138008 mov mar,0x3cef20
 	00138014 mov ax,mar
 	00138020 mov op,ax
 	00138028 setfuncargs 0x4
 	00138030 mov ax,0x6aef20
 	0013803c farcall ax
 	00138044 farsubsp 0x4
 	0013804c pop op
 	00138054 sourceline 0xc79
 	0013805c jmp 0x001384b8
		001384b8: UNCONDITIONAL_JUMP

	[00138064]
		00137f7c: CONDITIONAL_JUMP
 	00138064 sourceline 0xc7c
 	0013806c mov mar,sp
 	00138078 memzero 0x4
 	00138080 add sp,0x4
 	0013808c sourceline 0xc7d
 	00138094 mov ax,0x0
 	001380a0 mov mar,sp
 	001380ac memwrite4 ax
 	001380b4 add sp,0x4
		001380c0: FALL_THROUGH

	[001380c0]
		00138234: UNCONDITIONAL_JUMP
		00138064: FALL_THROUGH
 	001380c0 stackptr 0x4
 	001380c8 memread4 ax
 	001380d0 push ax
 	001380d8 mov mar,0x63ef20
 	001380e4 mov ax,mar
 	001380f0 push op
 	001380f8 mov op,ax
 	00138100 setfuncargs 0x0
 	00138108 mov ax,0x646f20
 	00138114 farcall ax
 	0013811c pop op
 	00138124 pop bx
 	0013812c cmplt bx,ax
 	00138138 mov ax,bx
 	00138144 jz 0x00138260
		00138260: CONDITIONAL_JUMP
		0013814c: FALL_THROUGH

	[0013814c]
		001380c0: FALL_THROUGH
 	0013814c sourceline 0xc7e
 	00138154 stackptr 0x4
 	0013815c memread4 ax
 	00138164 mov dx,ax
 	00138170 mov mar,0x63ef20
 	0013817c mov ax,mar
 	00138188 push op
 	00138190 mov op,ax
 	00138198 farpush dx
 	001381a0 setfuncargs 0x1
 	001381a8 mov ax,0x7c6f20
 	001381b4 farcall ax
 	001381bc farsubsp 0x1
 	001381c4 pop op
 	001381cc push ax
 	001381d4 mov mar,0x8c6f20
 	001381e0 mov ax,mar
 	001381ec pop bx
 	001381f4 cmpeq bx,ax
 	00138200 mov ax,bx
 	0013820c jz 0x00138234
		00138234: CONDITIONAL_JUMP
		00138214: FALL_THROUGH

	[00138214]
		0013814c: FALL_THROUGH
 	00138214 stackptr 0x4
 	0013821c memread4 ax
 	00138224 stackptr 0x8
 	0013822c memwrite4 ax
		00138234: FALL_THROUGH

	[00138234]
		0013814c: CONDITIONAL_JUMP
		00138214: FALL_THROUGH
 	00138234 stackptr 0x4
 	0013823c memread4 ax
 	00138244 add ax,0x1
 	00138250 memwrite4 ax
 	00138258 jmp 0x001380c0
		001380c0: UNCONDITIONAL_JUMP

	[00138260]
		001380c0: CONDITIONAL_JUMP
 	00138260 sub sp,0x4
 	0013826c sourceline 0xc7f
 	00138274 push op
 	0013827c mov mar,0x8c6f20
 	00138288 mov ax,mar
 	00138294 farpush ax
 	0013829c mov mar,0x3cef20
 	001382a8 mov ax,mar
 	001382b4 mov op,ax
 	001382bc setfuncargs 0x1
 	001382c4 mov ax,0x7d6f20
 	001382d0 farcall ax
 	001382d8 farsubsp 0x1
 	001382e0 pop op
 	001382e8 sourceline 0xc80
 	001382f0 push op
 	001382f8 mov mar,0x8e6f20
 	00138304 mov ax,mar
 	00138310 farpush ax
 	00138318 mov mar,0x3cef20
 	00138324 mov ax,mar
 	00138330 mov op,ax
 	00138338 setfuncargs 0x1
 	00138340 mov ax,0x7d6f20
 	0013834c farcall ax
 	00138354 farsubsp 0x1
 	0013835c pop op
 	00138364 sourceline 0xc81
 	0013836c push op
 	00138374 stackptr 0x8
 	0013837c memread4 ax
 	00138384 farpush ax
 	0013838c mov mar,0x96ef20
 	00138398 mov ax,mar
 	001383a4 farpush ax
 	001383ac mov mar,0x3cef20
 	001383b8 mov ax,mar
 	001383c4 mov op,ax
 	001383cc setfuncargs 0x2
 	001383d4 mov ax,0x7e6f20
 	001383e0 farcall ax
 	001383e8 farsubsp 0x2
 	001383f0 pop op
 	001383f8 sourceline 0xc82
 	00138400 push op
 	00138408 mov ax,0x2ba3cb
 	00138414 farpush ax
 	0013841c mov ax,0x138
 	00138428 farpush ax
 	00138430 mov ax,0x92
 	0013843c farpush ax
 	00138444 mov ax,0x0
 	00138450 farpush ax
 	00138458 mov mar,0x3cef20
 	00138464 mov ax,mar
 	00138470 mov op,ax
 	00138478 setfuncargs 0x4
 	00138480 mov ax,0x6aef20
 	0013848c farcall ax
 	00138494 farsubsp 0x4
 	0013849c pop op
 	001384a4 sourceline 0xc83
 	001384ac sub sp,0x4
		001384b8: FALL_THROUGH

	[001384b8]
		00137fa8: UNCONDITIONAL_JUMP
		00138260: FALL_THROUGH
 	001384b8 sourceline 0xc84
 	001384c0 jmp 0x0013ab44
		0013ab44: UNCONDITIONAL_JUMP

	[001384c8]
		00137e54: CONDITIONAL_JUMP
 	001384c8 sourceline 0xc86
 	001384d0 mov mar,0x3cef20
 	001384dc mov ax,mar
 	001384e8 push op
 	001384f0 mov op,ax
 	001384f8 setfuncargs 0x0
 	00138500 mov ax,0x89ef20
 	0013850c farcall ax
 	00138514 pop op
 	0013851c push ax
 	00138524 mov mar,0x8cef20
 	00138530 mov ax,mar
 	0013853c pop bx
 	00138544 cmpeq bx,ax
 	00138550 mov ax,bx
 	0013855c jnz 0x00138618
		00138618: CONDITIONAL_JUMP
		00138564: FALL_THROUGH

	[00138564]
		001384c8: FALL_THROUGH
 	00138564 push ax
 	0013856c mov mar,0x3cef20
 	00138578 mov ax,mar
 	00138584 push op
 	0013858c mov op,ax
 	00138594 setfuncargs 0x0
 	0013859c mov ax,0x89ef20
 	001385a8 farcall ax
 	001385b0 pop op
 	001385b8 push ax
 	001385c0 mov mar,0x8d6f20
 	001385cc mov ax,mar
 	001385d8 pop bx
 	001385e0 cmpeq bx,ax
 	001385ec mov ax,bx
 	001385f8 pop bx
 	00138600 lor bx,ax
 	0013860c mov ax,bx
		00138618: FALL_THROUGH

	[00138618]
		001384c8: CONDITIONAL_JUMP
		00138564: FALL_THROUGH
 	00138618 jnz 0x001386d4
		001386d4: CONDITIONAL_JUMP
		00138620: FALL_THROUGH

	[00138620]
		00138618: FALL_THROUGH
 	00138620 push ax
 	00138628 mov mar,0x3cef20
 	00138634 mov ax,mar
 	00138640 push op
 	00138648 mov op,ax
 	00138650 setfuncargs 0x0
 	00138658 mov ax,0x89ef20
 	00138664 farcall ax
 	0013866c pop op
 	00138674 push ax
 	0013867c mov mar,0x8b6f20
 	00138688 mov ax,mar
 	00138694 pop bx
 	0013869c cmpeq bx,ax
 	001386a8 mov ax,bx
 	001386b4 pop bx
 	001386bc lor bx,ax
 	001386c8 mov ax,bx
		001386d4: FALL_THROUGH

	[001386d4]
		00138618: CONDITIONAL_JUMP
		00138620: FALL_THROUGH
 	001386d4 jnz 0x00138790
		00138790: CONDITIONAL_JUMP
		001386dc: FALL_THROUGH

	[001386dc]
		001386d4: FALL_THROUGH
 	001386dc push ax
 	001386e4 mov mar,0x3cef20
 	001386f0 mov ax,mar
 	001386fc push op
 	00138704 mov op,ax
 	0013870c setfuncargs 0x0
 	00138714 mov ax,0x89ef20
 	00138720 farcall ax
 	00138728 pop op
 	00138730 push ax
 	00138738 mov mar,0x8bef20
 	00138744 mov ax,mar
 	00138750 pop bx
 	00138758 cmpeq bx,ax
 	00138764 mov ax,bx
 	00138770 pop bx
 	00138778 lor bx,ax
 	00138784 mov ax,bx
		00138790: FALL_THROUGH

	[00138790]
		001386d4: CONDITIONAL_JUMP
		001386dc: FALL_THROUGH
 	00138790 jnz 0x0013884c
		0013884c: CONDITIONAL_JUMP
		00138798: FALL_THROUGH

	[00138798]
		00138790: FALL_THROUGH
 	00138798 push ax
 	001387a0 mov mar,0x3cef20
 	001387ac mov ax,mar
 	001387b8 push op
 	001387c0 mov op,ax
 	001387c8 setfuncargs 0x0
 	001387d0 mov ax,0x89ef20
 	001387dc farcall ax
 	001387e4 pop op
 	001387ec push ax
 	001387f4 mov mar,0x8a6f20
 	00138800 mov ax,mar
 	0013880c pop bx
 	00138814 cmpeq bx,ax
 	00138820 mov ax,bx
 	0013882c pop bx
 	00138834 lor bx,ax
 	00138840 mov ax,bx
		0013884c: FALL_THROUGH

	[0013884c]
		00138790: CONDITIONAL_JUMP
		00138798: FALL_THROUGH
 	0013884c jnz 0x00138908
		00138908: CONDITIONAL_JUMP
		00138854: FALL_THROUGH

	[00138854]
		0013884c: FALL_THROUGH
 	00138854 push ax
 	0013885c mov mar,0x3cef20
 	00138868 mov ax,mar
 	00138874 push op
 	0013887c mov op,ax
 	00138884 setfuncargs 0x0
 	0013888c mov ax,0x89ef20
 	00138898 farcall ax
 	001388a0 pop op
 	001388a8 push ax
 	001388b0 mov mar,0x7cef20
 	001388bc mov ax,mar
 	001388c8 pop bx
 	001388d0 cmpeq bx,ax
 	001388dc mov ax,bx
 	001388e8 pop bx
 	001388f0 lor bx,ax
 	001388fc mov ax,bx
		00138908: FALL_THROUGH

	[00138908]
		0013884c: CONDITIONAL_JUMP
		00138854: FALL_THROUGH
 	00138908 jnz 0x001389c4
		001389c4: CONDITIONAL_JUMP
		00138910: FALL_THROUGH

	[00138910]
		00138908: FALL_THROUGH
 	00138910 push ax
 	00138918 mov mar,0x3cef20
 	00138924 mov ax,mar
 	00138930 push op
 	00138938 mov op,ax
 	00138940 setfuncargs 0x0
 	00138948 mov ax,0x89ef20
 	00138954 farcall ax
 	0013895c pop op
 	00138964 push ax
 	0013896c mov mar,0x7def20
 	00138978 mov ax,mar
 	00138984 pop bx
 	0013898c cmpeq bx,ax
 	00138998 mov ax,bx
 	001389a4 pop bx
 	001389ac lor bx,ax
 	001389b8 mov ax,bx
		001389c4: FALL_THROUGH

	[001389c4]
		00138908: CONDITIONAL_JUMP
		00138910: FALL_THROUGH
 	001389c4 jnz 0x00138a80
		00138a80: CONDITIONAL_JUMP
		001389cc: FALL_THROUGH

	[001389cc]
		001389c4: FALL_THROUGH
 	001389cc push ax
 	001389d4 mov mar,0x3cef20
 	001389e0 mov ax,mar
 	001389ec push op
 	001389f4 mov op,ax
 	001389fc setfuncargs 0x0
 	00138a04 mov ax,0x89ef20
 	00138a10 farcall ax
 	00138a18 pop op
 	00138a20 push ax
 	00138a28 mov mar,0x8def20
 	00138a34 mov ax,mar
 	00138a40 pop bx
 	00138a48 cmpeq bx,ax
 	00138a54 mov ax,bx
 	00138a60 pop bx
 	00138a68 lor bx,ax
 	00138a74 mov ax,bx
		00138a80: FALL_THROUGH

	[00138a80]
		001389c4: CONDITIONAL_JUMP
		001389cc: FALL_THROUGH
 	00138a80 jnz 0x00138b3c
		00138b3c: CONDITIONAL_JUMP
		00138a88: FALL_THROUGH

	[00138a88]
		00138a80: FALL_THROUGH
 	00138a88 push ax
 	00138a90 mov mar,0x3cef20
 	00138a9c mov ax,mar
 	00138aa8 push op
 	00138ab0 mov op,ax
 	00138ab8 setfuncargs 0x0
 	00138ac0 mov ax,0x89ef20
 	00138acc farcall ax
 	00138ad4 pop op
 	00138adc push ax
 	00138ae4 mov mar,0x9f6f20
 	00138af0 mov ax,mar
 	00138afc pop bx
 	00138b04 cmpeq bx,ax
 	00138b10 mov ax,bx
 	00138b1c pop bx
 	00138b24 lor bx,ax
 	00138b30 mov ax,bx
		00138b3c: FALL_THROUGH

	[00138b3c]
		00138a80: CONDITIONAL_JUMP
		00138a88: FALL_THROUGH
 	00138b3c jnz 0x00138bf8
		00138bf8: CONDITIONAL_JUMP
		00138b44: FALL_THROUGH

	[00138b44]
		00138b3c: FALL_THROUGH
 	00138b44 push ax
 	00138b4c mov mar,0x3cef20
 	00138b58 mov ax,mar
 	00138b64 push op
 	00138b6c mov op,ax
 	00138b74 setfuncargs 0x0
 	00138b7c mov ax,0x89ef20
 	00138b88 farcall ax
 	00138b90 pop op
 	00138b98 push ax
 	00138ba0 mov mar,0x9eef20
 	00138bac mov ax,mar
 	00138bb8 pop bx
 	00138bc0 cmpeq bx,ax
 	00138bcc mov ax,bx
 	00138bd8 pop bx
 	00138be0 lor bx,ax
 	00138bec mov ax,bx
		00138bf8: FALL_THROUGH

	[00138bf8]
		00138b3c: CONDITIONAL_JUMP
		00138b44: FALL_THROUGH
 	00138bf8 jnz 0x00138cb4
		00138cb4: CONDITIONAL_JUMP
		00138c00: FALL_THROUGH

	[00138c00]
		00138bf8: FALL_THROUGH
 	00138c00 push ax
 	00138c08 mov mar,0x3cef20
 	00138c14 mov ax,mar
 	00138c20 push op
 	00138c28 mov op,ax
 	00138c30 setfuncargs 0x0
 	00138c38 mov ax,0x89ef20
 	00138c44 farcall ax
 	00138c4c pop op
 	00138c54 push ax
 	00138c5c mov mar,0x99ef20
 	00138c68 mov ax,mar
 	00138c74 pop bx
 	00138c7c cmpeq bx,ax
 	00138c88 mov ax,bx
 	00138c94 pop bx
 	00138c9c lor bx,ax
 	00138ca8 mov ax,bx
		00138cb4: FALL_THROUGH

	[00138cb4]
		00138bf8: CONDITIONAL_JUMP
		00138c00: FALL_THROUGH
 	00138cb4 jnz 0x00138d70
		00138d70: CONDITIONAL_JUMP
		00138cbc: FALL_THROUGH

	[00138cbc]
		00138cb4: FALL_THROUGH
 	00138cbc push ax
 	00138cc4 mov mar,0x3cef20
 	00138cd0 mov ax,mar
 	00138cdc push op
 	00138ce4 mov op,ax
 	00138cec setfuncargs 0x0
 	00138cf4 mov ax,0x89ef20
 	00138d00 farcall ax
 	00138d08 pop op
 	00138d10 push ax
 	00138d18 mov mar,0x9e6f20
 	00138d24 mov ax,mar
 	00138d30 pop bx
 	00138d38 cmpeq bx,ax
 	00138d44 mov ax,bx
 	00138d50 pop bx
 	00138d58 lor bx,ax
 	00138d64 mov ax,bx
		00138d70: FALL_THROUGH

	[00138d70]
		00138cb4: CONDITIONAL_JUMP
		00138cbc: FALL_THROUGH
 	00138d70 jnz 0x00138e2c
		00138e2c: CONDITIONAL_JUMP
		00138d78: FALL_THROUGH

	[00138d78]
		00138d70: FALL_THROUGH
 	00138d78 push ax
 	00138d80 mov mar,0x3cef20
 	00138d8c mov ax,mar
 	00138d98 push op
 	00138da0 mov op,ax
 	00138da8 setfuncargs 0x0
 	00138db0 mov ax,0x89ef20
 	00138dbc farcall ax
 	00138dc4 pop op
 	00138dcc push ax
 	00138dd4 mov mar,0x8aef20
 	00138de0 mov ax,mar
 	00138dec pop bx
 	00138df4 cmpeq bx,ax
 	00138e00 mov ax,bx
 	00138e0c pop bx
 	00138e14 lor bx,ax
 	00138e20 mov ax,bx
		00138e2c: FALL_THROUGH

	[00138e2c]
		00138d70: CONDITIONAL_JUMP
		00138d78: FALL_THROUGH
 	00138e2c jnz 0x00138ee8
		00138ee8: CONDITIONAL_JUMP
		00138e34: FALL_THROUGH

	[00138e34]
		00138e2c: FALL_THROUGH
 	00138e34 push ax
 	00138e3c mov mar,0x3cef20
 	00138e48 mov ax,mar
 	00138e54 push op
 	00138e5c mov op,ax
 	00138e64 setfuncargs 0x0
 	00138e6c mov ax,0x89ef20
 	00138e78 farcall ax
 	00138e80 pop op
 	00138e88 push ax
 	00138e90 mov mar,0x9c6f20
 	00138e9c mov ax,mar
 	00138ea8 pop bx
 	00138eb0 cmpeq bx,ax
 	00138ebc mov ax,bx
 	00138ec8 pop bx
 	00138ed0 lor bx,ax
 	00138edc mov ax,bx
		00138ee8: FALL_THROUGH

	[00138ee8]
		00138e2c: CONDITIONAL_JUMP
		00138e34: FALL_THROUGH
 	00138ee8 jnz 0x00138fa4
		00138fa4: CONDITIONAL_JUMP
		00138ef0: FALL_THROUGH

	[00138ef0]
		00138ee8: FALL_THROUGH
 	00138ef0 push ax
 	00138ef8 mov mar,0x3cef20
 	00138f04 mov ax,mar
 	00138f10 push op
 	00138f18 mov op,ax
 	00138f20 setfuncargs 0x0
 	00138f28 mov ax,0x89ef20
 	00138f34 farcall ax
 	00138f3c pop op
 	00138f44 push ax
 	00138f4c mov mar,0x9cef20
 	00138f58 mov ax,mar
 	00138f64 pop bx
 	00138f6c cmpeq bx,ax
 	00138f78 mov ax,bx
 	00138f84 pop bx
 	00138f8c lor bx,ax
 	00138f98 mov ax,bx
		00138fa4: FALL_THROUGH

	[00138fa4]
		00138ee8: CONDITIONAL_JUMP
		00138ef0: FALL_THROUGH
 	00138fa4 jnz 0x00139060
		00139060: CONDITIONAL_JUMP
		00138fac: FALL_THROUGH

	[00138fac]
		00138fa4: FALL_THROUGH
 	00138fac push ax
 	00138fb4 mov mar,0x3cef20
 	00138fc0 mov ax,mar
 	00138fcc push op
 	00138fd4 mov op,ax
 	00138fdc setfuncargs 0x0
 	00138fe4 mov ax,0x89ef20
 	00138ff0 farcall ax
 	00138ff8 pop op
 	00139000 push ax
 	00139008 mov mar,0x9d6f20
 	00139014 mov ax,mar
 	00139020 pop bx
 	00139028 cmpeq bx,ax
 	00139034 mov ax,bx
 	00139040 pop bx
 	00139048 lor bx,ax
 	00139054 mov ax,bx
		00139060: FALL_THROUGH

	[00139060]
		00138fa4: CONDITIONAL_JUMP
		00138fac: FALL_THROUGH
 	00139060 jnz 0x0013911c
		0013911c: CONDITIONAL_JUMP
		00139068: FALL_THROUGH

	[00139068]
		00139060: FALL_THROUGH
 	00139068 push ax
 	00139070 mov mar,0x3cef20
 	0013907c mov ax,mar
 	00139088 push op
 	00139090 mov op,ax
 	00139098 setfuncargs 0x0
 	001390a0 mov ax,0x89ef20
 	001390ac farcall ax
 	001390b4 pop op
 	001390bc push ax
 	001390c4 mov mar,0xa0ef20
 	001390d0 mov ax,mar
 	001390dc pop bx
 	001390e4 cmpeq bx,ax
 	001390f0 mov ax,bx
 	001390fc pop bx
 	00139104 lor bx,ax
 	00139110 mov ax,bx
		0013911c: FALL_THROUGH

	[0013911c]
		00139060: CONDITIONAL_JUMP
		00139068: FALL_THROUGH
 	0013911c jnz 0x001391d8
		001391d8: CONDITIONAL_JUMP
		00139124: FALL_THROUGH

	[00139124]
		0013911c: FALL_THROUGH
 	00139124 push ax
 	0013912c mov mar,0x3cef20
 	00139138 mov ax,mar
 	00139144 push op
 	0013914c mov op,ax
 	00139154 setfuncargs 0x0
 	0013915c mov ax,0x89ef20
 	00139168 farcall ax
 	00139170 pop op
 	00139178 push ax
 	00139180 mov mar,0x8eef20
 	0013918c mov ax,mar
 	00139198 pop bx
 	001391a0 cmpeq bx,ax
 	001391ac mov ax,bx
 	001391b8 pop bx
 	001391c0 lor bx,ax
 	001391cc mov ax,bx
		001391d8: FALL_THROUGH

	[001391d8]
		0013911c: CONDITIONAL_JUMP
		00139124: FALL_THROUGH
 	001391d8 jnz 0x00139294
		00139294: CONDITIONAL_JUMP
		001391e0: FALL_THROUGH

	[001391e0]
		001391d8: FALL_THROUGH
 	001391e0 push ax
 	001391e8 mov mar,0x3cef20
 	001391f4 mov ax,mar
 	00139200 push op
 	00139208 mov op,ax
 	00139210 setfuncargs 0x0
 	00139218 mov ax,0x89ef20
 	00139224 farcall ax
 	0013922c pop op
 	00139234 push ax
 	0013923c mov mar,0x9def20
 	00139248 mov ax,mar
 	00139254 pop bx
 	0013925c cmpeq bx,ax
 	00139268 mov ax,bx
 	00139274 pop bx
 	0013927c lor bx,ax
 	00139288 mov ax,bx
		00139294: FALL_THROUGH

	[00139294]
		001391d8: CONDITIONAL_JUMP
		001391e0: FALL_THROUGH
 	00139294 jnz 0x00139350
		00139350: CONDITIONAL_JUMP
		0013929c: FALL_THROUGH

	[0013929c]
		00139294: FALL_THROUGH
 	0013929c push ax
 	001392a4 mov mar,0x3cef20
 	001392b0 mov ax,mar
 	001392bc push op
 	001392c4 mov op,ax
 	001392cc setfuncargs 0x0
 	001392d4 mov ax,0x89ef20
 	001392e0 farcall ax
 	001392e8 pop op
 	001392f0 push ax
 	001392f8 mov mar,0x9aef20
 	00139304 mov ax,mar
 	00139310 pop bx
 	00139318 cmpeq bx,ax
 	00139324 mov ax,bx
 	00139330 pop bx
 	00139338 lor bx,ax
 	00139344 mov ax,bx
		00139350: FALL_THROUGH

	[00139350]
		00139294: CONDITIONAL_JUMP
		0013929c: FALL_THROUGH
 	00139350 jnz 0x0013940c
		0013940c: CONDITIONAL_JUMP
		00139358: FALL_THROUGH

	[00139358]
		00139350: FALL_THROUGH
 	00139358 push ax
 	00139360 mov mar,0x3cef20
 	0013936c mov ax,mar
 	00139378 push op
 	00139380 mov op,ax
 	00139388 setfuncargs 0x0
 	00139390 mov ax,0x89ef20
 	0013939c farcall ax
 	001393a4 pop op
 	001393ac push ax
 	001393b4 mov mar,0xa06f20
 	001393c0 mov ax,mar
 	001393cc pop bx
 	001393d4 cmpeq bx,ax
 	001393e0 mov ax,bx
 	001393ec pop bx
 	001393f4 lor bx,ax
 	00139400 mov ax,bx
		0013940c: FALL_THROUGH

	[0013940c]
		00139350: CONDITIONAL_JUMP
		00139358: FALL_THROUGH
 	0013940c jnz 0x001394c8
		001394c8: CONDITIONAL_JUMP
		00139414: FALL_THROUGH

	[00139414]
		0013940c: FALL_THROUGH
 	00139414 push ax
 	0013941c mov mar,0x3cef20
 	00139428 mov ax,mar
 	00139434 push op
 	0013943c mov op,ax
 	00139444 setfuncargs 0x0
 	0013944c mov ax,0x89ef20
 	00139458 farcall ax
 	00139460 pop op
 	00139468 push ax
 	00139470 mov mar,0x9fef20
 	0013947c mov ax,mar
 	00139488 pop bx
 	00139490 cmpeq bx,ax
 	0013949c mov ax,bx
 	001394a8 pop bx
 	001394b0 lor bx,ax
 	001394bc mov ax,bx
		001394c8: FALL_THROUGH

	[001394c8]
		0013940c: CONDITIONAL_JUMP
		00139414: FALL_THROUGH
 	001394c8 jnz 0x00139584
		00139584: CONDITIONAL_JUMP
		001394d0: FALL_THROUGH

	[001394d0]
		001394c8: FALL_THROUGH
 	001394d0 push ax
 	001394d8 mov mar,0x3cef20
 	001394e4 mov ax,mar
 	001394f0 push op
 	001394f8 mov op,ax
 	00139500 setfuncargs 0x0
 	00139508 mov ax,0x89ef20
 	00139514 farcall ax
 	0013951c pop op
 	00139524 push ax
 	0013952c mov mar,0x9b6f20
 	00139538 mov ax,mar
 	00139544 pop bx
 	0013954c cmpeq bx,ax
 	00139558 mov ax,bx
 	00139564 pop bx
 	0013956c lor bx,ax
 	00139578 mov ax,bx
		00139584: FALL_THROUGH

	[00139584]
		001394c8: CONDITIONAL_JUMP
		001394d0: FALL_THROUGH
 	00139584 jnz 0x00139640
		00139640: CONDITIONAL_JUMP
		0013958c: FALL_THROUGH

	[0013958c]
		00139584: FALL_THROUGH
 	0013958c push ax
 	00139594 mov mar,0x3cef20
 	001395a0 mov ax,mar
 	001395ac push op
 	001395b4 mov op,ax
 	001395bc setfuncargs 0x0
 	001395c4 mov ax,0x89ef20
 	001395d0 farcall ax
 	001395d8 pop op
 	001395e0 push ax
 	001395e8 mov mar,0x9bef20
 	001395f4 mov ax,mar
 	00139600 pop bx
 	00139608 cmpeq bx,ax
 	00139614 mov ax,bx
 	00139620 pop bx
 	00139628 lor bx,ax
 	00139634 mov ax,bx
		00139640: FALL_THROUGH

	[00139640]
		00139584: CONDITIONAL_JUMP
		0013958c: FALL_THROUGH
 	00139640 jnz 0x001396fc
		001396fc: CONDITIONAL_JUMP
		00139648: FALL_THROUGH

	[00139648]
		00139640: FALL_THROUGH
 	00139648 push ax
 	00139650 mov mar,0x3cef20
 	0013965c mov ax,mar
 	00139668 push op
 	00139670 mov op,ax
 	00139678 setfuncargs 0x0
 	00139680 mov ax,0x89ef20
 	0013968c farcall ax
 	00139694 pop op
 	0013969c push ax
 	001396a4 mov mar,0x8f6f20
 	001396b0 mov ax,mar
 	001396bc pop bx
 	001396c4 cmpeq bx,ax
 	001396d0 mov ax,bx
 	001396dc pop bx
 	001396e4 lor bx,ax
 	001396f0 mov ax,bx
		001396fc: FALL_THROUGH

	[001396fc]
		00139640: CONDITIONAL_JUMP
		00139648: FALL_THROUGH
 	001396fc jnz 0x001397b8
		001397b8: CONDITIONAL_JUMP
		00139704: FALL_THROUGH

	[00139704]
		001396fc: FALL_THROUGH
 	00139704 push ax
 	0013970c mov mar,0x3cef20
 	00139718 mov ax,mar
 	00139724 push op
 	0013972c mov op,ax
 	00139734 setfuncargs 0x0
 	0013973c mov ax,0x89ef20
 	00139748 farcall ax
 	00139750 pop op
 	00139758 push ax
 	00139760 mov mar,0x97ef20
 	0013976c mov ax,mar
 	00139778 pop bx
 	00139780 cmpeq bx,ax
 	0013978c mov ax,bx
 	00139798 pop bx
 	001397a0 lor bx,ax
 	001397ac mov ax,bx
		001397b8: FALL_THROUGH

	[001397b8]
		001396fc: CONDITIONAL_JUMP
		00139704: FALL_THROUGH
 	001397b8 jnz 0x00139874
		00139874: CONDITIONAL_JUMP
		001397c0: FALL_THROUGH

	[001397c0]
		001397b8: FALL_THROUGH
 	001397c0 push ax
 	001397c8 mov mar,0x3cef20
 	001397d4 mov ax,mar
 	001397e0 push op
 	001397e8 mov op,ax
 	001397f0 setfuncargs 0x0
 	001397f8 mov ax,0x89ef20
 	00139804 farcall ax
 	0013980c pop op
 	00139814 push ax
 	0013981c mov mar,0x90ef20
 	00139828 mov ax,mar
 	00139834 pop bx
 	0013983c cmpeq bx,ax
 	00139848 mov ax,bx
 	00139854 pop bx
 	0013985c lor bx,ax
 	00139868 mov ax,bx
		00139874: FALL_THROUGH

	[00139874]
		001397b8: CONDITIONAL_JUMP
		001397c0: FALL_THROUGH
 	00139874 jnz 0x00139930
		00139930: CONDITIONAL_JUMP
		0013987c: FALL_THROUGH

	[0013987c]
		00139874: FALL_THROUGH
 	0013987c push ax
 	00139884 mov mar,0x3cef20
 	00139890 mov ax,mar
 	0013989c push op
 	001398a4 mov op,ax
 	001398ac setfuncargs 0x0
 	001398b4 mov ax,0x89ef20
 	001398c0 farcall ax
 	001398c8 pop op
 	001398d0 push ax
 	001398d8 mov mar,0x8fef20
 	001398e4 mov ax,mar
 	001398f0 pop bx
 	001398f8 cmpeq bx,ax
 	00139904 mov ax,bx
 	00139910 pop bx
 	00139918 lor bx,ax
 	00139924 mov ax,bx
		00139930: FALL_THROUGH

	[00139930]
		00139874: CONDITIONAL_JUMP
		0013987c: FALL_THROUGH
 	00139930 jnz 0x001399ec
		001399ec: CONDITIONAL_JUMP
		00139938: FALL_THROUGH

	[00139938]
		00139930: FALL_THROUGH
 	00139938 push ax
 	00139940 mov mar,0x3cef20
 	0013994c mov ax,mar
 	00139958 push op
 	00139960 mov op,ax
 	00139968 setfuncargs 0x0
 	00139970 mov ax,0x89ef20
 	0013997c farcall ax
 	00139984 pop op
 	0013998c push ax
 	00139994 mov mar,0x976f20
 	001399a0 mov ax,mar
 	001399ac pop bx
 	001399b4 cmpeq bx,ax
 	001399c0 mov ax,bx
 	001399cc pop bx
 	001399d4 lor bx,ax
 	001399e0 mov ax,bx
		001399ec: FALL_THROUGH

	[001399ec]
		00139930: CONDITIONAL_JUMP
		00139938: FALL_THROUGH
 	001399ec jnz 0x00139aa8
		00139aa8: CONDITIONAL_JUMP
		001399f4: FALL_THROUGH

	[001399f4]
		001399ec: FALL_THROUGH
 	001399f4 push ax
 	001399fc mov mar,0x3cef20
 	00139a08 mov ax,mar
 	00139a14 push op
 	00139a1c mov op,ax
 	00139a24 setfuncargs 0x0
 	00139a2c mov ax,0x89ef20
 	00139a38 farcall ax
 	00139a40 pop op
 	00139a48 push ax
 	00139a50 mov mar,0x846f20
 	00139a5c mov ax,mar
 	00139a68 pop bx
 	00139a70 cmpeq bx,ax
 	00139a7c mov ax,bx
 	00139a88 pop bx
 	00139a90 lor bx,ax
 	00139a9c mov ax,bx
		00139aa8: FALL_THROUGH

	[00139aa8]
		001399ec: CONDITIONAL_JUMP
		001399f4: FALL_THROUGH
 	00139aa8 jnz 0x00139b64
		00139b64: CONDITIONAL_JUMP
		00139ab0: FALL_THROUGH

	[00139ab0]
		00139aa8: FALL_THROUGH
 	00139ab0 push ax
 	00139ab8 mov mar,0x3cef20
 	00139ac4 mov ax,mar
 	00139ad0 push op
 	00139ad8 mov op,ax
 	00139ae0 setfuncargs 0x0
 	00139ae8 mov ax,0x89ef20
 	00139af4 farcall ax
 	00139afc pop op
 	00139b04 push ax
 	00139b0c mov mar,0x916f20
 	00139b18 mov ax,mar
 	00139b24 pop bx
 	00139b2c cmpeq bx,ax
 	00139b38 mov ax,bx
 	00139b44 pop bx
 	00139b4c lor bx,ax
 	00139b58 mov ax,bx
		00139b64: FALL_THROUGH

	[00139b64]
		00139aa8: CONDITIONAL_JUMP
		00139ab0: FALL_THROUGH
 	00139b64 jnz 0x00139c20
		00139c20: CONDITIONAL_JUMP
		00139b6c: FALL_THROUGH

	[00139b6c]
		00139b64: FALL_THROUGH
 	00139b6c push ax
 	00139b74 mov mar,0x3cef20
 	00139b80 mov ax,mar
 	00139b8c push op
 	00139b94 mov op,ax
 	00139b9c setfuncargs 0x0
 	00139ba4 mov ax,0x89ef20
 	00139bb0 farcall ax
 	00139bb8 pop op
 	00139bc0 push ax
 	00139bc8 mov mar,0x91ef20
 	00139bd4 mov ax,mar
 	00139be0 pop bx
 	00139be8 cmpeq bx,ax
 	00139bf4 mov ax,bx
 	00139c00 pop bx
 	00139c08 lor bx,ax
 	00139c14 mov ax,bx
		00139c20: FALL_THROUGH

	[00139c20]
		00139b64: CONDITIONAL_JUMP
		00139b6c: FALL_THROUGH
 	00139c20 jnz 0x00139cdc
		00139cdc: CONDITIONAL_JUMP
		00139c28: FALL_THROUGH

	[00139c28]
		00139c20: FALL_THROUGH
 	00139c28 push ax
 	00139c30 mov mar,0x3cef20
 	00139c3c mov ax,mar
 	00139c48 push op
 	00139c50 mov op,ax
 	00139c58 setfuncargs 0x0
 	00139c60 mov ax,0x89ef20
 	00139c6c farcall ax
 	00139c74 pop op
 	00139c7c push ax
 	00139c84 mov mar,0x926f20
 	00139c90 mov ax,mar
 	00139c9c pop bx
 	00139ca4 cmpeq bx,ax
 	00139cb0 mov ax,bx
 	00139cbc pop bx
 	00139cc4 lor bx,ax
 	00139cd0 mov ax,bx
		00139cdc: FALL_THROUGH

	[00139cdc]
		00139c20: CONDITIONAL_JUMP
		00139c28: FALL_THROUGH
 	00139cdc jnz 0x00139d98
		00139d98: CONDITIONAL_JUMP
		00139ce4: FALL_THROUGH

	[00139ce4]
		00139cdc: FALL_THROUGH
 	00139ce4 push ax
 	00139cec mov mar,0x3cef20
 	00139cf8 mov ax,mar
 	00139d04 push op
 	00139d0c mov op,ax
 	00139d14 setfuncargs 0x0
 	00139d1c mov ax,0x89ef20
 	00139d28 farcall ax
 	00139d30 pop op
 	00139d38 push ax
 	00139d40 mov mar,0x92ef20
 	00139d4c mov ax,mar
 	00139d58 pop bx
 	00139d60 cmpeq bx,ax
 	00139d6c mov ax,bx
 	00139d78 pop bx
 	00139d80 lor bx,ax
 	00139d8c mov ax,bx
		00139d98: FALL_THROUGH

	[00139d98]
		00139cdc: CONDITIONAL_JUMP
		00139ce4: FALL_THROUGH
 	00139d98 jnz 0x00139e54
		00139e54: CONDITIONAL_JUMP
		00139da0: FALL_THROUGH

	[00139da0]
		00139d98: FALL_THROUGH
 	00139da0 push ax
 	00139da8 mov mar,0x3cef20
 	00139db4 mov ax,mar
 	00139dc0 push op
 	00139dc8 mov op,ax
 	00139dd0 setfuncargs 0x0
 	00139dd8 mov ax,0x89ef20
 	00139de4 farcall ax
 	00139dec pop op
 	00139df4 push ax
 	00139dfc mov mar,0x936f20
 	00139e08 mov ax,mar
 	00139e14 pop bx
 	00139e1c cmpeq bx,ax
 	00139e28 mov ax,bx
 	00139e34 pop bx
 	00139e3c lor bx,ax
 	00139e48 mov ax,bx
		00139e54: FALL_THROUGH

	[00139e54]
		00139d98: CONDITIONAL_JUMP
		00139da0: FALL_THROUGH
 	00139e54 jnz 0x00139f10
		00139f10: CONDITIONAL_JUMP
		00139e5c: FALL_THROUGH

	[00139e5c]
		00139e54: FALL_THROUGH
 	00139e5c push ax
 	00139e64 mov mar,0x3cef20
 	00139e70 mov ax,mar
 	00139e7c push op
 	00139e84 mov op,ax
 	00139e8c setfuncargs 0x0
 	00139e94 mov ax,0x89ef20
 	00139ea0 farcall ax
 	00139ea8 pop op
 	00139eb0 push ax
 	00139eb8 mov mar,0x93ef20
 	00139ec4 mov ax,mar
 	00139ed0 pop bx
 	00139ed8 cmpeq bx,ax
 	00139ee4 mov ax,bx
 	00139ef0 pop bx
 	00139ef8 lor bx,ax
 	00139f04 mov ax,bx
		00139f10: FALL_THROUGH

	[00139f10]
		00139e54: CONDITIONAL_JUMP
		00139e5c: FALL_THROUGH
 	00139f10 jnz 0x00139fcc
		00139fcc: CONDITIONAL_JUMP
		00139f18: FALL_THROUGH

	[00139f18]
		00139f10: FALL_THROUGH
 	00139f18 push ax
 	00139f20 mov mar,0x3cef20
 	00139f2c mov ax,mar
 	00139f38 push op
 	00139f40 mov op,ax
 	00139f48 setfuncargs 0x0
 	00139f50 mov ax,0x89ef20
 	00139f5c farcall ax
 	00139f64 pop op
 	00139f6c push ax
 	00139f74 mov mar,0x946f20
 	00139f80 mov ax,mar
 	00139f8c pop bx
 	00139f94 cmpeq bx,ax
 	00139fa0 mov ax,bx
 	00139fac pop bx
 	00139fb4 lor bx,ax
 	00139fc0 mov ax,bx
		00139fcc: FALL_THROUGH

	[00139fcc]
		00139f10: CONDITIONAL_JUMP
		00139f18: FALL_THROUGH
 	00139fcc jnz 0x0013a088
		0013a088: CONDITIONAL_JUMP
		00139fd4: FALL_THROUGH

	[00139fd4]
		00139fcc: FALL_THROUGH
 	00139fd4 push ax
 	00139fdc mov mar,0x3cef20
 	00139fe8 mov ax,mar
 	00139ff4 push op
 	00139ffc mov op,ax
 	0013a004 setfuncargs 0x0
 	0013a00c mov ax,0x89ef20
 	0013a018 farcall ax
 	0013a020 pop op
 	0013a028 push ax
 	0013a030 mov mar,0x956f20
 	0013a03c mov ax,mar
 	0013a048 pop bx
 	0013a050 cmpeq bx,ax
 	0013a05c mov ax,bx
 	0013a068 pop bx
 	0013a070 lor bx,ax
 	0013a07c mov ax,bx
		0013a088: FALL_THROUGH

	[0013a088]
		00139fcc: CONDITIONAL_JUMP
		00139fd4: FALL_THROUGH
 	0013a088 jnz 0x0013a144
		0013a144: CONDITIONAL_JUMP
		0013a090: FALL_THROUGH

	[0013a090]
		0013a088: FALL_THROUGH
 	0013a090 push ax
 	0013a098 mov mar,0x3cef20
 	0013a0a4 mov ax,mar
 	0013a0b0 push op
 	0013a0b8 mov op,ax
 	0013a0c0 setfuncargs 0x0
 	0013a0c8 mov ax,0x89ef20
 	0013a0d4 farcall ax
 	0013a0dc pop op
 	0013a0e4 push ax
 	0013a0ec mov mar,0x95ef20
 	0013a0f8 mov ax,mar
 	0013a104 pop bx
 	0013a10c cmpeq bx,ax
 	0013a118 mov ax,bx
 	0013a124 pop bx
 	0013a12c lor bx,ax
 	0013a138 mov ax,bx
		0013a144: FALL_THROUGH

	[0013a144]
		0013a088: CONDITIONAL_JUMP
		0013a090: FALL_THROUGH
 	0013a144 jnz 0x0013a200
		0013a200: CONDITIONAL_JUMP
		0013a14c: FALL_THROUGH

	[0013a14c]
		0013a144: FALL_THROUGH
 	0013a14c push ax
 	0013a154 mov mar,0x3cef20
 	0013a160 mov ax,mar
 	0013a16c push op
 	0013a174 mov op,ax
 	0013a17c setfuncargs 0x0
 	0013a184 mov ax,0x89ef20
 	0013a190 farcall ax
 	0013a198 pop op
 	0013a1a0 push ax
 	0013a1a8 mov mar,0x886f20
 	0013a1b4 mov ax,mar
 	0013a1c0 pop bx
 	0013a1c8 cmpeq bx,ax
 	0013a1d4 mov ax,bx
 	0013a1e0 pop bx
 	0013a1e8 lor bx,ax
 	0013a1f4 mov ax,bx
		0013a200: FALL_THROUGH

	[0013a200]
		0013a144: CONDITIONAL_JUMP
		0013a14c: FALL_THROUGH
 	0013a200 jnz 0x0013a2bc
		0013a2bc: CONDITIONAL_JUMP
		0013a208: FALL_THROUGH

	[0013a208]
		0013a200: FALL_THROUGH
 	0013a208 push ax
 	0013a210 mov mar,0x3cef20
 	0013a21c mov ax,mar
 	0013a228 push op
 	0013a230 mov op,ax
 	0013a238 setfuncargs 0x0
 	0013a240 mov ax,0x89ef20
 	0013a24c farcall ax
 	0013a254 pop op
 	0013a25c push ax
 	0013a264 mov mar,0x88ef20
 	0013a270 mov ax,mar
 	0013a27c pop bx
 	0013a284 cmpeq bx,ax
 	0013a290 mov ax,bx
 	0013a29c pop bx
 	0013a2a4 lor bx,ax
 	0013a2b0 mov ax,bx
		0013a2bc: FALL_THROUGH

	[0013a2bc]
		0013a200: CONDITIONAL_JUMP
		0013a208: FALL_THROUGH
 	0013a2bc jnz 0x0013a378
		0013a378: CONDITIONAL_JUMP
		0013a2c4: FALL_THROUGH

	[0013a2c4]
		0013a2bc: FALL_THROUGH
 	0013a2c4 push ax
 	0013a2cc mov mar,0x3cef20
 	0013a2d8 mov ax,mar
 	0013a2e4 push op
 	0013a2ec mov op,ax
 	0013a2f4 setfuncargs 0x0
 	0013a2fc mov ax,0x89ef20
 	0013a308 farcall ax
 	0013a310 pop op
 	0013a318 push ax
 	0013a320 mov mar,0x966f20
 	0013a32c mov ax,mar
 	0013a338 pop bx
 	0013a340 cmpeq bx,ax
 	0013a34c mov ax,bx
 	0013a358 pop bx
 	0013a360 lor bx,ax
 	0013a36c mov ax,bx
		0013a378: FALL_THROUGH

	[0013a378]
		0013a2bc: CONDITIONAL_JUMP
		0013a2c4: FALL_THROUGH
 	0013a378 jz 0x0013a43c
		0013a43c: CONDITIONAL_JUMP
		0013a380: FALL_THROUGH

	[0013a380]
		0013a378: FALL_THROUGH
 	0013a380 sourceline 0xc8f
 	0013a388 push op
 	0013a390 mov ax,0x2ba410
 	0013a39c farpush ax
 	0013a3a4 mov ax,0x138
 	0013a3b0 farpush ax
 	0013a3b8 mov ax,0x92
 	0013a3c4 farpush ax
 	0013a3cc mov ax,0x0
 	0013a3d8 farpush ax
 	0013a3e0 mov mar,0x3cef20
 	0013a3ec mov ax,mar
 	0013a3f8 mov op,ax
 	0013a400 setfuncargs 0x4
 	0013a408 mov ax,0x6aef20
 	0013a414 farcall ax
 	0013a41c farsubsp 0x4
 	0013a424 pop op
 	0013a42c sourceline 0xc90
 	0013a434 jmp 0x0013ab44
		0013ab44: UNCONDITIONAL_JUMP

	[0013a43c]
		0013a378: CONDITIONAL_JUMP
 	0013a43c sourceline 0xc92
 	0013a444 mov mar,0x3cef20
 	0013a450 mov ax,mar
 	0013a45c push op
 	0013a464 mov op,ax
 	0013a46c setfuncargs 0x0
 	0013a474 mov ax,0x89ef20
 	0013a480 farcall ax
 	0013a488 pop op
 	0013a490 push ax
 	0013a498 mov mar,0x986f20
 	0013a4a4 mov ax,mar
 	0013a4b0 pop bx
 	0013a4b8 cmpeq bx,ax
 	0013a4c4 mov ax,bx
 	0013a4d0 jz 0x0013a594
		0013a594: CONDITIONAL_JUMP
		0013a4d8: FALL_THROUGH

	[0013a4d8]
		0013a43c: FALL_THROUGH
 	0013a4d8 sourceline 0xc94
 	0013a4e0 push op
 	0013a4e8 mov ax,0x2ba443
 	0013a4f4 farpush ax
 	0013a4fc mov ax,0x138
 	0013a508 farpush ax
 	0013a510 mov ax,0x92
 	0013a51c farpush ax
 	0013a524 mov ax,0x0
 	0013a530 farpush ax
 	0013a538 mov mar,0x3cef20
 	0013a544 mov ax,mar
 	0013a550 mov op,ax
 	0013a558 setfuncargs 0x4
 	0013a560 mov ax,0x6aef20
 	0013a56c farcall ax
 	0013a574 farsubsp 0x4
 	0013a57c pop op
 	0013a584 sourceline 0xc95
 	0013a58c jmp 0x0013ab44
		0013ab44: UNCONDITIONAL_JUMP

	[0013a594]
		0013a43c: CONDITIONAL_JUMP
 	0013a594 sourceline 0xc97
 	0013a59c mov mar,0x3cef20
 	0013a5a8 mov ax,mar
 	0013a5b4 push op
 	0013a5bc mov op,ax
 	0013a5c4 setfuncargs 0x0
 	0013a5cc mov ax,0x89ef20
 	0013a5d8 farcall ax
 	0013a5e0 pop op
 	0013a5e8 push ax
 	0013a5f0 mov mar,0x94ef20
 	0013a5fc mov ax,mar
 	0013a608 pop bx
 	0013a610 cmpeq bx,ax
 	0013a61c mov ax,bx
 	0013a628 jz 0x0013a6ec
		0013a6ec: CONDITIONAL_JUMP
		0013a630: FALL_THROUGH

	[0013a630]
		0013a594: FALL_THROUGH
 	0013a630 sourceline 0xc99
 	0013a638 push op
 	0013a640 mov ax,0x2ba52f
 	0013a64c farpush ax
 	0013a654 mov ax,0x138
 	0013a660 farpush ax
 	0013a668 mov ax,0x92
 	0013a674 farpush ax
 	0013a67c mov ax,0x0
 	0013a688 farpush ax
 	0013a690 mov mar,0x3cef20
 	0013a69c mov ax,mar
 	0013a6a8 mov op,ax
 	0013a6b0 setfuncargs 0x4
 	0013a6b8 mov ax,0x6aef20
 	0013a6c4 farcall ax
 	0013a6cc farsubsp 0x4
 	0013a6d4 pop op
 	0013a6dc sourceline 0xc9a
 	0013a6e4 jmp 0x0013ab44
		0013ab44: UNCONDITIONAL_JUMP

	[0013a6ec]
		0013a594: CONDITIONAL_JUMP
 	0013a6ec sourceline 0xc9c
 	0013a6f4 mov mar,0x3cef20
 	0013a700 mov ax,mar
 	0013a70c push op
 	0013a714 mov op,ax
 	0013a71c setfuncargs 0x0
 	0013a724 mov ax,0x89ef20
 	0013a730 farcall ax
 	0013a738 pop op
 	0013a740 push ax
 	0013a748 mov mar,0x906f20
 	0013a754 mov ax,mar
 	0013a760 pop bx
 	0013a768 cmpeq bx,ax
 	0013a774 mov ax,bx
 	0013a780 jz 0x0013a844
		0013a844: CONDITIONAL_JUMP
		0013a788: FALL_THROUGH

	[0013a788]
		0013a6ec: FALL_THROUGH
 	0013a788 sourceline 0xc9e
 	0013a790 push op
 	0013a798 mov ax,0x2ba4bb
 	0013a7a4 farpush ax
 	0013a7ac mov ax,0x138
 	0013a7b8 farpush ax
 	0013a7c0 mov ax,0x92
 	0013a7cc farpush ax
 	0013a7d4 mov ax,0x0
 	0013a7e0 farpush ax
 	0013a7e8 mov mar,0x3cef20
 	0013a7f4 mov ax,mar
 	0013a800 mov op,ax
 	0013a808 setfuncargs 0x4
 	0013a810 mov ax,0x6aef20
 	0013a81c farcall ax
 	0013a824 farsubsp 0x4
 	0013a82c pop op
 	0013a834 sourceline 0xc9f
 	0013a83c jmp 0x0013ab44
		0013ab44: UNCONDITIONAL_JUMP

	[0013a844]
		0013a6ec: CONDITIONAL_JUMP
 	0013a844 sourceline 0xca1
 	0013a84c mov mar,0x3cef20
 	0013a858 mov ax,mar
 	0013a864 push op
 	0013a86c mov op,ax
 	0013a874 setfuncargs 0x0
 	0013a87c mov ax,0x89ef20
 	0013a888 farcall ax
 	0013a890 pop op
 	0013a898 push ax
 	0013a8a0 mov mar,0x98ef20
 	0013a8ac mov ax,mar
 	0013a8b8 pop bx
 	0013a8c0 cmpeq bx,ax
 	0013a8cc mov ax,bx
 	0013a8d8 jz 0x0013a99c
		0013a99c: CONDITIONAL_JUMP
		0013a8e0: FALL_THROUGH

	[0013a8e0]
		0013a844: FALL_THROUGH
 	0013a8e0 sourceline 0xca3
 	0013a8e8 push op
 	0013a8f0 mov ax,0x2ba4ea
 	0013a8fc farpush ax
 	0013a904 mov ax,0x138
 	0013a910 farpush ax
 	0013a918 mov ax,0x92
 	0013a924 farpush ax
 	0013a92c mov ax,0x0
 	0013a938 farpush ax
 	0013a940 mov mar,0x3cef20
 	0013a94c mov ax,mar
 	0013a958 mov op,ax
 	0013a960 setfuncargs 0x4
 	0013a968 mov ax,0x6aef20
 	0013a974 farcall ax
 	0013a97c farsubsp 0x4
 	0013a984 pop op
 	0013a98c sourceline 0xca4
 	0013a994 jmp 0x0013ab44
		0013ab44: UNCONDITIONAL_JUMP

	[0013a99c]
		0013a844: CONDITIONAL_JUMP
 	0013a99c sourceline 0xca6
 	0013a9a4 mov mar,0x3cef20
 	0013a9b0 mov ax,mar
 	0013a9bc push op
 	0013a9c4 mov op,ax
 	0013a9cc setfuncargs 0x0
 	0013a9d4 mov ax,0x89ef20
 	0013a9e0 farcall ax
 	0013a9e8 pop op
 	0013a9f0 push ax
 	0013a9f8 mov mar,0x9f6f20
 	0013aa04 mov ax,mar
 	0013aa10 pop bx
 	0013aa18 cmpeq bx,ax
 	0013aa24 mov ax,bx
 	0013aa30 jz 0x0013aaf4
		0013aaf4: CONDITIONAL_JUMP
		0013aa38: FALL_THROUGH

	[0013aa38]
		0013a99c: FALL_THROUGH
 	0013aa38 sourceline 0xca8
 	0013aa40 push op
 	0013aa48 mov ax,0x2ba52f
 	0013aa54 farpush ax
 	0013aa5c mov ax,0x138
 	0013aa68 farpush ax
 	0013aa70 mov ax,0x92
 	0013aa7c farpush ax
 	0013aa84 mov ax,0x0
 	0013aa90 farpush ax
 	0013aa98 mov mar,0x3cef20
 	0013aaa4 mov ax,mar
 	0013aab0 mov op,ax
 	0013aab8 setfuncargs 0x4
 	0013aac0 mov ax,0x6aef20
 	0013aacc farcall ax
 	0013aad4 farsubsp 0x4
 	0013aadc pop op
 	0013aae4 sourceline 0xca9
 	0013aaec jmp 0x0013ab44
		0013ab44: UNCONDITIONAL_JUMP

	[0013aaf4]
		0013a99c: CONDITIONAL_JUMP
 	0013aaf4 sourceline 0xcab
 	0013aafc mov ax,0x3
 	0013ab08 push ax
 	0013ab10 mov ax,0x5
 	0013ab1c push ax
 	0013ab24 mov ax,0x10ae5c
 	0013ab30 call ax
 	0013ab38 sub sp,0x8
		0013ab44: FALL_THROUGH

	[0013ab44]
		001384b8: UNCONDITIONAL_JUMP
		0013a380: UNCONDITIONAL_JUMP
		0013a4d8: UNCONDITIONAL_JUMP
		0013a630: UNCONDITIONAL_JUMP
		0013a788: UNCONDITIONAL_JUMP
		0013a8e0: UNCONDITIONAL_JUMP
		0013aa38: UNCONDITIONAL_JUMP
		0013aaf4: FALL_THROUGH
 	0013ab44 sourceline 0xcac
 	0013ab4c mov ax,0x0
 	0013ab58 ret

cRec_Interact$0:
	[0013ab5c]
 	0013ab5c sourceline 0xcb8
 	0013ab64 thisaddr
 	0013ab6c sourceline 0xcb9
 	0013ab74 mov ax,0x1
 	0013ab80 mov bx,ax
*	0013ab8c mov mar,0x3cef20
 	0013ab98 mov ax,mar
 	0013aba4 push op
 	0013abac mov op,ax
 	0013abb4 farpush bx
 	0013abbc setfuncargs 0x1
 	0013abc4 mov ax,0x69ef20
 	0013abd0 farcall ax
 	0013abd8 farsubsp 0x1
 	0013abe0 pop op
 	0013abe8 sourceline 0xcba
 	0013abf0 mov mar,0xa2ef20
 	0013abfc memread4 ax
 	0013ac04 jz 0x0013b1a0
		0013b1a0: CONDITIONAL_JUMP
		0013ac0c: FALL_THROUGH

	[0013ac0c]
		0013ab5c: FALL_THROUGH
 	0013ac0c sourceline 0xcbc
 	0013ac14 mov mar,0xa36f20
 	0013ac20 memread4 ax
 	0013ac28 lnot ax
 	0013ac30 jz 0x0013b04c
		0013b04c: CONDITIONAL_JUMP
		0013ac38: FALL_THROUGH

	[0013ac38]
		0013ac0c: FALL_THROUGH
 	0013ac38 sourceline 0xcbf
 	0013ac40 setfuncargs 0x0
 	0013ac48 mov ax,0x6def20
 	0013ac54 farcall ax
 	0013ac5c lnot ax
 	0013ac64 jz 0x0013acc0
		0013acc0: CONDITIONAL_JUMP
		0013ac6c: FALL_THROUGH

	[0013ac6c]
		0013ac38: FALL_THROUGH
 	0013ac6c mov ax,0x8b
 	0013ac78 farpush ax
 	0013ac80 mov ax,0xdc
 	0013ac8c farpush ax
 	0013ac94 setfuncargs 0x2
 	0013ac9c mov ax,0x6e6f20
 	0013aca8 farcall ax
 	0013acb0 farsubsp 0x2
 	0013acb8 jmp 0x0013b03c
		0013b03c: UNCONDITIONAL_JUMP

	[0013acc0]
		0013ac38: CONDITIONAL_JUMP
 	0013acc0 sourceline 0xcc2
 	0013acc8 mov ax,0x1d
 	0013acd4 mov bx,ax
 	0013ace0 mov mar,0x3cef20
 	0013acec mov ax,mar
 	0013acf8 push op
 	0013ad00 mov op,ax
 	0013ad08 farpush bx
 	0013ad10 setfuncargs 0x1
 	0013ad18 mov ax,0x69ef20
 	0013ad24 farcall ax
 	0013ad2c farsubsp 0x1
 	0013ad34 pop op
 	0013ad3c sourceline 0xcc3
 	0013ad44 push op
 	0013ad4c mov ax,0x397
 	0013ad58 farpush ax
 	0013ad60 mov ax,0x2
 	0013ad6c farpush ax
 	0013ad74 mov mar,0x3cef20
 	0013ad80 mov ax,mar
 	0013ad8c mov op,ax
 	0013ad94 setfuncargs 0x2
 	0013ad9c mov ax,0x6eef20
 	0013ada8 farcall ax
 	0013adb0 farsubsp 0x2
 	0013adb8 pop op
 	0013adc0 sourceline 0xcc4
 	0013adc8 mov mar,0xa3ef20
 	0013add4 memread4 ax
 	0013addc jz 0x0013aeec
		0013aeec: CONDITIONAL_JUMP
		0013ade4: FALL_THROUGH

	[0013ade4]
		0013acc0: FALL_THROUGH
 	0013ade4 sourceline 0xcc6
 	0013adec push op
 	0013adf4 mov ax,0x2be0ce
 	0013ae00 farpush ax
 	0013ae08 mov mar,0x3cef20
 	0013ae14 mov ax,mar
 	0013ae20 mov op,ax
 	0013ae28 setfuncargs 0x1
 	0013ae30 mov ax,0x6f6f20
 	0013ae3c farcall ax
 	0013ae44 farsubsp 0x1
 	0013ae4c pop op
 	0013ae54 sourceline 0xcc7
 	0013ae5c push op
 	0013ae64 mov ax,0x2be0e8
 	0013ae70 farpush ax
 	0013ae78 mov mar,0xa46f20
 	0013ae84 mov ax,mar
 	0013ae90 mov op,ax
 	0013ae98 setfuncargs 0x1
 	0013aea0 mov ax,0x6f6f20
 	0013aeac farcall ax
 	0013aeb4 farsubsp 0x1
 	0013aebc pop op
 	0013aec4 sourceline 0xcc8
 	0013aecc mov ax,0x0
 	0013aed8 mov mar,0xa3ef20
 	0013aee4 memwrite4 ax
		0013aeec: FALL_THROUGH

	[0013aeec]
		0013acc0: CONDITIONAL_JUMP
		0013ade4: FALL_THROUGH
 	0013aeec sourceline 0xcca
 	0013aef4 push op
 	0013aefc mov ax,0x2ba597
 	0013af08 farpush ax
 	0013af10 mov mar,0x3cef20
 	0013af1c mov ax,mar
 	0013af28 mov op,ax
 	0013af30 setfuncargs 0x1
 	0013af38 mov ax,0x6f6f20
 	0013af44 farcall ax
 	0013af4c farsubsp 0x1
 	0013af54 pop op
 	0013af5c sourceline 0xccb
 	0013af64 push op
 	0013af6c mov ax,0x2ba5b4
 	0013af78 farpush ax
 	0013af80 mov mar,0xa46f20
 	0013af8c mov ax,mar
 	0013af98 mov op,ax
 	0013afa0 setfuncargs 0x1
 	0013afa8 mov ax,0x6f6f20
 	0013afb4 farcall ax
 	0013afbc farsubsp 0x1
 	0013afc4 pop op
 	0013afcc sourceline 0xccc
 	0013afd4 push op
 	0013afdc mov ax,0x2ba5e5
 	0013afe8 farpush ax
 	0013aff0 mov mar,0x3cef20
 	0013affc mov ax,mar
 	0013b008 mov op,ax
 	0013b010 setfuncargs 0x1
 	0013b018 mov ax,0x6f6f20
 	0013b024 farcall ax
 	0013b02c farsubsp 0x1
 	0013b034 pop op
		0013b03c: FALL_THROUGH

	[0013b03c]
		0013ac6c: UNCONDITIONAL_JUMP
		0013aeec: FALL_THROUGH
 	0013b03c sourceline 0xcce
 	0013b044 jmp 0x0013b190
		0013b190: UNCONDITIONAL_JUMP

	[0013b04c]
		0013ac0c: CONDITIONAL_JUMP
 	0013b04c sourceline 0xcd2
 	0013b054 push op
 	0013b05c mov ax,0x397
 	0013b068 farpush ax
 	0013b070 mov ax,0xab
 	0013b07c farpush ax
 	0013b084 mov ax,0x122
 	0013b090 farpush ax
 	0013b098 mov mar,0x3cef20
 	0013b0a4 mov ax,mar
 	0013b0b0 mov op,ax
 	0013b0b8 setfuncargs 0x3
 	0013b0c0 mov ax,0x726f20
 	0013b0cc farcall ax
 	0013b0d4 farsubsp 0x3
 	0013b0dc pop op
 	0013b0e4 sourceline 0xcd3
 	0013b0ec push op
 	0013b0f4 mov ax,0x2be087
 	0013b100 farpush ax
 	0013b108 mov ax,0x138
 	0013b114 farpush ax
 	0013b11c mov ax,0x92
 	0013b128 farpush ax
 	0013b130 mov ax,0x0
 	0013b13c farpush ax
 	0013b144 mov mar,0x3cef20
 	0013b150 mov ax,mar
 	0013b15c mov op,ax
 	0013b164 setfuncargs 0x4
 	0013b16c mov ax,0x6aef20
 	0013b178 farcall ax
 	0013b180 farsubsp 0x4
 	0013b188 pop op
		0013b190: FALL_THROUGH

	[0013b190]
		0013b03c: UNCONDITIONAL_JUMP
		0013b04c: FALL_THROUGH
 	0013b190 sourceline 0xcd5
 	0013b198 jmp 0x0013b2e4
		0013b2e4: UNCONDITIONAL_JUMP

	[0013b1a0]
		0013ab5c: CONDITIONAL_JUMP
 	0013b1a0 sourceline 0xcd8
 	0013b1a8 push op
 	0013b1b0 mov ax,0x397
 	0013b1bc farpush ax
 	0013b1c4 mov ax,0xab
 	0013b1d0 farpush ax
 	0013b1d8 mov ax,0x122
 	0013b1e4 farpush ax
 	0013b1ec mov mar,0x3cef20
 	0013b1f8 mov ax,mar
 	0013b204 mov op,ax
 	0013b20c setfuncargs 0x3
 	0013b214 mov ax,0x726f20
 	0013b220 farcall ax
 	0013b228 farsubsp 0x3
 	0013b230 pop op
 	0013b238 sourceline 0xcd9
 	0013b240 push op
 	0013b248 mov ax,0x2ba642
 	0013b254 farpush ax
 	0013b25c mov ax,0x138
 	0013b268 farpush ax
 	0013b270 mov ax,0x92
 	0013b27c farpush ax
 	0013b284 mov ax,0x0
 	0013b290 farpush ax
 	0013b298 mov mar,0x3cef20
 	0013b2a4 mov ax,mar
 	0013b2b0 mov op,ax
 	0013b2b8 setfuncargs 0x4
 	0013b2c0 mov ax,0x6aef20
 	0013b2cc farcall ax
 	0013b2d4 farsubsp 0x4
 	0013b2dc pop op
		0013b2e4: FALL_THROUGH

	[0013b2e4]
		0013b190: UNCONDITIONAL_JUMP
		0013b1a0: FALL_THROUGH
 	0013b2e4 sourceline 0xcdb
 	0013b2ec mov ax,0x0
 	0013b2f8 ret

cJudy_Interact$0:
	[0013b2fc]
 	0013b2fc sourceline 0xcdf
 	0013b304 thisaddr
 	0013b30c sourceline 0xce0
*	0013b314 mov mar,0xa4ef20
 	0013b320 memread4 ax
 	0013b328 push ax
 	0013b330 mov ax,0x2
 	0013b33c pop bx
 	0013b344 cmpeq bx,ax
 	0013b350 mov ax,bx
 	0013b35c jz 0x00142920
		00142920: CONDITIONAL_JUMP
		0013b364: FALL_THROUGH

	[0013b364]
		0013b2fc: FALL_THROUGH
 	0013b364 sourceline 0xce2
 	0013b36c mov mar,0xa56f20
 	0013b378 memread4 ax
 	0013b380 jz 0x00141d80
		00141d80: CONDITIONAL_JUMP
		0013b388: FALL_THROUGH

	[0013b388]
		0013b364: FALL_THROUGH
 	0013b388 sourceline 0xce4
 	0013b390 mov mar,0xa5ef20
 	0013b39c memread4 ax
 	0013b3a4 lnot ax
 	0013b3ac jz 0x0013cb1c
		0013cb1c: CONDITIONAL_JUMP
		0013b3b4: FALL_THROUGH

	[0013b3b4]
		0013b388: FALL_THROUGH
 	0013b3b4 sourceline 0xce6
 	0013b3bc setfuncargs 0x0
 	0013b3c4 mov ax,0x6def20
 	0013b3d0 farcall ax
 	0013b3d8 lnot ax
 	0013b3e0 jz 0x0013b43c
		0013b43c: CONDITIONAL_JUMP
		0013b3e8: FALL_THROUGH

	[0013b3e8]
		0013b3b4: FALL_THROUGH
 	0013b3e8 mov ax,0x82
 	0013b3f4 farpush ax
 	0013b3fc mov ax,0x86
 	0013b408 farpush ax
 	0013b410 setfuncargs 0x2
 	0013b418 mov ax,0x6e6f20
 	0013b424 farcall ax
 	0013b42c farsubsp 0x2
 	0013b434 jmp 0x0013cb0c
		0013cb0c: UNCONDITIONAL_JUMP

	[0013b43c]
		0013b3b4: CONDITIONAL_JUMP
 	0013b43c sourceline 0xce9
 	0013b444 mov ax,0x0
 	0013b450 push ax
 	0013b458 mov ax,0x1
 	0013b464 assertlte ax,0x32
 	0013b470 mul ax,0x8
 	0013b47c mov cx,ax
 	0013b488 pop ax
 	0013b490 mov bx,ax
 	0013b49c mov mar,0x6c6f20
 	0013b4a8 add mar,cx
 	0013b4b4 mov ax,mar
 	0013b4c0 push op
 	0013b4c8 mov op,ax
 	0013b4d0 farpush bx
 	0013b4d8 setfuncargs 0x1
 	0013b4e0 mov ax,0xa66f20
 	0013b4ec farcall ax
 	0013b4f4 farsubsp 0x1
 	0013b4fc pop op
 	0013b504 sourceline 0xcea
 	0013b50c mov ax,0x3
 	0013b518 mov bx,ax
 	0013b524 mov mar,0x3cef20
 	0013b530 mov ax,mar
 	0013b53c push op
 	0013b544 mov op,ax
 	0013b54c farpush bx
 	0013b554 setfuncargs 0x1
 	0013b55c mov ax,0x69ef20
 	0013b568 farcall ax
 	0013b570 farsubsp 0x1
 	0013b578 pop op
 	0013b580 sourceline 0xceb
 	0013b588 push op
 	0013b590 mov ax,0x397
 	0013b59c farpush ax
 	0013b5a4 mov ax,0x1
 	0013b5b0 farpush ax
 	0013b5b8 mov mar,0x3cef20
 	0013b5c4 mov ax,mar
 	0013b5d0 mov op,ax
 	0013b5d8 setfuncargs 0x2
 	0013b5e0 mov ax,0x6eef20
 	0013b5ec farcall ax
 	0013b5f4 farsubsp 0x2
 	0013b5fc pop op
 	0013b604 sourceline 0xcec
 	0013b60c mov ax,0x104654
 	0013b618 call ax
 	0013b620 sourceline 0xcef
 	0013b628 mov ax,0x14
 	0013b634 farpush ax
 	0013b63c setfuncargs 0x1
 	0013b644 mov ax,0x426f20
 	0013b650 farcall ax
 	0013b658 farsubsp 0x1
 	0013b660 sourceline 0xcf0
 	0013b668 push op
 	0013b670 mov ax,0x2c5b78
 	0013b67c farpush ax
 	0013b684 mov mar,0x3cef20
 	0013b690 mov ax,mar
 	0013b69c mov op,ax
 	0013b6a4 setfuncargs 0x1
 	0013b6ac mov ax,0x6f6f20
 	0013b6b8 farcall ax
 	0013b6c0 farsubsp 0x1
 	0013b6c8 pop op
 	0013b6d0 sourceline 0xcf1
 	0013b6d8 push op
 	0013b6e0 mov ax,0x2ba6b6
 	0013b6ec farpush ax
 	0013b6f4 mov mar,0x506f20
 	0013b700 mov ax,mar
 	0013b70c mov op,ax
 	0013b714 setfuncargs 0x1
 	0013b71c mov ax,0x6f6f20
 	0013b728 farcall ax
 	0013b730 farsubsp 0x1
 	0013b738 pop op
 	0013b740 sourceline 0xcf2
 	0013b748 push op
 	0013b750 mov ax,0x2c5bb3
 	0013b75c farpush ax
 	0013b764 mov mar,0x3cef20
 	0013b770 mov ax,mar
 	0013b77c mov op,ax
 	0013b784 setfuncargs 0x1
 	0013b78c mov ax,0x6f6f20
 	0013b798 farcall ax
 	0013b7a0 farsubsp 0x1
 	0013b7a8 pop op
 	0013b7b0 sourceline 0xcf3
 	0013b7b8 push op
 	0013b7c0 mov ax,0x2ba72a
 	0013b7cc farpush ax
 	0013b7d4 mov mar,0x506f20
 	0013b7e0 mov ax,mar
 	0013b7ec mov op,ax
 	0013b7f4 setfuncargs 0x1
 	0013b7fc mov ax,0x6f6f20
 	0013b808 farcall ax
 	0013b810 farsubsp 0x1
 	0013b818 pop op
 	0013b820 sourceline 0xcf4
 	0013b828 push op
 	0013b830 mov ax,0x2c5c45
 	0013b83c farpush ax
 	0013b844 mov mar,0x3cef20
 	0013b850 mov ax,mar
 	0013b85c mov op,ax
 	0013b864 setfuncargs 0x1
 	0013b86c mov ax,0x6f6f20
 	0013b878 farcall ax
 	0013b880 farsubsp 0x1
 	0013b888 pop op
 	0013b890 sourceline 0xcf5
 	0013b898 push op
 	0013b8a0 mov ax,0x2ba7a7
 	0013b8ac farpush ax
 	0013b8b4 mov mar,0x506f20
 	0013b8c0 mov ax,mar
 	0013b8cc mov op,ax
 	0013b8d4 setfuncargs 0x1
 	0013b8dc mov ax,0x6f6f20
 	0013b8e8 farcall ax
 	0013b8f0 farsubsp 0x1
 	0013b8f8 pop op
 	0013b900 sourceline 0xcf6
 	0013b908 push op
 	0013b910 mov ax,0x427
 	0013b91c farpush ax
 	0013b924 mov ax,0x397
 	0013b930 farpush ax
 	0013b938 mov ax,0x0
 	0013b944 farpush ax
 	0013b94c mov ax,0x3
 	0013b958 farpush ax
 	0013b960 mov ax,0x0
 	0013b96c farpush ax
 	0013b974 mov mar,0x506f20
 	0013b980 mov ax,mar
 	0013b98c mov op,ax
 	0013b994 setfuncargs 0x5
 	0013b99c mov ax,0x536f20
 	0013b9a8 farcall ax
 	0013b9b0 farsubsp 0x5
 	0013b9b8 pop op
 	0013b9c0 sourceline 0xcf7
 	0013b9c8 push op
 	0013b9d0 mov ax,0x6d
 	0013b9dc farpush ax
 	0013b9e4 mov mar,0x506f20
 	0013b9f0 mov ax,mar
 	0013b9fc mov op,ax
 	0013ba04 setfuncargs 0x1
 	0013ba0c mov ax,0x51ef20
 	0013ba18 farcall ax
 	0013ba20 farsubsp 0x1
 	0013ba28 pop op
 	0013ba30 sourceline 0xcf8
 	0013ba38 mov ax,0x7f
 	0013ba44 mov bx,ax
 	0013ba50 mov mar,0x506f20
 	0013ba5c mov ax,mar
 	0013ba68 push op
 	0013ba70 mov op,ax
 	0013ba78 farpush bx
 	0013ba80 setfuncargs 0x1
 	0013ba88 mov ax,0x526f20
 	0013ba94 farcall ax
 	0013ba9c farsubsp 0x1
 	0013baa4 pop op
 	0013baac sourceline 0xcf9
 	0013bab4 push op
 	0013babc mov ax,0x426
 	0013bac8 farpush ax
 	0013bad0 mov ax,0x397
 	0013badc farpush ax
 	0013bae4 mov ax,0x0
 	0013baf0 farpush ax
 	0013baf8 mov ax,0x3
 	0013bb04 farpush ax
 	0013bb0c mov ax,0x0
 	0013bb18 farpush ax
 	0013bb20 mov mar,0x506f20
 	0013bb2c mov ax,mar
 	0013bb38 mov op,ax
 	0013bb40 setfuncargs 0x5
 	0013bb48 mov ax,0x536f20
 	0013bb54 farcall ax
 	0013bb5c farsubsp 0x5
 	0013bb64 pop op
 	0013bb6c sourceline 0xcfa
 	0013bb74 push op
 	0013bb7c mov ax,0x1
 	0013bb88 farpush ax
 	0013bb90 mov ax,0x32
 	0013bb9c farpush ax
 	0013bba4 mov mar,0x53ef20
 	0013bbb0 mov ax,mar
 	0013bbbc mov op,ax
 	0013bbc4 setfuncargs 0x2
 	0013bbcc mov ax,0x2fef20
 	0013bbd8 farcall ax
 	0013bbe0 farsubsp 0x2
 	0013bbe8 pop op
 	0013bbf0 sourceline 0xcfb
 	0013bbf8 push op
 	0013bc00 mov ax,0x6f
 	0013bc0c farpush ax
 	0013bc14 mov mar,0x506f20
 	0013bc20 mov ax,mar
 	0013bc2c mov op,ax
 	0013bc34 setfuncargs 0x1
 	0013bc3c mov ax,0x51ef20
 	0013bc48 farcall ax
 	0013bc50 farsubsp 0x1
 	0013bc58 pop op
 	0013bc60 sourceline 0xcfc
 	0013bc68 push op
 	0013bc70 mov ax,0x426
 	0013bc7c farpush ax
 	0013bc84 mov ax,0x398
 	0013bc90 farpush ax
 	0013bc98 mov ax,0x1
 	0013bca4 farpush ax
 	0013bcac mov ax,0x3
 	0013bcb8 farpush ax
 	0013bcc0 mov ax,0x0
 	0013bccc farpush ax
 	0013bcd4 mov mar,0x506f20
 	0013bce0 mov ax,mar
 	0013bcec mov op,ax
 	0013bcf4 setfuncargs 0x5
 	0013bcfc mov ax,0x536f20
 	0013bd08 farcall ax
 	0013bd10 farsubsp 0x5
 	0013bd18 pop op
 	0013bd20 sourceline 0xcfd
 	0013bd28 push op
 	0013bd30 mov ax,-0x1
 	0013bd3c farpush ax
 	0013bd44 mov ax,-0x1
 	0013bd50 farpush ax
 	0013bd58 mov ax,0x70
 	0013bd64 farpush ax
 	0013bd6c mov ax,0x0
 	0013bd78 assertlte ax,0x28
 	0013bd84 mul ax,0x8
 	0013bd90 mov cx,ax
 	0013bd9c mov mar,0x6fef20
 	0013bda8 add mar,cx
 	0013bdb4 mov ax,mar
 	0013bdc0 mov op,ax
 	0013bdc8 setfuncargs 0x3
 	0013bdd0 mov ax,0xa6ef20
 	0013bddc farcall ax
 	0013bde4 farsubsp 0x3
 	0013bdec pop op
 	0013bdf4 sourceline 0xcfe
 	0013bdfc push op
 	0013be04 mov ax,0x426
 	0013be10 farpush ax
 	0013be18 mov ax,0x397
 	0013be24 farpush ax
 	0013be2c mov ax,0x0
 	0013be38 farpush ax
 	0013be40 mov ax,0x6
 	0013be4c farpush ax
 	0013be54 mov ax,0x0
 	0013be60 farpush ax
 	0013be68 mov ax,0x0
 	0013be74 assertlte ax,0x28
 	0013be80 mul ax,0x8
 	0013be8c mov cx,ax
 	0013be98 mov mar,0x6fef20
 	0013bea4 add mar,cx
 	0013beb0 mov ax,mar
 	0013bebc mov op,ax
 	0013bec4 setfuncargs 0x5
 	0013becc mov ax,0xa76f20
 	0013bed8 farcall ax
 	0013bee0 farsubsp 0x5
 	0013bee8 pop op
 	0013bef0 sourceline 0xcff
 	0013bef8 push op
 	0013bf00 mov ax,0x426
 	0013bf0c farpush ax
 	0013bf14 mov ax,0x398
 	0013bf20 farpush ax
 	0013bf28 mov ax,0x1
 	0013bf34 farpush ax
 	0013bf3c mov ax,0x7
 	0013bf48 farpush ax
 	0013bf50 mov ax,0x1
 	0013bf5c farpush ax
 	0013bf64 mov ax,0x0
 	0013bf70 assertlte ax,0x28
 	0013bf7c mul ax,0x8
 	0013bf88 mov cx,ax
 	0013bf94 mov mar,0x6fef20
 	0013bfa0 add mar,cx
 	0013bfac mov ax,mar
 	0013bfb8 mov op,ax
 	0013bfc0 setfuncargs 0x5
 	0013bfc8 mov ax,0xa76f20
 	0013bfd4 farcall ax
 	0013bfdc farsubsp 0x5
 	0013bfe4 pop op
 	0013bfec sourceline 0xd00
 	0013bff4 mov ax,0x1e
 	0013c000 farpush ax
 	0013c008 setfuncargs 0x1
 	0013c010 mov ax,0x426f20
 	0013c01c farcall ax
 	0013c024 farsubsp 0x1
 	0013c02c sourceline 0xd01
 	0013c034 push op
 	0013c03c mov ax,0x2ba7b9
 	0013c048 farpush ax
 	0013c050 mov mar,0x506f20
 	0013c05c mov ax,mar
 	0013c068 mov op,ax
 	0013c070 setfuncargs 0x1
 	0013c078 mov ax,0x6f6f20
 	0013c084 farcall ax
 	0013c08c farsubsp 0x1
 	0013c094 pop op
 	0013c09c sourceline 0xd02
 	0013c0a4 mov ax,0x1e
 	0013c0b0 farpush ax
 	0013c0b8 setfuncargs 0x1
 	0013c0c0 mov ax,0x426f20
 	0013c0cc farcall ax
 	0013c0d4 farsubsp 0x1
 	0013c0dc sourceline 0xd03
 	0013c0e4 push op
 	0013c0ec mov ax,0x427
 	0013c0f8 farpush ax
 	0013c100 mov ax,0x397
 	0013c10c farpush ax
 	0013c114 mov ax,0x0
 	0013c120 farpush ax
 	0013c128 mov ax,0x7
 	0013c134 farpush ax
 	0013c13c mov ax,0x1
 	0013c148 farpush ax
 	0013c150 mov ax,0x0
 	0013c15c assertlte ax,0x28
 	0013c168 mul ax,0x8
 	0013c174 mov cx,ax
 	0013c180 mov mar,0x6fef20
 	0013c18c add mar,cx
 	0013c198 mov ax,mar
 	0013c1a4 mov op,ax
 	0013c1ac setfuncargs 0x5
 	0013c1b4 mov ax,0xa76f20
 	0013c1c0 farcall ax
 	0013c1c8 farsubsp 0x5
 	0013c1d0 pop op
 	0013c1d8 sourceline 0xd04
 	0013c1e0 push op
 	0013c1e8 mov ax,0x427
 	0013c1f4 farpush ax
 	0013c1fc mov ax,0x397
 	0013c208 farpush ax
 	0013c210 mov ax,0x0
 	0013c21c farpush ax
 	0013c224 mov ax,0x6
 	0013c230 farpush ax
 	0013c238 mov ax,0x0
 	0013c244 farpush ax
 	0013c24c mov ax,0x0
 	0013c258 assertlte ax,0x28
 	0013c264 mul ax,0x8
 	0013c270 mov cx,ax
 	0013c27c mov mar,0x6fef20
 	0013c288 add mar,cx
 	0013c294 mov ax,mar
 	0013c2a0 mov op,ax
 	0013c2a8 setfuncargs 0x5
 	0013c2b0 mov ax,0xa76f20
 	0013c2bc farcall ax
 	0013c2c4 farsubsp 0x5
 	0013c2cc pop op
 	0013c2d4 sourceline 0xd05
 	0013c2dc push op
 	0013c2e4 mov ax,0x6d
 	0013c2f0 farpush ax
 	0013c2f8 mov mar,0x506f20
 	0013c304 mov ax,mar
 	0013c310 mov op,ax
 	0013c318 setfuncargs 0x1
 	0013c320 mov ax,0x51ef20
 	0013c32c farcall ax
 	0013c334 farsubsp 0x1
 	0013c33c pop op
 	0013c344 sourceline 0xd06
 	0013c34c push op
 	0013c354 mov mar,0x53ef20
 	0013c360 mov ax,mar
 	0013c36c mov op,ax
 	0013c374 setfuncargs 0x0
 	0013c37c mov ax,0x306f20
 	0013c388 farcall ax
 	0013c390 pop op
 	0013c398 sourceline 0xd07
 	0013c3a0 push op
 	0013c3a8 mov ax,0x427
 	0013c3b4 farpush ax
 	0013c3bc mov ax,0x397
 	0013c3c8 farpush ax
 	0013c3d0 mov ax,0x0
 	0013c3dc farpush ax
 	0013c3e4 mov ax,0x3
 	0013c3f0 farpush ax
 	0013c3f8 mov ax,0x0
 	0013c404 farpush ax
 	0013c40c mov mar,0x506f20
 	0013c418 mov ax,mar
 	0013c424 mov op,ax
 	0013c42c setfuncargs 0x5
 	0013c434 mov ax,0x536f20
 	0013c440 farcall ax
 	0013c448 farsubsp 0x5
 	0013c450 pop op
 	0013c458 sourceline 0xd08
 	0013c460 push op
 	0013c468 mov ax,0x2ba841
 	0013c474 farpush ax
 	0013c47c mov mar,0x506f20
 	0013c488 mov ax,mar
 	0013c494 mov op,ax
 	0013c49c setfuncargs 0x1
 	0013c4a4 mov ax,0x6f6f20
 	0013c4b0 farcall ax
 	0013c4b8 farsubsp 0x1
 	0013c4c0 pop op
 	0013c4c8 sourceline 0xd09
 	0013c4d0 push op
 	0013c4d8 mov ax,0x6b
 	0013c4e4 farpush ax
 	0013c4ec mov mar,0x506f20
 	0013c4f8 mov ax,mar
 	0013c504 mov op,ax
 	0013c50c setfuncargs 0x1
 	0013c514 mov ax,0x51ef20
 	0013c520 farcall ax
 	0013c528 farsubsp 0x1
 	0013c530 pop op
 	0013c538 sourceline 0xd0a
 	0013c540 mov ax,0x7e
 	0013c54c mov bx,ax
 	0013c558 mov mar,0x506f20
 	0013c564 mov ax,mar
 	0013c570 push op
 	0013c578 mov op,ax
 	0013c580 farpush bx
 	0013c588 setfuncargs 0x1
 	0013c590 mov ax,0x526f20
 	0013c59c farcall ax
 	0013c5a4 farsubsp 0x1
 	0013c5ac pop op
 	0013c5b4 sourceline 0xd0b
 	0013c5bc push op
 	0013c5c4 mov ax,0x426
 	0013c5d0 farpush ax
 	0013c5d8 mov ax,0x397
 	0013c5e4 farpush ax
 	0013c5ec mov ax,0x0
 	0013c5f8 farpush ax
 	0013c600 mov ax,0x3
 	0013c60c farpush ax
 	0013c614 mov ax,0x0
 	0013c620 farpush ax
 	0013c628 mov mar,0x506f20
 	0013c634 mov ax,mar
 	0013c640 mov op,ax
 	0013c648 setfuncargs 0x5
 	0013c650 mov ax,0x536f20
 	0013c65c farcall ax
 	0013c664 farsubsp 0x5
 	0013c66c pop op
 	0013c674 sourceline 0xd0c
 	0013c67c push op
 	0013c684 mov ax,0x2ba867
 	0013c690 farpush ax
 	0013c698 mov mar,0x506f20
 	0013c6a4 mov ax,mar
 	0013c6b0 mov op,ax
 	0013c6b8 setfuncargs 0x1
 	0013c6c0 mov ax,0x6f6f20
 	0013c6cc farcall ax
 	0013c6d4 farsubsp 0x1
 	0013c6dc pop op
 	0013c6e4 sourceline 0xd0d
 	0013c6ec push op
 	0013c6f4 mov ax,0x2c5d84
 	0013c700 farpush ax
 	0013c708 mov mar,0x3cef20
 	0013c714 mov ax,mar
 	0013c720 mov op,ax
 	0013c728 setfuncargs 0x1
 	0013c730 mov ax,0x6f6f20
 	0013c73c farcall ax
 	0013c744 farsubsp 0x1
 	0013c74c pop op
 	0013c754 sourceline 0xd0e
 	0013c75c push op
 	0013c764 mov ax,0x2ba8c9
 	0013c770 farpush ax
 	0013c778 mov mar,0x506f20
 	0013c784 mov ax,mar
 	0013c790 mov op,ax
 	0013c798 setfuncargs 0x1
 	0013c7a0 mov ax,0x6f6f20
 	0013c7ac farcall ax
 	0013c7b4 farsubsp 0x1
 	0013c7bc pop op
 	0013c7c4 sourceline 0xd0f
 	0013c7cc push op
 	0013c7d4 mov ax,0x7cfe
 	0013c7e0 farpush ax
 	0013c7e8 mov mar,0xa7ef20
 	0013c7f4 mov ax,mar
 	0013c800 farpush ax
 	0013c808 mov mar,0x81ef20
 	0013c814 mov ax,mar
 	0013c820 mov op,ax
 	0013c828 setfuncargs 0x2
 	0013c830 mov ax,0x7e6f20
 	0013c83c farcall ax
 	0013c844 farsubsp 0x2
 	0013c84c pop op
 	0013c854 sourceline 0xd10
 	0013c85c mov ax,0x1
 	0013c868 mov mar,0xa5ef20
 	0013c874 memwrite4 ax
 	0013c87c sourceline 0xd11
 	0013c884 mov ax,0x1
 	0013c890 mov bx,ax
 	0013c89c mov mar,0x3cef20
 	0013c8a8 mov ax,mar
 	0013c8b4 push op
 	0013c8bc mov op,ax
 	0013c8c4 farpush bx
 	0013c8cc setfuncargs 0x1
 	0013c8d4 mov ax,0x69ef20
 	0013c8e0 farcall ax
 	0013c8e8 farsubsp 0x1
 	0013c8f0 pop op
 	0013c8f8 sourceline 0xd12
 	0013c900 mov ax,0x1
 	0013c90c push ax
 	0013c914 mov ax,0x1
 	0013c920 assertlte ax,0x32
 	0013c92c mul ax,0x8
 	0013c938 mov cx,ax
 	0013c944 pop ax
 	0013c94c mov bx,ax
 	0013c958 mov mar,0x6c6f20
 	0013c964 add mar,cx
 	0013c970 mov ax,mar
 	0013c97c push op
 	0013c984 mov op,ax
 	0013c98c farpush bx
 	0013c994 setfuncargs 0x1
 	0013c99c mov ax,0xa66f20
 	0013c9a8 farcall ax
 	0013c9b0 farsubsp 0x1
 	0013c9b8 pop op
 	0013c9c0 sourceline 0xd13
 	0013c9c8 push op
 	0013c9d0 mov ax,0x427
 	0013c9dc farpush ax
 	0013c9e4 mov ax,0x398
 	0013c9f0 farpush ax
 	0013c9f8 mov ax,0x0
 	0013ca04 farpush ax
 	0013ca0c mov ax,0x3
 	0013ca18 farpush ax
 	0013ca20 mov ax,0x0
 	0013ca2c farpush ax
 	0013ca34 mov mar,0x506f20
 	0013ca40 mov ax,mar
 	0013ca4c mov op,ax
 	0013ca54 setfuncargs 0x5
 	0013ca5c mov ax,0x536f20
 	0013ca68 farcall ax
 	0013ca70 farsubsp 0x5
 	0013ca78 pop op
 	0013ca80 sourceline 0xd14
 	0013ca88 mov ax,0x50
 	0013ca94 push ax
 	0013ca9c mov ax,0x1e
 	0013caa8 push ax
 	0013cab0 mov ax,0x10445c
 	0013cabc call ax
 	0013cac4 sub sp,0x8
 	0013cad0 mov mar,0x4e6f20
 	0013cadc memwrite4 ax
 	0013cae4 sourceline 0xd15
 	0013caec mov ax,0x1
 	0013caf8 mov mar,0x4aef20
 	0013cb04 memwrite4 ax
		0013cb0c: FALL_THROUGH

	[0013cb0c]
		0013b3e8: UNCONDITIONAL_JUMP
		0013b43c: FALL_THROUGH
 	0013cb0c sourceline 0xd17
 	0013cb14 jmp 0x00141d70
		00141d70: UNCONDITIONAL_JUMP

	[0013cb1c]
		0013b388: CONDITIONAL_JUMP
 	0013cb1c sourceline 0xd1a
 	0013cb24 mov mar,0xa86f20
 	0013cb30 memread4 ax
 	0013cb38 lnot ax
 	0013cb40 jz 0x0013cd18
		0013cd18: CONDITIONAL_JUMP
		0013cb48: FALL_THROUGH

	[0013cb48]
		0013cb1c: FALL_THROUGH
 	0013cb48 sourceline 0xd1c
 	0013cb50 push op
 	0013cb58 mov ax,0x397
 	0013cb64 farpush ax
 	0013cb6c mov ax,0x73
 	0013cb78 farpush ax
 	0013cb80 mov ax,0x5c
 	0013cb8c farpush ax
 	0013cb94 mov mar,0x3cef20
 	0013cba0 mov ax,mar
 	0013cbac mov op,ax
 	0013cbb4 setfuncargs 0x3
 	0013cbbc mov ax,0x726f20
 	0013cbc8 farcall ax
 	0013cbd0 farsubsp 0x3
 	0013cbd8 pop op
 	0013cbe0 sourceline 0xd1d
 	0013cbe8 mov ax,0x1
 	0013cbf4 mov bx,ax
 	0013cc00 mov mar,0x3cef20
 	0013cc0c mov ax,mar
 	0013cc18 push op
 	0013cc20 mov op,ax
 	0013cc28 farpush bx
 	0013cc30 setfuncargs 0x1
 	0013cc38 mov ax,0x69ef20
 	0013cc44 farcall ax
 	0013cc4c farsubsp 0x1
 	0013cc54 pop op
 	0013cc5c sourceline 0xd1e
 	0013cc64 push op
 	0013cc6c mov ax,0x2bbe6e
 	0013cc78 farpush ax
 	0013cc80 mov ax,0x138
 	0013cc8c farpush ax
 	0013cc94 mov ax,0x92
 	0013cca0 farpush ax
 	0013cca8 mov ax,0x0
 	0013ccb4 farpush ax
 	0013ccbc mov mar,0x3cef20
 	0013ccc8 mov ax,mar
 	0013ccd4 mov op,ax
 	0013ccdc setfuncargs 0x4
 	0013cce4 mov ax,0x6aef20
 	0013ccf0 farcall ax
 	0013ccf8 farsubsp 0x4
 	0013cd00 pop op
 	0013cd08 sourceline 0xd1f
 	0013cd10 jmp 0x00141d70
		00141d70: UNCONDITIONAL_JUMP

	[0013cd18]
		0013cb1c: CONDITIONAL_JUMP
 	0013cd18 sourceline 0xd22
 	0013cd20 mov mar,0xa8ef20
 	0013cd2c memread4 ax
 	0013cd34 lnot ax
 	0013cd3c jz 0x0013fbb4
		0013fbb4: CONDITIONAL_JUMP
		0013cd44: FALL_THROUGH

	[0013cd44]
		0013cd18: FALL_THROUGH
 	0013cd44 sourceline 0xd24
 	0013cd4c mov mar,0xa96f20
 	0013cd58 memread4 ax
 	0013cd60 jz 0x0013f9e4
		0013f9e4: CONDITIONAL_JUMP
		0013cd68: FALL_THROUGH

	[0013cd68]
		0013cd44: FALL_THROUGH
 	0013cd68 sourceline 0xd26
 	0013cd70 setfuncargs 0x0
 	0013cd78 mov ax,0x6def20
 	0013cd84 farcall ax
 	0013cd8c lnot ax
 	0013cd94 jz 0x0013cdf0
		0013cdf0: CONDITIONAL_JUMP
		0013cd9c: FALL_THROUGH

	[0013cd9c]
		0013cd68: FALL_THROUGH
 	0013cd9c mov ax,0x82
 	0013cda8 farpush ax
 	0013cdb0 mov ax,0x86
 	0013cdbc farpush ax
 	0013cdc4 setfuncargs 0x2
 	0013cdcc mov ax,0x6e6f20
 	0013cdd8 farcall ax
 	0013cde0 farsubsp 0x2
 	0013cde8 jmp 0x0013f9d4
		0013f9d4: UNCONDITIONAL_JUMP

	[0013cdf0]
		0013cd68: CONDITIONAL_JUMP
 	0013cdf0 sourceline 0xd29
 	0013cdf8 mov ax,0x0
 	0013ce04 push ax
 	0013ce0c mov ax,0x1
 	0013ce18 assertlte ax,0x32
 	0013ce24 mul ax,0x8
 	0013ce30 mov cx,ax
 	0013ce3c pop ax
 	0013ce44 mov bx,ax
 	0013ce50 mov mar,0x6c6f20
 	0013ce5c add mar,cx
 	0013ce68 mov ax,mar
 	0013ce74 push op
 	0013ce7c mov op,ax
 	0013ce84 farpush bx
 	0013ce8c setfuncargs 0x1
 	0013ce94 mov ax,0xa66f20
 	0013cea0 farcall ax
 	0013cea8 farsubsp 0x1
 	0013ceb0 pop op
 	0013ceb8 sourceline 0xd2a
 	0013cec0 mov ax,0x3
 	0013cecc mov bx,ax
 	0013ced8 mov mar,0x3cef20
 	0013cee4 mov ax,mar
 	0013cef0 push op
 	0013cef8 mov op,ax
 	0013cf00 farpush bx
 	0013cf08 setfuncargs 0x1
 	0013cf10 mov ax,0x69ef20
 	0013cf1c farcall ax
 	0013cf24 farsubsp 0x1
 	0013cf2c pop op
 	0013cf34 sourceline 0xd2b
 	0013cf3c mov ax,0x17
 	0013cf48 mov bx,ax
 	0013cf54 mov mar,0x506f20
 	0013cf60 mov ax,mar
 	0013cf6c push op
 	0013cf74 mov op,ax
 	0013cf7c farpush bx
 	0013cf84 setfuncargs 0x1
 	0013cf8c mov ax,0x69ef20
 	0013cf98 farcall ax
 	0013cfa0 farsubsp 0x1
 	0013cfa8 pop op
 	0013cfb0 sourceline 0xd2c
 	0013cfb8 push op
 	0013cfc0 mov ax,0x397
 	0013cfcc farpush ax
 	0013cfd4 mov ax,0x1
 	0013cfe0 farpush ax
 	0013cfe8 mov mar,0x3cef20
 	0013cff4 mov ax,mar
 	0013d000 mov op,ax
 	0013d008 setfuncargs 0x2
 	0013d010 mov ax,0x6eef20
 	0013d01c farcall ax
 	0013d024 farsubsp 0x2
 	0013d02c pop op
 	0013d034 sourceline 0xd2d
 	0013d03c mov ax,0x104654
 	0013d048 call ax
 	0013d050 sourceline 0xd30
 	0013d058 mov ax,0x14
 	0013d064 farpush ax
 	0013d06c setfuncargs 0x1
 	0013d074 mov ax,0x426f20
 	0013d080 farcall ax
 	0013d088 farsubsp 0x1
 	0013d090 sourceline 0xd31
 	0013d098 push op
 	0013d0a0 mov ax,0x2ba920
 	0013d0ac farpush ax
 	0013d0b4 mov mar,0x3cef20
 	0013d0c0 mov ax,mar
 	0013d0cc mov op,ax
 	0013d0d4 setfuncargs 0x1
 	0013d0dc mov ax,0x6f6f20
 	0013d0e8 farcall ax
 	0013d0f0 farsubsp 0x1
 	0013d0f8 pop op
 	0013d100 sourceline 0xd32
 	0013d108 push op
 	0013d110 mov ax,0x2ba930
 	0013d11c farpush ax
 	0013d124 mov mar,0x506f20
 	0013d130 mov ax,mar
 	0013d13c mov op,ax
 	0013d144 setfuncargs 0x1
 	0013d14c mov ax,0x6f6f20
 	0013d158 farcall ax
 	0013d160 farsubsp 0x1
 	0013d168 pop op
 	0013d170 sourceline 0xd33
 	0013d178 push op
 	0013d180 mov ax,0x2ba943
 	0013d18c farpush ax
 	0013d194 mov mar,0x3cef20
 	0013d1a0 mov ax,mar
 	0013d1ac mov op,ax
 	0013d1b4 setfuncargs 0x1
 	0013d1bc mov ax,0x6f6f20
 	0013d1c8 farcall ax
 	0013d1d0 farsubsp 0x1
 	0013d1d8 pop op
 	0013d1e0 sourceline 0xd34
 	0013d1e8 push op
 	0013d1f0 mov ax,0x2ba96f
 	0013d1fc farpush ax
 	0013d204 mov mar,0x506f20
 	0013d210 mov ax,mar
 	0013d21c mov op,ax
 	0013d224 setfuncargs 0x1
 	0013d22c mov ax,0x6f6f20
 	0013d238 farcall ax
 	0013d240 farsubsp 0x1
 	0013d248 pop op
 	0013d250 sourceline 0xd35
 	0013d258 push op
 	0013d260 mov ax,0x2ba9ba
 	0013d26c farpush ax
 	0013d274 mov mar,0x3cef20
 	0013d280 mov ax,mar
 	0013d28c mov op,ax
 	0013d294 setfuncargs 0x1
 	0013d29c mov ax,0x6f6f20
 	0013d2a8 farcall ax
 	0013d2b0 farsubsp 0x1
 	0013d2b8 pop op
 	0013d2c0 sourceline 0xd36
 	0013d2c8 push op
 	0013d2d0 mov ax,0x2ba9eb
 	0013d2dc farpush ax
 	0013d2e4 mov mar,0x506f20
 	0013d2f0 mov ax,mar
 	0013d2fc mov op,ax
 	0013d304 setfuncargs 0x1
 	0013d30c mov ax,0x6f6f20
 	0013d318 farcall ax
 	0013d320 farsubsp 0x1
 	0013d328 pop op
 	0013d330 sourceline 0xd37
 	0013d338 push op
 	0013d340 mov ax,0x2baa1c
 	0013d34c farpush ax
 	0013d354 mov mar,0x3cef20
 	0013d360 mov ax,mar
 	0013d36c mov op,ax
 	0013d374 setfuncargs 0x1
 	0013d37c mov ax,0x6f6f20
 	0013d388 farcall ax
 	0013d390 farsubsp 0x1
 	0013d398 pop op
 	0013d3a0 sourceline 0xd38
 	0013d3a8 push op
 	0013d3b0 mov ax,0x2baa56
 	0013d3bc farpush ax
 	0013d3c4 mov mar,0x506f20
 	0013d3d0 mov ax,mar
 	0013d3dc mov op,ax
 	0013d3e4 setfuncargs 0x1
 	0013d3ec mov ax,0x6f6f20
 	0013d3f8 farcall ax
 	0013d400 farsubsp 0x1
 	0013d408 pop op
 	0013d410 sourceline 0xd39
 	0013d418 push op
 	0013d420 mov ax,0x2baa8f
 	0013d42c farpush ax
 	0013d434 mov mar,0x3cef20
 	0013d440 mov ax,mar
 	0013d44c mov op,ax
 	0013d454 setfuncargs 0x1
 	0013d45c mov ax,0x6f6f20
 	0013d468 farcall ax
 	0013d470 farsubsp 0x1
 	0013d478 pop op
 	0013d480 sourceline 0xd3a
 	0013d488 push op
 	0013d490 mov ax,0x2baab2
 	0013d49c farpush ax
 	0013d4a4 mov mar,0x506f20
 	0013d4b0 mov ax,mar
 	0013d4bc mov op,ax
 	0013d4c4 setfuncargs 0x1
 	0013d4cc mov ax,0x6f6f20
 	0013d4d8 farcall ax
 	0013d4e0 farsubsp 0x1
 	0013d4e8 pop op
 	0013d4f0 sourceline 0xd3b
 	0013d4f8 push op
 	0013d500 mov ax,0x2bab4b
 	0013d50c farpush ax
 	0013d514 mov mar,0x3cef20
 	0013d520 mov ax,mar
 	0013d52c mov op,ax
 	0013d534 setfuncargs 0x1
 	0013d53c mov ax,0x6f6f20
 	0013d548 farcall ax
 	0013d550 farsubsp 0x1
 	0013d558 pop op
 	0013d560 sourceline 0xd3c
 	0013d568 push op
 	0013d570 mov ax,0x2bab6e
 	0013d57c farpush ax
 	0013d584 mov mar,0x506f20
 	0013d590 mov ax,mar
 	0013d59c mov op,ax
 	0013d5a4 setfuncargs 0x1
 	0013d5ac mov ax,0x6f6f20
 	0013d5b8 farcall ax
 	0013d5c0 farsubsp 0x1
 	0013d5c8 pop op
 	0013d5d0 sourceline 0xd3d
 	0013d5d8 push op
 	0013d5e0 mov ax,0x2babd4
 	0013d5ec farpush ax
 	0013d5f4 mov mar,0x3cef20
 	0013d600 mov ax,mar
 	0013d60c mov op,ax
 	0013d614 setfuncargs 0x1
 	0013d61c mov ax,0x6f6f20
 	0013d628 farcall ax
 	0013d630 farsubsp 0x1
 	0013d638 pop op
 	0013d640 sourceline 0xd3e
 	0013d648 push op
 	0013d650 mov ax,0x2bac90
 	0013d65c farpush ax
 	0013d664 mov mar,0x506f20
 	0013d670 mov ax,mar
 	0013d67c mov op,ax
 	0013d684 setfuncargs 0x1
 	0013d68c mov ax,0x6f6f20
 	0013d698 farcall ax
 	0013d6a0 farsubsp 0x1
 	0013d6a8 pop op
 	0013d6b0 sourceline 0xd3f
 	0013d6b8 push op
 	0013d6c0 mov ax,0x2bacf3
 	0013d6cc farpush ax
 	0013d6d4 mov mar,0x3cef20
 	0013d6e0 mov ax,mar
 	0013d6ec mov op,ax
 	0013d6f4 setfuncargs 0x1
 	0013d6fc mov ax,0x6f6f20
 	0013d708 farcall ax
 	0013d710 farsubsp 0x1
 	0013d718 pop op
 	0013d720 sourceline 0xd40
 	0013d728 push op
 	0013d730 mov ax,0x2bad53
 	0013d73c farpush ax
 	0013d744 mov mar,0x506f20
 	0013d750 mov ax,mar
 	0013d75c mov op,ax
 	0013d764 setfuncargs 0x1
 	0013d76c mov ax,0x6f6f20
 	0013d778 farcall ax
 	0013d780 farsubsp 0x1
 	0013d788 pop op
 	0013d790 sourceline 0xd43
 	0013d798 push op
 	0013d7a0 mov ax,0x427
 	0013d7ac farpush ax
 	0013d7b4 mov ax,0x397
 	0013d7c0 farpush ax
 	0013d7c8 mov ax,0x0
 	0013d7d4 farpush ax
 	0013d7dc mov ax,0x3
 	0013d7e8 farpush ax
 	0013d7f0 mov ax,0x0
 	0013d7fc farpush ax
 	0013d804 mov mar,0x506f20
 	0013d810 mov ax,mar
 	0013d81c mov op,ax
 	0013d824 setfuncargs 0x5
 	0013d82c mov ax,0x536f20
 	0013d838 farcall ax
 	0013d840 farsubsp 0x5
 	0013d848 pop op
 	0013d850 sourceline 0xd44
 	0013d858 push op
 	0013d860 mov ax,0x6d
 	0013d86c farpush ax
 	0013d874 mov mar,0x506f20
 	0013d880 mov ax,mar
 	0013d88c mov op,ax
 	0013d894 setfuncargs 0x1
 	0013d89c mov ax,0x51ef20
 	0013d8a8 farcall ax
 	0013d8b0 farsubsp 0x1
 	0013d8b8 pop op
 	0013d8c0 sourceline 0xd45
 	0013d8c8 mov ax,0x7f
 	0013d8d4 mov bx,ax
 	0013d8e0 mov mar,0x506f20
 	0013d8ec mov ax,mar
 	0013d8f8 push op
 	0013d900 mov op,ax
 	0013d908 farpush bx
 	0013d910 setfuncargs 0x1
 	0013d918 mov ax,0x526f20
 	0013d924 farcall ax
 	0013d92c farsubsp 0x1
 	0013d934 pop op
 	0013d93c sourceline 0xd46
 	0013d944 push op
 	0013d94c mov ax,0x426
 	0013d958 farpush ax
 	0013d960 mov ax,0x397
 	0013d96c farpush ax
 	0013d974 mov ax,0x0
 	0013d980 farpush ax
 	0013d988 mov ax,0x3
 	0013d994 farpush ax
 	0013d99c mov ax,0x0
 	0013d9a8 farpush ax
 	0013d9b0 mov mar,0x506f20
 	0013d9bc mov ax,mar
 	0013d9c8 mov op,ax
 	0013d9d0 setfuncargs 0x5
 	0013d9d8 mov ax,0x536f20
 	0013d9e4 farcall ax
 	0013d9ec farsubsp 0x5
 	0013d9f4 pop op
 	0013d9fc sourceline 0xd47
 	0013da04 push op
 	0013da0c mov ax,0x1
 	0013da18 farpush ax
 	0013da20 mov ax,0x32
 	0013da2c farpush ax
 	0013da34 mov mar,0x53ef20
 	0013da40 mov ax,mar
 	0013da4c mov op,ax
 	0013da54 setfuncargs 0x2
 	0013da5c mov ax,0x2fef20
 	0013da68 farcall ax
 	0013da70 farsubsp 0x2
 	0013da78 pop op
 	0013da80 sourceline 0xd48
 	0013da88 push op
 	0013da90 mov ax,0x6f
 	0013da9c farpush ax
 	0013daa4 mov mar,0x506f20
 	0013dab0 mov ax,mar
 	0013dabc mov op,ax
 	0013dac4 setfuncargs 0x1
 	0013dacc mov ax,0x51ef20
 	0013dad8 farcall ax
 	0013dae0 farsubsp 0x1
 	0013dae8 pop op
 	0013daf0 sourceline 0xd49
 	0013daf8 push op
 	0013db00 mov ax,0x426
 	0013db0c farpush ax
 	0013db14 mov ax,0x398
 	0013db20 farpush ax
 	0013db28 mov ax,0x1
 	0013db34 farpush ax
 	0013db3c mov ax,0x3
 	0013db48 farpush ax
 	0013db50 mov ax,0x0
 	0013db5c farpush ax
 	0013db64 mov mar,0x506f20
 	0013db70 mov ax,mar
 	0013db7c mov op,ax
 	0013db84 setfuncargs 0x5
 	0013db8c mov ax,0x536f20
 	0013db98 farcall ax
 	0013dba0 farsubsp 0x5
 	0013dba8 pop op
 	0013dbb0 sourceline 0xd4a
 	0013dbb8 push op
 	0013dbc0 mov ax,-0x1
 	0013dbcc farpush ax
 	0013dbd4 mov ax,-0x1
 	0013dbe0 farpush ax
 	0013dbe8 mov ax,0x70
 	0013dbf4 farpush ax
 	0013dbfc mov ax,0x0
 	0013dc08 assertlte ax,0x28
 	0013dc14 mul ax,0x8
 	0013dc20 mov cx,ax
 	0013dc2c mov mar,0x6fef20
 	0013dc38 add mar,cx
 	0013dc44 mov ax,mar
 	0013dc50 mov op,ax
 	0013dc58 setfuncargs 0x3
 	0013dc60 mov ax,0xa6ef20
 	0013dc6c farcall ax
 	0013dc74 farsubsp 0x3
 	0013dc7c pop op
 	0013dc84 sourceline 0xd4b
 	0013dc8c push op
 	0013dc94 mov ax,0x426
 	0013dca0 farpush ax
 	0013dca8 mov ax,0x397
 	0013dcb4 farpush ax
 	0013dcbc mov ax,0x0
 	0013dcc8 farpush ax
 	0013dcd0 mov ax,0x6
 	0013dcdc farpush ax
 	0013dce4 mov ax,0x0
 	0013dcf0 farpush ax
 	0013dcf8 mov ax,0x0
 	0013dd04 assertlte ax,0x28
 	0013dd10 mul ax,0x8
 	0013dd1c mov cx,ax
 	0013dd28 mov mar,0x6fef20
 	0013dd34 add mar,cx
 	0013dd40 mov ax,mar
 	0013dd4c mov op,ax
 	0013dd54 setfuncargs 0x5
 	0013dd5c mov ax,0xa76f20
 	0013dd68 farcall ax
 	0013dd70 farsubsp 0x5
 	0013dd78 pop op
 	0013dd80 sourceline 0xd4c
 	0013dd88 push op
 	0013dd90 mov ax,0x426
 	0013dd9c farpush ax
 	0013dda4 mov ax,0x398
 	0013ddb0 farpush ax
 	0013ddb8 mov ax,0x1
 	0013ddc4 farpush ax
 	0013ddcc mov ax,0x7
 	0013ddd8 farpush ax
 	0013dde0 mov ax,0x1
 	0013ddec farpush ax
 	0013ddf4 mov ax,0x0
 	0013de00 assertlte ax,0x28
 	0013de0c mul ax,0x8
 	0013de18 mov cx,ax
 	0013de24 mov mar,0x6fef20
 	0013de30 add mar,cx
 	0013de3c mov ax,mar
 	0013de48 mov op,ax
 	0013de50 setfuncargs 0x5
 	0013de58 mov ax,0xa76f20
 	0013de64 farcall ax
 	0013de6c farsubsp 0x5
 	0013de74 pop op
 	0013de7c sourceline 0xd4d
 	0013de84 mov ax,0x1e
 	0013de90 farpush ax
 	0013de98 setfuncargs 0x1
 	0013dea0 mov ax,0x426f20
 	0013deac farcall ax
 	0013deb4 farsubsp 0x1
 	0013debc sourceline 0xd4e
 	0013dec4 push op
 	0013decc mov ax,0x427
 	0013ded8 farpush ax
 	0013dee0 mov ax,0x397
 	0013deec farpush ax
 	0013def4 mov ax,0x0
 	0013df00 farpush ax
 	0013df08 mov ax,0x7
 	0013df14 farpush ax
 	0013df1c mov ax,0x1
 	0013df28 farpush ax
 	0013df30 mov ax,0x0
 	0013df3c assertlte ax,0x28
 	0013df48 mul ax,0x8
 	0013df54 mov cx,ax
 	0013df60 mov mar,0x6fef20
 	0013df6c add mar,cx
 	0013df78 mov ax,mar
 	0013df84 mov op,ax
 	0013df8c setfuncargs 0x5
 	0013df94 mov ax,0xa76f20
 	0013dfa0 farcall ax
 	0013dfa8 farsubsp 0x5
 	0013dfb0 pop op
 	0013dfb8 sourceline 0xd4f
 	0013dfc0 push op
 	0013dfc8 mov ax,0x427
 	0013dfd4 farpush ax
 	0013dfdc mov ax,0x397
 	0013dfe8 farpush ax
 	0013dff0 mov ax,0x0
 	0013dffc farpush ax
 	0013e004 mov ax,0x6
 	0013e010 farpush ax
 	0013e018 mov ax,0x0
 	0013e024 farpush ax
 	0013e02c mov ax,0x0
 	0013e038 assertlte ax,0x28
 	0013e044 mul ax,0x8
 	0013e050 mov cx,ax
 	0013e05c mov mar,0x6fef20
 	0013e068 add mar,cx
 	0013e074 mov ax,mar
 	0013e080 mov op,ax
 	0013e088 setfuncargs 0x5
 	0013e090 mov ax,0xa76f20
 	0013e09c farcall ax
 	0013e0a4 farsubsp 0x5
 	0013e0ac pop op
 	0013e0b4 sourceline 0xd50
 	0013e0bc push op
 	0013e0c4 mov ax,0x6d
 	0013e0d0 farpush ax
 	0013e0d8 mov mar,0x506f20
 	0013e0e4 mov ax,mar
 	0013e0f0 mov op,ax
 	0013e0f8 setfuncargs 0x1
 	0013e100 mov ax,0x51ef20
 	0013e10c farcall ax
 	0013e114 farsubsp 0x1
 	0013e11c pop op
 	0013e124 sourceline 0xd51
 	0013e12c push op
 	0013e134 mov mar,0x53ef20
 	0013e140 mov ax,mar
 	0013e14c mov op,ax
 	0013e154 setfuncargs 0x0
 	0013e15c mov ax,0x306f20
 	0013e168 farcall ax
 	0013e170 pop op
 	0013e178 sourceline 0xd52
 	0013e180 push op
 	0013e188 mov ax,0x427
 	0013e194 farpush ax
 	0013e19c mov ax,0x397
 	0013e1a8 farpush ax
 	0013e1b0 mov ax,0x0
 	0013e1bc farpush ax
 	0013e1c4 mov ax,0x3
 	0013e1d0 farpush ax
 	0013e1d8 mov ax,0x0
 	0013e1e4 farpush ax
 	0013e1ec mov mar,0x506f20
 	0013e1f8 mov ax,mar
 	0013e204 mov op,ax
 	0013e20c setfuncargs 0x5
 	0013e214 mov ax,0x536f20
 	0013e220 farcall ax
 	0013e228 farsubsp 0x5
 	0013e230 pop op
 	0013e238 sourceline 0xd53
 	0013e240 push op
 	0013e248 mov ax,0x6b
 	0013e254 farpush ax
 	0013e25c mov mar,0x506f20
 	0013e268 mov ax,mar
 	0013e274 mov op,ax
 	0013e27c setfuncargs 0x1
 	0013e284 mov ax,0x51ef20
 	0013e290 farcall ax
 	0013e298 farsubsp 0x1
 	0013e2a0 pop op
 	0013e2a8 sourceline 0xd54
 	0013e2b0 mov ax,0x7e
 	0013e2bc mov bx,ax
 	0013e2c8 mov mar,0x506f20
 	0013e2d4 mov ax,mar
 	0013e2e0 push op
 	0013e2e8 mov op,ax
 	0013e2f0 farpush bx
 	0013e2f8 setfuncargs 0x1
 	0013e300 mov ax,0x526f20
 	0013e30c farcall ax
 	0013e314 farsubsp 0x1
 	0013e31c pop op
 	0013e324 sourceline 0xd55
 	0013e32c push op
 	0013e334 mov ax,0x426
 	0013e340 farpush ax
 	0013e348 mov ax,0x397
 	0013e354 farpush ax
 	0013e35c mov ax,0x0
 	0013e368 farpush ax
 	0013e370 mov ax,0x3
 	0013e37c farpush ax
 	0013e384 mov ax,0x0
 	0013e390 farpush ax
 	0013e398 mov mar,0x506f20
 	0013e3a4 mov ax,mar
 	0013e3b0 mov op,ax
 	0013e3b8 setfuncargs 0x5
 	0013e3c0 mov ax,0x536f20
 	0013e3cc farcall ax
 	0013e3d4 farsubsp 0x5
 	0013e3dc pop op
 	0013e3e4 sourceline 0xd56
 	0013e3ec push op
 	0013e3f4 mov ax,0x6
 	0013e400 farpush ax
 	0013e408 mov mar,0x3cef20
 	0013e414 mov ax,mar
 	0013e420 mov op,ax
 	0013e428 setfuncargs 0x1
 	0013e430 mov ax,0x51ef20
 	0013e43c farcall ax
 	0013e444 farsubsp 0x1
 	0013e44c pop op
 	0013e454 sourceline 0xd57
 	0013e45c mov ax,0x7a
 	0013e468 mov bx,ax
 	0013e474 mov mar,0x3cef20
 	0013e480 mov ax,mar
 	0013e48c push op
 	0013e494 mov op,ax
 	0013e49c farpush bx
 	0013e4a4 setfuncargs 0x1
 	0013e4ac mov ax,0x526f20
 	0013e4b8 farcall ax
 	0013e4c0 farsubsp 0x1
 	0013e4c8 pop op
 	0013e4d0 sourceline 0xd58
 	0013e4d8 mov ax,0x7e
 	0013e4e4 mov bx,ax
 	0013e4f0 mov mar,0x3cef20
 	0013e4fc mov ax,mar
 	0013e508 push op
 	0013e510 mov op,ax
 	0013e518 farpush bx
 	0013e520 setfuncargs 0x1
 	0013e528 mov ax,0x70ef20
 	0013e534 farcall ax
 	0013e53c farsubsp 0x1
 	0013e544 pop op
 	0013e54c sourceline 0xd59
 	0013e554 push op
 	0013e55c mov ax,0x426
 	0013e568 farpush ax
 	0013e570 mov ax,0x398
 	0013e57c farpush ax
 	0013e584 mov ax,0x0
 	0013e590 farpush ax
 	0013e598 mov ax,0x3
 	0013e5a4 farpush ax
 	0013e5ac mov ax,0x2
 	0013e5b8 farpush ax
 	0013e5c0 mov mar,0x3cef20
 	0013e5cc mov ax,mar
 	0013e5d8 mov op,ax
 	0013e5e0 setfuncargs 0x5
 	0013e5e8 mov ax,0x536f20
 	0013e5f4 farcall ax
 	0013e5fc farsubsp 0x5
 	0013e604 pop op
 	0013e60c sourceline 0xd5a
 	0013e614 push op
 	0013e61c mov ax,0x6e
 	0013e628 farpush ax
 	0013e630 mov mar,0x506f20
 	0013e63c mov ax,mar
 	0013e648 mov op,ax
 	0013e650 setfuncargs 0x1
 	0013e658 mov ax,0x51ef20
 	0013e664 farcall ax
 	0013e66c farsubsp 0x1
 	0013e674 pop op
 	0013e67c sourceline 0xd5b
 	0013e684 mov ax,0x5f
 	0013e690 mov bx,ax
 	0013e69c mov mar,0x506f20
 	0013e6a8 mov ax,mar
 	0013e6b4 push op
 	0013e6bc mov op,ax
 	0013e6c4 farpush bx
 	0013e6cc setfuncargs 0x1
 	0013e6d4 mov ax,0x70ef20
 	0013e6e0 farcall ax
 	0013e6e8 farsubsp 0x1
 	0013e6f0 pop op
 	0013e6f8 sourceline 0xd5c
 	0013e700 push op
 	0013e708 mov ax,0x426
 	0013e714 farpush ax
 	0013e71c mov ax,0x398
 	0013e728 farpush ax
 	0013e730 mov ax,0x0
 	0013e73c farpush ax
 	0013e744 mov ax,0x3
 	0013e750 farpush ax
 	0013e758 mov ax,0x0
 	0013e764 farpush ax
 	0013e76c mov mar,0x506f20
 	0013e778 mov ax,mar
 	0013e784 mov op,ax
 	0013e78c setfuncargs 0x5
 	0013e794 mov ax,0x536f20
 	0013e7a0 farcall ax
 	0013e7a8 farsubsp 0x5
 	0013e7b0 pop op
 	0013e7b8 sourceline 0xd5d
 	0013e7c0 mov ax,0x1e
 	0013e7cc farpush ax
 	0013e7d4 setfuncargs 0x1
 	0013e7dc mov ax,0x426f20
 	0013e7e8 farcall ax
 	0013e7f0 farsubsp 0x1
 	0013e7f8 sourceline 0xd5e
 	0013e800 push op
 	0013e808 mov ax,0x427
 	0013e814 farpush ax
 	0013e81c mov ax,0x398
 	0013e828 farpush ax
 	0013e830 mov ax,0x0
 	0013e83c farpush ax
 	0013e844 mov ax,0x3
 	0013e850 farpush ax
 	0013e858 mov ax,0x0
 	0013e864 farpush ax
 	0013e86c mov mar,0x506f20
 	0013e878 mov ax,mar
 	0013e884 mov op,ax
 	0013e88c setfuncargs 0x5
 	0013e894 mov ax,0x536f20
 	0013e8a0 farcall ax
 	0013e8a8 farsubsp 0x5
 	0013e8b0 pop op
 	0013e8b8 sourceline 0xd5f
 	0013e8c0 push op
 	0013e8c8 mov ax,0x427
 	0013e8d4 farpush ax
 	0013e8dc mov ax,0x397
 	0013e8e8 farpush ax
 	0013e8f0 mov ax,0x0
 	0013e8fc farpush ax
 	0013e904 mov ax,0x3
 	0013e910 farpush ax
 	0013e918 mov ax,0x2
 	0013e924 farpush ax
 	0013e92c mov mar,0x3cef20
 	0013e938 mov ax,mar
 	0013e944 mov op,ax
 	0013e94c setfuncargs 0x5
 	0013e954 mov ax,0x536f20
 	0013e960 farcall ax
 	0013e968 farsubsp 0x5
 	0013e970 pop op
 	0013e978 sourceline 0xd60
 	0013e980 push op
 	0013e988 mov ax,0x2
 	0013e994 farpush ax
 	0013e99c mov mar,0x3cef20
 	0013e9a8 mov ax,mar
 	0013e9b4 mov op,ax
 	0013e9bc setfuncargs 0x1
 	0013e9c4 mov ax,0x51ef20
 	0013e9d0 farcall ax
 	0013e9d8 farsubsp 0x1
 	0013e9e0 pop op
 	0013e9e8 sourceline 0xd61
 	0013e9f0 mov ax,0x1
 	0013e9fc mov bx,ax
 	0013ea08 mov mar,0x3cef20
 	0013ea14 mov ax,mar
 	0013ea20 push op
 	0013ea28 mov op,ax
 	0013ea30 farpush bx
 	0013ea38 setfuncargs 0x1
 	0013ea40 mov ax,0x766f20
 	0013ea4c farcall ax
 	0013ea54 farsubsp 0x1
 	0013ea5c pop op
 	0013ea64 sourceline 0xd62
 	0013ea6c mov ax,0x86
 	0013ea78 mov bx,ax
 	0013ea84 mov mar,0x3cef20
 	0013ea90 mov ax,mar
 	0013ea9c push op
 	0013eaa4 mov op,ax
 	0013eaac farpush bx
 	0013eab4 setfuncargs 0x1
 	0013eabc mov ax,0x70ef20
 	0013eac8 farcall ax
 	0013ead0 farsubsp 0x1
 	0013ead8 pop op
 	0013eae0 sourceline 0xd63
 	0013eae8 mov ax,0x82
 	0013eaf4 mov bx,ax
 	0013eb00 mov mar,0x3cef20
 	0013eb0c mov ax,mar
 	0013eb18 push op
 	0013eb20 mov op,ax
 	0013eb28 farpush bx
 	0013eb30 setfuncargs 0x1
 	0013eb38 mov ax,0x526f20
 	0013eb44 farcall ax
 	0013eb4c farsubsp 0x1
 	0013eb54 pop op
 	0013eb5c sourceline 0xd64
 	0013eb64 push op
 	0013eb6c mov ax,0x2bad6f
 	0013eb78 farpush ax
 	0013eb80 mov mar,0x506f20
 	0013eb8c mov ax,mar
 	0013eb98 mov op,ax
 	0013eba0 setfuncargs 0x1
 	0013eba8 mov ax,0x6f6f20
 	0013ebb4 farcall ax
 	0013ebbc farsubsp 0x1
 	0013ebc4 pop op
 	0013ebcc sourceline 0xd65
 	0013ebd4 push op
 	0013ebdc mov ax,0x2bae34
 	0013ebe8 farpush ax
 	0013ebf0 mov mar,0x3cef20
 	0013ebfc mov ax,mar
 	0013ec08 mov op,ax
 	0013ec10 setfuncargs 0x1
 	0013ec18 mov ax,0x6f6f20
 	0013ec24 farcall ax
 	0013ec2c farsubsp 0x1
 	0013ec34 pop op
 	0013ec3c sourceline 0xd67
 	0013ec44 mov ax,0x14
 	0013ec50 farpush ax
 	0013ec58 setfuncargs 0x1
 	0013ec60 mov ax,0x426f20
 	0013ec6c farcall ax
 	0013ec74 farsubsp 0x1
 	0013ec7c sourceline 0xd68
 	0013ec84 push op
 	0013ec8c mov ax,0x2baed6
 	0013ec98 farpush ax
 	0013eca0 mov mar,0x506f20
 	0013ecac mov ax,mar
 	0013ecb8 mov op,ax
 	0013ecc0 setfuncargs 0x1
 	0013ecc8 mov ax,0x6f6f20
 	0013ecd4 farcall ax
 	0013ecdc farsubsp 0x1
 	0013ece4 pop op
 	0013ecec sourceline 0xd69
 	0013ecf4 push op
 	0013ecfc mov ax,0x2baf7b
 	0013ed08 farpush ax
 	0013ed10 mov mar,0x506f20
 	0013ed1c mov ax,mar
 	0013ed28 mov op,ax
 	0013ed30 setfuncargs 0x1
 	0013ed38 mov ax,0x6f6f20
 	0013ed44 farcall ax
 	0013ed4c farsubsp 0x1
 	0013ed54 pop op
 	0013ed5c sourceline 0xd6a
 	0013ed64 push op
 	0013ed6c mov ax,0x2bafc1
 	0013ed78 farpush ax
 	0013ed80 mov mar,0x3cef20
 	0013ed8c mov ax,mar
 	0013ed98 mov op,ax
 	0013eda0 setfuncargs 0x1
 	0013eda8 mov ax,0x6f6f20
 	0013edb4 farcall ax
 	0013edbc farsubsp 0x1
 	0013edc4 pop op
 	0013edcc sourceline 0xd6b
 	0013edd4 push op
 	0013eddc mov ax,0x2bafe1
 	0013ede8 farpush ax
 	0013edf0 mov mar,0x506f20
 	0013edfc mov ax,mar
 	0013ee08 mov op,ax
 	0013ee10 setfuncargs 0x1
 	0013ee18 mov ax,0x6f6f20
 	0013ee24 farcall ax
 	0013ee2c farsubsp 0x1
 	0013ee34 pop op
 	0013ee3c sourceline 0xd6c
 	0013ee44 push op
 	0013ee4c mov ax,0x2bb027
 	0013ee58 farpush ax
 	0013ee60 mov mar,0x3cef20
 	0013ee6c mov ax,mar
 	0013ee78 mov op,ax
 	0013ee80 setfuncargs 0x1
 	0013ee88 mov ax,0x6f6f20
 	0013ee94 farcall ax
 	0013ee9c farsubsp 0x1
 	0013eea4 pop op
 	0013eeac sourceline 0xd6d
 	0013eeb4 push op
 	0013eebc mov ax,0x2bb049
 	0013eec8 farpush ax
 	0013eed0 mov mar,0x506f20
 	0013eedc mov ax,mar
 	0013eee8 mov op,ax
 	0013eef0 setfuncargs 0x1
 	0013eef8 mov ax,0x6f6f20
 	0013ef04 farcall ax
 	0013ef0c farsubsp 0x1
 	0013ef14 pop op
 	0013ef1c sourceline 0xd6e
 	0013ef24 push op
 	0013ef2c mov ax,0x2bb0ab
 	0013ef38 farpush ax
 	0013ef40 mov mar,0x3cef20
 	0013ef4c mov ax,mar
 	0013ef58 mov op,ax
 	0013ef60 setfuncargs 0x1
 	0013ef68 mov ax,0x6f6f20
 	0013ef74 farcall ax
 	0013ef7c farsubsp 0x1
 	0013ef84 pop op
 	0013ef8c sourceline 0xd6f
 	0013ef94 push op
 	0013ef9c mov ax,0x2bb14a
 	0013efa8 farpush ax
 	0013efb0 mov mar,0x506f20
 	0013efbc mov ax,mar
 	0013efc8 mov op,ax
 	0013efd0 setfuncargs 0x1
 	0013efd8 mov ax,0x6f6f20
 	0013efe4 farcall ax
 	0013efec farsubsp 0x1
 	0013eff4 pop op
 	0013effc sourceline 0xd70
 	0013f004 push op
 	0013f00c mov ax,0x2bb157
 	0013f018 farpush ax
 	0013f020 mov mar,0x3cef20
 	0013f02c mov ax,mar
 	0013f038 mov op,ax
 	0013f040 setfuncargs 0x1
 	0013f048 mov ax,0x6f6f20
 	0013f054 farcall ax
 	0013f05c farsubsp 0x1
 	0013f064 pop op
 	0013f06c sourceline 0xd71
 	0013f074 push op
 	0013f07c mov ax,0x2bb1d1
 	0013f088 farpush ax
 	0013f090 mov mar,0x506f20
 	0013f09c mov ax,mar
 	0013f0a8 mov op,ax
 	0013f0b0 setfuncargs 0x1
 	0013f0b8 mov ax,0x6f6f20
 	0013f0c4 farcall ax
 	0013f0cc farsubsp 0x1
 	0013f0d4 pop op
 	0013f0dc sourceline 0xd72
 	0013f0e4 push op
 	0013f0ec mov ax,0x2bb1f9
 	0013f0f8 farpush ax
 	0013f100 mov mar,0x3cef20
 	0013f10c mov ax,mar
 	0013f118 mov op,ax
 	0013f120 setfuncargs 0x1
 	0013f128 mov ax,0x6f6f20
 	0013f134 farcall ax
 	0013f13c farsubsp 0x1
 	0013f144 pop op
 	0013f14c sourceline 0xd73
 	0013f154 push op
 	0013f15c mov ax,0x2bb220
 	0013f168 farpush ax
 	0013f170 mov mar,0x506f20
 	0013f17c mov ax,mar
 	0013f188 mov op,ax
 	0013f190 setfuncargs 0x1
 	0013f198 mov ax,0x6f6f20
 	0013f1a4 farcall ax
 	0013f1ac farsubsp 0x1
 	0013f1b4 pop op
 	0013f1bc sourceline 0xd74
 	0013f1c4 push op
 	0013f1cc mov ax,0x2bb281
 	0013f1d8 farpush ax
 	0013f1e0 mov mar,0x3cef20
 	0013f1ec mov ax,mar
 	0013f1f8 mov op,ax
 	0013f200 setfuncargs 0x1
 	0013f208 mov ax,0x6f6f20
 	0013f214 farcall ax
 	0013f21c farsubsp 0x1
 	0013f224 pop op
 	0013f22c sourceline 0xd75
 	0013f234 push op
 	0013f23c mov ax,0x2bb2f5
 	0013f248 farpush ax
 	0013f250 mov mar,0x506f20
 	0013f25c mov ax,mar
 	0013f268 mov op,ax
 	0013f270 setfuncargs 0x1
 	0013f278 mov ax,0x6f6f20
 	0013f284 farcall ax
 	0013f28c farsubsp 0x1
 	0013f294 pop op
 	0013f29c sourceline 0xd76
 	0013f2a4 push op
 	0013f2ac mov ax,0x2bb308
 	0013f2b8 farpush ax
 	0013f2c0 mov mar,0x3cef20
 	0013f2cc mov ax,mar
 	0013f2d8 mov op,ax
 	0013f2e0 setfuncargs 0x1
 	0013f2e8 mov ax,0x6f6f20
 	0013f2f4 farcall ax
 	0013f2fc farsubsp 0x1
 	0013f304 pop op
 	0013f30c sourceline 0xd77
 	0013f314 push op
 	0013f31c mov ax,0x2bb3da
 	0013f328 farpush ax
 	0013f330 mov mar,0x3cef20
 	0013f33c mov ax,mar
 	0013f348 mov op,ax
 	0013f350 setfuncargs 0x1
 	0013f358 mov ax,0x6f6f20
 	0013f364 farcall ax
 	0013f36c farsubsp 0x1
 	0013f374 pop op
 	0013f37c sourceline 0xd78
 	0013f384 push op
 	0013f38c mov ax,0x2bb42f
 	0013f398 farpush ax
 	0013f3a0 mov mar,0x506f20
 	0013f3ac mov ax,mar
 	0013f3b8 mov op,ax
 	0013f3c0 setfuncargs 0x1
 	0013f3c8 mov ax,0x6f6f20
 	0013f3d4 farcall ax
 	0013f3dc farsubsp 0x1
 	0013f3e4 pop op
 	0013f3ec sourceline 0xd79
 	0013f3f4 push op
 	0013f3fc mov ax,0x2bb443
 	0013f408 farpush ax
 	0013f410 mov mar,0x3cef20
 	0013f41c mov ax,mar
 	0013f428 mov op,ax
 	0013f430 setfuncargs 0x1
 	0013f438 mov ax,0x6f6f20
 	0013f444 farcall ax
 	0013f44c farsubsp 0x1
 	0013f454 pop op
 	0013f45c sourceline 0xd7a
 	0013f464 push op
 	0013f46c mov ax,0x2bb50e
 	0013f478 farpush ax
 	0013f480 mov mar,0x3cef20
 	0013f48c mov ax,mar
 	0013f498 mov op,ax
 	0013f4a0 setfuncargs 0x1
 	0013f4a8 mov ax,0x6f6f20
 	0013f4b4 farcall ax
 	0013f4bc farsubsp 0x1
 	0013f4c4 pop op
 	0013f4cc sourceline 0xd7b
 	0013f4d4 push op
 	0013f4dc mov ax,0x2bb5b2
 	0013f4e8 farpush ax
 	0013f4f0 mov mar,0x506f20
 	0013f4fc mov ax,mar
 	0013f508 mov op,ax
 	0013f510 setfuncargs 0x1
 	0013f518 mov ax,0x6f6f20
 	0013f524 farcall ax
 	0013f52c farsubsp 0x1
 	0013f534 pop op
 	0013f53c sourceline 0xd7c
 	0013f544 push op
 	0013f54c mov ax,0x2bb609
 	0013f558 farpush ax
 	0013f560 mov mar,0x3cef20
 	0013f56c mov ax,mar
 	0013f578 mov op,ax
 	0013f580 setfuncargs 0x1
 	0013f588 mov ax,0x6f6f20
 	0013f594 farcall ax
 	0013f59c farsubsp 0x1
 	0013f5a4 pop op
 	0013f5ac sourceline 0xd7d
 	0013f5b4 push op
 	0013f5bc mov ax,0x2bb64b
 	0013f5c8 farpush ax
 	0013f5d0 mov mar,0x506f20
 	0013f5dc mov ax,mar
 	0013f5e8 mov op,ax
 	0013f5f0 setfuncargs 0x1
 	0013f5f8 mov ax,0x6f6f20
 	0013f604 farcall ax
 	0013f60c farsubsp 0x1
 	0013f614 pop op
 	0013f61c sourceline 0xd7f
 	0013f624 push op
 	0013f62c mov ax,0x7cfe
 	0013f638 farpush ax
 	0013f640 mov mar,0x9d6f20
 	0013f64c mov ax,mar
 	0013f658 farpush ax
 	0013f660 mov mar,0x3cef20
 	0013f66c mov ax,mar
 	0013f678 mov op,ax
 	0013f680 setfuncargs 0x2
 	0013f688 mov ax,0x7e6f20
 	0013f694 farcall ax
 	0013f69c farsubsp 0x2
 	0013f6a4 pop op
 	0013f6ac sourceline 0xd80
 	0013f6b4 mov ax,0x1
 	0013f6c0 mov mar,0xa8ef20
 	0013f6cc memwrite4 ax
 	0013f6d4 sourceline 0xd81
 	0013f6dc mov ax,0x1
 	0013f6e8 push ax
 	0013f6f0 mov ax,0x1
 	0013f6fc assertlte ax,0x32
 	0013f708 mul ax,0x8
 	0013f714 mov cx,ax
 	0013f720 pop ax
 	0013f728 mov bx,ax
 	0013f734 mov mar,0x6c6f20
 	0013f740 add mar,cx
 	0013f74c mov ax,mar
 	0013f758 push op
 	0013f760 mov op,ax
 	0013f768 farpush bx
 	0013f770 setfuncargs 0x1
 	0013f778 mov ax,0xa66f20
 	0013f784 farcall ax
 	0013f78c farsubsp 0x1
 	0013f794 pop op
 	0013f79c sourceline 0xd82
 	0013f7a4 push op
 	0013f7ac mov ax,0x6b
 	0013f7b8 farpush ax
 	0013f7c0 mov mar,0x506f20
 	0013f7cc mov ax,mar
 	0013f7d8 mov op,ax
 	0013f7e0 setfuncargs 0x1
 	0013f7e8 mov ax,0x51ef20
 	0013f7f4 farcall ax
 	0013f7fc farsubsp 0x1
 	0013f804 pop op
 	0013f80c sourceline 0xd83
 	0013f814 mov ax,0x5b
 	0013f820 mov bx,ax
 	0013f82c mov mar,0x506f20
 	0013f838 mov ax,mar
 	0013f844 push op
 	0013f84c mov op,ax
 	0013f854 farpush bx
 	0013f85c setfuncargs 0x1
 	0013f864 mov ax,0x70ef20
 	0013f870 farcall ax
 	0013f878 farsubsp 0x1
 	0013f880 pop op
 	0013f888 sourceline 0xd84
 	0013f890 push op
 	0013f898 mov ax,0x427
 	0013f8a4 farpush ax
 	0013f8ac mov ax,0x398
 	0013f8b8 farpush ax
 	0013f8c0 mov ax,0x0
 	0013f8cc farpush ax
 	0013f8d4 mov ax,0x3
 	0013f8e0 farpush ax
 	0013f8e8 mov ax,0x0
 	0013f8f4 farpush ax
 	0013f8fc mov mar,0x506f20
 	0013f908 mov ax,mar
 	0013f914 mov op,ax
 	0013f91c setfuncargs 0x5
 	0013f924 mov ax,0x536f20
 	0013f930 farcall ax
 	0013f938 farsubsp 0x5
 	0013f940 pop op
 	0013f948 sourceline 0xd85
 	0013f950 mov ax,0x50
 	0013f95c push ax
 	0013f964 mov ax,0x1e
 	0013f970 push ax
 	0013f978 mov ax,0x10445c
 	0013f984 call ax
 	0013f98c sub sp,0x8
 	0013f998 mov mar,0x4e6f20
 	0013f9a4 memwrite4 ax
 	0013f9ac sourceline 0xd86
 	0013f9b4 mov ax,0x1
 	0013f9c0 mov mar,0x4aef20
 	0013f9cc memwrite4 ax
		0013f9d4: FALL_THROUGH

	[0013f9d4]
		0013cd9c: UNCONDITIONAL_JUMP
		0013cdf0: FALL_THROUGH
 	0013f9d4 sourceline 0xd88
 	0013f9dc jmp 0x0013fba4
		0013fba4: UNCONDITIONAL_JUMP

	[0013f9e4]
		0013cd44: CONDITIONAL_JUMP
 	0013f9e4 sourceline 0xd8b
 	0013f9ec push op
 	0013f9f4 mov ax,0x397
 	0013fa00 farpush ax
 	0013fa08 mov ax,0x73
 	0013fa14 farpush ax
 	0013fa1c mov ax,0x5c
 	0013fa28 farpush ax
 	0013fa30 mov mar,0x3cef20
 	0013fa3c mov ax,mar
 	0013fa48 mov op,ax
 	0013fa50 setfuncargs 0x3
 	0013fa58 mov ax,0x726f20
 	0013fa64 farcall ax
 	0013fa6c farsubsp 0x3
 	0013fa74 pop op
 	0013fa7c sourceline 0xd8c
 	0013fa84 mov ax,0x1
 	0013fa90 mov bx,ax
 	0013fa9c mov mar,0x3cef20
 	0013faa8 mov ax,mar
 	0013fab4 push op
 	0013fabc mov op,ax
 	0013fac4 farpush bx
 	0013facc setfuncargs 0x1
 	0013fad4 mov ax,0x69ef20
 	0013fae0 farcall ax
 	0013fae8 farsubsp 0x1
 	0013faf0 pop op
 	0013faf8 sourceline 0xd8d
 	0013fb00 push op
 	0013fb08 mov ax,0x2bbe6e
 	0013fb14 farpush ax
 	0013fb1c mov ax,0x138
 	0013fb28 farpush ax
 	0013fb30 mov ax,0x92
 	0013fb3c farpush ax
 	0013fb44 mov ax,0x0
 	0013fb50 farpush ax
 	0013fb58 mov mar,0x3cef20
 	0013fb64 mov ax,mar
 	0013fb70 mov op,ax
 	0013fb78 setfuncargs 0x4
 	0013fb80 mov ax,0x6aef20
 	0013fb8c farcall ax
 	0013fb94 farsubsp 0x4
 	0013fb9c pop op
		0013fba4: FALL_THROUGH

	[0013fba4]
		0013f9d4: UNCONDITIONAL_JUMP
		0013f9e4: FALL_THROUGH
 	0013fba4 sourceline 0xd8f
 	0013fbac jmp 0x00141d70
		00141d70: UNCONDITIONAL_JUMP

	[0013fbb4]
		0013cd18: CONDITIONAL_JUMP
 	0013fbb4 sourceline 0xd92
 	0013fbbc mov mar,0xa9ef20
 	0013fbc8 memread4 ax
 	0013fbd0 jz 0x00141bb0
		00141bb0: CONDITIONAL_JUMP
		0013fbd8: FALL_THROUGH

	[0013fbd8]
		0013fbb4: FALL_THROUGH
 	0013fbd8 sourceline 0xd94
 	0013fbe0 mov mar,0xaa6f20
 	0013fbec memread4 ax
 	0013fbf4 lnot ax
 	0013fbfc jz 0x001419e0
		001419e0: CONDITIONAL_JUMP
		0013fc04: FALL_THROUGH

	[0013fc04]
		0013fbd8: FALL_THROUGH
 	0013fc04 sourceline 0xd96
 	0013fc0c setfuncargs 0x0
 	0013fc14 mov ax,0x6def20
 	0013fc20 farcall ax
 	0013fc28 lnot ax
 	0013fc30 jz 0x0013fc8c
		0013fc8c: CONDITIONAL_JUMP
		0013fc38: FALL_THROUGH

	[0013fc38]
		0013fc04: FALL_THROUGH
 	0013fc38 mov ax,0x82
 	0013fc44 farpush ax
 	0013fc4c mov ax,0x86
 	0013fc58 farpush ax
 	0013fc60 setfuncargs 0x2
 	0013fc68 mov ax,0x6e6f20
 	0013fc74 farcall ax
 	0013fc7c farsubsp 0x2
 	0013fc84 jmp 0x001419d0
		001419d0: UNCONDITIONAL_JUMP

	[0013fc8c]
		0013fc04: CONDITIONAL_JUMP
 	0013fc8c sourceline 0xd98
 	0013fc94 mov ax,0x0
 	0013fca0 mov bx,ax
 	0013fcac mov mar,0x336f20
 	0013fcb8 mov ax,mar
 	0013fcc4 farpush bx
 	0013fccc setfuncargs 0x1
 	0013fcd4 mov ax,0x43ef20
 	0013fce0 farcall ax
 	0013fce8 farsubsp 0x1
 	0013fcf0 sourceline 0xd99
 	0013fcf8 mov ax,0x3
 	0013fd04 mov bx,ax
 	0013fd10 mov mar,0x3cef20
 	0013fd1c mov ax,mar
 	0013fd28 push op
 	0013fd30 mov op,ax
 	0013fd38 farpush bx
 	0013fd40 setfuncargs 0x1
 	0013fd48 mov ax,0x69ef20
 	0013fd54 farcall ax
 	0013fd5c farsubsp 0x1
 	0013fd64 pop op
 	0013fd6c sourceline 0xd9a
 	0013fd74 mov ax,0x17
 	0013fd80 mov bx,ax
 	0013fd8c mov mar,0x506f20
 	0013fd98 mov ax,mar
 	0013fda4 push op
 	0013fdac mov op,ax
 	0013fdb4 farpush bx
 	0013fdbc setfuncargs 0x1
 	0013fdc4 mov ax,0x69ef20
 	0013fdd0 farcall ax
 	0013fdd8 farsubsp 0x1
 	0013fde0 pop op
 	0013fde8 sourceline 0xd9b
 	0013fdf0 push op
 	0013fdf8 mov ax,0x397
 	0013fe04 farpush ax
 	0013fe0c mov ax,0x1
 	0013fe18 farpush ax
 	0013fe20 mov mar,0x3cef20
 	0013fe2c mov ax,mar
 	0013fe38 mov op,ax
 	0013fe40 setfuncargs 0x2
 	0013fe48 mov ax,0x6eef20
 	0013fe54 farcall ax
 	0013fe5c farsubsp 0x2
 	0013fe64 pop op
 	0013fe6c sourceline 0xd9c
 	0013fe74 mov ax,0x104654
 	0013fe80 call ax
 	0013fe88 sourceline 0xd9f
 	0013fe90 mov ax,0x28
 	0013fe9c farpush ax
 	0013fea4 setfuncargs 0x1
 	0013feac mov ax,0x426f20
 	0013feb8 farcall ax
 	0013fec0 farsubsp 0x1
 	0013fec8 sourceline 0xda0
 	0013fed0 push op
 	0013fed8 mov ax,0x2c5e12
 	0013fee4 farpush ax
 	0013feec mov mar,0x3cef20
 	0013fef8 mov ax,mar
 	0013ff04 mov op,ax
 	0013ff0c setfuncargs 0x1
 	0013ff14 mov ax,0x6f6f20
 	0013ff20 farcall ax
 	0013ff28 farsubsp 0x1
 	0013ff30 pop op
 	0013ff38 sourceline 0xda1
 	0013ff40 push op
 	0013ff48 mov ax,0x2bb69a
 	0013ff54 farpush ax
 	0013ff5c mov mar,0x506f20
 	0013ff68 mov ax,mar
 	0013ff74 mov op,ax
 	0013ff7c setfuncargs 0x1
 	0013ff84 mov ax,0x6f6f20
 	0013ff90 farcall ax
 	0013ff98 farsubsp 0x1
 	0013ffa0 pop op
 	0013ffa8 sourceline 0xda2
 	0013ffb0 push op
 	0013ffb8 mov ax,0x2c5e8f
 	0013ffc4 farpush ax
 	0013ffcc mov mar,0x3cef20
 	0013ffd8 mov ax,mar
 	0013ffe4 mov op,ax
 	0013ffec setfuncargs 0x1
 	0013fff4 mov ax,0x6f6f20
 	00140000 farcall ax
 	00140008 farsubsp 0x1
 	00140010 pop op
 	00140018 sourceline 0xda3
 	00140020 push op
 	00140028 mov ax,0x2bb712
 	00140034 farpush ax
 	0014003c mov mar,0x506f20
 	00140048 mov ax,mar
 	00140054 mov op,ax
 	0014005c setfuncargs 0x1
 	00140064 mov ax,0x6f6f20
 	00140070 farcall ax
 	00140078 farsubsp 0x1
 	00140080 pop op
 	00140088 sourceline 0xda4
 	00140090 push op
 	00140098 mov ax,0x2c5ec3
 	001400a4 farpush ax
 	001400ac mov mar,0x3cef20
 	001400b8 mov ax,mar
 	001400c4 mov op,ax
 	001400cc setfuncargs 0x1
 	001400d4 mov ax,0x6f6f20
 	001400e0 farcall ax
 	001400e8 farsubsp 0x1
 	001400f0 pop op
 	001400f8 sourceline 0xda5
 	00140100 push op
 	00140108 mov ax,0x2c5f85
 	00140114 farpush ax
 	0014011c mov mar,0x3cef20
 	00140128 mov ax,mar
 	00140134 mov op,ax
 	0014013c setfuncargs 0x1
 	00140144 mov ax,0x6f6f20
 	00140150 farcall ax
 	00140158 farsubsp 0x1
 	00140160 pop op
 	00140168 sourceline 0xda6
 	00140170 push op
 	00140178 mov ax,0x2bb824
 	00140184 farpush ax
 	0014018c mov mar,0x506f20
 	00140198 mov ax,mar
 	001401a4 mov op,ax
 	001401ac setfuncargs 0x1
 	001401b4 mov ax,0x6f6f20
 	001401c0 farcall ax
 	001401c8 farsubsp 0x1
 	001401d0 pop op
 	001401d8 sourceline 0xda7
 	001401e0 push op
 	001401e8 mov ax,0x2c6007
 	001401f4 farpush ax
 	001401fc mov mar,0x3cef20
 	00140208 mov ax,mar
 	00140214 mov op,ax
 	0014021c setfuncargs 0x1
 	00140224 mov ax,0x6f6f20
 	00140230 farcall ax
 	00140238 farsubsp 0x1
 	00140240 pop op
 	00140248 sourceline 0xda8
 	00140250 push op
 	00140258 mov ax,0x2bb8b6
 	00140264 farpush ax
 	0014026c mov mar,0x506f20
 	00140278 mov ax,mar
 	00140284 mov op,ax
 	0014028c setfuncargs 0x1
 	00140294 mov ax,0x6f6f20
 	001402a0 farcall ax
 	001402a8 farsubsp 0x1
 	001402b0 pop op
 	001402b8 sourceline 0xda9
 	001402c0 push op
 	001402c8 mov ax,0x427
 	001402d4 farpush ax
 	001402dc mov ax,0x397
 	001402e8 farpush ax
 	001402f0 mov ax,0x0
 	001402fc farpush ax
 	00140304 mov ax,0x3
 	00140310 farpush ax
 	00140318 mov ax,0x0
 	00140324 farpush ax
 	0014032c mov mar,0x506f20
 	00140338 mov ax,mar
 	00140344 mov op,ax
 	0014034c setfuncargs 0x5
 	00140354 mov ax,0x536f20
 	00140360 farcall ax
 	00140368 farsubsp 0x5
 	00140370 pop op
 	00140378 sourceline 0xdaa
 	00140380 push op
 	00140388 mov ax,0x6d
 	00140394 farpush ax
 	0014039c mov mar,0x506f20
 	001403a8 mov ax,mar
 	001403b4 mov op,ax
 	001403bc setfuncargs 0x1
 	001403c4 mov ax,0x51ef20
 	001403d0 farcall ax
 	001403d8 farsubsp 0x1
 	001403e0 pop op
 	001403e8 sourceline 0xdab
 	001403f0 mov ax,0x7f
 	001403fc mov bx,ax
 	00140408 mov mar,0x506f20
 	00140414 mov ax,mar
 	00140420 push op
 	00140428 mov op,ax
 	00140430 farpush bx
 	00140438 setfuncargs 0x1
 	00140440 mov ax,0x526f20
 	0014044c farcall ax
 	00140454 farsubsp 0x1
 	0014045c pop op
 	00140464 sourceline 0xdac
 	0014046c push op
 	00140474 mov ax,0x426
 	00140480 farpush ax
 	00140488 mov ax,0x397
 	00140494 farpush ax
 	0014049c mov ax,0x0
 	001404a8 farpush ax
 	001404b0 mov ax,0x3
 	001404bc farpush ax
 	001404c4 mov ax,0x0
 	001404d0 farpush ax
 	001404d8 mov mar,0x506f20
 	001404e4 mov ax,mar
 	001404f0 mov op,ax
 	001404f8 setfuncargs 0x5
 	00140500 mov ax,0x536f20
 	0014050c farcall ax
 	00140514 farsubsp 0x5
 	0014051c pop op
 	00140524 sourceline 0xdad
 	0014052c push op
 	00140534 mov ax,0x6f
 	00140540 farpush ax
 	00140548 mov mar,0x506f20
 	00140554 mov ax,mar
 	00140560 mov op,ax
 	00140568 setfuncargs 0x1
 	00140570 mov ax,0x51ef20
 	0014057c farcall ax
 	00140584 farsubsp 0x1
 	0014058c pop op
 	00140594 sourceline 0xdae
 	0014059c push op
 	001405a4 mov ax,0x1
 	001405b0 farpush ax
 	001405b8 mov ax,0x32
 	001405c4 farpush ax
 	001405cc mov mar,0x53ef20
 	001405d8 mov ax,mar
 	001405e4 mov op,ax
 	001405ec setfuncargs 0x2
 	001405f4 mov ax,0x2fef20
 	00140600 farcall ax
 	00140608 farsubsp 0x2
 	00140610 pop op
 	00140618 sourceline 0xdaf
 	00140620 push op
 	00140628 mov ax,0x426
 	00140634 farpush ax
 	0014063c mov ax,0x398
 	00140648 farpush ax
 	00140650 mov ax,0x1
 	0014065c farpush ax
 	00140664 mov ax,0x3
 	00140670 farpush ax
 	00140678 mov ax,0x0
 	00140684 farpush ax
 	0014068c mov mar,0x506f20
 	00140698 mov ax,mar
 	001406a4 mov op,ax
 	001406ac setfuncargs 0x5
 	001406b4 mov ax,0x536f20
 	001406c0 farcall ax
 	001406c8 farsubsp 0x5
 	001406d0 pop op
 	001406d8 sourceline 0xdb0
 	001406e0 push op
 	001406e8 mov ax,-0x1
 	001406f4 farpush ax
 	001406fc mov ax,-0x1
 	00140708 farpush ax
 	00140710 mov ax,0x70
 	0014071c farpush ax
 	00140724 mov ax,0x0
 	00140730 assertlte ax,0x28
 	0014073c mul ax,0x8
 	00140748 mov cx,ax
 	00140754 mov mar,0x6fef20
 	00140760 add mar,cx
 	0014076c mov ax,mar
 	00140778 mov op,ax
 	00140780 setfuncargs 0x3
 	00140788 mov ax,0xa6ef20
 	00140794 farcall ax
 	0014079c farsubsp 0x3
 	001407a4 pop op
 	001407ac sourceline 0xdb1
 	001407b4 push op
 	001407bc mov ax,0x426
 	001407c8 farpush ax
 	001407d0 mov ax,0x397
 	001407dc farpush ax
 	001407e4 mov ax,0x0
 	001407f0 farpush ax
 	001407f8 mov ax,0x6
 	00140804 farpush ax
 	0014080c mov ax,0x0
 	00140818 farpush ax
 	00140820 mov ax,0x0
 	0014082c assertlte ax,0x28
 	00140838 mul ax,0x8
 	00140844 mov cx,ax
 	00140850 mov mar,0x6fef20
 	0014085c add mar,cx
 	00140868 mov ax,mar
 	00140874 mov op,ax
 	0014087c setfuncargs 0x5
 	00140884 mov ax,0xa76f20
 	00140890 farcall ax
 	00140898 farsubsp 0x5
 	001408a0 pop op
 	001408a8 sourceline 0xdb2
 	001408b0 push op
 	001408b8 mov ax,0x426
 	001408c4 farpush ax
 	001408cc mov ax,0x398
 	001408d8 farpush ax
 	001408e0 mov ax,0x1
 	001408ec farpush ax
 	001408f4 mov ax,0x7
 	00140900 farpush ax
 	00140908 mov ax,0x2
 	00140914 farpush ax
 	0014091c mov ax,0x0
 	00140928 assertlte ax,0x28
 	00140934 mul ax,0x8
 	00140940 mov cx,ax
 	0014094c mov mar,0x6fef20
 	00140958 add mar,cx
 	00140964 mov ax,mar
 	00140970 mov op,ax
 	00140978 setfuncargs 0x5
 	00140980 mov ax,0xa76f20
 	0014098c farcall ax
 	00140994 farsubsp 0x5
 	0014099c pop op
 	001409a4 sourceline 0xdb3
 	001409ac mov ax,0x1e
 	001409b8 farpush ax
 	001409c0 setfuncargs 0x1
 	001409c8 mov ax,0x426f20
 	001409d4 farcall ax
 	001409dc farsubsp 0x1
 	001409e4 sourceline 0xdb4
 	001409ec push op
 	001409f4 mov ax,0x2bb902
 	00140a00 farpush ax
 	00140a08 mov mar,0x506f20
 	00140a14 mov ax,mar
 	00140a20 mov op,ax
 	00140a28 setfuncargs 0x1
 	00140a30 mov ax,0x6f6f20
 	00140a3c farcall ax
 	00140a44 farsubsp 0x1
 	00140a4c pop op
 	00140a54 sourceline 0xdb5
 	00140a5c push op
 	00140a64 mov ax,0x2bb9cc
 	00140a70 farpush ax
 	00140a78 mov mar,0x506f20
 	00140a84 mov ax,mar
 	00140a90 mov op,ax
 	00140a98 setfuncargs 0x1
 	00140aa0 mov ax,0x6f6f20
 	00140aac farcall ax
 	00140ab4 farsubsp 0x1
 	00140abc pop op
 	00140ac4 sourceline 0xdb6
 	00140acc push op
 	00140ad4 mov ax,0x6f
 	00140ae0 farpush ax
 	00140ae8 mov mar,0x506f20
 	00140af4 mov ax,mar
 	00140b00 mov op,ax
 	00140b08 setfuncargs 0x1
 	00140b10 mov ax,0x51ef20
 	00140b1c farcall ax
 	00140b24 farsubsp 0x1
 	00140b2c pop op
 	00140b34 sourceline 0xdb7
 	00140b3c push op
 	00140b44 mov mar,0x53ef20
 	00140b50 mov ax,mar
 	00140b5c mov op,ax
 	00140b64 setfuncargs 0x0
 	00140b6c mov ax,0x306f20
 	00140b78 farcall ax
 	00140b80 pop op
 	00140b88 sourceline 0xdb8
 	00140b90 push op
 	00140b98 mov ax,0x426
 	00140ba4 farpush ax
 	00140bac mov ax,0x397
 	00140bb8 farpush ax
 	00140bc0 mov ax,0x0
 	00140bcc farpush ax
 	00140bd4 mov ax,0x3
 	00140be0 farpush ax
 	00140be8 mov ax,0x0
 	00140bf4 farpush ax
 	00140bfc mov mar,0x506f20
 	00140c08 mov ax,mar
 	00140c14 mov op,ax
 	00140c1c setfuncargs 0x5
 	00140c24 mov ax,0x536f20
 	00140c30 farcall ax
 	00140c38 farsubsp 0x5
 	00140c40 pop op
 	00140c48 sourceline 0xdb9
 	00140c50 push op
 	00140c58 mov ax,0x427
 	00140c64 farpush ax
 	00140c6c mov ax,0x397
 	00140c78 farpush ax
 	00140c80 mov ax,0x0
 	00140c8c farpush ax
 	00140c94 mov ax,0x7
 	00140ca0 farpush ax
 	00140ca8 mov ax,0x2
 	00140cb4 farpush ax
 	00140cbc mov ax,0x0
 	00140cc8 assertlte ax,0x28
 	00140cd4 mul ax,0x8
 	00140ce0 mov cx,ax
 	00140cec mov mar,0x6fef20
 	00140cf8 add mar,cx
 	00140d04 mov ax,mar
 	00140d10 mov op,ax
 	00140d18 setfuncargs 0x5
 	00140d20 mov ax,0xa76f20
 	00140d2c farcall ax
 	00140d34 farsubsp 0x5
 	00140d3c pop op
 	00140d44 sourceline 0xdba
 	00140d4c push op
 	00140d54 mov ax,0x0
 	00140d60 farpush ax
 	00140d68 mov ax,0x32
 	00140d74 farpush ax
 	00140d7c mov mar,0xaaef20
 	00140d88 mov ax,mar
 	00140d94 mov op,ax
 	00140d9c setfuncargs 0x2
 	00140da4 mov ax,0x2fef20
 	00140db0 farcall ax
 	00140db8 farsubsp 0x2
 	00140dc0 pop op
 	00140dc8 sourceline 0xdbb
 	00140dd0 push op
 	00140dd8 mov ax,0x6d
 	00140de4 farpush ax
 	00140dec mov mar,0x506f20
 	00140df8 mov ax,mar
 	00140e04 mov op,ax
 	00140e0c setfuncargs 0x1
 	00140e14 mov ax,0x51ef20
 	00140e20 farcall ax
 	00140e28 farsubsp 0x1
 	00140e30 pop op
 	00140e38 sourceline 0xdbc
 	00140e40 mov ax,0x5
 	00140e4c mov bx,ax
 	00140e58 mov mar,0x506f20
 	00140e64 mov ax,mar
 	00140e70 push op
 	00140e78 mov op,ax
 	00140e80 farpush bx
 	00140e88 setfuncargs 0x1
 	00140e90 mov ax,0x52ef20
 	00140e9c farcall ax
 	00140ea4 farsubsp 0x1
 	00140eac pop op
 	00140eb4 sourceline 0xdbd
 	00140ebc push op
 	00140ec4 mov ax,0x427
 	00140ed0 farpush ax
 	00140ed8 mov ax,0x397
 	00140ee4 farpush ax
 	00140eec mov ax,0x0
 	00140ef8 farpush ax
 	00140f00 mov ax,0x6
 	00140f0c farpush ax
 	00140f14 mov ax,0x0
 	00140f20 farpush ax
 	00140f28 mov ax,0x0
 	00140f34 assertlte ax,0x28
 	00140f40 mul ax,0x8
 	00140f4c mov cx,ax
 	00140f58 mov mar,0x6fef20
 	00140f64 add mar,cx
 	00140f70 mov ax,mar
 	00140f7c mov op,ax
 	00140f84 setfuncargs 0x5
 	00140f8c mov ax,0xa76f20
 	00140f98 farcall ax
 	00140fa0 farsubsp 0x5
 	00140fa8 pop op
 	00140fb0 sourceline 0xdbe
 	00140fb8 push op
 	00140fc0 mov ax,0x427
 	00140fcc farpush ax
 	00140fd4 mov ax,0x397
 	00140fe0 farpush ax
 	00140fe8 mov ax,0x0
 	00140ff4 farpush ax
 	00140ffc mov ax,0x3
 	00141008 farpush ax
 	00141010 mov ax,0x0
 	0014101c farpush ax
 	00141024 mov mar,0x506f20
 	00141030 mov ax,mar
 	0014103c mov op,ax
 	00141044 setfuncargs 0x5
 	0014104c mov ax,0x536f20
 	00141058 farcall ax
 	00141060 farsubsp 0x5
 	00141068 pop op
 	00141070 sourceline 0xdbf
 	00141078 push op
 	00141080 mov ax,0x6b
 	0014108c farpush ax
 	00141094 mov mar,0x506f20
 	001410a0 mov ax,mar
 	001410ac mov op,ax
 	001410b4 setfuncargs 0x1
 	001410bc mov ax,0x51ef20
 	001410c8 farcall ax
 	001410d0 farsubsp 0x1
 	001410d8 pop op
 	001410e0 sourceline 0xdc0
 	001410e8 mov ax,0x7e
 	001410f4 mov bx,ax
 	00141100 mov mar,0x506f20
 	0014110c mov ax,mar
 	00141118 push op
 	00141120 mov op,ax
 	00141128 farpush bx
 	00141130 setfuncargs 0x1
 	00141138 mov ax,0x526f20
 	00141144 farcall ax
 	0014114c farsubsp 0x1
 	00141154 pop op
 	0014115c sourceline 0xdc1
 	00141164 push op
 	0014116c mov ax,0x426
 	00141178 farpush ax
 	00141180 mov ax,0x397
 	0014118c farpush ax
 	00141194 mov ax,0x0
 	001411a0 farpush ax
 	001411a8 mov ax,0x3
 	001411b4 farpush ax
 	001411bc mov ax,0x0
 	001411c8 farpush ax
 	001411d0 mov mar,0x506f20
 	001411dc mov ax,mar
 	001411e8 mov op,ax
 	001411f0 setfuncargs 0x5
 	001411f8 mov ax,0x536f20
 	00141204 farcall ax
 	0014120c farsubsp 0x5
 	00141214 pop op
 	0014121c sourceline 0xdc2
 	00141224 push op
 	0014122c mov ax,0x2bba10
 	00141238 farpush ax
 	00141240 mov mar,0x506f20
 	0014124c mov ax,mar
 	00141258 mov op,ax
 	00141260 setfuncargs 0x1
 	00141268 mov ax,0x6f6f20
 	00141274 farcall ax
 	0014127c farsubsp 0x1
 	00141284 pop op
 	0014128c sourceline 0xdc3
 	00141294 push op
 	0014129c mov ax,0x2c620a
 	001412a8 farpush ax
 	001412b0 mov mar,0x3cef20
 	001412bc mov ax,mar
 	001412c8 mov op,ax
 	001412d0 setfuncargs 0x1
 	001412d8 mov ax,0x6f6f20
 	001412e4 farcall ax
 	001412ec farsubsp 0x1
 	001412f4 pop op
 	001412fc sourceline 0xdc4
 	00141304 push op
 	0014130c mov ax,0x2bba8d
 	00141318 farpush ax
 	00141320 mov mar,0x506f20
 	0014132c mov ax,mar
 	00141338 mov op,ax
 	00141340 setfuncargs 0x1
 	00141348 mov ax,0x6f6f20
 	00141354 farcall ax
 	0014135c farsubsp 0x1
 	00141364 pop op
 	0014136c sourceline 0xdc5
 	00141374 push op
 	0014137c mov ax,0x2c6230
 	00141388 farpush ax
 	00141390 mov mar,0x3cef20
 	0014139c mov ax,mar
 	001413a8 mov op,ax
 	001413b0 setfuncargs 0x1
 	001413b8 mov ax,0x6f6f20
 	001413c4 farcall ax
 	001413cc farsubsp 0x1
 	001413d4 pop op
 	001413dc sourceline 0xdc6
 	001413e4 push op
 	001413ec mov ax,0x2bbaa8
 	001413f8 farpush ax
 	00141400 mov mar,0x506f20
 	0014140c mov ax,mar
 	00141418 mov op,ax
 	00141420 setfuncargs 0x1
 	00141428 mov ax,0x6f6f20
 	00141434 farcall ax
 	0014143c farsubsp 0x1
 	00141444 pop op
 	0014144c sourceline 0xdc7
 	00141454 push op
 	0014145c mov ax,0x2c62f9
 	00141468 farpush ax
 	00141470 mov mar,0x3cef20
 	0014147c mov ax,mar
 	00141488 mov op,ax
 	00141490 setfuncargs 0x1
 	00141498 mov ax,0x6f6f20
 	001414a4 farcall ax
 	001414ac farsubsp 0x1
 	001414b4 pop op
 	001414bc sourceline 0xdc8
 	001414c4 push op
 	001414cc mov ax,0x2bbb8a
 	001414d8 farpush ax
 	001414e0 mov mar,0x506f20
 	001414ec mov ax,mar
 	001414f8 mov op,ax
 	00141500 setfuncargs 0x1
 	00141508 mov ax,0x6f6f20
 	00141514 farcall ax
 	0014151c farsubsp 0x1
 	00141524 pop op
 	0014152c sourceline 0xdc9
 	00141534 push op
 	0014153c mov ax,0x2c639f
 	00141548 farpush ax
 	00141550 mov mar,0x3cef20
 	0014155c mov ax,mar
 	00141568 mov op,ax
 	00141570 setfuncargs 0x1
 	00141578 mov ax,0x6f6f20
 	00141584 farcall ax
 	0014158c farsubsp 0x1
 	00141594 pop op
 	0014159c sourceline 0xdca
 	001415a4 push op
 	001415ac mov ax,0x2bbc1e
 	001415b8 farpush ax
 	001415c0 mov mar,0x506f20
 	001415cc mov ax,mar
 	001415d8 mov op,ax
 	001415e0 setfuncargs 0x1
 	001415e8 mov ax,0x6f6f20
 	001415f4 farcall ax
 	001415fc farsubsp 0x1
 	00141604 pop op
 	0014160c sourceline 0xdcb
 	00141614 push op
 	0014161c mov ax,0x2c641b
 	00141628 farpush ax
 	00141630 mov mar,0x3cef20
 	0014163c mov ax,mar
 	00141648 mov op,ax
 	00141650 setfuncargs 0x1
 	00141658 mov ax,0x6f6f20
 	00141664 farcall ax
 	0014166c farsubsp 0x1
 	00141674 pop op
 	0014167c sourceline 0xdcc
 	00141684 push op
 	0014168c mov ax,0x2bbcac
 	00141698 farpush ax
 	001416a0 mov mar,0x506f20
 	001416ac mov ax,mar
 	001416b8 mov op,ax
 	001416c0 setfuncargs 0x1
 	001416c8 mov ax,0x6f6f20
 	001416d4 farcall ax
 	001416dc farsubsp 0x1
 	001416e4 pop op
 	001416ec sourceline 0xdcd
 	001416f4 push op
 	001416fc mov ax,0x7cfe
 	00141708 farpush ax
 	00141710 mov mar,0xab6f20
 	0014171c mov ax,mar
 	00141728 farpush ax
 	00141730 mov mar,0x81ef20
 	0014173c mov ax,mar
 	00141748 mov op,ax
 	00141750 setfuncargs 0x2
 	00141758 mov ax,0x7e6f20
 	00141764 farcall ax
 	0014176c farsubsp 0x2
 	00141774 pop op
 	0014177c sourceline 0xdce
 	00141784 mov ax,0x1
 	00141790 mov bx,ax
 	0014179c mov mar,0x336f20
 	001417a8 mov ax,mar
 	001417b4 farpush bx
 	001417bc setfuncargs 0x1
 	001417c4 mov ax,0x43ef20
 	001417d0 farcall ax
 	001417d8 farsubsp 0x1
 	001417e0 sourceline 0xdcf
 	001417e8 mov ax,0x1
 	001417f4 mov mar,0xaa6f20
 	00141800 memwrite4 ax
 	00141808 sourceline 0xdd0
 	00141810 mov ax,0x1
 	0014181c mov bx,ax
 	00141828 mov mar,0x3cef20
 	00141834 mov ax,mar
 	00141840 push op
 	00141848 mov op,ax
 	00141850 farpush bx
 	00141858 setfuncargs 0x1
 	00141860 mov ax,0x69ef20
 	0014186c farcall ax
 	00141874 farsubsp 0x1
 	0014187c pop op
 	00141884 sourceline 0xdd1
 	0014188c push op
 	00141894 mov ax,0x427
 	001418a0 farpush ax
 	001418a8 mov ax,0x398
 	001418b4 farpush ax
 	001418bc mov ax,0x0
 	001418c8 farpush ax
 	001418d0 mov ax,0x3
 	001418dc farpush ax
 	001418e4 mov ax,0x0
 	001418f0 farpush ax
 	001418f8 mov mar,0x506f20
 	00141904 mov ax,mar
 	00141910 mov op,ax
 	00141918 setfuncargs 0x5
 	00141920 mov ax,0x536f20
 	0014192c farcall ax
 	00141934 farsubsp 0x5
 	0014193c pop op
 	00141944 sourceline 0xdd2
 	0014194c mov ax,0x50
 	00141958 push ax
 	00141960 mov ax,0x1e
 	0014196c push ax
 	00141974 mov ax,0x10445c
 	00141980 call ax
 	00141988 sub sp,0x8
 	00141994 mov mar,0x4e6f20
 	001419a0 memwrite4 ax
 	001419a8 sourceline 0xdd3
 	001419b0 mov ax,0x1
 	001419bc mov mar,0x4aef20
 	001419c8 memwrite4 ax
		001419d0: FALL_THROUGH

	[001419d0]
		0013fc38: UNCONDITIONAL_JUMP
		0013fc8c: FALL_THROUGH
 	001419d0 sourceline 0xdd5
 	001419d8 jmp 0x00141ba0
		00141ba0: UNCONDITIONAL_JUMP

	[001419e0]
		0013fbd8: CONDITIONAL_JUMP
 	001419e0 sourceline 0xdd8
 	001419e8 push op
 	001419f0 mov ax,0x397
 	001419fc farpush ax
 	00141a04 mov ax,0x73
 	00141a10 farpush ax
 	00141a18 mov ax,0x5c
 	00141a24 farpush ax
 	00141a2c mov mar,0x3cef20
 	00141a38 mov ax,mar
 	00141a44 mov op,ax
 	00141a4c setfuncargs 0x3
 	00141a54 mov ax,0x726f20
 	00141a60 farcall ax
 	00141a68 farsubsp 0x3
 	00141a70 pop op
 	00141a78 sourceline 0xdd9
 	00141a80 mov ax,0x1
 	00141a8c mov bx,ax
 	00141a98 mov mar,0x3cef20
 	00141aa4 mov ax,mar
 	00141ab0 push op
 	00141ab8 mov op,ax
 	00141ac0 farpush bx
 	00141ac8 setfuncargs 0x1
 	00141ad0 mov ax,0x69ef20
 	00141adc farcall ax
 	00141ae4 farsubsp 0x1
 	00141aec pop op
 	00141af4 sourceline 0xdda
 	00141afc push op
 	00141b04 mov ax,0x2bbe6e
 	00141b10 farpush ax
 	00141b18 mov ax,0x138
 	00141b24 farpush ax
 	00141b2c mov ax,0x92
 	00141b38 farpush ax
 	00141b40 mov ax,0x0
 	00141b4c farpush ax
 	00141b54 mov mar,0x3cef20
 	00141b60 mov ax,mar
 	00141b6c mov op,ax
 	00141b74 setfuncargs 0x4
 	00141b7c mov ax,0x6aef20
 	00141b88 farcall ax
 	00141b90 farsubsp 0x4
 	00141b98 pop op
		00141ba0: FALL_THROUGH

	[00141ba0]
		001419d0: UNCONDITIONAL_JUMP
		001419e0: FALL_THROUGH
 	00141ba0 sourceline 0xddc
 	00141ba8 jmp 0x00141d70
		00141d70: UNCONDITIONAL_JUMP

	[00141bb0]
		0013fbb4: CONDITIONAL_JUMP
 	00141bb0 sourceline 0xddf
 	00141bb8 push op
 	00141bc0 mov ax,0x397
 	00141bcc farpush ax
 	00141bd4 mov ax,0x73
 	00141be0 farpush ax
 	00141be8 mov ax,0x5c
 	00141bf4 farpush ax
 	00141bfc mov mar,0x3cef20
 	00141c08 mov ax,mar
 	00141c14 mov op,ax
 	00141c1c setfuncargs 0x3
 	00141c24 mov ax,0x726f20
 	00141c30 farcall ax
 	00141c38 farsubsp 0x3
 	00141c40 pop op
 	00141c48 sourceline 0xde0
 	00141c50 mov ax,0x1
 	00141c5c mov bx,ax
 	00141c68 mov mar,0x3cef20
 	00141c74 mov ax,mar
 	00141c80 push op
 	00141c88 mov op,ax
 	00141c90 farpush bx
 	00141c98 setfuncargs 0x1
 	00141ca0 mov ax,0x69ef20
 	00141cac farcall ax
 	00141cb4 farsubsp 0x1
 	00141cbc pop op
 	00141cc4 sourceline 0xde1
 	00141ccc push op
 	00141cd4 mov ax,0x2bbe6e
 	00141ce0 farpush ax
 	00141ce8 mov ax,0x138
 	00141cf4 farpush ax
 	00141cfc mov ax,0x92
 	00141d08 farpush ax
 	00141d10 mov ax,0x0
 	00141d1c farpush ax
 	00141d24 mov mar,0x3cef20
 	00141d30 mov ax,mar
 	00141d3c mov op,ax
 	00141d44 setfuncargs 0x4
 	00141d4c mov ax,0x6aef20
 	00141d58 farcall ax
 	00141d60 farsubsp 0x4
 	00141d68 pop op
		00141d70: FALL_THROUGH

	[00141d70]
		0013cb0c: UNCONDITIONAL_JUMP
		0013cb48: UNCONDITIONAL_JUMP
		0013fba4: UNCONDITIONAL_JUMP
		00141ba0: UNCONDITIONAL_JUMP
		00141bb0: FALL_THROUGH
 	00141d70 sourceline 0xde6
 	00141d78 jmp 0x00142910
		00142910: UNCONDITIONAL_JUMP

	[00141d80]
		0013b364: CONDITIONAL_JUMP
 	00141d80 sourceline 0xdea
 	00141d88 push op
 	00141d90 mov ax,0x2
 	00141d9c farpush ax
 	00141da4 mov mar,0xabef20
 	00141db0 mov ax,mar
 	00141dbc mov op,ax
 	00141dc4 setfuncargs 0x1
 	00141dcc mov ax,0x6d6f20
 	00141dd8 farcall ax
 	00141de0 farsubsp 0x1
 	00141de8 pop op
 	00141df0 lnot ax
 	00141df8 jnz 0x00141e98
		00141e98: CONDITIONAL_JUMP
		00141e00: FALL_THROUGH

	[00141e00]
		00141d80: FALL_THROUGH
 	00141e00 push ax
 	00141e08 push op
 	00141e10 mov ax,0x3
 	00141e1c farpush ax
 	00141e24 mov mar,0xabef20
 	00141e30 mov ax,mar
 	00141e3c mov op,ax
 	00141e44 setfuncargs 0x1
 	00141e4c mov ax,0x6d6f20
 	00141e58 farcall ax
 	00141e60 farsubsp 0x1
 	00141e68 pop op
 	00141e70 lnot ax
 	00141e78 pop bx
 	00141e80 lor bx,ax
 	00141e8c mov ax,bx
		00141e98: FALL_THROUGH

	[00141e98]
		00141d80: CONDITIONAL_JUMP
		00141e00: FALL_THROUGH
 	00141e98 jnz 0x00141f38
		00141f38: CONDITIONAL_JUMP
		00141ea0: FALL_THROUGH

	[00141ea0]
		00141e98: FALL_THROUGH
 	00141ea0 push ax
 	00141ea8 push op
 	00141eb0 mov ax,0x4
 	00141ebc farpush ax
 	00141ec4 mov mar,0xabef20
 	00141ed0 mov ax,mar
 	00141edc mov op,ax
 	00141ee4 setfuncargs 0x1
 	00141eec mov ax,0x6d6f20
 	00141ef8 farcall ax
 	00141f00 farsubsp 0x1
 	00141f08 pop op
 	00141f10 lnot ax
 	00141f18 pop bx
 	00141f20 lor bx,ax
 	00141f2c mov ax,bx
		00141f38: FALL_THROUGH

	[00141f38]
		00141e98: CONDITIONAL_JUMP
		00141ea0: FALL_THROUGH
 	00141f38 jz 0x0014228c
		0014228c: CONDITIONAL_JUMP
		00141f40: FALL_THROUGH

	[00141f40]
		00141f38: FALL_THROUGH
 	00141f40 sourceline 0xdec
 	00141f48 setfuncargs 0x0
 	00141f50 mov ax,0x6def20
 	00141f5c farcall ax
 	00141f64 lnot ax
 	00141f6c jz 0x00141fc8
		00141fc8: CONDITIONAL_JUMP
		00141f74: FALL_THROUGH

	[00141f74]
		00141f40: FALL_THROUGH
 	00141f74 mov ax,0x82
 	00141f80 farpush ax
 	00141f88 mov ax,0x86
 	00141f94 farpush ax
 	00141f9c setfuncargs 0x2
 	00141fa4 mov ax,0x6e6f20
 	00141fb0 farcall ax
 	00141fb8 farsubsp 0x2
 	00141fc0 jmp 0x0014227c
		0014227c: UNCONDITIONAL_JUMP

	[00141fc8]
		00141f40: CONDITIONAL_JUMP
 	00141fc8 sourceline 0xdef
 	00141fd0 mov ax,0x0
 	00141fdc push ax
 	00141fe4 mov ax,0x1
 	00141ff0 assertlte ax,0x32
 	00141ffc mul ax,0x8
 	00142008 mov cx,ax
 	00142014 pop ax
 	0014201c mov bx,ax
 	00142028 mov mar,0x6c6f20
 	00142034 add mar,cx
 	00142040 mov ax,mar
 	0014204c push op
 	00142054 mov op,ax
 	0014205c farpush bx
 	00142064 setfuncargs 0x1
 	0014206c mov ax,0xa66f20
 	00142078 farcall ax
 	00142080 farsubsp 0x1
 	00142088 pop op
 	00142090 sourceline 0xdf0
 	00142098 mov ax,0x3
 	001420a4 mov bx,ax
 	001420b0 mov mar,0x3cef20
 	001420bc mov ax,mar
 	001420c8 push op
 	001420d0 mov op,ax
 	001420d8 farpush bx
 	001420e0 setfuncargs 0x1
 	001420e8 mov ax,0x69ef20
 	001420f4 farcall ax
 	001420fc farsubsp 0x1
 	00142104 pop op
 	0014210c sourceline 0xdf1
 	00142114 mov ax,0x17
 	00142120 mov bx,ax
 	0014212c mov mar,0x506f20
 	00142138 mov ax,mar
 	00142144 push op
 	0014214c mov op,ax
 	00142154 farpush bx
 	0014215c setfuncargs 0x1
 	00142164 mov ax,0x69ef20
 	00142170 farcall ax
 	00142178 farsubsp 0x1
 	00142180 pop op
 	00142188 sourceline 0xdf2
 	00142190 push op
 	00142198 mov ax,0x397
 	001421a4 farpush ax
 	001421ac mov ax,0x1
 	001421b8 farpush ax
 	001421c0 mov mar,0x3cef20
 	001421cc mov ax,mar
 	001421d8 mov op,ax
 	001421e0 setfuncargs 0x2
 	001421e8 mov ax,0x6eef20
 	001421f4 farcall ax
 	001421fc farsubsp 0x2
 	00142204 pop op
 	0014220c sourceline 0xdf3
 	00142214 mov ax,0x104654
 	00142220 call ax
 	00142228 sourceline 0xdf6
 	00142230 push op
 	00142238 mov mar,0xabef20
 	00142244 mov ax,mar
 	00142250 mov op,ax
 	00142258 setfuncargs 0x0
 	00142260 mov ax,0x71ef20
 	0014226c farcall ax
 	00142274 pop op
		0014227c: FALL_THROUGH

	[0014227c]
		00141f74: UNCONDITIONAL_JUMP
		00141fc8: FALL_THROUGH
 	0014227c sourceline 0xdf8
 	00142284 jmp 0x00142910
		00142910: UNCONDITIONAL_JUMP

	[0014228c]
		00141f38: CONDITIONAL_JUMP
 	0014228c sourceline 0xdfb
 	00142294 push op
 	0014229c mov ax,0x1
 	001422a8 farpush ax
 	001422b0 mov mar,0xabef20
 	001422bc mov ax,mar
 	001422c8 mov op,ax
 	001422d0 setfuncargs 0x1
 	001422d8 mov ax,0xac6f20
 	001422e4 farcall ax
 	001422ec farsubsp 0x1
 	001422f4 pop op
 	001422fc push ax
 	00142304 mov ax,0x1
 	00142310 pop bx
 	00142318 cmpeq bx,ax
 	00142324 mov ax,bx
 	00142330 jnz 0x001423fc
		001423fc: CONDITIONAL_JUMP
		00142338: FALL_THROUGH

	[00142338]
		0014228c: FALL_THROUGH
 	00142338 push ax
 	00142340 push op
 	00142348 mov ax,0x5
 	00142354 farpush ax
 	0014235c mov mar,0xabef20
 	00142368 mov ax,mar
 	00142374 mov op,ax
 	0014237c setfuncargs 0x1
 	00142384 mov ax,0xac6f20
 	00142390 farcall ax
 	00142398 farsubsp 0x1
 	001423a0 pop op
 	001423a8 push ax
 	001423b0 mov ax,0x1
 	001423bc pop bx
 	001423c4 cmpeq bx,ax
 	001423d0 mov ax,bx
 	001423dc pop bx
 	001423e4 lor bx,ax
 	001423f0 mov ax,bx
		001423fc: FALL_THROUGH

	[001423fc]
		0014228c: CONDITIONAL_JUMP
		00142338: FALL_THROUGH
 	001423fc jz 0x00142750
		00142750: CONDITIONAL_JUMP
		00142404: FALL_THROUGH

	[00142404]
		001423fc: FALL_THROUGH
 	00142404 sourceline 0xdfd
 	0014240c setfuncargs 0x0
 	00142414 mov ax,0x6def20
 	00142420 farcall ax
 	00142428 lnot ax
 	00142430 jz 0x0014248c
		0014248c: CONDITIONAL_JUMP
		00142438: FALL_THROUGH

	[00142438]
		00142404: FALL_THROUGH
 	00142438 mov ax,0x82
 	00142444 farpush ax
 	0014244c mov ax,0x86
 	00142458 farpush ax
 	00142460 setfuncargs 0x2
 	00142468 mov ax,0x6e6f20
 	00142474 farcall ax
 	0014247c farsubsp 0x2
 	00142484 jmp 0x00142740
		00142740: UNCONDITIONAL_JUMP

	[0014248c]
		00142404: CONDITIONAL_JUMP
 	0014248c sourceline 0xe00
 	00142494 mov ax,0x0
 	001424a0 push ax
 	001424a8 mov ax,0x1
 	001424b4 assertlte ax,0x32
 	001424c0 mul ax,0x8
 	001424cc mov cx,ax
 	001424d8 pop ax
 	001424e0 mov bx,ax
 	001424ec mov mar,0x6c6f20
 	001424f8 add mar,cx
 	00142504 mov ax,mar
 	00142510 push op
 	00142518 mov op,ax
 	00142520 farpush bx
 	00142528 setfuncargs 0x1
 	00142530 mov ax,0xa66f20
 	0014253c farcall ax
 	00142544 farsubsp 0x1
 	0014254c pop op
 	00142554 sourceline 0xe01
 	0014255c mov ax,0x3
 	00142568 mov bx,ax
 	00142574 mov mar,0x3cef20
 	00142580 mov ax,mar
 	0014258c push op
 	00142594 mov op,ax
 	0014259c farpush bx
 	001425a4 setfuncargs 0x1
 	001425ac mov ax,0x69ef20
 	001425b8 farcall ax
 	001425c0 farsubsp 0x1
 	001425c8 pop op
 	001425d0 sourceline 0xe02
 	001425d8 mov ax,0x17
 	001425e4 mov bx,ax
 	001425f0 mov mar,0x506f20
 	001425fc mov ax,mar
 	00142608 push op
 	00142610 mov op,ax
 	00142618 farpush bx
 	00142620 setfuncargs 0x1
 	00142628 mov ax,0x69ef20
 	00142634 farcall ax
 	0014263c farsubsp 0x1
 	00142644 pop op
 	0014264c sourceline 0xe03
 	00142654 push op
 	0014265c mov ax,0x397
 	00142668 farpush ax
 	00142670 mov ax,0x1
 	0014267c farpush ax
 	00142684 mov mar,0x3cef20
 	00142690 mov ax,mar
 	0014269c mov op,ax
 	001426a4 setfuncargs 0x2
 	001426ac mov ax,0x6eef20
 	001426b8 farcall ax
 	001426c0 farsubsp 0x2
 	001426c8 pop op
 	001426d0 sourceline 0xe04
 	001426d8 mov ax,0x104654
 	001426e4 call ax
 	001426ec sourceline 0xe07
 	001426f4 push op
 	001426fc mov mar,0xabef20
 	00142708 mov ax,mar
 	00142714 mov op,ax
 	0014271c setfuncargs 0x0
 	00142724 mov ax,0x71ef20
 	00142730 farcall ax
 	00142738 pop op
		00142740: FALL_THROUGH

	[00142740]
		00142438: UNCONDITIONAL_JUMP
		0014248c: FALL_THROUGH
 	00142740 sourceline 0xe09
 	00142748 jmp 0x00142910
		00142910: UNCONDITIONAL_JUMP

	[00142750]
		001423fc: CONDITIONAL_JUMP
 	00142750 sourceline 0xe0c
 	00142758 push op
 	00142760 mov ax,0x397
 	0014276c farpush ax
 	00142774 mov ax,0x73
 	00142780 farpush ax
 	00142788 mov ax,0x5c
 	00142794 farpush ax
 	0014279c mov mar,0x3cef20
 	001427a8 mov ax,mar
 	001427b4 mov op,ax
 	001427bc setfuncargs 0x3
 	001427c4 mov ax,0x726f20
 	001427d0 farcall ax
 	001427d8 farsubsp 0x3
 	001427e0 pop op
 	001427e8 sourceline 0xe0d
 	001427f0 mov ax,0x1
 	001427fc mov bx,ax
 	00142808 mov mar,0x3cef20
 	00142814 mov ax,mar
 	00142820 push op
 	00142828 mov op,ax
 	00142830 farpush bx
 	00142838 setfuncargs 0x1
 	00142840 mov ax,0x69ef20
 	0014284c farcall ax
 	00142854 farsubsp 0x1
 	0014285c pop op
 	00142864 sourceline 0xe0e
 	0014286c push op
 	00142874 mov ax,0x2bbe6e
 	00142880 farpush ax
 	00142888 mov ax,0x138
 	00142894 farpush ax
 	0014289c mov ax,0x92
 	001428a8 farpush ax
 	001428b0 mov ax,0x0
 	001428bc farpush ax
 	001428c4 mov mar,0x3cef20
 	001428d0 mov ax,mar
 	001428dc mov op,ax
 	001428e4 setfuncargs 0x4
 	001428ec mov ax,0x6aef20
 	001428f8 farcall ax
 	00142900 farsubsp 0x4
 	00142908 pop op
		00142910: FALL_THROUGH

	[00142910]
		00141d70: UNCONDITIONAL_JUMP
		0014227c: UNCONDITIONAL_JUMP
		00142740: UNCONDITIONAL_JUMP
		00142750: FALL_THROUGH
 	00142910 sourceline 0xe12
 	00142918 jmp 0x00144790
		00144790: UNCONDITIONAL_JUMP

	[00142920]
		0013b2fc: CONDITIONAL_JUMP
 	00142920 sourceline 0xe16
 	00142928 mov mar,0xacef20
 	00142934 memread4 ax
 	0014293c lnot ax
 	00142944 jnz 0x00142990
		00142990: CONDITIONAL_JUMP
		0014294c: FALL_THROUGH

	[0014294c]
		00142920: FALL_THROUGH
 	0014294c push ax
 	00142954 mov mar,0xad6f20
 	00142960 memread4 ax
 	00142968 lnot ax
 	00142970 pop bx
 	00142978 lor bx,ax
 	00142984 mov ax,bx
		00142990: FALL_THROUGH

	[00142990]
		00142920: CONDITIONAL_JUMP
		0014294c: FALL_THROUGH
 	00142990 jnz 0x00142a30
		00142a30: CONDITIONAL_JUMP
		00142998: FALL_THROUGH

	[00142998]
		00142990: FALL_THROUGH
 	00142998 push ax
 	001429a0 push op
 	001429a8 mov ax,0x3
 	001429b4 farpush ax
 	001429bc mov mar,0xadef20
 	001429c8 mov ax,mar
 	001429d4 mov op,ax
 	001429dc setfuncargs 0x1
 	001429e4 mov ax,0x6d6f20
 	001429f0 farcall ax
 	001429f8 farsubsp 0x1
 	00142a00 pop op
 	00142a08 lnot ax
 	00142a10 pop bx
 	00142a18 lor bx,ax
 	00142a24 mov ax,bx
		00142a30: FALL_THROUGH

	[00142a30]
		00142990: CONDITIONAL_JUMP
		00142998: FALL_THROUGH
 	00142a30 jz 0x00142d84
		00142d84: CONDITIONAL_JUMP
		00142a38: FALL_THROUGH

	[00142a38]
		00142a30: FALL_THROUGH
 	00142a38 sourceline 0xe18
 	00142a40 setfuncargs 0x0
 	00142a48 mov ax,0x6def20
 	00142a54 farcall ax
 	00142a5c lnot ax
 	00142a64 jz 0x00142ac0
		00142ac0: CONDITIONAL_JUMP
		00142a6c: FALL_THROUGH

	[00142a6c]
		00142a38: FALL_THROUGH
 	00142a6c mov ax,0x82
 	00142a78 farpush ax
 	00142a80 mov ax,0x86
 	00142a8c farpush ax
 	00142a94 setfuncargs 0x2
 	00142a9c mov ax,0x6e6f20
 	00142aa8 farcall ax
 	00142ab0 farsubsp 0x2
 	00142ab8 jmp 0x00142d74
		00142d74: UNCONDITIONAL_JUMP

	[00142ac0]
		00142a38: CONDITIONAL_JUMP
 	00142ac0 sourceline 0xe1b
 	00142ac8 mov ax,0x0
 	00142ad4 push ax
 	00142adc mov ax,0x1
 	00142ae8 assertlte ax,0x32
 	00142af4 mul ax,0x8
 	00142b00 mov cx,ax
 	00142b0c pop ax
 	00142b14 mov bx,ax
 	00142b20 mov mar,0x6c6f20
 	00142b2c add mar,cx
 	00142b38 mov ax,mar
 	00142b44 push op
 	00142b4c mov op,ax
 	00142b54 farpush bx
 	00142b5c setfuncargs 0x1
 	00142b64 mov ax,0xa66f20
 	00142b70 farcall ax
 	00142b78 farsubsp 0x1
 	00142b80 pop op
 	00142b88 sourceline 0xe1c
 	00142b90 mov ax,0x3
 	00142b9c mov bx,ax
 	00142ba8 mov mar,0x3cef20
 	00142bb4 mov ax,mar
 	00142bc0 push op
 	00142bc8 mov op,ax
 	00142bd0 farpush bx
 	00142bd8 setfuncargs 0x1
 	00142be0 mov ax,0x69ef20
 	00142bec farcall ax
 	00142bf4 farsubsp 0x1
 	00142bfc pop op
 	00142c04 sourceline 0xe1d
 	00142c0c mov ax,0x17
 	00142c18 mov bx,ax
 	00142c24 mov mar,0x506f20
 	00142c30 mov ax,mar
 	00142c3c push op
 	00142c44 mov op,ax
 	00142c4c farpush bx
 	00142c54 setfuncargs 0x1
 	00142c5c mov ax,0x69ef20
 	00142c68 farcall ax
 	00142c70 farsubsp 0x1
 	00142c78 pop op
 	00142c80 sourceline 0xe1e
 	00142c88 push op
 	00142c90 mov ax,0x397
 	00142c9c farpush ax
 	00142ca4 mov ax,0x1
 	00142cb0 farpush ax
 	00142cb8 mov mar,0x3cef20
 	00142cc4 mov ax,mar
 	00142cd0 mov op,ax
 	00142cd8 setfuncargs 0x2
 	00142ce0 mov ax,0x6eef20
 	00142cec farcall ax
 	00142cf4 farsubsp 0x2
 	00142cfc pop op
 	00142d04 sourceline 0xe1f
 	00142d0c mov ax,0x104654
 	00142d18 call ax
 	00142d20 sourceline 0xe22
 	00142d28 push op
 	00142d30 mov mar,0xadef20
 	00142d3c mov ax,mar
 	00142d48 mov op,ax
 	00142d50 setfuncargs 0x0
 	00142d58 mov ax,0x71ef20
 	00142d64 farcall ax
 	00142d6c pop op
		00142d74: FALL_THROUGH

	[00142d74]
		00142a6c: UNCONDITIONAL_JUMP
		00142ac0: FALL_THROUGH
 	00142d74 sourceline 0xe24
 	00142d7c jmp 0x00144790
		00144790: UNCONDITIONAL_JUMP

	[00142d84]
		00142a30: CONDITIONAL_JUMP
 	00142d84 sourceline 0xe27
 	00142d8c mov mar,0x7fef20
 	00142d98 memread4 ax
 	00142da0 jz 0x001438a0
		001438a0: CONDITIONAL_JUMP
		00142da8: FALL_THROUGH

	[00142da8]
		00142d84: FALL_THROUGH
 	00142da8 sourceline 0xe29
 	00142db0 push op
 	00142db8 mov ax,0x5
 	00142dc4 farpush ax
 	00142dcc mov mar,0xadef20
 	00142dd8 mov ax,mar
 	00142de4 mov op,ax
 	00142dec setfuncargs 0x1
 	00142df4 mov ax,0xac6f20
 	00142e00 farcall ax
 	00142e08 farsubsp 0x1
 	00142e10 pop op
 	00142e18 push ax
 	00142e20 mov ax,0x2
 	00142e2c pop bx
 	00142e34 cmpeq bx,ax
 	00142e40 mov ax,bx
 	00142e4c jz 0x00143554
		00143554: CONDITIONAL_JUMP
		00142e54: FALL_THROUGH

	[00142e54]
		00142da8: FALL_THROUGH
 	00142e54 sourceline 0xe2b
 	00142e5c mov mar,0xae6f20
 	00142e68 memread4 ax
 	00142e70 lnot ax
 	00142e78 jz 0x00142fb8
		00142fb8: CONDITIONAL_JUMP
		00142e80: FALL_THROUGH

	[00142e80]
		00142e54: FALL_THROUGH
 	00142e80 sourceline 0xe2d
 	00142e88 mov ax,0x1
 	00142e94 mov bx,ax
 	00142ea0 mov mar,0x3cef20
 	00142eac mov ax,mar
 	00142eb8 push op
 	00142ec0 mov op,ax
 	00142ec8 farpush bx
 	00142ed0 setfuncargs 0x1
 	00142ed8 mov ax,0x69ef20
 	00142ee4 farcall ax
 	00142eec farsubsp 0x1
 	00142ef4 pop op
 	00142efc sourceline 0xe2f
 	00142f04 push op
 	00142f0c mov ax,0x2bbdfa
 	00142f18 farpush ax
 	00142f20 mov ax,0x138
 	00142f2c farpush ax
 	00142f34 mov ax,0x92
 	00142f40 farpush ax
 	00142f48 mov ax,0x0
 	00142f54 farpush ax
 	00142f5c mov mar,0x3cef20
 	00142f68 mov ax,mar
 	00142f74 mov op,ax
 	00142f7c setfuncargs 0x4
 	00142f84 mov ax,0x6aef20
 	00142f90 farcall ax
 	00142f98 farsubsp 0x4
 	00142fa0 pop op
 	00142fa8 sourceline 0xe30
 	00142fb0 jmp 0x00143544
		00143544: UNCONDITIONAL_JUMP

	[00142fb8]
		00142e54: CONDITIONAL_JUMP
 	00142fb8 sourceline 0xe33
 	00142fc0 push op
 	00142fc8 mov ax,0x6
 	00142fd4 farpush ax
 	00142fdc mov mar,0xadef20
 	00142fe8 mov ax,mar
 	00142ff4 mov op,ax
 	00142ffc setfuncargs 0x1
 	00143004 mov ax,0x6d6f20
 	00143010 farcall ax
 	00143018 farsubsp 0x1
 	00143020 pop op
 	00143028 lnot ax
 	00143030 jz 0x00143384
		00143384: CONDITIONAL_JUMP
		00143038: FALL_THROUGH

	[00143038]
		00142fb8: FALL_THROUGH
 	00143038 sourceline 0xe35
 	00143040 setfuncargs 0x0
 	00143048 mov ax,0x6def20
 	00143054 farcall ax
 	0014305c lnot ax
 	00143064 jz 0x001430c0
		001430c0: CONDITIONAL_JUMP
		0014306c: FALL_THROUGH

	[0014306c]
		00143038: FALL_THROUGH
 	0014306c mov ax,0x82
 	00143078 farpush ax
 	00143080 mov ax,0x86
 	0014308c farpush ax
 	00143094 setfuncargs 0x2
 	0014309c mov ax,0x6e6f20
 	001430a8 farcall ax
 	001430b0 farsubsp 0x2
 	001430b8 jmp 0x00143374
		00143374: UNCONDITIONAL_JUMP

	[001430c0]
		00143038: CONDITIONAL_JUMP
 	001430c0 sourceline 0xe38
 	001430c8 mov ax,0x0
 	001430d4 push ax
 	001430dc mov ax,0x1
 	001430e8 assertlte ax,0x32
 	001430f4 mul ax,0x8
 	00143100 mov cx,ax
 	0014310c pop ax
 	00143114 mov bx,ax
 	00143120 mov mar,0x6c6f20
 	0014312c add mar,cx
 	00143138 mov ax,mar
 	00143144 push op
 	0014314c mov op,ax
 	00143154 farpush bx
 	0014315c setfuncargs 0x1
 	00143164 mov ax,0xa66f20
 	00143170 farcall ax
 	00143178 farsubsp 0x1
 	00143180 pop op
 	00143188 sourceline 0xe39
 	00143190 mov ax,0x3
 	0014319c mov bx,ax
 	001431a8 mov mar,0x3cef20
 	001431b4 mov ax,mar
 	001431c0 push op
 	001431c8 mov op,ax
 	001431d0 farpush bx
 	001431d8 setfuncargs 0x1
 	001431e0 mov ax,0x69ef20
 	001431ec farcall ax
 	001431f4 farsubsp 0x1
 	001431fc pop op
 	00143204 sourceline 0xe3a
 	0014320c mov ax,0x17
 	00143218 mov bx,ax
 	00143224 mov mar,0x506f20
 	00143230 mov ax,mar
 	0014323c push op
 	00143244 mov op,ax
 	0014324c farpush bx
 	00143254 setfuncargs 0x1
 	0014325c mov ax,0x69ef20
 	00143268 farcall ax
 	00143270 farsubsp 0x1
 	00143278 pop op
 	00143280 sourceline 0xe3b
 	00143288 push op
 	00143290 mov ax,0x397
 	0014329c farpush ax
 	001432a4 mov ax,0x1
 	001432b0 farpush ax
 	001432b8 mov mar,0x3cef20
 	001432c4 mov ax,mar
 	001432d0 mov op,ax
 	001432d8 setfuncargs 0x2
 	001432e0 mov ax,0x6eef20
 	001432ec farcall ax
 	001432f4 farsubsp 0x2
 	001432fc pop op
 	00143304 sourceline 0xe3c
 	0014330c mov ax,0x104654
 	00143318 call ax
 	00143320 sourceline 0xe3f
 	00143328 push op
 	00143330 mov mar,0xadef20
 	0014333c mov ax,mar
 	00143348 mov op,ax
 	00143350 setfuncargs 0x0
 	00143358 mov ax,0x71ef20
 	00143364 farcall ax
 	0014336c pop op
		00143374: FALL_THROUGH

	[00143374]
		0014306c: UNCONDITIONAL_JUMP
		001430c0: FALL_THROUGH
 	00143374 sourceline 0xe41
 	0014337c jmp 0x00143544
		00143544: UNCONDITIONAL_JUMP

	[00143384]
		00142fb8: CONDITIONAL_JUMP
 	00143384 sourceline 0xe44
 	0014338c push op
 	00143394 mov ax,0x397
 	001433a0 farpush ax
 	001433a8 mov ax,0x73
 	001433b4 farpush ax
 	001433bc mov ax,0x5c
 	001433c8 farpush ax
 	001433d0 mov mar,0x3cef20
 	001433dc mov ax,mar
 	001433e8 mov op,ax
 	001433f0 setfuncargs 0x3
 	001433f8 mov ax,0x726f20
 	00143404 farcall ax
 	0014340c farsubsp 0x3
 	00143414 pop op
 	0014341c sourceline 0xe45
 	00143424 mov ax,0x1
 	00143430 mov bx,ax
 	0014343c mov mar,0x3cef20
 	00143448 mov ax,mar
 	00143454 push op
 	0014345c mov op,ax
 	00143464 farpush bx
 	0014346c setfuncargs 0x1
 	00143474 mov ax,0x69ef20
 	00143480 farcall ax
 	00143488 farsubsp 0x1
 	00143490 pop op
 	00143498 sourceline 0xe46
 	001434a0 push op
 	001434a8 mov ax,0x2bbe6e
 	001434b4 farpush ax
 	001434bc mov ax,0x138
 	001434c8 farpush ax
 	001434d0 mov ax,0x92
 	001434dc farpush ax
 	001434e4 mov ax,0x0
 	001434f0 farpush ax
 	001434f8 mov mar,0x3cef20
 	00143504 mov ax,mar
 	00143510 mov op,ax
 	00143518 setfuncargs 0x4
 	00143520 mov ax,0x6aef20
 	0014352c farcall ax
 	00143534 farsubsp 0x4
 	0014353c pop op
		00143544: FALL_THROUGH

	[00143544]
		00142e80: UNCONDITIONAL_JUMP
		00143374: UNCONDITIONAL_JUMP
		00143384: FALL_THROUGH
 	00143544 sourceline 0xe49
 	0014354c jmp 0x00143890
		00143890: UNCONDITIONAL_JUMP

	[00143554]
		00142da8: CONDITIONAL_JUMP
 	00143554 sourceline 0xe4c
 	0014355c setfuncargs 0x0
 	00143564 mov ax,0x6def20
 	00143570 farcall ax
 	00143578 lnot ax
 	00143580 jz 0x001435dc
		001435dc: CONDITIONAL_JUMP
		00143588: FALL_THROUGH

	[00143588]
		00143554: FALL_THROUGH
 	00143588 mov ax,0x82
 	00143594 farpush ax
 	0014359c mov ax,0x86
 	001435a8 farpush ax
 	001435b0 setfuncargs 0x2
 	001435b8 mov ax,0x6e6f20
 	001435c4 farcall ax
 	001435cc farsubsp 0x2
 	001435d4 jmp 0x00143890
		00143890: UNCONDITIONAL_JUMP

	[001435dc]
		00143554: CONDITIONAL_JUMP
 	001435dc sourceline 0xe4f
 	001435e4 mov ax,0x0
 	001435f0 push ax
 	001435f8 mov ax,0x1
 	00143604 assertlte ax,0x32
 	00143610 mul ax,0x8
 	0014361c mov cx,ax
 	00143628 pop ax
 	00143630 mov bx,ax
 	0014363c mov mar,0x6c6f20
 	00143648 add mar,cx
 	00143654 mov ax,mar
 	00143660 push op
 	00143668 mov op,ax
 	00143670 farpush bx
 	00143678 setfuncargs 0x1
 	00143680 mov ax,0xa66f20
 	0014368c farcall ax
 	00143694 farsubsp 0x1
 	0014369c pop op
 	001436a4 sourceline 0xe50
 	001436ac mov ax,0x3
 	001436b8 mov bx,ax
 	001436c4 mov mar,0x3cef20
 	001436d0 mov ax,mar
 	001436dc push op
 	001436e4 mov op,ax
 	001436ec farpush bx
 	001436f4 setfuncargs 0x1
 	001436fc mov ax,0x69ef20
 	00143708 farcall ax
 	00143710 farsubsp 0x1
 	00143718 pop op
 	00143720 sourceline 0xe51
 	00143728 mov ax,0x17
 	00143734 mov bx,ax
 	00143740 mov mar,0x506f20
 	0014374c mov ax,mar
 	00143758 push op
 	00143760 mov op,ax
 	00143768 farpush bx
 	00143770 setfuncargs 0x1
 	00143778 mov ax,0x69ef20
 	00143784 farcall ax
 	0014378c farsubsp 0x1
 	00143794 pop op
 	0014379c sourceline 0xe52
 	001437a4 push op
 	001437ac mov ax,0x397
 	001437b8 farpush ax
 	001437c0 mov ax,0x1
 	001437cc farpush ax
 	001437d4 mov mar,0x3cef20
 	001437e0 mov ax,mar
 	001437ec mov op,ax
 	001437f4 setfuncargs 0x2
 	001437fc mov ax,0x6eef20
 	00143808 farcall ax
 	00143810 farsubsp 0x2
 	00143818 pop op
 	00143820 sourceline 0xe53
 	00143828 mov ax,0x104654
 	00143834 call ax
 	0014383c sourceline 0xe56
 	00143844 push op
 	0014384c mov mar,0xadef20
 	00143858 mov ax,mar
 	00143864 mov op,ax
 	0014386c setfuncargs 0x0
 	00143874 mov ax,0x71ef20
 	00143880 farcall ax
 	00143888 pop op
		00143890: FALL_THROUGH

	[00143890]
		00143544: UNCONDITIONAL_JUMP
		00143588: UNCONDITIONAL_JUMP
		001435dc: FALL_THROUGH
 	00143890 sourceline 0xe59
 	00143898 jmp 0x00144790
		00144790: UNCONDITIONAL_JUMP

	[001438a0]
		00142d84: CONDITIONAL_JUMP
 	001438a0 sourceline 0xe5c
 	001438a8 push op
 	001438b0 mov ax,0x5
 	001438bc farpush ax
 	001438c4 mov mar,0xadef20
 	001438d0 mov ax,mar
 	001438dc mov op,ax
 	001438e4 setfuncargs 0x1
 	001438ec mov ax,0xac6f20
 	001438f8 farcall ax
 	00143900 farsubsp 0x1
 	00143908 pop op
 	00143910 push ax
 	00143918 mov ax,0x2
 	00143924 pop bx
 	0014392c cmpeq bx,ax
 	00143938 mov ax,bx
 	00143944 jz 0x00144454
		00144454: CONDITIONAL_JUMP
		0014394c: FALL_THROUGH

	[0014394c]
		001438a0: FALL_THROUGH
 	0014394c sourceline 0xe5e
 	00143954 mov mar,0xae6f20
 	00143960 memread4 ax
 	00143968 lnot ax
 	00143970 jz 0x00143eb8
		00143eb8: CONDITIONAL_JUMP
		00143978: FALL_THROUGH

	[00143978]
		0014394c: FALL_THROUGH
 	00143978 sourceline 0xe60
 	00143980 mov mar,0x7fef20
 	0014398c memread4 ax
 	00143994 jz 0x00143ce8
		00143ce8: CONDITIONAL_JUMP
		0014399c: FALL_THROUGH

	[0014399c]
		00143978: FALL_THROUGH
 	0014399c sourceline 0xe63
 	001439a4 setfuncargs 0x0
 	001439ac mov ax,0x6def20
 	001439b8 farcall ax
 	001439c0 lnot ax
 	001439c8 jz 0x00143a24
		00143a24: CONDITIONAL_JUMP
		001439d0: FALL_THROUGH

	[001439d0]
		0014399c: FALL_THROUGH
 	001439d0 mov ax,0x82
 	001439dc farpush ax
 	001439e4 mov ax,0x86
 	001439f0 farpush ax
 	001439f8 setfuncargs 0x2
 	00143a00 mov ax,0x6e6f20
 	00143a0c farcall ax
 	00143a14 farsubsp 0x2
 	00143a1c jmp 0x00143cd8
		00143cd8: UNCONDITIONAL_JUMP

	[00143a24]
		0014399c: CONDITIONAL_JUMP
 	00143a24 sourceline 0xe66
 	00143a2c mov ax,0x0
 	00143a38 push ax
 	00143a40 mov ax,0x1
 	00143a4c assertlte ax,0x32
 	00143a58 mul ax,0x8
 	00143a64 mov cx,ax
 	00143a70 pop ax
 	00143a78 mov bx,ax
 	00143a84 mov mar,0x6c6f20
 	00143a90 add mar,cx
 	00143a9c mov ax,mar
 	00143aa8 push op
 	00143ab0 mov op,ax
 	00143ab8 farpush bx
 	00143ac0 setfuncargs 0x1
 	00143ac8 mov ax,0xa66f20
 	00143ad4 farcall ax
 	00143adc farsubsp 0x1
 	00143ae4 pop op
 	00143aec sourceline 0xe67
 	00143af4 mov ax,0x3
 	00143b00 mov bx,ax
 	00143b0c mov mar,0x3cef20
 	00143b18 mov ax,mar
 	00143b24 push op
 	00143b2c mov op,ax
 	00143b34 farpush bx
 	00143b3c setfuncargs 0x1
 	00143b44 mov ax,0x69ef20
 	00143b50 farcall ax
 	00143b58 farsubsp 0x1
 	00143b60 pop op
 	00143b68 sourceline 0xe68
 	00143b70 mov ax,0x17
 	00143b7c mov bx,ax
 	00143b88 mov mar,0x506f20
 	00143b94 mov ax,mar
 	00143ba0 push op
 	00143ba8 mov op,ax
 	00143bb0 farpush bx
 	00143bb8 setfuncargs 0x1
 	00143bc0 mov ax,0x69ef20
 	00143bcc farcall ax
 	00143bd4 farsubsp 0x1
 	00143bdc pop op
 	00143be4 sourceline 0xe69
 	00143bec push op
 	00143bf4 mov ax,0x397
 	00143c00 farpush ax
 	00143c08 mov ax,0x1
 	00143c14 farpush ax
 	00143c1c mov mar,0x3cef20
 	00143c28 mov ax,mar
 	00143c34 mov op,ax
 	00143c3c setfuncargs 0x2
 	00143c44 mov ax,0x6eef20
 	00143c50 farcall ax
 	00143c58 farsubsp 0x2
 	00143c60 pop op
 	00143c68 sourceline 0xe6a
 	00143c70 mov ax,0x104654
 	00143c7c call ax
 	00143c84 sourceline 0xe6d
 	00143c8c push op
 	00143c94 mov mar,0xadef20
 	00143ca0 mov ax,mar
 	00143cac mov op,ax
 	00143cb4 setfuncargs 0x0
 	00143cbc mov ax,0x71ef20
 	00143cc8 farcall ax
 	00143cd0 pop op
		00143cd8: FALL_THROUGH

	[00143cd8]
		001439d0: UNCONDITIONAL_JUMP
		00143a24: FALL_THROUGH
 	00143cd8 sourceline 0xe6f
 	00143ce0 jmp 0x00143ea8
		00143ea8: UNCONDITIONAL_JUMP

	[00143ce8]
		00143978: CONDITIONAL_JUMP
 	00143ce8 sourceline 0xe72
 	00143cf0 push op
 	00143cf8 mov ax,0x397
 	00143d04 farpush ax
 	00143d0c mov ax,0x73
 	00143d18 farpush ax
 	00143d20 mov ax,0x5c
 	00143d2c farpush ax
 	00143d34 mov mar,0x3cef20
 	00143d40 mov ax,mar
 	00143d4c mov op,ax
 	00143d54 setfuncargs 0x3
 	00143d5c mov ax,0x726f20
 	00143d68 farcall ax
 	00143d70 farsubsp 0x3
 	00143d78 pop op
 	00143d80 sourceline 0xe73
 	00143d88 mov ax,0x1
 	00143d94 mov bx,ax
 	00143da0 mov mar,0x3cef20
 	00143dac mov ax,mar
 	00143db8 push op
 	00143dc0 mov op,ax
 	00143dc8 farpush bx
 	00143dd0 setfuncargs 0x1
 	00143dd8 mov ax,0x69ef20
 	00143de4 farcall ax
 	00143dec farsubsp 0x1
 	00143df4 pop op
 	00143dfc sourceline 0xe74
 	00143e04 push op
 	00143e0c mov ax,0x2bbdfa
 	00143e18 farpush ax
 	00143e20 mov ax,0x138
 	00143e2c farpush ax
 	00143e34 mov ax,0x92
 	00143e40 farpush ax
 	00143e48 mov ax,0x0
 	00143e54 farpush ax
 	00143e5c mov mar,0x3cef20
 	00143e68 mov ax,mar
 	00143e74 mov op,ax
 	00143e7c setfuncargs 0x4
 	00143e84 mov ax,0x6aef20
 	00143e90 farcall ax
 	00143e98 farsubsp 0x4
 	00143ea0 pop op
		00143ea8: FALL_THROUGH

	[00143ea8]
		00143cd8: UNCONDITIONAL_JUMP
		00143ce8: FALL_THROUGH
 	00143ea8 sourceline 0xe76
 	00143eb0 jmp 0x00144444
		00144444: UNCONDITIONAL_JUMP

	[00143eb8]
		0014394c: CONDITIONAL_JUMP
 	00143eb8 sourceline 0xe79
 	00143ec0 push op
 	00143ec8 mov ax,0x6
 	00143ed4 farpush ax
 	00143edc mov mar,0xadef20
 	00143ee8 mov ax,mar
 	00143ef4 mov op,ax
 	00143efc setfuncargs 0x1
 	00143f04 mov ax,0x6d6f20
 	00143f10 farcall ax
 	00143f18 farsubsp 0x1
 	00143f20 pop op
 	00143f28 lnot ax
 	00143f30 jz 0x00144284
		00144284: CONDITIONAL_JUMP
		00143f38: FALL_THROUGH

	[00143f38]
		00143eb8: FALL_THROUGH
 	00143f38 sourceline 0xe7b
 	00143f40 setfuncargs 0x0
 	00143f48 mov ax,0x6def20
 	00143f54 farcall ax
 	00143f5c lnot ax
 	00143f64 jz 0x00143fc0
		00143fc0: CONDITIONAL_JUMP
		00143f6c: FALL_THROUGH

	[00143f6c]
		00143f38: FALL_THROUGH
 	00143f6c mov ax,0x82
 	00143f78 farpush ax
 	00143f80 mov ax,0x86
 	00143f8c farpush ax
 	00143f94 setfuncargs 0x2
 	00143f9c mov ax,0x6e6f20
 	00143fa8 farcall ax
 	00143fb0 farsubsp 0x2
 	00143fb8 jmp 0x00144274
		00144274: UNCONDITIONAL_JUMP

	[00143fc0]
		00143f38: CONDITIONAL_JUMP
 	00143fc0 sourceline 0xe7e
 	00143fc8 mov ax,0x0
 	00143fd4 push ax
 	00143fdc mov ax,0x1
 	00143fe8 assertlte ax,0x32
 	00143ff4 mul ax,0x8
 	00144000 mov cx,ax
 	0014400c pop ax
 	00144014 mov bx,ax
 	00144020 mov mar,0x6c6f20
 	0014402c add mar,cx
 	00144038 mov ax,mar
 	00144044 push op
 	0014404c mov op,ax
 	00144054 farpush bx
 	0014405c setfuncargs 0x1
 	00144064 mov ax,0xa66f20
 	00144070 farcall ax
 	00144078 farsubsp 0x1
 	00144080 pop op
 	00144088 sourceline 0xe7f
 	00144090 mov ax,0x3
 	0014409c mov bx,ax
 	001440a8 mov mar,0x3cef20
 	001440b4 mov ax,mar
 	001440c0 push op
 	001440c8 mov op,ax
 	001440d0 farpush bx
 	001440d8 setfuncargs 0x1
 	001440e0 mov ax,0x69ef20
 	001440ec farcall ax
 	001440f4 farsubsp 0x1
 	001440fc pop op
 	00144104 sourceline 0xe80
 	0014410c mov ax,0x17
 	00144118 mov bx,ax
 	00144124 mov mar,0x506f20
 	00144130 mov ax,mar
 	0014413c push op
 	00144144 mov op,ax
 	0014414c farpush bx
 	00144154 setfuncargs 0x1
 	0014415c mov ax,0x69ef20
 	00144168 farcall ax
 	00144170 farsubsp 0x1
 	00144178 pop op
 	00144180 sourceline 0xe81
 	00144188 push op
 	00144190 mov ax,0x397
 	0014419c farpush ax
 	001441a4 mov ax,0x1
 	001441b0 farpush ax
 	001441b8 mov mar,0x3cef20
 	001441c4 mov ax,mar
 	001441d0 mov op,ax
 	001441d8 setfuncargs 0x2
 	001441e0 mov ax,0x6eef20
 	001441ec farcall ax
 	001441f4 farsubsp 0x2
 	001441fc pop op
 	00144204 sourceline 0xe82
 	0014420c mov ax,0x104654
 	00144218 call ax
 	00144220 sourceline 0xe85
 	00144228 push op
 	00144230 mov mar,0xadef20
 	0014423c mov ax,mar
 	00144248 mov op,ax
 	00144250 setfuncargs 0x0
 	00144258 mov ax,0x71ef20
 	00144264 farcall ax
 	0014426c pop op
		00144274: FALL_THROUGH

	[00144274]
		00143f6c: UNCONDITIONAL_JUMP
		00143fc0: FALL_THROUGH
 	00144274 sourceline 0xe87
 	0014427c jmp 0x00144444
		00144444: UNCONDITIONAL_JUMP

	[00144284]
		00143eb8: CONDITIONAL_JUMP
 	00144284 sourceline 0xe8a
 	0014428c push op
 	00144294 mov ax,0x397
 	001442a0 farpush ax
 	001442a8 mov ax,0x73
 	001442b4 farpush ax
 	001442bc mov ax,0x5c
 	001442c8 farpush ax
 	001442d0 mov mar,0x3cef20
 	001442dc mov ax,mar
 	001442e8 mov op,ax
 	001442f0 setfuncargs 0x3
 	001442f8 mov ax,0x726f20
 	00144304 farcall ax
 	0014430c farsubsp 0x3
 	00144314 pop op
 	0014431c sourceline 0xe8b
 	00144324 mov ax,0x1
 	00144330 mov bx,ax
 	0014433c mov mar,0x3cef20
 	00144348 mov ax,mar
 	00144354 push op
 	0014435c mov op,ax
 	00144364 farpush bx
 	0014436c setfuncargs 0x1
 	00144374 mov ax,0x69ef20
 	00144380 farcall ax
 	00144388 farsubsp 0x1
 	00144390 pop op
 	00144398 sourceline 0xe8c
 	001443a0 push op
 	001443a8 mov ax,0x2bbe6e
 	001443b4 farpush ax
 	001443bc mov ax,0x138
 	001443c8 farpush ax
 	001443d0 mov ax,0x92
 	001443dc farpush ax
 	001443e4 mov ax,0x0
 	001443f0 farpush ax
 	001443f8 mov mar,0x3cef20
 	00144404 mov ax,mar
 	00144410 mov op,ax
 	00144418 setfuncargs 0x4
 	00144420 mov ax,0x6aef20
 	0014442c farcall ax
 	00144434 farsubsp 0x4
 	0014443c pop op
		00144444: FALL_THROUGH

	[00144444]
		00143ea8: UNCONDITIONAL_JUMP
		00144274: UNCONDITIONAL_JUMP
		00144284: FALL_THROUGH
 	00144444 sourceline 0xe8f
 	0014444c jmp 0x00144790
		00144790: UNCONDITIONAL_JUMP

	[00144454]
		001438a0: CONDITIONAL_JUMP
 	00144454 sourceline 0xe92
 	0014445c setfuncargs 0x0
 	00144464 mov ax,0x6def20
 	00144470 farcall ax
 	00144478 lnot ax
 	00144480 jz 0x001444dc
		001444dc: CONDITIONAL_JUMP
		00144488: FALL_THROUGH

	[00144488]
		00144454: FALL_THROUGH
 	00144488 mov ax,0x82
 	00144494 farpush ax
 	0014449c mov ax,0x86
 	001444a8 farpush ax
 	001444b0 setfuncargs 0x2
 	001444b8 mov ax,0x6e6f20
 	001444c4 farcall ax
 	001444cc farsubsp 0x2
 	001444d4 jmp 0x00144790
		00144790: UNCONDITIONAL_JUMP

	[001444dc]
		00144454: CONDITIONAL_JUMP
 	001444dc sourceline 0xe95
 	001444e4 mov ax,0x0
 	001444f0 push ax
 	001444f8 mov ax,0x1
 	00144504 assertlte ax,0x32
 	00144510 mul ax,0x8
 	0014451c mov cx,ax
 	00144528 pop ax
 	00144530 mov bx,ax
 	0014453c mov mar,0x6c6f20
 	00144548 add mar,cx
 	00144554 mov ax,mar
 	00144560 push op
 	00144568 mov op,ax
 	00144570 farpush bx
 	00144578 setfuncargs 0x1
 	00144580 mov ax,0xa66f20
 	0014458c farcall ax
 	00144594 farsubsp 0x1
 	0014459c pop op
 	001445a4 sourceline 0xe96
 	001445ac mov ax,0x3
 	001445b8 mov bx,ax
 	001445c4 mov mar,0x3cef20
 	001445d0 mov ax,mar
 	001445dc push op
 	001445e4 mov op,ax
 	001445ec farpush bx
 	001445f4 setfuncargs 0x1
 	001445fc mov ax,0x69ef20
 	00144608 farcall ax
 	00144610 farsubsp 0x1
 	00144618 pop op
 	00144620 sourceline 0xe97
 	00144628 mov ax,0x17
 	00144634 mov bx,ax
 	00144640 mov mar,0x506f20
 	0014464c mov ax,mar
 	00144658 push op
 	00144660 mov op,ax
 	00144668 farpush bx
 	00144670 setfuncargs 0x1
 	00144678 mov ax,0x69ef20
 	00144684 farcall ax
 	0014468c farsubsp 0x1
 	00144694 pop op
 	0014469c sourceline 0xe98
 	001446a4 push op
 	001446ac mov ax,0x397
 	001446b8 farpush ax
 	001446c0 mov ax,0x1
 	001446cc farpush ax
 	001446d4 mov mar,0x3cef20
 	001446e0 mov ax,mar
 	001446ec mov op,ax
 	001446f4 setfuncargs 0x2
 	001446fc mov ax,0x6eef20
 	00144708 farcall ax
 	00144710 farsubsp 0x2
 	00144718 pop op
 	00144720 sourceline 0xe99
 	00144728 mov ax,0x104654
 	00144734 call ax
 	0014473c sourceline 0xe9c
 	00144744 push op
 	0014474c mov mar,0xadef20
 	00144758 mov ax,mar
 	00144764 mov op,ax
 	0014476c setfuncargs 0x0
 	00144774 mov ax,0x71ef20
 	00144780 farcall ax
 	00144788 pop op
		00144790: FALL_THROUGH

	[00144790]
		00142910: UNCONDITIONAL_JUMP
		00142d74: UNCONDITIONAL_JUMP
		00143890: UNCONDITIONAL_JUMP
		00144444: UNCONDITIONAL_JUMP
		00144488: UNCONDITIONAL_JUMP
		001444dc: FALL_THROUGH
 	00144790 sourceline 0xea2
 	00144798 mov ax,0x0
 	001447a4 ret

cPharmacyMan_Interact$0:
	[001447a8]
 	001447a8 sourceline 0xea7
 	001447b0 thisaddr
 	001447b8 sourceline 0xea8
*	001447c0 mov mar,0xaeef20
 	001447cc memread4 ax
 	001447d4 push ax
 	001447dc mov ax,0x0
 	001447e8 pop bx
 	001447f0 cmpeq bx,ax
 	001447fc mov ax,bx
 	00144808 jz 0x00145094
		00145094: CONDITIONAL_JUMP
		00144810: FALL_THROUGH

	[00144810]
		001447a8: FALL_THROUGH
 	00144810 sourceline 0xeaa
 	00144818 push op
 	00144820 mov ax,0x1
 	0014482c farpush ax
 	00144834 mov mar,0xaf6f20
 	00144840 mov ax,mar
 	0014484c mov op,ax
 	00144854 setfuncargs 0x1
 	0014485c mov ax,0x6d6f20
 	00144868 farcall ax
 	00144870 farsubsp 0x1
 	00144878 pop op
 	00144880 lnot ax
 	00144888 jnz 0x00144928
		00144928: CONDITIONAL_JUMP
		00144890: FALL_THROUGH

	[00144890]
		00144810: FALL_THROUGH
 	00144890 push ax
 	00144898 push op
 	001448a0 mov ax,0x2
 	001448ac farpush ax
 	001448b4 mov mar,0xaf6f20
 	001448c0 mov ax,mar
 	001448cc mov op,ax
 	001448d4 setfuncargs 0x1
 	001448dc mov ax,0x6d6f20
 	001448e8 farcall ax
 	001448f0 farsubsp 0x1
 	001448f8 pop op
 	00144900 lnot ax
 	00144908 pop bx
 	00144910 lor bx,ax
 	0014491c mov ax,bx
		00144928: FALL_THROUGH

	[00144928]
		00144810: CONDITIONAL_JUMP
		00144890: FALL_THROUGH
 	00144928 jnz 0x001449c8
		001449c8: CONDITIONAL_JUMP
		00144930: FALL_THROUGH

	[00144930]
		00144928: FALL_THROUGH
 	00144930 push ax
 	00144938 push op
 	00144940 mov ax,0x3
 	0014494c farpush ax
 	00144954 mov mar,0xaf6f20
 	00144960 mov ax,mar
 	0014496c mov op,ax
 	00144974 setfuncargs 0x1
 	0014497c mov ax,0x6d6f20
 	00144988 farcall ax
 	00144990 farsubsp 0x1
 	00144998 pop op
 	001449a0 lnot ax
 	001449a8 pop bx
 	001449b0 lor bx,ax
 	001449bc mov ax,bx
		001449c8: FALL_THROUGH

	[001449c8]
		00144928: CONDITIONAL_JUMP
		00144930: FALL_THROUGH
 	001449c8 jz 0x00144ec4
		00144ec4: CONDITIONAL_JUMP
		001449d0: FALL_THROUGH

	[001449d0]
		001449c8: FALL_THROUGH
 	001449d0 sourceline 0xeac
 	001449d8 mov ax,0x3
 	001449e4 mov bx,ax
 	001449f0 mov mar,0x3cef20
 	001449fc mov ax,mar
 	00144a08 push op
 	00144a10 mov op,ax
 	00144a18 farpush bx
 	00144a20 setfuncargs 0x1
 	00144a28 mov ax,0x69ef20
 	00144a34 farcall ax
 	00144a3c farsubsp 0x1
 	00144a44 pop op
 	00144a4c sourceline 0xead
 	00144a54 setfuncargs 0x0
 	00144a5c mov ax,0x6def20
 	00144a68 farcall ax
 	00144a70 lnot ax
 	00144a78 jz 0x00144ad4
		00144ad4: CONDITIONAL_JUMP
		00144a80: FALL_THROUGH

	[00144a80]
		001449d0: FALL_THROUGH
 	00144a80 mov ax,0x80
 	00144a8c farpush ax
 	00144a94 mov ax,0xdc
 	00144aa0 farpush ax
 	00144aa8 setfuncargs 0x2
 	00144ab0 mov ax,0x6e6f20
 	00144abc farcall ax
 	00144ac4 farsubsp 0x2
 	00144acc jmp 0x00144eb4
		00144eb4: UNCONDITIONAL_JUMP

	[00144ad4]
		001449d0: CONDITIONAL_JUMP
 	00144ad4 sourceline 0xeb0
 	00144adc push op
 	00144ae4 mov ax,0x397
 	00144af0 farpush ax
 	00144af8 mov mar,0xafef20
 	00144b04 mov ax,mar
 	00144b10 farpush ax
 	00144b18 mov mar,0x3cef20
 	00144b24 mov ax,mar
 	00144b30 mov op,ax
 	00144b38 setfuncargs 0x2
 	00144b40 mov ax,0xb06f20
 	00144b4c farcall ax
 	00144b54 farsubsp 0x2
 	00144b5c pop op
 	00144b64 sourceline 0xeb1
 	00144b6c mov mar,0xb0ef20
 	00144b78 memread4 ax
 	00144b80 jz 0x00144d80
		00144d80: CONDITIONAL_JUMP
		00144b88: FALL_THROUGH

	[00144b88]
		00144ad4: FALL_THROUGH
 	00144b88 sourceline 0xeb3
 	00144b90 push op
 	00144b98 mov ax,0x2bc060
 	00144ba4 farpush ax
 	00144bac mov mar,0x3cef20
 	00144bb8 mov ax,mar
 	00144bc4 mov op,ax
 	00144bcc setfuncargs 0x1
 	00144bd4 mov ax,0x6f6f20
 	00144be0 farcall ax
 	00144be8 farsubsp 0x1
 	00144bf0 pop op
 	00144bf8 sourceline 0xeb4
 	00144c00 push op
 	00144c08 mov ax,0x2bc00a
 	00144c14 farpush ax
 	00144c1c mov mar,0xafef20
 	00144c28 mov ax,mar
 	00144c34 mov op,ax
 	00144c3c setfuncargs 0x1
 	00144c44 mov ax,0x6f6f20
 	00144c50 farcall ax
 	00144c58 farsubsp 0x1
 	00144c60 pop op
 	00144c68 sourceline 0xeb5
 	00144c70 push op
 	00144c78 mov ax,0x2bc01f
 	00144c84 farpush ax
 	00144c8c mov mar,0x3cef20
 	00144c98 mov ax,mar
 	00144ca4 mov op,ax
 	00144cac setfuncargs 0x1
 	00144cb4 mov ax,0x6f6f20
 	00144cc0 farcall ax
 	00144cc8 farsubsp 0x1
 	00144cd0 pop op
 	00144cd8 sourceline 0xeb6
 	00144ce0 push op
 	00144ce8 mov ax,0x2bc037
 	00144cf4 farpush ax
 	00144cfc mov mar,0xafef20
 	00144d08 mov ax,mar
 	00144d14 mov op,ax
 	00144d1c setfuncargs 0x1
 	00144d24 mov ax,0x6f6f20
 	00144d30 farcall ax
 	00144d38 farsubsp 0x1
 	00144d40 pop op
 	00144d48 sourceline 0xeb7
 	00144d50 mov ax,0x0
 	00144d5c mov mar,0xb0ef20
 	00144d68 memwrite4 ax
 	00144d70 sourceline 0xeb8
 	00144d78 jmp 0x00144e60
		00144e60: UNCONDITIONAL_JUMP

	[00144d80]
		00144ad4: CONDITIONAL_JUMP
 	00144d80 sourceline 0xebb
 	00144d88 push op
 	00144d90 mov ax,0x2bc060
 	00144d9c farpush ax
 	00144da4 mov mar,0x3cef20
 	00144db0 mov ax,mar
 	00144dbc mov op,ax
 	00144dc4 setfuncargs 0x1
 	00144dcc mov ax,0x6f6f20
 	00144dd8 farcall ax
 	00144de0 farsubsp 0x1
 	00144de8 pop op
 	00144df0 sourceline 0xebc
 	00144df8 push op
 	00144e00 mov ax,0x2bc06f
 	00144e0c farpush ax
 	00144e14 mov mar,0xafef20
 	00144e20 mov ax,mar
 	00144e2c mov op,ax
 	00144e34 setfuncargs 0x1
 	00144e3c mov ax,0x6f6f20
 	00144e48 farcall ax
 	00144e50 farsubsp 0x1
 	00144e58 pop op
		00144e60: FALL_THROUGH

	[00144e60]
		00144b88: UNCONDITIONAL_JUMP
		00144d80: FALL_THROUGH
 	00144e60 sourceline 0xebe
 	00144e68 push op
 	00144e70 mov mar,0xaf6f20
 	00144e7c mov ax,mar
 	00144e88 mov op,ax
 	00144e90 setfuncargs 0x0
 	00144e98 mov ax,0x71ef20
 	00144ea4 farcall ax
 	00144eac pop op
		00144eb4: FALL_THROUGH

	[00144eb4]
		00144a80: UNCONDITIONAL_JUMP
		00144e60: FALL_THROUGH
 	00144eb4 sourceline 0xec0
 	00144ebc jmp 0x00145084
		00145084: UNCONDITIONAL_JUMP

	[00144ec4]
		001449c8: CONDITIONAL_JUMP
 	00144ec4 sourceline 0xec3
 	00144ecc push op
 	00144ed4 mov ax,0x397
 	00144ee0 farpush ax
 	00144ee8 mov ax,0x6e
 	00144ef4 farpush ax
 	00144efc mov ax,0x110
 	00144f08 farpush ax
 	00144f10 mov mar,0x3cef20
 	00144f1c mov ax,mar
 	00144f28 mov op,ax
 	00144f30 setfuncargs 0x3
 	00144f38 mov ax,0x726f20
 	00144f44 farcall ax
 	00144f4c farsubsp 0x3
 	00144f54 pop op
 	00144f5c sourceline 0xec4
 	00144f64 mov ax,0x1
 	00144f70 mov bx,ax
 	00144f7c mov mar,0x3cef20
 	00144f88 mov ax,mar
 	00144f94 push op
 	00144f9c mov op,ax
 	00144fa4 farpush bx
 	00144fac setfuncargs 0x1
 	00144fb4 mov ax,0x69ef20
 	00144fc0 farcall ax
 	00144fc8 farsubsp 0x1
 	00144fd0 pop op
 	00144fd8 sourceline 0xec5
 	00144fe0 push op
 	00144fe8 mov ax,0x2c798e
 	00144ff4 farpush ax
 	00144ffc mov ax,0x138
 	00145008 farpush ax
 	00145010 mov ax,0x92
 	0014501c farpush ax
 	00145024 mov ax,0x0
 	00145030 farpush ax
 	00145038 mov mar,0x3cef20
 	00145044 mov ax,mar
 	00145050 mov op,ax
 	00145058 setfuncargs 0x4
 	00145060 mov ax,0x6aef20
 	0014506c farcall ax
 	00145074 farsubsp 0x4
 	0014507c pop op
		00145084: FALL_THROUGH

	[00145084]
		00144eb4: UNCONDITIONAL_JUMP
		00144ec4: FALL_THROUGH
 	00145084 sourceline 0xec7
 	0014508c jmp 0x00147a60
		00147a60: UNCONDITIONAL_JUMP

	[00145094]
		001447a8: CONDITIONAL_JUMP
 	00145094 sourceline 0xeca
 	0014509c mov mar,0xaeef20
 	001450a8 memread4 ax
 	001450b0 push ax
 	001450b8 mov ax,0x1
 	001450c4 pop bx
 	001450cc cmpeq bx,ax
 	001450d8 mov ax,bx
 	001450e4 jz 0x00147a60
		00147a60: CONDITIONAL_JUMP
		001450ec: FALL_THROUGH

	[001450ec]
		00145094: FALL_THROUGH
 	001450ec sourceline 0xecc
 	001450f4 mov mar,0xafef20
 	00145100 mov ax,mar
 	0014510c push op
 	00145114 mov op,ax
 	0014511c setfuncargs 0x0
 	00145124 mov ax,0xb16f20
 	00145130 farcall ax
 	00145138 pop op
 	00145140 push ax
 	00145148 mov ax,0x25
 	00145154 pop bx
 	0014515c cmpneq bx,ax
 	00145168 mov ax,bx
 	00145174 jz 0x0014519c
		0014519c: CONDITIONAL_JUMP
		0014517c: FALL_THROUGH

	[0014517c]
		001450ec: FALL_THROUGH
 	0014517c mov ax,0x0
 	00145188 mov mar,0xb1ef20
 	00145194 memwrite4 ax
		0014519c: FALL_THROUGH

	[0014519c]
		001450ec: CONDITIONAL_JUMP
		0014517c: FALL_THROUGH
 	0014519c sourceline 0xecd
 	001451a4 push op
 	001451ac mov mar,0x8e6f20
 	001451b8 mov ax,mar
 	001451c4 farpush ax
 	001451cc mov mar,0x3cef20
 	001451d8 mov ax,mar
 	001451e4 mov op,ax
 	001451ec setfuncargs 0x1
 	001451f4 mov ax,0x996f20
 	00145200 farcall ax
 	00145208 farsubsp 0x1
 	00145210 pop op
 	00145218 lnot ax
 	00145220 jz 0x001452cc
		001452cc: CONDITIONAL_JUMP
		00145228: FALL_THROUGH

	[00145228]
		0014519c: FALL_THROUGH
 	00145228 push ax
 	00145230 push op
 	00145238 mov mar,0x9cef20
 	00145244 mov ax,mar
 	00145250 farpush ax
 	00145258 mov mar,0x3cef20
 	00145264 mov ax,mar
 	00145270 mov op,ax
 	00145278 setfuncargs 0x1
 	00145280 mov ax,0x996f20
 	0014528c farcall ax
 	00145294 farsubsp 0x1
 	0014529c pop op
 	001452a4 lnot ax
 	001452ac pop bx
 	001452b4 land bx,ax
 	001452c0 mov ax,bx
		001452cc: FALL_THROUGH

	[001452cc]
		0014519c: CONDITIONAL_JUMP
		00145228: FALL_THROUGH
 	001452cc jz 0x001471ec
		001471ec: CONDITIONAL_JUMP
		001452d4: FALL_THROUGH

	[001452d4]
		001452cc: FALL_THROUGH
 	001452d4 sourceline 0xecf
 	001452dc mov mar,0xafef20
 	001452e8 mov ax,mar
 	001452f4 push op
 	001452fc mov op,ax
 	00145304 setfuncargs 0x0
 	0014530c mov ax,0x516f20
 	00145318 farcall ax
 	00145320 pop op
 	00145328 push ax
 	00145330 mov ax,0x3f
 	0014533c pop bx
 	00145344 cmpeq bx,ax
 	00145350 mov ax,bx
 	0014535c jz 0x001471dc
		001471dc: CONDITIONAL_JUMP
		00145364: FALL_THROUGH

	[00145364]
		001452d4: FALL_THROUGH
 	00145364 sourceline 0xed1
 	0014536c mov mar,0xb1ef20
 	00145378 memread4 ax
 	00145380 jz 0x00145ca4
		00145ca4: CONDITIONAL_JUMP
		00145388: FALL_THROUGH

	[00145388]
		00145364: FALL_THROUGH
 	00145388 sourceline 0xed3
 	00145390 mov ax,0x2bbf5b
 	0014539c farpush ax
 	001453a4 setfuncargs 0x1
 	001453ac mov ax,0x7f6f20
 	001453b8 farcall ax
 	001453c0 farsubsp 0x1
 	001453c8 jz 0x00145c94
		00145c94: CONDITIONAL_JUMP
		001453d0: FALL_THROUGH

	[001453d0]
		00145388: FALL_THROUGH
 	001453d0 sourceline 0xed5
 	001453d8 mov ax,0x1
 	001453e4 mov bx,ax
 	001453f0 mov mar,0x3cef20
 	001453fc mov ax,mar
 	00145408 push op
 	00145410 mov op,ax
 	00145418 farpush bx
 	00145420 setfuncargs 0x1
 	00145428 mov ax,0x69ef20
 	00145434 farcall ax
 	0014543c farsubsp 0x1
 	00145444 pop op
 	0014544c sourceline 0xed6
 	00145454 mov ax,0x1
 	00145460 mov mar,0xb26f20
 	0014546c memwrite4 ax
 	00145474 sourceline 0xed7
 	0014547c push op
 	00145484 mov ax,0x131
 	00145490 farpush ax
 	00145498 mov ax,0x397
 	001454a4 farpush ax
 	001454ac mov ax,0x84
 	001454b8 farpush ax
 	001454c0 mov ax,0xf3
 	001454cc farpush ax
 	001454d4 mov mar,0x3cef20
 	001454e0 mov ax,mar
 	001454ec mov op,ax
 	001454f4 setfuncargs 0x4
 	001454fc mov ax,0xb2ef20
 	00145508 farcall ax
 	00145510 farsubsp 0x4
 	00145518 pop op
 	00145520 sourceline 0xed8
 	00145528 push op
 	00145530 mov ax,0x7
 	0014553c farpush ax
 	00145544 mov mar,0x3cef20
 	00145550 mov ax,mar
 	0014555c mov op,ax
 	00145564 setfuncargs 0x1
 	0014556c mov ax,0x51ef20
 	00145578 farcall ax
 	00145580 farsubsp 0x1
 	00145588 pop op
 	00145590 sourceline 0xed9
 	00145598 mov ax,0x7d
 	001455a4 mov bx,ax
 	001455b0 mov mar,0x3cef20
 	001455bc mov ax,mar
 	001455c8 push op
 	001455d0 mov op,ax
 	001455d8 farpush bx
 	001455e0 setfuncargs 0x1
 	001455e8 mov ax,0x526f20
 	001455f4 farcall ax
 	001455fc farsubsp 0x1
 	00145604 pop op
 	0014560c sourceline 0xeda
 	00145614 mov ax,0xff
 	00145620 mov bx,ax
 	0014562c mov mar,0x3cef20
 	00145638 mov ax,mar
 	00145644 push op
 	0014564c mov op,ax
 	00145654 farpush bx
 	0014565c setfuncargs 0x1
 	00145664 mov ax,0x70ef20
 	00145670 farcall ax
 	00145678 farsubsp 0x1
 	00145680 pop op
 	00145688 sourceline 0xedb
 	00145690 push op
 	00145698 mov ax,0x426
 	001456a4 farpush ax
 	001456ac mov ax,0x397
 	001456b8 farpush ax
 	001456c0 mov ax,0x0
 	001456cc farpush ax
 	001456d4 mov ax,0x3
 	001456e0 farpush ax
 	001456e8 mov ax,0x5
 	001456f4 farpush ax
 	001456fc mov mar,0x3cef20
 	00145708 mov ax,mar
 	00145714 mov op,ax
 	0014571c setfuncargs 0x5
 	00145724 mov ax,0x536f20
 	00145730 farcall ax
 	00145738 farsubsp 0x5
 	00145740 pop op
 	00145748 sourceline 0xedc
 	00145750 push op
 	00145758 mov ax,0x40
 	00145764 farpush ax
 	0014576c mov mar,0xafef20
 	00145778 mov ax,mar
 	00145784 mov op,ax
 	0014578c setfuncargs 0x1
 	00145794 mov ax,0x51ef20
 	001457a0 farcall ax
 	001457a8 farsubsp 0x1
 	001457b0 pop op
 	001457b8 sourceline 0xedd
 	001457c0 push op
 	001457c8 mov ax,0x426
 	001457d4 farpush ax
 	001457dc mov ax,0x398
 	001457e8 farpush ax
 	001457f0 mov ax,0x1
 	001457fc farpush ax
 	00145804 mov ax,0x3
 	00145810 farpush ax
 	00145818 mov ax,0x0
 	00145824 farpush ax
 	0014582c mov mar,0xafef20
 	00145838 mov ax,mar
 	00145844 mov op,ax
 	0014584c setfuncargs 0x5
 	00145854 mov ax,0x536f20
 	00145860 farcall ax
 	00145868 farsubsp 0x5
 	00145870 pop op
 	00145878 sourceline 0xede
 	00145880 push op
 	00145888 mov ax,0x427
 	00145894 farpush ax
 	0014589c mov ax,0x397
 	001458a8 farpush ax
 	001458b0 mov ax,0x0
 	001458bc farpush ax
 	001458c4 mov ax,0x3
 	001458d0 farpush ax
 	001458d8 mov ax,0x5
 	001458e4 farpush ax
 	001458ec mov mar,0x3cef20
 	001458f8 mov ax,mar
 	00145904 mov op,ax
 	0014590c setfuncargs 0x5
 	00145914 mov ax,0x536f20
 	00145920 farcall ax
 	00145928 farsubsp 0x5
 	00145930 pop op
 	00145938 sourceline 0xedf
 	00145940 push op
 	00145948 mov ax,0x2
 	00145954 farpush ax
 	0014595c mov mar,0x3cef20
 	00145968 mov ax,mar
 	00145974 mov op,ax
 	0014597c setfuncargs 0x1
 	00145984 mov ax,0x51ef20
 	00145990 farcall ax
 	00145998 farsubsp 0x1
 	001459a0 pop op
 	001459a8 sourceline 0xee0
 	001459b0 mov ax,0x2
 	001459bc mov bx,ax
 	001459c8 mov mar,0x3cef20
 	001459d4 mov ax,mar
 	001459e0 push op
 	001459e8 mov op,ax
 	001459f0 farpush bx
 	001459f8 setfuncargs 0x1
 	00145a00 mov ax,0x766f20
 	00145a0c farcall ax
 	00145a14 farsubsp 0x1
 	00145a1c pop op
 	00145a24 sourceline 0xee1
 	00145a2c mov mar,0x3cef20
 	00145a38 mov ax,mar
 	00145a44 push op
 	00145a4c mov op,ax
 	00145a54 setfuncargs 0x0
 	00145a5c mov ax,0xb36f20
 	00145a68 farcall ax
 	00145a70 pop op
 	00145a78 push ax
 	00145a80 mov ax,0x9
 	00145a8c pop bx
 	00145a94 sub bx,ax
 	00145aa0 mov ax,bx
 	00145aac mov bx,ax
 	00145ab8 mov mar,0x3cef20
 	00145ac4 mov ax,mar
 	00145ad0 push op
 	00145ad8 mov op,ax
 	00145ae0 farpush bx
 	00145ae8 setfuncargs 0x1
 	00145af0 mov ax,0x70ef20
 	00145afc farcall ax
 	00145b04 farsubsp 0x1
 	00145b0c pop op
 	00145b14 sourceline 0xee2
 	00145b1c mov mar,0x3cef20
 	00145b28 mov ax,mar
 	00145b34 push op
 	00145b3c mov op,ax
 	00145b44 setfuncargs 0x0
 	00145b4c mov ax,0x78ef20
 	00145b58 farcall ax
 	00145b60 pop op
 	00145b68 push ax
 	00145b70 mov ax,0x8
 	00145b7c pop bx
 	00145b84 add bx,ax
 	00145b90 mov ax,bx
 	00145b9c mov bx,ax
 	00145ba8 mov mar,0x3cef20
 	00145bb4 mov ax,mar
 	00145bc0 push op
 	00145bc8 mov op,ax
 	00145bd0 farpush bx
 	00145bd8 setfuncargs 0x1
 	00145be0 mov ax,0x526f20
 	00145bec farcall ax
 	00145bf4 farsubsp 0x1
 	00145bfc pop op
 	00145c04 sourceline 0xee3
 	00145c0c push op
 	00145c14 mov ax,0x7cfe
 	00145c20 farpush ax
 	00145c28 mov mar,0x9cef20
 	00145c34 mov ax,mar
 	00145c40 farpush ax
 	00145c48 mov mar,0x3cef20
 	00145c54 mov ax,mar
 	00145c60 mov op,ax
 	00145c68 setfuncargs 0x2
 	00145c70 mov ax,0x7e6f20
 	00145c7c farcall ax
 	00145c84 farsubsp 0x2
 	00145c8c pop op
		00145c94: FALL_THROUGH

	[00145c94]
		00145388: CONDITIONAL_JUMP
		001453d0: FALL_THROUGH
 	00145c94 sourceline 0xee5
 	00145c9c jmp 0x001471dc
		001471dc: UNCONDITIONAL_JUMP

	[00145ca4]
		00145364: CONDITIONAL_JUMP
 	00145ca4 sourceline 0xee8
 	00145cac setfuncargs 0x0
 	00145cb4 mov ax,0x6def20
 	00145cc0 farcall ax
 	00145cc8 lnot ax
 	00145cd0 jz 0x00145d2c
		00145d2c: CONDITIONAL_JUMP
		00145cd8: FALL_THROUGH

	[00145cd8]
		00145ca4: FALL_THROUGH
 	00145cd8 mov ax,0x86
 	00145ce4 farpush ax
 	00145cec mov ax,0xf0
 	00145cf8 farpush ax
 	00145d00 setfuncargs 0x2
 	00145d08 mov ax,0x6e6f20
 	00145d14 farcall ax
 	00145d1c farsubsp 0x2
 	00145d24 jmp 0x001471dc
		001471dc: UNCONDITIONAL_JUMP

	[00145d2c]
		00145ca4: CONDITIONAL_JUMP
 	00145d2c sourceline 0xeeb
 	00145d34 mov ax,0x1
 	00145d40 mov mar,0xb3ef20
 	00145d4c memwrite4 ax
 	00145d54 sourceline 0xeec
 	00145d5c push op
 	00145d64 mov ax,0x7
 	00145d70 farpush ax
 	00145d78 mov mar,0x3cef20
 	00145d84 mov ax,mar
 	00145d90 mov op,ax
 	00145d98 setfuncargs 0x1
 	00145da0 mov ax,0x51ef20
 	00145dac farcall ax
 	00145db4 farsubsp 0x1
 	00145dbc pop op
 	00145dc4 sourceline 0xeed
 	00145dcc mov ax,0x7e
 	00145dd8 mov bx,ax
 	00145de4 mov mar,0x3cef20
 	00145df0 mov ax,mar
 	00145dfc push op
 	00145e04 mov op,ax
 	00145e0c farpush bx
 	00145e14 setfuncargs 0x1
 	00145e1c mov ax,0x526f20
 	00145e28 farcall ax
 	00145e30 farsubsp 0x1
 	00145e38 pop op
 	00145e40 sourceline 0xeee
 	00145e48 mov ax,0xfa
 	00145e54 mov bx,ax
 	00145e60 mov mar,0x3cef20
 	00145e6c mov ax,mar
 	00145e78 push op
 	00145e80 mov op,ax
 	00145e88 farpush bx
 	00145e90 setfuncargs 0x1
 	00145e98 mov ax,0x70ef20
 	00145ea4 farcall ax
 	00145eac farsubsp 0x1
 	00145eb4 pop op
 	00145ebc sourceline 0xeef
 	00145ec4 push op
 	00145ecc mov ax,0x426
 	00145ed8 farpush ax
 	00145ee0 mov ax,0x397
 	00145eec farpush ax
 	00145ef4 mov ax,0x0
 	00145f00 farpush ax
 	00145f08 mov ax,0x3
 	00145f14 farpush ax
 	00145f1c mov ax,0x2
 	00145f28 farpush ax
 	00145f30 mov mar,0x3cef20
 	00145f3c mov ax,mar
 	00145f48 mov op,ax
 	00145f50 setfuncargs 0x5
 	00145f58 mov ax,0x536f20
 	00145f64 farcall ax
 	00145f6c farsubsp 0x5
 	00145f74 pop op
 	00145f7c sourceline 0xef0
 	00145f84 push op
 	00145f8c mov ax,0x427
 	00145f98 farpush ax
 	00145fa0 mov ax,0x397
 	00145fac farpush ax
 	00145fb4 mov ax,0x0
 	00145fc0 farpush ax
 	00145fc8 mov ax,0x3
 	00145fd4 farpush ax
 	00145fdc mov ax,0x2
 	00145fe8 farpush ax
 	00145ff0 mov mar,0x3cef20
 	00145ffc mov ax,mar
 	00146008 mov op,ax
 	00146010 setfuncargs 0x5
 	00146018 mov ax,0x536f20
 	00146024 farcall ax
 	0014602c farsubsp 0x5
 	00146034 pop op
 	0014603c sourceline 0xef1
 	00146044 mov mar,0xafef20
 	00146050 mov ax,mar
 	0014605c push op
 	00146064 mov op,ax
 	0014606c setfuncargs 0x0
 	00146074 mov ax,0xb16f20
 	00146080 farcall ax
 	00146088 pop op
 	00146090 push ax
 	00146098 mov ax,0x0
 	001460a4 pop bx
 	001460ac cmpeq bx,ax
 	001460b8 mov ax,bx
 	001460c4 jnz 0x00146174
		00146174: CONDITIONAL_JUMP
		001460cc: FALL_THROUGH

	[001460cc]
		00145d2c: FALL_THROUGH
 	001460cc push ax
 	001460d4 mov mar,0xafef20
 	001460e0 mov ax,mar
 	001460ec push op
 	001460f4 mov op,ax
 	001460fc setfuncargs 0x0
 	00146104 mov ax,0xb16f20
 	00146110 farcall ax
 	00146118 pop op
 	00146120 push ax
 	00146128 mov ax,0x25
 	00146134 pop bx
 	0014613c cmpeq bx,ax
 	00146148 mov ax,bx
 	00146154 pop bx
 	0014615c lor bx,ax
 	00146168 mov ax,bx
		00146174: FALL_THROUGH

	[00146174]
		00145d2c: CONDITIONAL_JUMP
		001460cc: FALL_THROUGH
 	00146174 jz 0x001462bc
		001462bc: CONDITIONAL_JUMP
		0014617c: FALL_THROUGH

	[0014617c]
		00146174: FALL_THROUGH
 	0014617c sourceline 0xef3
 	00146184 push op
 	0014618c mov ax,0x3e
 	00146198 farpush ax
 	001461a0 mov mar,0xafef20
 	001461ac mov ax,mar
 	001461b8 mov op,ax
 	001461c0 setfuncargs 0x1
 	001461c8 mov ax,0x51ef20
 	001461d4 farcall ax
 	001461dc farsubsp 0x1
 	001461e4 pop op
 	001461ec sourceline 0xef4
 	001461f4 push op
 	001461fc mov ax,0x427
 	00146208 farpush ax
 	00146210 mov ax,0x397
 	0014621c farpush ax
 	00146224 mov ax,0x0
 	00146230 farpush ax
 	00146238 mov ax,0x3
 	00146244 farpush ax
 	0014624c mov ax,0x0
 	00146258 farpush ax
 	00146260 mov mar,0xafef20
 	0014626c mov ax,mar
 	00146278 mov op,ax
 	00146280 setfuncargs 0x5
 	00146288 mov ax,0x536f20
 	00146294 farcall ax
 	0014629c farsubsp 0x5
 	001462a4 pop op
 	001462ac sourceline 0xef5
 	001462b4 jmp 0x0014642c
		0014642c: UNCONDITIONAL_JUMP

	[001462bc]
		00146174: CONDITIONAL_JUMP
 	001462bc sourceline 0xef8
 	001462c4 mov ax,0x3c
 	001462d0 farpush ax
 	001462d8 setfuncargs 0x1
 	001462e0 mov ax,0x426f20
 	001462ec farcall ax
 	001462f4 farsubsp 0x1
 	001462fc sourceline 0xef9
 	00146304 push op
 	0014630c mov ax,0x3e
 	00146318 farpush ax
 	00146320 mov mar,0xafef20
 	0014632c mov ax,mar
 	00146338 mov op,ax
 	00146340 setfuncargs 0x1
 	00146348 mov ax,0x51ef20
 	00146354 farcall ax
 	0014635c farsubsp 0x1
 	00146364 pop op
 	0014636c sourceline 0xefa
 	00146374 push op
 	0014637c mov ax,0x427
 	00146388 farpush ax
 	00146390 mov ax,0x397
 	0014639c farpush ax
 	001463a4 mov ax,0x0
 	001463b0 farpush ax
 	001463b8 mov ax,0x3
 	001463c4 farpush ax
 	001463cc mov ax,0x0
 	001463d8 farpush ax
 	001463e0 mov mar,0xafef20
 	001463ec mov ax,mar
 	001463f8 mov op,ax
 	00146400 setfuncargs 0x5
 	00146408 mov ax,0x536f20
 	00146414 farcall ax
 	0014641c farsubsp 0x5
 	00146424 pop op
		0014642c: FALL_THROUGH

	[0014642c]
		0014617c: UNCONDITIONAL_JUMP
		001462bc: FALL_THROUGH
 	0014642c sourceline 0xefc
 	00146434 push op
 	0014643c mov ax,0x2
 	00146448 farpush ax
 	00146450 mov mar,0x3cef20
 	0014645c mov ax,mar
 	00146468 mov op,ax
 	00146470 setfuncargs 0x1
 	00146478 mov ax,0x51ef20
 	00146484 farcall ax
 	0014648c farsubsp 0x1
 	00146494 pop op
 	0014649c sourceline 0xefd
 	001464a4 mov ax,0x5
 	001464b0 mov bx,ax
 	001464bc mov mar,0x3cef20
 	001464c8 mov ax,mar
 	001464d4 push op
 	001464dc mov op,ax
 	001464e4 farpush bx
 	001464ec setfuncargs 0x1
 	001464f4 mov ax,0x766f20
 	00146500 farcall ax
 	00146508 farsubsp 0x1
 	00146510 pop op
 	00146518 sourceline 0xefe
 	00146520 mov ax,0xf1
 	0014652c mov bx,ax
 	00146538 mov mar,0x3cef20
 	00146544 mov ax,mar
 	00146550 push op
 	00146558 mov op,ax
 	00146560 farpush bx
 	00146568 setfuncargs 0x1
 	00146570 mov ax,0x70ef20
 	0014657c farcall ax
 	00146584 farsubsp 0x1
 	0014658c pop op
 	00146594 sourceline 0xeff
 	0014659c mov ax,0x86
 	001465a8 mov bx,ax
 	001465b4 mov mar,0x3cef20
 	001465c0 mov ax,mar
 	001465cc push op
 	001465d4 mov op,ax
 	001465dc farpush bx
 	001465e4 setfuncargs 0x1
 	001465ec mov ax,0x526f20
 	001465f8 farcall ax
 	00146600 farsubsp 0x1
 	00146608 pop op
 	00146610 sourceline 0xf00
 	00146618 push op
 	00146620 mov ax,0x4c
 	0014662c farpush ax
 	00146634 mov mar,0x3cef20
 	00146640 mov ax,mar
 	0014664c mov op,ax
 	00146654 setfuncargs 0x1
 	0014665c mov ax,0x51ef20
 	00146668 farcall ax
 	00146670 farsubsp 0x1
 	00146678 pop op
 	00146680 sourceline 0xf01
 	00146688 push op
 	00146690 mov ax,0x426
 	0014669c farpush ax
 	001466a4 mov ax,0x398
 	001466b0 farpush ax
 	001466b8 mov ax,0x0
 	001466c4 farpush ax
 	001466cc mov ax,0x3
 	001466d8 farpush ax
 	001466e0 mov ax,0x0
 	001466ec farpush ax
 	001466f4 mov mar,0x3cef20
 	00146700 mov ax,mar
 	0014670c mov op,ax
 	00146714 setfuncargs 0x5
 	0014671c mov ax,0x536f20
 	00146728 farcall ax
 	00146730 farsubsp 0x5
 	00146738 pop op
 	00146740 sourceline 0xf02
 	00146748 mov ax,0xf4
 	00146754 mov bx,ax
 	00146760 mov mar,0x3cef20
 	0014676c mov ax,mar
 	00146778 push op
 	00146780 mov op,ax
 	00146788 farpush bx
 	00146790 setfuncargs 0x1
 	00146798 mov ax,0x70ef20
 	001467a4 farcall ax
 	001467ac farsubsp 0x1
 	001467b4 pop op
 	001467bc sourceline 0xf03
 	001467c4 mov ax,0x91
 	001467d0 mov bx,ax
 	001467dc mov mar,0x3cef20
 	001467e8 mov ax,mar
 	001467f4 push op
 	001467fc mov op,ax
 	00146804 farpush bx
 	0014680c setfuncargs 0x1
 	00146814 mov ax,0x526f20
 	00146820 farcall ax
 	00146828 farsubsp 0x1
 	00146830 pop op
 	00146838 sourceline 0xf04
 	00146840 push op
 	00146848 mov ax,0x41
 	00146854 farpush ax
 	0014685c mov mar,0xafef20
 	00146868 mov ax,mar
 	00146874 mov op,ax
 	0014687c setfuncargs 0x1
 	00146884 mov ax,0x51ef20
 	00146890 farcall ax
 	00146898 farsubsp 0x1
 	001468a0 pop op
 	001468a8 sourceline 0xf05
 	001468b0 mov ax,0xfd
 	001468bc mov bx,ax
 	001468c8 mov mar,0xafef20
 	001468d4 mov ax,mar
 	001468e0 push op
 	001468e8 mov op,ax
 	001468f0 farpush bx
 	001468f8 setfuncargs 0x1
 	00146900 mov ax,0x70ef20
 	0014690c farcall ax
 	00146914 farsubsp 0x1
 	0014691c pop op
 	00146924 sourceline 0xf06
 	0014692c mov ax,0x82
 	00146938 mov bx,ax
 	00146944 mov mar,0xafef20
 	00146950 mov ax,mar
 	0014695c push op
 	00146964 mov op,ax
 	0014696c farpush bx
 	00146974 setfuncargs 0x1
 	0014697c mov ax,0x526f20
 	00146988 farcall ax
 	00146990 farsubsp 0x1
 	00146998 pop op
 	001469a0 sourceline 0xf07
 	001469a8 push op
 	001469b0 mov ax,0x426
 	001469bc farpush ax
 	001469c4 mov ax,0x398
 	001469d0 farpush ax
 	001469d8 mov ax,0x0
 	001469e4 farpush ax
 	001469ec mov ax,0x3
 	001469f8 farpush ax
 	00146a00 mov ax,0x0
 	00146a0c farpush ax
 	00146a14 mov mar,0xafef20
 	00146a20 mov ax,mar
 	00146a2c mov op,ax
 	00146a34 setfuncargs 0x5
 	00146a3c mov ax,0x536f20
 	00146a48 farcall ax
 	00146a50 farsubsp 0x5
 	00146a58 pop op
 	00146a60 sourceline 0xf08
 	00146a68 mov mar,0xb46f20
 	00146a74 memread4 ax
 	00146a7c add ax,0x1
 	00146a88 memwrite4 ax
 	00146a90 sourceline 0xf09
 	00146a98 mov ax,0x3
 	00146aa4 mov bx,ax
 	00146ab0 mov mar,0x3cef20
 	00146abc mov ax,mar
 	00146ac8 push op
 	00146ad0 mov op,ax
 	00146ad8 farpush bx
 	00146ae0 setfuncargs 0x1
 	00146ae8 mov ax,0x69ef20
 	00146af4 farcall ax
 	00146afc farsubsp 0x1
 	00146b04 pop op
 	00146b0c sourceline 0xf0a
 	00146b14 push op
 	00146b1c mov ax,0x2bbf64
 	00146b28 farpush ax
 	00146b30 mov mar,0xafef20
 	00146b3c mov ax,mar
 	00146b48 mov op,ax
 	00146b50 setfuncargs 0x1
 	00146b58 mov ax,0x6f6f20
 	00146b64 farcall ax
 	00146b6c farsubsp 0x1
 	00146b74 pop op
		00146b7c: FALL_THROUGH

	[00146b7c]
		00146c88: UNCONDITIONAL_JUMP
		0014642c: FALL_THROUGH
 	00146b7c sourceline 0xf0d
 	00146b84 mov mar,0xafef20
 	00146b90 mov ax,mar
 	00146b9c push op
 	00146ba4 mov op,ax
 	00146bac setfuncargs 0x0
 	00146bb4 mov ax,0x50ef20
 	00146bc0 farcall ax
 	00146bc8 pop op
 	00146bd0 jz 0x00146c80
		00146c80: CONDITIONAL_JUMP
		00146bd8: FALL_THROUGH

	[00146bd8]
		00146b7c: FALL_THROUGH
 	00146bd8 push ax
 	00146be0 mov mar,0xafef20
 	00146bec mov ax,mar
 	00146bf8 push op
 	00146c00 mov op,ax
 	00146c08 setfuncargs 0x0
 	00146c10 mov ax,0x516f20
 	00146c1c farcall ax
 	00146c24 pop op
 	00146c2c push ax
 	00146c34 mov ax,0x41
 	00146c40 pop bx
 	00146c48 cmpeq bx,ax
 	00146c54 mov ax,bx
 	00146c60 pop bx
 	00146c68 land bx,ax
 	00146c74 mov ax,bx
		00146c80: FALL_THROUGH

	[00146c80]
		00146b7c: CONDITIONAL_JUMP
		00146bd8: FALL_THROUGH
 	00146c80 jz 0x00146cc8
		00146cc8: CONDITIONAL_JUMP
		00146c88: FALL_THROUGH

	[00146c88]
		00146c80: FALL_THROUGH
 	00146c88 mov ax,0x1
 	00146c94 farpush ax
 	00146c9c setfuncargs 0x1
 	00146ca4 mov ax,0x426f20
 	00146cb0 farcall ax
 	00146cb8 farsubsp 0x1
 	00146cc0 jmp 0x00146b7c
		00146b7c: UNCONDITIONAL_JUMP

	[00146cc8]
		00146c80: CONDITIONAL_JUMP
 	00146cc8 sourceline 0xf0f
 	00146cd0 push op
 	00146cd8 mov ax,0xe7
 	00146ce4 farpush ax
 	00146cec mov mar,0xafef20
 	00146cf8 mov ax,mar
 	00146d04 mov op,ax
 	00146d0c setfuncargs 0x1
 	00146d14 mov ax,0x51ef20
 	00146d20 farcall ax
 	00146d28 farsubsp 0x1
 	00146d30 pop op
 	00146d38 sourceline 0xf10
 	00146d40 mov ax,0xfd
 	00146d4c mov bx,ax
 	00146d58 mov mar,0xafef20
 	00146d64 mov ax,mar
 	00146d70 push op
 	00146d78 mov op,ax
 	00146d80 farpush bx
 	00146d88 setfuncargs 0x1
 	00146d90 mov ax,0x70ef20
 	00146d9c farcall ax
 	00146da4 farsubsp 0x1
 	00146dac pop op
 	00146db4 sourceline 0xf11
 	00146dbc mov ax,0x82
 	00146dc8 mov bx,ax
 	00146dd4 mov mar,0xafef20
 	00146de0 mov ax,mar
 	00146dec push op
 	00146df4 mov op,ax
 	00146dfc farpush bx
 	00146e04 setfuncargs 0x1
 	00146e0c mov ax,0x526f20
 	00146e18 farcall ax
 	00146e20 farsubsp 0x1
 	00146e28 pop op
 	00146e30 sourceline 0xf12
 	00146e38 push op
 	00146e40 mov ax,0x2bbfa7
 	00146e4c farpush ax
 	00146e54 mov mar,0x3cef20
 	00146e60 mov ax,mar
 	00146e6c mov op,ax
 	00146e74 setfuncargs 0x1
 	00146e7c mov ax,0x6f6f20
 	00146e88 farcall ax
 	00146e90 farsubsp 0x1
 	00146e98 pop op
 	00146ea0 sourceline 0xf13
 	00146ea8 push op
 	00146eb0 mov ax,0x2bbfda
 	00146ebc farpush ax
 	00146ec4 mov mar,0xafef20
 	00146ed0 mov ax,mar
 	00146edc mov op,ax
 	00146ee4 setfuncargs 0x1
 	00146eec mov ax,0x6f6f20
 	00146ef8 farcall ax
 	00146f00 farsubsp 0x1
 	00146f08 pop op
 	00146f10 sourceline 0xf14
 	00146f18 push op
 	00146f20 mov ax,0x426
 	00146f2c farpush ax
 	00146f34 mov ax,0x398
 	00146f40 farpush ax
 	00146f48 mov ax,0x0
 	00146f54 farpush ax
 	00146f5c mov ax,0x3
 	00146f68 farpush ax
 	00146f70 mov ax,0x0
 	00146f7c farpush ax
 	00146f84 mov mar,0xafef20
 	00146f90 mov ax,mar
 	00146f9c mov op,ax
 	00146fa4 setfuncargs 0x5
 	00146fac mov ax,0x536f20
 	00146fb8 farcall ax
 	00146fc0 farsubsp 0x5
 	00146fc8 pop op
 	00146fd0 sourceline 0xf17
 	00146fd8 push op
 	00146fe0 mov ax,0x2
 	00146fec farpush ax
 	00146ff4 mov mar,0x3cef20
 	00147000 mov ax,mar
 	0014700c mov op,ax
 	00147014 setfuncargs 0x1
 	0014701c mov ax,0x51ef20
 	00147028 farcall ax
 	00147030 farsubsp 0x1
 	00147038 pop op
 	00147040 sourceline 0xf18
 	00147048 mov ax,0x5
 	00147054 mov bx,ax
 	00147060 mov mar,0x3cef20
 	0014706c mov ax,mar
 	00147078 push op
 	00147080 mov op,ax
 	00147088 farpush bx
 	00147090 setfuncargs 0x1
 	00147098 mov ax,0x766f20
 	001470a4 farcall ax
 	001470ac farsubsp 0x1
 	001470b4 pop op
 	001470bc sourceline 0xf19
 	001470c4 mov ax,0xe3
 	001470d0 mov bx,ax
 	001470dc mov mar,0x3cef20
 	001470e8 mov ax,mar
 	001470f4 push op
 	001470fc mov op,ax
 	00147104 farpush bx
 	0014710c setfuncargs 0x1
 	00147114 mov ax,0x70ef20
 	00147120 farcall ax
 	00147128 farsubsp 0x1
 	00147130 pop op
 	00147138 sourceline 0xf1a
 	00147140 mov ax,0x88
 	0014714c mov bx,ax
 	00147158 mov mar,0x3cef20
 	00147164 mov ax,mar
 	00147170 push op
 	00147178 mov op,ax
 	00147180 farpush bx
 	00147188 setfuncargs 0x1
 	00147190 mov ax,0x526f20
 	0014719c farcall ax
 	001471a4 farsubsp 0x1
 	001471ac pop op
 	001471b4 sourceline 0xf1b
 	001471bc mov ax,0x0
 	001471c8 mov mar,0xb3ef20
 	001471d4 memwrite4 ax
		001471dc: FALL_THROUGH

	[001471dc]
		001452d4: CONDITIONAL_JUMP
		00145c94: UNCONDITIONAL_JUMP
		00145cd8: UNCONDITIONAL_JUMP
		00146cc8: FALL_THROUGH
 	001471dc sourceline 0xf1f
 	001471e4 jmp 0x00147a60
		00147a60: UNCONDITIONAL_JUMP

	[001471ec]
		001452cc: CONDITIONAL_JUMP
 	001471ec sourceline 0xf22
 	001471f4 push op
 	001471fc mov ax,0x1
 	00147208 farpush ax
 	00147210 mov mar,0xaf6f20
 	0014721c mov ax,mar
 	00147228 mov op,ax
 	00147230 setfuncargs 0x1
 	00147238 mov ax,0x6d6f20
 	00147244 farcall ax
 	0014724c farsubsp 0x1
 	00147254 pop op
 	0014725c lnot ax
 	00147264 jnz 0x00147304
		00147304: CONDITIONAL_JUMP
		0014726c: FALL_THROUGH

	[0014726c]
		001471ec: FALL_THROUGH
 	0014726c push ax
 	00147274 push op
 	0014727c mov ax,0x2
 	00147288 farpush ax
 	00147290 mov mar,0xaf6f20
 	0014729c mov ax,mar
 	001472a8 mov op,ax
 	001472b0 setfuncargs 0x1
 	001472b8 mov ax,0x6d6f20
 	001472c4 farcall ax
 	001472cc farsubsp 0x1
 	001472d4 pop op
 	001472dc lnot ax
 	001472e4 pop bx
 	001472ec lor bx,ax
 	001472f8 mov ax,bx
		00147304: FALL_THROUGH

	[00147304]
		001471ec: CONDITIONAL_JUMP
		0014726c: FALL_THROUGH
 	00147304 jnz 0x001473a4
		001473a4: CONDITIONAL_JUMP
		0014730c: FALL_THROUGH

	[0014730c]
		00147304: FALL_THROUGH
 	0014730c push ax
 	00147314 push op
 	0014731c mov ax,0x3
 	00147328 farpush ax
 	00147330 mov mar,0xaf6f20
 	0014733c mov ax,mar
 	00147348 mov op,ax
 	00147350 setfuncargs 0x1
 	00147358 mov ax,0x6d6f20
 	00147364 farcall ax
 	0014736c farsubsp 0x1
 	00147374 pop op
 	0014737c lnot ax
 	00147384 pop bx
 	0014738c lor bx,ax
 	00147398 mov ax,bx
		001473a4: FALL_THROUGH

	[001473a4]
		00147304: CONDITIONAL_JUMP
		0014730c: FALL_THROUGH
 	001473a4 jz 0x001478a0
		001478a0: CONDITIONAL_JUMP
		001473ac: FALL_THROUGH

	[001473ac]
		001473a4: FALL_THROUGH
 	001473ac sourceline 0xf24
 	001473b4 setfuncargs 0x0
 	001473bc mov ax,0x6def20
 	001473c8 farcall ax
 	001473d0 lnot ax
 	001473d8 jz 0x00147434
		00147434: CONDITIONAL_JUMP
		001473e0: FALL_THROUGH

	[001473e0]
		001473ac: FALL_THROUGH
 	001473e0 mov ax,0x80
 	001473ec farpush ax
 	001473f4 mov ax,0xdc
 	00147400 farpush ax
 	00147408 setfuncargs 0x2
 	00147410 mov ax,0x6e6f20
 	0014741c farcall ax
 	00147424 farsubsp 0x2
 	0014742c jmp 0x00147890
		00147890: UNCONDITIONAL_JUMP

	[00147434]
		001473ac: CONDITIONAL_JUMP
 	00147434 sourceline 0xf27
 	0014743c mov ax,0x3
 	00147448 mov bx,ax
 	00147454 mov mar,0x3cef20
 	00147460 mov ax,mar
 	0014746c push op
 	00147474 mov op,ax
 	0014747c farpush bx
 	00147484 setfuncargs 0x1
 	0014748c mov ax,0x69ef20
 	00147498 farcall ax
 	001474a0 farsubsp 0x1
 	001474a8 pop op
 	001474b0 sourceline 0xf28
 	001474b8 push op
 	001474c0 mov ax,0x397
 	001474cc farpush ax
 	001474d4 mov mar,0xafef20
 	001474e0 mov ax,mar
 	001474ec farpush ax
 	001474f4 mov mar,0x3cef20
 	00147500 mov ax,mar
 	0014750c mov op,ax
 	00147514 setfuncargs 0x2
 	0014751c mov ax,0xb06f20
 	00147528 farcall ax
 	00147530 farsubsp 0x2
 	00147538 pop op
 	00147540 sourceline 0xf29
 	00147548 mov mar,0xb0ef20
 	00147554 memread4 ax
 	0014755c jz 0x0014775c
		0014775c: CONDITIONAL_JUMP
		00147564: FALL_THROUGH

	[00147564]
		00147434: FALL_THROUGH
 	00147564 sourceline 0xf2b
 	0014756c push op
 	00147574 mov ax,0x2bc060
 	00147580 farpush ax
 	00147588 mov mar,0x3cef20
 	00147594 mov ax,mar
 	001475a0 mov op,ax
 	001475a8 setfuncargs 0x1
 	001475b0 mov ax,0x6f6f20
 	001475bc farcall ax
 	001475c4 farsubsp 0x1
 	001475cc pop op
 	001475d4 sourceline 0xf2c
 	001475dc push op
 	001475e4 mov ax,0x2bc00a
 	001475f0 farpush ax
 	001475f8 mov mar,0xafef20
 	00147604 mov ax,mar
 	00147610 mov op,ax
 	00147618 setfuncargs 0x1
 	00147620 mov ax,0x6f6f20
 	0014762c farcall ax
 	00147634 farsubsp 0x1
 	0014763c pop op
 	00147644 sourceline 0xf2d
 	0014764c push op
 	00147654 mov ax,0x2bc01f
 	00147660 farpush ax
 	00147668 mov mar,0x3cef20
 	00147674 mov ax,mar
 	00147680 mov op,ax
 	00147688 setfuncargs 0x1
 	00147690 mov ax,0x6f6f20
 	0014769c farcall ax
 	001476a4 farsubsp 0x1
 	001476ac pop op
 	001476b4 sourceline 0xf2e
 	001476bc push op
 	001476c4 mov ax,0x2bc037
 	001476d0 farpush ax
 	001476d8 mov mar,0xafef20
 	001476e4 mov ax,mar
 	001476f0 mov op,ax
 	001476f8 setfuncargs 0x1
 	00147700 mov ax,0x6f6f20
 	0014770c farcall ax
 	00147714 farsubsp 0x1
 	0014771c pop op
 	00147724 sourceline 0xf2f
 	0014772c mov ax,0x0
 	00147738 mov mar,0xb0ef20
 	00147744 memwrite4 ax
 	0014774c sourceline 0xf30
 	00147754 jmp 0x0014783c
		0014783c: UNCONDITIONAL_JUMP

	[0014775c]
		00147434: CONDITIONAL_JUMP
 	0014775c sourceline 0xf33
 	00147764 push op
 	0014776c mov ax,0x2bc060
 	00147778 farpush ax
 	00147780 mov mar,0x3cef20
 	0014778c mov ax,mar
 	00147798 mov op,ax
 	001477a0 setfuncargs 0x1
 	001477a8 mov ax,0x6f6f20
 	001477b4 farcall ax
 	001477bc farsubsp 0x1
 	001477c4 pop op
 	001477cc sourceline 0xf34
 	001477d4 push op
 	001477dc mov ax,0x2bc06f
 	001477e8 farpush ax
 	001477f0 mov mar,0xafef20
 	001477fc mov ax,mar
 	00147808 mov op,ax
 	00147810 setfuncargs 0x1
 	00147818 mov ax,0x6f6f20
 	00147824 farcall ax
 	0014782c farsubsp 0x1
 	00147834 pop op
		0014783c: FALL_THROUGH

	[0014783c]
		00147564: UNCONDITIONAL_JUMP
		0014775c: FALL_THROUGH
 	0014783c sourceline 0xf36
 	00147844 push op
 	0014784c mov mar,0xaf6f20
 	00147858 mov ax,mar
 	00147864 mov op,ax
 	0014786c setfuncargs 0x0
 	00147874 mov ax,0x71ef20
 	00147880 farcall ax
 	00147888 pop op
		00147890: FALL_THROUGH

	[00147890]
		001473e0: UNCONDITIONAL_JUMP
		0014783c: FALL_THROUGH
 	00147890 sourceline 0xf38
 	00147898 jmp 0x00147a60
		00147a60: UNCONDITIONAL_JUMP

	[001478a0]
		001473a4: CONDITIONAL_JUMP
 	001478a0 sourceline 0xf3b
 	001478a8 push op
 	001478b0 mov ax,0x397
 	001478bc farpush ax
 	001478c4 mov ax,0x6e
 	001478d0 farpush ax
 	001478d8 mov ax,0x110
 	001478e4 farpush ax
 	001478ec mov mar,0x3cef20
 	001478f8 mov ax,mar
 	00147904 mov op,ax
 	0014790c setfuncargs 0x3
 	00147914 mov ax,0x726f20
 	00147920 farcall ax
 	00147928 farsubsp 0x3
 	00147930 pop op
 	00147938 sourceline 0xf3c
 	00147940 mov ax,0x1
 	0014794c mov bx,ax
 	00147958 mov mar,0x3cef20
 	00147964 mov ax,mar
 	00147970 push op
 	00147978 mov op,ax
 	00147980 farpush bx
 	00147988 setfuncargs 0x1
 	00147990 mov ax,0x69ef20
 	0014799c farcall ax
 	001479a4 farsubsp 0x1
 	001479ac pop op
 	001479b4 sourceline 0xf3d
 	001479bc push op
 	001479c4 mov ax,0x2c798e
 	001479d0 farpush ax
 	001479d8 mov ax,0x138
 	001479e4 farpush ax
 	001479ec mov ax,0x92
 	001479f8 farpush ax
 	00147a00 mov ax,0x0
 	00147a0c farpush ax
 	00147a14 mov mar,0x3cef20
 	00147a20 mov ax,mar
 	00147a2c mov op,ax
 	00147a34 setfuncargs 0x4
 	00147a3c mov ax,0x6aef20
 	00147a48 farcall ax
 	00147a50 farsubsp 0x4
 	00147a58 pop op
		00147a60: FALL_THROUGH

	[00147a60]
		00145084: UNCONDITIONAL_JUMP
		00145094: CONDITIONAL_JUMP
		001471dc: UNCONDITIONAL_JUMP
		00147890: UNCONDITIONAL_JUMP
		001478a0: FALL_THROUGH
 	00147a60 sourceline 0xf41
 	00147a68 mov ax,0x0
 	00147a74 ret

cProcter_Interact$0:
	[00147a78]
 	00147a78 sourceline 0xf48
 	00147a80 thisaddr
 	00147a88 sourceline 0xf49
*	00147a90 mov mar,0x746f20
 	00147a9c mov ax,mar
 	00147aa8 push op
 	00147ab0 mov op,ax
 	00147ab8 setfuncargs 0x0
 	00147ac0 mov ax,0x516f20
 	00147acc farcall ax
 	00147ad4 pop op
 	00147adc push ax
 	00147ae4 mov ax,0x44
 	00147af0 pop bx
 	00147af8 cmpeq bx,ax
 	00147b04 mov ax,bx
 	00147b10 jz 0x00147fa0
		00147fa0: CONDITIONAL_JUMP
		00147b18: FALL_THROUGH

	[00147b18]
		00147a78: FALL_THROUGH
 	00147b18 sourceline 0xf4b
 	00147b20 setfuncargs 0x0
 	00147b28 mov ax,0x6def20
 	00147b34 farcall ax
 	00147b3c lnot ax
 	00147b44 jz 0x00147ba0
		00147ba0: CONDITIONAL_JUMP
		00147b4c: FALL_THROUGH

	[00147b4c]
		00147b18: FALL_THROUGH
 	00147b4c mov ax,0x7b
 	00147b58 farpush ax
 	00147b60 mov ax,0x5f
 	00147b6c farpush ax
 	00147b74 setfuncargs 0x2
 	00147b7c mov ax,0x6e6f20
 	00147b88 farcall ax
 	00147b90 farsubsp 0x2
 	00147b98 jmp 0x00147f90
		00147f90: UNCONDITIONAL_JUMP

	[00147ba0]
		00147b18: CONDITIONAL_JUMP
 	00147ba0 sourceline 0xf4d
 	00147ba8 push op
 	00147bb0 mov ax,0x397
 	00147bbc farpush ax
 	00147bc4 mov ax,0x6
 	00147bd0 farpush ax
 	00147bd8 mov mar,0x3cef20
 	00147be4 mov ax,mar
 	00147bf0 mov op,ax
 	00147bf8 setfuncargs 0x2
 	00147c00 mov ax,0x6eef20
 	00147c0c farcall ax
 	00147c14 farsubsp 0x2
 	00147c1c pop op
 	00147c24 sourceline 0xf4e
 	00147c2c mov ax,0x3
 	00147c38 mov bx,ax
 	00147c44 mov mar,0x3cef20
 	00147c50 mov ax,mar
 	00147c5c push op
 	00147c64 mov op,ax
 	00147c6c farpush bx
 	00147c74 setfuncargs 0x1
 	00147c7c mov ax,0x69ef20
 	00147c88 farcall ax
 	00147c90 farsubsp 0x1
 	00147c98 pop op
 	00147ca0 sourceline 0xf4f
 	00147ca8 push op
 	00147cb0 mov ax,0x2bc0b6
 	00147cbc farpush ax
 	00147cc4 mov mar,0x3cef20
 	00147cd0 mov ax,mar
 	00147cdc mov op,ax
 	00147ce4 setfuncargs 0x1
 	00147cec mov ax,0x6f6f20
 	00147cf8 farcall ax
 	00147d00 farsubsp 0x1
 	00147d08 pop op
 	00147d10 sourceline 0xf50
 	00147d18 mov mar,0x746f20
 	00147d24 mov ax,mar
 	00147d30 push op
 	00147d38 mov op,ax
 	00147d40 setfuncargs 0x0
 	00147d48 mov ax,0xb16f20
 	00147d54 farcall ax
 	00147d5c pop op
 	00147d64 push ax
 	00147d6c mov ax,0x5
 	00147d78 pop bx
 	00147d80 cmpneq bx,ax
 	00147d8c mov ax,bx
 	00147d98 jz 0x00147ed0
		00147ed0: CONDITIONAL_JUMP
		00147da0: FALL_THROUGH

	[00147da0]
		00147ba0: FALL_THROUGH
 	00147da0 sourceline 0xf52
 	00147da8 push op
 	00147db0 mov ax,0x426
 	00147dbc farpush ax
 	00147dc4 mov ax,0x397
 	00147dd0 farpush ax
 	00147dd8 mov ax,0x0
 	00147de4 farpush ax
 	00147dec mov ax,0x3
 	00147df8 farpush ax
 	00147e00 mov ax,0x0
 	00147e0c farpush ax
 	00147e14 mov mar,0x746f20
 	00147e20 mov ax,mar
 	00147e2c mov op,ax
 	00147e34 setfuncargs 0x5
 	00147e3c mov ax,0x536f20
 	00147e48 farcall ax
 	00147e50 farsubsp 0x5
 	00147e58 pop op
 	00147e60 sourceline 0xf53
 	00147e68 push op
 	00147e70 mov ax,0x2bc0cc
 	00147e7c farpush ax
 	00147e84 mov mar,0x746f20
 	00147e90 mov ax,mar
 	00147e9c mov op,ax
 	00147ea4 setfuncargs 0x1
 	00147eac mov ax,0x6f6f20
 	00147eb8 farcall ax
 	00147ec0 farsubsp 0x1
 	00147ec8 pop op
		00147ed0: FALL_THROUGH

	[00147ed0]
		00147ba0: CONDITIONAL_JUMP
		00147da0: FALL_THROUGH
 	00147ed0 sourceline 0xf56
 	00147ed8 push op
 	00147ee0 mov ax,0x427
 	00147eec farpush ax
 	00147ef4 mov ax,0x397
 	00147f00 farpush ax
 	00147f08 mov ax,0x0
 	00147f14 farpush ax
 	00147f1c mov ax,0x3
 	00147f28 farpush ax
 	00147f30 mov ax,0x0
 	00147f3c farpush ax
 	00147f44 mov mar,0x746f20
 	00147f50 mov ax,mar
 	00147f5c mov op,ax
 	00147f64 setfuncargs 0x5
 	00147f6c mov ax,0x536f20
 	00147f78 farcall ax
 	00147f80 farsubsp 0x5
 	00147f88 pop op
		00147f90: FALL_THROUGH

	[00147f90]
		00147b4c: UNCONDITIONAL_JUMP
		00147ed0: FALL_THROUGH
 	00147f90 sourceline 0xf58
 	00147f98 jmp 0x0014871c
		0014871c: UNCONDITIONAL_JUMP

	[00147fa0]
		00147a78: CONDITIONAL_JUMP
 	00147fa0 sourceline 0xf5b
 	00147fa8 push op
 	00147fb0 mov ax,0x1
 	00147fbc farpush ax
 	00147fc4 mov mar,0xb4ef20
 	00147fd0 mov ax,mar
 	00147fdc mov op,ax
 	00147fe4 setfuncargs 0x1
 	00147fec mov ax,0x6d6f20
 	00147ff8 farcall ax
 	00148000 farsubsp 0x1
 	00148008 pop op
 	00148010 jz 0x001480a8
		001480a8: CONDITIONAL_JUMP
		00148018: FALL_THROUGH

	[00148018]
		00147fa0: FALL_THROUGH
 	00148018 push ax
 	00148020 push op
 	00148028 mov ax,0x2
 	00148034 farpush ax
 	0014803c mov mar,0xb4ef20
 	00148048 mov ax,mar
 	00148054 mov op,ax
 	0014805c setfuncargs 0x1
 	00148064 mov ax,0x6d6f20
 	00148070 farcall ax
 	00148078 farsubsp 0x1
 	00148080 pop op
 	00148088 pop bx
 	00148090 land bx,ax
 	0014809c mov ax,bx
		001480a8: FALL_THROUGH

	[001480a8]
		00147fa0: CONDITIONAL_JUMP
		00148018: FALL_THROUGH
 	001480a8 jz 0x00148140
		00148140: CONDITIONAL_JUMP
		001480b0: FALL_THROUGH

	[001480b0]
		001480a8: FALL_THROUGH
 	001480b0 push ax
 	001480b8 push op
 	001480c0 mov ax,0x3
 	001480cc farpush ax
 	001480d4 mov mar,0xb4ef20
 	001480e0 mov ax,mar
 	001480ec mov op,ax
 	001480f4 setfuncargs 0x1
 	001480fc mov ax,0x6d6f20
 	00148108 farcall ax
 	00148110 farsubsp 0x1
 	00148118 pop op
 	00148120 pop bx
 	00148128 land bx,ax
 	00148134 mov ax,bx
		00148140: FALL_THROUGH

	[00148140]
		001480a8: CONDITIONAL_JUMP
		001480b0: FALL_THROUGH
 	00148140 jz 0x001481d8
		001481d8: CONDITIONAL_JUMP
		00148148: FALL_THROUGH

	[00148148]
		00148140: FALL_THROUGH
 	00148148 push ax
 	00148150 push op
 	00148158 mov ax,0x4
 	00148164 farpush ax
 	0014816c mov mar,0xb4ef20
 	00148178 mov ax,mar
 	00148184 mov op,ax
 	0014818c setfuncargs 0x1
 	00148194 mov ax,0x6d6f20
 	001481a0 farcall ax
 	001481a8 farsubsp 0x1
 	001481b0 pop op
 	001481b8 pop bx
 	001481c0 land bx,ax
 	001481cc mov ax,bx
		001481d8: FALL_THROUGH

	[001481d8]
		00148140: CONDITIONAL_JUMP
		00148148: FALL_THROUGH
 	001481d8 jz 0x00148270
		00148270: CONDITIONAL_JUMP
		001481e0: FALL_THROUGH

	[001481e0]
		001481d8: FALL_THROUGH
 	001481e0 push ax
 	001481e8 push op
 	001481f0 mov ax,0x5
 	001481fc farpush ax
 	00148204 mov mar,0xb4ef20
 	00148210 mov ax,mar
 	0014821c mov op,ax
 	00148224 setfuncargs 0x1
 	0014822c mov ax,0x6d6f20
 	00148238 farcall ax
 	00148240 farsubsp 0x1
 	00148248 pop op
 	00148250 pop bx
 	00148258 land bx,ax
 	00148264 mov ax,bx
		00148270: FALL_THROUGH

	[00148270]
		001481d8: CONDITIONAL_JUMP
		001481e0: FALL_THROUGH
 	00148270 jz 0x00148308
		00148308: CONDITIONAL_JUMP
		00148278: FALL_THROUGH

	[00148278]
		00148270: FALL_THROUGH
 	00148278 push ax
 	00148280 push op
 	00148288 mov ax,0x6
 	00148294 farpush ax
 	0014829c mov mar,0xb4ef20
 	001482a8 mov ax,mar
 	001482b4 mov op,ax
 	001482bc setfuncargs 0x1
 	001482c4 mov ax,0x6d6f20
 	001482d0 farcall ax
 	001482d8 farsubsp 0x1
 	001482e0 pop op
 	001482e8 pop bx
 	001482f0 land bx,ax
 	001482fc mov ax,bx
		00148308: FALL_THROUGH

	[00148308]
		00148270: CONDITIONAL_JUMP
		00148278: FALL_THROUGH
 	00148308 jz 0x001484e0
		001484e0: CONDITIONAL_JUMP
		00148310: FALL_THROUGH

	[00148310]
		00148308: FALL_THROUGH
 	00148310 sourceline 0xf5e
 	00148318 push op
 	00148320 mov ax,0x397
 	0014832c farpush ax
 	00148334 mov ax,0x98
 	00148340 farpush ax
 	00148348 mov ax,0x33
 	00148354 farpush ax
 	0014835c mov mar,0x3cef20
 	00148368 mov ax,mar
 	00148374 mov op,ax
 	0014837c setfuncargs 0x3
 	00148384 mov ax,0x726f20
 	00148390 farcall ax
 	00148398 farsubsp 0x3
 	001483a0 pop op
 	001483a8 sourceline 0xf5f
 	001483b0 mov ax,0x1
 	001483bc mov bx,ax
 	001483c8 mov mar,0x3cef20
 	001483d4 mov ax,mar
 	001483e0 push op
 	001483e8 mov op,ax
 	001483f0 farpush bx
 	001483f8 setfuncargs 0x1
 	00148400 mov ax,0x69ef20
 	0014840c farcall ax
 	00148414 farsubsp 0x1
 	0014841c pop op
 	00148424 sourceline 0xf60
 	0014842c push op
 	00148434 mov ax,0x2c798e
 	00148440 farpush ax
 	00148448 mov ax,0x138
 	00148454 farpush ax
 	0014845c mov ax,0x92
 	00148468 farpush ax
 	00148470 mov ax,0x0
 	0014847c farpush ax
 	00148484 mov mar,0x3cef20
 	00148490 mov ax,mar
 	0014849c mov op,ax
 	001484a4 setfuncargs 0x4
 	001484ac mov ax,0x6aef20
 	001484b8 farcall ax
 	001484c0 farsubsp 0x4
 	001484c8 pop op
 	001484d0 sourceline 0xf61
 	001484d8 jmp 0x0014871c
		0014871c: UNCONDITIONAL_JUMP

	[001484e0]
		00148308: CONDITIONAL_JUMP
 	001484e0 sourceline 0xf64
 	001484e8 mov ax,0x1
 	001484f4 mov mar,0xb56f20
 	00148500 memwrite4 ax
 	00148508 sourceline 0xf65
 	00148510 mov ax,0x3
 	0014851c mov bx,ax
 	00148528 mov mar,0x3cef20
 	00148534 mov ax,mar
 	00148540 push op
 	00148548 mov op,ax
 	00148550 farpush bx
 	00148558 setfuncargs 0x1
 	00148560 mov ax,0x69ef20
 	0014856c farcall ax
 	00148574 farsubsp 0x1
 	0014857c pop op
 	00148584 sourceline 0xf66
 	0014858c push op
 	00148594 mov ax,0x2bc11b
 	001485a0 farpush ax
 	001485a8 mov mar,0x3cef20
 	001485b4 mov ax,mar
 	001485c0 mov op,ax
 	001485c8 setfuncargs 0x1
 	001485d0 mov ax,0x6f6f20
 	001485dc farcall ax
 	001485e4 farsubsp 0x1
 	001485ec pop op
 	001485f4 sourceline 0xf67
 	001485fc push op
 	00148604 mov ax,0x2bc14a
 	00148610 farpush ax
 	00148618 mov mar,0x746f20
 	00148624 mov ax,mar
 	00148630 mov op,ax
 	00148638 setfuncargs 0x1
 	00148640 mov ax,0x6f6f20
 	0014864c farcall ax
 	00148654 farsubsp 0x1
 	0014865c pop op
 	00148664 sourceline 0xf68
 	0014866c push op
 	00148674 mov mar,0xb4ef20
 	00148680 mov ax,mar
 	0014868c mov op,ax
 	00148694 setfuncargs 0x0
 	0014869c mov ax,0x71ef20
 	001486a8 farcall ax
 	001486b0 pop op
 	001486b8 sourceline 0xf69
 	001486c0 mov ax,0x1
 	001486cc mov bx,ax
 	001486d8 mov mar,0x336f20
 	001486e4 mov ax,mar
 	001486f0 farpush bx
 	001486f8 setfuncargs 0x1
 	00148700 mov ax,0x43ef20
 	0014870c farcall ax
 	00148714 farsubsp 0x1
		0014871c: FALL_THROUGH

	[0014871c]
		00147f90: UNCONDITIONAL_JUMP
		00148310: UNCONDITIONAL_JUMP
		001484e0: FALL_THROUGH
 	0014871c sourceline 0xf6c
 	00148724 mov ax,0x0
 	00148730 ret

cPoliceMan_Interact$0:
	[00148734]
 	00148734 sourceline 0xf71
 	0014873c thisaddr
 	00148744 sourceline 0xf72
*	0014874c mov mar,0xb5ef20
 	00148758 memread4 ax
 	00148760 lnot ax
 	00148768 jz 0x00149074
		00149074: CONDITIONAL_JUMP
		00148770: FALL_THROUGH

	[00148770]
		00148734: FALL_THROUGH
 	00148770 sourceline 0xf74
 	00148778 mov mar,0xb66f20
 	00148784 memread4 ax
 	0014878c lnot ax
 	00148794 jz 0x00148ea4
		00148ea4: CONDITIONAL_JUMP
		0014879c: FALL_THROUGH

	[0014879c]
		00148770: FALL_THROUGH
 	0014879c sourceline 0xf76
 	001487a4 setfuncargs 0x0
 	001487ac mov ax,0x6def20
 	001487b8 farcall ax
 	001487c0 lnot ax
 	001487c8 jz 0x00148824
		00148824: CONDITIONAL_JUMP
		001487d0: FALL_THROUGH

	[001487d0]
		0014879c: FALL_THROUGH
 	001487d0 mov ax,0x81
 	001487dc farpush ax
 	001487e4 mov ax,0x79
 	001487f0 farpush ax
 	001487f8 setfuncargs 0x2
 	00148800 mov ax,0x6e6f20
 	0014880c farcall ax
 	00148814 farsubsp 0x2
 	0014881c jmp 0x00148e94
		00148e94: UNCONDITIONAL_JUMP

	[00148824]
		0014879c: CONDITIONAL_JUMP
 	00148824 sourceline 0xf78
 	0014882c mov ax,0x0
 	00148838 mov bx,ax
 	00148844 mov mar,0x336f20
 	00148850 mov ax,mar
 	0014885c farpush bx
 	00148864 setfuncargs 0x1
 	0014886c mov ax,0x43ef20
 	00148878 farcall ax
 	00148880 farsubsp 0x1
 	00148888 sourceline 0xf79
 	00148890 push op
 	00148898 mov ax,0x397
 	001488a4 farpush ax
 	001488ac mov ax,0x5
 	001488b8 farpush ax
 	001488c0 mov mar,0x3cef20
 	001488cc mov ax,mar
 	001488d8 mov op,ax
 	001488e0 setfuncargs 0x2
 	001488e8 mov ax,0x6eef20
 	001488f4 farcall ax
 	001488fc farsubsp 0x2
 	00148904 pop op
 	0014890c sourceline 0xf7a
 	00148914 mov ax,0xa
 	00148920 farpush ax
 	00148928 setfuncargs 0x1
 	00148930 mov ax,0x426f20
 	0014893c farcall ax
 	00148944 farsubsp 0x1
 	0014894c sourceline 0xf7b
 	00148954 mov ax,0x3
 	00148960 mov bx,ax
 	0014896c mov mar,0x3cef20
 	00148978 mov ax,mar
 	00148984 push op
 	0014898c mov op,ax
 	00148994 farpush bx
 	0014899c setfuncargs 0x1
 	001489a4 mov ax,0x69ef20
 	001489b0 farcall ax
 	001489b8 farsubsp 0x1
 	001489c0 pop op
 	001489c8 sourceline 0xf7c
 	001489d0 push op
 	001489d8 mov ax,0x2bc15c
 	001489e4 farpush ax
 	001489ec mov mar,0x3cef20
 	001489f8 mov ax,mar
 	00148a04 mov op,ax
 	00148a0c setfuncargs 0x1
 	00148a14 mov ax,0x6f6f20
 	00148a20 farcall ax
 	00148a28 farsubsp 0x1
 	00148a30 pop op
 	00148a38 sourceline 0xf7d
 	00148a40 push op
 	00148a48 mov ax,0x2bc171
 	00148a54 farpush ax
 	00148a5c mov mar,0xb6ef20
 	00148a68 mov ax,mar
 	00148a74 mov op,ax
 	00148a7c setfuncargs 0x1
 	00148a84 mov ax,0x6f6f20
 	00148a90 farcall ax
 	00148a98 farsubsp 0x1
 	00148aa0 pop op
 	00148aa8 sourceline 0xf7e
 	00148ab0 push op
 	00148ab8 mov ax,0x2bc199
 	00148ac4 farpush ax
 	00148acc mov mar,0x3cef20
 	00148ad8 mov ax,mar
 	00148ae4 mov op,ax
 	00148aec setfuncargs 0x1
 	00148af4 mov ax,0x6f6f20
 	00148b00 farcall ax
 	00148b08 farsubsp 0x1
 	00148b10 pop op
 	00148b18 sourceline 0xf7f
 	00148b20 push op
 	00148b28 mov ax,0x2bc1c2
 	00148b34 farpush ax
 	00148b3c mov mar,0xb6ef20
 	00148b48 mov ax,mar
 	00148b54 mov op,ax
 	00148b5c setfuncargs 0x1
 	00148b64 mov ax,0x6f6f20
 	00148b70 farcall ax
 	00148b78 farsubsp 0x1
 	00148b80 pop op
 	00148b88 sourceline 0xf80
 	00148b90 push op
 	00148b98 mov ax,0x2bc1d2
 	00148ba4 farpush ax
 	00148bac mov mar,0x3cef20
 	00148bb8 mov ax,mar
 	00148bc4 mov op,ax
 	00148bcc setfuncargs 0x1
 	00148bd4 mov ax,0x6f6f20
 	00148be0 farcall ax
 	00148be8 farsubsp 0x1
 	00148bf0 pop op
 	00148bf8 sourceline 0xf81
 	00148c00 push op
 	00148c08 mov ax,0x2bc1ee
 	00148c14 farpush ax
 	00148c1c mov mar,0xb6ef20
 	00148c28 mov ax,mar
 	00148c34 mov op,ax
 	00148c3c setfuncargs 0x1
 	00148c44 mov ax,0x6f6f20
 	00148c50 farcall ax
 	00148c58 farsubsp 0x1
 	00148c60 pop op
 	00148c68 sourceline 0xf82
 	00148c70 push op
 	00148c78 mov ax,0x2bc235
 	00148c84 farpush ax
 	00148c8c mov mar,0x3cef20
 	00148c98 mov ax,mar
 	00148ca4 mov op,ax
 	00148cac setfuncargs 0x1
 	00148cb4 mov ax,0x6f6f20
 	00148cc0 farcall ax
 	00148cc8 farsubsp 0x1
 	00148cd0 pop op
 	00148cd8 sourceline 0xf83
 	00148ce0 push op
 	00148ce8 mov ax,0x2bc261
 	00148cf4 farpush ax
 	00148cfc mov mar,0xb6ef20
 	00148d08 mov ax,mar
 	00148d14 mov op,ax
 	00148d1c setfuncargs 0x1
 	00148d24 mov ax,0x6f6f20
 	00148d30 farcall ax
 	00148d38 farsubsp 0x1
 	00148d40 pop op
 	00148d48 sourceline 0xf84
 	00148d50 push op
 	00148d58 mov ax,0x2bc2f3
 	00148d64 farpush ax
 	00148d6c mov mar,0x3cef20
 	00148d78 mov ax,mar
 	00148d84 mov op,ax
 	00148d8c setfuncargs 0x1
 	00148d94 mov ax,0x6f6f20
 	00148da0 farcall ax
 	00148da8 farsubsp 0x1
 	00148db0 pop op
 	00148db8 sourceline 0xf85
 	00148dc0 mov ax,0x1
 	00148dcc mov mar,0xa86f20
 	00148dd8 memwrite4 ax
 	00148de0 sourceline 0xf86
 	00148de8 mov ax,0x1
 	00148df4 mov mar,0xa96f20
 	00148e00 memwrite4 ax
 	00148e08 sourceline 0xf87
 	00148e10 mov ax,0x1
 	00148e1c mov bx,ax
 	00148e28 mov mar,0x336f20
 	00148e34 mov ax,mar
 	00148e40 farpush bx
 	00148e48 setfuncargs 0x1
 	00148e50 mov ax,0x43ef20
 	00148e5c farcall ax
 	00148e64 farsubsp 0x1
 	00148e6c sourceline 0xf88
 	00148e74 mov ax,0x1
 	00148e80 mov mar,0xb66f20
 	00148e8c memwrite4 ax
		00148e94: FALL_THROUGH

	[00148e94]
		001487d0: UNCONDITIONAL_JUMP
		00148824: FALL_THROUGH
 	00148e94 sourceline 0xf8a
 	00148e9c jmp 0x00149064
		00149064: UNCONDITIONAL_JUMP

	[00148ea4]
		00148770: CONDITIONAL_JUMP
 	00148ea4 sourceline 0xf8d
 	00148eac push op
 	00148eb4 mov ax,0x397
 	00148ec0 farpush ax
 	00148ec8 mov ax,0x4a
 	00148ed4 farpush ax
 	00148edc mov ax,0x9e
 	00148ee8 farpush ax
 	00148ef0 mov mar,0x3cef20
 	00148efc mov ax,mar
 	00148f08 mov op,ax
 	00148f10 setfuncargs 0x3
 	00148f18 mov ax,0x726f20
 	00148f24 farcall ax
 	00148f2c farsubsp 0x3
 	00148f34 pop op
 	00148f3c sourceline 0xf8e
 	00148f44 mov ax,0x1
 	00148f50 mov bx,ax
 	00148f5c mov mar,0x3cef20
 	00148f68 mov ax,mar
 	00148f74 push op
 	00148f7c mov op,ax
 	00148f84 farpush bx
 	00148f8c setfuncargs 0x1
 	00148f94 mov ax,0x69ef20
 	00148fa0 farcall ax
 	00148fa8 farsubsp 0x1
 	00148fb0 pop op
 	00148fb8 sourceline 0xf8f
 	00148fc0 push op
 	00148fc8 mov ax,0x2bc2ff
 	00148fd4 farpush ax
 	00148fdc mov ax,0x138
 	00148fe8 farpush ax
 	00148ff0 mov ax,0x92
 	00148ffc farpush ax
 	00149004 mov ax,0x0
 	00149010 farpush ax
 	00149018 mov mar,0x3cef20
 	00149024 mov ax,mar
 	00149030 mov op,ax
 	00149038 setfuncargs 0x4
 	00149040 mov ax,0x6aef20
 	0014904c farcall ax
 	00149054 farsubsp 0x4
 	0014905c pop op
		00149064: FALL_THROUGH

	[00149064]
		00148e94: UNCONDITIONAL_JUMP
		00148ea4: FALL_THROUGH
 	00149064 sourceline 0xf91
 	0014906c jmp 0x00149234
		00149234: UNCONDITIONAL_JUMP

	[00149074]
		00148734: CONDITIONAL_JUMP
 	00149074 sourceline 0xf94
 	0014907c push op
 	00149084 mov ax,0x397
 	00149090 farpush ax
 	00149098 mov ax,0x4a
 	001490a4 farpush ax
 	001490ac mov ax,0x9e
 	001490b8 farpush ax
 	001490c0 mov mar,0x3cef20
 	001490cc mov ax,mar
 	001490d8 mov op,ax
 	001490e0 setfuncargs 0x3
 	001490e8 mov ax,0x726f20
 	001490f4 farcall ax
 	001490fc farsubsp 0x3
 	00149104 pop op
 	0014910c sourceline 0xf95
 	00149114 mov ax,0x1
 	00149120 mov bx,ax
 	0014912c mov mar,0x3cef20
 	00149138 mov ax,mar
 	00149144 push op
 	0014914c mov op,ax
 	00149154 farpush bx
 	0014915c setfuncargs 0x1
 	00149164 mov ax,0x69ef20
 	00149170 farcall ax
 	00149178 farsubsp 0x1
 	00149180 pop op
 	00149188 sourceline 0xf96
 	00149190 push op
 	00149198 mov ax,0x2bc335
 	001491a4 farpush ax
 	001491ac mov ax,0x138
 	001491b8 farpush ax
 	001491c0 mov ax,0x92
 	001491cc farpush ax
 	001491d4 mov ax,0x0
 	001491e0 farpush ax
 	001491e8 mov mar,0x3cef20
 	001491f4 mov ax,mar
 	00149200 mov op,ax
 	00149208 setfuncargs 0x4
 	00149210 mov ax,0x6aef20
 	0014921c farcall ax
 	00149224 farsubsp 0x4
 	0014922c pop op
		00149234: FALL_THROUGH

	[00149234]
		00149064: UNCONDITIONAL_JUMP
		00149074: FALL_THROUGH
 	00149234 sourceline 0xf98
 	0014923c mov ax,0x0
 	00149248 ret

cPatricia_Interact$0:
	[0014924c]
 	0014924c sourceline 0xf9e
 	00149254 thisaddr
 	0014925c sourceline 0xf9f
 	00149264 setfuncargs 0x0
 	0014926c mov ax,0x6def20
 	00149278 farcall ax
 	00149280 lnot ax
 	00149288 jz 0x001492e4
		001492e4: CONDITIONAL_JUMP
		00149290: FALL_THROUGH

	[00149290]
		0014924c: FALL_THROUGH
 	00149290 mov ax,0x88
 	0014929c farpush ax
 	001492a4 mov ax,0x62
 	001492b0 farpush ax
 	001492b8 setfuncargs 0x2
 	001492c0 mov ax,0x6e6f20
 	001492cc farcall ax
 	001492d4 farsubsp 0x2
 	001492dc jmp 0x0014cc48
		0014cc48: UNCONDITIONAL_JUMP

	[001492e4]
		0014924c: CONDITIONAL_JUMP
 	001492e4 sourceline 0xfa2
 	001492ec push op
 	001492f4 mov ax,0x397
 	00149300 farpush ax
 	00149308 mov ax,0x1
 	00149314 farpush ax
*	0014931c mov mar,0x3cef20
 	00149328 mov ax,mar
 	00149334 mov op,ax
 	0014933c setfuncargs 0x2
 	00149344 mov ax,0x6eef20
 	00149350 farcall ax
 	00149358 farsubsp 0x2
 	00149360 pop op
 	00149368 sourceline 0xfa3
 	00149370 push op
 	00149378 mov ax,0x69
 	00149384 farpush ax
 	0014938c mov mar,0x3cef20
 	00149398 mov ax,mar
 	001493a4 mov op,ax
 	001493ac setfuncargs 0x1
 	001493b4 mov ax,0x51ef20
 	001493c0 farcall ax
 	001493c8 farsubsp 0x1
 	001493d0 pop op
 	001493d8 sourceline 0xfa4
 	001493e0 mov ax,0x3
 	001493ec mov bx,ax
 	001493f8 mov mar,0x3cef20
 	00149404 mov ax,mar
 	00149410 push op
 	00149418 mov op,ax
 	00149420 farpush bx
 	00149428 setfuncargs 0x1
 	00149430 mov ax,0x69ef20
 	0014943c farcall ax
 	00149444 farsubsp 0x1
 	0014944c pop op
 	00149454 sourceline 0xfa5
 	0014945c push op
 	00149464 mov ax,0x2bc359
 	00149470 farpush ax
 	00149478 mov mar,0x3cef20
 	00149484 mov ax,mar
 	00149490 mov op,ax
 	00149498 setfuncargs 0x1
 	001494a0 mov ax,0x6f6f20
 	001494ac farcall ax
 	001494b4 farsubsp 0x1
 	001494bc pop op
 	001494c4 sourceline 0xfa6
 	001494cc mov mar,0xb76f20
 	001494d8 mov ax,mar
 	001494e4 push op
 	001494ec mov op,ax
 	001494f4 setfuncargs 0x0
 	001494fc mov ax,0xb16f20
 	00149508 farcall ax
 	00149510 pop op
 	00149518 push ax
 	00149520 mov ax,0x0
 	0014952c pop bx
 	00149534 cmpneq bx,ax
 	00149540 mov ax,bx
 	0014954c jz 0x001495fc
		001495fc: CONDITIONAL_JUMP
		00149554: FALL_THROUGH

	[00149554]
		001492e4: FALL_THROUGH
 	00149554 push ax
 	0014955c mov mar,0xb76f20
 	00149568 mov ax,mar
 	00149574 push op
 	0014957c mov op,ax
 	00149584 setfuncargs 0x0
 	0014958c mov ax,0xb16f20
 	00149598 farcall ax
 	001495a0 pop op
 	001495a8 push ax
 	001495b0 mov ax,0x33
 	001495bc pop bx
 	001495c4 cmpneq bx,ax
 	001495d0 mov ax,bx
 	001495dc pop bx
 	001495e4 land bx,ax
 	001495f0 mov ax,bx
		001495fc: FALL_THROUGH

	[001495fc]
		001492e4: CONDITIONAL_JUMP
		00149554: FALL_THROUGH
 	001495fc jz 0x0014bf5c
		0014bf5c: CONDITIONAL_JUMP
		00149604: FALL_THROUGH

	[00149604]
		001495fc: FALL_THROUGH
 	00149604 sourceline 0xfa8
 	0014960c push op
 	00149614 mov ax,0x6a
 	00149620 farpush ax
 	00149628 mov mar,0xb76f20
 	00149634 mov ax,mar
 	00149640 mov op,ax
 	00149648 setfuncargs 0x1
 	00149650 mov ax,0x51ef20
 	0014965c farcall ax
 	00149664 farsubsp 0x1
 	0014966c pop op
 	00149674 sourceline 0xfa9
 	0014967c mov mar,0xb7ef20
 	00149688 memread4 ax
 	00149690 mov bx,ax
 	0014969c mov mar,0xb76f20
 	001496a8 mov ax,mar
 	001496b4 push op
 	001496bc mov op,ax
 	001496c4 farpush bx
 	001496cc setfuncargs 0x1
 	001496d4 mov ax,0x52ef20
 	001496e0 farcall ax
 	001496e8 farsubsp 0x1
 	001496f0 pop op
 	001496f8 sourceline 0xfaa
 	00149700 mov mar,0xb7ef20
 	0014970c memread4 ax
 	00149714 push ax
 	0014971c mov ax,0x1a
 	00149728 pop bx
 	00149730 cmple bx,ax
 	0014973c mov ax,bx
 	00149748 jz 0x00149828
		00149828: CONDITIONAL_JUMP
		00149750: FALL_THROUGH

	[00149750]
		00149604: FALL_THROUGH
 	00149750 sourceline 0xfac
 	00149758 push op
 	00149760 mov ax,0x426
 	0014976c farpush ax
 	00149774 mov ax,0x397
 	00149780 farpush ax
 	00149788 mov ax,0x0
 	00149794 farpush ax
 	0014979c mov ax,0x3
 	001497a8 farpush ax
 	001497b0 mov mar,0xb7ef20
 	001497bc memread4 ax
 	001497c4 farpush ax
 	001497cc mov mar,0xb76f20
 	001497d8 mov ax,mar
 	001497e4 mov op,ax
 	001497ec setfuncargs 0x5
 	001497f4 mov ax,0x536f20
 	00149800 farcall ax
 	00149808 farsubsp 0x5
 	00149810 pop op
 	00149818 sourceline 0xfad
 	00149820 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[00149828]
		00149604: CONDITIONAL_JUMP
 	00149828 sourceline 0xfb0
 	00149830 mov mar,0xb7ef20
 	0014983c memread4 ax
 	00149844 push ax
 	0014984c mov ax,0x1b
 	00149858 pop bx
 	00149860 cmpeq bx,ax
 	0014986c mov ax,bx
 	00149878 jz 0x00149940
		00149940: CONDITIONAL_JUMP
		00149880: FALL_THROUGH

	[00149880]
		00149828: FALL_THROUGH
 	00149880 push op
 	00149888 mov ax,0x426
 	00149894 farpush ax
 	0014989c mov ax,0x397
 	001498a8 farpush ax
 	001498b0 mov ax,0x0
 	001498bc farpush ax
 	001498c4 mov ax,0x3
 	001498d0 farpush ax
 	001498d8 mov ax,0x18
 	001498e4 farpush ax
 	001498ec mov mar,0xb76f20
 	001498f8 mov ax,mar
 	00149904 mov op,ax
 	0014990c setfuncargs 0x5
 	00149914 mov ax,0x536f20
 	00149920 farcall ax
 	00149928 farsubsp 0x5
 	00149930 pop op
 	00149938 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[00149940]
		00149828: CONDITIONAL_JUMP
 	00149940 sourceline 0xfb1
 	00149948 mov mar,0xb7ef20
 	00149954 memread4 ax
 	0014995c push ax
 	00149964 mov ax,0x1c
 	00149970 pop bx
 	00149978 cmpeq bx,ax
 	00149984 mov ax,bx
 	00149990 jz 0x00149a58
		00149a58: CONDITIONAL_JUMP
		00149998: FALL_THROUGH

	[00149998]
		00149940: FALL_THROUGH
 	00149998 push op
 	001499a0 mov ax,0x426
 	001499ac farpush ax
 	001499b4 mov ax,0x397
 	001499c0 farpush ax
 	001499c8 mov ax,0x0
 	001499d4 farpush ax
 	001499dc mov ax,0x3
 	001499e8 farpush ax
 	001499f0 mov ax,0x17
 	001499fc farpush ax
 	00149a04 mov mar,0xb76f20
 	00149a10 mov ax,mar
 	00149a1c mov op,ax
 	00149a24 setfuncargs 0x5
 	00149a2c mov ax,0x536f20
 	00149a38 farcall ax
 	00149a40 farsubsp 0x5
 	00149a48 pop op
 	00149a50 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[00149a58]
		00149940: CONDITIONAL_JUMP
 	00149a58 sourceline 0xfb2
 	00149a60 mov mar,0xb7ef20
 	00149a6c memread4 ax
 	00149a74 push ax
 	00149a7c mov ax,0x1d
 	00149a88 pop bx
 	00149a90 cmpeq bx,ax
 	00149a9c mov ax,bx
 	00149aa8 jz 0x00149b70
		00149b70: CONDITIONAL_JUMP
		00149ab0: FALL_THROUGH

	[00149ab0]
		00149a58: FALL_THROUGH
 	00149ab0 push op
 	00149ab8 mov ax,0x426
 	00149ac4 farpush ax
 	00149acc mov ax,0x397
 	00149ad8 farpush ax
 	00149ae0 mov ax,0x0
 	00149aec farpush ax
 	00149af4 mov ax,0x3
 	00149b00 farpush ax
 	00149b08 mov ax,0x16
 	00149b14 farpush ax
 	00149b1c mov mar,0xb76f20
 	00149b28 mov ax,mar
 	00149b34 mov op,ax
 	00149b3c setfuncargs 0x5
 	00149b44 mov ax,0x536f20
 	00149b50 farcall ax
 	00149b58 farsubsp 0x5
 	00149b60 pop op
 	00149b68 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[00149b70]
		00149a58: CONDITIONAL_JUMP
 	00149b70 sourceline 0xfb3
 	00149b78 mov mar,0xb7ef20
 	00149b84 memread4 ax
 	00149b8c push ax
 	00149b94 mov ax,0x1e
 	00149ba0 pop bx
 	00149ba8 cmpeq bx,ax
 	00149bb4 mov ax,bx
 	00149bc0 jz 0x00149c88
		00149c88: CONDITIONAL_JUMP
		00149bc8: FALL_THROUGH

	[00149bc8]
		00149b70: FALL_THROUGH
 	00149bc8 push op
 	00149bd0 mov ax,0x426
 	00149bdc farpush ax
 	00149be4 mov ax,0x397
 	00149bf0 farpush ax
 	00149bf8 mov ax,0x0
 	00149c04 farpush ax
 	00149c0c mov ax,0x3
 	00149c18 farpush ax
 	00149c20 mov ax,0x15
 	00149c2c farpush ax
 	00149c34 mov mar,0xb76f20
 	00149c40 mov ax,mar
 	00149c4c mov op,ax
 	00149c54 setfuncargs 0x5
 	00149c5c mov ax,0x536f20
 	00149c68 farcall ax
 	00149c70 farsubsp 0x5
 	00149c78 pop op
 	00149c80 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[00149c88]
		00149b70: CONDITIONAL_JUMP
 	00149c88 sourceline 0xfb4
 	00149c90 mov mar,0xb7ef20
 	00149c9c memread4 ax
 	00149ca4 push ax
 	00149cac mov ax,0x1f
 	00149cb8 pop bx
 	00149cc0 cmpeq bx,ax
 	00149ccc mov ax,bx
 	00149cd8 jz 0x00149da0
		00149da0: CONDITIONAL_JUMP
		00149ce0: FALL_THROUGH

	[00149ce0]
		00149c88: FALL_THROUGH
 	00149ce0 push op
 	00149ce8 mov ax,0x426
 	00149cf4 farpush ax
 	00149cfc mov ax,0x397
 	00149d08 farpush ax
 	00149d10 mov ax,0x0
 	00149d1c farpush ax
 	00149d24 mov ax,0x3
 	00149d30 farpush ax
 	00149d38 mov ax,0x14
 	00149d44 farpush ax
 	00149d4c mov mar,0xb76f20
 	00149d58 mov ax,mar
 	00149d64 mov op,ax
 	00149d6c setfuncargs 0x5
 	00149d74 mov ax,0x536f20
 	00149d80 farcall ax
 	00149d88 farsubsp 0x5
 	00149d90 pop op
 	00149d98 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[00149da0]
		00149c88: CONDITIONAL_JUMP
 	00149da0 sourceline 0xfb5
 	00149da8 mov mar,0xb7ef20
 	00149db4 memread4 ax
 	00149dbc push ax
 	00149dc4 mov ax,0x20
 	00149dd0 pop bx
 	00149dd8 cmpeq bx,ax
 	00149de4 mov ax,bx
 	00149df0 jz 0x00149eb8
		00149eb8: CONDITIONAL_JUMP
		00149df8: FALL_THROUGH

	[00149df8]
		00149da0: FALL_THROUGH
 	00149df8 push op
 	00149e00 mov ax,0x426
 	00149e0c farpush ax
 	00149e14 mov ax,0x397
 	00149e20 farpush ax
 	00149e28 mov ax,0x0
 	00149e34 farpush ax
 	00149e3c mov ax,0x3
 	00149e48 farpush ax
 	00149e50 mov ax,0x13
 	00149e5c farpush ax
 	00149e64 mov mar,0xb76f20
 	00149e70 mov ax,mar
 	00149e7c mov op,ax
 	00149e84 setfuncargs 0x5
 	00149e8c mov ax,0x536f20
 	00149e98 farcall ax
 	00149ea0 farsubsp 0x5
 	00149ea8 pop op
 	00149eb0 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[00149eb8]
		00149da0: CONDITIONAL_JUMP
 	00149eb8 sourceline 0xfb6
 	00149ec0 mov mar,0xb7ef20
 	00149ecc memread4 ax
 	00149ed4 push ax
 	00149edc mov ax,0x21
 	00149ee8 pop bx
 	00149ef0 cmpeq bx,ax
 	00149efc mov ax,bx
 	00149f08 jz 0x00149fd0
		00149fd0: CONDITIONAL_JUMP
		00149f10: FALL_THROUGH

	[00149f10]
		00149eb8: FALL_THROUGH
 	00149f10 push op
 	00149f18 mov ax,0x426
 	00149f24 farpush ax
 	00149f2c mov ax,0x397
 	00149f38 farpush ax
 	00149f40 mov ax,0x0
 	00149f4c farpush ax
 	00149f54 mov ax,0x3
 	00149f60 farpush ax
 	00149f68 mov ax,0x12
 	00149f74 farpush ax
 	00149f7c mov mar,0xb76f20
 	00149f88 mov ax,mar
 	00149f94 mov op,ax
 	00149f9c setfuncargs 0x5
 	00149fa4 mov ax,0x536f20
 	00149fb0 farcall ax
 	00149fb8 farsubsp 0x5
 	00149fc0 pop op
 	00149fc8 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[00149fd0]
		00149eb8: CONDITIONAL_JUMP
 	00149fd0 sourceline 0xfb7
 	00149fd8 mov mar,0xb7ef20
 	00149fe4 memread4 ax
 	00149fec push ax
 	00149ff4 mov ax,0x22
 	0014a000 pop bx
 	0014a008 cmpeq bx,ax
 	0014a014 mov ax,bx
 	0014a020 jz 0x0014a0e8
		0014a0e8: CONDITIONAL_JUMP
		0014a028: FALL_THROUGH

	[0014a028]
		00149fd0: FALL_THROUGH
 	0014a028 push op
 	0014a030 mov ax,0x426
 	0014a03c farpush ax
 	0014a044 mov ax,0x397
 	0014a050 farpush ax
 	0014a058 mov ax,0x0
 	0014a064 farpush ax
 	0014a06c mov ax,0x3
 	0014a078 farpush ax
 	0014a080 mov ax,0x11
 	0014a08c farpush ax
 	0014a094 mov mar,0xb76f20
 	0014a0a0 mov ax,mar
 	0014a0ac mov op,ax
 	0014a0b4 setfuncargs 0x5
 	0014a0bc mov ax,0x536f20
 	0014a0c8 farcall ax
 	0014a0d0 farsubsp 0x5
 	0014a0d8 pop op
 	0014a0e0 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014a0e8]
		00149fd0: CONDITIONAL_JUMP
 	0014a0e8 sourceline 0xfb8
 	0014a0f0 mov mar,0xb7ef20
 	0014a0fc memread4 ax
 	0014a104 push ax
 	0014a10c mov ax,0x23
 	0014a118 pop bx
 	0014a120 cmpeq bx,ax
 	0014a12c mov ax,bx
 	0014a138 jz 0x0014a200
		0014a200: CONDITIONAL_JUMP
		0014a140: FALL_THROUGH

	[0014a140]
		0014a0e8: FALL_THROUGH
 	0014a140 push op
 	0014a148 mov ax,0x426
 	0014a154 farpush ax
 	0014a15c mov ax,0x397
 	0014a168 farpush ax
 	0014a170 mov ax,0x0
 	0014a17c farpush ax
 	0014a184 mov ax,0x3
 	0014a190 farpush ax
 	0014a198 mov ax,0x10
 	0014a1a4 farpush ax
 	0014a1ac mov mar,0xb76f20
 	0014a1b8 mov ax,mar
 	0014a1c4 mov op,ax
 	0014a1cc setfuncargs 0x5
 	0014a1d4 mov ax,0x536f20
 	0014a1e0 farcall ax
 	0014a1e8 farsubsp 0x5
 	0014a1f0 pop op
 	0014a1f8 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014a200]
		0014a0e8: CONDITIONAL_JUMP
 	0014a200 sourceline 0xfb9
 	0014a208 mov mar,0xb7ef20
 	0014a214 memread4 ax
 	0014a21c push ax
 	0014a224 mov ax,0x24
 	0014a230 pop bx
 	0014a238 cmpeq bx,ax
 	0014a244 mov ax,bx
 	0014a250 jz 0x0014a318
		0014a318: CONDITIONAL_JUMP
		0014a258: FALL_THROUGH

	[0014a258]
		0014a200: FALL_THROUGH
 	0014a258 push op
 	0014a260 mov ax,0x426
 	0014a26c farpush ax
 	0014a274 mov ax,0x397
 	0014a280 farpush ax
 	0014a288 mov ax,0x0
 	0014a294 farpush ax
 	0014a29c mov ax,0x3
 	0014a2a8 farpush ax
 	0014a2b0 mov ax,0xf
 	0014a2bc farpush ax
 	0014a2c4 mov mar,0xb76f20
 	0014a2d0 mov ax,mar
 	0014a2dc mov op,ax
 	0014a2e4 setfuncargs 0x5
 	0014a2ec mov ax,0x536f20
 	0014a2f8 farcall ax
 	0014a300 farsubsp 0x5
 	0014a308 pop op
 	0014a310 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014a318]
		0014a200: CONDITIONAL_JUMP
 	0014a318 sourceline 0xfba
 	0014a320 mov mar,0xb7ef20
 	0014a32c memread4 ax
 	0014a334 push ax
 	0014a33c mov ax,0x25
 	0014a348 pop bx
 	0014a350 cmpeq bx,ax
 	0014a35c mov ax,bx
 	0014a368 jz 0x0014a430
		0014a430: CONDITIONAL_JUMP
		0014a370: FALL_THROUGH

	[0014a370]
		0014a318: FALL_THROUGH
 	0014a370 push op
 	0014a378 mov ax,0x426
 	0014a384 farpush ax
 	0014a38c mov ax,0x397
 	0014a398 farpush ax
 	0014a3a0 mov ax,0x0
 	0014a3ac farpush ax
 	0014a3b4 mov ax,0x3
 	0014a3c0 farpush ax
 	0014a3c8 mov ax,0xe
 	0014a3d4 farpush ax
 	0014a3dc mov mar,0xb76f20
 	0014a3e8 mov ax,mar
 	0014a3f4 mov op,ax
 	0014a3fc setfuncargs 0x5
 	0014a404 mov ax,0x536f20
 	0014a410 farcall ax
 	0014a418 farsubsp 0x5
 	0014a420 pop op
 	0014a428 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014a430]
		0014a318: CONDITIONAL_JUMP
 	0014a430 sourceline 0xfbb
 	0014a438 mov mar,0xb7ef20
 	0014a444 memread4 ax
 	0014a44c push ax
 	0014a454 mov ax,0x26
 	0014a460 pop bx
 	0014a468 cmpeq bx,ax
 	0014a474 mov ax,bx
 	0014a480 jz 0x0014a548
		0014a548: CONDITIONAL_JUMP
		0014a488: FALL_THROUGH

	[0014a488]
		0014a430: FALL_THROUGH
 	0014a488 push op
 	0014a490 mov ax,0x426
 	0014a49c farpush ax
 	0014a4a4 mov ax,0x397
 	0014a4b0 farpush ax
 	0014a4b8 mov ax,0x0
 	0014a4c4 farpush ax
 	0014a4cc mov ax,0x3
 	0014a4d8 farpush ax
 	0014a4e0 mov ax,0xd
 	0014a4ec farpush ax
 	0014a4f4 mov mar,0xb76f20
 	0014a500 mov ax,mar
 	0014a50c mov op,ax
 	0014a514 setfuncargs 0x5
 	0014a51c mov ax,0x536f20
 	0014a528 farcall ax
 	0014a530 farsubsp 0x5
 	0014a538 pop op
 	0014a540 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014a548]
		0014a430: CONDITIONAL_JUMP
 	0014a548 sourceline 0xfbc
 	0014a550 mov mar,0xb7ef20
 	0014a55c memread4 ax
 	0014a564 push ax
 	0014a56c mov ax,0x27
 	0014a578 pop bx
 	0014a580 cmpeq bx,ax
 	0014a58c mov ax,bx
 	0014a598 jz 0x0014a660
		0014a660: CONDITIONAL_JUMP
		0014a5a0: FALL_THROUGH

	[0014a5a0]
		0014a548: FALL_THROUGH
 	0014a5a0 push op
 	0014a5a8 mov ax,0x426
 	0014a5b4 farpush ax
 	0014a5bc mov ax,0x397
 	0014a5c8 farpush ax
 	0014a5d0 mov ax,0x0
 	0014a5dc farpush ax
 	0014a5e4 mov ax,0x3
 	0014a5f0 farpush ax
 	0014a5f8 mov ax,0xc
 	0014a604 farpush ax
 	0014a60c mov mar,0xb76f20
 	0014a618 mov ax,mar
 	0014a624 mov op,ax
 	0014a62c setfuncargs 0x5
 	0014a634 mov ax,0x536f20
 	0014a640 farcall ax
 	0014a648 farsubsp 0x5
 	0014a650 pop op
 	0014a658 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014a660]
		0014a548: CONDITIONAL_JUMP
 	0014a660 sourceline 0xfbd
 	0014a668 mov mar,0xb7ef20
 	0014a674 memread4 ax
 	0014a67c push ax
 	0014a684 mov ax,0x28
 	0014a690 pop bx
 	0014a698 cmpeq bx,ax
 	0014a6a4 mov ax,bx
 	0014a6b0 jz 0x0014a778
		0014a778: CONDITIONAL_JUMP
		0014a6b8: FALL_THROUGH

	[0014a6b8]
		0014a660: FALL_THROUGH
 	0014a6b8 push op
 	0014a6c0 mov ax,0x426
 	0014a6cc farpush ax
 	0014a6d4 mov ax,0x397
 	0014a6e0 farpush ax
 	0014a6e8 mov ax,0x0
 	0014a6f4 farpush ax
 	0014a6fc mov ax,0x3
 	0014a708 farpush ax
 	0014a710 mov ax,0xb
 	0014a71c farpush ax
 	0014a724 mov mar,0xb76f20
 	0014a730 mov ax,mar
 	0014a73c mov op,ax
 	0014a744 setfuncargs 0x5
 	0014a74c mov ax,0x536f20
 	0014a758 farcall ax
 	0014a760 farsubsp 0x5
 	0014a768 pop op
 	0014a770 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014a778]
		0014a660: CONDITIONAL_JUMP
 	0014a778 sourceline 0xfbe
 	0014a780 mov mar,0xb7ef20
 	0014a78c memread4 ax
 	0014a794 push ax
 	0014a79c mov ax,0x29
 	0014a7a8 pop bx
 	0014a7b0 cmpeq bx,ax
 	0014a7bc mov ax,bx
 	0014a7c8 jz 0x0014a890
		0014a890: CONDITIONAL_JUMP
		0014a7d0: FALL_THROUGH

	[0014a7d0]
		0014a778: FALL_THROUGH
 	0014a7d0 push op
 	0014a7d8 mov ax,0x426
 	0014a7e4 farpush ax
 	0014a7ec mov ax,0x397
 	0014a7f8 farpush ax
 	0014a800 mov ax,0x0
 	0014a80c farpush ax
 	0014a814 mov ax,0x3
 	0014a820 farpush ax
 	0014a828 mov ax,0xa
 	0014a834 farpush ax
 	0014a83c mov mar,0xb76f20
 	0014a848 mov ax,mar
 	0014a854 mov op,ax
 	0014a85c setfuncargs 0x5
 	0014a864 mov ax,0x536f20
 	0014a870 farcall ax
 	0014a878 farsubsp 0x5
 	0014a880 pop op
 	0014a888 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014a890]
		0014a778: CONDITIONAL_JUMP
 	0014a890 sourceline 0xfbf
 	0014a898 mov mar,0xb7ef20
 	0014a8a4 memread4 ax
 	0014a8ac push ax
 	0014a8b4 mov ax,0x2a
 	0014a8c0 pop bx
 	0014a8c8 cmpeq bx,ax
 	0014a8d4 mov ax,bx
 	0014a8e0 jz 0x0014a9a8
		0014a9a8: CONDITIONAL_JUMP
		0014a8e8: FALL_THROUGH

	[0014a8e8]
		0014a890: FALL_THROUGH
 	0014a8e8 push op
 	0014a8f0 mov ax,0x426
 	0014a8fc farpush ax
 	0014a904 mov ax,0x397
 	0014a910 farpush ax
 	0014a918 mov ax,0x0
 	0014a924 farpush ax
 	0014a92c mov ax,0x3
 	0014a938 farpush ax
 	0014a940 mov ax,0x9
 	0014a94c farpush ax
 	0014a954 mov mar,0xb76f20
 	0014a960 mov ax,mar
 	0014a96c mov op,ax
 	0014a974 setfuncargs 0x5
 	0014a97c mov ax,0x536f20
 	0014a988 farcall ax
 	0014a990 farsubsp 0x5
 	0014a998 pop op
 	0014a9a0 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014a9a8]
		0014a890: CONDITIONAL_JUMP
 	0014a9a8 sourceline 0xfc0
 	0014a9b0 mov mar,0xb7ef20
 	0014a9bc memread4 ax
 	0014a9c4 push ax
 	0014a9cc mov ax,0x2b
 	0014a9d8 pop bx
 	0014a9e0 cmpeq bx,ax
 	0014a9ec mov ax,bx
 	0014a9f8 jz 0x0014aac0
		0014aac0: CONDITIONAL_JUMP
		0014aa00: FALL_THROUGH

	[0014aa00]
		0014a9a8: FALL_THROUGH
 	0014aa00 push op
 	0014aa08 mov ax,0x426
 	0014aa14 farpush ax
 	0014aa1c mov ax,0x397
 	0014aa28 farpush ax
 	0014aa30 mov ax,0x0
 	0014aa3c farpush ax
 	0014aa44 mov ax,0x3
 	0014aa50 farpush ax
 	0014aa58 mov ax,0x8
 	0014aa64 farpush ax
 	0014aa6c mov mar,0xb76f20
 	0014aa78 mov ax,mar
 	0014aa84 mov op,ax
 	0014aa8c setfuncargs 0x5
 	0014aa94 mov ax,0x536f20
 	0014aaa0 farcall ax
 	0014aaa8 farsubsp 0x5
 	0014aab0 pop op
 	0014aab8 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014aac0]
		0014a9a8: CONDITIONAL_JUMP
 	0014aac0 sourceline 0xfc1
 	0014aac8 mov mar,0xb7ef20
 	0014aad4 memread4 ax
 	0014aadc push ax
 	0014aae4 mov ax,0x2c
 	0014aaf0 pop bx
 	0014aaf8 cmpeq bx,ax
 	0014ab04 mov ax,bx
 	0014ab10 jz 0x0014abd8
		0014abd8: CONDITIONAL_JUMP
		0014ab18: FALL_THROUGH

	[0014ab18]
		0014aac0: FALL_THROUGH
 	0014ab18 push op
 	0014ab20 mov ax,0x426
 	0014ab2c farpush ax
 	0014ab34 mov ax,0x397
 	0014ab40 farpush ax
 	0014ab48 mov ax,0x0
 	0014ab54 farpush ax
 	0014ab5c mov ax,0x3
 	0014ab68 farpush ax
 	0014ab70 mov ax,0x7
 	0014ab7c farpush ax
 	0014ab84 mov mar,0xb76f20
 	0014ab90 mov ax,mar
 	0014ab9c mov op,ax
 	0014aba4 setfuncargs 0x5
 	0014abac mov ax,0x536f20
 	0014abb8 farcall ax
 	0014abc0 farsubsp 0x5
 	0014abc8 pop op
 	0014abd0 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014abd8]
		0014aac0: CONDITIONAL_JUMP
 	0014abd8 sourceline 0xfc2
 	0014abe0 mov mar,0xb7ef20
 	0014abec memread4 ax
 	0014abf4 push ax
 	0014abfc mov ax,0x2d
 	0014ac08 pop bx
 	0014ac10 cmpeq bx,ax
 	0014ac1c mov ax,bx
 	0014ac28 jz 0x0014acf0
		0014acf0: CONDITIONAL_JUMP
		0014ac30: FALL_THROUGH

	[0014ac30]
		0014abd8: FALL_THROUGH
 	0014ac30 push op
 	0014ac38 mov ax,0x426
 	0014ac44 farpush ax
 	0014ac4c mov ax,0x397
 	0014ac58 farpush ax
 	0014ac60 mov ax,0x0
 	0014ac6c farpush ax
 	0014ac74 mov ax,0x3
 	0014ac80 farpush ax
 	0014ac88 mov ax,0x6
 	0014ac94 farpush ax
 	0014ac9c mov mar,0xb76f20
 	0014aca8 mov ax,mar
 	0014acb4 mov op,ax
 	0014acbc setfuncargs 0x5
 	0014acc4 mov ax,0x536f20
 	0014acd0 farcall ax
 	0014acd8 farsubsp 0x5
 	0014ace0 pop op
 	0014ace8 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014acf0]
		0014abd8: CONDITIONAL_JUMP
 	0014acf0 sourceline 0xfc3
 	0014acf8 mov mar,0xb7ef20
 	0014ad04 memread4 ax
 	0014ad0c push ax
 	0014ad14 mov ax,0x2e
 	0014ad20 pop bx
 	0014ad28 cmpeq bx,ax
 	0014ad34 mov ax,bx
 	0014ad40 jz 0x0014ae08
		0014ae08: CONDITIONAL_JUMP
		0014ad48: FALL_THROUGH

	[0014ad48]
		0014acf0: FALL_THROUGH
 	0014ad48 push op
 	0014ad50 mov ax,0x426
 	0014ad5c farpush ax
 	0014ad64 mov ax,0x397
 	0014ad70 farpush ax
 	0014ad78 mov ax,0x0
 	0014ad84 farpush ax
 	0014ad8c mov ax,0x3
 	0014ad98 farpush ax
 	0014ada0 mov ax,0x5
 	0014adac farpush ax
 	0014adb4 mov mar,0xb76f20
 	0014adc0 mov ax,mar
 	0014adcc mov op,ax
 	0014add4 setfuncargs 0x5
 	0014addc mov ax,0x536f20
 	0014ade8 farcall ax
 	0014adf0 farsubsp 0x5
 	0014adf8 pop op
 	0014ae00 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014ae08]
		0014acf0: CONDITIONAL_JUMP
 	0014ae08 sourceline 0xfc4
 	0014ae10 mov mar,0xb7ef20
 	0014ae1c memread4 ax
 	0014ae24 push ax
 	0014ae2c mov ax,0x2f
 	0014ae38 pop bx
 	0014ae40 cmpeq bx,ax
 	0014ae4c mov ax,bx
 	0014ae58 jz 0x0014af20
		0014af20: CONDITIONAL_JUMP
		0014ae60: FALL_THROUGH

	[0014ae60]
		0014ae08: FALL_THROUGH
 	0014ae60 push op
 	0014ae68 mov ax,0x426
 	0014ae74 farpush ax
 	0014ae7c mov ax,0x397
 	0014ae88 farpush ax
 	0014ae90 mov ax,0x0
 	0014ae9c farpush ax
 	0014aea4 mov ax,0x3
 	0014aeb0 farpush ax
 	0014aeb8 mov ax,0x4
 	0014aec4 farpush ax
 	0014aecc mov mar,0xb76f20
 	0014aed8 mov ax,mar
 	0014aee4 mov op,ax
 	0014aeec setfuncargs 0x5
 	0014aef4 mov ax,0x536f20
 	0014af00 farcall ax
 	0014af08 farsubsp 0x5
 	0014af10 pop op
 	0014af18 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014af20]
		0014ae08: CONDITIONAL_JUMP
 	0014af20 sourceline 0xfc5
 	0014af28 mov mar,0xb7ef20
 	0014af34 memread4 ax
 	0014af3c push ax
 	0014af44 mov ax,0x30
 	0014af50 pop bx
 	0014af58 cmpeq bx,ax
 	0014af64 mov ax,bx
 	0014af70 jz 0x0014b038
		0014b038: CONDITIONAL_JUMP
		0014af78: FALL_THROUGH

	[0014af78]
		0014af20: FALL_THROUGH
 	0014af78 push op
 	0014af80 mov ax,0x426
 	0014af8c farpush ax
 	0014af94 mov ax,0x397
 	0014afa0 farpush ax
 	0014afa8 mov ax,0x0
 	0014afb4 farpush ax
 	0014afbc mov ax,0x3
 	0014afc8 farpush ax
 	0014afd0 mov ax,0x3
 	0014afdc farpush ax
 	0014afe4 mov mar,0xb76f20
 	0014aff0 mov ax,mar
 	0014affc mov op,ax
 	0014b004 setfuncargs 0x5
 	0014b00c mov ax,0x536f20
 	0014b018 farcall ax
 	0014b020 farsubsp 0x5
 	0014b028 pop op
 	0014b030 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014b038]
		0014af20: CONDITIONAL_JUMP
 	0014b038 sourceline 0xfc6
 	0014b040 mov mar,0xb7ef20
 	0014b04c memread4 ax
 	0014b054 push ax
 	0014b05c mov ax,0x31
 	0014b068 pop bx
 	0014b070 cmpeq bx,ax
 	0014b07c mov ax,bx
 	0014b088 jz 0x0014b150
		0014b150: CONDITIONAL_JUMP
		0014b090: FALL_THROUGH

	[0014b090]
		0014b038: FALL_THROUGH
 	0014b090 push op
 	0014b098 mov ax,0x426
 	0014b0a4 farpush ax
 	0014b0ac mov ax,0x397
 	0014b0b8 farpush ax
 	0014b0c0 mov ax,0x0
 	0014b0cc farpush ax
 	0014b0d4 mov ax,0x3
 	0014b0e0 farpush ax
 	0014b0e8 mov ax,0x2
 	0014b0f4 farpush ax
 	0014b0fc mov mar,0xb76f20
 	0014b108 mov ax,mar
 	0014b114 mov op,ax
 	0014b11c setfuncargs 0x5
 	0014b124 mov ax,0x536f20
 	0014b130 farcall ax
 	0014b138 farsubsp 0x5
 	0014b140 pop op
 	0014b148 jmp 0x0014b260
		0014b260: UNCONDITIONAL_JUMP

	[0014b150]
		0014b038: CONDITIONAL_JUMP
 	0014b150 sourceline 0xfc7
 	0014b158 mov mar,0xb7ef20
 	0014b164 memread4 ax
 	0014b16c push ax
 	0014b174 mov ax,0x32
 	0014b180 pop bx
 	0014b188 cmpeq bx,ax
 	0014b194 mov ax,bx
 	0014b1a0 jz 0x0014b260
		0014b260: CONDITIONAL_JUMP
		0014b1a8: FALL_THROUGH

	[0014b1a8]
		0014b150: FALL_THROUGH
 	0014b1a8 push op
 	0014b1b0 mov ax,0x426
 	0014b1bc farpush ax
 	0014b1c4 mov ax,0x397
 	0014b1d0 farpush ax
 	0014b1d8 mov ax,0x0
 	0014b1e4 farpush ax
 	0014b1ec mov ax,0x3
 	0014b1f8 farpush ax
 	0014b200 mov ax,0x1
 	0014b20c farpush ax
 	0014b214 mov mar,0xb76f20
 	0014b220 mov ax,mar
 	0014b22c mov op,ax
 	0014b234 setfuncargs 0x5
 	0014b23c mov ax,0x536f20
 	0014b248 farcall ax
 	0014b250 farsubsp 0x5
 	0014b258 pop op
		0014b260: FALL_THROUGH

	[0014b260]
		00149750: UNCONDITIONAL_JUMP
		00149880: UNCONDITIONAL_JUMP
		00149998: UNCONDITIONAL_JUMP
		00149ab0: UNCONDITIONAL_JUMP
		00149bc8: UNCONDITIONAL_JUMP
		00149ce0: UNCONDITIONAL_JUMP
		00149df8: UNCONDITIONAL_JUMP
		00149f10: UNCONDITIONAL_JUMP
		0014a028: UNCONDITIONAL_JUMP
		0014a140: UNCONDITIONAL_JUMP
		0014a258: UNCONDITIONAL_JUMP
		0014a370: UNCONDITIONAL_JUMP
		0014a488: UNCONDITIONAL_JUMP
		0014a5a0: UNCONDITIONAL_JUMP
		0014a6b8: UNCONDITIONAL_JUMP
		0014a7d0: UNCONDITIONAL_JUMP
		0014a8e8: UNCONDITIONAL_JUMP
		0014aa00: UNCONDITIONAL_JUMP
		0014ab18: UNCONDITIONAL_JUMP
		0014ac30: UNCONDITIONAL_JUMP
		0014ad48: UNCONDITIONAL_JUMP
		0014ae60: UNCONDITIONAL_JUMP
		0014af78: UNCONDITIONAL_JUMP
		0014b090: UNCONDITIONAL_JUMP
		0014b150: CONDITIONAL_JUMP
		0014b1a8: FALL_THROUGH
 	0014b260 sourceline 0xfc9
 	0014b268 push op
 	0014b270 mov ax,0x68
 	0014b27c farpush ax
 	0014b284 mov mar,0xb76f20
 	0014b290 mov ax,mar
 	0014b29c mov op,ax
 	0014b2a4 setfuncargs 0x1
 	0014b2ac mov ax,0x51ef20
 	0014b2b8 farcall ax
 	0014b2c0 farsubsp 0x1
 	0014b2c8 pop op
 	0014b2d0 sourceline 0xfca
 	0014b2d8 mov mar,0xb76f20
 	0014b2e4 mov ax,mar
 	0014b2f0 push op
 	0014b2f8 mov op,ax
 	0014b300 setfuncargs 0x0
 	0014b308 mov ax,0x78ef20
 	0014b314 farcall ax
 	0014b31c pop op
 	0014b324 push ax
 	0014b32c mov ax,0x3
 	0014b338 pop bx
 	0014b340 add bx,ax
 	0014b34c mov ax,bx
 	0014b358 mov bx,ax
 	0014b364 mov mar,0xb76f20
 	0014b370 mov ax,mar
 	0014b37c push op
 	0014b384 mov op,ax
 	0014b38c farpush bx
 	0014b394 setfuncargs 0x1
 	0014b39c mov ax,0x526f20
 	0014b3a8 farcall ax
 	0014b3b0 farsubsp 0x1
 	0014b3b8 pop op
 	0014b3c0 sourceline 0xfcb
 	0014b3c8 mov mar,0xb76f20
 	0014b3d4 mov ax,mar
 	0014b3e0 push op
 	0014b3e8 mov op,ax
 	0014b3f0 setfuncargs 0x0
 	0014b3f8 mov ax,0xb36f20
 	0014b404 farcall ax
 	0014b40c pop op
 	0014b414 push ax
 	0014b41c mov ax,0x4
 	0014b428 pop bx
 	0014b430 add bx,ax
 	0014b43c mov ax,bx
 	0014b448 mov bx,ax
 	0014b454 mov mar,0xb76f20
 	0014b460 mov ax,mar
 	0014b46c push op
 	0014b474 mov op,ax
 	0014b47c farpush bx
 	0014b484 setfuncargs 0x1
 	0014b48c mov ax,0x70ef20
 	0014b498 farcall ax
 	0014b4a0 farsubsp 0x1
 	0014b4a8 pop op
 	0014b4b0 sourceline 0xfcc
 	0014b4b8 push op
 	0014b4c0 mov ax,0x426
 	0014b4cc farpush ax
 	0014b4d4 mov ax,0x397
 	0014b4e0 farpush ax
 	0014b4e8 mov ax,0x0
 	0014b4f4 farpush ax
 	0014b4fc mov ax,0x3
 	0014b508 farpush ax
 	0014b510 mov ax,0x0
 	0014b51c farpush ax
 	0014b524 mov mar,0xb76f20
 	0014b530 mov ax,mar
 	0014b53c mov op,ax
 	0014b544 setfuncargs 0x5
 	0014b54c mov ax,0x536f20
 	0014b558 farcall ax
 	0014b560 farsubsp 0x5
 	0014b568 pop op
 	0014b570 sourceline 0xfcd
 	0014b578 push op
 	0014b580 mov ax,0x2bc3be
 	0014b58c farpush ax
 	0014b594 mov mar,0xb76f20
 	0014b5a0 mov ax,mar
 	0014b5ac mov op,ax
 	0014b5b4 setfuncargs 0x1
 	0014b5bc mov ax,0x6f6f20
 	0014b5c8 farcall ax
 	0014b5d0 farsubsp 0x1
 	0014b5d8 pop op
 	0014b5e0 sourceline 0xfce
 	0014b5e8 push op
 	0014b5f0 mov ax,0x1
 	0014b5fc farpush ax
 	0014b604 mov mar,0xb86f20
 	0014b610 mov ax,mar
 	0014b61c mov op,ax
 	0014b624 setfuncargs 0x1
 	0014b62c mov ax,0x6d6f20
 	0014b638 farcall ax
 	0014b640 farsubsp 0x1
 	0014b648 pop op
 	0014b650 lnot ax
 	0014b658 jnz 0x0014b6f8
		0014b6f8: CONDITIONAL_JUMP
		0014b660: FALL_THROUGH

	[0014b660]
		0014b260: FALL_THROUGH
 	0014b660 push ax
 	0014b668 push op
 	0014b670 mov ax,0x2
 	0014b67c farpush ax
 	0014b684 mov mar,0xb86f20
 	0014b690 mov ax,mar
 	0014b69c mov op,ax
 	0014b6a4 setfuncargs 0x1
 	0014b6ac mov ax,0x6d6f20
 	0014b6b8 farcall ax
 	0014b6c0 farsubsp 0x1
 	0014b6c8 pop op
 	0014b6d0 lnot ax
 	0014b6d8 pop bx
 	0014b6e0 lor bx,ax
 	0014b6ec mov ax,bx
		0014b6f8: FALL_THROUGH

	[0014b6f8]
		0014b260: CONDITIONAL_JUMP
		0014b660: FALL_THROUGH
 	0014b6f8 jnz 0x0014b798
		0014b798: CONDITIONAL_JUMP
		0014b700: FALL_THROUGH

	[0014b700]
		0014b6f8: FALL_THROUGH
 	0014b700 push ax
 	0014b708 push op
 	0014b710 mov ax,0x3
 	0014b71c farpush ax
 	0014b724 mov mar,0xb86f20
 	0014b730 mov ax,mar
 	0014b73c mov op,ax
 	0014b744 setfuncargs 0x1
 	0014b74c mov ax,0x6d6f20
 	0014b758 farcall ax
 	0014b760 farsubsp 0x1
 	0014b768 pop op
 	0014b770 lnot ax
 	0014b778 pop bx
 	0014b780 lor bx,ax
 	0014b78c mov ax,bx
		0014b798: FALL_THROUGH

	[0014b798]
		0014b6f8: CONDITIONAL_JUMP
		0014b700: FALL_THROUGH
 	0014b798 jnz 0x0014b838
		0014b838: CONDITIONAL_JUMP
		0014b7a0: FALL_THROUGH

	[0014b7a0]
		0014b798: FALL_THROUGH
 	0014b7a0 push ax
 	0014b7a8 push op
 	0014b7b0 mov ax,0x4
 	0014b7bc farpush ax
 	0014b7c4 mov mar,0xb86f20
 	0014b7d0 mov ax,mar
 	0014b7dc mov op,ax
 	0014b7e4 setfuncargs 0x1
 	0014b7ec mov ax,0x6d6f20
 	0014b7f8 farcall ax
 	0014b800 farsubsp 0x1
 	0014b808 pop op
 	0014b810 lnot ax
 	0014b818 pop bx
 	0014b820 lor bx,ax
 	0014b82c mov ax,bx
		0014b838: FALL_THROUGH

	[0014b838]
		0014b798: CONDITIONAL_JUMP
		0014b7a0: FALL_THROUGH
 	0014b838 jnz 0x0014b8d8
		0014b8d8: CONDITIONAL_JUMP
		0014b840: FALL_THROUGH

	[0014b840]
		0014b838: FALL_THROUGH
 	0014b840 push ax
 	0014b848 push op
 	0014b850 mov ax,0x5
 	0014b85c farpush ax
 	0014b864 mov mar,0xb86f20
 	0014b870 mov ax,mar
 	0014b87c mov op,ax
 	0014b884 setfuncargs 0x1
 	0014b88c mov ax,0x6d6f20
 	0014b898 farcall ax
 	0014b8a0 farsubsp 0x1
 	0014b8a8 pop op
 	0014b8b0 lnot ax
 	0014b8b8 pop bx
 	0014b8c0 lor bx,ax
 	0014b8cc mov ax,bx
		0014b8d8: FALL_THROUGH

	[0014b8d8]
		0014b838: CONDITIONAL_JUMP
		0014b840: FALL_THROUGH
 	0014b8d8 jz 0x0014b934
		0014b934: CONDITIONAL_JUMP
		0014b8e0: FALL_THROUGH

	[0014b8e0]
		0014b8d8: FALL_THROUGH
 	0014b8e0 push op
 	0014b8e8 mov mar,0xb86f20
 	0014b8f4 mov ax,mar
 	0014b900 mov op,ax
 	0014b908 setfuncargs 0x0
 	0014b910 mov ax,0x71ef20
 	0014b91c farcall ax
 	0014b924 pop op
 	0014b92c jmp 0x0014bf4c
		0014bf4c: UNCONDITIONAL_JUMP

	[0014b934]
		0014b8d8: CONDITIONAL_JUMP
 	0014b934 sourceline 0xfd5
 	0014b93c push op
 	0014b944 mov ax,0x2bc3ce
 	0014b950 farpush ax
 	0014b958 mov mar,0x3cef20
 	0014b964 mov ax,mar
 	0014b970 mov op,ax
 	0014b978 setfuncargs 0x1
 	0014b980 mov ax,0x6f6f20
 	0014b98c farcall ax
 	0014b994 farsubsp 0x1
 	0014b99c pop op
 	0014b9a4 sourceline 0xfd6
 	0014b9ac push op
 	0014b9b4 mov ax,0x2bc3ea
 	0014b9c0 farpush ax
 	0014b9c8 mov mar,0xb76f20
 	0014b9d4 mov ax,mar
 	0014b9e0 mov op,ax
 	0014b9e8 setfuncargs 0x1
 	0014b9f0 mov ax,0x6f6f20
 	0014b9fc farcall ax
 	0014ba04 farsubsp 0x1
 	0014ba0c pop op
 	0014ba14 sourceline 0xfd7
 	0014ba1c mov ax,0x1
 	0014ba28 mov bx,ax
 	0014ba34 mov mar,0x3cef20
 	0014ba40 mov ax,mar
 	0014ba4c push op
 	0014ba54 mov op,ax
 	0014ba5c farpush bx
 	0014ba64 setfuncargs 0x1
 	0014ba6c mov ax,0x69ef20
 	0014ba78 farcall ax
 	0014ba80 farsubsp 0x1
 	0014ba88 pop op
 	0014ba90 sourceline 0xfd8
 	0014ba98 push op
 	0014baa0 mov ax,0x2
 	0014baac farpush ax
 	0014bab4 mov mar,0x3cef20
 	0014bac0 mov ax,mar
 	0014bacc mov op,ax
 	0014bad4 setfuncargs 0x1
 	0014badc mov ax,0x51ef20
 	0014bae8 farcall ax
 	0014baf0 farsubsp 0x1
 	0014baf8 pop op
 	0014bb00 sourceline 0xfd9
 	0014bb08 mov ax,0x1
 	0014bb14 mov bx,ax
 	0014bb20 mov mar,0x3cef20
 	0014bb2c mov ax,mar
 	0014bb38 push op
 	0014bb40 mov op,ax
 	0014bb48 farpush bx
 	0014bb50 setfuncargs 0x1
 	0014bb58 mov ax,0x766f20
 	0014bb64 farcall ax
 	0014bb6c farsubsp 0x1
 	0014bb74 pop op
 	0014bb7c sourceline 0xfda
 	0014bb84 push op
 	0014bb8c mov ax,0x427
 	0014bb98 farpush ax
 	0014bba0 mov ax,0x397
 	0014bbac farpush ax
 	0014bbb4 mov ax,0x0
 	0014bbc0 farpush ax
 	0014bbc8 mov ax,0x3
 	0014bbd4 farpush ax
 	0014bbdc mov ax,0x0
 	0014bbe8 farpush ax
 	0014bbf0 mov mar,0xb76f20
 	0014bbfc mov ax,mar
 	0014bc08 mov op,ax
 	0014bc10 setfuncargs 0x5
 	0014bc18 mov ax,0x536f20
 	0014bc24 farcall ax
 	0014bc2c farsubsp 0x5
 	0014bc34 pop op
 	0014bc3c sourceline 0xfdb
 	0014bc44 push op
 	0014bc4c mov ax,0x63
 	0014bc58 farpush ax
 	0014bc60 mov mar,0xb76f20
 	0014bc6c mov ax,mar
 	0014bc78 mov op,ax
 	0014bc80 setfuncargs 0x1
 	0014bc88 mov ax,0x51ef20
 	0014bc94 farcall ax
 	0014bc9c farsubsp 0x1
 	0014bca4 pop op
 	0014bcac sourceline 0xfdc
 	0014bcb4 mov mar,0xb76f20
 	0014bcc0 mov ax,mar
 	0014bccc push op
 	0014bcd4 mov op,ax
 	0014bcdc setfuncargs 0x0
 	0014bce4 mov ax,0x78ef20
 	0014bcf0 farcall ax
 	0014bcf8 pop op
 	0014bd00 push ax
 	0014bd08 mov ax,0x3
 	0014bd14 pop bx
 	0014bd1c sub bx,ax
 	0014bd28 mov ax,bx
 	0014bd34 mov bx,ax
 	0014bd40 mov mar,0xb76f20
 	0014bd4c mov ax,mar
 	0014bd58 push op
 	0014bd60 mov op,ax
 	0014bd68 farpush bx
 	0014bd70 setfuncargs 0x1
 	0014bd78 mov ax,0x526f20
 	0014bd84 farcall ax
 	0014bd8c farsubsp 0x1
 	0014bd94 pop op
 	0014bd9c sourceline 0xfdd
 	0014bda4 mov mar,0xb76f20
 	0014bdb0 mov ax,mar
 	0014bdbc push op
 	0014bdc4 mov op,ax
 	0014bdcc setfuncargs 0x0
 	0014bdd4 mov ax,0xb36f20
 	0014bde0 farcall ax
 	0014bde8 pop op
 	0014bdf0 push ax
 	0014bdf8 mov ax,0x4
 	0014be04 pop bx
 	0014be0c sub bx,ax
 	0014be18 mov ax,bx
 	0014be24 mov bx,ax
 	0014be30 mov mar,0xb76f20
 	0014be3c mov ax,mar
 	0014be48 push op
 	0014be50 mov op,ax
 	0014be58 farpush bx
 	0014be60 setfuncargs 0x1
 	0014be68 mov ax,0x70ef20
 	0014be74 farcall ax
 	0014be7c farsubsp 0x1
 	0014be84 pop op
 	0014be8c sourceline 0xfde
 	0014be94 push op
 	0014be9c mov ax,0x426
 	0014bea8 farpush ax
 	0014beb0 mov ax,0x398
 	0014bebc farpush ax
 	0014bec4 mov ax,0x1
 	0014bed0 farpush ax
 	0014bed8 mov ax,0x3
 	0014bee4 farpush ax
 	0014beec mov ax,0x0
 	0014bef8 farpush ax
 	0014bf00 mov mar,0xb76f20
 	0014bf0c mov ax,mar
 	0014bf18 mov op,ax
 	0014bf20 setfuncargs 0x5
 	0014bf28 mov ax,0x536f20
 	0014bf34 farcall ax
 	0014bf3c farsubsp 0x5
 	0014bf44 pop op
		0014bf4c: FALL_THROUGH

	[0014bf4c]
		0014b8e0: UNCONDITIONAL_JUMP
		0014b934: FALL_THROUGH
 	0014bf4c sourceline 0xfe0
 	0014bf54 jmp 0x0014cc48
		0014cc48: UNCONDITIONAL_JUMP

	[0014bf5c]
		001495fc: CONDITIONAL_JUMP
 	0014bf5c sourceline 0xfe3
 	0014bf64 push op
 	0014bf6c mov ax,0x68
 	0014bf78 farpush ax
 	0014bf80 mov mar,0xb76f20
 	0014bf8c mov ax,mar
 	0014bf98 mov op,ax
 	0014bfa0 setfuncargs 0x1
 	0014bfa8 mov ax,0x51ef20
 	0014bfb4 farcall ax
 	0014bfbc farsubsp 0x1
 	0014bfc4 pop op
 	0014bfcc sourceline 0xfe4
 	0014bfd4 mov mar,0xb76f20
 	0014bfe0 mov ax,mar
 	0014bfec push op
 	0014bff4 mov op,ax
 	0014bffc setfuncargs 0x0
 	0014c004 mov ax,0x78ef20
 	0014c010 farcall ax
 	0014c018 pop op
 	0014c020 push ax
 	0014c028 mov ax,0x3
 	0014c034 pop bx
 	0014c03c add bx,ax
 	0014c048 mov ax,bx
 	0014c054 mov bx,ax
 	0014c060 mov mar,0xb76f20
 	0014c06c mov ax,mar
 	0014c078 push op
 	0014c080 mov op,ax
 	0014c088 farpush bx
 	0014c090 setfuncargs 0x1
 	0014c098 mov ax,0x526f20
 	0014c0a4 farcall ax
 	0014c0ac farsubsp 0x1
 	0014c0b4 pop op
 	0014c0bc sourceline 0xfe5
 	0014c0c4 mov mar,0xb76f20
 	0014c0d0 mov ax,mar
 	0014c0dc push op
 	0014c0e4 mov op,ax
 	0014c0ec setfuncargs 0x0
 	0014c0f4 mov ax,0xb36f20
 	0014c100 farcall ax
 	0014c108 pop op
 	0014c110 push ax
 	0014c118 mov ax,0x4
 	0014c124 pop bx
 	0014c12c add bx,ax
 	0014c138 mov ax,bx
 	0014c144 mov bx,ax
 	0014c150 mov mar,0xb76f20
 	0014c15c mov ax,mar
 	0014c168 push op
 	0014c170 mov op,ax
 	0014c178 farpush bx
 	0014c180 setfuncargs 0x1
 	0014c188 mov ax,0x70ef20
 	0014c194 farcall ax
 	0014c19c farsubsp 0x1
 	0014c1a4 pop op
 	0014c1ac sourceline 0xfe6
 	0014c1b4 push op
 	0014c1bc mov ax,0x426
 	0014c1c8 farpush ax
 	0014c1d0 mov ax,0x397
 	0014c1dc farpush ax
 	0014c1e4 mov ax,0x0
 	0014c1f0 farpush ax
 	0014c1f8 mov ax,0x3
 	0014c204 farpush ax
 	0014c20c mov ax,0x0
 	0014c218 farpush ax
 	0014c220 mov mar,0xb76f20
 	0014c22c mov ax,mar
 	0014c238 mov op,ax
 	0014c240 setfuncargs 0x5
 	0014c248 mov ax,0x536f20
 	0014c254 farcall ax
 	0014c25c farsubsp 0x5
 	0014c264 pop op
 	0014c26c sourceline 0xfe7
 	0014c274 push op
 	0014c27c mov ax,0x2bc3be
 	0014c288 farpush ax
 	0014c290 mov mar,0xb76f20
 	0014c29c mov ax,mar
 	0014c2a8 mov op,ax
 	0014c2b0 setfuncargs 0x1
 	0014c2b8 mov ax,0x6f6f20
 	0014c2c4 farcall ax
 	0014c2cc farsubsp 0x1
 	0014c2d4 pop op
 	0014c2dc sourceline 0xfe8
 	0014c2e4 push op
 	0014c2ec mov ax,0x1
 	0014c2f8 farpush ax
 	0014c300 mov mar,0xb86f20
 	0014c30c mov ax,mar
 	0014c318 mov op,ax
 	0014c320 setfuncargs 0x1
 	0014c328 mov ax,0x6d6f20
 	0014c334 farcall ax
 	0014c33c farsubsp 0x1
 	0014c344 pop op
 	0014c34c lnot ax
 	0014c354 jnz 0x0014c3f4
		0014c3f4: CONDITIONAL_JUMP
		0014c35c: FALL_THROUGH

	[0014c35c]
		0014bf5c: FALL_THROUGH
 	0014c35c push ax
 	0014c364 push op
 	0014c36c mov ax,0x2
 	0014c378 farpush ax
 	0014c380 mov mar,0xb86f20
 	0014c38c mov ax,mar
 	0014c398 mov op,ax
 	0014c3a0 setfuncargs 0x1
 	0014c3a8 mov ax,0x6d6f20
 	0014c3b4 farcall ax
 	0014c3bc farsubsp 0x1
 	0014c3c4 pop op
 	0014c3cc lnot ax
 	0014c3d4 pop bx
 	0014c3dc lor bx,ax
 	0014c3e8 mov ax,bx
		0014c3f4: FALL_THROUGH

	[0014c3f4]
		0014bf5c: CONDITIONAL_JUMP
		0014c35c: FALL_THROUGH
 	0014c3f4 jnz 0x0014c494
		0014c494: CONDITIONAL_JUMP
		0014c3fc: FALL_THROUGH

	[0014c3fc]
		0014c3f4: FALL_THROUGH
 	0014c3fc push ax
 	0014c404 push op
 	0014c40c mov ax,0x3
 	0014c418 farpush ax
 	0014c420 mov mar,0xb86f20
 	0014c42c mov ax,mar
 	0014c438 mov op,ax
 	0014c440 setfuncargs 0x1
 	0014c448 mov ax,0x6d6f20
 	0014c454 farcall ax
 	0014c45c farsubsp 0x1
 	0014c464 pop op
 	0014c46c lnot ax
 	0014c474 pop bx
 	0014c47c lor bx,ax
 	0014c488 mov ax,bx
		0014c494: FALL_THROUGH

	[0014c494]
		0014c3f4: CONDITIONAL_JUMP
		0014c3fc: FALL_THROUGH
 	0014c494 jnz 0x0014c534
		0014c534: CONDITIONAL_JUMP
		0014c49c: FALL_THROUGH

	[0014c49c]
		0014c494: FALL_THROUGH
 	0014c49c push ax
 	0014c4a4 push op
 	0014c4ac mov ax,0x4
 	0014c4b8 farpush ax
 	0014c4c0 mov mar,0xb86f20
 	0014c4cc mov ax,mar
 	0014c4d8 mov op,ax
 	0014c4e0 setfuncargs 0x1
 	0014c4e8 mov ax,0x6d6f20
 	0014c4f4 farcall ax
 	0014c4fc farsubsp 0x1
 	0014c504 pop op
 	0014c50c lnot ax
 	0014c514 pop bx
 	0014c51c lor bx,ax
 	0014c528 mov ax,bx
		0014c534: FALL_THROUGH

	[0014c534]
		0014c494: CONDITIONAL_JUMP
		0014c49c: FALL_THROUGH
 	0014c534 jnz 0x0014c5d4
		0014c5d4: CONDITIONAL_JUMP
		0014c53c: FALL_THROUGH

	[0014c53c]
		0014c534: FALL_THROUGH
 	0014c53c push ax
 	0014c544 push op
 	0014c54c mov ax,0x5
 	0014c558 farpush ax
 	0014c560 mov mar,0xb86f20
 	0014c56c mov ax,mar
 	0014c578 mov op,ax
 	0014c580 setfuncargs 0x1
 	0014c588 mov ax,0x6d6f20
 	0014c594 farcall ax
 	0014c59c farsubsp 0x1
 	0014c5a4 pop op
 	0014c5ac lnot ax
 	0014c5b4 pop bx
 	0014c5bc lor bx,ax
 	0014c5c8 mov ax,bx
		0014c5d4: FALL_THROUGH

	[0014c5d4]
		0014c534: CONDITIONAL_JUMP
		0014c53c: FALL_THROUGH
 	0014c5d4 jz 0x0014c630
		0014c630: CONDITIONAL_JUMP
		0014c5dc: FALL_THROUGH

	[0014c5dc]
		0014c5d4: FALL_THROUGH
 	0014c5dc push op
 	0014c5e4 mov mar,0xb86f20
 	0014c5f0 mov ax,mar
 	0014c5fc mov op,ax
 	0014c604 setfuncargs 0x0
 	0014c60c mov ax,0x71ef20
 	0014c618 farcall ax
 	0014c620 pop op
 	0014c628 jmp 0x0014cc48
		0014cc48: UNCONDITIONAL_JUMP

	[0014c630]
		0014c5d4: CONDITIONAL_JUMP
 	0014c630 sourceline 0xfee
 	0014c638 push op
 	0014c640 mov ax,0x2bc3ce
 	0014c64c farpush ax
 	0014c654 mov mar,0x3cef20
 	0014c660 mov ax,mar
 	0014c66c mov op,ax
 	0014c674 setfuncargs 0x1
 	0014c67c mov ax,0x6f6f20
 	0014c688 farcall ax
 	0014c690 farsubsp 0x1
 	0014c698 pop op
 	0014c6a0 sourceline 0xfef
 	0014c6a8 push op
 	0014c6b0 mov ax,0x2bc3ea
 	0014c6bc farpush ax
 	0014c6c4 mov mar,0xb76f20
 	0014c6d0 mov ax,mar
 	0014c6dc mov op,ax
 	0014c6e4 setfuncargs 0x1
 	0014c6ec mov ax,0x6f6f20
 	0014c6f8 farcall ax
 	0014c700 farsubsp 0x1
 	0014c708 pop op
 	0014c710 sourceline 0xff0
 	0014c718 mov ax,0x1
 	0014c724 mov bx,ax
 	0014c730 mov mar,0x3cef20
 	0014c73c mov ax,mar
 	0014c748 push op
 	0014c750 mov op,ax
 	0014c758 farpush bx
 	0014c760 setfuncargs 0x1
 	0014c768 mov ax,0x69ef20
 	0014c774 farcall ax
 	0014c77c farsubsp 0x1
 	0014c784 pop op
 	0014c78c sourceline 0xff1
 	0014c794 push op
 	0014c79c mov ax,0x2
 	0014c7a8 farpush ax
 	0014c7b0 mov mar,0x3cef20
 	0014c7bc mov ax,mar
 	0014c7c8 mov op,ax
 	0014c7d0 setfuncargs 0x1
 	0014c7d8 mov ax,0x51ef20
 	0014c7e4 farcall ax
 	0014c7ec farsubsp 0x1
 	0014c7f4 pop op
 	0014c7fc sourceline 0xff2
 	0014c804 mov ax,0x1
 	0014c810 mov bx,ax
 	0014c81c mov mar,0x3cef20
 	0014c828 mov ax,mar
 	0014c834 push op
 	0014c83c mov op,ax
 	0014c844 farpush bx
 	0014c84c setfuncargs 0x1
 	0014c854 mov ax,0x766f20
 	0014c860 farcall ax
 	0014c868 farsubsp 0x1
 	0014c870 pop op
 	0014c878 sourceline 0xff3
 	0014c880 push op
 	0014c888 mov ax,0x427
 	0014c894 farpush ax
 	0014c89c mov ax,0x397
 	0014c8a8 farpush ax
 	0014c8b0 mov ax,0x0
 	0014c8bc farpush ax
 	0014c8c4 mov ax,0x3
 	0014c8d0 farpush ax
 	0014c8d8 mov ax,0x0
 	0014c8e4 farpush ax
 	0014c8ec mov mar,0xb76f20
 	0014c8f8 mov ax,mar
 	0014c904 mov op,ax
 	0014c90c setfuncargs 0x5
 	0014c914 mov ax,0x536f20
 	0014c920 farcall ax
 	0014c928 farsubsp 0x5
 	0014c930 pop op
 	0014c938 sourceline 0xff4
 	0014c940 push op
 	0014c948 mov ax,0x63
 	0014c954 farpush ax
 	0014c95c mov mar,0xb76f20
 	0014c968 mov ax,mar
 	0014c974 mov op,ax
 	0014c97c setfuncargs 0x1
 	0014c984 mov ax,0x51ef20
 	0014c990 farcall ax
 	0014c998 farsubsp 0x1
 	0014c9a0 pop op
 	0014c9a8 sourceline 0xff5
 	0014c9b0 mov mar,0xb76f20
 	0014c9bc mov ax,mar
 	0014c9c8 push op
 	0014c9d0 mov op,ax
 	0014c9d8 setfuncargs 0x0
 	0014c9e0 mov ax,0x78ef20
 	0014c9ec farcall ax
 	0014c9f4 pop op
 	0014c9fc push ax
 	0014ca04 mov ax,0x3
 	0014ca10 pop bx
 	0014ca18 sub bx,ax
 	0014ca24 mov ax,bx
 	0014ca30 mov bx,ax
 	0014ca3c mov mar,0xb76f20
 	0014ca48 mov ax,mar
 	0014ca54 push op
 	0014ca5c mov op,ax
 	0014ca64 farpush bx
 	0014ca6c setfuncargs 0x1
 	0014ca74 mov ax,0x526f20
 	0014ca80 farcall ax
 	0014ca88 farsubsp 0x1
 	0014ca90 pop op
 	0014ca98 sourceline 0xff6
 	0014caa0 mov mar,0xb76f20
 	0014caac mov ax,mar
 	0014cab8 push op
 	0014cac0 mov op,ax
 	0014cac8 setfuncargs 0x0
 	0014cad0 mov ax,0xb36f20
 	0014cadc farcall ax
 	0014cae4 pop op
 	0014caec push ax
 	0014caf4 mov ax,0x4
 	0014cb00 pop bx
 	0014cb08 sub bx,ax
 	0014cb14 mov ax,bx
 	0014cb20 mov bx,ax
 	0014cb2c mov mar,0xb76f20
 	0014cb38 mov ax,mar
 	0014cb44 push op
 	0014cb4c mov op,ax
 	0014cb54 farpush bx
 	0014cb5c setfuncargs 0x1
 	0014cb64 mov ax,0x70ef20
 	0014cb70 farcall ax
 	0014cb78 farsubsp 0x1
 	0014cb80 pop op
 	0014cb88 sourceline 0xff7
 	0014cb90 push op
 	0014cb98 mov ax,0x426
 	0014cba4 farpush ax
 	0014cbac mov ax,0x398
 	0014cbb8 farpush ax
 	0014cbc0 mov ax,0x1
 	0014cbcc farpush ax
 	0014cbd4 mov ax,0x3
 	0014cbe0 farpush ax
 	0014cbe8 mov ax,0x0
 	0014cbf4 farpush ax
 	0014cbfc mov mar,0xb76f20
 	0014cc08 mov ax,mar
 	0014cc14 mov op,ax
 	0014cc1c setfuncargs 0x5
 	0014cc24 mov ax,0x536f20
 	0014cc30 farcall ax
 	0014cc38 farsubsp 0x5
 	0014cc40 pop op
		0014cc48: FALL_THROUGH

	[0014cc48]
		00149290: UNCONDITIONAL_JUMP
		0014bf4c: UNCONDITIONAL_JUMP
		0014c5dc: UNCONDITIONAL_JUMP
		0014c630: FALL_THROUGH
 	0014cc48 sourceline 0xffb
 	0014cc50 mov ax,0x0
 	0014cc5c ret

cBlake_Interact$0:
	[0014cc60]
 	0014cc60 sourceline 0xfff
 	0014cc68 thisaddr
 	0014cc70 sourceline 0x1000
 	0014cc78 mov ax,0x1
 	0014cc84 mov bx,ax
*	0014cc90 mov mar,0x3cef20
 	0014cc9c mov ax,mar
 	0014cca8 push op
 	0014ccb0 mov op,ax
 	0014ccb8 farpush bx
 	0014ccc0 setfuncargs 0x1
 	0014ccc8 mov ax,0x69ef20
 	0014ccd4 farcall ax
 	0014ccdc farsubsp 0x1
 	0014cce4 pop op
 	0014ccec sourceline 0x1001
 	0014ccf4 mov mar,0xb8ef20
 	0014cd00 memread4 ax
 	0014cd08 push ax
 	0014cd10 mov ax,0x0
 	0014cd1c pop bx
 	0014cd24 cmpeq bx,ax
 	0014cd30 mov ax,bx
 	0014cd3c jnz 0x0014cdb4
		0014cdb4: CONDITIONAL_JUMP
		0014cd44: FALL_THROUGH

	[0014cd44]
		0014cc60: FALL_THROUGH
 	0014cd44 push ax
 	0014cd4c mov mar,0xb8ef20
 	0014cd58 memread4 ax
 	0014cd60 push ax
 	0014cd68 mov ax,0x1
 	0014cd74 pop bx
 	0014cd7c cmpeq bx,ax
 	0014cd88 mov ax,bx
 	0014cd94 pop bx
 	0014cd9c lor bx,ax
 	0014cda8 mov ax,bx
		0014cdb4: FALL_THROUGH

	[0014cdb4]
		0014cc60: CONDITIONAL_JUMP
		0014cd44: FALL_THROUGH
 	0014cdb4 jz 0x0014d320
		0014d320: CONDITIONAL_JUMP
		0014cdbc: FALL_THROUGH

	[0014cdbc]
		0014cdb4: FALL_THROUGH
 	0014cdbc sourceline 0x1003
 	0014cdc4 push op
 	0014cdcc mov ax,0x1
 	0014cdd8 farpush ax
 	0014cde0 mov mar,0xb96f20
 	0014cdec mov ax,mar
 	0014cdf8 mov op,ax
 	0014ce00 setfuncargs 0x1
 	0014ce08 mov ax,0x6d6f20
 	0014ce14 farcall ax
 	0014ce1c farsubsp 0x1
 	0014ce24 pop op
 	0014ce2c lnot ax
 	0014ce34 jz 0x0014d028
		0014d028: CONDITIONAL_JUMP
		0014ce3c: FALL_THROUGH

	[0014ce3c]
		0014cdbc: FALL_THROUGH
 	0014ce3c sourceline 0x1005
 	0014ce44 setfuncargs 0x0
 	0014ce4c mov ax,0x6def20
 	0014ce58 farcall ax
 	0014ce60 lnot ax
 	0014ce68 jz 0x0014cec4
		0014cec4: CONDITIONAL_JUMP
		0014ce70: FALL_THROUGH

	[0014ce70]
		0014ce3c: FALL_THROUGH
 	0014ce70 mov ax,0x83
 	0014ce7c farpush ax
 	0014ce84 mov ax,0x9e
 	0014ce90 farpush ax
 	0014ce98 setfuncargs 0x2
 	0014cea0 mov ax,0x6e6f20
 	0014ceac farcall ax
 	0014ceb4 farsubsp 0x2
 	0014cebc jmp 0x0014d018
		0014d018: UNCONDITIONAL_JUMP

	[0014cec4]
		0014ce3c: CONDITIONAL_JUMP
 	0014cec4 sourceline 0x1008
 	0014cecc push op
 	0014ced4 mov ax,0x397
 	0014cee0 farpush ax
 	0014cee8 mov ax,0x3
 	0014cef4 farpush ax
 	0014cefc mov mar,0x3cef20
 	0014cf08 mov ax,mar
 	0014cf14 mov op,ax
 	0014cf1c setfuncargs 0x2
 	0014cf24 mov ax,0x6eef20
 	0014cf30 farcall ax
 	0014cf38 farsubsp 0x2
 	0014cf40 pop op
 	0014cf48 sourceline 0x1009
 	0014cf50 mov ax,0x3
 	0014cf5c mov bx,ax
 	0014cf68 mov mar,0x3cef20
 	0014cf74 mov ax,mar
 	0014cf80 push op
 	0014cf88 mov op,ax
 	0014cf90 farpush bx
 	0014cf98 setfuncargs 0x1
 	0014cfa0 mov ax,0x69ef20
 	0014cfac farcall ax
 	0014cfb4 farsubsp 0x1
 	0014cfbc pop op
 	0014cfc4 sourceline 0x100a
 	0014cfcc push op
 	0014cfd4 mov mar,0xb96f20
 	0014cfe0 mov ax,mar
 	0014cfec mov op,ax
 	0014cff4 setfuncargs 0x0
 	0014cffc mov ax,0x71ef20
 	0014d008 farcall ax
 	0014d010 pop op
		0014d018: FALL_THROUGH

	[0014d018]
		0014ce70: UNCONDITIONAL_JUMP
		0014cec4: FALL_THROUGH
 	0014d018 sourceline 0x100c
 	0014d020 jmp 0x0014d310
		0014d310: UNCONDITIONAL_JUMP

	[0014d028]
		0014cdbc: CONDITIONAL_JUMP
 	0014d028 sourceline 0x100f
 	0014d030 mov mar,0xb9ef20
 	0014d03c mov ax,mar
 	0014d048 push op
 	0014d050 mov op,ax
 	0014d058 setfuncargs 0x0
 	0014d060 mov ax,0x516f20
 	0014d06c farcall ax
 	0014d074 pop op
 	0014d07c push ax
 	0014d084 mov ax,0x72
 	0014d090 pop bx
 	0014d098 cmpeq bx,ax
 	0014d0a4 mov ax,bx
 	0014d0b0 jz 0x0014d150
		0014d150: CONDITIONAL_JUMP
		0014d0b8: FALL_THROUGH

	[0014d0b8]
		0014d028: FALL_THROUGH
 	0014d0b8 push op
 	0014d0c0 mov ax,0x397
 	0014d0cc farpush ax
 	0014d0d4 mov ax,0x4e
 	0014d0e0 farpush ax
 	0014d0e8 mov ax,0xae
 	0014d0f4 farpush ax
 	0014d0fc mov mar,0x3cef20
 	0014d108 mov ax,mar
 	0014d114 mov op,ax
 	0014d11c setfuncargs 0x3
 	0014d124 mov ax,0x726f20
 	0014d130 farcall ax
 	0014d138 farsubsp 0x3
 	0014d140 pop op
 	0014d148 jmp 0x0014d1e8
		0014d1e8: UNCONDITIONAL_JUMP

	[0014d150]
		0014d028: CONDITIONAL_JUMP
 	0014d150 sourceline 0x1010
 	0014d158 push op
 	0014d160 mov ax,0x397
 	0014d16c farpush ax
 	0014d174 mov ax,0x49
 	0014d180 farpush ax
 	0014d188 mov ax,0x4f
 	0014d194 farpush ax
 	0014d19c mov mar,0x3cef20
 	0014d1a8 mov ax,mar
 	0014d1b4 mov op,ax
 	0014d1bc setfuncargs 0x3
 	0014d1c4 mov ax,0x726f20
 	0014d1d0 farcall ax
 	0014d1d8 farsubsp 0x3
 	0014d1e0 pop op
		0014d1e8: FALL_THROUGH

	[0014d1e8]
		0014d0b8: UNCONDITIONAL_JUMP
		0014d150: FALL_THROUGH
 	0014d1e8 sourceline 0x1011
 	0014d1f0 mov ax,0x1
 	0014d1fc mov bx,ax
 	0014d208 mov mar,0x3cef20
 	0014d214 mov ax,mar
 	0014d220 push op
 	0014d228 mov op,ax
 	0014d230 farpush bx
 	0014d238 setfuncargs 0x1
 	0014d240 mov ax,0x69ef20
 	0014d24c farcall ax
 	0014d254 farsubsp 0x1
 	0014d25c pop op
 	0014d264 sourceline 0x1012
 	0014d26c push op
 	0014d274 mov ax,0x2bc3fc
 	0014d280 farpush ax
 	0014d288 mov ax,0x138
 	0014d294 farpush ax
 	0014d29c mov ax,0x92
 	0014d2a8 farpush ax
 	0014d2b0 mov ax,0x0
 	0014d2bc farpush ax
 	0014d2c4 mov mar,0x3cef20
 	0014d2d0 mov ax,mar
 	0014d2dc mov op,ax
 	0014d2e4 setfuncargs 0x4
 	0014d2ec mov ax,0x6aef20
 	0014d2f8 farcall ax
 	0014d300 farsubsp 0x4
 	0014d308 pop op
		0014d310: FALL_THROUGH

	[0014d310]
		0014d018: UNCONDITIONAL_JUMP
		0014d1e8: FALL_THROUGH
 	0014d310 sourceline 0x1014
 	0014d318 jmp 0x0014df64
		0014df64: UNCONDITIONAL_JUMP

	[0014d320]
		0014cdb4: CONDITIONAL_JUMP
 	0014d320 sourceline 0x1016
 	0014d328 mov mar,0xb8ef20
 	0014d334 memread4 ax
 	0014d33c push ax
 	0014d344 mov ax,0x2
 	0014d350 pop bx
 	0014d358 cmpeq bx,ax
 	0014d364 mov ax,bx
 	0014d370 jz 0x0014dc24
		0014dc24: CONDITIONAL_JUMP
		0014d378: FALL_THROUGH

	[0014d378]
		0014d320: FALL_THROUGH
 	0014d378 sourceline 0x1018
 	0014d380 setfuncargs 0x0
 	0014d388 mov ax,0x6def20
 	0014d394 farcall ax
 	0014d39c lnot ax
 	0014d3a4 jz 0x0014d400
		0014d400: CONDITIONAL_JUMP
		0014d3ac: FALL_THROUGH

	[0014d3ac]
		0014d378: FALL_THROUGH
 	0014d3ac mov ax,0x7c
 	0014d3b8 farpush ax
 	0014d3c0 mov ax,0x79
 	0014d3cc farpush ax
 	0014d3d4 setfuncargs 0x2
 	0014d3dc mov ax,0x6e6f20
 	0014d3e8 farcall ax
 	0014d3f0 farsubsp 0x2
 	0014d3f8 jmp 0x0014dc14
		0014dc14: UNCONDITIONAL_JUMP

	[0014d400]
		0014d378: CONDITIONAL_JUMP
 	0014d400 sourceline 0x101b
 	0014d408 push op
 	0014d410 mov ax,0x397
 	0014d41c farpush ax
 	0014d424 mov ax,0x7
 	0014d430 farpush ax
 	0014d438 mov mar,0x3cef20
 	0014d444 mov ax,mar
 	0014d450 mov op,ax
 	0014d458 setfuncargs 0x2
 	0014d460 mov ax,0x6eef20
 	0014d46c farcall ax
 	0014d474 farsubsp 0x2
 	0014d47c pop op
 	0014d484 sourceline 0x101c
 	0014d48c mov ax,0x3
 	0014d498 mov bx,ax
 	0014d4a4 mov mar,0x3cef20
 	0014d4b0 mov ax,mar
 	0014d4bc push op
 	0014d4c4 mov op,ax
 	0014d4cc farpush bx
 	0014d4d4 setfuncargs 0x1
 	0014d4dc mov ax,0x69ef20
 	0014d4e8 farcall ax
 	0014d4f0 farsubsp 0x1
 	0014d4f8 pop op
 	0014d500 sourceline 0x101d
 	0014d508 push op
 	0014d510 mov ax,0x2bc41a
 	0014d51c farpush ax
 	0014d524 mov mar,0x3cef20
 	0014d530 mov ax,mar
 	0014d53c mov op,ax
 	0014d544 setfuncargs 0x1
 	0014d54c mov ax,0x6f6f20
 	0014d558 farcall ax
 	0014d560 farsubsp 0x1
 	0014d568 pop op
 	0014d570 sourceline 0x101e
 	0014d578 push op
 	0014d580 mov ax,0x2bc42f
 	0014d58c farpush ax
 	0014d594 mov mar,0xb9ef20
 	0014d5a0 mov ax,mar
 	0014d5ac mov op,ax
 	0014d5b4 setfuncargs 0x1
 	0014d5bc mov ax,0x6f6f20
 	0014d5c8 farcall ax
 	0014d5d0 farsubsp 0x1
 	0014d5d8 pop op
 	0014d5e0 sourceline 0x101f
 	0014d5e8 push op
 	0014d5f0 mov ax,0x2bc445
 	0014d5fc farpush ax
 	0014d604 mov mar,0x3cef20
 	0014d610 mov ax,mar
 	0014d61c mov op,ax
 	0014d624 setfuncargs 0x1
 	0014d62c mov ax,0x6f6f20
 	0014d638 farcall ax
 	0014d640 farsubsp 0x1
 	0014d648 pop op
 	0014d650 sourceline 0x1020
 	0014d658 push op
 	0014d660 mov ax,0x2bc471
 	0014d66c farpush ax
 	0014d674 mov mar,0xb9ef20
 	0014d680 mov ax,mar
 	0014d68c mov op,ax
 	0014d694 setfuncargs 0x1
 	0014d69c mov ax,0x6f6f20
 	0014d6a8 farcall ax
 	0014d6b0 farsubsp 0x1
 	0014d6b8 pop op
 	0014d6c0 sourceline 0x1021
 	0014d6c8 push op
 	0014d6d0 mov ax,0x2bc49d
 	0014d6dc farpush ax
 	0014d6e4 mov mar,0x3cef20
 	0014d6f0 mov ax,mar
 	0014d6fc mov op,ax
 	0014d704 setfuncargs 0x1
 	0014d70c mov ax,0x6f6f20
 	0014d718 farcall ax
 	0014d720 farsubsp 0x1
 	0014d728 pop op
 	0014d730 sourceline 0x1022
 	0014d738 push op
 	0014d740 mov ax,0x2bc4e5
 	0014d74c farpush ax
 	0014d754 mov mar,0xb9ef20
 	0014d760 mov ax,mar
 	0014d76c mov op,ax
 	0014d774 setfuncargs 0x1
 	0014d77c mov ax,0x6f6f20
 	0014d788 farcall ax
 	0014d790 farsubsp 0x1
 	0014d798 pop op
 	0014d7a0 sourceline 0x1023
 	0014d7a8 push op
 	0014d7b0 mov ax,0x2bc51e
 	0014d7bc farpush ax
 	0014d7c4 mov mar,0x3cef20
 	0014d7d0 mov ax,mar
 	0014d7dc mov op,ax
 	0014d7e4 setfuncargs 0x1
 	0014d7ec mov ax,0x6f6f20
 	0014d7f8 farcall ax
 	0014d800 farsubsp 0x1
 	0014d808 pop op
 	0014d810 sourceline 0x1024
 	0014d818 push op
 	0014d820 mov ax,0x2bc54b
 	0014d82c farpush ax
 	0014d834 mov mar,0xb9ef20
 	0014d840 mov ax,mar
 	0014d84c mov op,ax
 	0014d854 setfuncargs 0x1
 	0014d85c mov ax,0x6f6f20
 	0014d868 farcall ax
 	0014d870 farsubsp 0x1
 	0014d878 pop op
 	0014d880 sourceline 0x1025
 	0014d888 push op
 	0014d890 mov ax,0x2bc572
 	0014d89c farpush ax
 	0014d8a4 mov mar,0x3cef20
 	0014d8b0 mov ax,mar
 	0014d8bc mov op,ax
 	0014d8c4 setfuncargs 0x1
 	0014d8cc mov ax,0x6f6f20
 	0014d8d8 farcall ax
 	0014d8e0 farsubsp 0x1
 	0014d8e8 pop op
 	0014d8f0 sourceline 0x1026
 	0014d8f8 push op
 	0014d900 mov ax,0x2bc5b9
 	0014d90c farpush ax
 	0014d914 mov mar,0xb9ef20
 	0014d920 mov ax,mar
 	0014d92c mov op,ax
 	0014d934 setfuncargs 0x1
 	0014d93c mov ax,0x6f6f20
 	0014d948 farcall ax
 	0014d950 farsubsp 0x1
 	0014d958 pop op
 	0014d960 sourceline 0x1027
 	0014d968 push op
 	0014d970 mov ax,0x2bc5df
 	0014d97c farpush ax
 	0014d984 mov mar,0x3cef20
 	0014d990 mov ax,mar
 	0014d99c mov op,ax
 	0014d9a4 setfuncargs 0x1
 	0014d9ac mov ax,0x6f6f20
 	0014d9b8 farcall ax
 	0014d9c0 farsubsp 0x1
 	0014d9c8 pop op
 	0014d9d0 sourceline 0x1028
 	0014d9d8 push op
 	0014d9e0 mov ax,0x2bc63f
 	0014d9ec farpush ax
 	0014d9f4 mov mar,0xb9ef20
 	0014da00 mov ax,mar
 	0014da0c mov op,ax
 	0014da14 setfuncargs 0x1
 	0014da1c mov ax,0x6f6f20
 	0014da28 farcall ax
 	0014da30 farsubsp 0x1
 	0014da38 pop op
 	0014da40 sourceline 0x1029
 	0014da48 mov ax,0x1
 	0014da54 mov bx,ax
 	0014da60 mov mar,0x3cef20
 	0014da6c mov ax,mar
 	0014da78 push op
 	0014da80 mov op,ax
 	0014da88 farpush bx
 	0014da90 setfuncargs 0x1
 	0014da98 mov ax,0x69ef20
 	0014daa4 farcall ax
 	0014daac farsubsp 0x1
 	0014dab4 pop op
 	0014dabc sourceline 0x102a
 	0014dac4 push op
 	0014dacc mov ax,0x397
 	0014dad8 farpush ax
 	0014dae0 mov ax,0x0
 	0014daec farpush ax
 	0014daf4 mov mar,0x3cef20
 	0014db00 mov ax,mar
 	0014db0c mov op,ax
 	0014db14 setfuncargs 0x2
 	0014db1c mov ax,0x6eef20
 	0014db28 farcall ax
 	0014db30 farsubsp 0x2
 	0014db38 pop op
 	0014db40 sourceline 0x102b
 	0014db48 push op
 	0014db50 mov ax,0x2bc657
 	0014db5c farpush ax
 	0014db64 mov ax,0x138
 	0014db70 farpush ax
 	0014db78 mov ax,0x92
 	0014db84 farpush ax
 	0014db8c mov ax,0x0
 	0014db98 farpush ax
 	0014dba0 mov mar,0x3cef20
 	0014dbac mov ax,mar
 	0014dbb8 mov op,ax
 	0014dbc0 setfuncargs 0x4
 	0014dbc8 mov ax,0x6aef20
 	0014dbd4 farcall ax
 	0014dbdc farsubsp 0x4
 	0014dbe4 pop op
 	0014dbec sourceline 0x102c
 	0014dbf4 mov ax,0x3
 	0014dc00 mov mar,0xb8ef20
 	0014dc0c memwrite4 ax
		0014dc14: FALL_THROUGH

	[0014dc14]
		0014d3ac: UNCONDITIONAL_JUMP
		0014d400: FALL_THROUGH
 	0014dc14 sourceline 0x102e
 	0014dc1c jmp 0x0014df64
		0014df64: UNCONDITIONAL_JUMP

	[0014dc24]
		0014d320: CONDITIONAL_JUMP
 	0014dc24 sourceline 0x102f
 	0014dc2c mov mar,0xb8ef20
 	0014dc38 memread4 ax
 	0014dc40 push ax
 	0014dc48 mov ax,0x3
 	0014dc54 pop bx
 	0014dc5c cmpeq bx,ax
 	0014dc68 mov ax,bx
 	0014dc74 jz 0x0014df64
		0014df64: CONDITIONAL_JUMP
		0014dc7c: FALL_THROUGH

	[0014dc7c]
		0014dc24: FALL_THROUGH
 	0014dc7c sourceline 0x1031
 	0014dc84 mov mar,0xb9ef20
 	0014dc90 mov ax,mar
 	0014dc9c push op
 	0014dca4 mov op,ax
 	0014dcac setfuncargs 0x0
 	0014dcb4 mov ax,0x516f20
 	0014dcc0 farcall ax
 	0014dcc8 pop op
 	0014dcd0 push ax
 	0014dcd8 mov ax,0x72
 	0014dce4 pop bx
 	0014dcec cmpeq bx,ax
 	0014dcf8 mov ax,bx
 	0014dd04 jz 0x0014dda4
		0014dda4: CONDITIONAL_JUMP
		0014dd0c: FALL_THROUGH

	[0014dd0c]
		0014dc7c: FALL_THROUGH
 	0014dd0c push op
 	0014dd14 mov ax,0x397
 	0014dd20 farpush ax
 	0014dd28 mov ax,0x4e
 	0014dd34 farpush ax
 	0014dd3c mov ax,0xae
 	0014dd48 farpush ax
 	0014dd50 mov mar,0x3cef20
 	0014dd5c mov ax,mar
 	0014dd68 mov op,ax
 	0014dd70 setfuncargs 0x3
 	0014dd78 mov ax,0x726f20
 	0014dd84 farcall ax
 	0014dd8c farsubsp 0x3
 	0014dd94 pop op
 	0014dd9c jmp 0x0014de3c
		0014de3c: UNCONDITIONAL_JUMP

	[0014dda4]
		0014dc7c: CONDITIONAL_JUMP
 	0014dda4 sourceline 0x1032
 	0014ddac push op
 	0014ddb4 mov ax,0x397
 	0014ddc0 farpush ax
 	0014ddc8 mov ax,0x49
 	0014ddd4 farpush ax
 	0014dddc mov ax,0x4f
 	0014dde8 farpush ax
 	0014ddf0 mov mar,0x3cef20
 	0014ddfc mov ax,mar
 	0014de08 mov op,ax
 	0014de10 setfuncargs 0x3
 	0014de18 mov ax,0x726f20
 	0014de24 farcall ax
 	0014de2c farsubsp 0x3
 	0014de34 pop op
		0014de3c: FALL_THROUGH

	[0014de3c]
		0014dd0c: UNCONDITIONAL_JUMP
		0014dda4: FALL_THROUGH
 	0014de3c sourceline 0x1033
 	0014de44 mov ax,0x1
 	0014de50 mov bx,ax
 	0014de5c mov mar,0x3cef20
 	0014de68 mov ax,mar
 	0014de74 push op
 	0014de7c mov op,ax
 	0014de84 farpush bx
 	0014de8c setfuncargs 0x1
 	0014de94 mov ax,0x69ef20
 	0014dea0 farcall ax
 	0014dea8 farsubsp 0x1
 	0014deb0 pop op
 	0014deb8 sourceline 0x1034
 	0014dec0 push op
 	0014dec8 mov ax,0x2c798e
 	0014ded4 farpush ax
 	0014dedc mov ax,0x138
 	0014dee8 farpush ax
 	0014def0 mov ax,0x92
 	0014defc farpush ax
 	0014df04 mov ax,0x0
 	0014df10 farpush ax
 	0014df18 mov mar,0x3cef20
 	0014df24 mov ax,mar
 	0014df30 mov op,ax
 	0014df38 setfuncargs 0x4
 	0014df40 mov ax,0x6aef20
 	0014df4c farcall ax
 	0014df54 farsubsp 0x4
 	0014df5c pop op
		0014df64: FALL_THROUGH

	[0014df64]
		0014d310: UNCONDITIONAL_JUMP
		0014dc14: UNCONDITIONAL_JUMP
		0014dc24: CONDITIONAL_JUMP
		0014de3c: FALL_THROUGH
 	0014df64 sourceline 0x1036
 	0014df6c mov ax,0x0
 	0014df78 ret

cKosloff_Interact$0:
	[0014df7c]
 	0014df7c sourceline 0x103b
 	0014df84 thisaddr
 	0014df8c sourceline 0x103c
 	0014df94 setfuncargs 0x0
 	0014df9c mov ax,0x6def20
 	0014dfa8 farcall ax
 	0014dfb0 lnot ax
 	0014dfb8 jz 0x0014e014
		0014e014: CONDITIONAL_JUMP
		0014dfc0: FALL_THROUGH

	[0014dfc0]
		0014df7c: FALL_THROUGH
 	0014dfc0 mov ax,0x89
 	0014dfcc farpush ax
 	0014dfd4 mov ax,0xbc
 	0014dfe0 farpush ax
 	0014dfe8 setfuncargs 0x2
 	0014dff0 mov ax,0x6e6f20
 	0014dffc farcall ax
 	0014e004 farsubsp 0x2
 	0014e00c jmp 0x0014f9fc
		0014f9fc: UNCONDITIONAL_JUMP

	[0014e014]
		0014df7c: CONDITIONAL_JUMP
 	0014e014 sourceline 0x103f
 	0014e01c push op
 	0014e024 mov ax,0x131
 	0014e030 farpush ax
 	0014e038 mov ax,0x397
 	0014e044 farpush ax
 	0014e04c mov ax,0x89
 	0014e058 farpush ax
 	0014e060 mov ax,0xbc
 	0014e06c farpush ax
*	0014e074 mov mar,0x3cef20
 	0014e080 mov ax,mar
 	0014e08c mov op,ax
 	0014e094 setfuncargs 0x4
 	0014e09c mov ax,0xb2ef20
 	0014e0a8 farcall ax
 	0014e0b0 farsubsp 0x4
 	0014e0b8 pop op
 	0014e0c0 sourceline 0x1040
 	0014e0c8 push op
 	0014e0d0 mov ax,0x397
 	0014e0dc farpush ax
 	0014e0e4 mov ax,0x2
 	0014e0f0 farpush ax
 	0014e0f8 mov mar,0x3cef20
 	0014e104 mov ax,mar
 	0014e110 mov op,ax
 	0014e118 setfuncargs 0x2
 	0014e120 mov ax,0x6eef20
 	0014e12c farcall ax
 	0014e134 farsubsp 0x2
 	0014e13c pop op
 	0014e144 sourceline 0x1041
 	0014e14c mov ax,0x3
 	0014e158 mov bx,ax
 	0014e164 mov mar,0x3cef20
 	0014e170 mov ax,mar
 	0014e17c push op
 	0014e184 mov op,ax
 	0014e18c farpush bx
 	0014e194 setfuncargs 0x1
 	0014e19c mov ax,0x69ef20
 	0014e1a8 farcall ax
 	0014e1b0 farsubsp 0x1
 	0014e1b8 pop op
 	0014e1c0 sourceline 0x1042
 	0014e1c8 mov mar,0xba6f20
 	0014e1d4 memread4 ax
 	0014e1dc lnot ax
 	0014e1e4 jz 0x0014e40c
		0014e40c: CONDITIONAL_JUMP
		0014e1ec: FALL_THROUGH

	[0014e1ec]
		0014e014: FALL_THROUGH
 	0014e1ec sourceline 0x1044
 	0014e1f4 push op
 	0014e1fc mov ax,0x2c3881
 	0014e208 farpush ax
 	0014e210 mov mar,0x3cef20
 	0014e21c mov ax,mar
 	0014e228 mov op,ax
 	0014e230 setfuncargs 0x1
 	0014e238 mov ax,0x6f6f20
 	0014e244 farcall ax
 	0014e24c farsubsp 0x1
 	0014e254 pop op
 	0014e25c sourceline 0x1045
 	0014e264 push op
 	0014e26c mov ax,0x2c38a0
 	0014e278 farpush ax
 	0014e280 mov mar,0xbaef20
 	0014e28c mov ax,mar
 	0014e298 mov op,ax
 	0014e2a0 setfuncargs 0x1
 	0014e2a8 mov ax,0x6f6f20
 	0014e2b4 farcall ax
 	0014e2bc farsubsp 0x1
 	0014e2c4 pop op
 	0014e2cc sourceline 0x1046
 	0014e2d4 push op
 	0014e2dc mov ax,0x2c38d4
 	0014e2e8 farpush ax
 	0014e2f0 mov mar,0x3cef20
 	0014e2fc mov ax,mar
 	0014e308 mov op,ax
 	0014e310 setfuncargs 0x1
 	0014e318 mov ax,0x6f6f20
 	0014e324 farcall ax
 	0014e32c farsubsp 0x1
 	0014e334 pop op
 	0014e33c sourceline 0x1047
 	0014e344 push op
 	0014e34c mov ax,0x2c38de
 	0014e358 farpush ax
 	0014e360 mov mar,0xbaef20
 	0014e36c mov ax,mar
 	0014e378 mov op,ax
 	0014e380 setfuncargs 0x1
 	0014e388 mov ax,0x6f6f20
 	0014e394 farcall ax
 	0014e39c farsubsp 0x1
 	0014e3a4 pop op
 	0014e3ac sourceline 0x1048
 	0014e3b4 mov ax,0x1
 	0014e3c0 mov mar,0xba6f20
 	0014e3cc memwrite4 ax
 	0014e3d4 sourceline 0x1049
 	0014e3dc mov ax,0x1
 	0014e3e8 mov mar,0xbb6f20
 	0014e3f4 memwrite4 ax
 	0014e3fc sourceline 0x104a
 	0014e404 jmp 0x0014f9fc
		0014f9fc: UNCONDITIONAL_JUMP

	[0014e40c]
		0014e014: CONDITIONAL_JUMP
 	0014e40c sourceline 0x104d
 	0014e414 push op
 	0014e41c mov mar,0x906f20
 	0014e428 mov ax,mar
 	0014e434 farpush ax
 	0014e43c mov mar,0x3cef20
 	0014e448 mov ax,mar
 	0014e454 mov op,ax
 	0014e45c setfuncargs 0x1
 	0014e464 mov ax,0x996f20
 	0014e470 farcall ax
 	0014e478 farsubsp 0x1
 	0014e480 pop op
 	0014e488 jz 0x0014e68c
		0014e68c: CONDITIONAL_JUMP
		0014e490: FALL_THROUGH

	[0014e490]
		0014e40c: FALL_THROUGH
 	0014e490 sourceline 0x104f
 	0014e498 mov mar,0x74ef20
 	0014e4a4 memread4 ax
 	0014e4ac lnot ax
 	0014e4b4 jz 0x0014e554
		0014e554: CONDITIONAL_JUMP
		0014e4bc: FALL_THROUGH

	[0014e4bc]
		0014e490: FALL_THROUGH
 	0014e4bc sourceline 0x1051
 	0014e4c4 push op
 	0014e4cc mov ax,0x397
 	0014e4d8 farpush ax
 	0014e4e0 mov ax,0x8c
 	0014e4ec farpush ax
 	0014e4f4 mov ax,0xdf
 	0014e500 farpush ax
 	0014e508 mov mar,0x3cef20
 	0014e514 mov ax,mar
 	0014e520 mov op,ax
 	0014e528 setfuncargs 0x3
 	0014e530 mov ax,0x726f20
 	0014e53c farcall ax
 	0014e544 farsubsp 0x3
 	0014e54c pop op
		0014e554: FALL_THROUGH

	[0014e554]
		0014e490: CONDITIONAL_JUMP
		0014e4bc: FALL_THROUGH
 	0014e554 sourceline 0x1053
 	0014e55c mov ax,0x1
 	0014e568 mov bx,ax
 	0014e574 mov mar,0x3cef20
 	0014e580 mov ax,mar
 	0014e58c push op
 	0014e594 mov op,ax
 	0014e59c farpush bx
 	0014e5a4 setfuncargs 0x1
 	0014e5ac mov ax,0x69ef20
 	0014e5b8 farcall ax
 	0014e5c0 farsubsp 0x1
 	0014e5c8 pop op
 	0014e5d0 sourceline 0x1054
 	0014e5d8 push op
 	0014e5e0 mov ax,0x2bc7cb
 	0014e5ec farpush ax
 	0014e5f4 mov ax,0x138
 	0014e600 farpush ax
 	0014e608 mov ax,0x92
 	0014e614 farpush ax
 	0014e61c mov ax,0x0
 	0014e628 farpush ax
 	0014e630 mov mar,0x3cef20
 	0014e63c mov ax,mar
 	0014e648 mov op,ax
 	0014e650 setfuncargs 0x4
 	0014e658 mov ax,0x6aef20
 	0014e664 farcall ax
 	0014e66c farsubsp 0x4
 	0014e674 pop op
 	0014e67c sourceline 0x1055
 	0014e684 jmp 0x0014f9fc
		0014f9fc: UNCONDITIONAL_JUMP

	[0014e68c]
		0014e40c: CONDITIONAL_JUMP
 	0014e68c sourceline 0x1058
 	0014e694 mov mar,0xbbef20
 	0014e6a0 memread4 ax
 	0014e6a8 lnot ax
 	0014e6b0 jz 0x0014e8b4
		0014e8b4: CONDITIONAL_JUMP
		0014e6b8: FALL_THROUGH

	[0014e6b8]
		0014e68c: FALL_THROUGH
 	0014e6b8 sourceline 0x105a
 	0014e6c0 mov mar,0x74ef20
 	0014e6cc memread4 ax
 	0014e6d4 lnot ax
 	0014e6dc jz 0x0014e77c
		0014e77c: CONDITIONAL_JUMP
		0014e6e4: FALL_THROUGH

	[0014e6e4]
		0014e6b8: FALL_THROUGH
 	0014e6e4 sourceline 0x105c
 	0014e6ec push op
 	0014e6f4 mov ax,0x397
 	0014e700 farpush ax
 	0014e708 mov ax,0x8c
 	0014e714 farpush ax
 	0014e71c mov ax,0xdf
 	0014e728 farpush ax
 	0014e730 mov mar,0x3cef20
 	0014e73c mov ax,mar
 	0014e748 mov op,ax
 	0014e750 setfuncargs 0x3
 	0014e758 mov ax,0x726f20
 	0014e764 farcall ax
 	0014e76c farsubsp 0x3
 	0014e774 pop op
		0014e77c: FALL_THROUGH

	[0014e77c]
		0014e6b8: CONDITIONAL_JUMP
		0014e6e4: FALL_THROUGH
 	0014e77c sourceline 0x105e
 	0014e784 mov ax,0x1
 	0014e790 mov bx,ax
 	0014e79c mov mar,0x3cef20
 	0014e7a8 mov ax,mar
 	0014e7b4 push op
 	0014e7bc mov op,ax
 	0014e7c4 farpush bx
 	0014e7cc setfuncargs 0x1
 	0014e7d4 mov ax,0x69ef20
 	0014e7e0 farcall ax
 	0014e7e8 farsubsp 0x1
 	0014e7f0 pop op
 	0014e7f8 sourceline 0x105f
 	0014e800 push op
 	0014e808 mov ax,0x2bc7cb
 	0014e814 farpush ax
 	0014e81c mov ax,0x138
 	0014e828 farpush ax
 	0014e830 mov ax,0x92
 	0014e83c farpush ax
 	0014e844 mov ax,0x0
 	0014e850 farpush ax
 	0014e858 mov mar,0x3cef20
 	0014e864 mov ax,mar
 	0014e870 mov op,ax
 	0014e878 setfuncargs 0x4
 	0014e880 mov ax,0x6aef20
 	0014e88c farcall ax
 	0014e894 farsubsp 0x4
 	0014e89c pop op
 	0014e8a4 sourceline 0x1060
 	0014e8ac jmp 0x0014f9fc
		0014f9fc: UNCONDITIONAL_JUMP

	[0014e8b4]
		0014e68c: CONDITIONAL_JUMP
 	0014e8b4 sourceline 0x1063
 	0014e8bc mov ax,0x1
 	0014e8c8 mov mar,0x5eef20
 	0014e8d4 memwrite4 ax
 	0014e8dc sourceline 0x1064
 	0014e8e4 push op
 	0014e8ec mov ax,0x2bc800
 	0014e8f8 farpush ax
 	0014e900 mov mar,0x3cef20
 	0014e90c mov ax,mar
 	0014e918 mov op,ax
 	0014e920 setfuncargs 0x1
 	0014e928 mov ax,0x6f6f20
 	0014e934 farcall ax
 	0014e93c farsubsp 0x1
 	0014e944 pop op
 	0014e94c sourceline 0x1065
 	0014e954 push op
 	0014e95c mov ax,0x2bc825
 	0014e968 farpush ax
 	0014e970 mov mar,0xbaef20
 	0014e97c mov ax,mar
 	0014e988 mov op,ax
 	0014e990 setfuncargs 0x1
 	0014e998 mov ax,0x6f6f20
 	0014e9a4 farcall ax
 	0014e9ac farsubsp 0x1
 	0014e9b4 pop op
 	0014e9bc sourceline 0x1066
 	0014e9c4 push op
 	0014e9cc mov ax,0x2bc888
 	0014e9d8 farpush ax
 	0014e9e0 mov mar,0x3cef20
 	0014e9ec mov ax,mar
 	0014e9f8 mov op,ax
 	0014ea00 setfuncargs 0x1
 	0014ea08 mov ax,0x6f6f20
 	0014ea14 farcall ax
 	0014ea1c farsubsp 0x1
 	0014ea24 pop op
 	0014ea2c sourceline 0x1067
 	0014ea34 push op
 	0014ea3c mov ax,0x2bc89e
 	0014ea48 farpush ax
 	0014ea50 mov mar,0xbaef20
 	0014ea5c mov ax,mar
 	0014ea68 mov op,ax
 	0014ea70 setfuncargs 0x1
 	0014ea78 mov ax,0x6f6f20
 	0014ea84 farcall ax
 	0014ea8c farsubsp 0x1
 	0014ea94 pop op
 	0014ea9c sourceline 0x1068
 	0014eaa4 push op
 	0014eaac mov ax,0x2bc946
 	0014eab8 farpush ax
 	0014eac0 mov mar,0x3cef20
 	0014eacc mov ax,mar
 	0014ead8 mov op,ax
 	0014eae0 setfuncargs 0x1
 	0014eae8 mov ax,0x6f6f20
 	0014eaf4 farcall ax
 	0014eafc farsubsp 0x1
 	0014eb04 pop op
 	0014eb0c sourceline 0x1069
 	0014eb14 push op
 	0014eb1c mov ax,0x2bc95b
 	0014eb28 farpush ax
 	0014eb30 mov mar,0xbaef20
 	0014eb3c mov ax,mar
 	0014eb48 mov op,ax
 	0014eb50 setfuncargs 0x1
 	0014eb58 mov ax,0x6f6f20
 	0014eb64 farcall ax
 	0014eb6c farsubsp 0x1
 	0014eb74 pop op
 	0014eb7c sourceline 0x106a
 	0014eb84 push op
 	0014eb8c mov ax,0x2bc9a5
 	0014eb98 farpush ax
 	0014eba0 mov mar,0x3cef20
 	0014ebac mov ax,mar
 	0014ebb8 mov op,ax
 	0014ebc0 setfuncargs 0x1
 	0014ebc8 mov ax,0x6f6f20
 	0014ebd4 farcall ax
 	0014ebdc farsubsp 0x1
 	0014ebe4 pop op
 	0014ebec sourceline 0x106b
 	0014ebf4 push op
 	0014ebfc mov ax,0x2bc9c4
 	0014ec08 farpush ax
 	0014ec10 mov mar,0xbaef20
 	0014ec1c mov ax,mar
 	0014ec28 mov op,ax
 	0014ec30 setfuncargs 0x1
 	0014ec38 mov ax,0x6f6f20
 	0014ec44 farcall ax
 	0014ec4c farsubsp 0x1
 	0014ec54 pop op
 	0014ec5c sourceline 0x106c
 	0014ec64 push op
 	0014ec6c mov ax,0x7
 	0014ec78 farpush ax
 	0014ec80 mov mar,0x3cef20
 	0014ec8c mov ax,mar
 	0014ec98 mov op,ax
 	0014eca0 setfuncargs 0x1
 	0014eca8 mov ax,0x51ef20
 	0014ecb4 farcall ax
 	0014ecbc farsubsp 0x1
 	0014ecc4 pop op
 	0014eccc sourceline 0x106d
 	0014ecd4 mov ax,0x81
 	0014ece0 mov bx,ax
 	0014ecec mov mar,0x3cef20
 	0014ecf8 mov ax,mar
 	0014ed04 push op
 	0014ed0c mov op,ax
 	0014ed14 farpush bx
 	0014ed1c setfuncargs 0x1
 	0014ed24 mov ax,0x526f20
 	0014ed30 farcall ax
 	0014ed38 farsubsp 0x1
 	0014ed40 pop op
 	0014ed48 sourceline 0x106e
 	0014ed50 mov ax,0xc5
 	0014ed5c mov bx,ax
 	0014ed68 mov mar,0x3cef20
 	0014ed74 mov ax,mar
 	0014ed80 push op
 	0014ed88 mov op,ax
 	0014ed90 farpush bx
 	0014ed98 setfuncargs 0x1
 	0014eda0 mov ax,0x70ef20
 	0014edac farcall ax
 	0014edb4 farsubsp 0x1
 	0014edbc pop op
 	0014edc4 sourceline 0x106f
 	0014edcc push op
 	0014edd4 mov ax,0x7a
 	0014ede0 farpush ax
 	0014ede8 mov mar,0xbaef20
 	0014edf4 mov ax,mar
 	0014ee00 mov op,ax
 	0014ee08 setfuncargs 0x1
 	0014ee10 mov ax,0x51ef20
 	0014ee1c farcall ax
 	0014ee24 farsubsp 0x1
 	0014ee2c pop op
 	0014ee34 sourceline 0x1070
 	0014ee3c mov ax,0x83
 	0014ee48 mov bx,ax
 	0014ee54 mov mar,0xbaef20
 	0014ee60 mov ax,mar
 	0014ee6c push op
 	0014ee74 mov op,ax
 	0014ee7c farpush bx
 	0014ee84 setfuncargs 0x1
 	0014ee8c mov ax,0x526f20
 	0014ee98 farcall ax
 	0014eea0 farsubsp 0x1
 	0014eea8 pop op
 	0014eeb0 sourceline 0x1071
 	0014eeb8 mov ax,0xd7
 	0014eec4 mov bx,ax
 	0014eed0 mov mar,0xbaef20
 	0014eedc mov ax,mar
 	0014eee8 push op
 	0014eef0 mov op,ax
 	0014eef8 farpush bx
 	0014ef00 setfuncargs 0x1
 	0014ef08 mov ax,0x70ef20
 	0014ef14 farcall ax
 	0014ef1c farsubsp 0x1
 	0014ef24 pop op
 	0014ef2c sourceline 0x1072
 	0014ef34 push op
 	0014ef3c mov ax,0x426
 	0014ef48 farpush ax
 	0014ef50 mov ax,0x398
 	0014ef5c farpush ax
 	0014ef64 mov ax,0x0
 	0014ef70 farpush ax
 	0014ef78 mov ax,0x4
 	0014ef84 farpush ax
 	0014ef8c mov ax,0x0
 	0014ef98 farpush ax
 	0014efa0 mov mar,0xbaef20
 	0014efac mov ax,mar
 	0014efb8 mov op,ax
 	0014efc0 setfuncargs 0x5
 	0014efc8 mov ax,0x536f20
 	0014efd4 farcall ax
 	0014efdc farsubsp 0x5
 	0014efe4 pop op
 	0014efec sourceline 0x1073
 	0014eff4 push op
 	0014effc mov ax,0x426
 	0014f008 farpush ax
 	0014f010 mov ax,0x398
 	0014f01c farpush ax
 	0014f024 mov ax,0x0
 	0014f030 farpush ax
 	0014f038 mov ax,0x3
 	0014f044 farpush ax
 	0014f04c mov ax,0x5
 	0014f058 farpush ax
 	0014f060 mov mar,0x3cef20
 	0014f06c mov ax,mar
 	0014f078 mov op,ax
 	0014f080 setfuncargs 0x5
 	0014f088 mov ax,0x536f20
 	0014f094 farcall ax
 	0014f09c farsubsp 0x5
 	0014f0a4 pop op
 	0014f0ac sourceline 0x1074
 	0014f0b4 mov ax,0x19
 	0014f0c0 farpush ax
 	0014f0c8 setfuncargs 0x1
 	0014f0d0 mov ax,0x426f20
 	0014f0dc farcall ax
 	0014f0e4 farsubsp 0x1
 	0014f0ec sourceline 0x1075
 	0014f0f4 push op
 	0014f0fc mov ax,0x7cfe
 	0014f108 farpush ax
 	0014f110 mov mar,0x906f20
 	0014f11c mov ax,mar
 	0014f128 farpush ax
 	0014f130 mov mar,0x3cef20
 	0014f13c mov ax,mar
 	0014f148 mov op,ax
 	0014f150 setfuncargs 0x2
 	0014f158 mov ax,0x7e6f20
 	0014f164 farcall ax
 	0014f16c farsubsp 0x2
 	0014f174 pop op
 	0014f17c sourceline 0x1076
 	0014f184 push op
 	0014f18c mov ax,0x427
 	0014f198 farpush ax
 	0014f1a0 mov ax,0x398
 	0014f1ac farpush ax
 	0014f1b4 mov ax,0x0
 	0014f1c0 farpush ax
 	0014f1c8 mov ax,0x3
 	0014f1d4 farpush ax
 	0014f1dc mov ax,0x5
 	0014f1e8 farpush ax
 	0014f1f0 mov mar,0x3cef20
 	0014f1fc mov ax,mar
 	0014f208 mov op,ax
 	0014f210 setfuncargs 0x5
 	0014f218 mov ax,0x536f20
 	0014f224 farcall ax
 	0014f22c farsubsp 0x5
 	0014f234 pop op
 	0014f23c sourceline 0x1077
 	0014f244 push op
 	0014f24c mov ax,0x427
 	0014f258 farpush ax
 	0014f260 mov ax,0x397
 	0014f26c farpush ax
 	0014f274 mov ax,0x0
 	0014f280 farpush ax
 	0014f288 mov ax,0x4
 	0014f294 farpush ax
 	0014f29c mov ax,0x0
 	0014f2a8 farpush ax
 	0014f2b0 mov mar,0xbaef20
 	0014f2bc mov ax,mar
 	0014f2c8 mov op,ax
 	0014f2d0 setfuncargs 0x5
 	0014f2d8 mov ax,0x536f20
 	0014f2e4 farcall ax
 	0014f2ec farsubsp 0x5
 	0014f2f4 pop op
 	0014f2fc sourceline 0x1078
 	0014f304 push op
 	0014f30c mov ax,0x2
 	0014f318 farpush ax
 	0014f320 mov mar,0x3cef20
 	0014f32c mov ax,mar
 	0014f338 mov op,ax
 	0014f340 setfuncargs 0x1
 	0014f348 mov ax,0x51ef20
 	0014f354 farcall ax
 	0014f35c farsubsp 0x1
 	0014f364 pop op
 	0014f36c sourceline 0x1079
 	0014f374 mov ax,0x2
 	0014f380 mov bx,ax
 	0014f38c mov mar,0x3cef20
 	0014f398 mov ax,mar
 	0014f3a4 push op
 	0014f3ac mov op,ax
 	0014f3b4 farpush bx
 	0014f3bc setfuncargs 0x1
 	0014f3c4 mov ax,0x766f20
 	0014f3d0 farcall ax
 	0014f3d8 farsubsp 0x1
 	0014f3e0 pop op
 	0014f3e8 sourceline 0x107a
 	0014f3f0 mov ax,0x89
 	0014f3fc mov bx,ax
 	0014f408 mov mar,0x3cef20
 	0014f414 mov ax,mar
 	0014f420 push op
 	0014f428 mov op,ax
 	0014f430 farpush bx
 	0014f438 setfuncargs 0x1
 	0014f440 mov ax,0x526f20
 	0014f44c farcall ax
 	0014f454 farsubsp 0x1
 	0014f45c pop op
 	0014f464 sourceline 0x107b
 	0014f46c mov ax,0xbc
 	0014f478 mov bx,ax
 	0014f484 mov mar,0x3cef20
 	0014f490 mov ax,mar
 	0014f49c push op
 	0014f4a4 mov op,ax
 	0014f4ac farpush bx
 	0014f4b4 setfuncargs 0x1
 	0014f4bc mov ax,0x70ef20
 	0014f4c8 farcall ax
 	0014f4d0 farsubsp 0x1
 	0014f4d8 pop op
 	0014f4e0 sourceline 0x107c
 	0014f4e8 push op
 	0014f4f0 mov ax,0x79
 	0014f4fc farpush ax
 	0014f504 mov mar,0xbaef20
 	0014f510 mov ax,mar
 	0014f51c mov op,ax
 	0014f524 setfuncargs 0x1
 	0014f52c mov ax,0x51ef20
 	0014f538 farcall ax
 	0014f540 farsubsp 0x1
 	0014f548 pop op
 	0014f550 sourceline 0x107d
 	0014f558 mov ax,0xdb
 	0014f564 mov bx,ax
 	0014f570 mov mar,0xbaef20
 	0014f57c mov ax,mar
 	0014f588 push op
 	0014f590 mov op,ax
 	0014f598 farpush bx
 	0014f5a0 setfuncargs 0x1
 	0014f5a8 mov ax,0x70ef20
 	0014f5b4 farcall ax
 	0014f5bc farsubsp 0x1
 	0014f5c4 pop op
 	0014f5cc sourceline 0x107e
 	0014f5d4 mov ax,0x85
 	0014f5e0 mov bx,ax
 	0014f5ec mov mar,0xbaef20
 	0014f5f8 mov ax,mar
 	0014f604 push op
 	0014f60c mov op,ax
 	0014f614 farpush bx
 	0014f61c setfuncargs 0x1
 	0014f624 mov ax,0x526f20
 	0014f630 farcall ax
 	0014f638 farsubsp 0x1
 	0014f640 pop op
 	0014f648 sourceline 0x107f
 	0014f650 mov ax,0x1
 	0014f65c mov mar,0x84ef20
 	0014f668 memwrite4 ax
 	0014f670 sourceline 0x1080
 	0014f678 mov ax,0x0
 	0014f684 mov bx,ax
 	0014f690 mov mar,0xbaef20
 	0014f69c mov ax,mar
 	0014f6a8 push op
 	0014f6b0 mov op,ax
 	0014f6b8 farpush bx
 	0014f6c0 setfuncargs 0x1
 	0014f6c8 mov ax,0xbc6f20
 	0014f6d4 farcall ax
 	0014f6dc farsubsp 0x1
 	0014f6e4 pop op
 	0014f6ec sourceline 0x1081
 	0014f6f4 mov ax,0x1
 	0014f700 mov mar,0xbcef20
 	0014f70c memwrite4 ax
 	0014f714 sourceline 0x1082
 	0014f71c mov ax,0x2
 	0014f728 farpush ax
 	0014f730 setfuncargs 0x1
 	0014f738 mov ax,0xbd6f20
 	0014f744 farcall ax
 	0014f74c farsubsp 0x1
 	0014f754 sourceline 0x1085
 	0014f75c push op
 	0014f764 mov ax,0x130
 	0014f770 farpush ax
 	0014f778 mov ax,0x398
 	0014f784 farpush ax
 	0014f78c mov ax,0x7f
 	0014f798 farpush ax
 	0014f7a0 mov ax,0x2c
 	0014f7ac farpush ax
 	0014f7b4 mov mar,0xbaef20
 	0014f7c0 mov ax,mar
 	0014f7cc mov op,ax
 	0014f7d4 setfuncargs 0x4
 	0014f7dc mov ax,0xb2ef20
 	0014f7e8 farcall ax
 	0014f7f0 farsubsp 0x4
 	0014f7f8 pop op
 	0014f800 sourceline 0x1087
 	0014f808 mov ax,0x0
 	0014f814 mov mar,0x5eef20
 	0014f820 memwrite4 ax
 	0014f828 sourceline 0x1088
 	0014f830 mov ax,0x1
 	0014f83c mov bx,ax
 	0014f848 mov mar,0x3cef20
 	0014f854 mov ax,mar
 	0014f860 push op
 	0014f868 mov op,ax
 	0014f870 farpush bx
 	0014f878 setfuncargs 0x1
 	0014f880 mov ax,0x69ef20
 	0014f88c farcall ax
 	0014f894 farsubsp 0x1
 	0014f89c pop op
 	0014f8a4 sourceline 0x1089
 	0014f8ac push op
 	0014f8b4 mov ax,0x2bca3e
 	0014f8c0 farpush ax
 	0014f8c8 mov ax,0x138
 	0014f8d4 farpush ax
 	0014f8dc mov ax,0x92
 	0014f8e8 farpush ax
 	0014f8f0 mov ax,0x0
 	0014f8fc farpush ax
 	0014f904 mov mar,0x3cef20
 	0014f910 mov ax,mar
 	0014f91c mov op,ax
 	0014f924 setfuncargs 0x4
 	0014f92c mov ax,0x6aef20
 	0014f938 farcall ax
 	0014f940 farsubsp 0x4
 	0014f948 pop op
 	0014f950 sourceline 0x108a
 	0014f958 push op
 	0014f960 mov ax,0x2bcb1e
 	0014f96c farpush ax
 	0014f974 mov ax,0x138
 	0014f980 farpush ax
 	0014f988 mov ax,0x92
 	0014f994 farpush ax
 	0014f99c mov ax,0x0
 	0014f9a8 farpush ax
 	0014f9b0 mov mar,0x3cef20
 	0014f9bc mov ax,mar
 	0014f9c8 mov op,ax
 	0014f9d0 setfuncargs 0x4
 	0014f9d8 mov ax,0x6aef20
 	0014f9e4 farcall ax
 	0014f9ec farsubsp 0x4
 	0014f9f4 pop op
		0014f9fc: FALL_THROUGH

	[0014f9fc]
		0014dfc0: UNCONDITIONAL_JUMP
		0014e1ec: UNCONDITIONAL_JUMP
		0014e554: UNCONDITIONAL_JUMP
		0014e77c: UNCONDITIONAL_JUMP
		0014e8b4: FALL_THROUGH
 	0014f9fc sourceline 0x108f
 	0014fa04 mov ax,0x0
 	0014fa10 ret

cButcher_Interact$0:
	[0014fa14]
 	0014fa14 sourceline 0x1095
 	0014fa1c thisaddr
 	0014fa24 sourceline 0x1096
 	0014fa2c setfuncargs 0x0
 	0014fa34 mov ax,0x6def20
 	0014fa40 farcall ax
 	0014fa48 lnot ax
 	0014fa50 jz 0x0014faac
		0014faac: CONDITIONAL_JUMP
		0014fa58: FALL_THROUGH

	[0014fa58]
		0014fa14: FALL_THROUGH
 	0014fa58 mov ax,0x8c
 	0014fa64 farpush ax
 	0014fa6c mov ax,0xe5
 	0014fa78 farpush ax
 	0014fa80 setfuncargs 0x2
 	0014fa88 mov ax,0x6e6f20
 	0014fa94 farcall ax
 	0014fa9c farsubsp 0x2
 	0014faa4 jmp 0x0014fe7c
		0014fe7c: UNCONDITIONAL_JUMP

	[0014faac]
		0014fa14: CONDITIONAL_JUMP
 	0014faac sourceline 0x1099
 	0014fab4 mov ax,0x3
 	0014fac0 mov bx,ax
*	0014facc mov mar,0x3cef20
 	0014fad8 mov ax,mar
 	0014fae4 push op
 	0014faec mov op,ax
 	0014faf4 farpush bx
 	0014fafc setfuncargs 0x1
 	0014fb04 mov ax,0x69ef20
 	0014fb10 farcall ax
 	0014fb18 farsubsp 0x1
 	0014fb20 pop op
 	0014fb28 sourceline 0x109a
 	0014fb30 push op
 	0014fb38 mov ax,0x397
 	0014fb44 farpush ax
 	0014fb4c mov ax,0x2
 	0014fb58 farpush ax
 	0014fb60 mov mar,0x3cef20
 	0014fb6c mov ax,mar
 	0014fb78 mov op,ax
 	0014fb80 setfuncargs 0x2
 	0014fb88 mov ax,0x6eef20
 	0014fb94 farcall ax
 	0014fb9c farsubsp 0x2
 	0014fba4 pop op
 	0014fbac sourceline 0x109b
 	0014fbb4 push op
 	0014fbbc mov ax,0x426
 	0014fbc8 farpush ax
 	0014fbd0 mov ax,0x397
 	0014fbdc farpush ax
 	0014fbe4 mov ax,0x0
 	0014fbf0 farpush ax
 	0014fbf8 mov ax,0x3
 	0014fc04 farpush ax
 	0014fc0c mov ax,0x0
 	0014fc18 farpush ax
 	0014fc20 mov mar,0xbdef20
 	0014fc2c mov ax,mar
 	0014fc38 mov op,ax
 	0014fc40 setfuncargs 0x5
 	0014fc48 mov ax,0x536f20
 	0014fc54 farcall ax
 	0014fc5c farsubsp 0x5
 	0014fc64 pop op
 	0014fc6c sourceline 0x109c
 	0014fc74 push op
 	0014fc7c mov ax,0x2bcb8f
 	0014fc88 farpush ax
 	0014fc90 mov mar,0x3cef20
 	0014fc9c mov ax,mar
 	0014fca8 mov op,ax
 	0014fcb0 setfuncargs 0x1
 	0014fcb8 mov ax,0x6f6f20
 	0014fcc4 farcall ax
 	0014fccc farsubsp 0x1
 	0014fcd4 pop op
 	0014fcdc sourceline 0x109d
 	0014fce4 push op
 	0014fcec mov ax,0x2bcba3
 	0014fcf8 farpush ax
 	0014fd00 mov mar,0xbdef20
 	0014fd0c mov ax,mar
 	0014fd18 mov op,ax
 	0014fd20 setfuncargs 0x1
 	0014fd28 mov ax,0x6f6f20
 	0014fd34 farcall ax
 	0014fd3c farsubsp 0x1
 	0014fd44 pop op
 	0014fd4c sourceline 0x109e
 	0014fd54 push op
 	0014fd5c mov ax,0x2bcbd6
 	0014fd68 farpush ax
 	0014fd70 mov mar,0x3cef20
 	0014fd7c mov ax,mar
 	0014fd88 mov op,ax
 	0014fd90 setfuncargs 0x1
 	0014fd98 mov ax,0x6f6f20
 	0014fda4 farcall ax
 	0014fdac farsubsp 0x1
 	0014fdb4 pop op
 	0014fdbc sourceline 0x109f
 	0014fdc4 push op
 	0014fdcc mov ax,0x427
 	0014fdd8 farpush ax
 	0014fde0 mov ax,0x397
 	0014fdec farpush ax
 	0014fdf4 mov ax,0x0
 	0014fe00 farpush ax
 	0014fe08 mov ax,0x3
 	0014fe14 farpush ax
 	0014fe1c mov ax,0x0
 	0014fe28 farpush ax
 	0014fe30 mov mar,0xbdef20
 	0014fe3c mov ax,mar
 	0014fe48 mov op,ax
 	0014fe50 setfuncargs 0x5
 	0014fe58 mov ax,0x536f20
 	0014fe64 farcall ax
 	0014fe6c farsubsp 0x5
 	0014fe74 pop op
		0014fe7c: FALL_THROUGH

	[0014fe7c]
		0014fa58: UNCONDITIONAL_JUMP
		0014faac: FALL_THROUGH
 	0014fe7c sourceline 0x10a1
 	0014fe84 mov ax,0x0
 	0014fe90 ret

cVegetableSeller_Interact$0:
	[0014fe94]
 	0014fe94 sourceline 0x10a6
 	0014fe9c thisaddr
 	0014fea4 sourceline 0x10a7
 	0014feac push op
 	0014feb4 mov ax,0x1
 	0014fec0 farpush ax
*	0014fec8 mov mar,0xbe6f20
 	0014fed4 mov ax,mar
 	0014fee0 mov op,ax
 	0014fee8 setfuncargs 0x1
 	0014fef0 mov ax,0x6d6f20
 	0014fefc farcall ax
 	0014ff04 farsubsp 0x1
 	0014ff0c pop op
 	0014ff14 lnot ax
 	0014ff1c jnz 0x0014ffbc
		0014ffbc: CONDITIONAL_JUMP
		0014ff24: FALL_THROUGH

	[0014ff24]
		0014fe94: FALL_THROUGH
 	0014ff24 push ax
 	0014ff2c push op
 	0014ff34 mov ax,0x2
 	0014ff40 farpush ax
 	0014ff48 mov mar,0xbe6f20
 	0014ff54 mov ax,mar
 	0014ff60 mov op,ax
 	0014ff68 setfuncargs 0x1
 	0014ff70 mov ax,0x6d6f20
 	0014ff7c farcall ax
 	0014ff84 farsubsp 0x1
 	0014ff8c pop op
 	0014ff94 lnot ax
 	0014ff9c pop bx
 	0014ffa4 lor bx,ax
 	0014ffb0 mov ax,bx
		0014ffbc: FALL_THROUGH

	[0014ffbc]
		0014fe94: CONDITIONAL_JUMP
		0014ff24: FALL_THROUGH
 	0014ffbc jz 0x00151c24
		00151c24: CONDITIONAL_JUMP
		0014ffc4: FALL_THROUGH

	[0014ffc4]
		0014ffbc: FALL_THROUGH
 	0014ffc4 sourceline 0x10a9
 	0014ffcc setfuncargs 0x0
 	0014ffd4 mov ax,0x6def20
 	0014ffe0 farcall ax
 	0014ffe8 lnot ax
 	0014fff0 jz 0x0015004c
		0015004c: CONDITIONAL_JUMP
		0014fff8: FALL_THROUGH

	[0014fff8]
		0014ffc4: FALL_THROUGH
 	0014fff8 mov ax,0x8f
 	00150004 farpush ax
 	0015000c mov ax,0x56
 	00150018 farpush ax
 	00150020 setfuncargs 0x2
 	00150028 mov ax,0x6e6f20
 	00150034 farcall ax
 	0015003c farsubsp 0x2
 	00150044 jmp 0x00151c14
		00151c14: UNCONDITIONAL_JUMP

	[0015004c]
		0014ffc4: CONDITIONAL_JUMP
 	0015004c sourceline 0x10ac
 	00150054 push op
 	0015005c mov ax,0x397
 	00150068 farpush ax
 	00150070 mov ax,0x7
 	0015007c farpush ax
 	00150084 mov mar,0x3cef20
 	00150090 mov ax,mar
 	0015009c mov op,ax
 	001500a4 setfuncargs 0x2
 	001500ac mov ax,0x6eef20
 	001500b8 farcall ax
 	001500c0 farsubsp 0x2
 	001500c8 pop op
 	001500d0 sourceline 0x10ad
 	001500d8 mov ax,0x3
 	001500e4 mov bx,ax
 	001500f0 mov mar,0x3cef20
 	001500fc mov ax,mar
 	00150108 push op
 	00150110 mov op,ax
 	00150118 farpush bx
 	00150120 setfuncargs 0x1
 	00150128 mov ax,0x69ef20
 	00150134 farcall ax
 	0015013c farsubsp 0x1
 	00150144 pop op
 	0015014c sourceline 0x10ae
 	00150154 mov ax,0x0
 	00150160 assertlte ax,0x28
 	0015016c mul ax,0x8
 	00150178 mov cx,ax
 	00150184 mov mar,0x6fef20
 	00150190 add mar,cx
 	0015019c mov ax,mar
 	001501a8 push op
 	001501b0 mov op,ax
 	001501b8 setfuncargs 0x0
 	001501c0 mov ax,0xbeef20
 	001501cc farcall ax
 	001501d4 pop op
 	001501dc push ax
 	001501e4 mov ax,0x8c
 	001501f0 pop bx
 	001501f8 cmpneq bx,ax
 	00150204 mov ax,bx
 	00150210 jz 0x0015028c
		0015028c: CONDITIONAL_JUMP
		00150218: FALL_THROUGH

	[00150218]
		0015004c: FALL_THROUGH
 	00150218 mov ax,0x0
 	00150224 mov mar,0xbf6f20
 	00150230 memwrite4 ax
 	00150238 push op
 	00150240 mov mar,0xbe6f20
 	0015024c mov ax,mar
 	00150258 mov op,ax
 	00150260 setfuncargs 0x0
 	00150268 mov ax,0x71ef20
 	00150274 farcall ax
 	0015027c pop op
 	00150284 jmp 0x00151c14
		00151c14: UNCONDITIONAL_JUMP

	[0015028c]
		0015004c: CONDITIONAL_JUMP
 	0015028c sourceline 0x10b1
 	00150294 mov mar,0xbfef20
 	001502a0 memread4 ax
 	001502a8 lnot ax
 	001502b0 jz 0x001519f0
		001519f0: CONDITIONAL_JUMP
		001502b8: FALL_THROUGH

	[001502b8]
		0015028c: FALL_THROUGH
 	001502b8 sourceline 0x10b3
 	001502c0 mov ax,0x1
 	001502cc mov mar,0x5eef20
 	001502d8 memwrite4 ax
 	001502e0 sourceline 0x10b4
 	001502e8 push op
 	001502f0 mov ax,0x2bcd9a
 	001502fc farpush ax
 	00150304 mov mar,0x3cef20
 	00150310 mov ax,mar
 	0015031c mov op,ax
 	00150324 setfuncargs 0x1
 	0015032c mov ax,0x6f6f20
 	00150338 farcall ax
 	00150340 farsubsp 0x1
 	00150348 pop op
 	00150350 sourceline 0x10b5
 	00150358 push op
 	00150360 mov ax,0x2bcdf7
 	0015036c farpush ax
 	00150374 mov mar,0xc06f20
 	00150380 mov ax,mar
 	0015038c mov op,ax
 	00150394 setfuncargs 0x1
 	0015039c mov ax,0x6f6f20
 	001503a8 farcall ax
 	001503b0 farsubsp 0x1
 	001503b8 pop op
 	001503c0 sourceline 0x10b6
 	001503c8 push op
 	001503d0 mov ax,0x2bce11
 	001503dc farpush ax
 	001503e4 mov mar,0xc06f20
 	001503f0 mov ax,mar
 	001503fc mov op,ax
 	00150404 setfuncargs 0x1
 	0015040c mov ax,0x6f6f20
 	00150418 farcall ax
 	00150420 farsubsp 0x1
 	00150428 pop op
 	00150430 sourceline 0x10b7
 	00150438 mov ax,0x2
 	00150444 farpush ax
 	0015044c setfuncargs 0x1
 	00150454 mov ax,0xbd6f20
 	00150460 farcall ax
 	00150468 farsubsp 0x1
 	00150470 sourceline 0x10b8
 	00150478 push op
 	00150480 mov ax,0x85
 	0015048c farpush ax
 	00150494 mov mar,0xc06f20
 	001504a0 mov ax,mar
 	001504ac mov op,ax
 	001504b4 setfuncargs 0x1
 	001504bc mov ax,0x51ef20
 	001504c8 farcall ax
 	001504d0 farsubsp 0x1
 	001504d8 pop op
 	001504e0 sourceline 0x10b9
 	001504e8 mov ax,0x5a
 	001504f4 farpush ax
 	001504fc mov ax,0xb
 	00150508 farpush ax
 	00150510 setfuncargs 0x2
 	00150518 mov ax,0xc0ef20
 	00150524 farcall ax
 	0015052c farsubsp 0x2
 	00150534 sourceline 0x10ba
 	0015053c push op
 	00150544 mov ax,0x131
 	00150550 farpush ax
 	00150558 mov ax,0x397
 	00150564 farpush ax
 	0015056c mov ax,0x88
 	00150578 farpush ax
 	00150580 mov ax,0xdf
 	0015058c farpush ax
 	00150594 mov mar,0xc06f20
 	001505a0 mov ax,mar
 	001505ac mov op,ax
 	001505b4 setfuncargs 0x4
 	001505bc mov ax,0xb2ef20
 	001505c8 farcall ax
 	001505d0 farsubsp 0x4
 	001505d8 pop op
 	001505e0 sourceline 0x10bb
 	001505e8 push op
 	001505f0 mov ax,0x426
 	001505fc farpush ax
 	00150604 mov ax,0x397
 	00150610 farpush ax
 	00150618 mov ax,0x0
 	00150624 farpush ax
 	0015062c mov ax,0x3
 	00150638 farpush ax
 	00150640 mov ax,0x0
 	0015064c farpush ax
 	00150654 mov mar,0xbdef20
 	00150660 mov ax,mar
 	0015066c mov op,ax
 	00150674 setfuncargs 0x5
 	0015067c mov ax,0x536f20
 	00150688 farcall ax
 	00150690 farsubsp 0x5
 	00150698 pop op
 	001506a0 sourceline 0x10bd
 	001506a8 push op
 	001506b0 mov ax,0x86
 	001506bc farpush ax
 	001506c4 mov mar,0xc06f20
 	001506d0 mov ax,mar
 	001506dc mov op,ax
 	001506e4 setfuncargs 0x1
 	001506ec mov ax,0x51ef20
 	001506f8 farcall ax
 	00150700 farsubsp 0x1
 	00150708 pop op
 	00150710 sourceline 0x10be
 	00150718 mov mar,0xc06f20
 	00150724 mov ax,mar
 	00150730 push op
 	00150738 mov op,ax
 	00150740 setfuncargs 0x0
 	00150748 mov ax,0xb36f20
 	00150754 farcall ax
 	0015075c pop op
 	00150764 push ax
 	0015076c mov ax,0xc
 	00150778 pop bx
 	00150780 add bx,ax
 	0015078c mov ax,bx
 	00150798 mov bx,ax
 	001507a4 mov mar,0xc06f20
 	001507b0 mov ax,mar
 	001507bc push op
 	001507c4 mov op,ax
 	001507cc farpush bx
 	001507d4 setfuncargs 0x1
 	001507dc mov ax,0x70ef20
 	001507e8 farcall ax
 	001507f0 farsubsp 0x1
 	001507f8 pop op
 	00150800 sourceline 0x10bf
 	00150808 mov ax,0x87
 	00150814 mov bx,ax
 	00150820 mov mar,0xc06f20
 	0015082c mov ax,mar
 	00150838 push op
 	00150840 mov op,ax
 	00150848 farpush bx
 	00150850 setfuncargs 0x1
 	00150858 mov ax,0x526f20
 	00150864 farcall ax
 	0015086c farsubsp 0x1
 	00150874 pop op
 	0015087c sourceline 0x10c0
 	00150884 push op
 	0015088c mov ax,0x426
 	00150898 farpush ax
 	001508a0 mov ax,0x397
 	001508ac farpush ax
 	001508b4 mov ax,0x0
 	001508c0 farpush ax
 	001508c8 mov ax,0x3
 	001508d4 farpush ax
 	001508dc mov ax,0x0
 	001508e8 farpush ax
 	001508f0 mov mar,0xc06f20
 	001508fc mov ax,mar
 	00150908 mov op,ax
 	00150910 setfuncargs 0x5
 	00150918 mov ax,0x536f20
 	00150924 farcall ax
 	0015092c farsubsp 0x5
 	00150934 pop op
 	0015093c sourceline 0x10c1
 	00150944 push op
 	0015094c mov ax,0x2bce27
 	00150958 farpush ax
 	00150960 mov mar,0xc06f20
 	0015096c mov ax,mar
 	00150978 mov op,ax
 	00150980 setfuncargs 0x1
 	00150988 mov ax,0x6f6f20
 	00150994 farcall ax
 	0015099c farsubsp 0x1
 	001509a4 pop op
 	001509ac sourceline 0x10c3
 	001509b4 push op
 	001509bc mov ax,0x2bce5b
 	001509c8 farpush ax
 	001509d0 mov mar,0xbdef20
 	001509dc mov ax,mar
 	001509e8 mov op,ax
 	001509f0 setfuncargs 0x1
 	001509f8 mov ax,0x6f6f20
 	00150a04 farcall ax
 	00150a0c farsubsp 0x1
 	00150a14 pop op
 	00150a1c sourceline 0x10c4
 	00150a24 push op
 	00150a2c mov ax,0x427
 	00150a38 farpush ax
 	00150a40 mov ax,0x397
 	00150a4c farpush ax
 	00150a54 mov ax,0x0
 	00150a60 farpush ax
 	00150a68 mov ax,0x3
 	00150a74 farpush ax
 	00150a7c mov ax,0x0
 	00150a88 farpush ax
 	00150a90 mov mar,0xc06f20
 	00150a9c mov ax,mar
 	00150aa8 mov op,ax
 	00150ab0 setfuncargs 0x5
 	00150ab8 mov ax,0x536f20
 	00150ac4 farcall ax
 	00150acc farsubsp 0x5
 	00150ad4 pop op
 	00150adc sourceline 0x10c5
 	00150ae4 push op
 	00150aec mov ax,0x88
 	00150af8 farpush ax
 	00150b00 mov mar,0xbdef20
 	00150b0c mov ax,mar
 	00150b18 mov op,ax
 	00150b20 setfuncargs 0x1
 	00150b28 mov ax,0x51ef20
 	00150b34 farcall ax
 	00150b3c farsubsp 0x1
 	00150b44 pop op
 	00150b4c sourceline 0x10c6
 	00150b54 mov ax,0x87
 	00150b60 mov bx,ax
 	00150b6c mov mar,0xbdef20
 	00150b78 mov ax,mar
 	00150b84 push op
 	00150b8c mov op,ax
 	00150b94 farpush bx
 	00150b9c setfuncargs 0x1
 	00150ba4 mov ax,0x526f20
 	00150bb0 farcall ax
 	00150bb8 farsubsp 0x1
 	00150bc0 pop op
 	00150bc8 sourceline 0x10c7
 	00150bd0 mov ax,0x109
 	00150bdc mov bx,ax
 	00150be8 mov mar,0xbdef20
 	00150bf4 mov ax,mar
 	00150c00 push op
 	00150c08 mov op,ax
 	00150c10 farpush bx
 	00150c18 setfuncargs 0x1
 	00150c20 mov ax,0x70ef20
 	00150c2c farcall ax
 	00150c34 farsubsp 0x1
 	00150c3c pop op
 	00150c44 sourceline 0x10c8
 	00150c4c push op
 	00150c54 mov ax,0x426
 	00150c60 farpush ax
 	00150c68 mov ax,0x397
 	00150c74 farpush ax
 	00150c7c mov ax,0x0
 	00150c88 farpush ax
 	00150c90 mov ax,0x3
 	00150c9c farpush ax
 	00150ca4 mov ax,0x0
 	00150cb0 farpush ax
 	00150cb8 mov mar,0xbdef20
 	00150cc4 mov ax,mar
 	00150cd0 mov op,ax
 	00150cd8 setfuncargs 0x5
 	00150ce0 mov ax,0x536f20
 	00150cec farcall ax
 	00150cf4 farsubsp 0x5
 	00150cfc pop op
 	00150d04 sourceline 0x10c9
 	00150d0c push op
 	00150d14 mov ax,0x2bce65
 	00150d20 farpush ax
 	00150d28 mov mar,0xbdef20
 	00150d34 mov ax,mar
 	00150d40 mov op,ax
 	00150d48 setfuncargs 0x1
 	00150d50 mov ax,0x6f6f20
 	00150d5c farcall ax
 	00150d64 farsubsp 0x1
 	00150d6c pop op
 	00150d74 sourceline 0x10ca
 	00150d7c mov ax,0x1e
 	00150d88 farpush ax
 	00150d90 setfuncargs 0x1
 	00150d98 mov ax,0x426f20
 	00150da4 farcall ax
 	00150dac farsubsp 0x1
 	00150db4 sourceline 0x10cb
 	00150dbc push op
 	00150dc4 mov ax,0x427
 	00150dd0 farpush ax
 	00150dd8 mov ax,0x397
 	00150de4 farpush ax
 	00150dec mov ax,0x0
 	00150df8 farpush ax
 	00150e00 mov ax,0x3
 	00150e0c farpush ax
 	00150e14 mov ax,0x0
 	00150e20 farpush ax
 	00150e28 mov mar,0xbdef20
 	00150e34 mov ax,mar
 	00150e40 mov op,ax
 	00150e48 setfuncargs 0x5
 	00150e50 mov ax,0x536f20
 	00150e5c farcall ax
 	00150e64 farsubsp 0x5
 	00150e6c pop op
 	00150e74 sourceline 0x10cc
 	00150e7c push op
 	00150e84 mov ax,0x426
 	00150e90 farpush ax
 	00150e98 mov ax,0x397
 	00150ea4 farpush ax
 	00150eac mov ax,0x0
 	00150eb8 farpush ax
 	00150ec0 mov ax,0x3
 	00150ecc farpush ax
 	00150ed4 mov ax,0x0
 	00150ee0 farpush ax
 	00150ee8 mov mar,0xc06f20
 	00150ef4 mov ax,mar
 	00150f00 mov op,ax
 	00150f08 setfuncargs 0x5
 	00150f10 mov ax,0x536f20
 	00150f1c farcall ax
 	00150f24 farsubsp 0x5
 	00150f2c pop op
 	00150f34 sourceline 0x10cd
 	00150f3c push op
 	00150f44 mov ax,0x2bce82
 	00150f50 farpush ax
 	00150f58 mov mar,0xc06f20
 	00150f64 mov ax,mar
 	00150f70 mov op,ax
 	00150f78 setfuncargs 0x1
 	00150f80 mov ax,0x6f6f20
 	00150f8c farcall ax
 	00150f94 farsubsp 0x1
 	00150f9c pop op
 	00150fa4 sourceline 0x10ce
 	00150fac push op
 	00150fb4 mov ax,0x427
 	00150fc0 farpush ax
 	00150fc8 mov ax,0x398
 	00150fd4 farpush ax
 	00150fdc mov ax,0x0
 	00150fe8 farpush ax
 	00150ff0 mov ax,0x3
 	00150ffc farpush ax
 	00151004 mov ax,0x0
 	00151010 farpush ax
 	00151018 mov mar,0xc06f20
 	00151024 mov ax,mar
 	00151030 mov op,ax
 	00151038 setfuncargs 0x5
 	00151040 mov ax,0x536f20
 	0015104c farcall ax
 	00151054 farsubsp 0x5
 	0015105c pop op
 	00151064 sourceline 0x10cf
 	0015106c push op
 	00151074 mov ax,0x2bcead
 	00151080 farpush ax
 	00151088 mov mar,0xbdef20
 	00151094 mov ax,mar
 	001510a0 mov op,ax
 	001510a8 setfuncargs 0x1
 	001510b0 mov ax,0x6f6f20
 	001510bc farcall ax
 	001510c4 farsubsp 0x1
 	001510cc pop op
 	001510d4 sourceline 0x10d0
 	001510dc push op
 	001510e4 mov ax,0x8a
 	001510f0 farpush ax
 	001510f8 mov mar,0xbdef20
 	00151104 mov ax,mar
 	00151110 mov op,ax
 	00151118 setfuncargs 0x1
 	00151120 mov ax,0x51ef20
 	0015112c farcall ax
 	00151134 farsubsp 0x1
 	0015113c pop op
 	00151144 sourceline 0x10d1
 	0015114c mov ax,0x113
 	00151158 mov bx,ax
 	00151164 mov mar,0xbdef20
 	00151170 mov ax,mar
 	0015117c push op
 	00151184 mov op,ax
 	0015118c farpush bx
 	00151194 setfuncargs 0x1
 	0015119c mov ax,0x70ef20
 	001511a8 farcall ax
 	001511b0 farsubsp 0x1
 	001511b8 pop op
 	001511c0 sourceline 0x10d2
 	001511c8 mov ax,0x88
 	001511d4 mov bx,ax
 	001511e0 mov mar,0xbdef20
 	001511ec mov ax,mar
 	001511f8 push op
 	00151200 mov op,ax
 	00151208 farpush bx
 	00151210 setfuncargs 0x1
 	00151218 mov ax,0x526f20
 	00151224 farcall ax
 	0015122c farsubsp 0x1
 	00151234 pop op
 	0015123c sourceline 0x10d3
 	00151244 push op
 	0015124c mov ax,0x426
 	00151258 farpush ax
 	00151260 mov ax,0x397
 	0015126c farpush ax
 	00151274 mov ax,0x0
 	00151280 farpush ax
 	00151288 mov ax,0x3
 	00151294 farpush ax
 	0015129c mov ax,0x0
 	001512a8 farpush ax
 	001512b0 mov mar,0xbdef20
 	001512bc mov ax,mar
 	001512c8 mov op,ax
 	001512d0 setfuncargs 0x5
 	001512d8 mov ax,0x536f20
 	001512e4 farcall ax
 	001512ec farsubsp 0x5
 	001512f4 pop op
 	001512fc sourceline 0x10d4
 	00151304 push op
 	0015130c mov ax,0x89
 	00151318 farpush ax
 	00151320 mov mar,0xbdef20
 	0015132c mov ax,mar
 	00151338 mov op,ax
 	00151340 setfuncargs 0x1
 	00151348 mov ax,0x51ef20
 	00151354 farcall ax
 	0015135c farsubsp 0x1
 	00151364 pop op
 	0015136c sourceline 0x10d5
 	00151374 mov ax,0x117
 	00151380 mov bx,ax
 	0015138c mov mar,0xbdef20
 	00151398 mov ax,mar
 	001513a4 push op
 	001513ac mov op,ax
 	001513b4 farpush bx
 	001513bc setfuncargs 0x1
 	001513c4 mov ax,0x70ef20
 	001513d0 farcall ax
 	001513d8 farsubsp 0x1
 	001513e0 pop op
 	001513e8 sourceline 0x10d6
 	001513f0 push op
 	001513f8 mov ax,0x130
 	00151404 farpush ax
 	0015140c mov ax,0x398
 	00151418 farpush ax
 	00151420 mov ax,0xe6
 	0015142c farpush ax
 	00151434 mov mar,0xbdef20
 	00151440 mov ax,mar
 	0015144c push op
 	00151454 mov op,ax
 	0015145c setfuncargs 0x0
 	00151464 mov ax,0xb36f20
 	00151470 farcall ax
 	00151478 pop op
 	00151480 farpush ax
 	00151488 mov mar,0xbdef20
 	00151494 mov ax,mar
 	001514a0 mov op,ax
 	001514a8 setfuncargs 0x4
 	001514b0 mov ax,0xb2ef20
 	001514bc farcall ax
 	001514c4 farsubsp 0x4
 	001514cc pop op
 	001514d4 sourceline 0x10d7
 	001514dc push op
 	001514e4 mov ax,0x85
 	001514f0 farpush ax
 	001514f8 mov mar,0xc06f20
 	00151504 mov ax,mar
 	00151510 mov op,ax
 	00151518 setfuncargs 0x1
 	00151520 mov ax,0x51ef20
 	0015152c farcall ax
 	00151534 farsubsp 0x1
 	0015153c pop op
 	00151544 sourceline 0x10d8
 	0015154c mov mar,0xc06f20
 	00151558 mov ax,mar
 	00151564 push op
 	0015156c mov op,ax
 	00151574 setfuncargs 0x0
 	0015157c mov ax,0xb36f20
 	00151588 farcall ax
 	00151590 pop op
 	00151598 push ax
 	001515a0 mov ax,0xc
 	001515ac pop bx
 	001515b4 sub bx,ax
 	001515c0 mov ax,bx
 	001515cc mov bx,ax
 	001515d8 mov mar,0xc06f20
 	001515e4 mov ax,mar
 	001515f0 push op
 	001515f8 mov op,ax
 	00151600 farpush bx
 	00151608 setfuncargs 0x1
 	00151610 mov ax,0x70ef20
 	0015161c farcall ax
 	00151624 farsubsp 0x1
 	0015162c pop op
 	00151634 sourceline 0x10d9
 	0015163c mov ax,0xd2
 	00151648 farpush ax
 	00151650 mov ax,0xc
 	0015165c farpush ax
 	00151664 setfuncargs 0x2
 	0015166c mov ax,0xc0ef20
 	00151678 farcall ax
 	00151680 farsubsp 0x2
 	00151688 sourceline 0x10da
 	00151690 push op
 	00151698 mov ax,0x131
 	001516a4 farpush ax
 	001516ac mov ax,0x397
 	001516b8 farpush ax
 	001516c0 mov ax,0x87
 	001516cc farpush ax
 	001516d4 mov ax,0x3b
 	001516e0 farpush ax
 	001516e8 mov mar,0xc06f20
 	001516f4 mov ax,mar
 	00151700 mov op,ax
 	00151708 setfuncargs 0x4
 	00151710 mov ax,0xb2ef20
 	0015171c farcall ax
 	00151724 farsubsp 0x4
 	0015172c pop op
 	00151734 sourceline 0x10db
 	0015173c push op
 	00151744 mov ax,0x7cfe
 	00151750 farpush ax
 	00151758 mov ax,0x7cfe
 	00151764 farpush ax
 	0015176c mov ax,0x7cfe
 	00151778 farpush ax
 	00151780 mov ax,0x0
 	0015178c farpush ax
 	00151794 mov mar,0xbdef20
 	001517a0 mov ax,mar
 	001517ac mov op,ax
 	001517b4 setfuncargs 0x4
 	001517bc mov ax,0xc16f20
 	001517c8 farcall ax
 	001517d0 farsubsp 0x4
 	001517d8 pop op
 	001517e0 sourceline 0x10dc
 	001517e8 push op
 	001517f0 mov ax,0x84
 	001517fc farpush ax
 	00151804 mov mar,0xc06f20
 	00151810 mov ax,mar
 	0015181c mov op,ax
 	00151824 setfuncargs 0x1
 	0015182c mov ax,0x51ef20
 	00151838 farcall ax
 	00151840 farsubsp 0x1
 	00151848 pop op
 	00151850 sourceline 0x10dd
 	00151858 mov ax,0x0
 	00151864 mov bx,ax
 	00151870 mov mar,0xc06f20
 	0015187c mov ax,mar
 	00151888 push op
 	00151890 mov op,ax
 	00151898 farpush bx
 	001518a0 setfuncargs 0x1
 	001518a8 mov ax,0x766f20
 	001518b4 farcall ax
 	001518bc farsubsp 0x1
 	001518c4 pop op
 	001518cc sourceline 0x10de
 	001518d4 mov ax,0x0
 	001518e0 mov mar,0x5eef20
 	001518ec memwrite4 ax
 	001518f4 sourceline 0x10df
 	001518fc mov ax,0x1
 	00151908 mov mar,0xbfef20
 	00151914 memwrite4 ax
 	0015191c sourceline 0x10e0
 	00151924 mov ax,0x2
 	00151930 farpush ax
 	00151938 setfuncargs 0x1
 	00151940 mov ax,0xc1ef20
 	0015194c farcall ax
 	00151954 farsubsp 0x1
 	0015195c sourceline 0x10e1
 	00151964 push op
 	0015196c mov ax,0x0
 	00151978 farpush ax
 	00151980 mov ax,0x2
 	0015198c farpush ax
 	00151994 mov mar,0xbe6f20
 	001519a0 mov ax,mar
 	001519ac mov op,ax
 	001519b4 setfuncargs 0x2
 	001519bc mov ax,0xc26f20
 	001519c8 farcall ax
 	001519d0 farsubsp 0x2
 	001519d8 pop op
 	001519e0 sourceline 0x10e2
 	001519e8 jmp 0x00151c14
		00151c14: UNCONDITIONAL_JUMP

	[001519f0]
		0015028c: CONDITIONAL_JUMP
 	001519f0 sourceline 0x10e5
 	001519f8 push op
 	00151a00 mov ax,0x1
 	00151a0c farpush ax
 	00151a14 mov mar,0xbe6f20
 	00151a20 mov ax,mar
 	00151a2c mov op,ax
 	00151a34 setfuncargs 0x1
 	00151a3c mov ax,0x6d6f20
 	00151a48 farcall ax
 	00151a50 farsubsp 0x1
 	00151a58 pop op
 	00151a60 jz 0x00151ba0
		00151ba0: CONDITIONAL_JUMP
		00151a68: FALL_THROUGH

	[00151a68]
		001519f0: FALL_THROUGH
 	00151a68 sourceline 0x10e7
 	00151a70 mov ax,0x1
 	00151a7c mov bx,ax
 	00151a88 mov mar,0x3cef20
 	00151a94 mov ax,mar
 	00151aa0 push op
 	00151aa8 mov op,ax
 	00151ab0 farpush bx
 	00151ab8 setfuncargs 0x1
 	00151ac0 mov ax,0x69ef20
 	00151acc farcall ax
 	00151ad4 farsubsp 0x1
 	00151adc pop op
 	00151ae4 sourceline 0x10e8
 	00151aec push op
 	00151af4 mov ax,0x2c7eb9
 	00151b00 farpush ax
 	00151b08 mov ax,0x138
 	00151b14 farpush ax
 	00151b1c mov ax,0x92
 	00151b28 farpush ax
 	00151b30 mov ax,0x0
 	00151b3c farpush ax
 	00151b44 mov mar,0x3cef20
 	00151b50 mov ax,mar
 	00151b5c mov op,ax
 	00151b64 setfuncargs 0x4
 	00151b6c mov ax,0x6aef20
 	00151b78 farcall ax
 	00151b80 farsubsp 0x4
 	00151b88 pop op
 	00151b90 sourceline 0x10e9
 	00151b98 jmp 0x00151c14
		00151c14: UNCONDITIONAL_JUMP

	[00151ba0]
		001519f0: CONDITIONAL_JUMP
 	00151ba0 sourceline 0x10eb
 	00151ba8 mov ax,0x0
 	00151bb4 mov mar,0xbf6f20
 	00151bc0 memwrite4 ax
 	00151bc8 push op
 	00151bd0 mov mar,0xbe6f20
 	00151bdc mov ax,mar
 	00151be8 mov op,ax
 	00151bf0 setfuncargs 0x0
 	00151bf8 mov ax,0x71ef20
 	00151c04 farcall ax
 	00151c0c pop op
		00151c14: FALL_THROUGH

	[00151c14]
		0014fff8: UNCONDITIONAL_JUMP
		00150218: UNCONDITIONAL_JUMP
		001502b8: UNCONDITIONAL_JUMP
		00151a68: UNCONDITIONAL_JUMP
		00151ba0: FALL_THROUGH
 	00151c14 sourceline 0x10ef
 	00151c1c jmp 0x00153b88
		00153b88: UNCONDITIONAL_JUMP

	[00151c24]
		0014ffbc: CONDITIONAL_JUMP
 	00151c24 sourceline 0x10f2
 	00151c2c mov ax,0x0
 	00151c38 assertlte ax,0x28
 	00151c44 mul ax,0x8
 	00151c50 mov cx,ax
 	00151c5c mov mar,0x6fef20
 	00151c68 add mar,cx
 	00151c74 mov ax,mar
 	00151c80 push op
 	00151c88 mov op,ax
 	00151c90 setfuncargs 0x0
 	00151c98 mov ax,0xbeef20
 	00151ca4 farcall ax
 	00151cac pop op
 	00151cb4 push ax
 	00151cbc mov ax,0x8c
 	00151cc8 pop bx
 	00151cd0 cmpneq bx,ax
 	00151cdc mov ax,bx
 	00151ce8 jz 0x001521f8
		001521f8: CONDITIONAL_JUMP
		00151cf0: FALL_THROUGH

	[00151cf0]
		00151c24: FALL_THROUGH
 	00151cf0 sourceline 0x10f4
 	00151cf8 mov mar,0xc2ef20
 	00151d04 memread4 ax
 	00151d0c push ax
 	00151d14 mov ax,0x0
 	00151d20 pop bx
 	00151d28 cmpeq bx,ax
 	00151d34 mov ax,bx
 	00151d40 jz 0x00151e80
		00151e80: CONDITIONAL_JUMP
		00151d48: FALL_THROUGH

	[00151d48]
		00151cf0: FALL_THROUGH
 	00151d48 sourceline 0x10f6
 	00151d50 mov ax,0x1
 	00151d5c mov bx,ax
 	00151d68 mov mar,0x3cef20
 	00151d74 mov ax,mar
 	00151d80 push op
 	00151d88 mov op,ax
 	00151d90 farpush bx
 	00151d98 setfuncargs 0x1
 	00151da0 mov ax,0x69ef20
 	00151dac farcall ax
 	00151db4 farsubsp 0x1
 	00151dbc pop op
 	00151dc4 sourceline 0x10f7
 	00151dcc push op
 	00151dd4 mov ax,0x2c798e
 	00151de0 farpush ax
 	00151de8 mov ax,0x138
 	00151df4 farpush ax
 	00151dfc mov ax,0x92
 	00151e08 farpush ax
 	00151e10 mov ax,0x0
 	00151e1c farpush ax
 	00151e24 mov mar,0x3cef20
 	00151e30 mov ax,mar
 	00151e3c mov op,ax
 	00151e44 setfuncargs 0x4
 	00151e4c mov ax,0x6aef20
 	00151e58 farcall ax
 	00151e60 farsubsp 0x4
 	00151e68 pop op
 	00151e70 sourceline 0x10f8
 	00151e78 jmp 0x001521e8
		001521e8: UNCONDITIONAL_JUMP

	[00151e80]
		00151cf0: CONDITIONAL_JUMP
 	00151e80 sourceline 0x10fb
 	00151e88 mov mar,0xc36f20
 	00151e94 memread4 ax
 	00151e9c lnot ax
 	00151ea4 jz 0x001520c0
		001520c0: CONDITIONAL_JUMP
		00151eac: FALL_THROUGH

	[00151eac]
		00151e80: FALL_THROUGH
 	00151eac sourceline 0x10fd
 	00151eb4 setfuncargs 0x0
 	00151ebc mov ax,0x6def20
 	00151ec8 farcall ax
 	00151ed0 lnot ax
 	00151ed8 jz 0x00151f34
		00151f34: CONDITIONAL_JUMP
		00151ee0: FALL_THROUGH

	[00151ee0]
		00151eac: FALL_THROUGH
 	00151ee0 mov ax,0x8f
 	00151eec farpush ax
 	00151ef4 mov ax,0x56
 	00151f00 farpush ax
 	00151f08 setfuncargs 0x2
 	00151f10 mov ax,0x6e6f20
 	00151f1c farcall ax
 	00151f24 farsubsp 0x2
 	00151f2c jmp 0x001520b0
		001520b0: UNCONDITIONAL_JUMP

	[00151f34]
		00151eac: CONDITIONAL_JUMP
 	00151f34 sourceline 0x1100
 	00151f3c push op
 	00151f44 mov ax,0x397
 	00151f50 farpush ax
 	00151f58 mov ax,0x7
 	00151f64 farpush ax
 	00151f6c mov mar,0x3cef20
 	00151f78 mov ax,mar
 	00151f84 mov op,ax
 	00151f8c setfuncargs 0x2
 	00151f94 mov ax,0x6eef20
 	00151fa0 farcall ax
 	00151fa8 farsubsp 0x2
 	00151fb0 pop op
 	00151fb8 sourceline 0x1101
 	00151fc0 mov ax,0x3
 	00151fcc mov bx,ax
 	00151fd8 mov mar,0x3cef20
 	00151fe4 mov ax,mar
 	00151ff0 push op
 	00151ff8 mov op,ax
 	00152000 farpush bx
 	00152008 setfuncargs 0x1
 	00152010 mov ax,0x69ef20
 	0015201c farcall ax
 	00152024 farsubsp 0x1
 	0015202c pop op
 	00152034 sourceline 0x1102
 	0015203c mov ax,0x0
 	00152048 mov mar,0xbf6f20
 	00152054 memwrite4 ax
 	0015205c sourceline 0x1103
 	00152064 push op
 	0015206c mov mar,0xbe6f20
 	00152078 mov ax,mar
 	00152084 mov op,ax
 	0015208c setfuncargs 0x0
 	00152094 mov ax,0x71ef20
 	001520a0 farcall ax
 	001520a8 pop op
		001520b0: FALL_THROUGH

	[001520b0]
		00151ee0: UNCONDITIONAL_JUMP
		00151f34: FALL_THROUGH
 	001520b0 sourceline 0x1105
 	001520b8 jmp 0x001521e8
		001521e8: UNCONDITIONAL_JUMP

	[001520c0]
		00151e80: CONDITIONAL_JUMP
 	001520c0 sourceline 0x1108
 	001520c8 mov ax,0x1
 	001520d4 mov bx,ax
 	001520e0 mov mar,0x3cef20
 	001520ec mov ax,mar
 	001520f8 push op
 	00152100 mov op,ax
 	00152108 farpush bx
 	00152110 setfuncargs 0x1
 	00152118 mov ax,0x69ef20
 	00152124 farcall ax
 	0015212c farsubsp 0x1
 	00152134 pop op
 	0015213c sourceline 0x1109
 	00152144 push op
 	0015214c mov ax,0x2c798e
 	00152158 farpush ax
 	00152160 mov ax,0x138
 	0015216c farpush ax
 	00152174 mov ax,0x92
 	00152180 farpush ax
 	00152188 mov ax,0x0
 	00152194 farpush ax
 	0015219c mov mar,0x3cef20
 	001521a8 mov ax,mar
 	001521b4 mov op,ax
 	001521bc setfuncargs 0x4
 	001521c4 mov ax,0x6aef20
 	001521d0 farcall ax
 	001521d8 farsubsp 0x4
 	001521e0 pop op
		001521e8: FALL_THROUGH

	[001521e8]
		00151d48: UNCONDITIONAL_JUMP
		001520b0: UNCONDITIONAL_JUMP
		001520c0: FALL_THROUGH
 	001521e8 sourceline 0x110c
 	001521f0 jmp 0x00153b88
		00153b88: UNCONDITIONAL_JUMP

	[001521f8]
		00151c24: CONDITIONAL_JUMP
 	001521f8 sourceline 0x110f
 	00152200 mov mar,0xbfef20
 	0015220c memread4 ax
 	00152214 lnot ax
 	0015221c jz 0x00153a60
		00153a60: CONDITIONAL_JUMP
		00152224: FALL_THROUGH

	[00152224]
		001521f8: FALL_THROUGH
 	00152224 sourceline 0x1111
 	0015222c setfuncargs 0x0
 	00152234 mov ax,0x6def20
 	00152240 farcall ax
 	00152248 lnot ax
 	00152250 jz 0x001522ac
		001522ac: CONDITIONAL_JUMP
		00152258: FALL_THROUGH

	[00152258]
		00152224: FALL_THROUGH
 	00152258 mov ax,0x8f
 	00152264 farpush ax
 	0015226c mov ax,0x56
 	00152278 farpush ax
 	00152280 setfuncargs 0x2
 	00152288 mov ax,0x6e6f20
 	00152294 farcall ax
 	0015229c farsubsp 0x2
 	001522a4 jmp 0x00153a50
		00153a50: UNCONDITIONAL_JUMP

	[001522ac]
		00152224: CONDITIONAL_JUMP
 	001522ac sourceline 0x1114
 	001522b4 mov ax,0x1
 	001522c0 mov mar,0x5eef20
 	001522cc memwrite4 ax
 	001522d4 sourceline 0x1115
 	001522dc push op
 	001522e4 mov ax,0x397
 	001522f0 farpush ax
 	001522f8 mov ax,0x7
 	00152304 farpush ax
 	0015230c mov mar,0x3cef20
 	00152318 mov ax,mar
 	00152324 mov op,ax
 	0015232c setfuncargs 0x2
 	00152334 mov ax,0x6eef20
 	00152340 farcall ax
 	00152348 farsubsp 0x2
 	00152350 pop op
 	00152358 sourceline 0x1116
 	00152360 mov ax,0x3
 	0015236c mov bx,ax
 	00152378 mov mar,0x3cef20
 	00152384 mov ax,mar
 	00152390 push op
 	00152398 mov op,ax
 	001523a0 farpush bx
 	001523a8 setfuncargs 0x1
 	001523b0 mov ax,0x69ef20
 	001523bc farcall ax
 	001523c4 farsubsp 0x1
 	001523cc pop op
 	001523d4 sourceline 0x1117
 	001523dc push op
 	001523e4 mov ax,0x2bcd9a
 	001523f0 farpush ax
 	001523f8 mov mar,0x3cef20
 	00152404 mov ax,mar
 	00152410 mov op,ax
 	00152418 setfuncargs 0x1
 	00152420 mov ax,0x6f6f20
 	0015242c farcall ax
 	00152434 farsubsp 0x1
 	0015243c pop op
 	00152444 sourceline 0x1118
 	0015244c push op
 	00152454 mov ax,0x2bcdf7
 	00152460 farpush ax
 	00152468 mov mar,0xc06f20
 	00152474 mov ax,mar
 	00152480 mov op,ax
 	00152488 setfuncargs 0x1
 	00152490 mov ax,0x6f6f20
 	0015249c farcall ax
 	001524a4 farsubsp 0x1
 	001524ac pop op
 	001524b4 sourceline 0x1119
 	001524bc push op
 	001524c4 mov ax,0x2bce11
 	001524d0 farpush ax
 	001524d8 mov mar,0xc06f20
 	001524e4 mov ax,mar
 	001524f0 mov op,ax
 	001524f8 setfuncargs 0x1
 	00152500 mov ax,0x6f6f20
 	0015250c farcall ax
 	00152514 farsubsp 0x1
 	0015251c pop op
 	00152524 sourceline 0x111a
 	0015252c mov ax,0x2
 	00152538 farpush ax
 	00152540 setfuncargs 0x1
 	00152548 mov ax,0xbd6f20
 	00152554 farcall ax
 	0015255c farsubsp 0x1
 	00152564 sourceline 0x111b
 	0015256c push op
 	00152574 mov ax,0x85
 	00152580 farpush ax
 	00152588 mov mar,0xc06f20
 	00152594 mov ax,mar
 	001525a0 mov op,ax
 	001525a8 setfuncargs 0x1
 	001525b0 mov ax,0x51ef20
 	001525bc farcall ax
 	001525c4 farsubsp 0x1
 	001525cc pop op
 	001525d4 sourceline 0x111c
 	001525dc mov ax,0x5a
 	001525e8 farpush ax
 	001525f0 mov ax,0xb
 	001525fc farpush ax
 	00152604 setfuncargs 0x2
 	0015260c mov ax,0xc0ef20
 	00152618 farcall ax
 	00152620 farsubsp 0x2
 	00152628 sourceline 0x111d
 	00152630 push op
 	00152638 mov ax,0x131
 	00152644 farpush ax
 	0015264c mov ax,0x397
 	00152658 farpush ax
 	00152660 mov ax,0x88
 	0015266c farpush ax
 	00152674 mov ax,0xdf
 	00152680 farpush ax
 	00152688 mov mar,0xc06f20
 	00152694 mov ax,mar
 	001526a0 mov op,ax
 	001526a8 setfuncargs 0x4
 	001526b0 mov ax,0xb2ef20
 	001526bc farcall ax
 	001526c4 farsubsp 0x4
 	001526cc pop op
 	001526d4 sourceline 0x111e
 	001526dc push op
 	001526e4 mov ax,0x426
 	001526f0 farpush ax
 	001526f8 mov ax,0x397
 	00152704 farpush ax
 	0015270c mov ax,0x0
 	00152718 farpush ax
 	00152720 mov ax,0x3
 	0015272c farpush ax
 	00152734 mov ax,0x0
 	00152740 farpush ax
 	00152748 mov mar,0xbdef20
 	00152754 mov ax,mar
 	00152760 mov op,ax
 	00152768 setfuncargs 0x5
 	00152770 mov ax,0x536f20
 	0015277c farcall ax
 	00152784 farsubsp 0x5
 	0015278c pop op
 	00152794 sourceline 0x1120
 	0015279c push op
 	001527a4 mov ax,0x86
 	001527b0 farpush ax
 	001527b8 mov mar,0xc06f20
 	001527c4 mov ax,mar
 	001527d0 mov op,ax
 	001527d8 setfuncargs 0x1
 	001527e0 mov ax,0x51ef20
 	001527ec farcall ax
 	001527f4 farsubsp 0x1
 	001527fc pop op
 	00152804 sourceline 0x1121
 	0015280c mov mar,0xc06f20
 	00152818 mov ax,mar
 	00152824 push op
 	0015282c mov op,ax
 	00152834 setfuncargs 0x0
 	0015283c mov ax,0xb36f20
 	00152848 farcall ax
 	00152850 pop op
 	00152858 push ax
 	00152860 mov ax,0xc
 	0015286c pop bx
 	00152874 add bx,ax
 	00152880 mov ax,bx
 	0015288c mov bx,ax
 	00152898 mov mar,0xc06f20
 	001528a4 mov ax,mar
 	001528b0 push op
 	001528b8 mov op,ax
 	001528c0 farpush bx
 	001528c8 setfuncargs 0x1
 	001528d0 mov ax,0x70ef20
 	001528dc farcall ax
 	001528e4 farsubsp 0x1
 	001528ec pop op
 	001528f4 sourceline 0x1122
 	001528fc mov ax,0x87
 	00152908 mov bx,ax
 	00152914 mov mar,0xc06f20
 	00152920 mov ax,mar
 	0015292c push op
 	00152934 mov op,ax
 	0015293c farpush bx
 	00152944 setfuncargs 0x1
 	0015294c mov ax,0x526f20
 	00152958 farcall ax
 	00152960 farsubsp 0x1
 	00152968 pop op
 	00152970 sourceline 0x1123
 	00152978 push op
 	00152980 mov ax,0x426
 	0015298c farpush ax
 	00152994 mov ax,0x397
 	001529a0 farpush ax
 	001529a8 mov ax,0x0
 	001529b4 farpush ax
 	001529bc mov ax,0x3
 	001529c8 farpush ax
 	001529d0 mov ax,0x0
 	001529dc farpush ax
 	001529e4 mov mar,0xc06f20
 	001529f0 mov ax,mar
 	001529fc mov op,ax
 	00152a04 setfuncargs 0x5
 	00152a0c mov ax,0x536f20
 	00152a18 farcall ax
 	00152a20 farsubsp 0x5
 	00152a28 pop op
 	00152a30 sourceline 0x1124
 	00152a38 push op
 	00152a40 mov ax,0x2bce27
 	00152a4c farpush ax
 	00152a54 mov mar,0xc06f20
 	00152a60 mov ax,mar
 	00152a6c mov op,ax
 	00152a74 setfuncargs 0x1
 	00152a7c mov ax,0x6f6f20
 	00152a88 farcall ax
 	00152a90 farsubsp 0x1
 	00152a98 pop op
 	00152aa0 sourceline 0x1126
 	00152aa8 push op
 	00152ab0 mov ax,0x2bce5b
 	00152abc farpush ax
 	00152ac4 mov mar,0xbdef20
 	00152ad0 mov ax,mar
 	00152adc mov op,ax
 	00152ae4 setfuncargs 0x1
 	00152aec mov ax,0x6f6f20
 	00152af8 farcall ax
 	00152b00 farsubsp 0x1
 	00152b08 pop op
 	00152b10 sourceline 0x1127
 	00152b18 push op
 	00152b20 mov ax,0x427
 	00152b2c farpush ax
 	00152b34 mov ax,0x397
 	00152b40 farpush ax
 	00152b48 mov ax,0x0
 	00152b54 farpush ax
 	00152b5c mov ax,0x3
 	00152b68 farpush ax
 	00152b70 mov ax,0x0
 	00152b7c farpush ax
 	00152b84 mov mar,0xc06f20
 	00152b90 mov ax,mar
 	00152b9c mov op,ax
 	00152ba4 setfuncargs 0x5
 	00152bac mov ax,0x536f20
 	00152bb8 farcall ax
 	00152bc0 farsubsp 0x5
 	00152bc8 pop op
 	00152bd0 sourceline 0x1128
 	00152bd8 push op
 	00152be0 mov ax,0x88
 	00152bec farpush ax
 	00152bf4 mov mar,0xbdef20
 	00152c00 mov ax,mar
 	00152c0c mov op,ax
 	00152c14 setfuncargs 0x1
 	00152c1c mov ax,0x51ef20
 	00152c28 farcall ax
 	00152c30 farsubsp 0x1
 	00152c38 pop op
 	00152c40 sourceline 0x1129
 	00152c48 mov ax,0x87
 	00152c54 mov bx,ax
 	00152c60 mov mar,0xbdef20
 	00152c6c mov ax,mar
 	00152c78 push op
 	00152c80 mov op,ax
 	00152c88 farpush bx
 	00152c90 setfuncargs 0x1
 	00152c98 mov ax,0x526f20
 	00152ca4 farcall ax
 	00152cac farsubsp 0x1
 	00152cb4 pop op
 	00152cbc sourceline 0x112a
 	00152cc4 mov ax,0x109
 	00152cd0 mov bx,ax
 	00152cdc mov mar,0xbdef20
 	00152ce8 mov ax,mar
 	00152cf4 push op
 	00152cfc mov op,ax
 	00152d04 farpush bx
 	00152d0c setfuncargs 0x1
 	00152d14 mov ax,0x70ef20
 	00152d20 farcall ax
 	00152d28 farsubsp 0x1
 	00152d30 pop op
 	00152d38 sourceline 0x112b
 	00152d40 push op
 	00152d48 mov ax,0x426
 	00152d54 farpush ax
 	00152d5c mov ax,0x397
 	00152d68 farpush ax
 	00152d70 mov ax,0x0
 	00152d7c farpush ax
 	00152d84 mov ax,0x3
 	00152d90 farpush ax
 	00152d98 mov ax,0x0
 	00152da4 farpush ax
 	00152dac mov mar,0xbdef20
 	00152db8 mov ax,mar
 	00152dc4 mov op,ax
 	00152dcc setfuncargs 0x5
 	00152dd4 mov ax,0x536f20
 	00152de0 farcall ax
 	00152de8 farsubsp 0x5
 	00152df0 pop op
 	00152df8 sourceline 0x112c
 	00152e00 push op
 	00152e08 mov ax,0x2bce65
 	00152e14 farpush ax
 	00152e1c mov mar,0xbdef20
 	00152e28 mov ax,mar
 	00152e34 mov op,ax
 	00152e3c setfuncargs 0x1
 	00152e44 mov ax,0x6f6f20
 	00152e50 farcall ax
 	00152e58 farsubsp 0x1
 	00152e60 pop op
 	00152e68 sourceline 0x112d
 	00152e70 mov ax,0x1e
 	00152e7c farpush ax
 	00152e84 setfuncargs 0x1
 	00152e8c mov ax,0x426f20
 	00152e98 farcall ax
 	00152ea0 farsubsp 0x1
 	00152ea8 sourceline 0x112e
 	00152eb0 push op
 	00152eb8 mov ax,0x427
 	00152ec4 farpush ax
 	00152ecc mov ax,0x397
 	00152ed8 farpush ax
 	00152ee0 mov ax,0x0
 	00152eec farpush ax
 	00152ef4 mov ax,0x3
 	00152f00 farpush ax
 	00152f08 mov ax,0x0
 	00152f14 farpush ax
 	00152f1c mov mar,0xbdef20
 	00152f28 mov ax,mar
 	00152f34 mov op,ax
 	00152f3c setfuncargs 0x5
 	00152f44 mov ax,0x536f20
 	00152f50 farcall ax
 	00152f58 farsubsp 0x5
 	00152f60 pop op
 	00152f68 sourceline 0x112f
 	00152f70 push op
 	00152f78 mov ax,0x426
 	00152f84 farpush ax
 	00152f8c mov ax,0x397
 	00152f98 farpush ax
 	00152fa0 mov ax,0x0
 	00152fac farpush ax
 	00152fb4 mov ax,0x3
 	00152fc0 farpush ax
 	00152fc8 mov ax,0x0
 	00152fd4 farpush ax
 	00152fdc mov mar,0xc06f20
 	00152fe8 mov ax,mar
 	00152ff4 mov op,ax
 	00152ffc setfuncargs 0x5
 	00153004 mov ax,0x536f20
 	00153010 farcall ax
 	00153018 farsubsp 0x5
 	00153020 pop op
 	00153028 sourceline 0x1130
 	00153030 push op
 	00153038 mov ax,0x2bce82
 	00153044 farpush ax
 	0015304c mov mar,0xc06f20
 	00153058 mov ax,mar
 	00153064 mov op,ax
 	0015306c setfuncargs 0x1
 	00153074 mov ax,0x6f6f20
 	00153080 farcall ax
 	00153088 farsubsp 0x1
 	00153090 pop op
 	00153098 sourceline 0x1131
 	001530a0 push op
 	001530a8 mov ax,0x427
 	001530b4 farpush ax
 	001530bc mov ax,0x398
 	001530c8 farpush ax
 	001530d0 mov ax,0x0
 	001530dc farpush ax
 	001530e4 mov ax,0x3
 	001530f0 farpush ax
 	001530f8 mov ax,0x0
 	00153104 farpush ax
 	0015310c mov mar,0xc06f20
 	00153118 mov ax,mar
 	00153124 mov op,ax
 	0015312c setfuncargs 0x5
 	00153134 mov ax,0x536f20
 	00153140 farcall ax
 	00153148 farsubsp 0x5
 	00153150 pop op
 	00153158 sourceline 0x1132
 	00153160 push op
 	00153168 mov ax,0x2bcead
 	00153174 farpush ax
 	0015317c mov mar,0xbdef20
 	00153188 mov ax,mar
 	00153194 mov op,ax
 	0015319c setfuncargs 0x1
 	001531a4 mov ax,0x6f6f20
 	001531b0 farcall ax
 	001531b8 farsubsp 0x1
 	001531c0 pop op
 	001531c8 sourceline 0x1133
 	001531d0 push op
 	001531d8 mov ax,0x8a
 	001531e4 farpush ax
 	001531ec mov mar,0xbdef20
 	001531f8 mov ax,mar
 	00153204 mov op,ax
 	0015320c setfuncargs 0x1
 	00153214 mov ax,0x51ef20
 	00153220 farcall ax
 	00153228 farsubsp 0x1
 	00153230 pop op
 	00153238 sourceline 0x1134
 	00153240 mov ax,0x113
 	0015324c mov bx,ax
 	00153258 mov mar,0xbdef20
 	00153264 mov ax,mar
 	00153270 push op
 	00153278 mov op,ax
 	00153280 farpush bx
 	00153288 setfuncargs 0x1
 	00153290 mov ax,0x70ef20
 	0015329c farcall ax
 	001532a4 farsubsp 0x1
 	001532ac pop op
 	001532b4 sourceline 0x1135
 	001532bc mov ax,0x88
 	001532c8 mov bx,ax
 	001532d4 mov mar,0xbdef20
 	001532e0 mov ax,mar
 	001532ec push op
 	001532f4 mov op,ax
 	001532fc farpush bx
 	00153304 setfuncargs 0x1
 	0015330c mov ax,0x526f20
 	00153318 farcall ax
 	00153320 farsubsp 0x1
 	00153328 pop op
 	00153330 sourceline 0x1136
 	00153338 push op
 	00153340 mov ax,0x426
 	0015334c farpush ax
 	00153354 mov ax,0x397
 	00153360 farpush ax
 	00153368 mov ax,0x0
 	00153374 farpush ax
 	0015337c mov ax,0x3
 	00153388 farpush ax
 	00153390 mov ax,0x0
 	0015339c farpush ax
 	001533a4 mov mar,0xbdef20
 	001533b0 mov ax,mar
 	001533bc mov op,ax
 	001533c4 setfuncargs 0x5
 	001533cc mov ax,0x536f20
 	001533d8 farcall ax
 	001533e0 farsubsp 0x5
 	001533e8 pop op
 	001533f0 sourceline 0x1137
 	001533f8 push op
 	00153400 mov ax,0x89
 	0015340c farpush ax
 	00153414 mov mar,0xbdef20
 	00153420 mov ax,mar
 	0015342c mov op,ax
 	00153434 setfuncargs 0x1
 	0015343c mov ax,0x51ef20
 	00153448 farcall ax
 	00153450 farsubsp 0x1
 	00153458 pop op
 	00153460 sourceline 0x1138
 	00153468 mov ax,0x117
 	00153474 mov bx,ax
 	00153480 mov mar,0xbdef20
 	0015348c mov ax,mar
 	00153498 push op
 	001534a0 mov op,ax
 	001534a8 farpush bx
 	001534b0 setfuncargs 0x1
 	001534b8 mov ax,0x70ef20
 	001534c4 farcall ax
 	001534cc farsubsp 0x1
 	001534d4 pop op
 	001534dc sourceline 0x1139
 	001534e4 push op
 	001534ec mov ax,0x130
 	001534f8 farpush ax
 	00153500 mov ax,0x398
 	0015350c farpush ax
 	00153514 mov ax,0xe6
 	00153520 farpush ax
 	00153528 mov mar,0xbdef20
 	00153534 mov ax,mar
 	00153540 push op
 	00153548 mov op,ax
 	00153550 setfuncargs 0x0
 	00153558 mov ax,0xb36f20
 	00153564 farcall ax
 	0015356c pop op
 	00153574 farpush ax
 	0015357c mov mar,0xbdef20
 	00153588 mov ax,mar
 	00153594 mov op,ax
 	0015359c setfuncargs 0x4
 	001535a4 mov ax,0xb2ef20
 	001535b0 farcall ax
 	001535b8 farsubsp 0x4
 	001535c0 pop op
 	001535c8 sourceline 0x113a
 	001535d0 push op
 	001535d8 mov ax,0x85
 	001535e4 farpush ax
 	001535ec mov mar,0xc06f20
 	001535f8 mov ax,mar
 	00153604 mov op,ax
 	0015360c setfuncargs 0x1
 	00153614 mov ax,0x51ef20
 	00153620 farcall ax
 	00153628 farsubsp 0x1
 	00153630 pop op
 	00153638 sourceline 0x113b
 	00153640 mov mar,0xc06f20
 	0015364c mov ax,mar
 	00153658 push op
 	00153660 mov op,ax
 	00153668 setfuncargs 0x0
 	00153670 mov ax,0xb36f20
 	0015367c farcall ax
 	00153684 pop op
 	0015368c push ax
 	00153694 mov ax,0xc
 	001536a0 pop bx
 	001536a8 sub bx,ax
 	001536b4 mov ax,bx
 	001536c0 mov bx,ax
 	001536cc mov mar,0xc06f20
 	001536d8 mov ax,mar
 	001536e4 push op
 	001536ec mov op,ax
 	001536f4 farpush bx
 	001536fc setfuncargs 0x1
 	00153704 mov ax,0x70ef20
 	00153710 farcall ax
 	00153718 farsubsp 0x1
 	00153720 pop op
 	00153728 sourceline 0x113c
 	00153730 mov ax,0xd2
 	0015373c farpush ax
 	00153744 mov ax,0xc
 	00153750 farpush ax
 	00153758 setfuncargs 0x2
 	00153760 mov ax,0xc0ef20
 	0015376c farcall ax
 	00153774 farsubsp 0x2
 	0015377c sourceline 0x113d
 	00153784 push op
 	0015378c mov ax,0x131
 	00153798 farpush ax
 	001537a0 mov ax,0x397
 	001537ac farpush ax
 	001537b4 mov ax,0x87
 	001537c0 farpush ax
 	001537c8 mov ax,0x3b
 	001537d4 farpush ax
 	001537dc mov mar,0xc06f20
 	001537e8 mov ax,mar
 	001537f4 mov op,ax
 	001537fc setfuncargs 0x4
 	00153804 mov ax,0xb2ef20
 	00153810 farcall ax
 	00153818 farsubsp 0x4
 	00153820 pop op
 	00153828 sourceline 0x113e
 	00153830 push op
 	00153838 mov ax,0x7cfe
 	00153844 farpush ax
 	0015384c mov ax,0x7cfe
 	00153858 farpush ax
 	00153860 mov ax,0x7cfe
 	0015386c farpush ax
 	00153874 mov ax,0x0
 	00153880 farpush ax
 	00153888 mov mar,0xbdef20
 	00153894 mov ax,mar
 	001538a0 mov op,ax
 	001538a8 setfuncargs 0x4
 	001538b0 mov ax,0xc16f20
 	001538bc farcall ax
 	001538c4 farsubsp 0x4
 	001538cc pop op
 	001538d4 sourceline 0x113f
 	001538dc push op
 	001538e4 mov ax,0x84
 	001538f0 farpush ax
 	001538f8 mov mar,0xc06f20
 	00153904 mov ax,mar
 	00153910 mov op,ax
 	00153918 setfuncargs 0x1
 	00153920 mov ax,0x51ef20
 	0015392c farcall ax
 	00153934 farsubsp 0x1
 	0015393c pop op
 	00153944 sourceline 0x1140
 	0015394c mov ax,0x0
 	00153958 mov bx,ax
 	00153964 mov mar,0xc06f20
 	00153970 mov ax,mar
 	0015397c push op
 	00153984 mov op,ax
 	0015398c farpush bx
 	00153994 setfuncargs 0x1
 	0015399c mov ax,0x766f20
 	001539a8 farcall ax
 	001539b0 farsubsp 0x1
 	001539b8 pop op
 	001539c0 sourceline 0x1141
 	001539c8 mov ax,0x0
 	001539d4 mov mar,0x5eef20
 	001539e0 memwrite4 ax
 	001539e8 sourceline 0x1142
 	001539f0 mov ax,0x1
 	001539fc mov mar,0xbfef20
 	00153a08 memwrite4 ax
 	00153a10 sourceline 0x1143
 	00153a18 mov ax,0x2
 	00153a24 farpush ax
 	00153a2c setfuncargs 0x1
 	00153a34 mov ax,0xc1ef20
 	00153a40 farcall ax
 	00153a48 farsubsp 0x1
		00153a50: FALL_THROUGH

	[00153a50]
		00152258: UNCONDITIONAL_JUMP
		001522ac: FALL_THROUGH
 	00153a50 sourceline 0x1145
 	00153a58 jmp 0x00153b88
		00153b88: UNCONDITIONAL_JUMP

	[00153a60]
		001521f8: CONDITIONAL_JUMP
 	00153a60 sourceline 0x1148
 	00153a68 mov ax,0x1
 	00153a74 mov bx,ax
 	00153a80 mov mar,0x3cef20
 	00153a8c mov ax,mar
 	00153a98 push op
 	00153aa0 mov op,ax
 	00153aa8 farpush bx
 	00153ab0 setfuncargs 0x1
 	00153ab8 mov ax,0x69ef20
 	00153ac4 farcall ax
 	00153acc farsubsp 0x1
 	00153ad4 pop op
 	00153adc sourceline 0x1149
 	00153ae4 push op
 	00153aec mov ax,0x2c7eb9
 	00153af8 farpush ax
 	00153b00 mov ax,0x138
 	00153b0c farpush ax
 	00153b14 mov ax,0x92
 	00153b20 farpush ax
 	00153b28 mov ax,0x0
 	00153b34 farpush ax
 	00153b3c mov mar,0x3cef20
 	00153b48 mov ax,mar
 	00153b54 mov op,ax
 	00153b5c setfuncargs 0x4
 	00153b64 mov ax,0x6aef20
 	00153b70 farcall ax
 	00153b78 farsubsp 0x4
 	00153b80 pop op
		00153b88: FALL_THROUGH

	[00153b88]
		00151c14: UNCONDITIONAL_JUMP
		001521e8: UNCONDITIONAL_JUMP
		00153a50: UNCONDITIONAL_JUMP
		00153a60: FALL_THROUGH
 	00153b88 sourceline 0x114d
 	00153b90 mov ax,0x0
 	00153b9c ret

cKid_Interact$0:
	[00153ba0]
 	00153ba0 sourceline 0x1155
 	00153ba8 thisaddr
 	00153bb0 sourceline 0x1156
*	00153bb8 mov mar,0xc2ef20
 	00153bc4 memread4 ax
 	00153bcc push ax
 	00153bd4 mov ax,0x0
 	00153be0 pop bx
 	00153be8 cmpeq bx,ax
 	00153bf4 mov ax,bx
 	00153c00 jz 0x00154bf8
		00154bf8: CONDITIONAL_JUMP
		00153c08: FALL_THROUGH

	[00153c08]
		00153ba0: FALL_THROUGH
 	00153c08 sourceline 0x1158
 	00153c10 setfuncargs 0x0
 	00153c18 mov ax,0x6def20
 	00153c24 farcall ax
 	00153c2c lnot ax
 	00153c34 jz 0x00153c90
		00153c90: CONDITIONAL_JUMP
		00153c3c: FALL_THROUGH

	[00153c3c]
		00153c08: FALL_THROUGH
 	00153c3c mov ax,0x8b
 	00153c48 farpush ax
 	00153c50 mov ax,0xc0
 	00153c5c farpush ax
 	00153c64 setfuncargs 0x2
 	00153c6c mov ax,0x6e6f20
 	00153c78 farcall ax
 	00153c80 farsubsp 0x2
 	00153c88 jmp 0x00154be8
		00154be8: UNCONDITIONAL_JUMP

	[00153c90]
		00153c08: CONDITIONAL_JUMP
 	00153c90 sourceline 0x115b
 	00153c98 push op
 	00153ca0 mov ax,0x397
 	00153cac farpush ax
 	00153cb4 mov ax,0x5
 	00153cc0 farpush ax
 	00153cc8 mov mar,0x3cef20
 	00153cd4 mov ax,mar
 	00153ce0 mov op,ax
 	00153ce8 setfuncargs 0x2
 	00153cf0 mov ax,0x6eef20
 	00153cfc farcall ax
 	00153d04 farsubsp 0x2
 	00153d0c pop op
 	00153d14 sourceline 0x115c
 	00153d1c mov ax,0x3
 	00153d28 mov bx,ax
 	00153d34 mov mar,0x3cef20
 	00153d40 mov ax,mar
 	00153d4c push op
 	00153d54 mov op,ax
 	00153d5c farpush bx
 	00153d64 setfuncargs 0x1
 	00153d6c mov ax,0x69ef20
 	00153d78 farcall ax
 	00153d80 farsubsp 0x1
 	00153d88 pop op
 	00153d90 sourceline 0x115d
 	00153d98 push op
 	00153da0 mov ax,0x2c3a01
 	00153dac farpush ax
 	00153db4 mov mar,0x3cef20
 	00153dc0 mov ax,mar
 	00153dcc mov op,ax
 	00153dd4 setfuncargs 0x1
 	00153ddc mov ax,0x6f6f20
 	00153de8 farcall ax
 	00153df0 farsubsp 0x1
 	00153df8 pop op
 	00153e00 sourceline 0x115e
 	00153e08 push op
 	00153e10 mov ax,0x81
 	00153e1c farpush ax
 	00153e24 mov mar,0xc3ef20
 	00153e30 mov ax,mar
 	00153e3c mov op,ax
 	00153e44 setfuncargs 0x1
 	00153e4c mov ax,0x51ef20
 	00153e58 farcall ax
 	00153e60 farsubsp 0x1
 	00153e68 pop op
 	00153e70 sourceline 0x115f
 	00153e78 mov ax,0x84
 	00153e84 mov bx,ax
 	00153e90 mov mar,0xc3ef20
 	00153e9c mov ax,mar
 	00153ea8 push op
 	00153eb0 mov op,ax
 	00153eb8 farpush bx
 	00153ec0 setfuncargs 0x1
 	00153ec8 mov ax,0x526f20
 	00153ed4 farcall ax
 	00153edc farsubsp 0x1
 	00153ee4 pop op
 	00153eec sourceline 0x1160
 	00153ef4 mov ax,0xd6
 	00153f00 mov bx,ax
 	00153f0c mov mar,0xc3ef20
 	00153f18 mov ax,mar
 	00153f24 push op
 	00153f2c mov op,ax
 	00153f34 farpush bx
 	00153f3c setfuncargs 0x1
 	00153f44 mov ax,0x70ef20
 	00153f50 farcall ax
 	00153f58 farsubsp 0x1
 	00153f60 pop op
 	00153f68 sourceline 0x1161
 	00153f70 push op
 	00153f78 mov ax,0x426
 	00153f84 farpush ax
 	00153f8c mov ax,0x397
 	00153f98 farpush ax
 	00153fa0 mov ax,0x0
 	00153fac farpush ax
 	00153fb4 mov ax,0x3
 	00153fc0 farpush ax
 	00153fc8 mov ax,0x0
 	00153fd4 farpush ax
 	00153fdc mov mar,0xc3ef20
 	00153fe8 mov ax,mar
 	00153ff4 mov op,ax
 	00153ffc setfuncargs 0x5
 	00154004 mov ax,0x536f20
 	00154010 farcall ax
 	00154018 farsubsp 0x5
 	00154020 pop op
 	00154028 sourceline 0x1162
 	00154030 push op
 	00154038 mov ax,0x4c
 	00154044 farpush ax
 	0015404c mov mar,0x3cef20
 	00154058 mov ax,mar
 	00154064 mov op,ax
 	0015406c setfuncargs 0x1
 	00154074 mov ax,0x51ef20
 	00154080 farcall ax
 	00154088 farsubsp 0x1
 	00154090 pop op
 	00154098 sourceline 0x1163
 	001540a0 mov ax,0x96
 	001540ac mov bx,ax
 	001540b8 mov mar,0x3cef20
 	001540c4 mov ax,mar
 	001540d0 push op
 	001540d8 mov op,ax
 	001540e0 farpush bx
 	001540e8 setfuncargs 0x1
 	001540f0 mov ax,0x526f20
 	001540fc farcall ax
 	00154104 farsubsp 0x1
 	0015410c pop op
 	00154114 sourceline 0x1164
 	0015411c mov ax,0xc1
 	00154128 mov bx,ax
 	00154134 mov mar,0x3cef20
 	00154140 mov ax,mar
 	0015414c push op
 	00154154 mov op,ax
 	0015415c farpush bx
 	00154164 setfuncargs 0x1
 	0015416c mov ax,0x70ef20
 	00154178 farcall ax
 	00154180 farsubsp 0x1
 	00154188 pop op
 	00154190 sourceline 0x1165
 	00154198 push op
 	001541a0 mov ax,0x427
 	001541ac farpush ax
 	001541b4 mov ax,0x398
 	001541c0 farpush ax
 	001541c8 mov ax,0x0
 	001541d4 farpush ax
 	001541dc mov ax,0x3
 	001541e8 farpush ax
 	001541f0 mov ax,0x0
 	001541fc farpush ax
 	00154204 mov mar,0xc3ef20
 	00154210 mov ax,mar
 	0015421c mov op,ax
 	00154224 setfuncargs 0x5
 	0015422c mov ax,0x536f20
 	00154238 farcall ax
 	00154240 farsubsp 0x5
 	00154248 pop op
 	00154250 sourceline 0x1166
 	00154258 push op
 	00154260 mov ax,0x426
 	0015426c farpush ax
 	00154274 mov ax,0x397
 	00154280 farpush ax
 	00154288 mov ax,0x0
 	00154294 farpush ax
 	0015429c mov ax,0x3
 	001542a8 farpush ax
 	001542b0 mov ax,0x0
 	001542bc farpush ax
 	001542c4 mov mar,0x3cef20
 	001542d0 mov ax,mar
 	001542dc mov op,ax
 	001542e4 setfuncargs 0x5
 	001542ec mov ax,0x536f20
 	001542f8 farcall ax
 	00154300 farsubsp 0x5
 	00154308 pop op
 	00154310 sourceline 0x1167
 	00154318 mov ax,0x1e
 	00154324 farpush ax
 	0015432c setfuncargs 0x1
 	00154334 mov ax,0x426f20
 	00154340 farcall ax
 	00154348 farsubsp 0x1
 	00154350 sourceline 0x1168
 	00154358 push op
 	00154360 mov ax,0x80
 	0015436c farpush ax
 	00154374 mov mar,0xc3ef20
 	00154380 mov ax,mar
 	0015438c mov op,ax
 	00154394 setfuncargs 0x1
 	0015439c mov ax,0x51ef20
 	001543a8 farcall ax
 	001543b0 farsubsp 0x1
 	001543b8 pop op
 	001543c0 sourceline 0x1169
 	001543c8 mov ax,0x88
 	001543d4 mov bx,ax
 	001543e0 mov mar,0xc3ef20
 	001543ec mov ax,mar
 	001543f8 push op
 	00154400 mov op,ax
 	00154408 farpush bx
 	00154410 setfuncargs 0x1
 	00154418 mov ax,0x526f20
 	00154424 farcall ax
 	0015442c farsubsp 0x1
 	00154434 pop op
 	0015443c sourceline 0x116a
 	00154444 mov ax,0xd9
 	00154450 mov bx,ax
 	0015445c mov mar,0xc3ef20
 	00154468 mov ax,mar
 	00154474 push op
 	0015447c mov op,ax
 	00154484 farpush bx
 	0015448c setfuncargs 0x1
 	00154494 mov ax,0x70ef20
 	001544a0 farcall ax
 	001544a8 farsubsp 0x1
 	001544b0 pop op
 	001544b8 sourceline 0x116b
 	001544c0 mov ax,0x3
 	001544cc mov bx,ax
 	001544d8 mov mar,0x3cef20
 	001544e4 mov ax,mar
 	001544f0 push op
 	001544f8 mov op,ax
 	00154500 farpush bx
 	00154508 setfuncargs 0x1
 	00154510 mov ax,0x69ef20
 	0015451c farcall ax
 	00154524 farsubsp 0x1
 	0015452c pop op
 	00154534 sourceline 0x116c
 	0015453c push op
 	00154544 mov ax,0x2c3a15
 	00154550 farpush ax
 	00154558 mov mar,0x3cef20
 	00154564 mov ax,mar
 	00154570 mov op,ax
 	00154578 setfuncargs 0x1
 	00154580 mov ax,0x6f6f20
 	0015458c farcall ax
 	00154594 farsubsp 0x1
 	0015459c pop op
 	001545a4 sourceline 0x116d
 	001545ac push op
 	001545b4 mov ax,0x2c3a24
 	001545c0 farpush ax
 	001545c8 mov mar,0xc3ef20
 	001545d4 mov ax,mar
 	001545e0 mov op,ax
 	001545e8 setfuncargs 0x1
 	001545f0 mov ax,0x6f6f20
 	001545fc farcall ax
 	00154604 farsubsp 0x1
 	0015460c pop op
 	00154614 sourceline 0x116e
 	0015461c push op
 	00154624 mov ax,0x2c3a3a
 	00154630 farpush ax
 	00154638 mov mar,0x3cef20
 	00154644 mov ax,mar
 	00154650 mov op,ax
 	00154658 setfuncargs 0x1
 	00154660 mov ax,0x6f6f20
 	0015466c farcall ax
 	00154674 farsubsp 0x1
 	0015467c pop op
 	00154684 sourceline 0x116f
 	0015468c push op
 	00154694 mov ax,0x2c3a44
 	001546a0 farpush ax
 	001546a8 mov mar,0xc3ef20
 	001546b4 mov ax,mar
 	001546c0 mov op,ax
 	001546c8 setfuncargs 0x1
 	001546d0 mov ax,0x6f6f20
 	001546dc farcall ax
 	001546e4 farsubsp 0x1
 	001546ec pop op
 	001546f4 sourceline 0x1170
 	001546fc push op
 	00154704 mov ax,0x2bcf4f
 	00154710 farpush ax
 	00154718 mov mar,0x3cef20
 	00154724 mov ax,mar
 	00154730 mov op,ax
 	00154738 setfuncargs 0x1
 	00154740 mov ax,0x6f6f20
 	0015474c farcall ax
 	00154754 farsubsp 0x1
 	0015475c pop op
 	00154764 sourceline 0x1171
 	0015476c push op
 	00154774 mov ax,0x2bcf89
 	00154780 farpush ax
 	00154788 mov mar,0xc3ef20
 	00154794 mov ax,mar
 	001547a0 mov op,ax
 	001547a8 setfuncargs 0x1
 	001547b0 mov ax,0x6f6f20
 	001547bc farcall ax
 	001547c4 farsubsp 0x1
 	001547cc pop op
 	001547d4 sourceline 0x1172
 	001547dc push op
 	001547e4 mov ax,0x2bcfa4
 	001547f0 farpush ax
 	001547f8 mov mar,0x3cef20
 	00154804 mov ax,mar
 	00154810 mov op,ax
 	00154818 setfuncargs 0x1
 	00154820 mov ax,0x6f6f20
 	0015482c farcall ax
 	00154834 farsubsp 0x1
 	0015483c pop op
 	00154844 sourceline 0x1173
 	0015484c push op
 	00154854 mov ax,0x2bcfed
 	00154860 farpush ax
 	00154868 mov mar,0xc3ef20
 	00154874 mov ax,mar
 	00154880 mov op,ax
 	00154888 setfuncargs 0x1
 	00154890 mov ax,0x6f6f20
 	0015489c farcall ax
 	001548a4 farsubsp 0x1
 	001548ac pop op
 	001548b4 sourceline 0x1174
 	001548bc push op
 	001548c4 mov ax,0x2
 	001548d0 farpush ax
 	001548d8 mov mar,0x3cef20
 	001548e4 mov ax,mar
 	001548f0 mov op,ax
 	001548f8 setfuncargs 0x1
 	00154900 mov ax,0x51ef20
 	0015490c farcall ax
 	00154914 farsubsp 0x1
 	0015491c pop op
 	00154924 sourceline 0x1175
 	0015492c mov ax,0x5
 	00154938 mov bx,ax
 	00154944 mov mar,0x3cef20
 	00154950 mov ax,mar
 	0015495c push op
 	00154964 mov op,ax
 	0015496c farpush bx
 	00154974 setfuncargs 0x1
 	0015497c mov ax,0x766f20
 	00154988 farcall ax
 	00154990 farsubsp 0x1
 	00154998 pop op
 	001549a0 sourceline 0x1176
 	001549a8 mov ax,0x8d
 	001549b4 mov bx,ax
 	001549c0 mov mar,0x3cef20
 	001549cc mov ax,mar
 	001549d8 push op
 	001549e0 mov op,ax
 	001549e8 farpush bx
 	001549f0 setfuncargs 0x1
 	001549f8 mov ax,0x526f20
 	00154a04 farcall ax
 	00154a0c farsubsp 0x1
 	00154a14 pop op
 	00154a1c sourceline 0x1177
 	00154a24 mov ax,0xb0
 	00154a30 mov bx,ax
 	00154a3c mov mar,0x3cef20
 	00154a48 mov ax,mar
 	00154a54 push op
 	00154a5c mov op,ax
 	00154a64 farpush bx
 	00154a6c setfuncargs 0x1
 	00154a74 mov ax,0x70ef20
 	00154a80 farcall ax
 	00154a88 farsubsp 0x1
 	00154a90 pop op
 	00154a98 sourceline 0x1178
 	00154aa0 mov ax,0x1
 	00154aac mov mar,0xc2ef20
 	00154ab8 memwrite4 ax
 	00154ac0 sourceline 0x1179
 	00154ac8 mov ax,0x1
 	00154ad4 mov bx,ax
 	00154ae0 mov mar,0x3cef20
 	00154aec mov ax,mar
 	00154af8 push op
 	00154b00 mov op,ax
 	00154b08 farpush bx
 	00154b10 setfuncargs 0x1
 	00154b18 mov ax,0x69ef20
 	00154b24 farcall ax
 	00154b2c farsubsp 0x1
 	00154b34 pop op
 	00154b3c sourceline 0x117a
 	00154b44 push op
 	00154b4c mov ax,0x2bd006
 	00154b58 farpush ax
 	00154b60 mov ax,0x138
 	00154b6c farpush ax
 	00154b74 mov ax,0x92
 	00154b80 farpush ax
 	00154b88 mov ax,0x0
 	00154b94 farpush ax
 	00154b9c mov mar,0x3cef20
 	00154ba8 mov ax,mar
 	00154bb4 mov op,ax
 	00154bbc setfuncargs 0x4
 	00154bc4 mov ax,0x6aef20
 	00154bd0 farcall ax
 	00154bd8 farsubsp 0x4
 	00154be0 pop op
		00154be8: FALL_THROUGH

	[00154be8]
		00153c3c: UNCONDITIONAL_JUMP
		00153c90: FALL_THROUGH
 	00154be8 sourceline 0x117c
 	00154bf0 jmp 0x0015551c
		0015551c: UNCONDITIONAL_JUMP

	[00154bf8]
		00153ba0: CONDITIONAL_JUMP
 	00154bf8 sourceline 0x117d
 	00154c00 mov mar,0xc2ef20
 	00154c0c memread4 ax
 	00154c14 push ax
 	00154c1c mov ax,0x1
 	00154c28 pop bx
 	00154c30 cmpeq bx,ax
 	00154c3c mov ax,bx
 	00154c48 jz 0x001551b4
		001551b4: CONDITIONAL_JUMP
		00154c50: FALL_THROUGH

	[00154c50]
		00154bf8: FALL_THROUGH
 	00154c50 sourceline 0x117f
 	00154c58 setfuncargs 0x0
 	00154c60 mov ax,0x6def20
 	00154c6c farcall ax
 	00154c74 lnot ax
 	00154c7c jz 0x00154cd8
		00154cd8: CONDITIONAL_JUMP
		00154c84: FALL_THROUGH

	[00154c84]
		00154c50: FALL_THROUGH
 	00154c84 mov ax,0x8d
 	00154c90 farpush ax
 	00154c98 mov ax,0xbd
 	00154ca4 farpush ax
 	00154cac setfuncargs 0x2
 	00154cb4 mov ax,0x6e6f20
 	00154cc0 farcall ax
 	00154cc8 farsubsp 0x2
 	00154cd0 jmp 0x001551a4
		001551a4: UNCONDITIONAL_JUMP

	[00154cd8]
		00154c50: CONDITIONAL_JUMP
 	00154cd8 sourceline 0x1182
 	00154ce0 push op
 	00154ce8 mov ax,0x397
 	00154cf4 farpush ax
 	00154cfc mov ax,0x5
 	00154d08 farpush ax
 	00154d10 mov mar,0x3cef20
 	00154d1c mov ax,mar
 	00154d28 mov op,ax
 	00154d30 setfuncargs 0x2
 	00154d38 mov ax,0x6eef20
 	00154d44 farcall ax
 	00154d4c farsubsp 0x2
 	00154d54 pop op
 	00154d5c sourceline 0x1183
 	00154d64 push op
 	00154d6c mov ax,0x426
 	00154d78 farpush ax
 	00154d80 mov ax,0x397
 	00154d8c farpush ax
 	00154d94 mov ax,0x0
 	00154da0 farpush ax
 	00154da8 mov ax,0x3
 	00154db4 farpush ax
 	00154dbc mov ax,0x0
 	00154dc8 farpush ax
 	00154dd0 mov mar,0xc3ef20
 	00154ddc mov ax,mar
 	00154de8 mov op,ax
 	00154df0 setfuncargs 0x5
 	00154df8 mov ax,0x536f20
 	00154e04 farcall ax
 	00154e0c farsubsp 0x5
 	00154e14 pop op
 	00154e1c sourceline 0x1184
 	00154e24 mov ax,0x3
 	00154e30 mov bx,ax
 	00154e3c mov mar,0x3cef20
 	00154e48 mov ax,mar
 	00154e54 push op
 	00154e5c mov op,ax
 	00154e64 farpush bx
 	00154e6c setfuncargs 0x1
 	00154e74 mov ax,0x69ef20
 	00154e80 farcall ax
 	00154e88 farsubsp 0x1
 	00154e90 pop op
 	00154e98 sourceline 0x1185
 	00154ea0 push op
 	00154ea8 mov ax,0x2c3b79
 	00154eb4 farpush ax
 	00154ebc mov mar,0x3cef20
 	00154ec8 mov ax,mar
 	00154ed4 mov op,ax
 	00154edc setfuncargs 0x1
 	00154ee4 mov ax,0x6f6f20
 	00154ef0 farcall ax
 	00154ef8 farsubsp 0x1
 	00154f00 pop op
 	00154f08 sourceline 0x1186
 	00154f10 push op
 	00154f18 mov ax,0x2c3b8a
 	00154f24 farpush ax
 	00154f2c mov mar,0xc3ef20
 	00154f38 mov ax,mar
 	00154f44 mov op,ax
 	00154f4c setfuncargs 0x1
 	00154f54 mov ax,0x6f6f20
 	00154f60 farcall ax
 	00154f68 farsubsp 0x1
 	00154f70 pop op
 	00154f78 sourceline 0x1187
 	00154f80 push op
 	00154f88 mov mar,0x926f20
 	00154f94 mov ax,mar
 	00154fa0 farpush ax
 	00154fa8 mov mar,0x3cef20
 	00154fb4 mov ax,mar
 	00154fc0 mov op,ax
 	00154fc8 setfuncargs 0x1
 	00154fd0 mov ax,0x996f20
 	00154fdc farcall ax
 	00154fe4 farsubsp 0x1
 	00154fec pop op
 	00154ff4 lnot ax
 	00154ffc jz 0x00155074
		00155074: CONDITIONAL_JUMP
		00155004: FALL_THROUGH

	[00155004]
		00154cd8: FALL_THROUGH
 	00155004 push op
 	0015500c mov ax,0x2bd085
 	00155018 farpush ax
 	00155020 mov mar,0x3cef20
 	0015502c mov ax,mar
 	00155038 mov op,ax
 	00155040 setfuncargs 0x1
 	00155048 mov ax,0x6f6f20
 	00155054 farcall ax
 	0015505c farsubsp 0x1
 	00155064 pop op
 	0015506c jmp 0x001550e4
		001550e4: UNCONDITIONAL_JUMP

	[00155074]
		00154cd8: CONDITIONAL_JUMP
 	00155074 sourceline 0x1188
 	0015507c push op
 	00155084 mov ax,0x2bd094
 	00155090 farpush ax
 	00155098 mov mar,0x3cef20
 	001550a4 mov ax,mar
 	001550b0 mov op,ax
 	001550b8 setfuncargs 0x1
 	001550c0 mov ax,0x6f6f20
 	001550cc farcall ax
 	001550d4 farsubsp 0x1
 	001550dc pop op
		001550e4: FALL_THROUGH

	[001550e4]
		00155004: UNCONDITIONAL_JUMP
		00155074: FALL_THROUGH
 	001550e4 sourceline 0x1189
 	001550ec push op
 	001550f4 mov ax,0x427
 	00155100 farpush ax
 	00155108 mov ax,0x397
 	00155114 farpush ax
 	0015511c mov ax,0x0
 	00155128 farpush ax
 	00155130 mov ax,0x3
 	0015513c farpush ax
 	00155144 mov ax,0x0
 	00155150 farpush ax
 	00155158 mov mar,0xc3ef20
 	00155164 mov ax,mar
 	00155170 mov op,ax
 	00155178 setfuncargs 0x5
 	00155180 mov ax,0x536f20
 	0015518c farcall ax
 	00155194 farsubsp 0x5
 	0015519c pop op
		001551a4: FALL_THROUGH

	[001551a4]
		00154c84: UNCONDITIONAL_JUMP
		001550e4: FALL_THROUGH
 	001551a4 sourceline 0x118b
 	001551ac jmp 0x0015551c
		0015551c: UNCONDITIONAL_JUMP

	[001551b4]
		00154bf8: CONDITIONAL_JUMP
 	001551b4 sourceline 0x118c
 	001551bc mov mar,0xc2ef20
 	001551c8 memread4 ax
 	001551d0 push ax
 	001551d8 mov ax,0x2
 	001551e4 pop bx
 	001551ec cmpeq bx,ax
 	001551f8 mov ax,bx
 	00155204 jz 0x0015551c
		0015551c: CONDITIONAL_JUMP
		0015520c: FALL_THROUGH

	[0015520c]
		001551b4: FALL_THROUGH
 	0015520c sourceline 0x118e
 	00155214 mov mar,0x42ef20
 	00155220 push mar
 	00155228 pop mar
 	00155230 memread.ptr ax
 	00155238 push ax
 	00155240 pop mar
 	00155248 mov ax,mar
 	00155254 push op
 	0015525c mov op,ax
 	00155264 setfuncargs 0x0
 	0015526c mov ax,0x78ef20
 	00155278 farcall ax
 	00155280 pop op
 	00155288 push ax
 	00155290 mov ax,0x83
 	0015529c pop bx
 	001552a4 cmplt bx,ax
 	001552b0 mov ax,bx
 	001552bc jz 0x0015535c
		0015535c: CONDITIONAL_JUMP
		001552c4: FALL_THROUGH

	[001552c4]
		0015520c: FALL_THROUGH
 	001552c4 push op
 	001552cc mov ax,0x397
 	001552d8 farpush ax
 	001552e0 mov ax,0xa6
 	001552ec farpush ax
 	001552f4 mov ax,0xa9
 	00155300 farpush ax
 	00155308 mov mar,0x3cef20
 	00155314 mov ax,mar
 	00155320 mov op,ax
 	00155328 setfuncargs 0x3
 	00155330 mov ax,0x726f20
 	0015533c farcall ax
 	00155344 farsubsp 0x3
 	0015534c pop op
 	00155354 jmp 0x001553f4
		001553f4: UNCONDITIONAL_JUMP

	[0015535c]
		0015520c: CONDITIONAL_JUMP
 	0015535c sourceline 0x118f
 	00155364 push op
 	0015536c mov ax,0x397
 	00155378 farpush ax
 	00155380 mov ax,0x6d
 	0015538c farpush ax
 	00155394 mov ax,0xd1
 	001553a0 farpush ax
 	001553a8 mov mar,0x3cef20
 	001553b4 mov ax,mar
 	001553c0 mov op,ax
 	001553c8 setfuncargs 0x3
 	001553d0 mov ax,0x726f20
 	001553dc farcall ax
 	001553e4 farsubsp 0x3
 	001553ec pop op
		001553f4: FALL_THROUGH

	[001553f4]
		001552c4: UNCONDITIONAL_JUMP
		0015535c: FALL_THROUGH
 	001553f4 sourceline 0x1190
 	001553fc mov ax,0x1
 	00155408 mov bx,ax
 	00155414 mov mar,0x3cef20
 	00155420 mov ax,mar
 	0015542c push op
 	00155434 mov op,ax
 	0015543c farpush bx
 	00155444 setfuncargs 0x1
 	0015544c mov ax,0x69ef20
 	00155458 farcall ax
 	00155460 farsubsp 0x1
 	00155468 pop op
 	00155470 sourceline 0x1191
 	00155478 push op
 	00155480 mov ax,0x2c798e
 	0015548c farpush ax
 	00155494 mov ax,0x138
 	001554a0 farpush ax
 	001554a8 mov ax,0x92
 	001554b4 farpush ax
 	001554bc mov ax,0x0
 	001554c8 farpush ax
 	001554d0 mov mar,0x3cef20
 	001554dc mov ax,mar
 	001554e8 mov op,ax
 	001554f0 setfuncargs 0x4
 	001554f8 mov ax,0x6aef20
 	00155504 farcall ax
 	0015550c farsubsp 0x4
 	00155514 pop op
		0015551c: FALL_THROUGH

	[0015551c]
		00154be8: UNCONDITIONAL_JUMP
		001551a4: UNCONDITIONAL_JUMP
		001551b4: CONDITIONAL_JUMP
		001553f4: FALL_THROUGH
 	0015551c sourceline 0x119d
 	00155524 mov ax,0x0
 	00155530 ret

cHippie_Interact$0:
	[00155534]
 	00155534 sourceline 0x11a4
 	0015553c thisaddr
 	00155544 sourceline 0x11a5
 	0015554c push op
 	00155554 mov ax,0x1
 	00155560 farpush ax
*	00155568 mov mar,0xc46f20
 	00155574 mov ax,mar
 	00155580 mov op,ax
 	00155588 setfuncargs 0x1
 	00155590 mov ax,0x6d6f20
 	0015559c farcall ax
 	001555a4 farsubsp 0x1
 	001555ac pop op
 	001555b4 lnot ax
 	001555bc jnz 0x0015565c
		0015565c: CONDITIONAL_JUMP
		001555c4: FALL_THROUGH

	[001555c4]
		00155534: FALL_THROUGH
 	001555c4 push ax
 	001555cc push op
 	001555d4 mov ax,0x2
 	001555e0 farpush ax
 	001555e8 mov mar,0xc46f20
 	001555f4 mov ax,mar
 	00155600 mov op,ax
 	00155608 setfuncargs 0x1
 	00155610 mov ax,0x6d6f20
 	0015561c farcall ax
 	00155624 farsubsp 0x1
 	0015562c pop op
 	00155634 lnot ax
 	0015563c pop bx
 	00155644 lor bx,ax
 	00155650 mov ax,bx
		0015565c: FALL_THROUGH

	[0015565c]
		00155534: CONDITIONAL_JUMP
		001555c4: FALL_THROUGH
 	0015565c jnz 0x001556fc
		001556fc: CONDITIONAL_JUMP
		00155664: FALL_THROUGH

	[00155664]
		0015565c: FALL_THROUGH
 	00155664 push ax
 	0015566c push op
 	00155674 mov ax,0x3
 	00155680 farpush ax
 	00155688 mov mar,0xc46f20
 	00155694 mov ax,mar
 	001556a0 mov op,ax
 	001556a8 setfuncargs 0x1
 	001556b0 mov ax,0x6d6f20
 	001556bc farcall ax
 	001556c4 farsubsp 0x1
 	001556cc pop op
 	001556d4 lnot ax
 	001556dc pop bx
 	001556e4 lor bx,ax
 	001556f0 mov ax,bx
		001556fc: FALL_THROUGH

	[001556fc]
		0015565c: CONDITIONAL_JUMP
		00155664: FALL_THROUGH
 	001556fc jnz 0x0015579c
		0015579c: CONDITIONAL_JUMP
		00155704: FALL_THROUGH

	[00155704]
		001556fc: FALL_THROUGH
 	00155704 push ax
 	0015570c push op
 	00155714 mov ax,0x4
 	00155720 farpush ax
 	00155728 mov mar,0xc46f20
 	00155734 mov ax,mar
 	00155740 mov op,ax
 	00155748 setfuncargs 0x1
 	00155750 mov ax,0x6d6f20
 	0015575c farcall ax
 	00155764 farsubsp 0x1
 	0015576c pop op
 	00155774 lnot ax
 	0015577c pop bx
 	00155784 lor bx,ax
 	00155790 mov ax,bx
		0015579c: FALL_THROUGH

	[0015579c]
		001556fc: CONDITIONAL_JUMP
		00155704: FALL_THROUGH
 	0015579c jz 0x00155914
		00155914: CONDITIONAL_JUMP
		001557a4: FALL_THROUGH

	[001557a4]
		0015579c: FALL_THROUGH
 	001557a4 sourceline 0x11a7
 	001557ac setfuncargs 0x0
 	001557b4 mov ax,0x6def20
 	001557c0 farcall ax
 	001557c8 lnot ax
 	001557d0 jz 0x0015582c
		0015582c: CONDITIONAL_JUMP
		001557d8: FALL_THROUGH

	[001557d8]
		001557a4: FALL_THROUGH
 	001557d8 mov ax,0x78
 	001557e4 farpush ax
 	001557ec mov ax,0xba
 	001557f8 farpush ax
 	00155800 setfuncargs 0x2
 	00155808 mov ax,0x6e6f20
 	00155814 farcall ax
 	0015581c farsubsp 0x2
 	00155824 jmp 0x00155904
		00155904: UNCONDITIONAL_JUMP

	[0015582c]
		001557a4: CONDITIONAL_JUMP
 	0015582c sourceline 0x11aa
 	00155834 push op
 	0015583c mov ax,0x397
 	00155848 farpush ax
 	00155850 mov ax,0x7
 	0015585c farpush ax
 	00155864 mov mar,0x3cef20
 	00155870 mov ax,mar
 	0015587c mov op,ax
 	00155884 setfuncargs 0x2
 	0015588c mov ax,0x6eef20
 	00155898 farcall ax
 	001558a0 farsubsp 0x2
 	001558a8 pop op
 	001558b0 sourceline 0x11ab
 	001558b8 push op
 	001558c0 mov mar,0xc46f20
 	001558cc mov ax,mar
 	001558d8 mov op,ax
 	001558e0 setfuncargs 0x0
 	001558e8 mov ax,0x71ef20
 	001558f4 farcall ax
 	001558fc pop op
		00155904: FALL_THROUGH

	[00155904]
		001557d8: UNCONDITIONAL_JUMP
		0015582c: FALL_THROUGH
 	00155904 sourceline 0x11ad
 	0015590c jmp 0x001560ac
		001560ac: UNCONDITIONAL_JUMP

	[00155914]
		0015579c: CONDITIONAL_JUMP
 	00155914 sourceline 0x11b0
 	0015591c mov mar,0xc4ef20
 	00155928 memread4 ax
 	00155930 jz 0x00155eec
		00155eec: CONDITIONAL_JUMP
		00155938: FALL_THROUGH

	[00155938]
		00155914: FALL_THROUGH
 	00155938 sourceline 0x11b2
 	00155940 mov mar,0x876f20
 	0015594c memread4 ax
 	00155954 jz 0x00155b2c
		00155b2c: CONDITIONAL_JUMP
		0015595c: FALL_THROUGH

	[0015595c]
		00155938: FALL_THROUGH
 	0015595c sourceline 0x11b4
 	00155964 push op
 	0015596c mov ax,0x397
 	00155978 farpush ax
 	00155980 mov ax,0x4c
 	0015598c farpush ax
 	00155994 mov ax,0x91
 	001559a0 farpush ax
 	001559a8 mov mar,0x3cef20
 	001559b4 mov ax,mar
 	001559c0 mov op,ax
 	001559c8 setfuncargs 0x3
 	001559d0 mov ax,0x726f20
 	001559dc farcall ax
 	001559e4 farsubsp 0x3
 	001559ec pop op
 	001559f4 sourceline 0x11b5
 	001559fc mov ax,0x1
 	00155a08 mov bx,ax
 	00155a14 mov mar,0x3cef20
 	00155a20 mov ax,mar
 	00155a2c push op
 	00155a34 mov op,ax
 	00155a3c farpush bx
 	00155a44 setfuncargs 0x1
 	00155a4c mov ax,0x69ef20
 	00155a58 farcall ax
 	00155a60 farsubsp 0x1
 	00155a68 pop op
 	00155a70 sourceline 0x11b6
 	00155a78 push op
 	00155a80 mov ax,0x2c798e
 	00155a8c farpush ax
 	00155a94 mov ax,0x138
 	00155aa0 farpush ax
 	00155aa8 mov ax,0x92
 	00155ab4 farpush ax
 	00155abc mov ax,0x0
 	00155ac8 farpush ax
 	00155ad0 mov mar,0x3cef20
 	00155adc mov ax,mar
 	00155ae8 mov op,ax
 	00155af0 setfuncargs 0x4
 	00155af8 mov ax,0x6aef20
 	00155b04 farcall ax
 	00155b0c farsubsp 0x4
 	00155b14 pop op
 	00155b1c sourceline 0x11b7
 	00155b24 jmp 0x00155edc
		00155edc: UNCONDITIONAL_JUMP

	[00155b2c]
		00155938: CONDITIONAL_JUMP
 	00155b2c sourceline 0x11ba
 	00155b34 push op
 	00155b3c mov ax,0x5
 	00155b48 farpush ax
 	00155b50 mov mar,0xc46f20
 	00155b5c mov ax,mar
 	00155b68 mov op,ax
 	00155b70 setfuncargs 0x1
 	00155b78 mov ax,0x6d6f20
 	00155b84 farcall ax
 	00155b8c farsubsp 0x1
 	00155b94 pop op
 	00155b9c lnot ax
 	00155ba4 jz 0x00155d1c
		00155d1c: CONDITIONAL_JUMP
		00155bac: FALL_THROUGH

	[00155bac]
		00155b2c: FALL_THROUGH
 	00155bac sourceline 0x11bc
 	00155bb4 setfuncargs 0x0
 	00155bbc mov ax,0x6def20
 	00155bc8 farcall ax
 	00155bd0 lnot ax
 	00155bd8 jz 0x00155c34
		00155c34: CONDITIONAL_JUMP
		00155be0: FALL_THROUGH

	[00155be0]
		00155bac: FALL_THROUGH
 	00155be0 mov ax,0x78
 	00155bec farpush ax
 	00155bf4 mov ax,0xba
 	00155c00 farpush ax
 	00155c08 setfuncargs 0x2
 	00155c10 mov ax,0x6e6f20
 	00155c1c farcall ax
 	00155c24 farsubsp 0x2
 	00155c2c jmp 0x00155d0c
		00155d0c: UNCONDITIONAL_JUMP

	[00155c34]
		00155bac: CONDITIONAL_JUMP
 	00155c34 sourceline 0x11bf
 	00155c3c push op
 	00155c44 mov ax,0x397
 	00155c50 farpush ax
 	00155c58 mov ax,0x7
 	00155c64 farpush ax
 	00155c6c mov mar,0x3cef20
 	00155c78 mov ax,mar
 	00155c84 mov op,ax
 	00155c8c setfuncargs 0x2
 	00155c94 mov ax,0x6eef20
 	00155ca0 farcall ax
 	00155ca8 farsubsp 0x2
 	00155cb0 pop op
 	00155cb8 sourceline 0x11c0
 	00155cc0 push op
 	00155cc8 mov mar,0xc46f20
 	00155cd4 mov ax,mar
 	00155ce0 mov op,ax
 	00155ce8 setfuncargs 0x0
 	00155cf0 mov ax,0x71ef20
 	00155cfc farcall ax
 	00155d04 pop op
		00155d0c: FALL_THROUGH

	[00155d0c]
		00155be0: UNCONDITIONAL_JUMP
		00155c34: FALL_THROUGH
 	00155d0c sourceline 0x11c2
 	00155d14 jmp 0x00155edc
		00155edc: UNCONDITIONAL_JUMP

	[00155d1c]
		00155b2c: CONDITIONAL_JUMP
 	00155d1c sourceline 0x11c5
 	00155d24 push op
 	00155d2c mov ax,0x397
 	00155d38 farpush ax
 	00155d40 mov ax,0x4c
 	00155d4c farpush ax
 	00155d54 mov ax,0x91
 	00155d60 farpush ax
 	00155d68 mov mar,0x3cef20
 	00155d74 mov ax,mar
 	00155d80 mov op,ax
 	00155d88 setfuncargs 0x3
 	00155d90 mov ax,0x726f20
 	00155d9c farcall ax
 	00155da4 farsubsp 0x3
 	00155dac pop op
 	00155db4 sourceline 0x11c6
 	00155dbc mov ax,0x1
 	00155dc8 mov bx,ax
 	00155dd4 mov mar,0x3cef20
 	00155de0 mov ax,mar
 	00155dec push op
 	00155df4 mov op,ax
 	00155dfc farpush bx
 	00155e04 setfuncargs 0x1
 	00155e0c mov ax,0x69ef20
 	00155e18 farcall ax
 	00155e20 farsubsp 0x1
 	00155e28 pop op
 	00155e30 sourceline 0x11c7
 	00155e38 push op
 	00155e40 mov ax,0x2c798e
 	00155e4c farpush ax
 	00155e54 mov ax,0x138
 	00155e60 farpush ax
 	00155e68 mov ax,0x92
 	00155e74 farpush ax
 	00155e7c mov ax,0x0
 	00155e88 farpush ax
 	00155e90 mov mar,0x3cef20
 	00155e9c mov ax,mar
 	00155ea8 mov op,ax
 	00155eb0 setfuncargs 0x4
 	00155eb8 mov ax,0x6aef20
 	00155ec4 farcall ax
 	00155ecc farsubsp 0x4
 	00155ed4 pop op
		00155edc: FALL_THROUGH

	[00155edc]
		0015595c: UNCONDITIONAL_JUMP
		00155d0c: UNCONDITIONAL_JUMP
		00155d1c: FALL_THROUGH
 	00155edc sourceline 0x11ca
 	00155ee4 jmp 0x001560ac
		001560ac: UNCONDITIONAL_JUMP

	[00155eec]
		00155914: CONDITIONAL_JUMP
 	00155eec sourceline 0x11cd
 	00155ef4 push op
 	00155efc mov ax,0x397
 	00155f08 farpush ax
 	00155f10 mov ax,0x4c
 	00155f1c farpush ax
 	00155f24 mov ax,0x91
 	00155f30 farpush ax
 	00155f38 mov mar,0x3cef20
 	00155f44 mov ax,mar
 	00155f50 mov op,ax
 	00155f58 setfuncargs 0x3
 	00155f60 mov ax,0x726f20
 	00155f6c farcall ax
 	00155f74 farsubsp 0x3
 	00155f7c pop op
 	00155f84 sourceline 0x11ce
 	00155f8c mov ax,0x1
 	00155f98 mov bx,ax
 	00155fa4 mov mar,0x3cef20
 	00155fb0 mov ax,mar
 	00155fbc push op
 	00155fc4 mov op,ax
 	00155fcc farpush bx
 	00155fd4 setfuncargs 0x1
 	00155fdc mov ax,0x69ef20
 	00155fe8 farcall ax
 	00155ff0 farsubsp 0x1
 	00155ff8 pop op
 	00156000 sourceline 0x11cf
 	00156008 push op
 	00156010 mov ax,0x2c798e
 	0015601c farpush ax
 	00156024 mov ax,0x138
 	00156030 farpush ax
 	00156038 mov ax,0x92
 	00156044 farpush ax
 	0015604c mov ax,0x0
 	00156058 farpush ax
 	00156060 mov mar,0x3cef20
 	0015606c mov ax,mar
 	00156078 mov op,ax
 	00156080 setfuncargs 0x4
 	00156088 mov ax,0x6aef20
 	00156094 farcall ax
 	0015609c farsubsp 0x4
 	001560a4 pop op
		001560ac: FALL_THROUGH

	[001560ac]
		00155904: UNCONDITIONAL_JUMP
		00155edc: UNCONDITIONAL_JUMP
		00155eec: FALL_THROUGH
 	001560ac sourceline 0x11d2
 	001560b4 mov ax,0x0
 	001560c0 ret

cMuslimWoman_Interact$0:
	[001560c4]
 	001560c4 sourceline 0x11d7
 	001560cc thisaddr
 	001560d4 sourceline 0x11d8
*	001560dc mov mar,0xc56f20
 	001560e8 mov ax,mar
 	001560f4 push op
 	001560fc mov op,ax
 	00156104 setfuncargs 0x0
 	0015610c mov ax,0x516f20
 	00156118 farcall ax
 	00156120 pop op
 	00156128 push ax
 	00156130 mov ax,0xa2
 	0015613c pop bx
 	00156144 cmpneq bx,ax
 	00156150 mov ax,bx
 	0015615c jz 0x0015644c
		0015644c: CONDITIONAL_JUMP
		00156164: FALL_THROUGH

	[00156164]
		001560c4: FALL_THROUGH
 	00156164 sourceline 0x11da
 	0015616c setfuncargs 0x0
 	00156174 mov ax,0x6def20
 	00156180 farcall ax
 	00156188 lnot ax
 	00156190 jz 0x001561ec
		001561ec: CONDITIONAL_JUMP
		00156198: FALL_THROUGH

	[00156198]
		00156164: FALL_THROUGH
 	00156198 mov ax,0x80
 	001561a4 farpush ax
 	001561ac mov ax,0x8e
 	001561b8 farpush ax
 	001561c0 setfuncargs 0x2
 	001561c8 mov ax,0x6e6f20
 	001561d4 farcall ax
 	001561dc farsubsp 0x2
 	001561e4 jmp 0x0015643c
		0015643c: UNCONDITIONAL_JUMP

	[001561ec]
		00156164: CONDITIONAL_JUMP
 	001561ec sourceline 0x11dd
 	001561f4 push op
 	001561fc mov ax,0x397
 	00156208 farpush ax
 	00156210 mov ax,0x1
 	0015621c farpush ax
 	00156224 mov mar,0x3cef20
 	00156230 mov ax,mar
 	0015623c mov op,ax
 	00156244 setfuncargs 0x2
 	0015624c mov ax,0x6eef20
 	00156258 farcall ax
 	00156260 farsubsp 0x2
 	00156268 pop op
 	00156270 sourceline 0x11de
 	00156278 mov ax,0x3
 	00156284 mov bx,ax
 	00156290 mov mar,0x3cef20
 	0015629c mov ax,mar
 	001562a8 push op
 	001562b0 mov op,ax
 	001562b8 farpush bx
 	001562c0 setfuncargs 0x1
 	001562c8 mov ax,0x69ef20
 	001562d4 farcall ax
 	001562dc farsubsp 0x1
 	001562e4 pop op
 	001562ec sourceline 0x11df
 	001562f4 push op
 	001562fc mov ax,0x2bd18a
 	00156308 farpush ax
 	00156310 mov mar,0x3cef20
 	0015631c mov ax,mar
 	00156328 mov op,ax
 	00156330 setfuncargs 0x1
 	00156338 mov ax,0x6f6f20
 	00156344 farcall ax
 	0015634c farsubsp 0x1
 	00156354 pop op
 	0015635c sourceline 0x11e0
 	00156364 push op
 	0015636c mov ax,0x2bd19f
 	00156378 farpush ax
 	00156380 mov mar,0xc5ef20
 	0015638c mov ax,mar
 	00156398 mov op,ax
 	001563a0 setfuncargs 0x1
 	001563a8 mov ax,0x6f6f20
 	001563b4 farcall ax
 	001563bc farsubsp 0x1
 	001563c4 pop op
 	001563cc sourceline 0x11e1
 	001563d4 push op
 	001563dc mov ax,0x2bd1b6
 	001563e8 farpush ax
 	001563f0 mov mar,0x3cef20
 	001563fc mov ax,mar
 	00156408 mov op,ax
 	00156410 setfuncargs 0x1
 	00156418 mov ax,0x6f6f20
 	00156424 farcall ax
 	0015642c farsubsp 0x1
 	00156434 pop op
		0015643c: FALL_THROUGH

	[0015643c]
		00156198: UNCONDITIONAL_JUMP
		001561ec: FALL_THROUGH
 	0015643c sourceline 0x11e3
 	00156444 jmp 0x0015660c
		0015660c: UNCONDITIONAL_JUMP

	[0015644c]
		001560c4: CONDITIONAL_JUMP
 	0015644c sourceline 0x11e6
 	00156454 push op
 	0015645c mov ax,0x397
 	00156468 farpush ax
 	00156470 mov ax,0x6b
 	0015647c farpush ax
 	00156484 mov ax,0x57
 	00156490 farpush ax
 	00156498 mov mar,0x3cef20
 	001564a4 mov ax,mar
 	001564b0 mov op,ax
 	001564b8 setfuncargs 0x3
 	001564c0 mov ax,0x726f20
 	001564cc farcall ax
 	001564d4 farsubsp 0x3
 	001564dc pop op
 	001564e4 sourceline 0x11e7
 	001564ec mov ax,0x1
 	001564f8 mov bx,ax
 	00156504 mov mar,0x3cef20
 	00156510 mov ax,mar
 	0015651c push op
 	00156524 mov op,ax
 	0015652c farpush bx
 	00156534 setfuncargs 0x1
 	0015653c mov ax,0x69ef20
 	00156548 farcall ax
 	00156550 farsubsp 0x1
 	00156558 pop op
 	00156560 sourceline 0x11e8
 	00156568 push op
 	00156570 mov ax,0x2bd317
 	0015657c farpush ax
 	00156584 mov ax,0x138
 	00156590 farpush ax
 	00156598 mov ax,0x92
 	001565a4 farpush ax
 	001565ac mov ax,0x0
 	001565b8 farpush ax
 	001565c0 mov mar,0x3cef20
 	001565cc mov ax,mar
 	001565d8 mov op,ax
 	001565e0 setfuncargs 0x4
 	001565e8 mov ax,0x6aef20
 	001565f4 farcall ax
 	001565fc farsubsp 0x4
 	00156604 pop op
		0015660c: FALL_THROUGH

	[0015660c]
		0015643c: UNCONDITIONAL_JUMP
		0015644c: FALL_THROUGH
 	0015660c sourceline 0x11ea
 	00156614 mov ax,0x0
 	00156620 ret

cOldIranian_Interact$0:
	[00156624]
 	00156624 sourceline 0x11ef
 	0015662c thisaddr
 	00156634 sourceline 0x11f0
*	0015663c mov mar,0xc56f20
 	00156648 mov ax,mar
 	00156654 push op
 	0015665c mov op,ax
 	00156664 setfuncargs 0x0
 	0015666c mov ax,0x516f20
 	00156678 farcall ax
 	00156680 pop op
 	00156688 push ax
 	00156690 mov ax,0xa2
 	0015669c pop bx
 	001566a4 cmpneq bx,ax
 	001566b0 mov ax,bx
 	001566bc jz 0x00156a28
		00156a28: CONDITIONAL_JUMP
		001566c4: FALL_THROUGH

	[001566c4]
		00156624: FALL_THROUGH
 	001566c4 sourceline 0x11f2
 	001566cc setfuncargs 0x0
 	001566d4 mov ax,0x6def20
 	001566e0 farcall ax
 	001566e8 lnot ax
 	001566f0 jz 0x0015674c
		0015674c: CONDITIONAL_JUMP
		001566f8: FALL_THROUGH

	[001566f8]
		001566c4: FALL_THROUGH
 	001566f8 mov ax,0x88
 	00156704 farpush ax
 	0015670c mov ax,0x6d
 	00156718 farpush ax
 	00156720 setfuncargs 0x2
 	00156728 mov ax,0x6e6f20
 	00156734 farcall ax
 	0015673c farsubsp 0x2
 	00156744 jmp 0x00156a18
		00156a18: UNCONDITIONAL_JUMP

	[0015674c]
		001566c4: CONDITIONAL_JUMP
 	0015674c sourceline 0x11f5
 	00156754 push op
 	0015675c mov ax,0x397
 	00156768 farpush ax
 	00156770 mov ax,0x1
 	0015677c farpush ax
 	00156784 mov mar,0x3cef20
 	00156790 mov ax,mar
 	0015679c mov op,ax
 	001567a4 setfuncargs 0x2
 	001567ac mov ax,0x6eef20
 	001567b8 farcall ax
 	001567c0 farsubsp 0x2
 	001567c8 pop op
 	001567d0 sourceline 0x11f6
 	001567d8 mov ax,0x3
 	001567e4 mov bx,ax
 	001567f0 mov mar,0x3cef20
 	001567fc mov ax,mar
 	00156808 push op
 	00156810 mov op,ax
 	00156818 farpush bx
 	00156820 setfuncargs 0x1
 	00156828 mov ax,0x69ef20
 	00156834 farcall ax
 	0015683c farsubsp 0x1
 	00156844 pop op
 	0015684c sourceline 0x11f7
 	00156854 push op
 	0015685c mov ax,0x2bd1ee
 	00156868 farpush ax
 	00156870 mov mar,0x3cef20
 	0015687c mov ax,mar
 	00156888 mov op,ax
 	00156890 setfuncargs 0x1
 	00156898 mov ax,0x6f6f20
 	001568a4 farcall ax
 	001568ac farsubsp 0x1
 	001568b4 pop op
 	001568bc sourceline 0x11f8
 	001568c4 push op
 	001568cc mov ax,0x2bd20b
 	001568d8 farpush ax
 	001568e0 mov mar,0xc66f20
 	001568ec mov ax,mar
 	001568f8 mov op,ax
 	00156900 setfuncargs 0x1
 	00156908 mov ax,0x6f6f20
 	00156914 farcall ax
 	0015691c farsubsp 0x1
 	00156924 pop op
 	0015692c sourceline 0x11f9
 	00156934 push op
 	0015693c mov ax,0x2bd244
 	00156948 farpush ax
 	00156950 mov mar,0x3cef20
 	0015695c mov ax,mar
 	00156968 mov op,ax
 	00156970 setfuncargs 0x1
 	00156978 mov ax,0x6f6f20
 	00156984 farcall ax
 	0015698c farsubsp 0x1
 	00156994 pop op
 	0015699c sourceline 0x11fa
 	001569a4 mov ax,0x1
 	001569b0 mov bx,ax
 	001569bc mov mar,0x3cef20
 	001569c8 mov ax,mar
 	001569d4 push op
 	001569dc mov op,ax
 	001569e4 farpush bx
 	001569ec setfuncargs 0x1
 	001569f4 mov ax,0x69ef20
 	00156a00 farcall ax
 	00156a08 farsubsp 0x1
 	00156a10 pop op
		00156a18: FALL_THROUGH

	[00156a18]
		001566f8: UNCONDITIONAL_JUMP
		0015674c: FALL_THROUGH
 	00156a18 sourceline 0x11fc
 	00156a20 jmp 0x00156be8
		00156be8: UNCONDITIONAL_JUMP

	[00156a28]
		00156624: CONDITIONAL_JUMP
 	00156a28 sourceline 0x11ff
 	00156a30 push op
 	00156a38 mov ax,0x397
 	00156a44 farpush ax
 	00156a4c mov ax,0x6a
 	00156a58 farpush ax
 	00156a60 mov ax,0x1e
 	00156a6c farpush ax
 	00156a74 mov mar,0x3cef20
 	00156a80 mov ax,mar
 	00156a8c mov op,ax
 	00156a94 setfuncargs 0x3
 	00156a9c mov ax,0x726f20
 	00156aa8 farcall ax
 	00156ab0 farsubsp 0x3
 	00156ab8 pop op
 	00156ac0 sourceline 0x1200
 	00156ac8 mov ax,0x1
 	00156ad4 mov bx,ax
 	00156ae0 mov mar,0x3cef20
 	00156aec mov ax,mar
 	00156af8 push op
 	00156b00 mov op,ax
 	00156b08 farpush bx
 	00156b10 setfuncargs 0x1
 	00156b18 mov ax,0x69ef20
 	00156b24 farcall ax
 	00156b2c farsubsp 0x1
 	00156b34 pop op
 	00156b3c sourceline 0x1201
 	00156b44 push op
 	00156b4c mov ax,0x2bd317
 	00156b58 farpush ax
 	00156b60 mov ax,0x138
 	00156b6c farpush ax
 	00156b74 mov ax,0x92
 	00156b80 farpush ax
 	00156b88 mov ax,0x0
 	00156b94 farpush ax
 	00156b9c mov mar,0x3cef20
 	00156ba8 mov ax,mar
 	00156bb4 mov op,ax
 	00156bbc setfuncargs 0x4
 	00156bc4 mov ax,0x6aef20
 	00156bd0 farcall ax
 	00156bd8 farsubsp 0x4
 	00156be0 pop op
		00156be8: FALL_THROUGH

	[00156be8]
		00156a18: UNCONDITIONAL_JUMP
		00156a28: FALL_THROUGH
 	00156be8 sourceline 0x1203
 	00156bf0 mov ax,0x0
 	00156bfc ret

cGuard_Interact$0:
	[00156c00]
 	00156c00 sourceline 0x1208
 	00156c08 thisaddr
 	00156c10 sourceline 0x1209
*	00156c18 mov mar,0xc56f20
 	00156c24 mov ax,mar
 	00156c30 push op
 	00156c38 mov op,ax
 	00156c40 setfuncargs 0x0
 	00156c48 mov ax,0x516f20
 	00156c54 farcall ax
 	00156c5c pop op
 	00156c64 push ax
 	00156c6c mov ax,0xa2
 	00156c78 pop bx
 	00156c80 cmpneq bx,ax
 	00156c8c mov ax,bx
 	00156c98 jz 0x00158c98
		00158c98: CONDITIONAL_JUMP
		00156ca0: FALL_THROUGH

	[00156ca0]
		00156c00: FALL_THROUGH
 	00156ca0 sourceline 0x120b
 	00156ca8 setfuncargs 0x0
 	00156cb0 mov ax,0x6def20
 	00156cbc farcall ax
 	00156cc4 lnot ax
 	00156ccc jz 0x00156d28
		00156d28: CONDITIONAL_JUMP
		00156cd4: FALL_THROUGH

	[00156cd4]
		00156ca0: FALL_THROUGH
 	00156cd4 mov ax,0x8a
 	00156ce0 farpush ax
 	00156ce8 mov ax,0xde
 	00156cf4 farpush ax
 	00156cfc setfuncargs 0x2
 	00156d04 mov ax,0x6e6f20
 	00156d10 farcall ax
 	00156d18 farsubsp 0x2
 	00156d20 jmp 0x00158c88
		00158c88: UNCONDITIONAL_JUMP

	[00156d28]
		00156ca0: CONDITIONAL_JUMP
 	00156d28 sourceline 0x120e
 	00156d30 push op
 	00156d38 mov ax,0x397
 	00156d44 farpush ax
 	00156d4c mov ax,0x5
 	00156d58 farpush ax
 	00156d60 mov mar,0x3cef20
 	00156d6c mov ax,mar
 	00156d78 mov op,ax
 	00156d80 setfuncargs 0x2
 	00156d88 mov ax,0x6eef20
 	00156d94 farcall ax
 	00156d9c farsubsp 0x2
 	00156da4 pop op
 	00156dac sourceline 0x120f
 	00156db4 mov ax,0x3
 	00156dc0 mov bx,ax
 	00156dcc mov mar,0x3cef20
 	00156dd8 mov ax,mar
 	00156de4 push op
 	00156dec mov op,ax
 	00156df4 farpush bx
 	00156dfc setfuncargs 0x1
 	00156e04 mov ax,0x69ef20
 	00156e10 farcall ax
 	00156e18 farsubsp 0x1
 	00156e20 pop op
 	00156e28 sourceline 0x1210
 	00156e30 push op
 	00156e38 mov ax,0x2bd281
 	00156e44 farpush ax
 	00156e4c mov mar,0x3cef20
 	00156e58 mov ax,mar
 	00156e64 mov op,ax
 	00156e6c setfuncargs 0x1
 	00156e74 mov ax,0x6f6f20
 	00156e80 farcall ax
 	00156e88 farsubsp 0x1
 	00156e90 pop op
 	00156e98 sourceline 0x1211
 	00156ea0 mov ax,0x0
 	00156eac mov mar,0xc6ef20
 	00156eb8 memwrite4 ax
 	00156ec0 sourceline 0x1212
 	00156ec8 mov ax,0x0
 	00156ed4 mov mar,0xc76f20
 	00156ee0 memwrite4 ax
 	00156ee8 sourceline 0x1213
 	00156ef0 mov mar,0xc56f20
 	00156efc mov ax,mar
 	00156f08 push op
 	00156f10 mov op,ax
 	00156f18 setfuncargs 0x0
 	00156f20 mov ax,0xc7ef20
 	00156f2c farcall ax
 	00156f34 pop op
 	00156f3c push ax
 	00156f44 mov ax,0x0
 	00156f50 pop bx
 	00156f58 cmpeq bx,ax
 	00156f64 mov ax,bx
 	00156f70 jz 0x00157750
		00157750: CONDITIONAL_JUMP
		00156f78: FALL_THROUGH

	[00156f78]
		00156d28: FALL_THROUGH
 	00156f78 sourceline 0x1215
 	00156f80 mov mar,0xc56f20
 	00156f8c mov ax,mar
 	00156f98 push op
 	00156fa0 mov op,ax
 	00156fa8 setfuncargs 0x0
 	00156fb0 mov ax,0xb16f20
 	00156fbc farcall ax
 	00156fc4 pop op
 	00156fcc push ax
 	00156fd4 mov ax,0x0
 	00156fe0 pop bx
 	00156fe8 cmpeq bx,ax
 	00156ff4 mov ax,bx
 	00157000 jz 0x001570c8
		001570c8: CONDITIONAL_JUMP
		00157008: FALL_THROUGH

	[00157008]
		00156f78: FALL_THROUGH
 	00157008 push op
 	00157010 mov ax,0x426
 	0015701c farpush ax
 	00157024 mov ax,0x397
 	00157030 farpush ax
 	00157038 mov ax,0x0
 	00157044 farpush ax
 	0015704c mov ax,0x3
 	00157058 farpush ax
 	00157060 mov ax,0x11
 	0015706c farpush ax
 	00157074 mov mar,0xc56f20
 	00157080 mov ax,mar
 	0015708c mov op,ax
 	00157094 setfuncargs 0x5
 	0015709c mov ax,0x536f20
 	001570a8 farcall ax
 	001570b0 farsubsp 0x5
 	001570b8 pop op
 	001570c0 jmp 0x00157750
		00157750: UNCONDITIONAL_JUMP

	[001570c8]
		00156f78: CONDITIONAL_JUMP
 	001570c8 sourceline 0x1216
 	001570d0 mov mar,0xc56f20
 	001570dc mov ax,mar
 	001570e8 push op
 	001570f0 mov op,ax
 	001570f8 setfuncargs 0x0
 	00157100 mov ax,0xb16f20
 	0015710c farcall ax
 	00157114 pop op
 	0015711c push ax
 	00157124 mov ax,0x1
 	00157130 pop bx
 	00157138 cmpeq bx,ax
 	00157144 mov ax,bx
 	00157150 jz 0x00157218
		00157218: CONDITIONAL_JUMP
		00157158: FALL_THROUGH

	[00157158]
		001570c8: FALL_THROUGH
 	00157158 push op
 	00157160 mov ax,0x426
 	0015716c farpush ax
 	00157174 mov ax,0x397
 	00157180 farpush ax
 	00157188 mov ax,0x0
 	00157194 farpush ax
 	0015719c mov ax,0x3
 	001571a8 farpush ax
 	001571b0 mov ax,0x12
 	001571bc farpush ax
 	001571c4 mov mar,0xc56f20
 	001571d0 mov ax,mar
 	001571dc mov op,ax
 	001571e4 setfuncargs 0x5
 	001571ec mov ax,0x536f20
 	001571f8 farcall ax
 	00157200 farsubsp 0x5
 	00157208 pop op
 	00157210 jmp 0x00157750
		00157750: UNCONDITIONAL_JUMP

	[00157218]
		001570c8: CONDITIONAL_JUMP
 	00157218 sourceline 0x1217
 	00157220 mov mar,0xc56f20
 	0015722c mov ax,mar
 	00157238 push op
 	00157240 mov op,ax
 	00157248 setfuncargs 0x0
 	00157250 mov ax,0xb16f20
 	0015725c farcall ax
 	00157264 pop op
 	0015726c push ax
 	00157274 mov ax,0x2
 	00157280 pop bx
 	00157288 cmpeq bx,ax
 	00157294 mov ax,bx
 	001572a0 jz 0x00157368
		00157368: CONDITIONAL_JUMP
		001572a8: FALL_THROUGH

	[001572a8]
		00157218: FALL_THROUGH
 	001572a8 push op
 	001572b0 mov ax,0x426
 	001572bc farpush ax
 	001572c4 mov ax,0x397
 	001572d0 farpush ax
 	001572d8 mov ax,0x0
 	001572e4 farpush ax
 	001572ec mov ax,0x3
 	001572f8 farpush ax
 	00157300 mov ax,0x13
 	0015730c farpush ax
 	00157314 mov mar,0xc56f20
 	00157320 mov ax,mar
 	0015732c mov op,ax
 	00157334 setfuncargs 0x5
 	0015733c mov ax,0x536f20
 	00157348 farcall ax
 	00157350 farsubsp 0x5
 	00157358 pop op
 	00157360 jmp 0x00157750
		00157750: UNCONDITIONAL_JUMP

	[00157368]
		00157218: CONDITIONAL_JUMP
 	00157368 sourceline 0x1218
 	00157370 mov mar,0xc56f20
 	0015737c mov ax,mar
 	00157388 push op
 	00157390 mov op,ax
 	00157398 setfuncargs 0x0
 	001573a0 mov ax,0xb16f20
 	001573ac farcall ax
 	001573b4 pop op
 	001573bc push ax
 	001573c4 mov ax,0x3
 	001573d0 pop bx
 	001573d8 cmpeq bx,ax
 	001573e4 mov ax,bx
 	001573f0 jz 0x001574b8
		001574b8: CONDITIONAL_JUMP
		001573f8: FALL_THROUGH

	[001573f8]
		00157368: FALL_THROUGH
 	001573f8 push op
 	00157400 mov ax,0x426
 	0015740c farpush ax
 	00157414 mov ax,0x397
 	00157420 farpush ax
 	00157428 mov ax,0x0
 	00157434 farpush ax
 	0015743c mov ax,0x3
 	00157448 farpush ax
 	00157450 mov ax,0x14
 	0015745c farpush ax
 	00157464 mov mar,0xc56f20
 	00157470 mov ax,mar
 	0015747c mov op,ax
 	00157484 setfuncargs 0x5
 	0015748c mov ax,0x536f20
 	00157498 farcall ax
 	001574a0 farsubsp 0x5
 	001574a8 pop op
 	001574b0 jmp 0x00157750
		00157750: UNCONDITIONAL_JUMP

	[001574b8]
		00157368: CONDITIONAL_JUMP
 	001574b8 sourceline 0x1219
 	001574c0 mov mar,0xc56f20
 	001574cc mov ax,mar
 	001574d8 push op
 	001574e0 mov op,ax
 	001574e8 setfuncargs 0x0
 	001574f0 mov ax,0xb16f20
 	001574fc farcall ax
 	00157504 pop op
 	0015750c push ax
 	00157514 mov ax,0x4
 	00157520 pop bx
 	00157528 cmpeq bx,ax
 	00157534 mov ax,bx
 	00157540 jz 0x00157608
		00157608: CONDITIONAL_JUMP
		00157548: FALL_THROUGH

	[00157548]
		001574b8: FALL_THROUGH
 	00157548 push op
 	00157550 mov ax,0x426
 	0015755c farpush ax
 	00157564 mov ax,0x397
 	00157570 farpush ax
 	00157578 mov ax,0x0
 	00157584 farpush ax
 	0015758c mov ax,0x3
 	00157598 farpush ax
 	001575a0 mov ax,0x15
 	001575ac farpush ax
 	001575b4 mov mar,0xc56f20
 	001575c0 mov ax,mar
 	001575cc mov op,ax
 	001575d4 setfuncargs 0x5
 	001575dc mov ax,0x536f20
 	001575e8 farcall ax
 	001575f0 farsubsp 0x5
 	001575f8 pop op
 	00157600 jmp 0x00157750
		00157750: UNCONDITIONAL_JUMP

	[00157608]
		001574b8: CONDITIONAL_JUMP
 	00157608 sourceline 0x121a
 	00157610 mov mar,0xc56f20
 	0015761c mov ax,mar
 	00157628 push op
 	00157630 mov op,ax
 	00157638 setfuncargs 0x0
 	00157640 mov ax,0xb16f20
 	0015764c farcall ax
 	00157654 pop op
 	0015765c push ax
 	00157664 mov ax,0x5
 	00157670 pop bx
 	00157678 cmpeq bx,ax
 	00157684 mov ax,bx
 	00157690 jz 0x00157750
		00157750: CONDITIONAL_JUMP
		00157698: FALL_THROUGH

	[00157698]
		00157608: FALL_THROUGH
 	00157698 push op
 	001576a0 mov ax,0x426
 	001576ac farpush ax
 	001576b4 mov ax,0x397
 	001576c0 farpush ax
 	001576c8 mov ax,0x0
 	001576d4 farpush ax
 	001576dc mov ax,0x3
 	001576e8 farpush ax
 	001576f0 mov ax,0x16
 	001576fc farpush ax
 	00157704 mov mar,0xc56f20
 	00157710 mov ax,mar
 	0015771c mov op,ax
 	00157724 setfuncargs 0x5
 	0015772c mov ax,0x536f20
 	00157738 farcall ax
 	00157740 farsubsp 0x5
 	00157748 pop op
		00157750: FALL_THROUGH

	[00157750]
		00156d28: CONDITIONAL_JUMP
		00157008: UNCONDITIONAL_JUMP
		00157158: UNCONDITIONAL_JUMP
		001572a8: UNCONDITIONAL_JUMP
		001573f8: UNCONDITIONAL_JUMP
		00157548: UNCONDITIONAL_JUMP
		00157608: CONDITIONAL_JUMP
		00157698: FALL_THROUGH
 	00157750 sourceline 0x121c
 	00157758 mov mar,0xc56f20
 	00157764 mov ax,mar
 	00157770 push op
 	00157778 mov op,ax
 	00157780 setfuncargs 0x0
 	00157788 mov ax,0xc7ef20
 	00157794 farcall ax
 	0015779c pop op
 	001577a4 push ax
 	001577ac mov ax,0x1
 	001577b8 pop bx
 	001577c0 cmpeq bx,ax
 	001577cc mov ax,bx
 	001577d8 jz 0x00157fb8
		00157fb8: CONDITIONAL_JUMP
		001577e0: FALL_THROUGH

	[001577e0]
		00157750: FALL_THROUGH
 	001577e0 sourceline 0x121e
 	001577e8 mov mar,0xc56f20
 	001577f4 mov ax,mar
 	00157800 push op
 	00157808 mov op,ax
 	00157810 setfuncargs 0x0
 	00157818 mov ax,0xb16f20
 	00157824 farcall ax
 	0015782c pop op
 	00157834 push ax
 	0015783c mov ax,0x0
 	00157848 pop bx
 	00157850 cmpeq bx,ax
 	0015785c mov ax,bx
 	00157868 jz 0x00157930
		00157930: CONDITIONAL_JUMP
		00157870: FALL_THROUGH

	[00157870]
		001577e0: FALL_THROUGH
 	00157870 push op
 	00157878 mov ax,0x426
 	00157884 farpush ax
 	0015788c mov ax,0x397
 	00157898 farpush ax
 	001578a0 mov ax,0x0
 	001578ac farpush ax
 	001578b4 mov ax,0x3
 	001578c0 farpush ax
 	001578c8 mov ax,0x17
 	001578d4 farpush ax
 	001578dc mov mar,0xc56f20
 	001578e8 mov ax,mar
 	001578f4 mov op,ax
 	001578fc setfuncargs 0x5
 	00157904 mov ax,0x536f20
 	00157910 farcall ax
 	00157918 farsubsp 0x5
 	00157920 pop op
 	00157928 jmp 0x00157fb8
		00157fb8: UNCONDITIONAL_JUMP

	[00157930]
		001577e0: CONDITIONAL_JUMP
 	00157930 sourceline 0x121f
 	00157938 mov mar,0xc56f20
 	00157944 mov ax,mar
 	00157950 push op
 	00157958 mov op,ax
 	00157960 setfuncargs 0x0
 	00157968 mov ax,0xb16f20
 	00157974 farcall ax
 	0015797c pop op
 	00157984 push ax
 	0015798c mov ax,0x1
 	00157998 pop bx
 	001579a0 cmpeq bx,ax
 	001579ac mov ax,bx
 	001579b8 jz 0x00157a80
		00157a80: CONDITIONAL_JUMP
		001579c0: FALL_THROUGH

	[001579c0]
		00157930: FALL_THROUGH
 	001579c0 push op
 	001579c8 mov ax,0x426
 	001579d4 farpush ax
 	001579dc mov ax,0x397
 	001579e8 farpush ax
 	001579f0 mov ax,0x0
 	001579fc farpush ax
 	00157a04 mov ax,0x3
 	00157a10 farpush ax
 	00157a18 mov ax,0x18
 	00157a24 farpush ax
 	00157a2c mov mar,0xc56f20
 	00157a38 mov ax,mar
 	00157a44 mov op,ax
 	00157a4c setfuncargs 0x5
 	00157a54 mov ax,0x536f20
 	00157a60 farcall ax
 	00157a68 farsubsp 0x5
 	00157a70 pop op
 	00157a78 jmp 0x00157fb8
		00157fb8: UNCONDITIONAL_JUMP

	[00157a80]
		00157930: CONDITIONAL_JUMP
 	00157a80 sourceline 0x1220
 	00157a88 mov mar,0xc56f20
 	00157a94 mov ax,mar
 	00157aa0 push op
 	00157aa8 mov op,ax
 	00157ab0 setfuncargs 0x0
 	00157ab8 mov ax,0xb16f20
 	00157ac4 farcall ax
 	00157acc pop op
 	00157ad4 push ax
 	00157adc mov ax,0x2
 	00157ae8 pop bx
 	00157af0 cmpeq bx,ax
 	00157afc mov ax,bx
 	00157b08 jz 0x00157bd0
		00157bd0: CONDITIONAL_JUMP
		00157b10: FALL_THROUGH

	[00157b10]
		00157a80: FALL_THROUGH
 	00157b10 push op
 	00157b18 mov ax,0x426
 	00157b24 farpush ax
 	00157b2c mov ax,0x397
 	00157b38 farpush ax
 	00157b40 mov ax,0x0
 	00157b4c farpush ax
 	00157b54 mov ax,0x3
 	00157b60 farpush ax
 	00157b68 mov ax,0x19
 	00157b74 farpush ax
 	00157b7c mov mar,0xc56f20
 	00157b88 mov ax,mar
 	00157b94 mov op,ax
 	00157b9c setfuncargs 0x5
 	00157ba4 mov ax,0x536f20
 	00157bb0 farcall ax
 	00157bb8 farsubsp 0x5
 	00157bc0 pop op
 	00157bc8 jmp 0x00157fb8
		00157fb8: UNCONDITIONAL_JUMP

	[00157bd0]
		00157a80: CONDITIONAL_JUMP
 	00157bd0 sourceline 0x1221
 	00157bd8 mov mar,0xc56f20
 	00157be4 mov ax,mar
 	00157bf0 push op
 	00157bf8 mov op,ax
 	00157c00 setfuncargs 0x0
 	00157c08 mov ax,0xb16f20
 	00157c14 farcall ax
 	00157c1c pop op
 	00157c24 push ax
 	00157c2c mov ax,0x3
 	00157c38 pop bx
 	00157c40 cmpeq bx,ax
 	00157c4c mov ax,bx
 	00157c58 jz 0x00157d20
		00157d20: CONDITIONAL_JUMP
		00157c60: FALL_THROUGH

	[00157c60]
		00157bd0: FALL_THROUGH
 	00157c60 push op
 	00157c68 mov ax,0x426
 	00157c74 farpush ax
 	00157c7c mov ax,0x397
 	00157c88 farpush ax
 	00157c90 mov ax,0x0
 	00157c9c farpush ax
 	00157ca4 mov ax,0x3
 	00157cb0 farpush ax
 	00157cb8 mov ax,0x1a
 	00157cc4 farpush ax
 	00157ccc mov mar,0xc56f20
 	00157cd8 mov ax,mar
 	00157ce4 mov op,ax
 	00157cec setfuncargs 0x5
 	00157cf4 mov ax,0x536f20
 	00157d00 farcall ax
 	00157d08 farsubsp 0x5
 	00157d10 pop op
 	00157d18 jmp 0x00157fb8
		00157fb8: UNCONDITIONAL_JUMP

	[00157d20]
		00157bd0: CONDITIONAL_JUMP
 	00157d20 sourceline 0x1222
 	00157d28 mov mar,0xc56f20
 	00157d34 mov ax,mar
 	00157d40 push op
 	00157d48 mov op,ax
 	00157d50 setfuncargs 0x0
 	00157d58 mov ax,0xb16f20
 	00157d64 farcall ax
 	00157d6c pop op
 	00157d74 push ax
 	00157d7c mov ax,0x4
 	00157d88 pop bx
 	00157d90 cmpeq bx,ax
 	00157d9c mov ax,bx
 	00157da8 jz 0x00157e70
		00157e70: CONDITIONAL_JUMP
		00157db0: FALL_THROUGH

	[00157db0]
		00157d20: FALL_THROUGH
 	00157db0 push op
 	00157db8 mov ax,0x426
 	00157dc4 farpush ax
 	00157dcc mov ax,0x397
 	00157dd8 farpush ax
 	00157de0 mov ax,0x0
 	00157dec farpush ax
 	00157df4 mov ax,0x3
 	00157e00 farpush ax
 	00157e08 mov ax,0x1b
 	00157e14 farpush ax
 	00157e1c mov mar,0xc56f20
 	00157e28 mov ax,mar
 	00157e34 mov op,ax
 	00157e3c setfuncargs 0x5
 	00157e44 mov ax,0x536f20
 	00157e50 farcall ax
 	00157e58 farsubsp 0x5
 	00157e60 pop op
 	00157e68 jmp 0x00157fb8
		00157fb8: UNCONDITIONAL_JUMP

	[00157e70]
		00157d20: CONDITIONAL_JUMP
 	00157e70 sourceline 0x1223
 	00157e78 mov mar,0xc56f20
 	00157e84 mov ax,mar
 	00157e90 push op
 	00157e98 mov op,ax
 	00157ea0 setfuncargs 0x0
 	00157ea8 mov ax,0xb16f20
 	00157eb4 farcall ax
 	00157ebc pop op
 	00157ec4 push ax
 	00157ecc mov ax,0x5
 	00157ed8 pop bx
 	00157ee0 cmpeq bx,ax
 	00157eec mov ax,bx
 	00157ef8 jz 0x00157fb8
		00157fb8: CONDITIONAL_JUMP
		00157f00: FALL_THROUGH

	[00157f00]
		00157e70: FALL_THROUGH
 	00157f00 push op
 	00157f08 mov ax,0x426
 	00157f14 farpush ax
 	00157f1c mov ax,0x397
 	00157f28 farpush ax
 	00157f30 mov ax,0x0
 	00157f3c farpush ax
 	00157f44 mov ax,0x3
 	00157f50 farpush ax
 	00157f58 mov ax,0x1c
 	00157f64 farpush ax
 	00157f6c mov mar,0xc56f20
 	00157f78 mov ax,mar
 	00157f84 mov op,ax
 	00157f8c setfuncargs 0x5
 	00157f94 mov ax,0x536f20
 	00157fa0 farcall ax
 	00157fa8 farsubsp 0x5
 	00157fb0 pop op
		00157fb8: FALL_THROUGH

	[00157fb8]
		00157750: CONDITIONAL_JUMP
		00157870: UNCONDITIONAL_JUMP
		001579c0: UNCONDITIONAL_JUMP
		00157b10: UNCONDITIONAL_JUMP
		00157c60: UNCONDITIONAL_JUMP
		00157db0: UNCONDITIONAL_JUMP
		00157e70: CONDITIONAL_JUMP
		00157f00: FALL_THROUGH
 	00157fb8 sourceline 0x1226
 	00157fc0 push op
 	00157fc8 mov ax,0x2bd2a0
 	00157fd4 farpush ax
 	00157fdc mov mar,0xc56f20
 	00157fe8 mov ax,mar
 	00157ff4 mov op,ax
 	00157ffc setfuncargs 0x1
 	00158004 mov ax,0x6f6f20
 	00158010 farcall ax
 	00158018 farsubsp 0x1
 	00158020 pop op
 	00158028 sourceline 0x1227
 	00158030 push op
 	00158038 mov ax,0x2bd309
 	00158044 farpush ax
 	0015804c mov mar,0x3cef20
 	00158058 mov ax,mar
 	00158064 mov op,ax
 	0015806c setfuncargs 0x1
 	00158074 mov ax,0x6f6f20
 	00158080 farcall ax
 	00158088 farsubsp 0x1
 	00158090 pop op
 	00158098 sourceline 0x1228
 	001580a0 mov ax,0x14
 	001580ac farpush ax
 	001580b4 setfuncargs 0x1
 	001580bc mov ax,0x426f20
 	001580c8 farcall ax
 	001580d0 farsubsp 0x1
 	001580d8 sourceline 0x1229
 	001580e0 mov mar,0xc56f20
 	001580ec mov ax,mar
 	001580f8 push op
 	00158100 mov op,ax
 	00158108 setfuncargs 0x0
 	00158110 mov ax,0xc7ef20
 	0015811c farcall ax
 	00158124 pop op
 	0015812c push ax
 	00158134 mov ax,0x11
 	00158140 pop bx
 	00158148 cmpeq bx,ax
 	00158154 mov ax,bx
 	00158160 jnz 0x00158210
		00158210: CONDITIONAL_JUMP
		00158168: FALL_THROUGH

	[00158168]
		00157fb8: FALL_THROUGH
 	00158168 push ax
 	00158170 mov mar,0xc56f20
 	0015817c mov ax,mar
 	00158188 push op
 	00158190 mov op,ax
 	00158198 setfuncargs 0x0
 	001581a0 mov ax,0xc7ef20
 	001581ac farcall ax
 	001581b4 pop op
 	001581bc push ax
 	001581c4 mov ax,0x12
 	001581d0 pop bx
 	001581d8 cmpeq bx,ax
 	001581e4 mov ax,bx
 	001581f0 pop bx
 	001581f8 lor bx,ax
 	00158204 mov ax,bx
		00158210: FALL_THROUGH

	[00158210]
		00157fb8: CONDITIONAL_JUMP
		00158168: FALL_THROUGH
 	00158210 jnz 0x001582c0
		001582c0: CONDITIONAL_JUMP
		00158218: FALL_THROUGH

	[00158218]
		00158210: FALL_THROUGH
 	00158218 push ax
 	00158220 mov mar,0xc56f20
 	0015822c mov ax,mar
 	00158238 push op
 	00158240 mov op,ax
 	00158248 setfuncargs 0x0
 	00158250 mov ax,0xc7ef20
 	0015825c farcall ax
 	00158264 pop op
 	0015826c push ax
 	00158274 mov ax,0x13
 	00158280 pop bx
 	00158288 cmpeq bx,ax
 	00158294 mov ax,bx
 	001582a0 pop bx
 	001582a8 lor bx,ax
 	001582b4 mov ax,bx
		001582c0: FALL_THROUGH

	[001582c0]
		00158210: CONDITIONAL_JUMP
		00158218: FALL_THROUGH
 	001582c0 jnz 0x00158370
		00158370: CONDITIONAL_JUMP
		001582c8: FALL_THROUGH

	[001582c8]
		001582c0: FALL_THROUGH
 	001582c8 push ax
 	001582d0 mov mar,0xc56f20
 	001582dc mov ax,mar
 	001582e8 push op
 	001582f0 mov op,ax
 	001582f8 setfuncargs 0x0
 	00158300 mov ax,0xc7ef20
 	0015830c farcall ax
 	00158314 pop op
 	0015831c push ax
 	00158324 mov ax,0x14
 	00158330 pop bx
 	00158338 cmpeq bx,ax
 	00158344 mov ax,bx
 	00158350 pop bx
 	00158358 lor bx,ax
 	00158364 mov ax,bx
		00158370: FALL_THROUGH

	[00158370]
		001582c0: CONDITIONAL_JUMP
		001582c8: FALL_THROUGH
 	00158370 jnz 0x00158420
		00158420: CONDITIONAL_JUMP
		00158378: FALL_THROUGH

	[00158378]
		00158370: FALL_THROUGH
 	00158378 push ax
 	00158380 mov mar,0xc56f20
 	0015838c mov ax,mar
 	00158398 push op
 	001583a0 mov op,ax
 	001583a8 setfuncargs 0x0
 	001583b0 mov ax,0xc7ef20
 	001583bc farcall ax
 	001583c4 pop op
 	001583cc push ax
 	001583d4 mov ax,0x15
 	001583e0 pop bx
 	001583e8 cmpeq bx,ax
 	001583f4 mov ax,bx
 	00158400 pop bx
 	00158408 lor bx,ax
 	00158414 mov ax,bx
		00158420: FALL_THROUGH

	[00158420]
		00158370: CONDITIONAL_JUMP
		00158378: FALL_THROUGH
 	00158420 jnz 0x001584d0
		001584d0: CONDITIONAL_JUMP
		00158428: FALL_THROUGH

	[00158428]
		00158420: FALL_THROUGH
 	00158428 push ax
 	00158430 mov mar,0xc56f20
 	0015843c mov ax,mar
 	00158448 push op
 	00158450 mov op,ax
 	00158458 setfuncargs 0x0
 	00158460 mov ax,0xc7ef20
 	0015846c farcall ax
 	00158474 pop op
 	0015847c push ax
 	00158484 mov ax,0x16
 	00158490 pop bx
 	00158498 cmpeq bx,ax
 	001584a4 mov ax,bx
 	001584b0 pop bx
 	001584b8 lor bx,ax
 	001584c4 mov ax,bx
		001584d0: FALL_THROUGH

	[001584d0]
		00158420: CONDITIONAL_JUMP
		00158428: FALL_THROUGH
 	001584d0 jz 0x001586b0
		001586b0: CONDITIONAL_JUMP
		001584d8: FALL_THROUGH

	[001584d8]
		001584d0: FALL_THROUGH
 	001584d8 sourceline 0x122b
 	001584e0 push op
 	001584e8 mov ax,0x426
 	001584f4 farpush ax
 	001584fc mov ax,0x397
 	00158508 farpush ax
 	00158510 mov ax,0x0
 	0015851c farpush ax
 	00158524 mov ax,0x3
 	00158530 farpush ax
 	00158538 mov ax,0x1d
 	00158544 farpush ax
 	0015854c mov mar,0xc56f20
 	00158558 mov ax,mar
 	00158564 mov op,ax
 	0015856c setfuncargs 0x5
 	00158574 mov ax,0x536f20
 	00158580 farcall ax
 	00158588 farsubsp 0x5
 	00158590 pop op
 	00158598 sourceline 0x122c
 	001585a0 mov ax,0x1
 	001585ac mov bx,ax
 	001585b8 mov mar,0xc56f20
 	001585c4 mov ax,mar
 	001585d0 push op
 	001585d8 mov op,ax
 	001585e0 farpush bx
 	001585e8 setfuncargs 0x1
 	001585f0 mov ax,0x766f20
 	001585fc farcall ax
 	00158604 farsubsp 0x1
 	0015860c pop op
 	00158614 mov ax,0x0
 	00158620 mov bx,ax
 	0015862c mov mar,0xc56f20
 	00158638 mov ax,mar
 	00158644 push op
 	0015864c mov op,ax
 	00158654 farpush bx
 	0015865c setfuncargs 0x1
 	00158664 mov ax,0x52ef20
 	00158670 farcall ax
 	00158678 farsubsp 0x1
 	00158680 pop op
 	00158688 sourceline 0x122d
 	00158690 mov ax,0x1
 	0015869c mov mar,0xc76f20
 	001586a8 memwrite4 ax
		001586b0: FALL_THROUGH

	[001586b0]
		001584d0: CONDITIONAL_JUMP
		001584d8: FALL_THROUGH
 	001586b0 sourceline 0x1230
 	001586b8 mov mar,0xc56f20
 	001586c4 mov ax,mar
 	001586d0 push op
 	001586d8 mov op,ax
 	001586e0 setfuncargs 0x0
 	001586e8 mov ax,0xc7ef20
 	001586f4 farcall ax
 	001586fc pop op
 	00158704 push ax
 	0015870c mov ax,0x17
 	00158718 pop bx
 	00158720 cmpeq bx,ax
 	0015872c mov ax,bx
 	00158738 jnz 0x001587e8
		001587e8: CONDITIONAL_JUMP
		00158740: FALL_THROUGH

	[00158740]
		001586b0: FALL_THROUGH
 	00158740 push ax
 	00158748 mov mar,0xc56f20
 	00158754 mov ax,mar
 	00158760 push op
 	00158768 mov op,ax
 	00158770 setfuncargs 0x0
 	00158778 mov ax,0xc7ef20
 	00158784 farcall ax
 	0015878c pop op
 	00158794 push ax
 	0015879c mov ax,0x18
 	001587a8 pop bx
 	001587b0 cmpeq bx,ax
 	001587bc mov ax,bx
 	001587c8 pop bx
 	001587d0 lor bx,ax
 	001587dc mov ax,bx
		001587e8: FALL_THROUGH

	[001587e8]
		001586b0: CONDITIONAL_JUMP
		00158740: FALL_THROUGH
 	001587e8 jnz 0x00158898
		00158898: CONDITIONAL_JUMP
		001587f0: FALL_THROUGH

	[001587f0]
		001587e8: FALL_THROUGH
 	001587f0 push ax
 	001587f8 mov mar,0xc56f20
 	00158804 mov ax,mar
 	00158810 push op
 	00158818 mov op,ax
 	00158820 setfuncargs 0x0
 	00158828 mov ax,0xc7ef20
 	00158834 farcall ax
 	0015883c pop op
 	00158844 push ax
 	0015884c mov ax,0x19
 	00158858 pop bx
 	00158860 cmpeq bx,ax
 	0015886c mov ax,bx
 	00158878 pop bx
 	00158880 lor bx,ax
 	0015888c mov ax,bx
		00158898: FALL_THROUGH

	[00158898]
		001587e8: CONDITIONAL_JUMP
		001587f0: FALL_THROUGH
 	00158898 jnz 0x00158948
		00158948: CONDITIONAL_JUMP
		001588a0: FALL_THROUGH

	[001588a0]
		00158898: FALL_THROUGH
 	001588a0 push ax
 	001588a8 mov mar,0xc56f20
 	001588b4 mov ax,mar
 	001588c0 push op
 	001588c8 mov op,ax
 	001588d0 setfuncargs 0x0
 	001588d8 mov ax,0xc7ef20
 	001588e4 farcall ax
 	001588ec pop op
 	001588f4 push ax
 	001588fc mov ax,0x1a
 	00158908 pop bx
 	00158910 cmpeq bx,ax
 	0015891c mov ax,bx
 	00158928 pop bx
 	00158930 lor bx,ax
 	0015893c mov ax,bx
		00158948: FALL_THROUGH

	[00158948]
		00158898: CONDITIONAL_JUMP
		001588a0: FALL_THROUGH
 	00158948 jnz 0x001589f8
		001589f8: CONDITIONAL_JUMP
		00158950: FALL_THROUGH

	[00158950]
		00158948: FALL_THROUGH
 	00158950 push ax
 	00158958 mov mar,0xc56f20
 	00158964 mov ax,mar
 	00158970 push op
 	00158978 mov op,ax
 	00158980 setfuncargs 0x0
 	00158988 mov ax,0xc7ef20
 	00158994 farcall ax
 	0015899c pop op
 	001589a4 push ax
 	001589ac mov ax,0x1b
 	001589b8 pop bx
 	001589c0 cmpeq bx,ax
 	001589cc mov ax,bx
 	001589d8 pop bx
 	001589e0 lor bx,ax
 	001589ec mov ax,bx
		001589f8: FALL_THROUGH

	[001589f8]
		00158948: CONDITIONAL_JUMP
		00158950: FALL_THROUGH
 	001589f8 jnz 0x00158aa8
		00158aa8: CONDITIONAL_JUMP
		00158a00: FALL_THROUGH

	[00158a00]
		001589f8: FALL_THROUGH
 	00158a00 push ax
 	00158a08 mov mar,0xc56f20
 	00158a14 mov ax,mar
 	00158a20 push op
 	00158a28 mov op,ax
 	00158a30 setfuncargs 0x0
 	00158a38 mov ax,0xc7ef20
 	00158a44 farcall ax
 	00158a4c pop op
 	00158a54 push ax
 	00158a5c mov ax,0x1c
 	00158a68 pop bx
 	00158a70 cmpeq bx,ax
 	00158a7c mov ax,bx
 	00158a88 pop bx
 	00158a90 lor bx,ax
 	00158a9c mov ax,bx
		00158aa8: FALL_THROUGH

	[00158aa8]
		001589f8: CONDITIONAL_JUMP
		00158a00: FALL_THROUGH
 	00158aa8 jz 0x00158c88
		00158c88: CONDITIONAL_JUMP
		00158ab0: FALL_THROUGH

	[00158ab0]
		00158aa8: FALL_THROUGH
 	00158ab0 sourceline 0x1232
 	00158ab8 push op
 	00158ac0 mov ax,0x426
 	00158acc farpush ax
 	00158ad4 mov ax,0x397
 	00158ae0 farpush ax
 	00158ae8 mov ax,0x0
 	00158af4 farpush ax
 	00158afc mov ax,0x3
 	00158b08 farpush ax
 	00158b10 mov ax,0x1e
 	00158b1c farpush ax
 	00158b24 mov mar,0xc56f20
 	00158b30 mov ax,mar
 	00158b3c mov op,ax
 	00158b44 setfuncargs 0x5
 	00158b4c mov ax,0x536f20
 	00158b58 farcall ax
 	00158b60 farsubsp 0x5
 	00158b68 pop op
 	00158b70 sourceline 0x1233
 	00158b78 mov ax,0x0
 	00158b84 mov bx,ax
 	00158b90 mov mar,0xc56f20
 	00158b9c mov ax,mar
 	00158ba8 push op
 	00158bb0 mov op,ax
 	00158bb8 farpush bx
 	00158bc0 setfuncargs 0x1
 	00158bc8 mov ax,0x766f20
 	00158bd4 farcall ax
 	00158bdc farsubsp 0x1
 	00158be4 pop op
 	00158bec mov ax,0x0
 	00158bf8 mov bx,ax
 	00158c04 mov mar,0xc56f20
 	00158c10 mov ax,mar
 	00158c1c push op
 	00158c24 mov op,ax
 	00158c2c farpush bx
 	00158c34 setfuncargs 0x1
 	00158c3c mov ax,0x52ef20
 	00158c48 farcall ax
 	00158c50 farsubsp 0x1
 	00158c58 pop op
 	00158c60 sourceline 0x1234
 	00158c68 mov ax,0x1
 	00158c74 mov mar,0xc6ef20
 	00158c80 memwrite4 ax
		00158c88: FALL_THROUGH

	[00158c88]
		00156cd4: UNCONDITIONAL_JUMP
		00158aa8: CONDITIONAL_JUMP
		00158ab0: FALL_THROUGH
 	00158c88 sourceline 0x1237
 	00158c90 jmp 0x00158e58
		00158e58: UNCONDITIONAL_JUMP

	[00158c98]
		00156c00: CONDITIONAL_JUMP
 	00158c98 sourceline 0x123a
 	00158ca0 push op
 	00158ca8 mov ax,0x397
 	00158cb4 farpush ax
 	00158cbc mov ax,0x71
 	00158cc8 farpush ax
 	00158cd0 mov ax,0x68
 	00158cdc farpush ax
 	00158ce4 mov mar,0x3cef20
 	00158cf0 mov ax,mar
 	00158cfc mov op,ax
 	00158d04 setfuncargs 0x3
 	00158d0c mov ax,0x726f20
 	00158d18 farcall ax
 	00158d20 farsubsp 0x3
 	00158d28 pop op
 	00158d30 sourceline 0x123b
 	00158d38 mov ax,0x1
 	00158d44 mov bx,ax
 	00158d50 mov mar,0x3cef20
 	00158d5c mov ax,mar
 	00158d68 push op
 	00158d70 mov op,ax
 	00158d78 farpush bx
 	00158d80 setfuncargs 0x1
 	00158d88 mov ax,0x69ef20
 	00158d94 farcall ax
 	00158d9c farsubsp 0x1
 	00158da4 pop op
 	00158dac sourceline 0x123c
 	00158db4 push op
 	00158dbc mov ax,0x2bd317
 	00158dc8 farpush ax
 	00158dd0 mov ax,0x138
 	00158ddc farpush ax
 	00158de4 mov ax,0x92
 	00158df0 farpush ax
 	00158df8 mov ax,0x0
 	00158e04 farpush ax
 	00158e0c mov mar,0x3cef20
 	00158e18 mov ax,mar
 	00158e24 mov op,ax
 	00158e2c setfuncargs 0x4
 	00158e34 mov ax,0x6aef20
 	00158e40 farcall ax
 	00158e48 farsubsp 0x4
 	00158e50 pop op
		00158e58: FALL_THROUGH

	[00158e58]
		00158c88: UNCONDITIONAL_JUMP
		00158c98: FALL_THROUGH
 	00158e58 sourceline 0x123e
 	00158e60 mov ax,0x0
 	00158e6c ret

RichardUseInvOnHimself$0:
	[00158e70]
 	00158e70 sourceline 0x1245
 	00158e78 thisaddr
 	00158e80 sourceline 0x1246
*	00158e88 mov mar,0x3cef20
 	00158e94 mov ax,mar
 	00158ea0 push op
 	00158ea8 mov op,ax
 	00158eb0 setfuncargs 0x0
 	00158eb8 mov ax,0x89ef20
 	00158ec4 farcall ax
 	00158ecc pop op
 	00158ed4 push ax
 	00158edc mov mar,0x9e6f20
 	00158ee8 mov ax,mar
 	00158ef4 pop bx
 	00158efc cmpeq bx,ax
 	00158f08 mov ax,bx
 	00158f14 jz 0x00159a7c
		00159a7c: CONDITIONAL_JUMP
		00158f1c: FALL_THROUGH

	[00158f1c]
		00158e70: FALL_THROUGH
 	00158f1c sourceline 0x1248
 	00158f24 mov mar,0x3cef20
 	00158f30 mov ax,mar
 	00158f3c push op
 	00158f44 mov op,ax
 	00158f4c setfuncargs 0x0
 	00158f54 mov ax,0x3d6f20
 	00158f60 farcall ax
 	00158f68 pop op
 	00158f70 push ax
 	00158f78 mov ax,0x7
 	00158f84 pop bx
 	00158f8c cmpeq bx,ax
 	00158f98 mov ax,bx
 	00158fa4 jz 0x00159944
		00159944: CONDITIONAL_JUMP
		00158fac: FALL_THROUGH

	[00158fac]
		00158f1c: FALL_THROUGH
 	00158fac sourceline 0x124a
 	00158fb4 mov ax,0x1
 	00158fc0 mov bx,ax
 	00158fcc mov mar,0x3cef20
 	00158fd8 mov ax,mar
 	00158fe4 push op
 	00158fec mov op,ax
 	00158ff4 farpush bx
 	00158ffc setfuncargs 0x1
 	00159004 mov ax,0x69ef20
 	00159010 farcall ax
 	00159018 farsubsp 0x1
 	00159020 pop op
 	00159028 sourceline 0x124b
 	00159030 push op
 	00159038 mov ax,0x2bd343
 	00159044 farpush ax
 	0015904c mov ax,0x138
 	00159058 farpush ax
 	00159060 mov ax,0x92
 	0015906c farpush ax
 	00159074 mov ax,0x0
 	00159080 farpush ax
 	00159088 mov mar,0x3cef20
 	00159094 mov ax,mar
 	001590a0 mov op,ax
 	001590a8 setfuncargs 0x4
 	001590b0 mov ax,0x6aef20
 	001590bc farcall ax
 	001590c4 farsubsp 0x4
 	001590cc pop op
 	001590d4 sourceline 0x124c
 	001590dc push op
 	001590e4 mov ax,0x397
 	001590f0 farpush ax
 	001590f8 mov ax,0x1
 	00159104 farpush ax
 	0015910c mov mar,0x3cef20
 	00159118 mov ax,mar
 	00159124 mov op,ax
 	0015912c setfuncargs 0x2
 	00159134 mov ax,0x6eef20
 	00159140 farcall ax
 	00159148 farsubsp 0x2
 	00159150 pop op
 	00159158 sourceline 0x124d
 	00159160 push op
 	00159168 mov ax,0x1c
 	00159174 farpush ax
 	0015917c mov mar,0x3cef20
 	00159188 mov ax,mar
 	00159194 mov op,ax
 	0015919c setfuncargs 0x1
 	001591a4 mov ax,0x51ef20
 	001591b0 farcall ax
 	001591b8 farsubsp 0x1
 	001591c0 pop op
 	001591c8 sourceline 0x124e
 	001591d0 mov mar,0x3cef20
 	001591dc mov ax,mar
 	001591e8 push op
 	001591f0 mov op,ax
 	001591f8 setfuncargs 0x0
 	00159200 mov ax,0x78ef20
 	0015920c farcall ax
 	00159214 pop op
 	0015921c mov mar,sp
 	00159228 memwrite4 ax
 	00159230 add sp,0x4
 	0015923c sourceline 0x124f
 	00159244 stackptr 0x4
 	0015924c memread4 ax
 	00159254 push ax
 	0015925c mov ax,0x8
 	00159268 pop bx
 	00159270 sub bx,ax
 	0015927c mov ax,bx
 	00159288 mov bx,ax
 	00159294 mov mar,0x3cef20
 	001592a0 mov ax,mar
 	001592ac push op
 	001592b4 mov op,ax
 	001592bc farpush bx
 	001592c4 setfuncargs 0x1
 	001592cc mov ax,0x526f20
 	001592d8 farcall ax
 	001592e0 farsubsp 0x1
 	001592e8 pop op
 	001592f0 sourceline 0x1250
 	001592f8 mov mar,0x3cef20
 	00159304 mov ax,mar
 	00159310 push op
 	00159318 mov op,ax
 	00159320 setfuncargs 0x0
 	00159328 mov ax,0xb36f20
 	00159334 farcall ax
 	0015933c pop op
 	00159344 mov mar,sp
 	00159350 memwrite4 ax
 	00159358 add sp,0x4
 	00159364 sourceline 0x1251
 	0015936c stackptr 0x4
 	00159374 memread4 ax
 	0015937c push ax
 	00159384 mov ax,0x2
 	00159390 pop bx
 	00159398 sub bx,ax
 	001593a4 mov ax,bx
 	001593b0 mov bx,ax
 	001593bc mov mar,0x3cef20
 	001593c8 mov ax,mar
 	001593d4 push op
 	001593dc mov op,ax
 	001593e4 farpush bx
 	001593ec setfuncargs 0x1
 	001593f4 mov ax,0x70ef20
 	00159400 farcall ax
 	00159408 farsubsp 0x1
 	00159410 pop op
 	00159418 sourceline 0x1252
 	00159420 push op
 	00159428 mov ax,0x426
 	00159434 farpush ax
 	0015943c mov ax,0x397
 	00159448 farpush ax
 	00159450 mov ax,0x0
 	0015945c farpush ax
 	00159464 mov ax,0x3
 	00159470 farpush ax
 	00159478 mov ax,0x0
 	00159484 farpush ax
 	0015948c mov mar,0x3cef20
 	00159498 mov ax,mar
 	001594a4 mov op,ax
 	001594ac setfuncargs 0x5
 	001594b4 mov ax,0x536f20
 	001594c0 farcall ax
 	001594c8 farsubsp 0x5
 	001594d0 pop op
 	001594d8 sourceline 0x1253
 	001594e0 push op
 	001594e8 mov ax,0x1b
 	001594f4 farpush ax
 	001594fc mov mar,0x3cef20
 	00159508 mov ax,mar
 	00159514 mov op,ax
 	0015951c setfuncargs 0x1
 	00159524 mov ax,0x51ef20
 	00159530 farcall ax
 	00159538 farsubsp 0x1
 	00159540 pop op
 	00159548 sourceline 0x1254
 	00159550 mov ax,0x1
 	0015955c mov bx,ax
 	00159568 mov mar,0x3cef20
 	00159574 mov ax,mar
 	00159580 push op
 	00159588 mov op,ax
 	00159590 farpush bx
 	00159598 setfuncargs 0x1
 	001595a0 mov ax,0x766f20
 	001595ac farcall ax
 	001595b4 farsubsp 0x1
 	001595bc pop op
 	001595c4 sourceline 0x1255
 	001595cc stackptr 0x8
 	001595d4 memread4 ax
 	001595dc mov bx,ax
 	001595e8 mov mar,0x3cef20
 	001595f4 mov ax,mar
 	00159600 push op
 	00159608 mov op,ax
 	00159610 farpush bx
 	00159618 setfuncargs 0x1
 	00159620 mov ax,0x526f20
 	0015962c farcall ax
 	00159634 farsubsp 0x1
 	0015963c pop op
 	00159644 sourceline 0x1256
 	0015964c mov ax,0x2
 	00159658 push ax
 	00159660 mov mar,0x3cef20
 	0015966c mov ax,mar
 	00159678 push op
 	00159680 mov op,ax
 	00159688 setfuncargs 0x0
 	00159690 mov ax,0xb36f20
 	0015969c farcall ax
 	001596a4 pop op
 	001596ac pop bx
 	001596b4 add ax,bx
 	001596c0 mov bx,ax
 	001596cc mov mar,0x3cef20
 	001596d8 mov ax,mar
 	001596e4 push op
 	001596ec mov op,ax
 	001596f4 farpush bx
 	001596fc setfuncargs 0x1
 	00159704 mov ax,0x70ef20
 	00159710 farcall ax
 	00159718 farsubsp 0x1
 	00159720 pop op
 	00159728 sourceline 0x1257
 	00159730 push op
 	00159738 mov mar,0x9e6f20
 	00159744 mov ax,mar
 	00159750 farpush ax
 	00159758 mov mar,0x3cef20
 	00159764 mov ax,mar
 	00159770 mov op,ax
 	00159778 setfuncargs 0x1
 	00159780 mov ax,0x7d6f20
 	0015978c farcall ax
 	00159794 farsubsp 0x1
 	0015979c pop op
 	001597a4 sourceline 0x1258
 	001597ac mov ax,0x1
 	001597b8 mov mar,0x776f20
 	001597c4 memwrite4 ax
 	001597cc sourceline 0x1259
 	001597d4 push op
 	001597dc mov ax,0x2bd370
 	001597e8 farpush ax
 	001597f0 mov ax,0x138
 	001597fc farpush ax
 	00159804 mov ax,0x92
 	00159810 farpush ax
 	00159818 mov ax,0x0
 	00159824 farpush ax
 	0015982c mov mar,0x3cef20
 	00159838 mov ax,mar
 	00159844 mov op,ax
 	0015984c setfuncargs 0x4
 	00159854 mov ax,0x6aef20
 	00159860 farcall ax
 	00159868 farsubsp 0x4
 	00159870 pop op
 	00159878 sourceline 0x125a
 	00159880 mov ax,0x1
 	0015988c mov mar,0xa2ef20
 	00159898 memwrite4 ax
 	001598a0 sourceline 0x125b
 	001598a8 mov ax,0x0
 	001598b4 mov bx,ax
 	001598c0 mov mar,0x336f20
 	001598cc mov ax,mar
 	001598d8 farpush bx
 	001598e0 setfuncargs 0x1
 	001598e8 mov ax,0x37ef20
 	001598f4 farcall ax
 	001598fc farsubsp 0x1
 	00159904 sourceline 0x125c
 	0015990c mov ax,0x0
 	00159918 sub sp,0x8
 	00159924 ret

	[00159944]
		00158f1c: CONDITIONAL_JUMP
 	00159944 sourceline 0x1260
 	0015994c mov ax,0x1
 	00159958 mov bx,ax
 	00159964 mov mar,0x3cef20
 	00159970 mov ax,mar
 	0015997c push op
 	00159984 mov op,ax
 	0015998c farpush bx
 	00159994 setfuncargs 0x1
 	0015999c mov ax,0x69ef20
 	001599a8 farcall ax
 	001599b0 farsubsp 0x1
 	001599b8 pop op
 	001599c0 sourceline 0x1261
 	001599c8 push op
 	001599d0 mov ax,0x2bd3a5
 	001599dc farpush ax
 	001599e4 mov ax,0x138
 	001599f0 farpush ax
 	001599f8 mov ax,0x92
 	00159a04 farpush ax
 	00159a0c mov ax,0x0
 	00159a18 farpush ax
 	00159a20 mov mar,0x3cef20
 	00159a2c mov ax,mar
 	00159a38 mov op,ax
 	00159a40 setfuncargs 0x4
 	00159a48 mov ax,0x6aef20
 	00159a54 farcall ax
 	00159a5c farsubsp 0x4
 	00159a64 pop op
 	00159a6c sourceline 0x1263
 	00159a74 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00159a7c]
		00158e70: CONDITIONAL_JUMP
 	00159a7c sourceline 0x1265
 	00159a84 mov mar,0x3cef20
 	00159a90 mov ax,mar
 	00159a9c push op
 	00159aa4 mov op,ax
 	00159aac setfuncargs 0x0
 	00159ab4 mov ax,0x89ef20
 	00159ac0 farcall ax
 	00159ac8 pop op
 	00159ad0 push ax
 	00159ad8 mov mar,0x9f6f20
 	00159ae4 mov ax,mar
 	00159af0 pop bx
 	00159af8 cmpeq bx,ax
 	00159b04 mov ax,bx
 	00159b10 jz 0x0015a64c
		0015a64c: CONDITIONAL_JUMP
		00159b18: FALL_THROUGH

	[00159b18]
		00159a7c: FALL_THROUGH
 	00159b18 sourceline 0x1267
 	00159b20 mov ax,0x2bd3db
 	00159b2c farpush ax
 	00159b34 setfuncargs 0x1
 	00159b3c mov ax,0x7f6f20
 	00159b48 farcall ax
 	00159b50 farsubsp 0x1
 	00159b58 jz 0x0015a514
		0015a514: CONDITIONAL_JUMP
		00159b60: FALL_THROUGH

	[00159b60]
		00159b18: FALL_THROUGH
 	00159b60 sourceline 0x1269
 	00159b68 push op
 	00159b70 mov ax,0x14
 	00159b7c farpush ax
 	00159b84 mov mar,0x3cef20
 	00159b90 mov ax,mar
 	00159b9c mov op,ax
 	00159ba4 setfuncargs 0x1
 	00159bac mov ax,0x51ef20
 	00159bb8 farcall ax
 	00159bc0 farsubsp 0x1
 	00159bc8 pop op
 	00159bd0 sourceline 0x126a
 	00159bd8 mov mar,0x3cef20
 	00159be4 mov ax,mar
 	00159bf0 push op
 	00159bf8 mov op,ax
 	00159c00 setfuncargs 0x0
 	00159c08 mov ax,0x78ef20
 	00159c14 farcall ax
 	00159c1c pop op
 	00159c24 mov mar,0x10016c
 	00159c30 memwrite4 ax
 	00159c38 mov mar,0x10016c
 	00159c44 memread4 ax
 	00159c4c push ax
 	00159c54 mov ax,0x7
 	00159c60 pop bx
 	00159c68 sub bx,ax
 	00159c74 mov ax,bx
 	00159c80 mov bx,ax
 	00159c8c mov mar,0x3cef20
 	00159c98 mov ax,mar
 	00159ca4 push op
 	00159cac mov op,ax
 	00159cb4 farpush bx
 	00159cbc setfuncargs 0x1
 	00159cc4 mov ax,0x526f20
 	00159cd0 farcall ax
 	00159cd8 farsubsp 0x1
 	00159ce0 pop op
 	00159ce8 sourceline 0x126b
 	00159cf0 mov mar,0x3cef20
 	00159cfc mov ax,mar
 	00159d08 push op
 	00159d10 mov op,ax
 	00159d18 setfuncargs 0x0
 	00159d20 mov ax,0xb36f20
 	00159d2c farcall ax
 	00159d34 pop op
 	00159d3c mov mar,0x100170
 	00159d48 memwrite4 ax
 	00159d50 mov mar,0x100170
 	00159d5c memread4 ax
 	00159d64 push ax
 	00159d6c mov ax,0x1
 	00159d78 pop bx
 	00159d80 add bx,ax
 	00159d8c mov ax,bx
 	00159d98 mov bx,ax
 	00159da4 mov mar,0x3cef20
 	00159db0 mov ax,mar
 	00159dbc push op
 	00159dc4 mov op,ax
 	00159dcc farpush bx
 	00159dd4 setfuncargs 0x1
 	00159ddc mov ax,0x70ef20
 	00159de8 farcall ax
 	00159df0 farsubsp 0x1
 	00159df8 pop op
 	00159e00 sourceline 0x126c
 	00159e08 push op
 	00159e10 mov ax,0x426
 	00159e1c farpush ax
 	00159e24 mov ax,0x397
 	00159e30 farpush ax
 	00159e38 mov ax,0x0
 	00159e44 farpush ax
 	00159e4c mov ax,0x3
 	00159e58 farpush ax
 	00159e60 mov ax,0x0
 	00159e6c farpush ax
 	00159e74 mov mar,0x3cef20
 	00159e80 mov ax,mar
 	00159e8c mov op,ax
 	00159e94 setfuncargs 0x5
 	00159e9c mov ax,0x536f20
 	00159ea8 farcall ax
 	00159eb0 farsubsp 0x5
 	00159eb8 pop op
 	00159ec0 sourceline 0x126d
 	00159ec8 push op
 	00159ed0 mov ax,0x0
 	00159edc farpush ax
 	00159ee4 mov ax,0x32
 	00159ef0 farpush ax
 	00159ef8 mov mar,0xc86f20
 	00159f04 mov ax,mar
 	00159f10 mov op,ax
 	00159f18 setfuncargs 0x2
 	00159f20 mov ax,0x2fef20
 	00159f2c farcall ax
 	00159f34 farsubsp 0x2
 	00159f3c pop op
 	00159f44 sourceline 0x126e
 	00159f4c mov ax,0x96
 	00159f58 farpush ax
 	00159f60 setfuncargs 0x1
 	00159f68 mov ax,0x426f20
 	00159f74 farcall ax
 	00159f7c farsubsp 0x1
 	00159f84 sourceline 0x126f
 	00159f8c push op
 	00159f94 mov ax,0x427
 	00159fa0 farpush ax
 	00159fa8 mov ax,0x397
 	00159fb4 farpush ax
 	00159fbc mov ax,0x0
 	00159fc8 farpush ax
 	00159fd0 mov ax,0x3
 	00159fdc farpush ax
 	00159fe4 mov ax,0x0
 	00159ff0 farpush ax
 	00159ff8 mov mar,0x3cef20
 	0015a004 mov ax,mar
 	0015a010 mov op,ax
 	0015a018 setfuncargs 0x5
 	0015a020 mov ax,0x536f20
 	0015a02c farcall ax
 	0015a034 farsubsp 0x5
 	0015a03c pop op
 	0015a044 sourceline 0x1270
 	0015a04c push op
 	0015a054 mov ax,0x2
 	0015a060 farpush ax
 	0015a068 mov mar,0x3cef20
 	0015a074 mov ax,mar
 	0015a080 mov op,ax
 	0015a088 setfuncargs 0x1
 	0015a090 mov ax,0x51ef20
 	0015a09c farcall ax
 	0015a0a4 farsubsp 0x1
 	0015a0ac pop op
 	0015a0b4 sourceline 0x1271
 	0015a0bc mov mar,0x3cef20
 	0015a0c8 mov ax,mar
 	0015a0d4 push op
 	0015a0dc mov op,ax
 	0015a0e4 setfuncargs 0x0
 	0015a0ec mov ax,0x78ef20
 	0015a0f8 farcall ax
 	0015a100 pop op
 	0015a108 mov mar,0x10016c
 	0015a114 memwrite4 ax
 	0015a11c mov mar,0x10016c
 	0015a128 memread4 ax
 	0015a130 push ax
 	0015a138 mov ax,0x7
 	0015a144 pop bx
 	0015a14c add bx,ax
 	0015a158 mov ax,bx
 	0015a164 mov bx,ax
 	0015a170 mov mar,0x3cef20
 	0015a17c mov ax,mar
 	0015a188 push op
 	0015a190 mov op,ax
 	0015a198 farpush bx
 	0015a1a0 setfuncargs 0x1
 	0015a1a8 mov ax,0x526f20
 	0015a1b4 farcall ax
 	0015a1bc farsubsp 0x1
 	0015a1c4 pop op
 	0015a1cc sourceline 0x1272
 	0015a1d4 mov mar,0x3cef20
 	0015a1e0 mov ax,mar
 	0015a1ec push op
 	0015a1f4 mov op,ax
 	0015a1fc setfuncargs 0x0
 	0015a204 mov ax,0xb36f20
 	0015a210 farcall ax
 	0015a218 pop op
 	0015a220 mov mar,0x100170
 	0015a22c memwrite4 ax
 	0015a234 mov mar,0x100170
 	0015a240 memread4 ax
 	0015a248 push ax
 	0015a250 mov ax,0x1
 	0015a25c pop bx
 	0015a264 sub bx,ax
 	0015a270 mov ax,bx
 	0015a27c mov bx,ax
 	0015a288 mov mar,0x3cef20
 	0015a294 mov ax,mar
 	0015a2a0 push op
 	0015a2a8 mov op,ax
 	0015a2b0 farpush bx
 	0015a2b8 setfuncargs 0x1
 	0015a2c0 mov ax,0x70ef20
 	0015a2cc farcall ax
 	0015a2d4 farsubsp 0x1
 	0015a2dc pop op
 	0015a2e4 sourceline 0x1273
 	0015a2ec mov ax,0x3
 	0015a2f8 mov bx,ax
 	0015a304 mov mar,0x3cef20
 	0015a310 mov ax,mar
 	0015a31c push op
 	0015a324 mov op,ax
 	0015a32c farpush bx
 	0015a334 setfuncargs 0x1
 	0015a33c mov ax,0x766f20
 	0015a348 farcall ax
 	0015a350 farsubsp 0x1
 	0015a358 pop op
 	0015a360 sourceline 0x1274
 	0015a368 mov ax,0x1
 	0015a374 mov bx,ax
 	0015a380 mov mar,0x3cef20
 	0015a38c mov ax,mar
 	0015a398 push op
 	0015a3a0 mov op,ax
 	0015a3a8 farpush bx
 	0015a3b0 setfuncargs 0x1
 	0015a3b8 mov ax,0x69ef20
 	0015a3c4 farcall ax
 	0015a3cc farsubsp 0x1
 	0015a3d4 pop op
 	0015a3dc sourceline 0x1275
 	0015a3e4 push op
 	0015a3ec mov ax,0x2bd3e7
 	0015a3f8 farpush ax
 	0015a400 mov ax,0x138
 	0015a40c farpush ax
 	0015a414 mov ax,0x92
 	0015a420 farpush ax
 	0015a428 mov ax,0x0
 	0015a434 farpush ax
 	0015a43c mov mar,0x3cef20
 	0015a448 mov ax,mar
 	0015a454 mov op,ax
 	0015a45c setfuncargs 0x4
 	0015a464 mov ax,0x6aef20
 	0015a470 farcall ax
 	0015a478 farsubsp 0x4
 	0015a480 pop op
 	0015a488 sourceline 0x1276
 	0015a490 mov ax,0x0
 	0015a49c mov bx,ax
 	0015a4a8 mov mar,0x3cef20
 	0015a4b4 mov ax,mar
 	0015a4c0 push op
 	0015a4c8 mov op,ax
 	0015a4d0 farpush bx
 	0015a4d8 setfuncargs 0x1
 	0015a4e0 mov ax,0x436f20
 	0015a4ec farcall ax
 	0015a4f4 farsubsp 0x1
 	0015a4fc pop op
 	0015a504 sourceline 0x1277
 	0015a50c jmp 0x0015a63c
		0015a63c: UNCONDITIONAL_JUMP

	[0015a514]
		00159b18: CONDITIONAL_JUMP
 	0015a514 sourceline 0x127a
 	0015a51c mov ax,0x1
 	0015a528 mov bx,ax
 	0015a534 mov mar,0x3cef20
 	0015a540 mov ax,mar
 	0015a54c push op
 	0015a554 mov op,ax
 	0015a55c farpush bx
 	0015a564 setfuncargs 0x1
 	0015a56c mov ax,0x69ef20
 	0015a578 farcall ax
 	0015a580 farsubsp 0x1
 	0015a588 pop op
 	0015a590 sourceline 0x127b
 	0015a598 push op
 	0015a5a0 mov ax,0x2bd409
 	0015a5ac farpush ax
 	0015a5b4 mov ax,0x138
 	0015a5c0 farpush ax
 	0015a5c8 mov ax,0x92
 	0015a5d4 farpush ax
 	0015a5dc mov ax,0x0
 	0015a5e8 farpush ax
 	0015a5f0 mov mar,0x3cef20
 	0015a5fc mov ax,mar
 	0015a608 mov op,ax
 	0015a610 setfuncargs 0x4
 	0015a618 mov ax,0x6aef20
 	0015a624 farcall ax
 	0015a62c farsubsp 0x4
 	0015a634 pop op
		0015a63c: FALL_THROUGH

	[0015a63c]
		00159b60: UNCONDITIONAL_JUMP
		0015a514: FALL_THROUGH
 	0015a63c sourceline 0x127d
 	0015a644 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0015a64c]
		00159a7c: CONDITIONAL_JUMP
 	0015a64c sourceline 0x127f
 	0015a654 mov mar,0x3cef20
 	0015a660 mov ax,mar
 	0015a66c push op
 	0015a674 mov op,ax
 	0015a67c setfuncargs 0x0
 	0015a684 mov ax,0x89ef20
 	0015a690 farcall ax
 	0015a698 pop op
 	0015a6a0 push ax
 	0015a6a8 mov mar,0x8cef20
 	0015a6b4 mov ax,mar
 	0015a6c0 pop bx
 	0015a6c8 cmpeq bx,ax
 	0015a6d4 mov ax,bx
 	0015a6e0 jz 0x0015cdfc
		0015cdfc: CONDITIONAL_JUMP
		0015a6e8: FALL_THROUGH

	[0015a6e8]
		0015a64c: FALL_THROUGH
 	0015a6e8 sourceline 0x1281
 	0015a6f0 mov mar,0x42ef20
 	0015a6fc push mar
 	0015a704 pop mar
 	0015a70c memread.ptr ax
 	0015a714 push ax
 	0015a71c pop mar
 	0015a724 mov ax,mar
 	0015a730 push op
 	0015a738 mov op,ax
 	0015a740 setfuncargs 0x0
 	0015a748 mov ax,0x3d6f20
 	0015a754 farcall ax
 	0015a75c pop op
 	0015a764 push ax
 	0015a76c mov ax,0x6
 	0015a778 pop bx
 	0015a780 cmpeq bx,ax
 	0015a78c mov ax,bx
 	0015a798 jz 0x0015a8e0
		0015a8e0: CONDITIONAL_JUMP
		0015a7a0: FALL_THROUGH

	[0015a7a0]
		0015a6e8: FALL_THROUGH
 	0015a7a0 sourceline 0x1283
 	0015a7a8 mov ax,0x1
 	0015a7b4 mov bx,ax
 	0015a7c0 mov mar,0x3cef20
 	0015a7cc mov ax,mar
 	0015a7d8 push op
 	0015a7e0 mov op,ax
 	0015a7e8 farpush bx
 	0015a7f0 setfuncargs 0x1
 	0015a7f8 mov ax,0x69ef20
 	0015a804 farcall ax
 	0015a80c farsubsp 0x1
 	0015a814 pop op
 	0015a81c sourceline 0x1284
 	0015a824 push op
 	0015a82c mov ax,0x2bd429
 	0015a838 farpush ax
 	0015a840 mov ax,0x138
 	0015a84c farpush ax
 	0015a854 mov ax,0x92
 	0015a860 farpush ax
 	0015a868 mov ax,0x0
 	0015a874 farpush ax
 	0015a87c mov mar,0x3cef20
 	0015a888 mov ax,mar
 	0015a894 mov op,ax
 	0015a89c setfuncargs 0x4
 	0015a8a4 mov ax,0x6aef20
 	0015a8b0 farcall ax
 	0015a8b8 farsubsp 0x4
 	0015a8c0 pop op
 	0015a8c8 sourceline 0x1285
 	0015a8d0 mov ax,0x0
 	0015a8dc ret

	[0015a8e0]
		0015a6e8: CONDITIONAL_JUMP
 	0015a8e0 sourceline 0x1287
 	0015a8e8 mov mar,0x42ef20
 	0015a8f4 push mar
 	0015a8fc pop mar
 	0015a904 memread.ptr ax
 	0015a90c push ax
 	0015a914 pop mar
 	0015a91c mov ax,mar
 	0015a928 push op
 	0015a930 mov op,ax
 	0015a938 setfuncargs 0x0
 	0015a940 mov ax,0x3d6f20
 	0015a94c farcall ax
 	0015a954 pop op
 	0015a95c push ax
 	0015a964 mov ax,0xd
 	0015a970 pop bx
 	0015a978 cmpeq bx,ax
 	0015a984 mov ax,bx
 	0015a990 jz 0x0015ab68
		0015ab68: CONDITIONAL_JUMP
		0015a998: FALL_THROUGH

	[0015a998]
		0015a8e0: FALL_THROUGH
 	0015a998 sourceline 0x1289
 	0015a9a0 mov mar,0x746f20
 	0015a9ac mov ax,mar
 	0015a9b8 push op
 	0015a9c0 mov op,ax
 	0015a9c8 setfuncargs 0x0
 	0015a9d0 mov ax,0x516f20
 	0015a9dc farcall ax
 	0015a9e4 pop op
 	0015a9ec push ax
 	0015a9f4 mov ax,0x44
 	0015aa00 pop bx
 	0015aa08 cmpneq bx,ax
 	0015aa14 mov ax,bx
 	0015aa20 jz 0x0015ab68
		0015ab68: CONDITIONAL_JUMP
		0015aa28: FALL_THROUGH

	[0015aa28]
		0015a998: FALL_THROUGH
 	0015aa28 sourceline 0x128b
 	0015aa30 mov ax,0x1
 	0015aa3c mov bx,ax
 	0015aa48 mov mar,0x3cef20
 	0015aa54 mov ax,mar
 	0015aa60 push op
 	0015aa68 mov op,ax
 	0015aa70 farpush bx
 	0015aa78 setfuncargs 0x1
 	0015aa80 mov ax,0x69ef20
 	0015aa8c farcall ax
 	0015aa94 farsubsp 0x1
 	0015aa9c pop op
 	0015aaa4 sourceline 0x128c
 	0015aaac push op
 	0015aab4 mov ax,0x2c7f84
 	0015aac0 farpush ax
 	0015aac8 mov ax,0x138
 	0015aad4 farpush ax
 	0015aadc mov ax,0x92
 	0015aae8 farpush ax
 	0015aaf0 mov ax,0x0
 	0015aafc farpush ax
 	0015ab04 mov mar,0x3cef20
 	0015ab10 mov ax,mar
 	0015ab1c mov op,ax
 	0015ab24 setfuncargs 0x4
 	0015ab2c mov ax,0x6aef20
 	0015ab38 farcall ax
 	0015ab40 farsubsp 0x4
 	0015ab48 pop op
 	0015ab50 sourceline 0x128d
 	0015ab58 mov ax,0x0
 	0015ab64 ret

	[0015ab68]
		0015a8e0: CONDITIONAL_JUMP
		0015a998: CONDITIONAL_JUMP
 	0015ab68 sourceline 0x1290
 	0015ab70 mov mar,0x42ef20
 	0015ab7c push mar
 	0015ab84 pop mar
 	0015ab8c memread.ptr ax
 	0015ab94 push ax
 	0015ab9c pop mar
 	0015aba4 mov ax,mar
 	0015abb0 push op
 	0015abb8 mov op,ax
 	0015abc0 setfuncargs 0x0
 	0015abc8 mov ax,0x3d6f20
 	0015abd4 farcall ax
 	0015abdc pop op
 	0015abe4 push ax
 	0015abec mov ax,0xa
 	0015abf8 pop bx
 	0015ac00 cmpeq bx,ax
 	0015ac0c mov ax,bx
 	0015ac18 jz 0x0015ade8
		0015ade8: CONDITIONAL_JUMP
		0015ac20: FALL_THROUGH

	[0015ac20]
		0015ab68: FALL_THROUGH
 	0015ac20 sourceline 0x1292
 	0015ac28 mov mar,0x74ef20
 	0015ac34 memread4 ax
 	0015ac3c jz 0x0015ad94
		0015ad94: CONDITIONAL_JUMP
		0015ac44: FALL_THROUGH

	[0015ac44]
		0015ac20: FALL_THROUGH
 	0015ac44 sourceline 0x1294
 	0015ac4c mov ax,0x1
 	0015ac58 mov bx,ax
 	0015ac64 mov mar,0x3cef20
 	0015ac70 mov ax,mar
 	0015ac7c push op
 	0015ac84 mov op,ax
 	0015ac8c farpush bx
 	0015ac94 setfuncargs 0x1
 	0015ac9c mov ax,0x69ef20
 	0015aca8 farcall ax
 	0015acb0 farsubsp 0x1
 	0015acb8 pop op
 	0015acc0 sourceline 0x1295
 	0015acc8 push op
 	0015acd0 mov ax,0x2c7f84
 	0015acdc farpush ax
 	0015ace4 mov ax,0x138
 	0015acf0 farpush ax
 	0015acf8 mov ax,0x92
 	0015ad04 farpush ax
 	0015ad0c mov ax,0x0
 	0015ad18 farpush ax
 	0015ad20 mov mar,0x3cef20
 	0015ad2c mov ax,mar
 	0015ad38 mov op,ax
 	0015ad40 setfuncargs 0x4
 	0015ad48 mov ax,0x6aef20
 	0015ad54 farcall ax
 	0015ad5c farsubsp 0x4
 	0015ad64 pop op
 	0015ad6c sourceline 0x1296
 	0015ad74 mov ax,0x0
 	0015ad80 ret

	[0015ad94]
		0015ac20: CONDITIONAL_JUMP
 	0015ad94 sourceline 0x1298
 	0015ad9c mov ax,0x0
 	0015ada8 farpush ax
 	0015adb0 mov ax,0x4
 	0015adbc farpush ax
 	0015adc4 setfuncargs 0x2
 	0015adcc mov ax,0x756f20
 	0015add8 farcall ax
 	0015ade0 farsubsp 0x2
		0015ade8: FALL_THROUGH

	[0015ade8]
		0015ab68: CONDITIONAL_JUMP
		0015ad94: FALL_THROUGH
 	0015ade8 sourceline 0x129a
 	0015adf0 mov mar,0x42ef20
 	0015adfc push mar
 	0015ae04 pop mar
 	0015ae0c memread.ptr ax
 	0015ae14 push ax
 	0015ae1c pop mar
 	0015ae24 mov ax,mar
 	0015ae30 push op
 	0015ae38 mov op,ax
 	0015ae40 setfuncargs 0x0
 	0015ae48 mov ax,0x3d6f20
 	0015ae54 farcall ax
 	0015ae5c pop op
 	0015ae64 push ax
 	0015ae6c mov ax,0x18
 	0015ae78 pop bx
 	0015ae80 cmpeq bx,ax
 	0015ae8c mov ax,bx
 	0015ae98 jnz 0x0015af70
		0015af70: CONDITIONAL_JUMP
		0015aea0: FALL_THROUGH

	[0015aea0]
		0015ade8: FALL_THROUGH
 	0015aea0 push ax
 	0015aea8 mov mar,0x42ef20
 	0015aeb4 push mar
 	0015aebc pop mar
 	0015aec4 memread.ptr ax
 	0015aecc push ax
 	0015aed4 pop mar
 	0015aedc mov ax,mar
 	0015aee8 push op
 	0015aef0 mov op,ax
 	0015aef8 setfuncargs 0x0
 	0015af00 mov ax,0x3d6f20
 	0015af0c farcall ax
 	0015af14 pop op
 	0015af1c push ax
 	0015af24 mov ax,0x19
 	0015af30 pop bx
 	0015af38 cmpeq bx,ax
 	0015af44 mov ax,bx
 	0015af50 pop bx
 	0015af58 lor bx,ax
 	0015af64 mov ax,bx
		0015af70: FALL_THROUGH

	[0015af70]
		0015ade8: CONDITIONAL_JUMP
		0015aea0: FALL_THROUGH
 	0015af70 jnz 0x0015b048
		0015b048: CONDITIONAL_JUMP
		0015af78: FALL_THROUGH

	[0015af78]
		0015af70: FALL_THROUGH
 	0015af78 push ax
 	0015af80 mov mar,0x42ef20
 	0015af8c push mar
 	0015af94 pop mar
 	0015af9c memread.ptr ax
 	0015afa4 push ax
 	0015afac pop mar
 	0015afb4 mov ax,mar
 	0015afc0 push op
 	0015afc8 mov op,ax
 	0015afd0 setfuncargs 0x0
 	0015afd8 mov ax,0x3d6f20
 	0015afe4 farcall ax
 	0015afec pop op
 	0015aff4 push ax
 	0015affc mov ax,0x1a
 	0015b008 pop bx
 	0015b010 cmpeq bx,ax
 	0015b01c mov ax,bx
 	0015b028 pop bx
 	0015b030 lor bx,ax
 	0015b03c mov ax,bx
		0015b048: FALL_THROUGH

	[0015b048]
		0015af70: CONDITIONAL_JUMP
		0015af78: FALL_THROUGH
 	0015b048 jnz 0x0015b120
		0015b120: CONDITIONAL_JUMP
		0015b050: FALL_THROUGH

	[0015b050]
		0015b048: FALL_THROUGH
 	0015b050 push ax
 	0015b058 mov mar,0x42ef20
 	0015b064 push mar
 	0015b06c pop mar
 	0015b074 memread.ptr ax
 	0015b07c push ax
 	0015b084 pop mar
 	0015b08c mov ax,mar
 	0015b098 push op
 	0015b0a0 mov op,ax
 	0015b0a8 setfuncargs 0x0
 	0015b0b0 mov ax,0x3d6f20
 	0015b0bc farcall ax
 	0015b0c4 pop op
 	0015b0cc push ax
 	0015b0d4 mov ax,0x1b
 	0015b0e0 pop bx
 	0015b0e8 cmpeq bx,ax
 	0015b0f4 mov ax,bx
 	0015b100 pop bx
 	0015b108 lor bx,ax
 	0015b114 mov ax,bx
		0015b120: FALL_THROUGH

	[0015b120]
		0015b048: CONDITIONAL_JUMP
		0015b050: FALL_THROUGH
 	0015b120 jnz 0x0015b1f8
		0015b1f8: CONDITIONAL_JUMP
		0015b128: FALL_THROUGH

	[0015b128]
		0015b120: FALL_THROUGH
 	0015b128 push ax
 	0015b130 mov mar,0x42ef20
 	0015b13c push mar
 	0015b144 pop mar
 	0015b14c memread.ptr ax
 	0015b154 push ax
 	0015b15c pop mar
 	0015b164 mov ax,mar
 	0015b170 push op
 	0015b178 mov op,ax
 	0015b180 setfuncargs 0x0
 	0015b188 mov ax,0x3d6f20
 	0015b194 farcall ax
 	0015b19c pop op
 	0015b1a4 push ax
 	0015b1ac mov ax,0x1c
 	0015b1b8 pop bx
 	0015b1c0 cmpeq bx,ax
 	0015b1cc mov ax,bx
 	0015b1d8 pop bx
 	0015b1e0 lor bx,ax
 	0015b1ec mov ax,bx
		0015b1f8: FALL_THROUGH

	[0015b1f8]
		0015b120: CONDITIONAL_JUMP
		0015b128: FALL_THROUGH
 	0015b1f8 jnz 0x0015b2d0
		0015b2d0: CONDITIONAL_JUMP
		0015b200: FALL_THROUGH

	[0015b200]
		0015b1f8: FALL_THROUGH
 	0015b200 push ax
 	0015b208 mov mar,0x42ef20
 	0015b214 push mar
 	0015b21c pop mar
 	0015b224 memread.ptr ax
 	0015b22c push ax
 	0015b234 pop mar
 	0015b23c mov ax,mar
 	0015b248 push op
 	0015b250 mov op,ax
 	0015b258 setfuncargs 0x0
 	0015b260 mov ax,0x3d6f20
 	0015b26c farcall ax
 	0015b274 pop op
 	0015b27c push ax
 	0015b284 mov ax,0x1e
 	0015b290 pop bx
 	0015b298 cmpeq bx,ax
 	0015b2a4 mov ax,bx
 	0015b2b0 pop bx
 	0015b2b8 lor bx,ax
 	0015b2c4 mov ax,bx
		0015b2d0: FALL_THROUGH

	[0015b2d0]
		0015b1f8: CONDITIONAL_JUMP
		0015b200: FALL_THROUGH
 	0015b2d0 jz 0x0015b418
		0015b418: CONDITIONAL_JUMP
		0015b2d8: FALL_THROUGH

	[0015b2d8]
		0015b2d0: FALL_THROUGH
 	0015b2d8 sourceline 0x129c
 	0015b2e0 mov ax,0x1
 	0015b2ec mov bx,ax
 	0015b2f8 mov mar,0x3cef20
 	0015b304 mov ax,mar
 	0015b310 push op
 	0015b318 mov op,ax
 	0015b320 farpush bx
 	0015b328 setfuncargs 0x1
 	0015b330 mov ax,0x69ef20
 	0015b33c farcall ax
 	0015b344 farsubsp 0x1
 	0015b34c pop op
 	0015b354 sourceline 0x129d
 	0015b35c push op
 	0015b364 mov ax,0x2bd470
 	0015b370 farpush ax
 	0015b378 mov ax,0x138
 	0015b384 farpush ax
 	0015b38c mov ax,0x92
 	0015b398 farpush ax
 	0015b3a0 mov ax,0x0
 	0015b3ac farpush ax
 	0015b3b4 mov mar,0x3cef20
 	0015b3c0 mov ax,mar
 	0015b3cc mov op,ax
 	0015b3d4 setfuncargs 0x4
 	0015b3dc mov ax,0x6aef20
 	0015b3e8 farcall ax
 	0015b3f0 farsubsp 0x4
 	0015b3f8 pop op
 	0015b400 sourceline 0x129e
 	0015b408 mov ax,0x0
 	0015b414 ret

	[0015b418]
		0015b2d0: CONDITIONAL_JUMP
 	0015b418 sourceline 0x12a0
 	0015b420 mov ax,0x0
 	0015b42c mov bx,ax
 	0015b438 mov mar,0x3cef20
 	0015b444 mov ax,mar
 	0015b450 push op
 	0015b458 mov op,ax
 	0015b460 farpush bx
 	0015b468 setfuncargs 0x1
 	0015b470 mov ax,0x766f20
 	0015b47c farcall ax
 	0015b484 farsubsp 0x1
 	0015b48c pop op
 	0015b494 sourceline 0x12a1
 	0015b49c mov ax,0x5
 	0015b4a8 farpush ax
 	0015b4b0 setfuncargs 0x1
 	0015b4b8 mov ax,0x426f20
 	0015b4c4 farcall ax
 	0015b4cc farsubsp 0x1
 	0015b4d4 sourceline 0x12a2
 	0015b4dc mov mar,0x3cef20
 	0015b4e8 mov ax,mar
 	0015b4f4 push op
 	0015b4fc mov op,ax
 	0015b504 setfuncargs 0x0
 	0015b50c mov ax,0x3d6f20
 	0015b518 farcall ax
 	0015b520 pop op
 	0015b528 push ax
 	0015b530 mov ax,0x8
 	0015b53c pop bx
 	0015b544 cmpeq bx,ax
 	0015b550 mov ax,bx
 	0015b55c jz 0x0015b6b4
		0015b6b4: CONDITIONAL_JUMP
		0015b564: FALL_THROUGH

	[0015b564]
		0015b418: FALL_THROUGH
 	0015b564 sourceline 0x12a4
 	0015b56c setfuncargs 0x0
 	0015b574 mov ax,0x76ef20
 	0015b580 farcall ax
 	0015b588 push ax
 	0015b590 mov ax,0x1
 	0015b59c pop bx
 	0015b5a4 cmpeq bx,ax
 	0015b5b0 mov ax,bx
 	0015b5bc jz 0x0015b634
		0015b634: CONDITIONAL_JUMP
		0015b5c4: FALL_THROUGH

	[0015b5c4]
		0015b564: FALL_THROUGH
 	0015b5c4 push op
 	0015b5cc mov ax,0xaa
 	0015b5d8 farpush ax
 	0015b5e0 mov mar,0x3cef20
 	0015b5ec mov ax,mar
 	0015b5f8 mov op,ax
 	0015b600 setfuncargs 0x1
 	0015b608 mov ax,0x51ef20
 	0015b614 farcall ax
 	0015b61c farsubsp 0x1
 	0015b624 pop op
 	0015b62c jmp 0x0015b6a4
		0015b6a4: UNCONDITIONAL_JUMP

	[0015b634]
		0015b564: CONDITIONAL_JUMP
 	0015b634 sourceline 0x12a5
 	0015b63c push op
 	0015b644 mov ax,0x10
 	0015b650 farpush ax
 	0015b658 mov mar,0x3cef20
 	0015b664 mov ax,mar
 	0015b670 mov op,ax
 	0015b678 setfuncargs 0x1
 	0015b680 mov ax,0x51ef20
 	0015b68c farcall ax
 	0015b694 farsubsp 0x1
 	0015b69c pop op
		0015b6a4: FALL_THROUGH

	[0015b6a4]
		0015b5c4: UNCONDITIONAL_JUMP
		0015b634: FALL_THROUGH
 	0015b6a4 sourceline 0x12a6
 	0015b6ac jmp 0x0015bb70
		0015bb70: UNCONDITIONAL_JUMP

	[0015b6b4]
		0015b418: CONDITIONAL_JUMP
 	0015b6b4 sourceline 0x12a7
 	0015b6bc mov mar,0x3cef20
 	0015b6c8 mov ax,mar
 	0015b6d4 push op
 	0015b6dc mov op,ax
 	0015b6e4 setfuncargs 0x0
 	0015b6ec mov ax,0x3d6f20
 	0015b6f8 farcall ax
 	0015b700 pop op
 	0015b708 push ax
 	0015b710 mov ax,0x12
 	0015b71c pop bx
 	0015b724 cmpeq bx,ax
 	0015b730 mov ax,bx
 	0015b73c jz 0x0015b7b4
		0015b7b4: CONDITIONAL_JUMP
		0015b744: FALL_THROUGH

	[0015b744]
		0015b6b4: FALL_THROUGH
 	0015b744 push op
 	0015b74c mov ax,0xab
 	0015b758 farpush ax
 	0015b760 mov mar,0x3cef20
 	0015b76c mov ax,mar
 	0015b778 mov op,ax
 	0015b780 setfuncargs 0x1
 	0015b788 mov ax,0x51ef20
 	0015b794 farcall ax
 	0015b79c farsubsp 0x1
 	0015b7a4 pop op
 	0015b7ac jmp 0x0015bb70
		0015bb70: UNCONDITIONAL_JUMP

	[0015b7b4]
		0015b6b4: CONDITIONAL_JUMP
 	0015b7b4 sourceline 0x12a8
 	0015b7bc mov mar,0x3cef20
 	0015b7c8 mov ax,mar
 	0015b7d4 push op
 	0015b7dc mov op,ax
 	0015b7e4 setfuncargs 0x0
 	0015b7ec mov ax,0x3d6f20
 	0015b7f8 farcall ax
 	0015b800 pop op
 	0015b808 push ax
 	0015b810 mov ax,0x22
 	0015b81c pop bx
 	0015b824 cmpeq bx,ax
 	0015b830 mov ax,bx
 	0015b83c jnz 0x0015b8ec
		0015b8ec: CONDITIONAL_JUMP
		0015b844: FALL_THROUGH

	[0015b844]
		0015b7b4: FALL_THROUGH
 	0015b844 push ax
 	0015b84c mov mar,0x3cef20
 	0015b858 mov ax,mar
 	0015b864 push op
 	0015b86c mov op,ax
 	0015b874 setfuncargs 0x0
 	0015b87c mov ax,0x3d6f20
 	0015b888 farcall ax
 	0015b890 pop op
 	0015b898 push ax
 	0015b8a0 mov ax,0x25
 	0015b8ac pop bx
 	0015b8b4 cmpeq bx,ax
 	0015b8c0 mov ax,bx
 	0015b8cc pop bx
 	0015b8d4 lor bx,ax
 	0015b8e0 mov ax,bx
		0015b8ec: FALL_THROUGH

	[0015b8ec]
		0015b7b4: CONDITIONAL_JUMP
		0015b844: FALL_THROUGH
 	0015b8ec jz 0x0015b964
		0015b964: CONDITIONAL_JUMP
		0015b8f4: FALL_THROUGH

	[0015b8f4]
		0015b8ec: FALL_THROUGH
 	0015b8f4 push op
 	0015b8fc mov ax,0xe3
 	0015b908 farpush ax
 	0015b910 mov mar,0x3cef20
 	0015b91c mov ax,mar
 	0015b928 mov op,ax
 	0015b930 setfuncargs 0x1
 	0015b938 mov ax,0x51ef20
 	0015b944 farcall ax
 	0015b94c farsubsp 0x1
 	0015b954 pop op
 	0015b95c jmp 0x0015bb70
		0015bb70: UNCONDITIONAL_JUMP

	[0015b964]
		0015b8ec: CONDITIONAL_JUMP
 	0015b964 sourceline 0x12a9
 	0015b96c mov mar,0x3cef20
 	0015b978 mov ax,mar
 	0015b984 push op
 	0015b98c mov op,ax
 	0015b994 setfuncargs 0x0
 	0015b99c mov ax,0x3d6f20
 	0015b9a8 farcall ax
 	0015b9b0 pop op
 	0015b9b8 push ax
 	0015b9c0 mov ax,0x27
 	0015b9cc pop bx
 	0015b9d4 cmpeq bx,ax
 	0015b9e0 mov ax,bx
 	0015b9ec jz 0x0015ba64
		0015ba64: CONDITIONAL_JUMP
		0015b9f4: FALL_THROUGH

	[0015b9f4]
		0015b964: FALL_THROUGH
 	0015b9f4 push op
 	0015b9fc mov ax,0xe4
 	0015ba08 farpush ax
 	0015ba10 mov mar,0x3cef20
 	0015ba1c mov ax,mar
 	0015ba28 mov op,ax
 	0015ba30 setfuncargs 0x1
 	0015ba38 mov ax,0x51ef20
 	0015ba44 farcall ax
 	0015ba4c farsubsp 0x1
 	0015ba54 pop op
 	0015ba5c jmp 0x0015bb70
		0015bb70: UNCONDITIONAL_JUMP

	[0015ba64]
		0015b964: CONDITIONAL_JUMP
 	0015ba64 sourceline 0x12ac
 	0015ba6c mov mar,0x776f20
 	0015ba78 memread4 ax
 	0015ba80 lnot ax
 	0015ba88 jz 0x0015bb00
		0015bb00: CONDITIONAL_JUMP
		0015ba90: FALL_THROUGH

	[0015ba90]
		0015ba64: FALL_THROUGH
 	0015ba90 push op
 	0015ba98 mov ax,0x10
 	0015baa4 farpush ax
 	0015baac mov mar,0x3cef20
 	0015bab8 mov ax,mar
 	0015bac4 mov op,ax
 	0015bacc setfuncargs 0x1
 	0015bad4 mov ax,0x51ef20
 	0015bae0 farcall ax
 	0015bae8 farsubsp 0x1
 	0015baf0 pop op
 	0015baf8 jmp 0x0015bb70
		0015bb70: UNCONDITIONAL_JUMP

	[0015bb00]
		0015ba64: CONDITIONAL_JUMP
 	0015bb00 sourceline 0x12ad
 	0015bb08 push op
 	0015bb10 mov ax,0x7e
 	0015bb1c farpush ax
 	0015bb24 mov mar,0x3cef20
 	0015bb30 mov ax,mar
 	0015bb3c mov op,ax
 	0015bb44 setfuncargs 0x1
 	0015bb4c mov ax,0x51ef20
 	0015bb58 farcall ax
 	0015bb60 farsubsp 0x1
 	0015bb68 pop op
		0015bb70: FALL_THROUGH

	[0015bb70]
		0015b6a4: UNCONDITIONAL_JUMP
		0015b744: UNCONDITIONAL_JUMP
		0015b8f4: UNCONDITIONAL_JUMP
		0015b9f4: UNCONDITIONAL_JUMP
		0015ba90: UNCONDITIONAL_JUMP
		0015bb00: FALL_THROUGH
 	0015bb70 sourceline 0x12af
 	0015bb78 push op
 	0015bb80 mov ax,0x0
 	0015bb8c farpush ax
 	0015bb94 mov ax,0x32
 	0015bba0 farpush ax
 	0015bba8 mov mar,0x79ef20
 	0015bbb4 mov ax,mar
 	0015bbc0 mov op,ax
 	0015bbc8 setfuncargs 0x2
 	0015bbd0 mov ax,0x2fef20
 	0015bbdc farcall ax
 	0015bbe4 farsubsp 0x2
 	0015bbec pop op
 	0015bbf4 sourceline 0x12b1
 	0015bbfc mov mar,0x3cef20
 	0015bc08 mov ax,mar
 	0015bc14 push op
 	0015bc1c mov op,ax
 	0015bc24 setfuncargs 0x0
 	0015bc2c mov ax,0x3d6f20
 	0015bc38 farcall ax
 	0015bc40 pop op
 	0015bc48 push ax
 	0015bc50 mov ax,0x10
 	0015bc5c pop bx
 	0015bc64 cmpeq bx,ax
 	0015bc70 mov ax,bx
 	0015bc7c jz 0x0015bf84
		0015bf84: CONDITIONAL_JUMP
		0015bc84: FALL_THROUGH

	[0015bc84]
		0015bb70: FALL_THROUGH
 	0015bc84 mov ax,0x0
 	0015bc90 push ax
 	0015bc98 mov ax,0x1
 	0015bca4 assertlte ax,0x10
 	0015bcb0 mul ax,0x8
 	0015bcbc mov cx,ax
 	0015bcc8 pop ax
 	0015bcd0 mov bx,ax
 	0015bcdc mov mar,0x77ef20
 	0015bce8 add mar,cx
 	0015bcf4 mov ax,mar
 	0015bd00 push op
 	0015bd08 mov op,ax
 	0015bd10 farpush bx
 	0015bd18 setfuncargs 0x1
 	0015bd20 mov ax,0x786f20
 	0015bd2c farcall ax
 	0015bd34 farsubsp 0x1
 	0015bd3c pop op
 	0015bd44 mov ax,0x0
 	0015bd50 push ax
 	0015bd58 mov ax,0x2
 	0015bd64 assertlte ax,0x10
 	0015bd70 mul ax,0x8
 	0015bd7c mov cx,ax
 	0015bd88 pop ax
 	0015bd90 mov bx,ax
 	0015bd9c mov mar,0x77ef20
 	0015bda8 add mar,cx
 	0015bdb4 mov ax,mar
 	0015bdc0 push op
 	0015bdc8 mov op,ax
 	0015bdd0 farpush bx
 	0015bdd8 setfuncargs 0x1
 	0015bde0 mov ax,0x786f20
 	0015bdec farcall ax
 	0015bdf4 farsubsp 0x1
 	0015bdfc pop op
 	0015be04 mov ax,0x0
 	0015be10 push ax
 	0015be18 mov ax,0x3
 	0015be24 assertlte ax,0x10
 	0015be30 mul ax,0x8
 	0015be3c mov cx,ax
 	0015be48 pop ax
 	0015be50 mov bx,ax
 	0015be5c mov mar,0x77ef20
 	0015be68 add mar,cx
 	0015be74 mov ax,mar
 	0015be80 push op
 	0015be88 mov op,ax
 	0015be90 farpush bx
 	0015be98 setfuncargs 0x1
 	0015bea0 mov ax,0x786f20
 	0015beac farcall ax
 	0015beb4 farsubsp 0x1
 	0015bebc pop op
 	0015bec4 mov ax,0x0
 	0015bed0 push ax
 	0015bed8 mov ax,0x4
 	0015bee4 assertlte ax,0x10
 	0015bef0 mul ax,0x8
 	0015befc mov cx,ax
 	0015bf08 pop ax
 	0015bf10 mov bx,ax
 	0015bf1c mov mar,0x77ef20
 	0015bf28 add mar,cx
 	0015bf34 mov ax,mar
 	0015bf40 push op
 	0015bf48 mov op,ax
 	0015bf50 farpush bx
 	0015bf58 setfuncargs 0x1
 	0015bf60 mov ax,0x786f20
 	0015bf6c farcall ax
 	0015bf74 farsubsp 0x1
 	0015bf7c pop op
		0015bf84: FALL_THROUGH

	[0015bf84]
		0015bb70: CONDITIONAL_JUMP
		0015bc84: FALL_THROUGH
 	0015bf84 sourceline 0x12b3
 	0015bf8c mov mar,0x42ef20
 	0015bf98 push mar
 	0015bfa0 pop mar
 	0015bfa8 memread.ptr ax
 	0015bfb0 push ax
 	0015bfb8 pop mar
 	0015bfc0 mov ax,mar
 	0015bfcc push op
 	0015bfd4 mov op,ax
 	0015bfdc setfuncargs 0x0
 	0015bfe4 mov ax,0x3d6f20
 	0015bff0 farcall ax
 	0015bff8 pop op
 	0015c000 push ax
 	0015c008 mov ax,0xd
 	0015c014 pop bx
 	0015c01c cmpeq bx,ax
 	0015c028 mov ax,bx
 	0015c034 jz 0x0015c1bc
		0015c1bc: CONDITIONAL_JUMP
		0015c03c: FALL_THROUGH

	[0015c03c]
		0015bf84: FALL_THROUGH
 	0015c03c mov ax,0x0
 	0015c048 push ax
 	0015c050 mov ax,0x1
 	0015c05c assertlte ax,0x10
 	0015c068 mul ax,0x8
 	0015c074 mov cx,ax
 	0015c080 pop ax
 	0015c088 mov bx,ax
 	0015c094 mov mar,0x77ef20
 	0015c0a0 add mar,cx
 	0015c0ac mov ax,mar
 	0015c0b8 push op
 	0015c0c0 mov op,ax
 	0015c0c8 farpush bx
 	0015c0d0 setfuncargs 0x1
 	0015c0d8 mov ax,0x786f20
 	0015c0e4 farcall ax
 	0015c0ec farsubsp 0x1
 	0015c0f4 pop op
 	0015c0fc mov ax,0x0
 	0015c108 push ax
 	0015c110 mov ax,0x2
 	0015c11c assertlte ax,0x10
 	0015c128 mul ax,0x8
 	0015c134 mov cx,ax
 	0015c140 pop ax
 	0015c148 mov bx,ax
 	0015c154 mov mar,0x77ef20
 	0015c160 add mar,cx
 	0015c16c mov ax,mar
 	0015c178 push op
 	0015c180 mov op,ax
 	0015c188 farpush bx
 	0015c190 setfuncargs 0x1
 	0015c198 mov ax,0x786f20
 	0015c1a4 farcall ax
 	0015c1ac farsubsp 0x1
 	0015c1b4 pop op
		0015c1bc: FALL_THROUGH

	[0015c1bc]
		0015bf84: CONDITIONAL_JUMP
		0015c03c: FALL_THROUGH
 	0015c1bc sourceline 0x12b5
 	0015c1c4 mov mar,0x42ef20
 	0015c1d0 push mar
 	0015c1d8 pop mar
 	0015c1e0 memread.ptr ax
 	0015c1e8 push ax
 	0015c1f0 pop mar
 	0015c1f8 mov ax,mar
 	0015c204 push op
 	0015c20c mov op,ax
 	0015c214 setfuncargs 0x0
 	0015c21c mov ax,0x3d6f20
 	0015c228 farcall ax
 	0015c230 pop op
 	0015c238 push ax
 	0015c240 mov ax,0x27
 	0015c24c pop bx
 	0015c254 cmpeq bx,ax
 	0015c260 mov ax,bx
 	0015c26c jz 0x0015c3f4
		0015c3f4: CONDITIONAL_JUMP
		0015c274: FALL_THROUGH

	[0015c274]
		0015c1bc: FALL_THROUGH
 	0015c274 mov ax,0x0
 	0015c280 push ax
 	0015c288 mov ax,0x1
 	0015c294 assertlte ax,0x10
 	0015c2a0 mul ax,0x8
 	0015c2ac mov cx,ax
 	0015c2b8 pop ax
 	0015c2c0 mov bx,ax
 	0015c2cc mov mar,0x77ef20
 	0015c2d8 add mar,cx
 	0015c2e4 mov ax,mar
 	0015c2f0 push op
 	0015c2f8 mov op,ax
 	0015c300 farpush bx
 	0015c308 setfuncargs 0x1
 	0015c310 mov ax,0x786f20
 	0015c31c farcall ax
 	0015c324 farsubsp 0x1
 	0015c32c pop op
 	0015c334 mov ax,0x0
 	0015c340 push ax
 	0015c348 mov ax,0x2
 	0015c354 assertlte ax,0x10
 	0015c360 mul ax,0x8
 	0015c36c mov cx,ax
 	0015c378 pop ax
 	0015c380 mov bx,ax
 	0015c38c mov mar,0x77ef20
 	0015c398 add mar,cx
 	0015c3a4 mov ax,mar
 	0015c3b0 push op
 	0015c3b8 mov op,ax
 	0015c3c0 farpush bx
 	0015c3c8 setfuncargs 0x1
 	0015c3d0 mov ax,0x786f20
 	0015c3dc farcall ax
 	0015c3e4 farsubsp 0x1
 	0015c3ec pop op
		0015c3f4: FALL_THROUGH

	[0015c3f4]
		0015c1bc: CONDITIONAL_JUMP
		0015c274: FALL_THROUGH
 	0015c3f4 sourceline 0x12b7
 	0015c3fc mov mar,0x42ef20
 	0015c408 push mar
 	0015c410 pop mar
 	0015c418 memread.ptr ax
 	0015c420 push ax
 	0015c428 pop mar
 	0015c430 mov ax,mar
 	0015c43c push op
 	0015c444 mov op,ax
 	0015c44c setfuncargs 0x0
 	0015c454 mov ax,0x3d6f20
 	0015c460 farcall ax
 	0015c468 pop op
 	0015c470 push ax
 	0015c478 mov ax,0x16
 	0015c484 pop bx
 	0015c48c cmpeq bx,ax
 	0015c498 mov ax,bx
 	0015c4a4 jz 0x0015c6d4
		0015c6d4: CONDITIONAL_JUMP
		0015c4ac: FALL_THROUGH

	[0015c4ac]
		0015c3f4: FALL_THROUGH
 	0015c4ac sourceline 0x12b9
 	0015c4b4 mov mar,0x42ef20
 	0015c4c0 push mar
 	0015c4c8 pop mar
 	0015c4d0 memread.ptr ax
 	0015c4d8 push ax
 	0015c4e0 pop mar
 	0015c4e8 mov ax,mar
 	0015c4f4 push op
 	0015c4fc mov op,ax
 	0015c504 setfuncargs 0x0
 	0015c50c mov ax,0x78ef20
 	0015c518 farcall ax
 	0015c520 pop op
 	0015c528 push ax
 	0015c530 mov ax,0x84
 	0015c53c pop bx
 	0015c544 cmpgt bx,ax
 	0015c550 mov ax,bx
 	0015c55c jz 0x0015c5b8
		0015c5b8: CONDITIONAL_JUMP
		0015c564: FALL_THROUGH

	[0015c564]
		0015c4ac: FALL_THROUGH
 	0015c564 mov ax,0x0
 	0015c570 farpush ax
 	0015c578 mov ax,0x1
 	0015c584 farpush ax
 	0015c58c setfuncargs 0x2
 	0015c594 mov ax,0x756f20
 	0015c5a0 farcall ax
 	0015c5a8 farsubsp 0x2
 	0015c5b0 jmp 0x0015c60c
		0015c60c: UNCONDITIONAL_JUMP

	[0015c5b8]
		0015c4ac: CONDITIONAL_JUMP
 	0015c5b8 sourceline 0x12ba
 	0015c5c0 mov ax,0x3e7
 	0015c5cc farpush ax
 	0015c5d4 mov ax,0x1
 	0015c5e0 farpush ax
 	0015c5e8 setfuncargs 0x2
 	0015c5f0 mov ax,0x756f20
 	0015c5fc farcall ax
 	0015c604 farsubsp 0x2
		0015c60c: FALL_THROUGH

	[0015c60c]
		0015c564: UNCONDITIONAL_JUMP
		0015c5b8: FALL_THROUGH
 	0015c60c sourceline 0x12bb
 	0015c614 mov ax,0x3e8
 	0015c620 push ax
 	0015c628 mov ax,0x0
 	0015c634 assertlte ax,0x28
 	0015c640 mul ax,0x8
 	0015c64c mov cx,ax
 	0015c658 pop ax
 	0015c660 mov bx,ax
 	0015c66c mov mar,0x6fef20
 	0015c678 add mar,cx
 	0015c684 mov ax,mar
 	0015c690 push op
 	0015c698 mov op,ax
 	0015c6a0 farpush bx
 	0015c6a8 setfuncargs 0x1
 	0015c6b0 mov ax,0x796f20
 	0015c6bc farcall ax
 	0015c6c4 farsubsp 0x1
 	0015c6cc pop op
		0015c6d4: FALL_THROUGH

	[0015c6d4]
		0015c3f4: CONDITIONAL_JUMP
		0015c60c: FALL_THROUGH
 	0015c6d4 sourceline 0x12be
 	0015c6dc mov mar,0x42ef20
 	0015c6e8 push mar
 	0015c6f0 pop mar
 	0015c6f8 memread.ptr ax
 	0015c700 push ax
 	0015c708 pop mar
 	0015c710 mov ax,mar
 	0015c71c push op
 	0015c724 mov op,ax
 	0015c72c setfuncargs 0x0
 	0015c734 mov ax,0x3d6f20
 	0015c740 farcall ax
 	0015c748 pop op
 	0015c750 push ax
 	0015c758 mov ax,0x2
 	0015c764 pop bx
 	0015c76c cmpeq bx,ax
 	0015c778 mov ax,bx
 	0015c784 jz 0x0015c7e0
		0015c7e0: CONDITIONAL_JUMP
		0015c78c: FALL_THROUGH

	[0015c78c]
		0015c6d4: FALL_THROUGH
 	0015c78c sourceline 0x12c0
 	0015c794 mov ax,0x0
 	0015c7a0 farpush ax
 	0015c7a8 mov ax,0x5
 	0015c7b4 farpush ax
 	0015c7bc setfuncargs 0x2
 	0015c7c4 mov ax,0x756f20
 	0015c7d0 farcall ax
 	0015c7d8 farsubsp 0x2
		0015c7e0: FALL_THROUGH

	[0015c7e0]
		0015c6d4: CONDITIONAL_JUMP
		0015c78c: FALL_THROUGH
 	0015c7e0 sourceline 0x12c3
 	0015c7e8 push op
 	0015c7f0 mov ax,0x426
 	0015c7fc farpush ax
 	0015c804 mov ax,0x398
 	0015c810 farpush ax
 	0015c818 mov ax,0x0
 	0015c824 farpush ax
 	0015c82c mov ax,0x3
 	0015c838 farpush ax
 	0015c840 mov ax,0x0
 	0015c84c farpush ax
 	0015c854 mov mar,0x3cef20
 	0015c860 mov ax,mar
 	0015c86c mov op,ax
 	0015c874 setfuncargs 0x5
 	0015c87c mov ax,0x536f20
 	0015c888 farcall ax
 	0015c890 farsubsp 0x5
 	0015c898 pop op
 	0015c8a0 sourceline 0x12c4
 	0015c8a8 mov mar,0x3cef20
 	0015c8b4 mov ax,mar
 	0015c8c0 push op
 	0015c8c8 mov op,ax
 	0015c8d0 setfuncargs 0x0
 	0015c8d8 mov ax,0x78ef20
 	0015c8e4 farcall ax
 	0015c8ec pop op
 	0015c8f4 mov mar,sp
 	0015c900 memwrite4 ax
 	0015c908 add sp,0x4
 	0015c914 stackptr 0x4
 	0015c91c memread4 ax
 	0015c924 push ax
 	0015c92c mov ax,0x7
 	0015c938 pop bx
 	0015c940 sub bx,ax
 	0015c94c mov ax,bx
 	0015c958 mov bx,ax
 	0015c964 mov mar,0x3cef20
 	0015c970 mov ax,mar
 	0015c97c push op
 	0015c984 mov op,ax
 	0015c98c farpush bx
 	0015c994 setfuncargs 0x1
 	0015c99c mov ax,0x526f20
 	0015c9a8 farcall ax
 	0015c9b0 farsubsp 0x1
 	0015c9b8 pop op
 	0015c9c0 sourceline 0x12c5
 	0015c9c8 mov ax,0x8ef
 	0015c9d4 mov bx,ax
 	0015c9e0 mov mar,0x7a6f20
 	0015c9ec mov ax,mar
 	0015c9f8 push op
 	0015ca00 mov op,ax
 	0015ca08 farpush bx
 	0015ca10 setfuncargs 0x1
 	0015ca18 mov ax,0x356f20
 	0015ca24 farcall ax
 	0015ca2c farsubsp 0x1
 	0015ca34 pop op
 	0015ca3c sourceline 0x12c6
 	0015ca44 mov ax,0x8e8
 	0015ca50 mov bx,ax
 	0015ca5c mov mar,0x7aef20
 	0015ca68 mov ax,mar
 	0015ca74 push op
 	0015ca7c mov op,ax
 	0015ca84 farpush bx
 	0015ca8c setfuncargs 0x1
 	0015ca94 mov ax,0x356f20
 	0015caa0 farcall ax
 	0015caa8 farsubsp 0x1
 	0015cab0 pop op
 	0015cab8 sourceline 0x12c7
 	0015cac0 mov ax,0x8ea
 	0015cacc mov bx,ax
 	0015cad8 mov mar,0x7b6f20
 	0015cae4 mov ax,mar
 	0015caf0 push op
 	0015caf8 mov op,ax
 	0015cb00 farpush bx
 	0015cb08 setfuncargs 0x1
 	0015cb10 mov ax,0x356f20
 	0015cb1c farcall ax
 	0015cb24 farsubsp 0x1
 	0015cb2c pop op
 	0015cb34 sourceline 0x12c8
 	0015cb3c mov ax,0x8e9
 	0015cb48 mov bx,ax
 	0015cb54 mov mar,0x7bef20
 	0015cb60 mov ax,mar
 	0015cb6c push op
 	0015cb74 mov op,ax
 	0015cb7c farpush bx
 	0015cb84 setfuncargs 0x1
 	0015cb8c mov ax,0x356f20
 	0015cb98 farcall ax
 	0015cba0 farsubsp 0x1
 	0015cba8 pop op
 	0015cbb0 sourceline 0x12c9
 	0015cbb8 mov ax,0x0
 	0015cbc4 mov bx,ax
 	0015cbd0 mov mar,0x30ef20
 	0015cbdc mov ax,mar
 	0015cbe8 push op
 	0015cbf0 mov op,ax
 	0015cbf8 farpush bx
 	0015cc00 setfuncargs 0x1
 	0015cc08 mov ax,0x3a6f20
 	0015cc14 farcall ax
 	0015cc1c farsubsp 0x1
 	0015cc24 pop op
 	0015cc2c sourceline 0x12ca
 	0015cc34 mov ax,0x0
 	0015cc40 mov bx,ax
 	0015cc4c mov mar,0x67ef20
 	0015cc58 mov ax,mar
 	0015cc64 push op
 	0015cc6c mov op,ax
 	0015cc74 farpush bx
 	0015cc7c setfuncargs 0x1
 	0015cc84 mov ax,0x3a6f20
 	0015cc90 farcall ax
 	0015cc98 farsubsp 0x1
 	0015cca0 pop op
 	0015cca8 sourceline 0x12cb
 	0015ccb0 mov ax,0x0
 	0015ccbc mov bx,ax
 	0015ccc8 mov mar,0x3cef20
 	0015ccd4 mov ax,mar
 	0015cce0 push op
 	0015cce8 mov op,ax
 	0015ccf0 farpush bx
 	0015ccf8 setfuncargs 0x1
 	0015cd00 mov ax,0x436f20
 	0015cd0c farcall ax
 	0015cd14 farsubsp 0x1
 	0015cd1c pop op
 	0015cd24 sourceline 0x12cc
 	0015cd2c mov ax,0x28
 	0015cd38 farpush ax
 	0015cd40 setfuncargs 0x1
 	0015cd48 mov ax,0x426f20
 	0015cd54 farcall ax
 	0015cd5c farsubsp 0x1
 	0015cd64 sourceline 0x12cd
 	0015cd6c mov ax,0x1
 	0015cd78 mov bx,ax
 	0015cd84 mov mar,0x31ef20
 	0015cd90 mov ax,mar
 	0015cd9c push op
 	0015cda4 mov op,ax
 	0015cdac farpush bx
 	0015cdb4 setfuncargs 0x1
 	0015cdbc mov ax,0x3a6f20
 	0015cdc8 farcall ax
 	0015cdd0 farsubsp 0x1
 	0015cdd8 pop op
 	0015cde0 sourceline 0x12ce
 	0015cde8 sub sp,0x4
 	0015cdf4 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0015cdfc]
		0015a64c: CONDITIONAL_JUMP
 	0015cdfc sourceline 0x12d0
 	0015ce04 mov mar,0x3cef20
 	0015ce10 mov ax,mar
 	0015ce1c push op
 	0015ce24 mov op,ax
 	0015ce2c setfuncargs 0x0
 	0015ce34 mov ax,0x89ef20
 	0015ce40 farcall ax
 	0015ce48 pop op
 	0015ce50 push ax
 	0015ce58 mov mar,0x94ef20
 	0015ce64 mov ax,mar
 	0015ce70 pop bx
 	0015ce78 cmpeq bx,ax
 	0015ce84 mov ax,bx
 	0015ce90 jz 0x0015f174
		0015f174: CONDITIONAL_JUMP
		0015ce98: FALL_THROUGH

	[0015ce98]
		0015cdfc: FALL_THROUGH
 	0015ce98 sourceline 0x12d2
 	0015cea0 mov ax,0x2bd4a5
 	0015ceac farpush ax
 	0015ceb4 setfuncargs 0x1
 	0015cebc mov ax,0x7f6f20
 	0015cec8 farcall ax
 	0015ced0 farsubsp 0x1
 	0015ced8 jz 0x0015f03c
		0015f03c: CONDITIONAL_JUMP
		0015cee0: FALL_THROUGH

	[0015cee0]
		0015ce98: FALL_THROUGH
 	0015cee0 sourceline 0x12d4
 	0015cee8 mov mar,0x3cef20
 	0015cef4 mov ax,mar
 	0015cf00 push op
 	0015cf08 mov op,ax
 	0015cf10 setfuncargs 0x0
 	0015cf18 mov ax,0x3d6f20
 	0015cf24 farcall ax
 	0015cf2c pop op
 	0015cf34 push ax
 	0015cf3c mov ax,0x1e
 	0015cf48 pop bx
 	0015cf50 cmpeq bx,ax
 	0015cf5c mov ax,bx
 	0015cf68 jz 0x0015d1b0
		0015d1b0: CONDITIONAL_JUMP
		0015cf70: FALL_THROUGH

	[0015cf70]
		0015cee0: FALL_THROUGH
 	0015cf70 mov ax,0x0
 	0015cf7c push ax
 	0015cf84 mov ax,0x4
 	0015cf90 assertlte ax,0x10
 	0015cf9c mul ax,0x8
 	0015cfa8 mov cx,ax
 	0015cfb4 pop ax
 	0015cfbc mov bx,ax
 	0015cfc8 mov mar,0x77ef20
 	0015cfd4 add mar,cx
 	0015cfe0 mov ax,mar
 	0015cfec push op
 	0015cff4 mov op,ax
 	0015cffc farpush bx
 	0015d004 setfuncargs 0x1
 	0015d00c mov ax,0x786f20
 	0015d018 farcall ax
 	0015d020 farsubsp 0x1
 	0015d028 pop op
 	0015d030 mov ax,0x0
 	0015d03c push ax
 	0015d044 mov ax,0x3
 	0015d050 assertlte ax,0x10
 	0015d05c mul ax,0x8
 	0015d068 mov cx,ax
 	0015d074 pop ax
 	0015d07c mov bx,ax
 	0015d088 mov mar,0x77ef20
 	0015d094 add mar,cx
 	0015d0a0 mov ax,mar
 	0015d0ac push op
 	0015d0b4 mov op,ax
 	0015d0bc farpush bx
 	0015d0c4 setfuncargs 0x1
 	0015d0cc mov ax,0x786f20
 	0015d0d8 farcall ax
 	0015d0e0 farsubsp 0x1
 	0015d0e8 pop op
 	0015d0f0 mov ax,0x0
 	0015d0fc push ax
 	0015d104 mov ax,0x2
 	0015d110 assertlte ax,0x10
 	0015d11c mul ax,0x8
 	0015d128 mov cx,ax
 	0015d134 pop ax
 	0015d13c mov bx,ax
 	0015d148 mov mar,0x77ef20
 	0015d154 add mar,cx
 	0015d160 mov ax,mar
 	0015d16c push op
 	0015d174 mov op,ax
 	0015d17c farpush bx
 	0015d184 setfuncargs 0x1
 	0015d18c mov ax,0x786f20
 	0015d198 farcall ax
 	0015d1a0 farsubsp 0x1
 	0015d1a8 pop op
		0015d1b0: FALL_THROUGH

	[0015d1b0]
		0015cee0: CONDITIONAL_JUMP
		0015cf70: FALL_THROUGH
 	0015d1b0 sourceline 0x12d6
 	0015d1b8 mov mar,0x3cef20
 	0015d1c4 mov ax,mar
 	0015d1d0 push op
 	0015d1d8 mov op,ax
 	0015d1e0 setfuncargs 0x0
 	0015d1e8 mov ax,0x3d6f20
 	0015d1f4 farcall ax
 	0015d1fc pop op
 	0015d204 push ax
 	0015d20c mov ax,0x1b
 	0015d218 pop bx
 	0015d220 cmpeq bx,ax
 	0015d22c mov ax,bx
 	0015d238 jz 0x0015d308
		0015d308: CONDITIONAL_JUMP
		0015d240: FALL_THROUGH

	[0015d240]
		0015d1b0: FALL_THROUGH
 	0015d240 sourceline 0x12d8
 	0015d248 mov ax,0x1
 	0015d254 push ax
 	0015d25c mov ax,0x2
 	0015d268 assertlte ax,0x28
 	0015d274 mul ax,0x8
 	0015d280 mov cx,ax
 	0015d28c pop ax
 	0015d294 mov bx,ax
 	0015d2a0 mov mar,0x6fef20
 	0015d2ac add mar,cx
 	0015d2b8 mov ax,mar
 	0015d2c4 push op
 	0015d2cc mov op,ax
 	0015d2d4 farpush bx
 	0015d2dc setfuncargs 0x1
 	0015d2e4 mov ax,0x796f20
 	0015d2f0 farcall ax
 	0015d2f8 farsubsp 0x1
 	0015d300 pop op
		0015d308: FALL_THROUGH

	[0015d308]
		0015d1b0: CONDITIONAL_JUMP
		0015d240: FALL_THROUGH
 	0015d308 sourceline 0x12db
 	0015d310 mov mar,0x3cef20
 	0015d31c mov ax,mar
 	0015d328 push op
 	0015d330 mov op,ax
 	0015d338 setfuncargs 0x0
 	0015d340 mov ax,0x3d6f20
 	0015d34c farcall ax
 	0015d354 pop op
 	0015d35c push ax
 	0015d364 mov ax,0x25
 	0015d370 pop bx
 	0015d378 cmpeq bx,ax
 	0015d384 mov ax,bx
 	0015d390 jnz 0x0015d440
		0015d440: CONDITIONAL_JUMP
		0015d398: FALL_THROUGH

	[0015d398]
		0015d308: FALL_THROUGH
 	0015d398 push ax
 	0015d3a0 mov mar,0x3cef20
 	0015d3ac mov ax,mar
 	0015d3b8 push op
 	0015d3c0 mov op,ax
 	0015d3c8 setfuncargs 0x0
 	0015d3d0 mov ax,0x3d6f20
 	0015d3dc farcall ax
 	0015d3e4 pop op
 	0015d3ec push ax
 	0015d3f4 mov ax,0x22
 	0015d400 pop bx
 	0015d408 cmpeq bx,ax
 	0015d414 mov ax,bx
 	0015d420 pop bx
 	0015d428 lor bx,ax
 	0015d434 mov ax,bx
		0015d440: FALL_THROUGH

	[0015d440]
		0015d308: CONDITIONAL_JUMP
		0015d398: FALL_THROUGH
 	0015d440 jz 0x0015d774
		0015d774: CONDITIONAL_JUMP
		0015d448: FALL_THROUGH

	[0015d448]
		0015d440: FALL_THROUGH
 	0015d448 sourceline 0x12dd
 	0015d450 mov ax,0x0
 	0015d45c mov bx,ax
 	0015d468 mov mar,0x3cef20
 	0015d474 mov ax,mar
 	0015d480 push op
 	0015d488 mov op,ax
 	0015d490 farpush bx
 	0015d498 setfuncargs 0x1
 	0015d4a0 mov ax,0x436f20
 	0015d4ac farcall ax
 	0015d4b4 farsubsp 0x1
 	0015d4bc pop op
 	0015d4c4 sourceline 0x12de
 	0015d4cc push op
 	0015d4d4 mov ax,0xdc
 	0015d4e0 farpush ax
 	0015d4e8 mov mar,0x3cef20
 	0015d4f4 mov ax,mar
 	0015d500 mov op,ax
 	0015d508 setfuncargs 0x1
 	0015d510 mov ax,0x51ef20
 	0015d51c farcall ax
 	0015d524 farsubsp 0x1
 	0015d52c pop op
 	0015d534 sourceline 0x12df
 	0015d53c mov mar,0x3cef20
 	0015d548 mov ax,mar
 	0015d554 push op
 	0015d55c mov op,ax
 	0015d564 setfuncargs 0x0
 	0015d56c mov ax,0x78ef20
 	0015d578 farcall ax
 	0015d580 pop op
 	0015d588 mov mar,0x10016c
 	0015d594 memwrite4 ax
 	0015d59c mov mar,0x10016c
 	0015d5a8 memread4 ax
 	0015d5b0 push ax
 	0015d5b8 mov ax,0x8
 	0015d5c4 pop bx
 	0015d5cc sub bx,ax
 	0015d5d8 mov ax,bx
 	0015d5e4 mov bx,ax
 	0015d5f0 mov mar,0x3cef20
 	0015d5fc mov ax,mar
 	0015d608 push op
 	0015d610 mov op,ax
 	0015d618 farpush bx
 	0015d620 setfuncargs 0x1
 	0015d628 mov ax,0x526f20
 	0015d634 farcall ax
 	0015d63c farsubsp 0x1
 	0015d644 pop op
 	0015d64c sourceline 0x12e0
 	0015d654 mov mar,0x3cef20
 	0015d660 mov ax,mar
 	0015d66c push op
 	0015d674 mov op,ax
 	0015d67c setfuncargs 0x0
 	0015d684 mov ax,0xb36f20
 	0015d690 farcall ax
 	0015d698 pop op
 	0015d6a0 mov mar,0x100170
 	0015d6ac memwrite4 ax
 	0015d6b4 mov mar,0x100170
 	0015d6c0 memread4 ax
 	0015d6c8 push ax
 	0015d6d0 mov ax,0x1
 	0015d6dc pop bx
 	0015d6e4 add bx,ax
 	0015d6f0 mov ax,bx
 	0015d6fc mov bx,ax
 	0015d708 mov mar,0x3cef20
 	0015d714 mov ax,mar
 	0015d720 push op
 	0015d728 mov op,ax
 	0015d730 farpush bx
 	0015d738 setfuncargs 0x1
 	0015d740 mov ax,0x70ef20
 	0015d74c farcall ax
 	0015d754 farsubsp 0x1
 	0015d75c pop op
 	0015d764 sourceline 0x12e1
 	0015d76c jmp 0x0015de4c
		0015de4c: UNCONDITIONAL_JUMP

	[0015d774]
		0015d440: CONDITIONAL_JUMP
 	0015d774 sourceline 0x12e2
 	0015d77c mov mar,0x3cef20
 	0015d788 mov ax,mar
 	0015d794 push op
 	0015d79c mov op,ax
 	0015d7a4 setfuncargs 0x0
 	0015d7ac mov ax,0x3d6f20
 	0015d7b8 farcall ax
 	0015d7c0 pop op
 	0015d7c8 push ax
 	0015d7d0 mov ax,0x27
 	0015d7dc pop bx
 	0015d7e4 cmpeq bx,ax
 	0015d7f0 mov ax,bx
 	0015d7fc jz 0x0015db30
		0015db30: CONDITIONAL_JUMP
		0015d804: FALL_THROUGH

	[0015d804]
		0015d774: FALL_THROUGH
 	0015d804 sourceline 0x12e4
 	0015d80c mov ax,0x0
 	0015d818 mov bx,ax
 	0015d824 mov mar,0x3cef20
 	0015d830 mov ax,mar
 	0015d83c push op
 	0015d844 mov op,ax
 	0015d84c farpush bx
 	0015d854 setfuncargs 0x1
 	0015d85c mov ax,0x436f20
 	0015d868 farcall ax
 	0015d870 farsubsp 0x1
 	0015d878 pop op
 	0015d880 sourceline 0x12e5
 	0015d888 push op
 	0015d890 mov ax,0xd8
 	0015d89c farpush ax
 	0015d8a4 mov mar,0x3cef20
 	0015d8b0 mov ax,mar
 	0015d8bc mov op,ax
 	0015d8c4 setfuncargs 0x1
 	0015d8cc mov ax,0x51ef20
 	0015d8d8 farcall ax
 	0015d8e0 farsubsp 0x1
 	0015d8e8 pop op
 	0015d8f0 sourceline 0x12e6
 	0015d8f8 mov mar,0x3cef20
 	0015d904 mov ax,mar
 	0015d910 push op
 	0015d918 mov op,ax
 	0015d920 setfuncargs 0x0
 	0015d928 mov ax,0x78ef20
 	0015d934 farcall ax
 	0015d93c pop op
 	0015d944 mov mar,0x10016c
 	0015d950 memwrite4 ax
 	0015d958 mov mar,0x10016c
 	0015d964 memread4 ax
 	0015d96c push ax
 	0015d974 mov ax,0x8
 	0015d980 pop bx
 	0015d988 sub bx,ax
 	0015d994 mov ax,bx
 	0015d9a0 mov bx,ax
 	0015d9ac mov mar,0x3cef20
 	0015d9b8 mov ax,mar
 	0015d9c4 push op
 	0015d9cc mov op,ax
 	0015d9d4 farpush bx
 	0015d9dc setfuncargs 0x1
 	0015d9e4 mov ax,0x526f20
 	0015d9f0 farcall ax
 	0015d9f8 farsubsp 0x1
 	0015da00 pop op
 	0015da08 sourceline 0x12e7
 	0015da10 mov mar,0x3cef20
 	0015da1c mov ax,mar
 	0015da28 push op
 	0015da30 mov op,ax
 	0015da38 setfuncargs 0x0
 	0015da40 mov ax,0xb36f20
 	0015da4c farcall ax
 	0015da54 pop op
 	0015da5c mov mar,0x100170
 	0015da68 memwrite4 ax
 	0015da70 mov mar,0x100170
 	0015da7c memread4 ax
 	0015da84 push ax
 	0015da8c mov ax,0x1
 	0015da98 pop bx
 	0015daa0 add bx,ax
 	0015daac mov ax,bx
 	0015dab8 mov bx,ax
 	0015dac4 mov mar,0x3cef20
 	0015dad0 mov ax,mar
 	0015dadc push op
 	0015dae4 mov op,ax
 	0015daec farpush bx
 	0015daf4 setfuncargs 0x1
 	0015dafc mov ax,0x70ef20
 	0015db08 farcall ax
 	0015db10 farsubsp 0x1
 	0015db18 pop op
 	0015db20 sourceline 0x12e8
 	0015db28 jmp 0x0015de4c
		0015de4c: UNCONDITIONAL_JUMP

	[0015db30]
		0015d774: CONDITIONAL_JUMP
 	0015db30 sourceline 0x12eb
 	0015db38 mov ax,0x0
 	0015db44 mov bx,ax
 	0015db50 mov mar,0x3cef20
 	0015db5c mov ax,mar
 	0015db68 push op
 	0015db70 mov op,ax
 	0015db78 farpush bx
 	0015db80 setfuncargs 0x1
 	0015db88 mov ax,0x436f20
 	0015db94 farcall ax
 	0015db9c farsubsp 0x1
 	0015dba4 pop op
 	0015dbac sourceline 0x12ec
 	0015dbb4 push op
 	0015dbbc mov ax,0x14
 	0015dbc8 farpush ax
 	0015dbd0 mov mar,0x3cef20
 	0015dbdc mov ax,mar
 	0015dbe8 mov op,ax
 	0015dbf0 setfuncargs 0x1
 	0015dbf8 mov ax,0x51ef20
 	0015dc04 farcall ax
 	0015dc0c farsubsp 0x1
 	0015dc14 pop op
 	0015dc1c sourceline 0x12ed
 	0015dc24 mov mar,0x3cef20
 	0015dc30 mov ax,mar
 	0015dc3c push op
 	0015dc44 mov op,ax
 	0015dc4c setfuncargs 0x0
 	0015dc54 mov ax,0x78ef20
 	0015dc60 farcall ax
 	0015dc68 pop op
 	0015dc70 mov mar,0x10016c
 	0015dc7c memwrite4 ax
 	0015dc84 mov mar,0x10016c
 	0015dc90 memread4 ax
 	0015dc98 push ax
 	0015dca0 mov ax,0x7
 	0015dcac pop bx
 	0015dcb4 sub bx,ax
 	0015dcc0 mov ax,bx
 	0015dccc mov bx,ax
 	0015dcd8 mov mar,0x3cef20
 	0015dce4 mov ax,mar
 	0015dcf0 push op
 	0015dcf8 mov op,ax
 	0015dd00 farpush bx
 	0015dd08 setfuncargs 0x1
 	0015dd10 mov ax,0x526f20
 	0015dd1c farcall ax
 	0015dd24 farsubsp 0x1
 	0015dd2c pop op
 	0015dd34 sourceline 0x12ee
 	0015dd3c mov mar,0x3cef20
 	0015dd48 mov ax,mar
 	0015dd54 push op
 	0015dd5c mov op,ax
 	0015dd64 setfuncargs 0x0
 	0015dd6c mov ax,0xb36f20
 	0015dd78 farcall ax
 	0015dd80 pop op
 	0015dd88 mov mar,0x100170
 	0015dd94 memwrite4 ax
 	0015dd9c mov mar,0x100170
 	0015dda8 memread4 ax
 	0015ddb0 push ax
 	0015ddb8 mov ax,0x1
 	0015ddc4 pop bx
 	0015ddcc add bx,ax
 	0015ddd8 mov ax,bx
 	0015dde4 mov bx,ax
 	0015ddf0 mov mar,0x3cef20
 	0015ddfc mov ax,mar
 	0015de08 push op
 	0015de10 mov op,ax
 	0015de18 farpush bx
 	0015de20 setfuncargs 0x1
 	0015de28 mov ax,0x70ef20
 	0015de34 farcall ax
 	0015de3c farsubsp 0x1
 	0015de44 pop op
		0015de4c: FALL_THROUGH

	[0015de4c]
		0015d448: UNCONDITIONAL_JUMP
		0015d804: UNCONDITIONAL_JUMP
		0015db30: FALL_THROUGH
 	0015de4c sourceline 0x12f3
 	0015de54 push op
 	0015de5c mov ax,0x426
 	0015de68 farpush ax
 	0015de70 mov ax,0x397
 	0015de7c farpush ax
 	0015de84 mov ax,0x0
 	0015de90 farpush ax
 	0015de98 mov ax,0x3
 	0015dea4 farpush ax
 	0015deac mov ax,0x0
 	0015deb8 farpush ax
 	0015dec0 mov mar,0x3cef20
 	0015decc mov ax,mar
 	0015ded8 mov op,ax
 	0015dee0 setfuncargs 0x5
 	0015dee8 mov ax,0x536f20
 	0015def4 farcall ax
 	0015defc farsubsp 0x5
 	0015df04 pop op
 	0015df0c sourceline 0x12f4
 	0015df14 push op
 	0015df1c mov ax,0x0
 	0015df28 farpush ax
 	0015df30 mov ax,0x32
 	0015df3c farpush ax
 	0015df44 mov mar,0xc86f20
 	0015df50 mov ax,mar
 	0015df5c mov op,ax
 	0015df64 setfuncargs 0x2
 	0015df6c mov ax,0x2fef20
 	0015df78 farcall ax
 	0015df80 farsubsp 0x2
 	0015df88 pop op
 	0015df90 sourceline 0x12f5
 	0015df98 mov ax,0x96
 	0015dfa4 farpush ax
 	0015dfac setfuncargs 0x1
 	0015dfb4 mov ax,0x426f20
 	0015dfc0 farcall ax
 	0015dfc8 farsubsp 0x1
 	0015dfd0 sourceline 0x12f6
 	0015dfd8 push op
 	0015dfe0 mov ax,0x427
 	0015dfec farpush ax
 	0015dff4 mov ax,0x397
 	0015e000 farpush ax
 	0015e008 mov ax,0x0
 	0015e014 farpush ax
 	0015e01c mov ax,0x3
 	0015e028 farpush ax
 	0015e030 mov ax,0x0
 	0015e03c farpush ax
 	0015e044 mov mar,0x3cef20
 	0015e050 mov ax,mar
 	0015e05c mov op,ax
 	0015e064 setfuncargs 0x5
 	0015e06c mov ax,0x536f20
 	0015e078 farcall ax
 	0015e080 farsubsp 0x5
 	0015e088 pop op
 	0015e090 sourceline 0x12f8
 	0015e098 mov mar,0x3cef20
 	0015e0a4 mov ax,mar
 	0015e0b0 push op
 	0015e0b8 mov op,ax
 	0015e0c0 setfuncargs 0x0
 	0015e0c8 mov ax,0x3d6f20
 	0015e0d4 farcall ax
 	0015e0dc pop op
 	0015e0e4 push ax
 	0015e0ec mov ax,0x1b
 	0015e0f8 pop bx
 	0015e100 cmpeq bx,ax
 	0015e10c mov ax,bx
 	0015e118 jz 0x0015e1e8
		0015e1e8: CONDITIONAL_JUMP
		0015e120: FALL_THROUGH

	[0015e120]
		0015de4c: FALL_THROUGH
 	0015e120 sourceline 0x12fa
 	0015e128 mov ax,0x0
 	0015e134 push ax
 	0015e13c mov ax,0x2
 	0015e148 assertlte ax,0x28
 	0015e154 mul ax,0x8
 	0015e160 mov cx,ax
 	0015e16c pop ax
 	0015e174 mov bx,ax
 	0015e180 mov mar,0x6fef20
 	0015e18c add mar,cx
 	0015e198 mov ax,mar
 	0015e1a4 push op
 	0015e1ac mov op,ax
 	0015e1b4 farpush bx
 	0015e1bc setfuncargs 0x1
 	0015e1c4 mov ax,0x796f20
 	0015e1d0 farcall ax
 	0015e1d8 farsubsp 0x1
 	0015e1e0 pop op
		0015e1e8: FALL_THROUGH

	[0015e1e8]
		0015de4c: CONDITIONAL_JUMP
		0015e120: FALL_THROUGH
 	0015e1e8 sourceline 0x12fd
 	0015e1f0 mov mar,0x3cef20
 	0015e1fc mov ax,mar
 	0015e208 push op
 	0015e210 mov op,ax
 	0015e218 setfuncargs 0x0
 	0015e220 mov ax,0x3d6f20
 	0015e22c farcall ax
 	0015e234 pop op
 	0015e23c push ax
 	0015e244 mov ax,0x25
 	0015e250 pop bx
 	0015e258 cmpeq bx,ax
 	0015e264 mov ax,bx
 	0015e270 jnz 0x0015e320
		0015e320: CONDITIONAL_JUMP
		0015e278: FALL_THROUGH

	[0015e278]
		0015e1e8: FALL_THROUGH
 	0015e278 push ax
 	0015e280 mov mar,0x3cef20
 	0015e28c mov ax,mar
 	0015e298 push op
 	0015e2a0 mov op,ax
 	0015e2a8 setfuncargs 0x0
 	0015e2b0 mov ax,0x3d6f20
 	0015e2bc farcall ax
 	0015e2c4 pop op
 	0015e2cc push ax
 	0015e2d4 mov ax,0x22
 	0015e2e0 pop bx
 	0015e2e8 cmpeq bx,ax
 	0015e2f4 mov ax,bx
 	0015e300 pop bx
 	0015e308 lor bx,ax
 	0015e314 mov ax,bx
		0015e320: FALL_THROUGH

	[0015e320]
		0015e1e8: CONDITIONAL_JUMP
		0015e278: FALL_THROUGH
 	0015e320 jz 0x0015e5d8
		0015e5d8: CONDITIONAL_JUMP
		0015e328: FALL_THROUGH

	[0015e328]
		0015e320: FALL_THROUGH
 	0015e328 sourceline 0x12ff
 	0015e330 push op
 	0015e338 mov ax,0xac
 	0015e344 farpush ax
 	0015e34c mov mar,0x3cef20
 	0015e358 mov ax,mar
 	0015e364 mov op,ax
 	0015e36c setfuncargs 0x1
 	0015e374 mov ax,0x51ef20
 	0015e380 farcall ax
 	0015e388 farsubsp 0x1
 	0015e390 pop op
 	0015e398 sourceline 0x1300
 	0015e3a0 mov mar,0x3cef20
 	0015e3ac mov ax,mar
 	0015e3b8 push op
 	0015e3c0 mov op,ax
 	0015e3c8 setfuncargs 0x0
 	0015e3d0 mov ax,0x78ef20
 	0015e3dc farcall ax
 	0015e3e4 pop op
 	0015e3ec mov mar,0x10016c
 	0015e3f8 memwrite4 ax
 	0015e400 mov mar,0x10016c
 	0015e40c memread4 ax
 	0015e414 push ax
 	0015e41c mov ax,0x8
 	0015e428 pop bx
 	0015e430 add bx,ax
 	0015e43c mov ax,bx
 	0015e448 mov bx,ax
 	0015e454 mov mar,0x3cef20
 	0015e460 mov ax,mar
 	0015e46c push op
 	0015e474 mov op,ax
 	0015e47c farpush bx
 	0015e484 setfuncargs 0x1
 	0015e48c mov ax,0x526f20
 	0015e498 farcall ax
 	0015e4a0 farsubsp 0x1
 	0015e4a8 pop op
 	0015e4b0 sourceline 0x1301
 	0015e4b8 mov mar,0x3cef20
 	0015e4c4 mov ax,mar
 	0015e4d0 push op
 	0015e4d8 mov op,ax
 	0015e4e0 setfuncargs 0x0
 	0015e4e8 mov ax,0xb36f20
 	0015e4f4 farcall ax
 	0015e4fc pop op
 	0015e504 mov mar,0x100170
 	0015e510 memwrite4 ax
 	0015e518 mov mar,0x100170
 	0015e524 memread4 ax
 	0015e52c push ax
 	0015e534 mov ax,0x1
 	0015e540 pop bx
 	0015e548 sub bx,ax
 	0015e554 mov ax,bx
 	0015e560 mov bx,ax
 	0015e56c mov mar,0x3cef20
 	0015e578 mov ax,mar
 	0015e584 push op
 	0015e58c mov op,ax
 	0015e594 farpush bx
 	0015e59c setfuncargs 0x1
 	0015e5a4 mov ax,0x70ef20
 	0015e5b0 farcall ax
 	0015e5b8 farsubsp 0x1
 	0015e5c0 pop op
 	0015e5c8 sourceline 0x1302
 	0015e5d0 jmp 0x0015ebb8
		0015ebb8: UNCONDITIONAL_JUMP

	[0015e5d8]
		0015e320: CONDITIONAL_JUMP
 	0015e5d8 sourceline 0x1303
 	0015e5e0 mov mar,0x3cef20
 	0015e5ec mov ax,mar
 	0015e5f8 push op
 	0015e600 mov op,ax
 	0015e608 setfuncargs 0x0
 	0015e610 mov ax,0x3d6f20
 	0015e61c farcall ax
 	0015e624 pop op
 	0015e62c push ax
 	0015e634 mov ax,0x27
 	0015e640 pop bx
 	0015e648 cmpeq bx,ax
 	0015e654 mov ax,bx
 	0015e660 jz 0x0015e918
		0015e918: CONDITIONAL_JUMP
		0015e668: FALL_THROUGH

	[0015e668]
		0015e5d8: FALL_THROUGH
 	0015e668 sourceline 0x1305
 	0015e670 push op
 	0015e678 mov ax,0xd1
 	0015e684 farpush ax
 	0015e68c mov mar,0x3cef20
 	0015e698 mov ax,mar
 	0015e6a4 mov op,ax
 	0015e6ac setfuncargs 0x1
 	0015e6b4 mov ax,0x51ef20
 	0015e6c0 farcall ax
 	0015e6c8 farsubsp 0x1
 	0015e6d0 pop op
 	0015e6d8 sourceline 0x1306
 	0015e6e0 mov mar,0x3cef20
 	0015e6ec mov ax,mar
 	0015e6f8 push op
 	0015e700 mov op,ax
 	0015e708 setfuncargs 0x0
 	0015e710 mov ax,0x78ef20
 	0015e71c farcall ax
 	0015e724 pop op
 	0015e72c mov mar,0x10016c
 	0015e738 memwrite4 ax
 	0015e740 mov mar,0x10016c
 	0015e74c memread4 ax
 	0015e754 push ax
 	0015e75c mov ax,0x8
 	0015e768 pop bx
 	0015e770 add bx,ax
 	0015e77c mov ax,bx
 	0015e788 mov bx,ax
 	0015e794 mov mar,0x3cef20
 	0015e7a0 mov ax,mar
 	0015e7ac push op
 	0015e7b4 mov op,ax
 	0015e7bc farpush bx
 	0015e7c4 setfuncargs 0x1
 	0015e7cc mov ax,0x526f20
 	0015e7d8 farcall ax
 	0015e7e0 farsubsp 0x1
 	0015e7e8 pop op
 	0015e7f0 sourceline 0x1307
 	0015e7f8 mov mar,0x3cef20
 	0015e804 mov ax,mar
 	0015e810 push op
 	0015e818 mov op,ax
 	0015e820 setfuncargs 0x0
 	0015e828 mov ax,0xb36f20
 	0015e834 farcall ax
 	0015e83c pop op
 	0015e844 mov mar,0x100170
 	0015e850 memwrite4 ax
 	0015e858 mov mar,0x100170
 	0015e864 memread4 ax
 	0015e86c push ax
 	0015e874 mov ax,0x1
 	0015e880 pop bx
 	0015e888 sub bx,ax
 	0015e894 mov ax,bx
 	0015e8a0 mov bx,ax
 	0015e8ac mov mar,0x3cef20
 	0015e8b8 mov ax,mar
 	0015e8c4 push op
 	0015e8cc mov op,ax
 	0015e8d4 farpush bx
 	0015e8dc setfuncargs 0x1
 	0015e8e4 mov ax,0x70ef20
 	0015e8f0 farcall ax
 	0015e8f8 farsubsp 0x1
 	0015e900 pop op
 	0015e908 sourceline 0x1308
 	0015e910 jmp 0x0015ebb8
		0015ebb8: UNCONDITIONAL_JUMP

	[0015e918]
		0015e5d8: CONDITIONAL_JUMP
 	0015e918 sourceline 0x130b
 	0015e920 push op
 	0015e928 mov ax,0x2
 	0015e934 farpush ax
 	0015e93c mov mar,0x3cef20
 	0015e948 mov ax,mar
 	0015e954 mov op,ax
 	0015e95c setfuncargs 0x1
 	0015e964 mov ax,0x51ef20
 	0015e970 farcall ax
 	0015e978 farsubsp 0x1
 	0015e980 pop op
 	0015e988 sourceline 0x130c
 	0015e990 mov mar,0x3cef20
 	0015e99c mov ax,mar
 	0015e9a8 push op
 	0015e9b0 mov op,ax
 	0015e9b8 setfuncargs 0x0
 	0015e9c0 mov ax,0x78ef20
 	0015e9cc farcall ax
 	0015e9d4 pop op
 	0015e9dc mov mar,0x10016c
 	0015e9e8 memwrite4 ax
 	0015e9f0 mov mar,0x10016c
 	0015e9fc memread4 ax
 	0015ea04 push ax
 	0015ea0c mov ax,0x7
 	0015ea18 pop bx
 	0015ea20 add bx,ax
 	0015ea2c mov ax,bx
 	0015ea38 mov bx,ax
 	0015ea44 mov mar,0x3cef20
 	0015ea50 mov ax,mar
 	0015ea5c push op
 	0015ea64 mov op,ax
 	0015ea6c farpush bx
 	0015ea74 setfuncargs 0x1
 	0015ea7c mov ax,0x526f20
 	0015ea88 farcall ax
 	0015ea90 farsubsp 0x1
 	0015ea98 pop op
 	0015eaa0 sourceline 0x130d
 	0015eaa8 mov mar,0x3cef20
 	0015eab4 mov ax,mar
 	0015eac0 push op
 	0015eac8 mov op,ax
 	0015ead0 setfuncargs 0x0
 	0015ead8 mov ax,0xb36f20
 	0015eae4 farcall ax
 	0015eaec pop op
 	0015eaf4 mov mar,0x100170
 	0015eb00 memwrite4 ax
 	0015eb08 mov mar,0x100170
 	0015eb14 memread4 ax
 	0015eb1c push ax
 	0015eb24 mov ax,0x1
 	0015eb30 pop bx
 	0015eb38 sub bx,ax
 	0015eb44 mov ax,bx
 	0015eb50 mov bx,ax
 	0015eb5c mov mar,0x3cef20
 	0015eb68 mov ax,mar
 	0015eb74 push op
 	0015eb7c mov op,ax
 	0015eb84 farpush bx
 	0015eb8c setfuncargs 0x1
 	0015eb94 mov ax,0x70ef20
 	0015eba0 farcall ax
 	0015eba8 farsubsp 0x1
 	0015ebb0 pop op
		0015ebb8: FALL_THROUGH

	[0015ebb8]
		0015e328: UNCONDITIONAL_JUMP
		0015e668: UNCONDITIONAL_JUMP
		0015e918: FALL_THROUGH
 	0015ebb8 sourceline 0x1310
 	0015ebc0 mov mar,0x3cef20
 	0015ebcc mov ax,mar
 	0015ebd8 push op
 	0015ebe0 mov op,ax
 	0015ebe8 setfuncargs 0x0
 	0015ebf0 mov ax,0x3d6f20
 	0015ebfc farcall ax
 	0015ec04 pop op
 	0015ec0c push ax
 	0015ec14 mov ax,0x1e
 	0015ec20 pop bx
 	0015ec28 cmpeq bx,ax
 	0015ec34 mov ax,bx
 	0015ec40 jz 0x0015ee88
		0015ee88: CONDITIONAL_JUMP
		0015ec48: FALL_THROUGH

	[0015ec48]
		0015ebb8: FALL_THROUGH
 	0015ec48 mov ax,0x1
 	0015ec54 push ax
 	0015ec5c mov ax,0x4
 	0015ec68 assertlte ax,0x10
 	0015ec74 mul ax,0x8
 	0015ec80 mov cx,ax
 	0015ec8c pop ax
 	0015ec94 mov bx,ax
 	0015eca0 mov mar,0x77ef20
 	0015ecac add mar,cx
 	0015ecb8 mov ax,mar
 	0015ecc4 push op
 	0015eccc mov op,ax
 	0015ecd4 farpush bx
 	0015ecdc setfuncargs 0x1
 	0015ece4 mov ax,0x786f20
 	0015ecf0 farcall ax
 	0015ecf8 farsubsp 0x1
 	0015ed00 pop op
 	0015ed08 mov ax,0x1
 	0015ed14 push ax
 	0015ed1c mov ax,0x3
 	0015ed28 assertlte ax,0x10
 	0015ed34 mul ax,0x8
 	0015ed40 mov cx,ax
 	0015ed4c pop ax
 	0015ed54 mov bx,ax
 	0015ed60 mov mar,0x77ef20
 	0015ed6c add mar,cx
 	0015ed78 mov ax,mar
 	0015ed84 push op
 	0015ed8c mov op,ax
 	0015ed94 farpush bx
 	0015ed9c setfuncargs 0x1
 	0015eda4 mov ax,0x786f20
 	0015edb0 farcall ax
 	0015edb8 farsubsp 0x1
 	0015edc0 pop op
 	0015edc8 mov ax,0x1
 	0015edd4 push ax
 	0015eddc mov ax,0x2
 	0015ede8 assertlte ax,0x10
 	0015edf4 mul ax,0x8
 	0015ee00 mov cx,ax
 	0015ee0c pop ax
 	0015ee14 mov bx,ax
 	0015ee20 mov mar,0x77ef20
 	0015ee2c add mar,cx
 	0015ee38 mov ax,mar
 	0015ee44 push op
 	0015ee4c mov op,ax
 	0015ee54 farpush bx
 	0015ee5c setfuncargs 0x1
 	0015ee64 mov ax,0x786f20
 	0015ee70 farcall ax
 	0015ee78 farsubsp 0x1
 	0015ee80 pop op
		0015ee88: FALL_THROUGH

	[0015ee88]
		0015ebb8: CONDITIONAL_JUMP
		0015ec48: FALL_THROUGH
 	0015ee88 sourceline 0x1312
 	0015ee90 mov ax,0x3
 	0015ee9c mov bx,ax
 	0015eea8 mov mar,0x3cef20
 	0015eeb4 mov ax,mar
 	0015eec0 push op
 	0015eec8 mov op,ax
 	0015eed0 farpush bx
 	0015eed8 setfuncargs 0x1
 	0015eee0 mov ax,0x766f20
 	0015eeec farcall ax
 	0015eef4 farsubsp 0x1
 	0015eefc pop op
 	0015ef04 sourceline 0x1313
 	0015ef0c mov ax,0x1
 	0015ef18 mov bx,ax
 	0015ef24 mov mar,0x3cef20
 	0015ef30 mov ax,mar
 	0015ef3c push op
 	0015ef44 mov op,ax
 	0015ef4c farpush bx
 	0015ef54 setfuncargs 0x1
 	0015ef5c mov ax,0x69ef20
 	0015ef68 farcall ax
 	0015ef70 farsubsp 0x1
 	0015ef78 pop op
 	0015ef80 sourceline 0x1314
 	0015ef88 push op
 	0015ef90 mov ax,0x2bd4b0
 	0015ef9c farpush ax
 	0015efa4 mov ax,0x138
 	0015efb0 farpush ax
 	0015efb8 mov ax,0x92
 	0015efc4 farpush ax
 	0015efcc mov ax,0x0
 	0015efd8 farpush ax
 	0015efe0 mov mar,0x3cef20
 	0015efec mov ax,mar
 	0015eff8 mov op,ax
 	0015f000 setfuncargs 0x4
 	0015f008 mov ax,0x6aef20
 	0015f014 farcall ax
 	0015f01c farsubsp 0x4
 	0015f024 pop op
 	0015f02c sourceline 0x1315
 	0015f034 jmp 0x0015f164
		0015f164: UNCONDITIONAL_JUMP

	[0015f03c]
		0015ce98: CONDITIONAL_JUMP
 	0015f03c sourceline 0x1318
 	0015f044 mov ax,0x1
 	0015f050 mov bx,ax
 	0015f05c mov mar,0x3cef20
 	0015f068 mov ax,mar
 	0015f074 push op
 	0015f07c mov op,ax
 	0015f084 farpush bx
 	0015f08c setfuncargs 0x1
 	0015f094 mov ax,0x69ef20
 	0015f0a0 farcall ax
 	0015f0a8 farsubsp 0x1
 	0015f0b0 pop op
 	0015f0b8 sourceline 0x1319
 	0015f0c0 push op
 	0015f0c8 mov ax,0x2bd4f0
 	0015f0d4 farpush ax
 	0015f0dc mov ax,0x138
 	0015f0e8 farpush ax
 	0015f0f0 mov ax,0x92
 	0015f0fc farpush ax
 	0015f104 mov ax,0x0
 	0015f110 farpush ax
 	0015f118 mov mar,0x3cef20
 	0015f124 mov ax,mar
 	0015f130 mov op,ax
 	0015f138 setfuncargs 0x4
 	0015f140 mov ax,0x6aef20
 	0015f14c farcall ax
 	0015f154 farsubsp 0x4
 	0015f15c pop op
		0015f164: FALL_THROUGH

	[0015f164]
		0015ee88: UNCONDITIONAL_JUMP
		0015f03c: FALL_THROUGH
 	0015f164 sourceline 0x131b
 	0015f16c jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0015f174]
		0015cdfc: CONDITIONAL_JUMP
 	0015f174 sourceline 0x131d
 	0015f17c mov mar,0x3cef20
 	0015f188 mov ax,mar
 	0015f194 push op
 	0015f19c mov op,ax
 	0015f1a4 setfuncargs 0x0
 	0015f1ac mov ax,0x89ef20
 	0015f1b8 farcall ax
 	0015f1c0 pop op
 	0015f1c8 push ax
 	0015f1d0 mov mar,0x8d6f20
 	0015f1dc mov ax,mar
 	0015f1e8 pop bx
 	0015f1f0 cmpeq bx,ax
 	0015f1fc mov ax,bx
 	0015f208 jz 0x0015f348
		0015f348: CONDITIONAL_JUMP
		0015f210: FALL_THROUGH

	[0015f210]
		0015f174: FALL_THROUGH
 	0015f210 sourceline 0x131f
 	0015f218 mov ax,0x1
 	0015f224 mov bx,ax
 	0015f230 mov mar,0x3cef20
 	0015f23c mov ax,mar
 	0015f248 push op
 	0015f250 mov op,ax
 	0015f258 farpush bx
 	0015f260 setfuncargs 0x1
 	0015f268 mov ax,0x69ef20
 	0015f274 farcall ax
 	0015f27c farsubsp 0x1
 	0015f284 pop op
 	0015f28c sourceline 0x1320
 	0015f294 push op
 	0015f29c mov ax,0x2bd507
 	0015f2a8 farpush ax
 	0015f2b0 mov ax,0x138
 	0015f2bc farpush ax
 	0015f2c4 mov ax,0x92
 	0015f2d0 farpush ax
 	0015f2d8 mov ax,0x0
 	0015f2e4 farpush ax
 	0015f2ec mov mar,0x3cef20
 	0015f2f8 mov ax,mar
 	0015f304 mov op,ax
 	0015f30c setfuncargs 0x4
 	0015f314 mov ax,0x6aef20
 	0015f320 farcall ax
 	0015f328 farsubsp 0x4
 	0015f330 pop op
 	0015f338 sourceline 0x1321
 	0015f340 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0015f348]
		0015f174: CONDITIONAL_JUMP
 	0015f348 sourceline 0x1323
 	0015f350 mov mar,0x3cef20
 	0015f35c mov ax,mar
 	0015f368 push op
 	0015f370 mov op,ax
 	0015f378 setfuncargs 0x0
 	0015f380 mov ax,0x89ef20
 	0015f38c farcall ax
 	0015f394 pop op
 	0015f39c push ax
 	0015f3a4 mov mar,0x8b6f20
 	0015f3b0 mov ax,mar
 	0015f3bc pop bx
 	0015f3c4 cmpeq bx,ax
 	0015f3d0 mov ax,bx
 	0015f3dc jz 0x0015f51c
		0015f51c: CONDITIONAL_JUMP
		0015f3e4: FALL_THROUGH

	[0015f3e4]
		0015f348: FALL_THROUGH
 	0015f3e4 sourceline 0x1325
 	0015f3ec mov ax,0x1
 	0015f3f8 mov bx,ax
 	0015f404 mov mar,0x3cef20
 	0015f410 mov ax,mar
 	0015f41c push op
 	0015f424 mov op,ax
 	0015f42c farpush bx
 	0015f434 setfuncargs 0x1
 	0015f43c mov ax,0x69ef20
 	0015f448 farcall ax
 	0015f450 farsubsp 0x1
 	0015f458 pop op
 	0015f460 sourceline 0x1326
 	0015f468 push op
 	0015f470 mov ax,0x2bd54a
 	0015f47c farpush ax
 	0015f484 mov ax,0x138
 	0015f490 farpush ax
 	0015f498 mov ax,0x92
 	0015f4a4 farpush ax
 	0015f4ac mov ax,0x0
 	0015f4b8 farpush ax
 	0015f4c0 mov mar,0x3cef20
 	0015f4cc mov ax,mar
 	0015f4d8 mov op,ax
 	0015f4e0 setfuncargs 0x4
 	0015f4e8 mov ax,0x6aef20
 	0015f4f4 farcall ax
 	0015f4fc farsubsp 0x4
 	0015f504 pop op
 	0015f50c sourceline 0x1327
 	0015f514 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0015f51c]
		0015f348: CONDITIONAL_JUMP
 	0015f51c sourceline 0x1329
 	0015f524 mov mar,0x3cef20
 	0015f530 mov ax,mar
 	0015f53c push op
 	0015f544 mov op,ax
 	0015f54c setfuncargs 0x0
 	0015f554 mov ax,0x89ef20
 	0015f560 farcall ax
 	0015f568 pop op
 	0015f570 push ax
 	0015f578 mov mar,0x98ef20
 	0015f584 mov ax,mar
 	0015f590 pop bx
 	0015f598 cmpeq bx,ax
 	0015f5a4 mov ax,bx
 	0015f5b0 jz 0x0015f6f0
		0015f6f0: CONDITIONAL_JUMP
		0015f5b8: FALL_THROUGH

	[0015f5b8]
		0015f51c: FALL_THROUGH
 	0015f5b8 sourceline 0x132b
 	0015f5c0 mov ax,0x1
 	0015f5cc mov bx,ax
 	0015f5d8 mov mar,0x3cef20
 	0015f5e4 mov ax,mar
 	0015f5f0 push op
 	0015f5f8 mov op,ax
 	0015f600 farpush bx
 	0015f608 setfuncargs 0x1
 	0015f610 mov ax,0x69ef20
 	0015f61c farcall ax
 	0015f624 farsubsp 0x1
 	0015f62c pop op
 	0015f634 sourceline 0x132c
 	0015f63c push op
 	0015f644 mov ax,0x2bd5a6
 	0015f650 farpush ax
 	0015f658 mov ax,0x138
 	0015f664 farpush ax
 	0015f66c mov ax,0x92
 	0015f678 farpush ax
 	0015f680 mov ax,0x0
 	0015f68c farpush ax
 	0015f694 mov mar,0x3cef20
 	0015f6a0 mov ax,mar
 	0015f6ac mov op,ax
 	0015f6b4 setfuncargs 0x4
 	0015f6bc mov ax,0x6aef20
 	0015f6c8 farcall ax
 	0015f6d0 farsubsp 0x4
 	0015f6d8 pop op
 	0015f6e0 sourceline 0x132d
 	0015f6e8 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0015f6f0]
		0015f51c: CONDITIONAL_JUMP
 	0015f6f0 sourceline 0x132f
 	0015f6f8 mov mar,0x3cef20
 	0015f704 mov ax,mar
 	0015f710 push op
 	0015f718 mov op,ax
 	0015f720 setfuncargs 0x0
 	0015f728 mov ax,0x89ef20
 	0015f734 farcall ax
 	0015f73c pop op
 	0015f744 push ax
 	0015f74c mov mar,0x8bef20
 	0015f758 mov ax,mar
 	0015f764 pop bx
 	0015f76c cmpeq bx,ax
 	0015f778 mov ax,bx
 	0015f784 jz 0x0015f8c4
		0015f8c4: CONDITIONAL_JUMP
		0015f78c: FALL_THROUGH

	[0015f78c]
		0015f6f0: FALL_THROUGH
 	0015f78c sourceline 0x1331
 	0015f794 mov ax,0x1
 	0015f7a0 mov bx,ax
 	0015f7ac mov mar,0x3cef20
 	0015f7b8 mov ax,mar
 	0015f7c4 push op
 	0015f7cc mov op,ax
 	0015f7d4 farpush bx
 	0015f7dc setfuncargs 0x1
 	0015f7e4 mov ax,0x69ef20
 	0015f7f0 farcall ax
 	0015f7f8 farsubsp 0x1
 	0015f800 pop op
 	0015f808 sourceline 0x1332
 	0015f810 push op
 	0015f818 mov ax,0x2bd5e8
 	0015f824 farpush ax
 	0015f82c mov ax,0x138
 	0015f838 farpush ax
 	0015f840 mov ax,0x92
 	0015f84c farpush ax
 	0015f854 mov ax,0x0
 	0015f860 farpush ax
 	0015f868 mov mar,0x3cef20
 	0015f874 mov ax,mar
 	0015f880 mov op,ax
 	0015f888 setfuncargs 0x4
 	0015f890 mov ax,0x6aef20
 	0015f89c farcall ax
 	0015f8a4 farsubsp 0x4
 	0015f8ac pop op
 	0015f8b4 sourceline 0x1333
 	0015f8bc jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0015f8c4]
		0015f6f0: CONDITIONAL_JUMP
 	0015f8c4 sourceline 0x1335
 	0015f8cc mov mar,0x3cef20
 	0015f8d8 mov ax,mar
 	0015f8e4 push op
 	0015f8ec mov op,ax
 	0015f8f4 setfuncargs 0x0
 	0015f8fc mov ax,0x89ef20
 	0015f908 farcall ax
 	0015f910 pop op
 	0015f918 push ax
 	0015f920 mov mar,0x8c6f20
 	0015f92c mov ax,mar
 	0015f938 pop bx
 	0015f940 cmpeq bx,ax
 	0015f94c mov ax,bx
 	0015f958 jz 0x0015fa98
		0015fa98: CONDITIONAL_JUMP
		0015f960: FALL_THROUGH

	[0015f960]
		0015f8c4: FALL_THROUGH
 	0015f960 sourceline 0x1337
 	0015f968 mov ax,0x1
 	0015f974 mov bx,ax
 	0015f980 mov mar,0x3cef20
 	0015f98c mov ax,mar
 	0015f998 push op
 	0015f9a0 mov op,ax
 	0015f9a8 farpush bx
 	0015f9b0 setfuncargs 0x1
 	0015f9b8 mov ax,0x69ef20
 	0015f9c4 farcall ax
 	0015f9cc farsubsp 0x1
 	0015f9d4 pop op
 	0015f9dc sourceline 0x1338
 	0015f9e4 push op
 	0015f9ec mov ax,0x2bd60f
 	0015f9f8 farpush ax
 	0015fa00 mov ax,0x138
 	0015fa0c farpush ax
 	0015fa14 mov ax,0x92
 	0015fa20 farpush ax
 	0015fa28 mov ax,0x0
 	0015fa34 farpush ax
 	0015fa3c mov mar,0x3cef20
 	0015fa48 mov ax,mar
 	0015fa54 mov op,ax
 	0015fa5c setfuncargs 0x4
 	0015fa64 mov ax,0x6aef20
 	0015fa70 farcall ax
 	0015fa78 farsubsp 0x4
 	0015fa80 pop op
 	0015fa88 sourceline 0x1339
 	0015fa90 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0015fa98]
		0015f8c4: CONDITIONAL_JUMP
 	0015fa98 sourceline 0x133b
 	0015faa0 mov mar,0x3cef20
 	0015faac mov ax,mar
 	0015fab8 push op
 	0015fac0 mov op,ax
 	0015fac8 setfuncargs 0x0
 	0015fad0 mov ax,0x89ef20
 	0015fadc farcall ax
 	0015fae4 pop op
 	0015faec push ax
 	0015faf4 mov mar,0x8a6f20
 	0015fb00 mov ax,mar
 	0015fb0c pop bx
 	0015fb14 cmpeq bx,ax
 	0015fb20 mov ax,bx
 	0015fb2c jz 0x0015fc6c
		0015fc6c: CONDITIONAL_JUMP
		0015fb34: FALL_THROUGH

	[0015fb34]
		0015fa98: FALL_THROUGH
 	0015fb34 sourceline 0x133d
 	0015fb3c mov ax,0x1
 	0015fb48 mov bx,ax
 	0015fb54 mov mar,0x3cef20
 	0015fb60 mov ax,mar
 	0015fb6c push op
 	0015fb74 mov op,ax
 	0015fb7c farpush bx
 	0015fb84 setfuncargs 0x1
 	0015fb8c mov ax,0x69ef20
 	0015fb98 farcall ax
 	0015fba0 farsubsp 0x1
 	0015fba8 pop op
 	0015fbb0 sourceline 0x133e
 	0015fbb8 push op
 	0015fbc0 mov ax,0x2bd640
 	0015fbcc farpush ax
 	0015fbd4 mov ax,0x138
 	0015fbe0 farpush ax
 	0015fbe8 mov ax,0x92
 	0015fbf4 farpush ax
 	0015fbfc mov ax,0x0
 	0015fc08 farpush ax
 	0015fc10 mov mar,0x3cef20
 	0015fc1c mov ax,mar
 	0015fc28 mov op,ax
 	0015fc30 setfuncargs 0x4
 	0015fc38 mov ax,0x6aef20
 	0015fc44 farcall ax
 	0015fc4c farsubsp 0x4
 	0015fc54 pop op
 	0015fc5c sourceline 0x133f
 	0015fc64 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0015fc6c]
		0015fa98: CONDITIONAL_JUMP
 	0015fc6c sourceline 0x1341
 	0015fc74 mov mar,0x3cef20
 	0015fc80 mov ax,mar
 	0015fc8c push op
 	0015fc94 mov op,ax
 	0015fc9c setfuncargs 0x0
 	0015fca4 mov ax,0x89ef20
 	0015fcb0 farcall ax
 	0015fcb8 pop op
 	0015fcc0 push ax
 	0015fcc8 mov mar,0x7cef20
 	0015fcd4 mov ax,mar
 	0015fce0 pop bx
 	0015fce8 cmpeq bx,ax
 	0015fcf4 mov ax,bx
 	0015fd00 jz 0x0015fe40
		0015fe40: CONDITIONAL_JUMP
		0015fd08: FALL_THROUGH

	[0015fd08]
		0015fc6c: FALL_THROUGH
 	0015fd08 sourceline 0x1343
 	0015fd10 mov ax,0x1
 	0015fd1c mov bx,ax
 	0015fd28 mov mar,0x3cef20
 	0015fd34 mov ax,mar
 	0015fd40 push op
 	0015fd48 mov op,ax
 	0015fd50 farpush bx
 	0015fd58 setfuncargs 0x1
 	0015fd60 mov ax,0x69ef20
 	0015fd6c farcall ax
 	0015fd74 farsubsp 0x1
 	0015fd7c pop op
 	0015fd84 sourceline 0x1344
 	0015fd8c push op
 	0015fd94 mov ax,0x2bd666
 	0015fda0 farpush ax
 	0015fda8 mov ax,0x138
 	0015fdb4 farpush ax
 	0015fdbc mov ax,0x92
 	0015fdc8 farpush ax
 	0015fdd0 mov ax,0x0
 	0015fddc farpush ax
 	0015fde4 mov mar,0x3cef20
 	0015fdf0 mov ax,mar
 	0015fdfc mov op,ax
 	0015fe04 setfuncargs 0x4
 	0015fe0c mov ax,0x6aef20
 	0015fe18 farcall ax
 	0015fe20 farsubsp 0x4
 	0015fe28 pop op
 	0015fe30 sourceline 0x1345
 	0015fe38 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0015fe40]
		0015fc6c: CONDITIONAL_JUMP
 	0015fe40 sourceline 0x1347
 	0015fe48 mov mar,0x3cef20
 	0015fe54 mov ax,mar
 	0015fe60 push op
 	0015fe68 mov op,ax
 	0015fe70 setfuncargs 0x0
 	0015fe78 mov ax,0x89ef20
 	0015fe84 farcall ax
 	0015fe8c pop op
 	0015fe94 push ax
 	0015fe9c mov mar,0x7def20
 	0015fea8 mov ax,mar
 	0015feb4 pop bx
 	0015febc cmpeq bx,ax
 	0015fec8 mov ax,bx
 	0015fed4 jz 0x00160014
		00160014: CONDITIONAL_JUMP
		0015fedc: FALL_THROUGH

	[0015fedc]
		0015fe40: FALL_THROUGH
 	0015fedc sourceline 0x1349
 	0015fee4 mov ax,0x1
 	0015fef0 mov bx,ax
 	0015fefc mov mar,0x3cef20
 	0015ff08 mov ax,mar
 	0015ff14 push op
 	0015ff1c mov op,ax
 	0015ff24 farpush bx
 	0015ff2c setfuncargs 0x1
 	0015ff34 mov ax,0x69ef20
 	0015ff40 farcall ax
 	0015ff48 farsubsp 0x1
 	0015ff50 pop op
 	0015ff58 sourceline 0x134a
 	0015ff60 push op
 	0015ff68 mov ax,0x2bd68d
 	0015ff74 farpush ax
 	0015ff7c mov ax,0x138
 	0015ff88 farpush ax
 	0015ff90 mov ax,0x92
 	0015ff9c farpush ax
 	0015ffa4 mov ax,0x0
 	0015ffb0 farpush ax
 	0015ffb8 mov mar,0x3cef20
 	0015ffc4 mov ax,mar
 	0015ffd0 mov op,ax
 	0015ffd8 setfuncargs 0x4
 	0015ffe0 mov ax,0x6aef20
 	0015ffec farcall ax
 	0015fff4 farsubsp 0x4
 	0015fffc pop op
 	00160004 sourceline 0x134b
 	0016000c jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00160014]
		0015fe40: CONDITIONAL_JUMP
 	00160014 sourceline 0x134d
 	0016001c mov mar,0x3cef20
 	00160028 mov ax,mar
 	00160034 push op
 	0016003c mov op,ax
 	00160044 setfuncargs 0x0
 	0016004c mov ax,0x89ef20
 	00160058 farcall ax
 	00160060 pop op
 	00160068 push ax
 	00160070 mov mar,0x8def20
 	0016007c mov ax,mar
 	00160088 pop bx
 	00160090 cmpeq bx,ax
 	0016009c mov ax,bx
 	001600a8 jz 0x001601e8
		001601e8: CONDITIONAL_JUMP
		001600b0: FALL_THROUGH

	[001600b0]
		00160014: FALL_THROUGH
 	001600b0 sourceline 0x134f
 	001600b8 mov ax,0x1
 	001600c4 mov bx,ax
 	001600d0 mov mar,0x3cef20
 	001600dc mov ax,mar
 	001600e8 push op
 	001600f0 mov op,ax
 	001600f8 farpush bx
 	00160100 setfuncargs 0x1
 	00160108 mov ax,0x69ef20
 	00160114 farcall ax
 	0016011c farsubsp 0x1
 	00160124 pop op
 	0016012c sourceline 0x1350
 	00160134 push op
 	0016013c mov ax,0x2bd6cc
 	00160148 farpush ax
 	00160150 mov ax,0x138
 	0016015c farpush ax
 	00160164 mov ax,0x92
 	00160170 farpush ax
 	00160178 mov ax,0x0
 	00160184 farpush ax
 	0016018c mov mar,0x3cef20
 	00160198 mov ax,mar
 	001601a4 mov op,ax
 	001601ac setfuncargs 0x4
 	001601b4 mov ax,0x6aef20
 	001601c0 farcall ax
 	001601c8 farsubsp 0x4
 	001601d0 pop op
 	001601d8 sourceline 0x1351
 	001601e0 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[001601e8]
		00160014: CONDITIONAL_JUMP
 	001601e8 sourceline 0x1353
 	001601f0 mov mar,0x3cef20
 	001601fc mov ax,mar
 	00160208 push op
 	00160210 mov op,ax
 	00160218 setfuncargs 0x0
 	00160220 mov ax,0x89ef20
 	0016022c farcall ax
 	00160234 pop op
 	0016023c push ax
 	00160244 mov mar,0x9eef20
 	00160250 mov ax,mar
 	0016025c pop bx
 	00160264 cmpeq bx,ax
 	00160270 mov ax,bx
 	0016027c jz 0x001603bc
		001603bc: CONDITIONAL_JUMP
		00160284: FALL_THROUGH

	[00160284]
		001601e8: FALL_THROUGH
 	00160284 sourceline 0x1355
 	0016028c mov ax,0x1
 	00160298 mov bx,ax
 	001602a4 mov mar,0x3cef20
 	001602b0 mov ax,mar
 	001602bc push op
 	001602c4 mov op,ax
 	001602cc farpush bx
 	001602d4 setfuncargs 0x1
 	001602dc mov ax,0x69ef20
 	001602e8 farcall ax
 	001602f0 farsubsp 0x1
 	001602f8 pop op
 	00160300 sourceline 0x1356
 	00160308 push op
 	00160310 mov ax,0x2bd6f2
 	0016031c farpush ax
 	00160324 mov ax,0x138
 	00160330 farpush ax
 	00160338 mov ax,0x92
 	00160344 farpush ax
 	0016034c mov ax,0x0
 	00160358 farpush ax
 	00160360 mov mar,0x3cef20
 	0016036c mov ax,mar
 	00160378 mov op,ax
 	00160380 setfuncargs 0x4
 	00160388 mov ax,0x6aef20
 	00160394 farcall ax
 	0016039c farsubsp 0x4
 	001603a4 pop op
 	001603ac sourceline 0x1357
 	001603b4 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[001603bc]
		001601e8: CONDITIONAL_JUMP
 	001603bc sourceline 0x1359
 	001603c4 mov mar,0x3cef20
 	001603d0 mov ax,mar
 	001603dc push op
 	001603e4 mov op,ax
 	001603ec setfuncargs 0x0
 	001603f4 mov ax,0x89ef20
 	00160400 farcall ax
 	00160408 pop op
 	00160410 push ax
 	00160418 mov mar,0x99ef20
 	00160424 mov ax,mar
 	00160430 pop bx
 	00160438 cmpeq bx,ax
 	00160444 mov ax,bx
 	00160450 jz 0x00160590
		00160590: CONDITIONAL_JUMP
		00160458: FALL_THROUGH

	[00160458]
		001603bc: FALL_THROUGH
 	00160458 sourceline 0x135b
 	00160460 mov ax,0x1
 	0016046c mov bx,ax
 	00160478 mov mar,0x3cef20
 	00160484 mov ax,mar
 	00160490 push op
 	00160498 mov op,ax
 	001604a0 farpush bx
 	001604a8 setfuncargs 0x1
 	001604b0 mov ax,0x69ef20
 	001604bc farcall ax
 	001604c4 farsubsp 0x1
 	001604cc pop op
 	001604d4 sourceline 0x135c
 	001604dc push op
 	001604e4 mov ax,0x2bd71e
 	001604f0 farpush ax
 	001604f8 mov ax,0x138
 	00160504 farpush ax
 	0016050c mov ax,0x92
 	00160518 farpush ax
 	00160520 mov ax,0x0
 	0016052c farpush ax
 	00160534 mov mar,0x3cef20
 	00160540 mov ax,mar
 	0016054c mov op,ax
 	00160554 setfuncargs 0x4
 	0016055c mov ax,0x6aef20
 	00160568 farcall ax
 	00160570 farsubsp 0x4
 	00160578 pop op
 	00160580 sourceline 0x135d
 	00160588 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00160590]
		001603bc: CONDITIONAL_JUMP
 	00160590 sourceline 0x135f
 	00160598 mov mar,0x3cef20
 	001605a4 mov ax,mar
 	001605b0 push op
 	001605b8 mov op,ax
 	001605c0 setfuncargs 0x0
 	001605c8 mov ax,0x89ef20
 	001605d4 farcall ax
 	001605dc pop op
 	001605e4 push ax
 	001605ec mov mar,0x8aef20
 	001605f8 mov ax,mar
 	00160604 pop bx
 	0016060c cmpeq bx,ax
 	00160618 mov ax,bx
 	00160624 jz 0x00160764
		00160764: CONDITIONAL_JUMP
		0016062c: FALL_THROUGH

	[0016062c]
		00160590: FALL_THROUGH
 	0016062c sourceline 0x1361
 	00160634 mov ax,0x1
 	00160640 mov bx,ax
 	0016064c mov mar,0x3cef20
 	00160658 mov ax,mar
 	00160664 push op
 	0016066c mov op,ax
 	00160674 farpush bx
 	0016067c setfuncargs 0x1
 	00160684 mov ax,0x69ef20
 	00160690 farcall ax
 	00160698 farsubsp 0x1
 	001606a0 pop op
 	001606a8 sourceline 0x1362
 	001606b0 push op
 	001606b8 mov ax,0x2bd740
 	001606c4 farpush ax
 	001606cc mov ax,0x138
 	001606d8 farpush ax
 	001606e0 mov ax,0x92
 	001606ec farpush ax
 	001606f4 mov ax,0x0
 	00160700 farpush ax
 	00160708 mov mar,0x3cef20
 	00160714 mov ax,mar
 	00160720 mov op,ax
 	00160728 setfuncargs 0x4
 	00160730 mov ax,0x6aef20
 	0016073c farcall ax
 	00160744 farsubsp 0x4
 	0016074c pop op
 	00160754 sourceline 0x1363
 	0016075c jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00160764]
		00160590: CONDITIONAL_JUMP
 	00160764 sourceline 0x1365
 	0016076c mov mar,0x3cef20
 	00160778 mov ax,mar
 	00160784 push op
 	0016078c mov op,ax
 	00160794 setfuncargs 0x0
 	0016079c mov ax,0x89ef20
 	001607a8 farcall ax
 	001607b0 pop op
 	001607b8 push ax
 	001607c0 mov mar,0x9c6f20
 	001607cc mov ax,mar
 	001607d8 pop bx
 	001607e0 cmpeq bx,ax
 	001607ec mov ax,bx
 	001607f8 jnz 0x001608b4
		001608b4: CONDITIONAL_JUMP
		00160800: FALL_THROUGH

	[00160800]
		00160764: FALL_THROUGH
 	00160800 push ax
 	00160808 mov mar,0x3cef20
 	00160814 mov ax,mar
 	00160820 push op
 	00160828 mov op,ax
 	00160830 setfuncargs 0x0
 	00160838 mov ax,0x89ef20
 	00160844 farcall ax
 	0016084c pop op
 	00160854 push ax
 	0016085c mov mar,0x9cef20
 	00160868 mov ax,mar
 	00160874 pop bx
 	0016087c cmpeq bx,ax
 	00160888 mov ax,bx
 	00160894 pop bx
 	0016089c lor bx,ax
 	001608a8 mov ax,bx
		001608b4: FALL_THROUGH

	[001608b4]
		00160764: CONDITIONAL_JUMP
		00160800: FALL_THROUGH
 	001608b4 jz 0x001609f4
		001609f4: CONDITIONAL_JUMP
		001608bc: FALL_THROUGH

	[001608bc]
		001608b4: FALL_THROUGH
 	001608bc sourceline 0x1367
 	001608c4 mov ax,0x1
 	001608d0 mov bx,ax
 	001608dc mov mar,0x3cef20
 	001608e8 mov ax,mar
 	001608f4 push op
 	001608fc mov op,ax
 	00160904 farpush bx
 	0016090c setfuncargs 0x1
 	00160914 mov ax,0x69ef20
 	00160920 farcall ax
 	00160928 farsubsp 0x1
 	00160930 pop op
 	00160938 sourceline 0x1368
 	00160940 push op
 	00160948 mov ax,0x2bd7a5
 	00160954 farpush ax
 	0016095c mov ax,0x138
 	00160968 farpush ax
 	00160970 mov ax,0x92
 	0016097c farpush ax
 	00160984 mov ax,0x0
 	00160990 farpush ax
 	00160998 mov mar,0x3cef20
 	001609a4 mov ax,mar
 	001609b0 mov op,ax
 	001609b8 setfuncargs 0x4
 	001609c0 mov ax,0x6aef20
 	001609cc farcall ax
 	001609d4 farsubsp 0x4
 	001609dc pop op
 	001609e4 sourceline 0x1369
 	001609ec jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[001609f4]
		001608b4: CONDITIONAL_JUMP
 	001609f4 sourceline 0x136b
 	001609fc mov mar,0x3cef20
 	00160a08 mov ax,mar
 	00160a14 push op
 	00160a1c mov op,ax
 	00160a24 setfuncargs 0x0
 	00160a2c mov ax,0x89ef20
 	00160a38 farcall ax
 	00160a40 pop op
 	00160a48 push ax
 	00160a50 mov mar,0x8e6f20
 	00160a5c mov ax,mar
 	00160a68 pop bx
 	00160a70 cmpeq bx,ax
 	00160a7c mov ax,bx
 	00160a88 jz 0x00160bc8
		00160bc8: CONDITIONAL_JUMP
		00160a90: FALL_THROUGH

	[00160a90]
		001609f4: FALL_THROUGH
 	00160a90 sourceline 0x136d
 	00160a98 mov ax,0x1
 	00160aa4 mov bx,ax
 	00160ab0 mov mar,0x3cef20
 	00160abc mov ax,mar
 	00160ac8 push op
 	00160ad0 mov op,ax
 	00160ad8 farpush bx
 	00160ae0 setfuncargs 0x1
 	00160ae8 mov ax,0x69ef20
 	00160af4 farcall ax
 	00160afc farsubsp 0x1
 	00160b04 pop op
 	00160b0c sourceline 0x136e
 	00160b14 push op
 	00160b1c mov ax,0x2bd7da
 	00160b28 farpush ax
 	00160b30 mov ax,0x138
 	00160b3c farpush ax
 	00160b44 mov ax,0x92
 	00160b50 farpush ax
 	00160b58 mov ax,0x0
 	00160b64 farpush ax
 	00160b6c mov mar,0x3cef20
 	00160b78 mov ax,mar
 	00160b84 mov op,ax
 	00160b8c setfuncargs 0x4
 	00160b94 mov ax,0x6aef20
 	00160ba0 farcall ax
 	00160ba8 farsubsp 0x4
 	00160bb0 pop op
 	00160bb8 sourceline 0x136f
 	00160bc0 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00160bc8]
		001609f4: CONDITIONAL_JUMP
 	00160bc8 sourceline 0x1371
 	00160bd0 mov mar,0x3cef20
 	00160bdc mov ax,mar
 	00160be8 push op
 	00160bf0 mov op,ax
 	00160bf8 setfuncargs 0x0
 	00160c00 mov ax,0x89ef20
 	00160c0c farcall ax
 	00160c14 pop op
 	00160c1c push ax
 	00160c24 mov mar,0x9d6f20
 	00160c30 mov ax,mar
 	00160c3c pop bx
 	00160c44 cmpeq bx,ax
 	00160c50 mov ax,bx
 	00160c5c jz 0x00160d9c
		00160d9c: CONDITIONAL_JUMP
		00160c64: FALL_THROUGH

	[00160c64]
		00160bc8: FALL_THROUGH
 	00160c64 sourceline 0x1373
 	00160c6c mov ax,0x1
 	00160c78 mov bx,ax
 	00160c84 mov mar,0x3cef20
 	00160c90 mov ax,mar
 	00160c9c push op
 	00160ca4 mov op,ax
 	00160cac farpush bx
 	00160cb4 setfuncargs 0x1
 	00160cbc mov ax,0x69ef20
 	00160cc8 farcall ax
 	00160cd0 farsubsp 0x1
 	00160cd8 pop op
 	00160ce0 sourceline 0x1374
 	00160ce8 push op
 	00160cf0 mov ax,0x2bd80d
 	00160cfc farpush ax
 	00160d04 mov ax,0x138
 	00160d10 farpush ax
 	00160d18 mov ax,0x92
 	00160d24 farpush ax
 	00160d2c mov ax,0x0
 	00160d38 farpush ax
 	00160d40 mov mar,0x3cef20
 	00160d4c mov ax,mar
 	00160d58 mov op,ax
 	00160d60 setfuncargs 0x4
 	00160d68 mov ax,0x6aef20
 	00160d74 farcall ax
 	00160d7c farsubsp 0x4
 	00160d84 pop op
 	00160d8c sourceline 0x1375
 	00160d94 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00160d9c]
		00160bc8: CONDITIONAL_JUMP
 	00160d9c sourceline 0x1377
 	00160da4 mov mar,0x3cef20
 	00160db0 mov ax,mar
 	00160dbc push op
 	00160dc4 mov op,ax
 	00160dcc setfuncargs 0x0
 	00160dd4 mov ax,0x89ef20
 	00160de0 farcall ax
 	00160de8 pop op
 	00160df0 push ax
 	00160df8 mov mar,0xa0ef20
 	00160e04 mov ax,mar
 	00160e10 pop bx
 	00160e18 cmpeq bx,ax
 	00160e24 mov ax,bx
 	00160e30 jz 0x00160f70
		00160f70: CONDITIONAL_JUMP
		00160e38: FALL_THROUGH

	[00160e38]
		00160d9c: FALL_THROUGH
 	00160e38 sourceline 0x1379
 	00160e40 mov ax,0x1
 	00160e4c mov bx,ax
 	00160e58 mov mar,0x3cef20
 	00160e64 mov ax,mar
 	00160e70 push op
 	00160e78 mov op,ax
 	00160e80 farpush bx
 	00160e88 setfuncargs 0x1
 	00160e90 mov ax,0x69ef20
 	00160e9c farcall ax
 	00160ea4 farsubsp 0x1
 	00160eac pop op
 	00160eb4 sourceline 0x137a
 	00160ebc push op
 	00160ec4 mov ax,0x2bd860
 	00160ed0 farpush ax
 	00160ed8 mov ax,0x138
 	00160ee4 farpush ax
 	00160eec mov ax,0x92
 	00160ef8 farpush ax
 	00160f00 mov ax,0x0
 	00160f0c farpush ax
 	00160f14 mov mar,0x3cef20
 	00160f20 mov ax,mar
 	00160f2c mov op,ax
 	00160f34 setfuncargs 0x4
 	00160f3c mov ax,0x6aef20
 	00160f48 farcall ax
 	00160f50 farsubsp 0x4
 	00160f58 pop op
 	00160f60 sourceline 0x137b
 	00160f68 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00160f70]
		00160d9c: CONDITIONAL_JUMP
 	00160f70 sourceline 0x137d
 	00160f78 mov mar,0x3cef20
 	00160f84 mov ax,mar
 	00160f90 push op
 	00160f98 mov op,ax
 	00160fa0 setfuncargs 0x0
 	00160fa8 mov ax,0x89ef20
 	00160fb4 farcall ax
 	00160fbc pop op
 	00160fc4 push ax
 	00160fcc mov mar,0x8eef20
 	00160fd8 mov ax,mar
 	00160fe4 pop bx
 	00160fec cmpeq bx,ax
 	00160ff8 mov ax,bx
 	00161004 jz 0x00161144
		00161144: CONDITIONAL_JUMP
		0016100c: FALL_THROUGH

	[0016100c]
		00160f70: FALL_THROUGH
 	0016100c sourceline 0x137f
 	00161014 mov ax,0x1
 	00161020 mov bx,ax
 	0016102c mov mar,0x3cef20
 	00161038 mov ax,mar
 	00161044 push op
 	0016104c mov op,ax
 	00161054 farpush bx
 	0016105c setfuncargs 0x1
 	00161064 mov ax,0x69ef20
 	00161070 farcall ax
 	00161078 farsubsp 0x1
 	00161080 pop op
 	00161088 sourceline 0x1380
 	00161090 push op
 	00161098 mov ax,0x2bd89d
 	001610a4 farpush ax
 	001610ac mov ax,0x138
 	001610b8 farpush ax
 	001610c0 mov ax,0x92
 	001610cc farpush ax
 	001610d4 mov ax,0x0
 	001610e0 farpush ax
 	001610e8 mov mar,0x3cef20
 	001610f4 mov ax,mar
 	00161100 mov op,ax
 	00161108 setfuncargs 0x4
 	00161110 mov ax,0x6aef20
 	0016111c farcall ax
 	00161124 farsubsp 0x4
 	0016112c pop op
 	00161134 sourceline 0x1381
 	0016113c jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00161144]
		00160f70: CONDITIONAL_JUMP
 	00161144 sourceline 0x1383
 	0016114c mov mar,0x3cef20
 	00161158 mov ax,mar
 	00161164 push op
 	0016116c mov op,ax
 	00161174 setfuncargs 0x0
 	0016117c mov ax,0x89ef20
 	00161188 farcall ax
 	00161190 pop op
 	00161198 push ax
 	001611a0 mov mar,0x9def20
 	001611ac mov ax,mar
 	001611b8 pop bx
 	001611c0 cmpeq bx,ax
 	001611cc mov ax,bx
 	001611d8 jz 0x00161318
		00161318: CONDITIONAL_JUMP
		001611e0: FALL_THROUGH

	[001611e0]
		00161144: FALL_THROUGH
 	001611e0 sourceline 0x1385
 	001611e8 mov ax,0x1
 	001611f4 mov bx,ax
 	00161200 mov mar,0x3cef20
 	0016120c mov ax,mar
 	00161218 push op
 	00161220 mov op,ax
 	00161228 farpush bx
 	00161230 setfuncargs 0x1
 	00161238 mov ax,0x69ef20
 	00161244 farcall ax
 	0016124c farsubsp 0x1
 	00161254 pop op
 	0016125c sourceline 0x1386
 	00161264 push op
 	0016126c mov ax,0x2bd905
 	00161278 farpush ax
 	00161280 mov ax,0x138
 	0016128c farpush ax
 	00161294 mov ax,0x92
 	001612a0 farpush ax
 	001612a8 mov ax,0x0
 	001612b4 farpush ax
 	001612bc mov mar,0x3cef20
 	001612c8 mov ax,mar
 	001612d4 mov op,ax
 	001612dc setfuncargs 0x4
 	001612e4 mov ax,0x6aef20
 	001612f0 farcall ax
 	001612f8 farsubsp 0x4
 	00161300 pop op
 	00161308 sourceline 0x1387
 	00161310 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00161318]
		00161144: CONDITIONAL_JUMP
 	00161318 sourceline 0x1389
 	00161320 mov mar,0x3cef20
 	0016132c mov ax,mar
 	00161338 push op
 	00161340 mov op,ax
 	00161348 setfuncargs 0x0
 	00161350 mov ax,0x89ef20
 	0016135c farcall ax
 	00161364 pop op
 	0016136c push ax
 	00161374 mov mar,0x9aef20
 	00161380 mov ax,mar
 	0016138c pop bx
 	00161394 cmpeq bx,ax
 	001613a0 mov ax,bx
 	001613ac jz 0x001614ec
		001614ec: CONDITIONAL_JUMP
		001613b4: FALL_THROUGH

	[001613b4]
		00161318: FALL_THROUGH
 	001613b4 sourceline 0x138b
 	001613bc mov ax,0x1
 	001613c8 mov bx,ax
 	001613d4 mov mar,0x3cef20
 	001613e0 mov ax,mar
 	001613ec push op
 	001613f4 mov op,ax
 	001613fc farpush bx
 	00161404 setfuncargs 0x1
 	0016140c mov ax,0x69ef20
 	00161418 farcall ax
 	00161420 farsubsp 0x1
 	00161428 pop op
 	00161430 sourceline 0x138c
 	00161438 push op
 	00161440 mov ax,0x2bd926
 	0016144c farpush ax
 	00161454 mov ax,0x138
 	00161460 farpush ax
 	00161468 mov ax,0x92
 	00161474 farpush ax
 	0016147c mov ax,0x0
 	00161488 farpush ax
 	00161490 mov mar,0x3cef20
 	0016149c mov ax,mar
 	001614a8 mov op,ax
 	001614b0 setfuncargs 0x4
 	001614b8 mov ax,0x6aef20
 	001614c4 farcall ax
 	001614cc farsubsp 0x4
 	001614d4 pop op
 	001614dc sourceline 0x138d
 	001614e4 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[001614ec]
		00161318: CONDITIONAL_JUMP
 	001614ec sourceline 0x138f
 	001614f4 mov mar,0x3cef20
 	00161500 mov ax,mar
 	0016150c push op
 	00161514 mov op,ax
 	0016151c setfuncargs 0x0
 	00161524 mov ax,0x89ef20
 	00161530 farcall ax
 	00161538 pop op
 	00161540 push ax
 	00161548 mov mar,0xa06f20
 	00161554 mov ax,mar
 	00161560 pop bx
 	00161568 cmpeq bx,ax
 	00161574 mov ax,bx
 	00161580 jz 0x001616c0
		001616c0: CONDITIONAL_JUMP
		00161588: FALL_THROUGH

	[00161588]
		001614ec: FALL_THROUGH
 	00161588 sourceline 0x1391
 	00161590 mov ax,0x1
 	0016159c mov bx,ax
 	001615a8 mov mar,0x3cef20
 	001615b4 mov ax,mar
 	001615c0 push op
 	001615c8 mov op,ax
 	001615d0 farpush bx
 	001615d8 setfuncargs 0x1
 	001615e0 mov ax,0x69ef20
 	001615ec farcall ax
 	001615f4 farsubsp 0x1
 	001615fc pop op
 	00161604 sourceline 0x1392
 	0016160c push op
 	00161614 mov ax,0x2bd952
 	00161620 farpush ax
 	00161628 mov ax,0x138
 	00161634 farpush ax
 	0016163c mov ax,0x92
 	00161648 farpush ax
 	00161650 mov ax,0x0
 	0016165c farpush ax
 	00161664 mov mar,0x3cef20
 	00161670 mov ax,mar
 	0016167c mov op,ax
 	00161684 setfuncargs 0x4
 	0016168c mov ax,0x6aef20
 	00161698 farcall ax
 	001616a0 farsubsp 0x4
 	001616a8 pop op
 	001616b0 sourceline 0x1393
 	001616b8 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[001616c0]
		001614ec: CONDITIONAL_JUMP
 	001616c0 sourceline 0x1395
 	001616c8 mov mar,0x3cef20
 	001616d4 mov ax,mar
 	001616e0 push op
 	001616e8 mov op,ax
 	001616f0 setfuncargs 0x0
 	001616f8 mov ax,0x89ef20
 	00161704 farcall ax
 	0016170c pop op
 	00161714 push ax
 	0016171c mov mar,0x9fef20
 	00161728 mov ax,mar
 	00161734 pop bx
 	0016173c cmpeq bx,ax
 	00161748 mov ax,bx
 	00161754 jz 0x00161894
		00161894: CONDITIONAL_JUMP
		0016175c: FALL_THROUGH

	[0016175c]
		001616c0: FALL_THROUGH
 	0016175c sourceline 0x1397
 	00161764 mov ax,0x1
 	00161770 mov bx,ax
 	0016177c mov mar,0x3cef20
 	00161788 mov ax,mar
 	00161794 push op
 	0016179c mov op,ax
 	001617a4 farpush bx
 	001617ac setfuncargs 0x1
 	001617b4 mov ax,0x69ef20
 	001617c0 farcall ax
 	001617c8 farsubsp 0x1
 	001617d0 pop op
 	001617d8 sourceline 0x1398
 	001617e0 push op
 	001617e8 mov ax,0x2bd99a
 	001617f4 farpush ax
 	001617fc mov ax,0x138
 	00161808 farpush ax
 	00161810 mov ax,0x92
 	0016181c farpush ax
 	00161824 mov ax,0x0
 	00161830 farpush ax
 	00161838 mov mar,0x3cef20
 	00161844 mov ax,mar
 	00161850 mov op,ax
 	00161858 setfuncargs 0x4
 	00161860 mov ax,0x6aef20
 	0016186c farcall ax
 	00161874 farsubsp 0x4
 	0016187c pop op
 	00161884 sourceline 0x1399
 	0016188c jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00161894]
		001616c0: CONDITIONAL_JUMP
 	00161894 sourceline 0x139b
 	0016189c mov mar,0x3cef20
 	001618a8 mov ax,mar
 	001618b4 push op
 	001618bc mov op,ax
 	001618c4 setfuncargs 0x0
 	001618cc mov ax,0x89ef20
 	001618d8 farcall ax
 	001618e0 pop op
 	001618e8 push ax
 	001618f0 mov mar,0x9b6f20
 	001618fc mov ax,mar
 	00161908 pop bx
 	00161910 cmpeq bx,ax
 	0016191c mov ax,bx
 	00161928 jz 0x00161a68
		00161a68: CONDITIONAL_JUMP
		00161930: FALL_THROUGH

	[00161930]
		00161894: FALL_THROUGH
 	00161930 sourceline 0x139d
 	00161938 mov ax,0x1
 	00161944 mov bx,ax
 	00161950 mov mar,0x3cef20
 	0016195c mov ax,mar
 	00161968 push op
 	00161970 mov op,ax
 	00161978 farpush bx
 	00161980 setfuncargs 0x1
 	00161988 mov ax,0x69ef20
 	00161994 farcall ax
 	0016199c farsubsp 0x1
 	001619a4 pop op
 	001619ac sourceline 0x139e
 	001619b4 push op
 	001619bc mov ax,0x2bd9c2
 	001619c8 farpush ax
 	001619d0 mov ax,0x138
 	001619dc farpush ax
 	001619e4 mov ax,0x92
 	001619f0 farpush ax
 	001619f8 mov ax,0x0
 	00161a04 farpush ax
 	00161a0c mov mar,0x3cef20
 	00161a18 mov ax,mar
 	00161a24 mov op,ax
 	00161a2c setfuncargs 0x4
 	00161a34 mov ax,0x6aef20
 	00161a40 farcall ax
 	00161a48 farsubsp 0x4
 	00161a50 pop op
 	00161a58 sourceline 0x139f
 	00161a60 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00161a68]
		00161894: CONDITIONAL_JUMP
 	00161a68 sourceline 0x13a1
 	00161a70 mov mar,0x3cef20
 	00161a7c mov ax,mar
 	00161a88 push op
 	00161a90 mov op,ax
 	00161a98 setfuncargs 0x0
 	00161aa0 mov ax,0x89ef20
 	00161aac farcall ax
 	00161ab4 pop op
 	00161abc push ax
 	00161ac4 mov mar,0x9bef20
 	00161ad0 mov ax,mar
 	00161adc pop bx
 	00161ae4 cmpeq bx,ax
 	00161af0 mov ax,bx
 	00161afc jz 0x00161c3c
		00161c3c: CONDITIONAL_JUMP
		00161b04: FALL_THROUGH

	[00161b04]
		00161a68: FALL_THROUGH
 	00161b04 sourceline 0x13a3
 	00161b0c mov ax,0x1
 	00161b18 mov bx,ax
 	00161b24 mov mar,0x3cef20
 	00161b30 mov ax,mar
 	00161b3c push op
 	00161b44 mov op,ax
 	00161b4c farpush bx
 	00161b54 setfuncargs 0x1
 	00161b5c mov ax,0x69ef20
 	00161b68 farcall ax
 	00161b70 farsubsp 0x1
 	00161b78 pop op
 	00161b80 sourceline 0x13a4
 	00161b88 push op
 	00161b90 mov ax,0x2bd9fe
 	00161b9c farpush ax
 	00161ba4 mov ax,0x138
 	00161bb0 farpush ax
 	00161bb8 mov ax,0x92
 	00161bc4 farpush ax
 	00161bcc mov ax,0x0
 	00161bd8 farpush ax
 	00161be0 mov mar,0x3cef20
 	00161bec mov ax,mar
 	00161bf8 mov op,ax
 	00161c00 setfuncargs 0x4
 	00161c08 mov ax,0x6aef20
 	00161c14 farcall ax
 	00161c1c farsubsp 0x4
 	00161c24 pop op
 	00161c2c sourceline 0x13a5
 	00161c34 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00161c3c]
		00161a68: CONDITIONAL_JUMP
 	00161c3c sourceline 0x13a7
 	00161c44 mov mar,0x3cef20
 	00161c50 mov ax,mar
 	00161c5c push op
 	00161c64 mov op,ax
 	00161c6c setfuncargs 0x0
 	00161c74 mov ax,0x89ef20
 	00161c80 farcall ax
 	00161c88 pop op
 	00161c90 push ax
 	00161c98 mov mar,0x986f20
 	00161ca4 mov ax,mar
 	00161cb0 pop bx
 	00161cb8 cmpeq bx,ax
 	00161cc4 mov ax,bx
 	00161cd0 jz 0x00161e10
		00161e10: CONDITIONAL_JUMP
		00161cd8: FALL_THROUGH

	[00161cd8]
		00161c3c: FALL_THROUGH
 	00161cd8 sourceline 0x13a9
 	00161ce0 mov ax,0x1
 	00161cec mov bx,ax
 	00161cf8 mov mar,0x3cef20
 	00161d04 mov ax,mar
 	00161d10 push op
 	00161d18 mov op,ax
 	00161d20 farpush bx
 	00161d28 setfuncargs 0x1
 	00161d30 mov ax,0x69ef20
 	00161d3c farcall ax
 	00161d44 farsubsp 0x1
 	00161d4c pop op
 	00161d54 sourceline 0x13aa
 	00161d5c push op
 	00161d64 mov ax,0x2bda22
 	00161d70 farpush ax
 	00161d78 mov ax,0x138
 	00161d84 farpush ax
 	00161d8c mov ax,0x92
 	00161d98 farpush ax
 	00161da0 mov ax,0x0
 	00161dac farpush ax
 	00161db4 mov mar,0x3cef20
 	00161dc0 mov ax,mar
 	00161dcc mov op,ax
 	00161dd4 setfuncargs 0x4
 	00161ddc mov ax,0x6aef20
 	00161de8 farcall ax
 	00161df0 farsubsp 0x4
 	00161df8 pop op
 	00161e00 sourceline 0x13ab
 	00161e08 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00161e10]
		00161c3c: CONDITIONAL_JUMP
 	00161e10 sourceline 0x13ad
 	00161e18 mov mar,0x3cef20
 	00161e24 mov ax,mar
 	00161e30 push op
 	00161e38 mov op,ax
 	00161e40 setfuncargs 0x0
 	00161e48 mov ax,0x89ef20
 	00161e54 farcall ax
 	00161e5c pop op
 	00161e64 push ax
 	00161e6c mov mar,0x8f6f20
 	00161e78 mov ax,mar
 	00161e84 pop bx
 	00161e8c cmpeq bx,ax
 	00161e98 mov ax,bx
 	00161ea4 jz 0x00161fe4
		00161fe4: CONDITIONAL_JUMP
		00161eac: FALL_THROUGH

	[00161eac]
		00161e10: FALL_THROUGH
 	00161eac sourceline 0x13af
 	00161eb4 mov ax,0x1
 	00161ec0 mov bx,ax
 	00161ecc mov mar,0x3cef20
 	00161ed8 mov ax,mar
 	00161ee4 push op
 	00161eec mov op,ax
 	00161ef4 farpush bx
 	00161efc setfuncargs 0x1
 	00161f04 mov ax,0x69ef20
 	00161f10 farcall ax
 	00161f18 farsubsp 0x1
 	00161f20 pop op
 	00161f28 sourceline 0x13b0
 	00161f30 push op
 	00161f38 mov ax,0x2bda56
 	00161f44 farpush ax
 	00161f4c mov ax,0x138
 	00161f58 farpush ax
 	00161f60 mov ax,0x92
 	00161f6c farpush ax
 	00161f74 mov ax,0x0
 	00161f80 farpush ax
 	00161f88 mov mar,0x3cef20
 	00161f94 mov ax,mar
 	00161fa0 mov op,ax
 	00161fa8 setfuncargs 0x4
 	00161fb0 mov ax,0x6aef20
 	00161fbc farcall ax
 	00161fc4 farsubsp 0x4
 	00161fcc pop op
 	00161fd4 sourceline 0x13b1
 	00161fdc jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00161fe4]
		00161e10: CONDITIONAL_JUMP
 	00161fe4 sourceline 0x13b3
 	00161fec mov mar,0x3cef20
 	00161ff8 mov ax,mar
 	00162004 push op
 	0016200c mov op,ax
 	00162014 setfuncargs 0x0
 	0016201c mov ax,0x89ef20
 	00162028 farcall ax
 	00162030 pop op
 	00162038 push ax
 	00162040 mov mar,0x97ef20
 	0016204c mov ax,mar
 	00162058 pop bx
 	00162060 cmpeq bx,ax
 	0016206c mov ax,bx
 	00162078 jz 0x001621b8
		001621b8: CONDITIONAL_JUMP
		00162080: FALL_THROUGH

	[00162080]
		00161fe4: FALL_THROUGH
 	00162080 sourceline 0x13b5
 	00162088 mov ax,0x1
 	00162094 mov bx,ax
 	001620a0 mov mar,0x3cef20
 	001620ac mov ax,mar
 	001620b8 push op
 	001620c0 mov op,ax
 	001620c8 farpush bx
 	001620d0 setfuncargs 0x1
 	001620d8 mov ax,0x69ef20
 	001620e4 farcall ax
 	001620ec farsubsp 0x1
 	001620f4 pop op
 	001620fc sourceline 0x13b6
 	00162104 push op
 	0016210c mov ax,0x2bda97
 	00162118 farpush ax
 	00162120 mov ax,0x138
 	0016212c farpush ax
 	00162134 mov ax,0x92
 	00162140 farpush ax
 	00162148 mov ax,0x0
 	00162154 farpush ax
 	0016215c mov mar,0x3cef20
 	00162168 mov ax,mar
 	00162174 mov op,ax
 	0016217c setfuncargs 0x4
 	00162184 mov ax,0x6aef20
 	00162190 farcall ax
 	00162198 farsubsp 0x4
 	001621a0 pop op
 	001621a8 sourceline 0x13b7
 	001621b0 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[001621b8]
		00161fe4: CONDITIONAL_JUMP
 	001621b8 sourceline 0x13b9
 	001621c0 mov mar,0x3cef20
 	001621cc mov ax,mar
 	001621d8 push op
 	001621e0 mov op,ax
 	001621e8 setfuncargs 0x0
 	001621f0 mov ax,0x89ef20
 	001621fc farcall ax
 	00162204 pop op
 	0016220c push ax
 	00162214 mov mar,0x8fef20
 	00162220 mov ax,mar
 	0016222c pop bx
 	00162234 cmpeq bx,ax
 	00162240 mov ax,bx
 	0016224c jz 0x0016238c
		0016238c: CONDITIONAL_JUMP
		00162254: FALL_THROUGH

	[00162254]
		001621b8: FALL_THROUGH
 	00162254 sourceline 0x13bb
 	0016225c mov ax,0x1
 	00162268 mov bx,ax
 	00162274 mov mar,0x3cef20
 	00162280 mov ax,mar
 	0016228c push op
 	00162294 mov op,ax
 	0016229c farpush bx
 	001622a4 setfuncargs 0x1
 	001622ac mov ax,0x69ef20
 	001622b8 farcall ax
 	001622c0 farsubsp 0x1
 	001622c8 pop op
 	001622d0 sourceline 0x13bc
 	001622d8 push op
 	001622e0 mov ax,0x2bdad5
 	001622ec farpush ax
 	001622f4 mov ax,0x138
 	00162300 farpush ax
 	00162308 mov ax,0x92
 	00162314 farpush ax
 	0016231c mov ax,0x0
 	00162328 farpush ax
 	00162330 mov mar,0x3cef20
 	0016233c mov ax,mar
 	00162348 mov op,ax
 	00162350 setfuncargs 0x4
 	00162358 mov ax,0x6aef20
 	00162364 farcall ax
 	0016236c farsubsp 0x4
 	00162374 pop op
 	0016237c sourceline 0x13bd
 	00162384 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0016238c]
		001621b8: CONDITIONAL_JUMP
 	0016238c sourceline 0x13bf
 	00162394 mov mar,0x3cef20
 	001623a0 mov ax,mar
 	001623ac push op
 	001623b4 mov op,ax
 	001623bc setfuncargs 0x0
 	001623c4 mov ax,0x89ef20
 	001623d0 farcall ax
 	001623d8 pop op
 	001623e0 push ax
 	001623e8 mov mar,0x906f20
 	001623f4 mov ax,mar
 	00162400 pop bx
 	00162408 cmpeq bx,ax
 	00162414 mov ax,bx
 	00162420 jz 0x00162560
		00162560: CONDITIONAL_JUMP
		00162428: FALL_THROUGH

	[00162428]
		0016238c: FALL_THROUGH
 	00162428 sourceline 0x13c1
 	00162430 mov ax,0x1
 	0016243c mov bx,ax
 	00162448 mov mar,0x3cef20
 	00162454 mov ax,mar
 	00162460 push op
 	00162468 mov op,ax
 	00162470 farpush bx
 	00162478 setfuncargs 0x1
 	00162480 mov ax,0x69ef20
 	0016248c farcall ax
 	00162494 farsubsp 0x1
 	0016249c pop op
 	001624a4 sourceline 0x13c2
 	001624ac push op
 	001624b4 mov ax,0x2bdaf3
 	001624c0 farpush ax
 	001624c8 mov ax,0x138
 	001624d4 farpush ax
 	001624dc mov ax,0x92
 	001624e8 farpush ax
 	001624f0 mov ax,0x0
 	001624fc farpush ax
 	00162504 mov mar,0x3cef20
 	00162510 mov ax,mar
 	0016251c mov op,ax
 	00162524 setfuncargs 0x4
 	0016252c mov ax,0x6aef20
 	00162538 farcall ax
 	00162540 farsubsp 0x4
 	00162548 pop op
 	00162550 sourceline 0x13c3
 	00162558 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00162560]
		0016238c: CONDITIONAL_JUMP
 	00162560 sourceline 0x13c5
 	00162568 mov mar,0x3cef20
 	00162574 mov ax,mar
 	00162580 push op
 	00162588 mov op,ax
 	00162590 setfuncargs 0x0
 	00162598 mov ax,0x89ef20
 	001625a4 farcall ax
 	001625ac pop op
 	001625b4 push ax
 	001625bc mov mar,0x976f20
 	001625c8 mov ax,mar
 	001625d4 pop bx
 	001625dc cmpeq bx,ax
 	001625e8 mov ax,bx
 	001625f4 jz 0x00162734
		00162734: CONDITIONAL_JUMP
		001625fc: FALL_THROUGH

	[001625fc]
		00162560: FALL_THROUGH
 	001625fc sourceline 0x13c7
 	00162604 mov ax,0x1
 	00162610 mov bx,ax
 	0016261c mov mar,0x3cef20
 	00162628 mov ax,mar
 	00162634 push op
 	0016263c mov op,ax
 	00162644 farpush bx
 	0016264c setfuncargs 0x1
 	00162654 mov ax,0x69ef20
 	00162660 farcall ax
 	00162668 farsubsp 0x1
 	00162670 pop op
 	00162678 sourceline 0x13c8
 	00162680 push op
 	00162688 mov ax,0x2bdb1c
 	00162694 farpush ax
 	0016269c mov ax,0x138
 	001626a8 farpush ax
 	001626b0 mov ax,0x92
 	001626bc farpush ax
 	001626c4 mov ax,0x0
 	001626d0 farpush ax
 	001626d8 mov mar,0x3cef20
 	001626e4 mov ax,mar
 	001626f0 mov op,ax
 	001626f8 setfuncargs 0x4
 	00162700 mov ax,0x6aef20
 	0016270c farcall ax
 	00162714 farsubsp 0x4
 	0016271c pop op
 	00162724 sourceline 0x13c9
 	0016272c jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00162734]
		00162560: CONDITIONAL_JUMP
 	00162734 sourceline 0x13cb
 	0016273c mov mar,0x3cef20
 	00162748 mov ax,mar
 	00162754 push op
 	0016275c mov op,ax
 	00162764 setfuncargs 0x0
 	0016276c mov ax,0x89ef20
 	00162778 farcall ax
 	00162780 pop op
 	00162788 push ax
 	00162790 mov mar,0x846f20
 	0016279c mov ax,mar
 	001627a8 pop bx
 	001627b0 cmpeq bx,ax
 	001627bc mov ax,bx
 	001627c8 jz 0x00162908
		00162908: CONDITIONAL_JUMP
		001627d0: FALL_THROUGH

	[001627d0]
		00162734: FALL_THROUGH
 	001627d0 sourceline 0x13cd
 	001627d8 mov ax,0x1
 	001627e4 mov bx,ax
 	001627f0 mov mar,0x3cef20
 	001627fc mov ax,mar
 	00162808 push op
 	00162810 mov op,ax
 	00162818 farpush bx
 	00162820 setfuncargs 0x1
 	00162828 mov ax,0x69ef20
 	00162834 farcall ax
 	0016283c farsubsp 0x1
 	00162844 pop op
 	0016284c sourceline 0x13ce
 	00162854 push op
 	0016285c mov ax,0x2bdef7
 	00162868 farpush ax
 	00162870 mov ax,0x138
 	0016287c farpush ax
 	00162884 mov ax,0x92
 	00162890 farpush ax
 	00162898 mov ax,0x0
 	001628a4 farpush ax
 	001628ac mov mar,0x3cef20
 	001628b8 mov ax,mar
 	001628c4 mov op,ax
 	001628cc setfuncargs 0x4
 	001628d4 mov ax,0x6aef20
 	001628e0 farcall ax
 	001628e8 farsubsp 0x4
 	001628f0 pop op
 	001628f8 sourceline 0x13cf
 	00162900 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00162908]
		00162734: CONDITIONAL_JUMP
 	00162908 sourceline 0x13d1
 	00162910 mov mar,0x3cef20
 	0016291c mov ax,mar
 	00162928 push op
 	00162930 mov op,ax
 	00162938 setfuncargs 0x0
 	00162940 mov ax,0x89ef20
 	0016294c farcall ax
 	00162954 pop op
 	0016295c push ax
 	00162964 mov mar,0x90ef20
 	00162970 mov ax,mar
 	0016297c pop bx
 	00162984 cmpeq bx,ax
 	00162990 mov ax,bx
 	0016299c jz 0x00162adc
		00162adc: CONDITIONAL_JUMP
		001629a4: FALL_THROUGH

	[001629a4]
		00162908: FALL_THROUGH
 	001629a4 sourceline 0x13d3
 	001629ac mov ax,0x1
 	001629b8 mov bx,ax
 	001629c4 mov mar,0x3cef20
 	001629d0 mov ax,mar
 	001629dc push op
 	001629e4 mov op,ax
 	001629ec farpush bx
 	001629f4 setfuncargs 0x1
 	001629fc mov ax,0x69ef20
 	00162a08 farcall ax
 	00162a10 farsubsp 0x1
 	00162a18 pop op
 	00162a20 sourceline 0x13d4
 	00162a28 push op
 	00162a30 mov ax,0x2bdb8b
 	00162a3c farpush ax
 	00162a44 mov ax,0x138
 	00162a50 farpush ax
 	00162a58 mov ax,0x92
 	00162a64 farpush ax
 	00162a6c mov ax,0x0
 	00162a78 farpush ax
 	00162a80 mov mar,0x3cef20
 	00162a8c mov ax,mar
 	00162a98 mov op,ax
 	00162aa0 setfuncargs 0x4
 	00162aa8 mov ax,0x6aef20
 	00162ab4 farcall ax
 	00162abc farsubsp 0x4
 	00162ac4 pop op
 	00162acc sourceline 0x13d5
 	00162ad4 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00162adc]
		00162908: CONDITIONAL_JUMP
 	00162adc sourceline 0x13d7
 	00162ae4 mov mar,0x3cef20
 	00162af0 mov ax,mar
 	00162afc push op
 	00162b04 mov op,ax
 	00162b0c setfuncargs 0x0
 	00162b14 mov ax,0x89ef20
 	00162b20 farcall ax
 	00162b28 pop op
 	00162b30 push ax
 	00162b38 mov mar,0x916f20
 	00162b44 mov ax,mar
 	00162b50 pop bx
 	00162b58 cmpeq bx,ax
 	00162b64 mov ax,bx
 	00162b70 jz 0x00162cb0
		00162cb0: CONDITIONAL_JUMP
		00162b78: FALL_THROUGH

	[00162b78]
		00162adc: FALL_THROUGH
 	00162b78 sourceline 0x13d9
 	00162b80 mov ax,0x1
 	00162b8c mov bx,ax
 	00162b98 mov mar,0x3cef20
 	00162ba4 mov ax,mar
 	00162bb0 push op
 	00162bb8 mov op,ax
 	00162bc0 farpush bx
 	00162bc8 setfuncargs 0x1
 	00162bd0 mov ax,0x69ef20
 	00162bdc farcall ax
 	00162be4 farsubsp 0x1
 	00162bec pop op
 	00162bf4 sourceline 0x13da
 	00162bfc push op
 	00162c04 mov ax,0x2bdcdc
 	00162c10 farpush ax
 	00162c18 mov ax,0x138
 	00162c24 farpush ax
 	00162c2c mov ax,0x92
 	00162c38 farpush ax
 	00162c40 mov ax,0x0
 	00162c4c farpush ax
 	00162c54 mov mar,0x3cef20
 	00162c60 mov ax,mar
 	00162c6c mov op,ax
 	00162c74 setfuncargs 0x4
 	00162c7c mov ax,0x6aef20
 	00162c88 farcall ax
 	00162c90 farsubsp 0x4
 	00162c98 pop op
 	00162ca0 sourceline 0x13db
 	00162ca8 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00162cb0]
		00162adc: CONDITIONAL_JUMP
 	00162cb0 sourceline 0x13dd
 	00162cb8 mov mar,0x3cef20
 	00162cc4 mov ax,mar
 	00162cd0 push op
 	00162cd8 mov op,ax
 	00162ce0 setfuncargs 0x0
 	00162ce8 mov ax,0x89ef20
 	00162cf4 farcall ax
 	00162cfc pop op
 	00162d04 push ax
 	00162d0c mov mar,0x91ef20
 	00162d18 mov ax,mar
 	00162d24 pop bx
 	00162d2c cmpeq bx,ax
 	00162d38 mov ax,bx
 	00162d44 jz 0x00162e84
		00162e84: CONDITIONAL_JUMP
		00162d4c: FALL_THROUGH

	[00162d4c]
		00162cb0: FALL_THROUGH
 	00162d4c sourceline 0x13df
 	00162d54 mov ax,0x1
 	00162d60 mov bx,ax
 	00162d6c mov mar,0x3cef20
 	00162d78 mov ax,mar
 	00162d84 push op
 	00162d8c mov op,ax
 	00162d94 farpush bx
 	00162d9c setfuncargs 0x1
 	00162da4 mov ax,0x69ef20
 	00162db0 farcall ax
 	00162db8 farsubsp 0x1
 	00162dc0 pop op
 	00162dc8 sourceline 0x13e0
 	00162dd0 push op
 	00162dd8 mov ax,0x2bdc08
 	00162de4 farpush ax
 	00162dec mov ax,0x138
 	00162df8 farpush ax
 	00162e00 mov ax,0x92
 	00162e0c farpush ax
 	00162e14 mov ax,0x0
 	00162e20 farpush ax
 	00162e28 mov mar,0x3cef20
 	00162e34 mov ax,mar
 	00162e40 mov op,ax
 	00162e48 setfuncargs 0x4
 	00162e50 mov ax,0x6aef20
 	00162e5c farcall ax
 	00162e64 farsubsp 0x4
 	00162e6c pop op
 	00162e74 sourceline 0x13e1
 	00162e7c jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00162e84]
		00162cb0: CONDITIONAL_JUMP
 	00162e84 sourceline 0x13e3
 	00162e8c mov mar,0x3cef20
 	00162e98 mov ax,mar
 	00162ea4 push op
 	00162eac mov op,ax
 	00162eb4 setfuncargs 0x0
 	00162ebc mov ax,0x89ef20
 	00162ec8 farcall ax
 	00162ed0 pop op
 	00162ed8 push ax
 	00162ee0 mov mar,0x926f20
 	00162eec mov ax,mar
 	00162ef8 pop bx
 	00162f00 cmpeq bx,ax
 	00162f0c mov ax,bx
 	00162f18 jz 0x00163058
		00163058: CONDITIONAL_JUMP
		00162f20: FALL_THROUGH

	[00162f20]
		00162e84: FALL_THROUGH
 	00162f20 sourceline 0x13e5
 	00162f28 mov ax,0x1
 	00162f34 mov bx,ax
 	00162f40 mov mar,0x3cef20
 	00162f4c mov ax,mar
 	00162f58 push op
 	00162f60 mov op,ax
 	00162f68 farpush bx
 	00162f70 setfuncargs 0x1
 	00162f78 mov ax,0x69ef20
 	00162f84 farcall ax
 	00162f8c farsubsp 0x1
 	00162f94 pop op
 	00162f9c sourceline 0x13e6
 	00162fa4 push op
 	00162fac mov ax,0x2bdc29
 	00162fb8 farpush ax
 	00162fc0 mov ax,0x138
 	00162fcc farpush ax
 	00162fd4 mov ax,0x92
 	00162fe0 farpush ax
 	00162fe8 mov ax,0x0
 	00162ff4 farpush ax
 	00162ffc mov mar,0x3cef20
 	00163008 mov ax,mar
 	00163014 mov op,ax
 	0016301c setfuncargs 0x4
 	00163024 mov ax,0x6aef20
 	00163030 farcall ax
 	00163038 farsubsp 0x4
 	00163040 pop op
 	00163048 sourceline 0x13e7
 	00163050 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00163058]
		00162e84: CONDITIONAL_JUMP
 	00163058 sourceline 0x13e9
 	00163060 mov mar,0x3cef20
 	0016306c mov ax,mar
 	00163078 push op
 	00163080 mov op,ax
 	00163088 setfuncargs 0x0
 	00163090 mov ax,0x89ef20
 	0016309c farcall ax
 	001630a4 pop op
 	001630ac push ax
 	001630b4 mov mar,0x92ef20
 	001630c0 mov ax,mar
 	001630cc pop bx
 	001630d4 cmpeq bx,ax
 	001630e0 mov ax,bx
 	001630ec jz 0x0016322c
		0016322c: CONDITIONAL_JUMP
		001630f4: FALL_THROUGH

	[001630f4]
		00163058: FALL_THROUGH
 	001630f4 sourceline 0x13eb
 	001630fc mov ax,0x1
 	00163108 mov bx,ax
 	00163114 mov mar,0x3cef20
 	00163120 mov ax,mar
 	0016312c push op
 	00163134 mov op,ax
 	0016313c farpush bx
 	00163144 setfuncargs 0x1
 	0016314c mov ax,0x69ef20
 	00163158 farcall ax
 	00163160 farsubsp 0x1
 	00163168 pop op
 	00163170 sourceline 0x13ec
 	00163178 push op
 	00163180 mov ax,0x2bdc99
 	0016318c farpush ax
 	00163194 mov ax,0x138
 	001631a0 farpush ax
 	001631a8 mov ax,0x92
 	001631b4 farpush ax
 	001631bc mov ax,0x0
 	001631c8 farpush ax
 	001631d0 mov mar,0x3cef20
 	001631dc mov ax,mar
 	001631e8 mov op,ax
 	001631f0 setfuncargs 0x4
 	001631f8 mov ax,0x6aef20
 	00163204 farcall ax
 	0016320c farsubsp 0x4
 	00163214 pop op
 	0016321c sourceline 0x13ed
 	00163224 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0016322c]
		00163058: CONDITIONAL_JUMP
 	0016322c sourceline 0x13ef
 	00163234 mov mar,0x3cef20
 	00163240 mov ax,mar
 	0016324c push op
 	00163254 mov op,ax
 	0016325c setfuncargs 0x0
 	00163264 mov ax,0x89ef20
 	00163270 farcall ax
 	00163278 pop op
 	00163280 push ax
 	00163288 mov mar,0x936f20
 	00163294 mov ax,mar
 	001632a0 pop bx
 	001632a8 cmpeq bx,ax
 	001632b4 mov ax,bx
 	001632c0 jz 0x00163400
		00163400: CONDITIONAL_JUMP
		001632c8: FALL_THROUGH

	[001632c8]
		0016322c: FALL_THROUGH
 	001632c8 sourceline 0x13f1
 	001632d0 mov ax,0x1
 	001632dc mov bx,ax
 	001632e8 mov mar,0x3cef20
 	001632f4 mov ax,mar
 	00163300 push op
 	00163308 mov op,ax
 	00163310 farpush bx
 	00163318 setfuncargs 0x1
 	00163320 mov ax,0x69ef20
 	0016332c farcall ax
 	00163334 farsubsp 0x1
 	0016333c pop op
 	00163344 sourceline 0x13f2
 	0016334c push op
 	00163354 mov ax,0x2bdcdc
 	00163360 farpush ax
 	00163368 mov ax,0x138
 	00163374 farpush ax
 	0016337c mov ax,0x92
 	00163388 farpush ax
 	00163390 mov ax,0x0
 	0016339c farpush ax
 	001633a4 mov mar,0x3cef20
 	001633b0 mov ax,mar
 	001633bc mov op,ax
 	001633c4 setfuncargs 0x4
 	001633cc mov ax,0x6aef20
 	001633d8 farcall ax
 	001633e0 farsubsp 0x4
 	001633e8 pop op
 	001633f0 sourceline 0x13f3
 	001633f8 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00163400]
		0016322c: CONDITIONAL_JUMP
 	00163400 sourceline 0x13f5
 	00163408 mov mar,0x3cef20
 	00163414 mov ax,mar
 	00163420 push op
 	00163428 mov op,ax
 	00163430 setfuncargs 0x0
 	00163438 mov ax,0x89ef20
 	00163444 farcall ax
 	0016344c pop op
 	00163454 push ax
 	0016345c mov mar,0x93ef20
 	00163468 mov ax,mar
 	00163474 pop bx
 	0016347c cmpeq bx,ax
 	00163488 mov ax,bx
 	00163494 jz 0x001635d4
		001635d4: CONDITIONAL_JUMP
		0016349c: FALL_THROUGH

	[0016349c]
		00163400: FALL_THROUGH
 	0016349c sourceline 0x13f7
 	001634a4 mov ax,0x1
 	001634b0 mov bx,ax
 	001634bc mov mar,0x3cef20
 	001634c8 mov ax,mar
 	001634d4 push op
 	001634dc mov op,ax
 	001634e4 farpush bx
 	001634ec setfuncargs 0x1
 	001634f4 mov ax,0x69ef20
 	00163500 farcall ax
 	00163508 farsubsp 0x1
 	00163510 pop op
 	00163518 sourceline 0x13f8
 	00163520 push op
 	00163528 mov ax,0x2bdd0b
 	00163534 farpush ax
 	0016353c mov ax,0x138
 	00163548 farpush ax
 	00163550 mov ax,0x92
 	0016355c farpush ax
 	00163564 mov ax,0x0
 	00163570 farpush ax
 	00163578 mov mar,0x3cef20
 	00163584 mov ax,mar
 	00163590 mov op,ax
 	00163598 setfuncargs 0x4
 	001635a0 mov ax,0x6aef20
 	001635ac farcall ax
 	001635b4 farsubsp 0x4
 	001635bc pop op
 	001635c4 sourceline 0x13f9
 	001635cc jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[001635d4]
		00163400: CONDITIONAL_JUMP
 	001635d4 sourceline 0x13fb
 	001635dc mov mar,0x3cef20
 	001635e8 mov ax,mar
 	001635f4 push op
 	001635fc mov op,ax
 	00163604 setfuncargs 0x0
 	0016360c mov ax,0x89ef20
 	00163618 farcall ax
 	00163620 pop op
 	00163628 push ax
 	00163630 mov mar,0x946f20
 	0016363c mov ax,mar
 	00163648 pop bx
 	00163650 cmpeq bx,ax
 	0016365c mov ax,bx
 	00163668 jz 0x001637a8
		001637a8: CONDITIONAL_JUMP
		00163670: FALL_THROUGH

	[00163670]
		001635d4: FALL_THROUGH
 	00163670 sourceline 0x13fd
 	00163678 mov ax,0x1
 	00163684 mov bx,ax
 	00163690 mov mar,0x3cef20
 	0016369c mov ax,mar
 	001636a8 push op
 	001636b0 mov op,ax
 	001636b8 farpush bx
 	001636c0 setfuncargs 0x1
 	001636c8 mov ax,0x69ef20
 	001636d4 farcall ax
 	001636dc farsubsp 0x1
 	001636e4 pop op
 	001636ec sourceline 0x13fe
 	001636f4 push op
 	001636fc mov ax,0x2bdd8a
 	00163708 farpush ax
 	00163710 mov ax,0x138
 	0016371c farpush ax
 	00163724 mov ax,0x92
 	00163730 farpush ax
 	00163738 mov ax,0x0
 	00163744 farpush ax
 	0016374c mov mar,0x3cef20
 	00163758 mov ax,mar
 	00163764 mov op,ax
 	0016376c setfuncargs 0x4
 	00163774 mov ax,0x6aef20
 	00163780 farcall ax
 	00163788 farsubsp 0x4
 	00163790 pop op
 	00163798 sourceline 0x13ff
 	001637a0 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[001637a8]
		001635d4: CONDITIONAL_JUMP
 	001637a8 sourceline 0x1401
 	001637b0 mov mar,0x3cef20
 	001637bc mov ax,mar
 	001637c8 push op
 	001637d0 mov op,ax
 	001637d8 setfuncargs 0x0
 	001637e0 mov ax,0x89ef20
 	001637ec farcall ax
 	001637f4 pop op
 	001637fc push ax
 	00163804 mov mar,0x956f20
 	00163810 mov ax,mar
 	0016381c pop bx
 	00163824 cmpeq bx,ax
 	00163830 mov ax,bx
 	0016383c jz 0x0016397c
		0016397c: CONDITIONAL_JUMP
		00163844: FALL_THROUGH

	[00163844]
		001637a8: FALL_THROUGH
 	00163844 sourceline 0x1403
 	0016384c mov ax,0x1
 	00163858 mov bx,ax
 	00163864 mov mar,0x3cef20
 	00163870 mov ax,mar
 	0016387c push op
 	00163884 mov op,ax
 	0016388c farpush bx
 	00163894 setfuncargs 0x1
 	0016389c mov ax,0x69ef20
 	001638a8 farcall ax
 	001638b0 farsubsp 0x1
 	001638b8 pop op
 	001638c0 sourceline 0x1404
 	001638c8 push op
 	001638d0 mov ax,0x2bdde8
 	001638dc farpush ax
 	001638e4 mov ax,0x138
 	001638f0 farpush ax
 	001638f8 mov ax,0x92
 	00163904 farpush ax
 	0016390c mov ax,0x0
 	00163918 farpush ax
 	00163920 mov mar,0x3cef20
 	0016392c mov ax,mar
 	00163938 mov op,ax
 	00163940 setfuncargs 0x4
 	00163948 mov ax,0x6aef20
 	00163954 farcall ax
 	0016395c farsubsp 0x4
 	00163964 pop op
 	0016396c sourceline 0x1405
 	00163974 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[0016397c]
		001637a8: CONDITIONAL_JUMP
 	0016397c sourceline 0x1407
 	00163984 mov mar,0x3cef20
 	00163990 mov ax,mar
 	0016399c push op
 	001639a4 mov op,ax
 	001639ac setfuncargs 0x0
 	001639b4 mov ax,0x89ef20
 	001639c0 farcall ax
 	001639c8 pop op
 	001639d0 push ax
 	001639d8 mov mar,0x95ef20
 	001639e4 mov ax,mar
 	001639f0 pop bx
 	001639f8 cmpeq bx,ax
 	00163a04 mov ax,bx
 	00163a10 jz 0x00163b50
		00163b50: CONDITIONAL_JUMP
		00163a18: FALL_THROUGH

	[00163a18]
		0016397c: FALL_THROUGH
 	00163a18 sourceline 0x1409
 	00163a20 mov ax,0x1
 	00163a2c mov bx,ax
 	00163a38 mov mar,0x3cef20
 	00163a44 mov ax,mar
 	00163a50 push op
 	00163a58 mov op,ax
 	00163a60 farpush bx
 	00163a68 setfuncargs 0x1
 	00163a70 mov ax,0x69ef20
 	00163a7c farcall ax
 	00163a84 farsubsp 0x1
 	00163a8c pop op
 	00163a94 sourceline 0x140a
 	00163a9c push op
 	00163aa4 mov ax,0x2bde49
 	00163ab0 farpush ax
 	00163ab8 mov ax,0x138
 	00163ac4 farpush ax
 	00163acc mov ax,0x92
 	00163ad8 farpush ax
 	00163ae0 mov ax,0x0
 	00163aec farpush ax
 	00163af4 mov mar,0x3cef20
 	00163b00 mov ax,mar
 	00163b0c mov op,ax
 	00163b14 setfuncargs 0x4
 	00163b1c mov ax,0x6aef20
 	00163b28 farcall ax
 	00163b30 farsubsp 0x4
 	00163b38 pop op
 	00163b40 sourceline 0x140b
 	00163b48 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00163b50]
		0016397c: CONDITIONAL_JUMP
 	00163b50 sourceline 0x140d
 	00163b58 mov mar,0x3cef20
 	00163b64 mov ax,mar
 	00163b70 push op
 	00163b78 mov op,ax
 	00163b80 setfuncargs 0x0
 	00163b88 mov ax,0x89ef20
 	00163b94 farcall ax
 	00163b9c pop op
 	00163ba4 push ax
 	00163bac mov mar,0x886f20
 	00163bb8 mov ax,mar
 	00163bc4 pop bx
 	00163bcc cmpeq bx,ax
 	00163bd8 mov ax,bx
 	00163be4 jz 0x00163d24
		00163d24: CONDITIONAL_JUMP
		00163bec: FALL_THROUGH

	[00163bec]
		00163b50: FALL_THROUGH
 	00163bec sourceline 0x140f
 	00163bf4 mov ax,0x1
 	00163c00 mov bx,ax
 	00163c0c mov mar,0x3cef20
 	00163c18 mov ax,mar
 	00163c24 push op
 	00163c2c mov op,ax
 	00163c34 farpush bx
 	00163c3c setfuncargs 0x1
 	00163c44 mov ax,0x69ef20
 	00163c50 farcall ax
 	00163c58 farsubsp 0x1
 	00163c60 pop op
 	00163c68 sourceline 0x1410
 	00163c70 push op
 	00163c78 mov ax,0x2bde9e
 	00163c84 farpush ax
 	00163c8c mov ax,0x138
 	00163c98 farpush ax
 	00163ca0 mov ax,0x92
 	00163cac farpush ax
 	00163cb4 mov ax,0x0
 	00163cc0 farpush ax
 	00163cc8 mov mar,0x3cef20
 	00163cd4 mov ax,mar
 	00163ce0 mov op,ax
 	00163ce8 setfuncargs 0x4
 	00163cf0 mov ax,0x6aef20
 	00163cfc farcall ax
 	00163d04 farsubsp 0x4
 	00163d0c pop op
 	00163d14 sourceline 0x1411
 	00163d1c jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00163d24]
		00163b50: CONDITIONAL_JUMP
 	00163d24 sourceline 0x1413
 	00163d2c mov mar,0x3cef20
 	00163d38 mov ax,mar
 	00163d44 push op
 	00163d4c mov op,ax
 	00163d54 setfuncargs 0x0
 	00163d5c mov ax,0x89ef20
 	00163d68 farcall ax
 	00163d70 pop op
 	00163d78 push ax
 	00163d80 mov mar,0x88ef20
 	00163d8c mov ax,mar
 	00163d98 pop bx
 	00163da0 cmpeq bx,ax
 	00163dac mov ax,bx
 	00163db8 jz 0x00163ef8
		00163ef8: CONDITIONAL_JUMP
		00163dc0: FALL_THROUGH

	[00163dc0]
		00163d24: FALL_THROUGH
 	00163dc0 sourceline 0x1415
 	00163dc8 mov ax,0x1
 	00163dd4 mov bx,ax
 	00163de0 mov mar,0x3cef20
 	00163dec mov ax,mar
 	00163df8 push op
 	00163e00 mov op,ax
 	00163e08 farpush bx
 	00163e10 setfuncargs 0x1
 	00163e18 mov ax,0x69ef20
 	00163e24 farcall ax
 	00163e2c farsubsp 0x1
 	00163e34 pop op
 	00163e3c sourceline 0x1416
 	00163e44 push op
 	00163e4c mov ax,0x2bdec9
 	00163e58 farpush ax
 	00163e60 mov ax,0x138
 	00163e6c farpush ax
 	00163e74 mov ax,0x92
 	00163e80 farpush ax
 	00163e88 mov ax,0x0
 	00163e94 farpush ax
 	00163e9c mov mar,0x3cef20
 	00163ea8 mov ax,mar
 	00163eb4 mov op,ax
 	00163ebc setfuncargs 0x4
 	00163ec4 mov ax,0x6aef20
 	00163ed0 farcall ax
 	00163ed8 farsubsp 0x4
 	00163ee0 pop op
 	00163ee8 sourceline 0x1417
 	00163ef0 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[00163ef8]
		00163d24: CONDITIONAL_JUMP
 	00163ef8 sourceline 0x1419
 	00163f00 mov mar,0x3cef20
 	00163f0c mov ax,mar
 	00163f18 push op
 	00163f20 mov op,ax
 	00163f28 setfuncargs 0x0
 	00163f30 mov ax,0x89ef20
 	00163f3c farcall ax
 	00163f44 pop op
 	00163f4c push ax
 	00163f54 mov mar,0x966f20
 	00163f60 mov ax,mar
 	00163f6c pop bx
 	00163f74 cmpeq bx,ax
 	00163f80 mov ax,bx
 	00163f8c jz 0x001640cc
		001640cc: CONDITIONAL_JUMP
		00163f94: FALL_THROUGH

	[00163f94]
		00163ef8: FALL_THROUGH
 	00163f94 sourceline 0x141b
 	00163f9c mov ax,0x1
 	00163fa8 mov bx,ax
 	00163fb4 mov mar,0x3cef20
 	00163fc0 mov ax,mar
 	00163fcc push op
 	00163fd4 mov op,ax
 	00163fdc farpush bx
 	00163fe4 setfuncargs 0x1
 	00163fec mov ax,0x69ef20
 	00163ff8 farcall ax
 	00164000 farsubsp 0x1
 	00164008 pop op
 	00164010 sourceline 0x141c
 	00164018 push op
 	00164020 mov ax,0x2bdef7
 	0016402c farpush ax
 	00164034 mov ax,0x138
 	00164040 farpush ax
 	00164048 mov ax,0x92
 	00164054 farpush ax
 	0016405c mov ax,0x0
 	00164068 farpush ax
 	00164070 mov mar,0x3cef20
 	0016407c mov ax,mar
 	00164088 mov op,ax
 	00164090 setfuncargs 0x4
 	00164098 mov ax,0x6aef20
 	001640a4 farcall ax
 	001640ac farsubsp 0x4
 	001640b4 pop op
 	001640bc sourceline 0x141d
 	001640c4 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[001640cc]
		00163ef8: CONDITIONAL_JUMP
 	001640cc sourceline 0x141f
 	001640d4 mov mar,0x3cef20
 	001640e0 mov ax,mar
 	001640ec push op
 	001640f4 mov op,ax
 	001640fc setfuncargs 0x0
 	00164104 mov ax,0x89ef20
 	00164110 farcall ax
 	00164118 pop op
 	00164120 push ax
 	00164128 mov mar,0x96ef20
 	00164134 mov ax,mar
 	00164140 pop bx
 	00164148 cmpeq bx,ax
 	00164154 mov ax,bx
 	00164160 jz 0x001642a0
		001642a0: CONDITIONAL_JUMP
		00164168: FALL_THROUGH

	[00164168]
		001640cc: FALL_THROUGH
 	00164168 sourceline 0x1421
 	00164170 mov ax,0x1
 	0016417c mov bx,ax
 	00164188 mov mar,0x3cef20
 	00164194 mov ax,mar
 	001641a0 push op
 	001641a8 mov op,ax
 	001641b0 farpush bx
 	001641b8 setfuncargs 0x1
 	001641c0 mov ax,0x69ef20
 	001641cc farcall ax
 	001641d4 farsubsp 0x1
 	001641dc pop op
 	001641e4 sourceline 0x1422
 	001641ec push op
 	001641f4 mov ax,0x2bdf24
 	00164200 farpush ax
 	00164208 mov ax,0x138
 	00164214 farpush ax
 	0016421c mov ax,0x92
 	00164228 farpush ax
 	00164230 mov ax,0x0
 	0016423c farpush ax
 	00164244 mov mar,0x3cef20
 	00164250 mov ax,mar
 	0016425c mov op,ax
 	00164264 setfuncargs 0x4
 	0016426c mov ax,0x6aef20
 	00164278 farcall ax
 	00164280 farsubsp 0x4
 	00164288 pop op
 	00164290 sourceline 0x1423
 	00164298 jmp 0x001642f0
		001642f0: UNCONDITIONAL_JUMP

	[001642a0]
		001640cc: CONDITIONAL_JUMP
 	001642a0 sourceline 0x1425
 	001642a8 mov ax,0x3
 	001642b4 push ax
 	001642bc mov ax,0x3
 	001642c8 push ax
 	001642d0 mov ax,0x10ae5c
 	001642dc call ax
 	001642e4 sub sp,0x8
		001642f0: FALL_THROUGH

	[001642f0]
		00159944: UNCONDITIONAL_JUMP
		0015a63c: UNCONDITIONAL_JUMP
		0015c7e0: UNCONDITIONAL_JUMP
		0015f164: UNCONDITIONAL_JUMP
		0015f210: UNCONDITIONAL_JUMP
		0015f3e4: UNCONDITIONAL_JUMP
		0015f5b8: UNCONDITIONAL_JUMP
		0015f78c: UNCONDITIONAL_JUMP
		0015f960: UNCONDITIONAL_JUMP
		0015fb34: UNCONDITIONAL_JUMP
		0015fd08: UNCONDITIONAL_JUMP
		0015fedc: UNCONDITIONAL_JUMP
		001600b0: UNCONDITIONAL_JUMP
		00160284: UNCONDITIONAL_JUMP
		00160458: UNCONDITIONAL_JUMP
		0016062c: UNCONDITIONAL_JUMP
		001608bc: UNCONDITIONAL_JUMP
		00160a90: UNCONDITIONAL_JUMP
		00160c64: UNCONDITIONAL_JUMP
		00160e38: UNCONDITIONAL_JUMP
		0016100c: UNCONDITIONAL_JUMP
		001611e0: UNCONDITIONAL_JUMP
		001613b4: UNCONDITIONAL_JUMP
		00161588: UNCONDITIONAL_JUMP
		0016175c: UNCONDITIONAL_JUMP
		00161930: UNCONDITIONAL_JUMP
		00161b04: UNCONDITIONAL_JUMP
		00161cd8: UNCONDITIONAL_JUMP
		00161eac: UNCONDITIONAL_JUMP
		00162080: UNCONDITIONAL_JUMP
		00162254: UNCONDITIONAL_JUMP
		00162428: UNCONDITIONAL_JUMP
		001625fc: UNCONDITIONAL_JUMP
		001627d0: UNCONDITIONAL_JUMP
		001629a4: UNCONDITIONAL_JUMP
		00162b78: UNCONDITIONAL_JUMP
		00162d4c: UNCONDITIONAL_JUMP
		00162f20: UNCONDITIONAL_JUMP
		001630f4: UNCONDITIONAL_JUMP
		001632c8: UNCONDITIONAL_JUMP
		0016349c: UNCONDITIONAL_JUMP
		00163670: UNCONDITIONAL_JUMP
		00163844: UNCONDITIONAL_JUMP
		00163a18: UNCONDITIONAL_JUMP
		00163bec: UNCONDITIONAL_JUMP
		00163dc0: UNCONDITIONAL_JUMP
		00163f94: UNCONDITIONAL_JUMP
		00164168: UNCONDITIONAL_JUMP
		001642a0: FALL_THROUGH
 	001642f0 sourceline 0x1426
 	001642f8 mov ax,0x0
 	00164304 ret

cRec_UseInv$0:
	[0016434c]
 	0016434c sourceline 0x1432
 	00164354 thisaddr
 	0016435c sourceline 0x1433
*	00164364 mov mar,0x3cef20
 	00164370 mov ax,mar
 	0016437c push op
 	00164384 mov op,ax
 	0016438c setfuncargs 0x0
 	00164394 mov ax,0x89ef20
 	001643a0 farcall ax
 	001643a8 pop op
 	001643b0 push ax
 	001643b8 mov mar,0x8def20
 	001643c4 mov ax,mar
 	001643d0 pop bx
 	001643d8 cmpeq bx,ax
 	001643e4 mov ax,bx
 	001643f0 jz 0x00164bf8
		00164bf8: CONDITIONAL_JUMP
		001643f8: FALL_THROUGH

	[001643f8]
		0016434c: FALL_THROUGH
 	001643f8 sourceline 0x1435
 	00164400 mov mar,0xa2ef20
 	0016440c memread4 ax
 	00164414 jz 0x00164a28
		00164a28: CONDITIONAL_JUMP
		0016441c: FALL_THROUGH

	[0016441c]
		001643f8: FALL_THROUGH
 	0016441c sourceline 0x1437
 	00164424 mov mar,0xc8ef20
 	00164430 memread4 ax
 	00164438 lnot ax
 	00164440 jz 0x00164858
		00164858: CONDITIONAL_JUMP
		00164448: FALL_THROUGH

	[00164448]
		0016441c: FALL_THROUGH
 	00164448 sourceline 0x1439
 	00164450 mov mar,0xa36f20
 	0016445c memread4 ax
 	00164464 lnot ax
 	0016446c jz 0x00164688
		00164688: CONDITIONAL_JUMP
		00164474: FALL_THROUGH

	[00164474]
		00164448: FALL_THROUGH
 	00164474 sourceline 0x143b
 	0016447c setfuncargs 0x0
 	00164484 mov ax,0x6def20
 	00164490 farcall ax
 	00164498 lnot ax
 	001644a0 jz 0x001644fc
		001644fc: CONDITIONAL_JUMP
		001644a8: FALL_THROUGH

	[001644a8]
		00164474: FALL_THROUGH
 	001644a8 mov ax,0x8b
 	001644b4 farpush ax
 	001644bc mov ax,0xdc
 	001644c8 farpush ax
 	001644d0 setfuncargs 0x2
 	001644d8 mov ax,0x6e6f20
 	001644e4 farcall ax
 	001644ec farsubsp 0x2
 	001644f4 jmp 0x00164678
		00164678: UNCONDITIONAL_JUMP

	[001644fc]
		00164474: CONDITIONAL_JUMP
 	001644fc sourceline 0x143e
 	00164504 mov ax,0x1d
 	00164510 mov bx,ax
 	0016451c mov mar,0x3cef20
 	00164528 mov ax,mar
 	00164534 push op
 	0016453c mov op,ax
 	00164544 farpush bx
 	0016454c setfuncargs 0x1
 	00164554 mov ax,0x69ef20
 	00164560 farcall ax
 	00164568 farsubsp 0x1
 	00164570 pop op
 	00164578 sourceline 0x143f
 	00164580 push op
 	00164588 mov ax,0x397
 	00164594 farpush ax
 	0016459c mov ax,0x2
 	001645a8 farpush ax
 	001645b0 mov mar,0x3cef20
 	001645bc mov ax,mar
 	001645c8 mov op,ax
 	001645d0 setfuncargs 0x2
 	001645d8 mov ax,0x6eef20
 	001645e4 farcall ax
 	001645ec farsubsp 0x2
 	001645f4 pop op
 	001645fc sourceline 0x1440
 	00164604 push op
 	0016460c mov mar,0xc96f20
 	00164618 mov ax,mar
 	00164624 mov op,ax
 	0016462c setfuncargs 0x0
 	00164634 mov ax,0x71ef20
 	00164640 farcall ax
 	00164648 pop op
 	00164650 sourceline 0x1441
 	00164658 mov ax,0x1
 	00164664 mov mar,0xc9ef20
 	00164670 memwrite4 ax
		00164678: FALL_THROUGH

	[00164678]
		001644a8: UNCONDITIONAL_JUMP
		001644fc: FALL_THROUGH
 	00164678 sourceline 0x1443
 	00164680 jmp 0x00164848
		00164848: UNCONDITIONAL_JUMP

	[00164688]
		00164448: CONDITIONAL_JUMP
 	00164688 sourceline 0x1446
 	00164690 push op
 	00164698 mov ax,0x397
 	001646a4 farpush ax
 	001646ac mov ax,0xab
 	001646b8 farpush ax
 	001646c0 mov ax,0x122
 	001646cc farpush ax
 	001646d4 mov mar,0x3cef20
 	001646e0 mov ax,mar
 	001646ec mov op,ax
 	001646f4 setfuncargs 0x3
 	001646fc mov ax,0x726f20
 	00164708 farcall ax
 	00164710 farsubsp 0x3
 	00164718 pop op
 	00164720 sourceline 0x1447
 	00164728 mov ax,0x1
 	00164734 mov bx,ax
 	00164740 mov mar,0x3cef20
 	0016474c mov ax,mar
 	00164758 push op
 	00164760 mov op,ax
 	00164768 farpush bx
 	00164770 setfuncargs 0x1
 	00164778 mov ax,0x69ef20
 	00164784 farcall ax
 	0016478c farsubsp 0x1
 	00164794 pop op
 	0016479c sourceline 0x1449
 	001647a4 push op
 	001647ac mov ax,0x2be087
 	001647b8 farpush ax
 	001647c0 mov ax,0x138
 	001647cc farpush ax
 	001647d4 mov ax,0x92
 	001647e0 farpush ax
 	001647e8 mov ax,0x0
 	001647f4 farpush ax
 	001647fc mov mar,0x3cef20
 	00164808 mov ax,mar
 	00164814 mov op,ax
 	0016481c setfuncargs 0x4
 	00164824 mov ax,0x6aef20
 	00164830 farcall ax
 	00164838 farsubsp 0x4
 	00164840 pop op
		00164848: FALL_THROUGH

	[00164848]
		00164678: UNCONDITIONAL_JUMP
		00164688: FALL_THROUGH
 	00164848 sourceline 0x144b
 	00164850 jmp 0x00164a18
		00164a18: UNCONDITIONAL_JUMP

	[00164858]
		0016441c: CONDITIONAL_JUMP
 	00164858 sourceline 0x144e
 	00164860 push op
 	00164868 mov ax,0x397
 	00164874 farpush ax
 	0016487c mov ax,0xab
 	00164888 farpush ax
 	00164890 mov ax,0x122
 	0016489c farpush ax
 	001648a4 mov mar,0x3cef20
 	001648b0 mov ax,mar
 	001648bc mov op,ax
 	001648c4 setfuncargs 0x3
 	001648cc mov ax,0x726f20
 	001648d8 farcall ax
 	001648e0 farsubsp 0x3
 	001648e8 pop op
 	001648f0 sourceline 0x144f
 	001648f8 mov ax,0x1
 	00164904 mov bx,ax
 	00164910 mov mar,0x3cef20
 	0016491c mov ax,mar
 	00164928 push op
 	00164930 mov op,ax
 	00164938 farpush bx
 	00164940 setfuncargs 0x1
 	00164948 mov ax,0x69ef20
 	00164954 farcall ax
 	0016495c farsubsp 0x1
 	00164964 pop op
 	0016496c sourceline 0x1451
 	00164974 push op
 	0016497c mov ax,0x2be087
 	00164988 farpush ax
 	00164990 mov ax,0x138
 	0016499c farpush ax
 	001649a4 mov ax,0x92
 	001649b0 farpush ax
 	001649b8 mov ax,0x0
 	001649c4 farpush ax
 	001649cc mov mar,0x3cef20
 	001649d8 mov ax,mar
 	001649e4 mov op,ax
 	001649ec setfuncargs 0x4
 	001649f4 mov ax,0x6aef20
 	00164a00 farcall ax
 	00164a08 farsubsp 0x4
 	00164a10 pop op
		00164a18: FALL_THROUGH

	[00164a18]
		00164848: UNCONDITIONAL_JUMP
		00164858: FALL_THROUGH
 	00164a18 sourceline 0x1453
 	00164a20 jmp 0x00164be8
		00164be8: UNCONDITIONAL_JUMP

	[00164a28]
		001643f8: CONDITIONAL_JUMP
 	00164a28 sourceline 0x1456
 	00164a30 push op
 	00164a38 mov ax,0x397
 	00164a44 farpush ax
 	00164a4c mov ax,0xab
 	00164a58 farpush ax
 	00164a60 mov ax,0x122
 	00164a6c farpush ax
 	00164a74 mov mar,0x3cef20
 	00164a80 mov ax,mar
 	00164a8c mov op,ax
 	00164a94 setfuncargs 0x3
 	00164a9c mov ax,0x726f20
 	00164aa8 farcall ax
 	00164ab0 farsubsp 0x3
 	00164ab8 pop op
 	00164ac0 sourceline 0x1457
 	00164ac8 mov ax,0x1
 	00164ad4 mov bx,ax
 	00164ae0 mov mar,0x3cef20
 	00164aec mov ax,mar
 	00164af8 push op
 	00164b00 mov op,ax
 	00164b08 farpush bx
 	00164b10 setfuncargs 0x1
 	00164b18 mov ax,0x69ef20
 	00164b24 farcall ax
 	00164b2c farsubsp 0x1
 	00164b34 pop op
 	00164b3c sourceline 0x1459
 	00164b44 push op
 	00164b4c mov ax,0x2be1a4
 	00164b58 farpush ax
 	00164b60 mov ax,0x138
 	00164b6c farpush ax
 	00164b74 mov ax,0x92
 	00164b80 farpush ax
 	00164b88 mov ax,0x0
 	00164b94 farpush ax
 	00164b9c mov mar,0x3cef20
 	00164ba8 mov ax,mar
 	00164bb4 mov op,ax
 	00164bbc setfuncargs 0x4
 	00164bc4 mov ax,0x6aef20
 	00164bd0 farcall ax
 	00164bd8 farsubsp 0x4
 	00164be0 pop op
		00164be8: FALL_THROUGH

	[00164be8]
		00164a18: UNCONDITIONAL_JUMP
		00164a28: FALL_THROUGH
 	00164be8 sourceline 0x145b
 	00164bf0 jmp 0x00166b48
		00166b48: UNCONDITIONAL_JUMP

	[00164bf8]
		0016434c: CONDITIONAL_JUMP
 	00164bf8 sourceline 0x145d
 	00164c00 mov mar,0x3cef20
 	00164c0c mov ax,mar
 	00164c18 push op
 	00164c20 mov op,ax
 	00164c28 setfuncargs 0x0
 	00164c30 mov ax,0x89ef20
 	00164c3c farcall ax
 	00164c44 pop op
 	00164c4c push ax
 	00164c54 mov mar,0x8cef20
 	00164c60 mov ax,mar
 	00164c6c pop bx
 	00164c74 cmpeq bx,ax
 	00164c80 mov ax,bx
 	00164c8c jnz 0x00164d48
		00164d48: CONDITIONAL_JUMP
		00164c94: FALL_THROUGH

	[00164c94]
		00164bf8: FALL_THROUGH
 	00164c94 push ax
 	00164c9c mov mar,0x3cef20
 	00164ca8 mov ax,mar
 	00164cb4 push op
 	00164cbc mov op,ax
 	00164cc4 setfuncargs 0x0
 	00164ccc mov ax,0x89ef20
 	00164cd8 farcall ax
 	00164ce0 pop op
 	00164ce8 push ax
 	00164cf0 mov mar,0x8d6f20
 	00164cfc mov ax,mar
 	00164d08 pop bx
 	00164d10 cmpeq bx,ax
 	00164d1c mov ax,bx
 	00164d28 pop bx
 	00164d30 lor bx,ax
 	00164d3c mov ax,bx
		00164d48: FALL_THROUGH

	[00164d48]
		00164bf8: CONDITIONAL_JUMP
		00164c94: FALL_THROUGH
 	00164d48 jnz 0x00164e04
		00164e04: CONDITIONAL_JUMP
		00164d50: FALL_THROUGH

	[00164d50]
		00164d48: FALL_THROUGH
 	00164d50 push ax
 	00164d58 mov mar,0x3cef20
 	00164d64 mov ax,mar
 	00164d70 push op
 	00164d78 mov op,ax
 	00164d80 setfuncargs 0x0
 	00164d88 mov ax,0x89ef20
 	00164d94 farcall ax
 	00164d9c pop op
 	00164da4 push ax
 	00164dac mov mar,0x8b6f20
 	00164db8 mov ax,mar
 	00164dc4 pop bx
 	00164dcc cmpeq bx,ax
 	00164dd8 mov ax,bx
 	00164de4 pop bx
 	00164dec lor bx,ax
 	00164df8 mov ax,bx
		00164e04: FALL_THROUGH

	[00164e04]
		00164d48: CONDITIONAL_JUMP
		00164d50: FALL_THROUGH
 	00164e04 jnz 0x00164ec0
		00164ec0: CONDITIONAL_JUMP
		00164e0c: FALL_THROUGH

	[00164e0c]
		00164e04: FALL_THROUGH
 	00164e0c push ax
 	00164e14 mov mar,0x3cef20
 	00164e20 mov ax,mar
 	00164e2c push op
 	00164e34 mov op,ax
 	00164e3c setfuncargs 0x0
 	00164e44 mov ax,0x89ef20
 	00164e50 farcall ax
 	00164e58 pop op
 	00164e60 push ax
 	00164e68 mov mar,0x98ef20
 	00164e74 mov ax,mar
 	00164e80 pop bx
 	00164e88 cmpeq bx,ax
 	00164e94 mov ax,bx
 	00164ea0 pop bx
 	00164ea8 lor bx,ax
 	00164eb4 mov ax,bx
		00164ec0: FALL_THROUGH

	[00164ec0]
		00164e04: CONDITIONAL_JUMP
		00164e0c: FALL_THROUGH
 	00164ec0 jnz 0x00164f7c
		00164f7c: CONDITIONAL_JUMP
		00164ec8: FALL_THROUGH

	[00164ec8]
		00164ec0: FALL_THROUGH
 	00164ec8 push ax
 	00164ed0 mov mar,0x3cef20
 	00164edc mov ax,mar
 	00164ee8 push op
 	00164ef0 mov op,ax
 	00164ef8 setfuncargs 0x0
 	00164f00 mov ax,0x89ef20
 	00164f0c farcall ax
 	00164f14 pop op
 	00164f1c push ax
 	00164f24 mov mar,0x8bef20
 	00164f30 mov ax,mar
 	00164f3c pop bx
 	00164f44 cmpeq bx,ax
 	00164f50 mov ax,bx
 	00164f5c pop bx
 	00164f64 lor bx,ax
 	00164f70 mov ax,bx
		00164f7c: FALL_THROUGH

	[00164f7c]
		00164ec0: CONDITIONAL_JUMP
		00164ec8: FALL_THROUGH
 	00164f7c jnz 0x00165038
		00165038: CONDITIONAL_JUMP
		00164f84: FALL_THROUGH

	[00164f84]
		00164f7c: FALL_THROUGH
 	00164f84 push ax
 	00164f8c mov mar,0x3cef20
 	00164f98 mov ax,mar
 	00164fa4 push op
 	00164fac mov op,ax
 	00164fb4 setfuncargs 0x0
 	00164fbc mov ax,0x89ef20
 	00164fc8 farcall ax
 	00164fd0 pop op
 	00164fd8 push ax
 	00164fe0 mov mar,0x8c6f20
 	00164fec mov ax,mar
 	00164ff8 pop bx
 	00165000 cmpeq bx,ax
 	0016500c mov ax,bx
 	00165018 pop bx
 	00165020 lor bx,ax
 	0016502c mov ax,bx
		00165038: FALL_THROUGH

	[00165038]
		00164f7c: CONDITIONAL_JUMP
		00164f84: FALL_THROUGH
 	00165038 jnz 0x001650f4
		001650f4: CONDITIONAL_JUMP
		00165040: FALL_THROUGH

	[00165040]
		00165038: FALL_THROUGH
 	00165040 push ax
 	00165048 mov mar,0x3cef20
 	00165054 mov ax,mar
 	00165060 push op
 	00165068 mov op,ax
 	00165070 setfuncargs 0x0
 	00165078 mov ax,0x89ef20
 	00165084 farcall ax
 	0016508c pop op
 	00165094 push ax
 	0016509c mov mar,0x8a6f20
 	001650a8 mov ax,mar
 	001650b4 pop bx
 	001650bc cmpeq bx,ax
 	001650c8 mov ax,bx
 	001650d4 pop bx
 	001650dc lor bx,ax
 	001650e8 mov ax,bx
		001650f4: FALL_THROUGH

	[001650f4]
		00165038: CONDITIONAL_JUMP
		00165040: FALL_THROUGH
 	001650f4 jnz 0x001651b0
		001651b0: CONDITIONAL_JUMP
		001650fc: FALL_THROUGH

	[001650fc]
		001650f4: FALL_THROUGH
 	001650fc push ax
 	00165104 mov mar,0x3cef20
 	00165110 mov ax,mar
 	0016511c push op
 	00165124 mov op,ax
 	0016512c setfuncargs 0x0
 	00165134 mov ax,0x89ef20
 	00165140 farcall ax
 	00165148 pop op
 	00165150 push ax
 	00165158 mov mar,0x7def20
 	00165164 mov ax,mar
 	00165170 pop bx
 	00165178 cmpeq bx,ax
 	00165184 mov ax,bx
 	00165190 pop bx
 	00165198 lor bx,ax
 	001651a4 mov ax,bx
		001651b0: FALL_THROUGH

	[001651b0]
		001650f4: CONDITIONAL_JUMP
		001650fc: FALL_THROUGH
 	001651b0 jnz 0x0016526c
		0016526c: CONDITIONAL_JUMP
		001651b8: FALL_THROUGH

	[001651b8]
		001651b0: FALL_THROUGH
 	001651b8 push ax
 	001651c0 mov mar,0x3cef20
 	001651cc mov ax,mar
 	001651d8 push op
 	001651e0 mov op,ax
 	001651e8 setfuncargs 0x0
 	001651f0 mov ax,0x89ef20
 	001651fc farcall ax
 	00165204 pop op
 	0016520c push ax
 	00165214 mov mar,0x9f6f20
 	00165220 mov ax,mar
 	0016522c pop bx
 	00165234 cmpeq bx,ax
 	00165240 mov ax,bx
 	0016524c pop bx
 	00165254 lor bx,ax
 	00165260 mov ax,bx
		0016526c: FALL_THROUGH

	[0016526c]
		001651b0: CONDITIONAL_JUMP
		001651b8: FALL_THROUGH
 	0016526c jnz 0x00165328
		00165328: CONDITIONAL_JUMP
		00165274: FALL_THROUGH

	[00165274]
		0016526c: FALL_THROUGH
 	00165274 push ax
 	0016527c mov mar,0x3cef20
 	00165288 mov ax,mar
 	00165294 push op
 	0016529c mov op,ax
 	001652a4 setfuncargs 0x0
 	001652ac mov ax,0x89ef20
 	001652b8 farcall ax
 	001652c0 pop op
 	001652c8 push ax
 	001652d0 mov mar,0x9eef20
 	001652dc mov ax,mar
 	001652e8 pop bx
 	001652f0 cmpeq bx,ax
 	001652fc mov ax,bx
 	00165308 pop bx
 	00165310 lor bx,ax
 	0016531c mov ax,bx
		00165328: FALL_THROUGH

	[00165328]
		0016526c: CONDITIONAL_JUMP
		00165274: FALL_THROUGH
 	00165328 jnz 0x001653e4
		001653e4: CONDITIONAL_JUMP
		00165330: FALL_THROUGH

	[00165330]
		00165328: FALL_THROUGH
 	00165330 push ax
 	00165338 mov mar,0x3cef20
 	00165344 mov ax,mar
 	00165350 push op
 	00165358 mov op,ax
 	00165360 setfuncargs 0x0
 	00165368 mov ax,0x89ef20
 	00165374 farcall ax
 	0016537c pop op
 	00165384 push ax
 	0016538c mov mar,0x99ef20
 	00165398 mov ax,mar
 	001653a4 pop bx
 	001653ac cmpeq bx,ax
 	001653b8 mov ax,bx
 	001653c4 pop bx
 	001653cc lor bx,ax
 	001653d8 mov ax,bx
		001653e4: FALL_THROUGH

	[001653e4]
		00165328: CONDITIONAL_JUMP
		00165330: FALL_THROUGH
 	001653e4 jnz 0x001654a0
		001654a0: CONDITIONAL_JUMP
		001653ec: FALL_THROUGH

	[001653ec]
		001653e4: FALL_THROUGH
 	001653ec push ax
 	001653f4 mov mar,0x3cef20
 	00165400 mov ax,mar
 	0016540c push op
 	00165414 mov op,ax
 	0016541c setfuncargs 0x0
 	00165424 mov ax,0x89ef20
 	00165430 farcall ax
 	00165438 pop op
 	00165440 push ax
 	00165448 mov mar,0x9e6f20
 	00165454 mov ax,mar
 	00165460 pop bx
 	00165468 cmpeq bx,ax
 	00165474 mov ax,bx
 	00165480 pop bx
 	00165488 lor bx,ax
 	00165494 mov ax,bx
		001654a0: FALL_THROUGH

	[001654a0]
		001653e4: CONDITIONAL_JUMP
		001653ec: FALL_THROUGH
 	001654a0 jz 0x001664f4
		001664f4: CONDITIONAL_JUMP
		001654a8: FALL_THROUGH

	[001654a8]
		001654a0: FALL_THROUGH
 	001654a8 sourceline 0x1462
 	001654b0 mov mar,0x776f20
 	001654bc memread4 ax
 	001654c4 lnot ax
 	001654cc jz 0x001658a0
		001658a0: CONDITIONAL_JUMP
		001654d4: FALL_THROUGH

	[001654d4]
		001654a8: FALL_THROUGH
 	001654d4 sourceline 0x1464
 	001654dc mov mar,0xc8ef20
 	001654e8 memread4 ax
 	001654f0 lnot ax
 	001654f8 jz 0x001656d0
		001656d0: CONDITIONAL_JUMP
		00165500: FALL_THROUGH

	[00165500]
		001654d4: FALL_THROUGH
 	00165500 sourceline 0x1466
 	00165508 push op
 	00165510 mov ax,0x397
 	0016551c farpush ax
 	00165524 mov ax,0xab
 	00165530 farpush ax
 	00165538 mov ax,0x122
 	00165544 farpush ax
 	0016554c mov mar,0x3cef20
 	00165558 mov ax,mar
 	00165564 mov op,ax
 	0016556c setfuncargs 0x3
 	00165574 mov ax,0x726f20
 	00165580 farcall ax
 	00165588 farsubsp 0x3
 	00165590 pop op
 	00165598 sourceline 0x1468
 	001655a0 mov ax,0x1
 	001655ac mov bx,ax
 	001655b8 mov mar,0x3cef20
 	001655c4 mov ax,mar
 	001655d0 push op
 	001655d8 mov op,ax
 	001655e0 farpush bx
 	001655e8 setfuncargs 0x1
 	001655f0 mov ax,0x69ef20
 	001655fc farcall ax
 	00165604 farsubsp 0x1
 	0016560c pop op
 	00165614 sourceline 0x146a
 	0016561c push op
 	00165624 mov ax,0x2be1a4
 	00165630 farpush ax
 	00165638 mov ax,0x138
 	00165644 farpush ax
 	0016564c mov ax,0x92
 	00165658 farpush ax
 	00165660 mov ax,0x0
 	0016566c farpush ax
 	00165674 mov mar,0x3cef20
 	00165680 mov ax,mar
 	0016568c mov op,ax
 	00165694 setfuncargs 0x4
 	0016569c mov ax,0x6aef20
 	001656a8 farcall ax
 	001656b0 farsubsp 0x4
 	001656b8 pop op
 	001656c0 sourceline 0x146b
 	001656c8 jmp 0x00165890
		00165890: UNCONDITIONAL_JUMP

	[001656d0]
		001654d4: CONDITIONAL_JUMP
 	001656d0 sourceline 0x146e
 	001656d8 push op
 	001656e0 mov ax,0x397
 	001656ec farpush ax
 	001656f4 mov ax,0xab
 	00165700 farpush ax
 	00165708 mov ax,0x122
 	00165714 farpush ax
 	0016571c mov mar,0x3cef20
 	00165728 mov ax,mar
 	00165734 mov op,ax
 	0016573c setfuncargs 0x3
 	00165744 mov ax,0x726f20
 	00165750 farcall ax
 	00165758 farsubsp 0x3
 	00165760 pop op
 	00165768 sourceline 0x1470
 	00165770 mov ax,0x1
 	0016577c mov bx,ax
 	00165788 mov mar,0x3cef20
 	00165794 mov ax,mar
 	001657a0 push op
 	001657a8 mov op,ax
 	001657b0 farpush bx
 	001657b8 setfuncargs 0x1
 	001657c0 mov ax,0x69ef20
 	001657cc farcall ax
 	001657d4 farsubsp 0x1
 	001657dc pop op
 	001657e4 sourceline 0x1472
 	001657ec push op
 	001657f4 mov ax,0x2be087
 	00165800 farpush ax
 	00165808 mov ax,0x138
 	00165814 farpush ax
 	0016581c mov ax,0x92
 	00165828 farpush ax
 	00165830 mov ax,0x0
 	0016583c farpush ax
 	00165844 mov mar,0x3cef20
 	00165850 mov ax,mar
 	0016585c mov op,ax
 	00165864 setfuncargs 0x4
 	0016586c mov ax,0x6aef20
 	00165878 farcall ax
 	00165880 farsubsp 0x4
 	00165888 pop op
		00165890: FALL_THROUGH

	[00165890]
		00165500: UNCONDITIONAL_JUMP
		001656d0: FALL_THROUGH
 	00165890 sourceline 0x1474
 	00165898 jmp 0x001664e4
		001664e4: UNCONDITIONAL_JUMP

	[001658a0]
		001654a8: CONDITIONAL_JUMP
 	001658a0 sourceline 0x1477
 	001658a8 setfuncargs 0x0
 	001658b0 mov ax,0x6def20
 	001658bc farcall ax
 	001658c4 lnot ax
 	001658cc jz 0x00165928
		00165928: CONDITIONAL_JUMP
		001658d4: FALL_THROUGH

	[001658d4]
		001658a0: FALL_THROUGH
 	001658d4 mov ax,0x8b
 	001658e0 farpush ax
 	001658e8 mov ax,0xdc
 	001658f4 farpush ax
 	001658fc setfuncargs 0x2
 	00165904 mov ax,0x6e6f20
 	00165910 farcall ax
 	00165918 farsubsp 0x2
 	00165920 jmp 0x001664e4
		001664e4: UNCONDITIONAL_JUMP

	[00165928]
		001658a0: CONDITIONAL_JUMP
 	00165928 sourceline 0x147a
 	00165930 mov ax,0x1
 	0016593c farpush ax
 	00165944 mov ax,0x2
 	00165950 farpush ax
 	00165958 setfuncargs 0x2
 	00165960 mov ax,0x756f20
 	0016596c farcall ax
 	00165974 farsubsp 0x2
 	0016597c sourceline 0x147b
 	00165984 push op
 	0016598c mov ax,0x397
 	00165998 farpush ax
 	001659a0 mov ax,0x2
 	001659ac farpush ax
 	001659b4 mov mar,0x3cef20
 	001659c0 mov ax,mar
 	001659cc mov op,ax
 	001659d4 setfuncargs 0x2
 	001659dc mov ax,0x6eef20
 	001659e8 farcall ax
 	001659f0 farsubsp 0x2
 	001659f8 pop op
 	00165a00 sourceline 0x147c
 	00165a08 mov ax,0x1d
 	00165a14 mov bx,ax
 	00165a20 mov mar,0x3cef20
 	00165a2c mov ax,mar
 	00165a38 push op
 	00165a40 mov op,ax
 	00165a48 farpush bx
 	00165a50 setfuncargs 0x1
 	00165a58 mov ax,0x69ef20
 	00165a64 farcall ax
 	00165a6c farsubsp 0x1
 	00165a74 pop op
 	00165a7c sourceline 0x147d
 	00165a84 mov mar,0xa3ef20
 	00165a90 memread4 ax
 	00165a98 jz 0x00165ba8
		00165ba8: CONDITIONAL_JUMP
		00165aa0: FALL_THROUGH

	[00165aa0]
		00165928: FALL_THROUGH
 	00165aa0 sourceline 0x147f
 	00165aa8 push op
 	00165ab0 mov ax,0x2be0ce
 	00165abc farpush ax
 	00165ac4 mov mar,0x3cef20
 	00165ad0 mov ax,mar
 	00165adc mov op,ax
 	00165ae4 setfuncargs 0x1
 	00165aec mov ax,0x6f6f20
 	00165af8 farcall ax
 	00165b00 farsubsp 0x1
 	00165b08 pop op
 	00165b10 sourceline 0x1480
 	00165b18 push op
 	00165b20 mov ax,0x2be0e8
 	00165b2c farpush ax
 	00165b34 mov mar,0xa46f20
 	00165b40 mov ax,mar
 	00165b4c mov op,ax
 	00165b54 setfuncargs 0x1
 	00165b5c mov ax,0x6f6f20
 	00165b68 farcall ax
 	00165b70 farsubsp 0x1
 	00165b78 pop op
 	00165b80 sourceline 0x1481
 	00165b88 mov ax,0x0
 	00165b94 mov mar,0xa3ef20
 	00165ba0 memwrite4 ax
		00165ba8: FALL_THROUGH

	[00165ba8]
		00165928: CONDITIONAL_JUMP
		00165aa0: FALL_THROUGH
 	00165ba8 sourceline 0x1483
 	00165bb0 push op
 	00165bb8 mov ax,0x1f
 	00165bc4 farpush ax
 	00165bcc mov mar,0x3cef20
 	00165bd8 mov ax,mar
 	00165be4 mov op,ax
 	00165bec setfuncargs 0x1
 	00165bf4 mov ax,0x51ef20
 	00165c00 farcall ax
 	00165c08 farsubsp 0x1
 	00165c10 pop op
 	00165c18 sourceline 0x1484
 	00165c20 mov ax,0xe5
 	00165c2c mov bx,ax
 	00165c38 mov mar,0x3cef20
 	00165c44 mov ax,mar
 	00165c50 push op
 	00165c58 mov op,ax
 	00165c60 farpush bx
 	00165c68 setfuncargs 0x1
 	00165c70 mov ax,0x70ef20
 	00165c7c farcall ax
 	00165c84 farsubsp 0x1
 	00165c8c pop op
 	00165c94 sourceline 0x1485
 	00165c9c mov ax,0x83
 	00165ca8 mov bx,ax
 	00165cb4 mov mar,0x3cef20
 	00165cc0 mov ax,mar
 	00165ccc push op
 	00165cd4 mov op,ax
 	00165cdc farpush bx
 	00165ce4 setfuncargs 0x1
 	00165cec mov ax,0x526f20
 	00165cf8 farcall ax
 	00165d00 farsubsp 0x1
 	00165d08 pop op
 	00165d10 sourceline 0x1486
 	00165d18 push op
 	00165d20 mov ax,0x426
 	00165d2c farpush ax
 	00165d34 mov ax,0x397
 	00165d40 farpush ax
 	00165d48 mov ax,0x0
 	00165d54 farpush ax
 	00165d5c mov ax,0x3
 	00165d68 farpush ax
 	00165d70 mov ax,0x0
 	00165d7c farpush ax
 	00165d84 mov mar,0x3cef20
 	00165d90 mov ax,mar
 	00165d9c mov op,ax
 	00165da4 setfuncargs 0x5
 	00165dac mov ax,0x536f20
 	00165db8 farcall ax
 	00165dc0 farsubsp 0x5
 	00165dc8 pop op
 	00165dd0 sourceline 0x1488
 	00165dd8 mov ax,0x3
 	00165de4 farpush ax
 	00165dec setfuncargs 0x1
 	00165df4 mov ax,0x4a6f20
 	00165e00 farcall ax
 	00165e08 farsubsp 0x1
 	00165e10 mov mar,sp
 	00165e1c memwrite4 ax
 	00165e24 add sp,0x4
 	00165e30 sourceline 0x1489
 	00165e38 stackptr 0x4
 	00165e40 memread4 ax
 	00165e48 push ax
 	00165e50 mov ax,0x0
 	00165e5c pop bx
 	00165e64 cmpeq bx,ax
 	00165e70 mov ax,bx
 	00165e7c jz 0x00165ef4
		00165ef4: CONDITIONAL_JUMP
		00165e84: FALL_THROUGH

	[00165e84]
		00165ba8: FALL_THROUGH
 	00165e84 push op
 	00165e8c mov ax,0x2c8717
 	00165e98 farpush ax
 	00165ea0 mov mar,0x3cef20
 	00165eac mov ax,mar
 	00165eb8 mov op,ax
 	00165ec0 setfuncargs 0x1
 	00165ec8 mov ax,0x6f6f20
 	00165ed4 farcall ax
 	00165edc farsubsp 0x1
 	00165ee4 pop op
 	00165eec jmp 0x001660ec
		001660ec: UNCONDITIONAL_JUMP

	[00165ef4]
		00165ba8: CONDITIONAL_JUMP
 	00165ef4 sourceline 0x148a
 	00165efc stackptr 0x4
 	00165f04 memread4 ax
 	00165f0c push ax
 	00165f14 mov ax,0x1
 	00165f20 pop bx
 	00165f28 cmpeq bx,ax
 	00165f34 mov ax,bx
 	00165f40 jz 0x00165fb8
		00165fb8: CONDITIONAL_JUMP
		00165f48: FALL_THROUGH

	[00165f48]
		00165ef4: FALL_THROUGH
 	00165f48 push op
 	00165f50 mov ax,0x2c8740
 	00165f5c farpush ax
 	00165f64 mov mar,0x3cef20
 	00165f70 mov ax,mar
 	00165f7c mov op,ax
 	00165f84 setfuncargs 0x1
 	00165f8c mov ax,0x6f6f20
 	00165f98 farcall ax
 	00165fa0 farsubsp 0x1
 	00165fa8 pop op
 	00165fb0 jmp 0x001660ec
		001660ec: UNCONDITIONAL_JUMP

	[00165fb8]
		00165ef4: CONDITIONAL_JUMP
 	00165fb8 sourceline 0x148b
 	00165fc0 stackptr 0x4
 	00165fc8 memread4 ax
 	00165fd0 push ax
 	00165fd8 mov ax,0x2
 	00165fe4 pop bx
 	00165fec cmpeq bx,ax
 	00165ff8 mov ax,bx
 	00166004 jz 0x0016607c
		0016607c: CONDITIONAL_JUMP
		0016600c: FALL_THROUGH

	[0016600c]
		00165fb8: FALL_THROUGH
 	0016600c push op
 	00166014 mov ax,0x2c8769
 	00166020 farpush ax
 	00166028 mov mar,0x3cef20
 	00166034 mov ax,mar
 	00166040 mov op,ax
 	00166048 setfuncargs 0x1
 	00166050 mov ax,0x6f6f20
 	0016605c farcall ax
 	00166064 farsubsp 0x1
 	0016606c pop op
 	00166074 jmp 0x001660ec
		001660ec: UNCONDITIONAL_JUMP

	[0016607c]
		00165fb8: CONDITIONAL_JUMP
 	0016607c sourceline 0x148c
 	00166084 push op
 	0016608c mov ax,0x2c8792
 	00166098 farpush ax
 	001660a0 mov mar,0x3cef20
 	001660ac mov ax,mar
 	001660b8 mov op,ax
 	001660c0 setfuncargs 0x1
 	001660c8 mov ax,0x6f6f20
 	001660d4 farcall ax
 	001660dc farsubsp 0x1
 	001660e4 pop op
		001660ec: FALL_THROUGH

	[001660ec]
		00165e84: UNCONDITIONAL_JUMP
		00165f48: UNCONDITIONAL_JUMP
		0016600c: UNCONDITIONAL_JUMP
		0016607c: FALL_THROUGH
 	001660ec sourceline 0x148e
 	001660f4 push op
 	001660fc mov ax,0x2be198
 	00166108 farpush ax
 	00166110 mov mar,0xa46f20
 	0016611c mov ax,mar
 	00166128 mov op,ax
 	00166130 setfuncargs 0x1
 	00166138 mov ax,0x6f6f20
 	00166144 farcall ax
 	0016614c farsubsp 0x1
 	00166154 pop op
 	0016615c sourceline 0x148f
 	00166164 push op
 	0016616c mov ax,0x427
 	00166178 farpush ax
 	00166180 mov ax,0x397
 	0016618c farpush ax
 	00166194 mov ax,0x0
 	001661a0 farpush ax
 	001661a8 mov ax,0x3
 	001661b4 farpush ax
 	001661bc mov ax,0x0
 	001661c8 farpush ax
 	001661d0 mov mar,0x3cef20
 	001661dc mov ax,mar
 	001661e8 mov op,ax
 	001661f0 setfuncargs 0x5
 	001661f8 mov ax,0x536f20
 	00166204 farcall ax
 	0016620c farsubsp 0x5
 	00166214 pop op
 	0016621c sourceline 0x1490
 	00166224 push op
 	0016622c mov ax,0x1b
 	00166238 farpush ax
 	00166240 mov mar,0x3cef20
 	0016624c mov ax,mar
 	00166258 mov op,ax
 	00166260 setfuncargs 0x1
 	00166268 mov ax,0x51ef20
 	00166274 farcall ax
 	0016627c farsubsp 0x1
 	00166284 pop op
 	0016628c sourceline 0x1491
 	00166294 mov ax,0xdc
 	001662a0 mov bx,ax
 	001662ac mov mar,0x3cef20
 	001662b8 mov ax,mar
 	001662c4 push op
 	001662cc mov op,ax
 	001662d4 farpush bx
 	001662dc setfuncargs 0x1
 	001662e4 mov ax,0x70ef20
 	001662f0 farcall ax
 	001662f8 farsubsp 0x1
 	00166300 pop op
 	00166308 sourceline 0x1492
 	00166310 mov ax,0x8b
 	0016631c mov bx,ax
 	00166328 mov mar,0x3cef20
 	00166334 mov ax,mar
 	00166340 push op
 	00166348 mov op,ax
 	00166350 farpush bx
 	00166358 setfuncargs 0x1
 	00166360 mov ax,0x526f20
 	0016636c farcall ax
 	00166374 farsubsp 0x1
 	0016637c pop op
 	00166384 sourceline 0x1493
 	0016638c mov ax,0x2
 	00166398 mov bx,ax
 	001663a4 mov mar,0x3cef20
 	001663b0 mov ax,mar
 	001663bc push op
 	001663c4 mov op,ax
 	001663cc farpush bx
 	001663d4 setfuncargs 0x1
 	001663dc mov ax,0x766f20
 	001663e8 farcall ax
 	001663f0 farsubsp 0x1
 	001663f8 pop op
 	00166400 sourceline 0x1494
 	00166408 mov ax,0x0
 	00166414 mov bx,ax
 	00166420 mov mar,0x3cef20
 	0016642c mov ax,mar
 	00166438 push op
 	00166440 mov op,ax
 	00166448 farpush bx
 	00166450 setfuncargs 0x1
 	00166458 mov ax,0x436f20
 	00166464 farcall ax
 	0016646c farsubsp 0x1
 	00166474 pop op
 	0016647c sourceline 0x1495
 	00166484 mov ax,0x85
 	00166490 farpush ax
 	00166498 mov ax,0x2
 	001664a4 farpush ax
 	001664ac setfuncargs 0x2
 	001664b4 mov ax,0x756f20
 	001664c0 farcall ax
 	001664c8 farsubsp 0x2
 	001664d0 sourceline 0x1496
 	001664d8 sub sp,0x4
		001664e4: FALL_THROUGH

	[001664e4]
		00165890: UNCONDITIONAL_JUMP
		001658d4: UNCONDITIONAL_JUMP
		001660ec: FALL_THROUGH
 	001664e4 sourceline 0x1498
 	001664ec jmp 0x00166b48
		00166b48: UNCONDITIONAL_JUMP

	[001664f4]
		001654a0: CONDITIONAL_JUMP
 	001664f4 sourceline 0x149b
 	001664fc mov mar,0x3cef20
 	00166508 mov ax,mar
 	00166514 push op
 	0016651c mov op,ax
 	00166524 setfuncargs 0x0
 	0016652c mov ax,0x89ef20
 	00166538 farcall ax
 	00166540 pop op
 	00166548 push ax
 	00166550 mov mar,0x8aef20
 	0016655c mov ax,mar
 	00166568 pop bx
 	00166570 cmpeq bx,ax
 	0016657c mov ax,bx
 	00166588 jz 0x00166b48
		00166b48: CONDITIONAL_JUMP
		00166590: FALL_THROUGH

	[00166590]
		001664f4: FALL_THROUGH
 	00166590 sourceline 0x149d
 	00166598 mov mar,0x776f20
 	001665a4 memread4 ax
 	001665ac lnot ax
 	001665b4 jz 0x00166988
		00166988: CONDITIONAL_JUMP
		001665bc: FALL_THROUGH

	[001665bc]
		00166590: FALL_THROUGH
 	001665bc sourceline 0x149f
 	001665c4 mov mar,0xc8ef20
 	001665d0 memread4 ax
 	001665d8 lnot ax
 	001665e0 jz 0x001667b8
		001667b8: CONDITIONAL_JUMP
		001665e8: FALL_THROUGH

	[001665e8]
		001665bc: FALL_THROUGH
 	001665e8 sourceline 0x14a1
 	001665f0 push op
 	001665f8 mov ax,0x397
 	00166604 farpush ax
 	0016660c mov ax,0xab
 	00166618 farpush ax
 	00166620 mov ax,0x122
 	0016662c farpush ax
 	00166634 mov mar,0x3cef20
 	00166640 mov ax,mar
 	0016664c mov op,ax
 	00166654 setfuncargs 0x3
 	0016665c mov ax,0x726f20
 	00166668 farcall ax
 	00166670 farsubsp 0x3
 	00166678 pop op
 	00166680 sourceline 0x14a3
 	00166688 mov ax,0x1
 	00166694 mov bx,ax
 	001666a0 mov mar,0x3cef20
 	001666ac mov ax,mar
 	001666b8 push op
 	001666c0 mov op,ax
 	001666c8 farpush bx
 	001666d0 setfuncargs 0x1
 	001666d8 mov ax,0x69ef20
 	001666e4 farcall ax
 	001666ec farsubsp 0x1
 	001666f4 pop op
 	001666fc sourceline 0x14a5
 	00166704 push op
 	0016670c mov ax,0x2be1a4
 	00166718 farpush ax
 	00166720 mov ax,0x138
 	0016672c farpush ax
 	00166734 mov ax,0x92
 	00166740 farpush ax
 	00166748 mov ax,0x0
 	00166754 farpush ax
 	0016675c mov mar,0x3cef20
 	00166768 mov ax,mar
 	00166774 mov op,ax
 	0016677c setfuncargs 0x4
 	00166784 mov ax,0x6aef20
 	00166790 farcall ax
 	00166798 farsubsp 0x4
 	001667a0 pop op
 	001667a8 sourceline 0x14a6
 	001667b0 jmp 0x00166978
		00166978: UNCONDITIONAL_JUMP

	[001667b8]
		001665bc: CONDITIONAL_JUMP
 	001667b8 sourceline 0x14a9
 	001667c0 push op
 	001667c8 mov ax,0x397
 	001667d4 farpush ax
 	001667dc mov ax,0xab
 	001667e8 farpush ax
 	001667f0 mov ax,0x122
 	001667fc farpush ax
 	00166804 mov mar,0x3cef20
 	00166810 mov ax,mar
 	0016681c mov op,ax
 	00166824 setfuncargs 0x3
 	0016682c mov ax,0x726f20
 	00166838 farcall ax
 	00166840 farsubsp 0x3
 	00166848 pop op
 	00166850 sourceline 0x14ab
 	00166858 mov ax,0x1
 	00166864 mov bx,ax
 	00166870 mov mar,0x3cef20
 	0016687c mov ax,mar
 	00166888 push op
 	00166890 mov op,ax
 	00166898 farpush bx
 	001668a0 setfuncargs 0x1
 	001668a8 mov ax,0x69ef20
 	001668b4 farcall ax
 	001668bc farsubsp 0x1
 	001668c4 pop op
 	001668cc sourceline 0x14ad
 	001668d4 push op
 	001668dc mov ax,0x2be23c
 	001668e8 farpush ax
 	001668f0 mov ax,0x138
 	001668fc farpush ax
 	00166904 mov ax,0x92
 	00166910 farpush ax
 	00166918 mov ax,0x0
 	00166924 farpush ax
 	0016692c mov mar,0x3cef20
 	00166938 mov ax,mar
 	00166944 mov op,ax
 	0016694c setfuncargs 0x4
 	00166954 mov ax,0x6aef20
 	00166960 farcall ax
 	00166968 farsubsp 0x4
 	00166970 pop op
		00166978: FALL_THROUGH

	[00166978]
		001665e8: UNCONDITIONAL_JUMP
		001667b8: FALL_THROUGH
 	00166978 sourceline 0x14af
 	00166980 jmp 0x00166b48
		00166b48: UNCONDITIONAL_JUMP

	[00166988]
		00166590: CONDITIONAL_JUMP
 	00166988 sourceline 0x14b2
 	00166990 push op
 	00166998 mov ax,0x397
 	001669a4 farpush ax
 	001669ac mov ax,0xab
 	001669b8 farpush ax
 	001669c0 mov ax,0x122
 	001669cc farpush ax
 	001669d4 mov mar,0x3cef20
 	001669e0 mov ax,mar
 	001669ec mov op,ax
 	001669f4 setfuncargs 0x3
 	001669fc mov ax,0x726f20
 	00166a08 farcall ax
 	00166a10 farsubsp 0x3
 	00166a18 pop op
 	00166a20 sourceline 0x14b4
 	00166a28 mov ax,0x1
 	00166a34 mov bx,ax
 	00166a40 mov mar,0x3cef20
 	00166a4c mov ax,mar
 	00166a58 push op
 	00166a60 mov op,ax
 	00166a68 farpush bx
 	00166a70 setfuncargs 0x1
 	00166a78 mov ax,0x69ef20
 	00166a84 farcall ax
 	00166a8c farsubsp 0x1
 	00166a94 pop op
 	00166a9c sourceline 0x14b6
 	00166aa4 push op
 	00166aac mov ax,0x2be23c
 	00166ab8 farpush ax
 	00166ac0 mov ax,0x138
 	00166acc farpush ax
 	00166ad4 mov ax,0x92
 	00166ae0 farpush ax
 	00166ae8 mov ax,0x0
 	00166af4 farpush ax
 	00166afc mov mar,0x3cef20
 	00166b08 mov ax,mar
 	00166b14 mov op,ax
 	00166b1c setfuncargs 0x4
 	00166b24 mov ax,0x6aef20
 	00166b30 farcall ax
 	00166b38 farsubsp 0x4
 	00166b40 pop op
		00166b48: FALL_THROUGH

	[00166b48]
		00164be8: UNCONDITIONAL_JUMP
		001664e4: UNCONDITIONAL_JUMP
		001664f4: CONDITIONAL_JUMP
		00166978: UNCONDITIONAL_JUMP
		00166988: FALL_THROUGH
 	00166b48 sourceline 0x14b9
 	00166b50 mov ax,0x0
 	00166b5c ret

cPharmacyMan_UseInv$0:
	[00166b60]
 	00166b60 sourceline 0x14be
 	00166b68 thisaddr
 	00166b70 sourceline 0x14bf
*	00166b78 mov mar,0x42ef20
 	00166b84 push mar
 	00166b8c pop mar
 	00166b94 memread.ptr ax
 	00166b9c push ax
 	00166ba4 pop mar
 	00166bac mov ax,mar
 	00166bb8 push op
 	00166bc0 mov op,ax
 	00166bc8 setfuncargs 0x0
 	00166bd0 mov ax,0x89ef20
 	00166bdc farcall ax
 	00166be4 pop op
 	00166bec push ax
 	00166bf4 mov mar,0x8cef20
 	00166c00 mov ax,mar
 	00166c0c pop bx
 	00166c14 cmpeq bx,ax
 	00166c20 mov ax,bx
 	00166c2c jnz 0x00166d10
		00166d10: CONDITIONAL_JUMP
		00166c34: FALL_THROUGH

	[00166c34]
		00166b60: FALL_THROUGH
 	00166c34 push ax
 	00166c3c mov mar,0x42ef20
 	00166c48 push mar
 	00166c50 pop mar
 	00166c58 memread.ptr ax
 	00166c60 push ax
 	00166c68 pop mar
 	00166c70 mov ax,mar
 	00166c7c push op
 	00166c84 mov op,ax
 	00166c8c setfuncargs 0x0
 	00166c94 mov ax,0x89ef20
 	00166ca0 farcall ax
 	00166ca8 pop op
 	00166cb0 push ax
 	00166cb8 mov mar,0x8d6f20
 	00166cc4 mov ax,mar
 	00166cd0 pop bx
 	00166cd8 cmpeq bx,ax
 	00166ce4 mov ax,bx
 	00166cf0 pop bx
 	00166cf8 lor bx,ax
 	00166d04 mov ax,bx
		00166d10: FALL_THROUGH

	[00166d10]
		00166b60: CONDITIONAL_JUMP
		00166c34: FALL_THROUGH
 	00166d10 jnz 0x00166df4
		00166df4: CONDITIONAL_JUMP
		00166d18: FALL_THROUGH

	[00166d18]
		00166d10: FALL_THROUGH
 	00166d18 push ax
 	00166d20 mov mar,0x42ef20
 	00166d2c push mar
 	00166d34 pop mar
 	00166d3c memread.ptr ax
 	00166d44 push ax
 	00166d4c pop mar
 	00166d54 mov ax,mar
 	00166d60 push op
 	00166d68 mov op,ax
 	00166d70 setfuncargs 0x0
 	00166d78 mov ax,0x89ef20
 	00166d84 farcall ax
 	00166d8c pop op
 	00166d94 push ax
 	00166d9c mov mar,0x8b6f20
 	00166da8 mov ax,mar
 	00166db4 pop bx
 	00166dbc cmpeq bx,ax
 	00166dc8 mov ax,bx
 	00166dd4 pop bx
 	00166ddc lor bx,ax
 	00166de8 mov ax,bx
		00166df4: FALL_THROUGH

	[00166df4]
		00166d10: CONDITIONAL_JUMP
		00166d18: FALL_THROUGH
 	00166df4 jnz 0x00166ed8
		00166ed8: CONDITIONAL_JUMP
		00166dfc: FALL_THROUGH

	[00166dfc]
		00166df4: FALL_THROUGH
 	00166dfc push ax
 	00166e04 mov mar,0x42ef20
 	00166e10 push mar
 	00166e18 pop mar
 	00166e20 memread.ptr ax
 	00166e28 push ax
 	00166e30 pop mar
 	00166e38 mov ax,mar
 	00166e44 push op
 	00166e4c mov op,ax
 	00166e54 setfuncargs 0x0
 	00166e5c mov ax,0x89ef20
 	00166e68 farcall ax
 	00166e70 pop op
 	00166e78 push ax
 	00166e80 mov mar,0x8bef20
 	00166e8c mov ax,mar
 	00166e98 pop bx
 	00166ea0 cmpeq bx,ax
 	00166eac mov ax,bx
 	00166eb8 pop bx
 	00166ec0 lor bx,ax
 	00166ecc mov ax,bx
		00166ed8: FALL_THROUGH

	[00166ed8]
		00166df4: CONDITIONAL_JUMP
		00166dfc: FALL_THROUGH
 	00166ed8 jnz 0x00166fbc
		00166fbc: CONDITIONAL_JUMP
		00166ee0: FALL_THROUGH

	[00166ee0]
		00166ed8: FALL_THROUGH
 	00166ee0 push ax
 	00166ee8 mov mar,0x42ef20
 	00166ef4 push mar
 	00166efc pop mar
 	00166f04 memread.ptr ax
 	00166f0c push ax
 	00166f14 pop mar
 	00166f1c mov ax,mar
 	00166f28 push op
 	00166f30 mov op,ax
 	00166f38 setfuncargs 0x0
 	00166f40 mov ax,0x89ef20
 	00166f4c farcall ax
 	00166f54 pop op
 	00166f5c push ax
 	00166f64 mov mar,0x8c6f20
 	00166f70 mov ax,mar
 	00166f7c pop bx
 	00166f84 cmpeq bx,ax
 	00166f90 mov ax,bx
 	00166f9c pop bx
 	00166fa4 lor bx,ax
 	00166fb0 mov ax,bx
		00166fbc: FALL_THROUGH

	[00166fbc]
		00166ed8: CONDITIONAL_JUMP
		00166ee0: FALL_THROUGH
 	00166fbc jnz 0x001670a0
		001670a0: CONDITIONAL_JUMP
		00166fc4: FALL_THROUGH

	[00166fc4]
		00166fbc: FALL_THROUGH
 	00166fc4 push ax
 	00166fcc mov mar,0x42ef20
 	00166fd8 push mar
 	00166fe0 pop mar
 	00166fe8 memread.ptr ax
 	00166ff0 push ax
 	00166ff8 pop mar
 	00167000 mov ax,mar
 	0016700c push op
 	00167014 mov op,ax
 	0016701c setfuncargs 0x0
 	00167024 mov ax,0x89ef20
 	00167030 farcall ax
 	00167038 pop op
 	00167040 push ax
 	00167048 mov mar,0x7def20
 	00167054 mov ax,mar
 	00167060 pop bx
 	00167068 cmpeq bx,ax
 	00167074 mov ax,bx
 	00167080 pop bx
 	00167088 lor bx,ax
 	00167094 mov ax,bx
		001670a0: FALL_THROUGH

	[001670a0]
		00166fbc: CONDITIONAL_JUMP
		00166fc4: FALL_THROUGH
 	001670a0 jnz 0x00167184
		00167184: CONDITIONAL_JUMP
		001670a8: FALL_THROUGH

	[001670a8]
		001670a0: FALL_THROUGH
 	001670a8 push ax
 	001670b0 mov mar,0x42ef20
 	001670bc push mar
 	001670c4 pop mar
 	001670cc memread.ptr ax
 	001670d4 push ax
 	001670dc pop mar
 	001670e4 mov ax,mar
 	001670f0 push op
 	001670f8 mov op,ax
 	00167100 setfuncargs 0x0
 	00167108 mov ax,0x89ef20
 	00167114 farcall ax
 	0016711c pop op
 	00167124 push ax
 	0016712c mov mar,0x8def20
 	00167138 mov ax,mar
 	00167144 pop bx
 	0016714c cmpeq bx,ax
 	00167158 mov ax,bx
 	00167164 pop bx
 	0016716c lor bx,ax
 	00167178 mov ax,bx
		00167184: FALL_THROUGH

	[00167184]
		001670a0: CONDITIONAL_JUMP
		001670a8: FALL_THROUGH
 	00167184 jnz 0x00167268
		00167268: CONDITIONAL_JUMP
		0016718c: FALL_THROUGH

	[0016718c]
		00167184: FALL_THROUGH
 	0016718c push ax
 	00167194 mov mar,0x42ef20
 	001671a0 push mar
 	001671a8 pop mar
 	001671b0 memread.ptr ax
 	001671b8 push ax
 	001671c0 pop mar
 	001671c8 mov ax,mar
 	001671d4 push op
 	001671dc mov op,ax
 	001671e4 setfuncargs 0x0
 	001671ec mov ax,0x89ef20
 	001671f8 farcall ax
 	00167200 pop op
 	00167208 push ax
 	00167210 mov mar,0x8aef20
 	0016721c mov ax,mar
 	00167228 pop bx
 	00167230 cmpeq bx,ax
 	0016723c mov ax,bx
 	00167248 pop bx
 	00167250 lor bx,ax
 	0016725c mov ax,bx
		00167268: FALL_THROUGH

	[00167268]
		00167184: CONDITIONAL_JUMP
		0016718c: FALL_THROUGH
 	00167268 jnz 0x0016734c
		0016734c: CONDITIONAL_JUMP
		00167270: FALL_THROUGH

	[00167270]
		00167268: FALL_THROUGH
 	00167270 push ax
 	00167278 mov mar,0x42ef20
 	00167284 push mar
 	0016728c pop mar
 	00167294 memread.ptr ax
 	0016729c push ax
 	001672a4 pop mar
 	001672ac mov ax,mar
 	001672b8 push op
 	001672c0 mov op,ax
 	001672c8 setfuncargs 0x0
 	001672d0 mov ax,0x89ef20
 	001672dc farcall ax
 	001672e4 pop op
 	001672ec push ax
 	001672f4 mov mar,0x8e6f20
 	00167300 mov ax,mar
 	0016730c pop bx
 	00167314 cmpeq bx,ax
 	00167320 mov ax,bx
 	0016732c pop bx
 	00167334 lor bx,ax
 	00167340 mov ax,bx
		0016734c: FALL_THROUGH

	[0016734c]
		00167268: CONDITIONAL_JUMP
		00167270: FALL_THROUGH
 	0016734c jz 0x00167fa4
		00167fa4: CONDITIONAL_JUMP
		00167354: FALL_THROUGH

	[00167354]
		0016734c: FALL_THROUGH
 	00167354 sourceline 0x14c3
 	0016735c setfuncargs 0x0
 	00167364 mov ax,0x6def20
 	00167370 farcall ax
 	00167378 lnot ax
 	00167380 jz 0x001673dc
		001673dc: CONDITIONAL_JUMP
		00167388: FALL_THROUGH

	[00167388]
		00167354: FALL_THROUGH
 	00167388 mov ax,0x80
 	00167394 farpush ax
 	0016739c mov ax,0xdc
 	001673a8 farpush ax
 	001673b0 setfuncargs 0x2
 	001673b8 mov ax,0x6e6f20
 	001673c4 farcall ax
 	001673cc farsubsp 0x2
 	001673d4 jmp 0x00167f94
		00167f94: UNCONDITIONAL_JUMP

	[001673dc]
		00167354: CONDITIONAL_JUMP
 	001673dc sourceline 0x14c6
 	001673e4 mov ax,0x3
 	001673f0 mov bx,ax
 	001673fc mov mar,0x3cef20
 	00167408 mov ax,mar
 	00167414 push op
 	0016741c mov op,ax
 	00167424 farpush bx
 	0016742c setfuncargs 0x1
 	00167434 mov ax,0x69ef20
 	00167440 farcall ax
 	00167448 farsubsp 0x1
 	00167450 pop op
 	00167458 sourceline 0x14c7
 	00167460 push op
 	00167468 mov ax,0x397
 	00167474 farpush ax
 	0016747c mov ax,0x2
 	00167488 farpush ax
 	00167490 mov mar,0x3cef20
 	0016749c mov ax,mar
 	001674a8 mov op,ax
 	001674b0 setfuncargs 0x2
 	001674b8 mov ax,0x6eef20
 	001674c4 farcall ax
 	001674cc farsubsp 0x2
 	001674d4 pop op
 	001674dc sourceline 0x14c8
 	001674e4 push op
 	001674ec mov ax,0x7
 	001674f8 farpush ax
 	00167500 mov mar,0x3cef20
 	0016750c mov ax,mar
 	00167518 mov op,ax
 	00167520 setfuncargs 0x1
 	00167528 mov ax,0x51ef20
 	00167534 farcall ax
 	0016753c farsubsp 0x1
 	00167544 pop op
 	0016754c sourceline 0x14c9
 	00167554 mov ax,0x0
 	00167560 mov bx,ax
 	0016756c mov mar,0x3cef20
 	00167578 mov ax,mar
 	00167584 push op
 	0016758c mov op,ax
 	00167594 farpush bx
 	0016759c setfuncargs 0x1
 	001675a4 mov ax,0x436f20
 	001675b0 farcall ax
 	001675b8 farsubsp 0x1
 	001675c0 pop op
 	001675c8 sourceline 0x14ca
 	001675d0 mov mar,0x3cef20
 	001675dc mov ax,mar
 	001675e8 push op
 	001675f0 mov op,ax
 	001675f8 setfuncargs 0x0
 	00167600 mov ax,0x78ef20
 	0016760c farcall ax
 	00167614 pop op
 	0016761c push ax
 	00167624 mov ax,0x8
 	00167630 pop bx
 	00167638 sub bx,ax
 	00167644 mov ax,bx
 	00167650 mov bx,ax
 	0016765c mov mar,0x3cef20
 	00167668 mov ax,mar
 	00167674 push op
 	0016767c mov op,ax
 	00167684 farpush bx
 	0016768c setfuncargs 0x1
 	00167694 mov ax,0x526f20
 	001676a0 farcall ax
 	001676a8 farsubsp 0x1
 	001676b0 pop op
 	001676b8 sourceline 0x14cb
 	001676c0 mov mar,0x3cef20
 	001676cc mov ax,mar
 	001676d8 push op
 	001676e0 mov op,ax
 	001676e8 setfuncargs 0x0
 	001676f0 mov ax,0xb36f20
 	001676fc farcall ax
 	00167704 pop op
 	0016770c push ax
 	00167714 mov ax,0x9
 	00167720 pop bx
 	00167728 add bx,ax
 	00167734 mov ax,bx
 	00167740 mov bx,ax
 	0016774c mov mar,0x3cef20
 	00167758 mov ax,mar
 	00167764 push op
 	0016776c mov op,ax
 	00167774 farpush bx
 	0016777c setfuncargs 0x1
 	00167784 mov ax,0x70ef20
 	00167790 farcall ax
 	00167798 farsubsp 0x1
 	001677a0 pop op
 	001677a8 sourceline 0x14cc
 	001677b0 push op
 	001677b8 mov ax,0x426
 	001677c4 farpush ax
 	001677cc mov ax,0x397
 	001677d8 farpush ax
 	001677e0 mov ax,0x0
 	001677ec farpush ax
 	001677f4 mov ax,0x3
 	00167800 farpush ax
 	00167808 mov ax,0x1
 	00167814 farpush ax
 	0016781c mov mar,0x3cef20
 	00167828 mov ax,mar
 	00167834 mov op,ax
 	0016783c setfuncargs 0x5
 	00167844 mov ax,0x536f20
 	00167850 farcall ax
 	00167858 farsubsp 0x5
 	00167860 pop op
 	00167868 sourceline 0x14ce
 	00167870 mov ax,0x3
 	0016787c farpush ax
 	00167884 setfuncargs 0x1
 	0016788c mov ax,0x4a6f20
 	00167898 farcall ax
 	001678a0 farsubsp 0x1
 	001678a8 mov mar,sp
 	001678b4 memwrite4 ax
 	001678bc add sp,0x4
 	001678c8 sourceline 0x14cf
 	001678d0 stackptr 0x4
 	001678d8 memread4 ax
 	001678e0 push ax
 	001678e8 mov ax,0x0
 	001678f4 pop bx
 	001678fc cmpeq bx,ax
 	00167908 mov ax,bx
 	00167914 jz 0x0016798c
		0016798c: CONDITIONAL_JUMP
		0016791c: FALL_THROUGH

	[0016791c]
		001673dc: FALL_THROUGH
 	0016791c push op
 	00167924 mov ax,0x2c8717
 	00167930 farpush ax
 	00167938 mov mar,0x3cef20
 	00167944 mov ax,mar
 	00167950 mov op,ax
 	00167958 setfuncargs 0x1
 	00167960 mov ax,0x6f6f20
 	0016796c farcall ax
 	00167974 farsubsp 0x1
 	0016797c pop op
 	00167984 jmp 0x00167b84
		00167b84: UNCONDITIONAL_JUMP

	[0016798c]
		001673dc: CONDITIONAL_JUMP
 	0016798c sourceline 0x14d0
 	00167994 stackptr 0x4
 	0016799c memread4 ax
 	001679a4 push ax
 	001679ac mov ax,0x1
 	001679b8 pop bx
 	001679c0 cmpeq bx,ax
 	001679cc mov ax,bx
 	001679d8 jz 0x00167a50
		00167a50: CONDITIONAL_JUMP
		001679e0: FALL_THROUGH

	[001679e0]
		0016798c: FALL_THROUGH
 	001679e0 push op
 	001679e8 mov ax,0x2c8740
 	001679f4 farpush ax
 	001679fc mov mar,0x3cef20
 	00167a08 mov ax,mar
 	00167a14 mov op,ax
 	00167a1c setfuncargs 0x1
 	00167a24 mov ax,0x6f6f20
 	00167a30 farcall ax
 	00167a38 farsubsp 0x1
 	00167a40 pop op
 	00167a48 jmp 0x00167b84
		00167b84: UNCONDITIONAL_JUMP

	[00167a50]
		0016798c: CONDITIONAL_JUMP
 	00167a50 sourceline 0x14d1
 	00167a58 stackptr 0x4
 	00167a60 memread4 ax
 	00167a68 push ax
 	00167a70 mov ax,0x2
 	00167a7c pop bx
 	00167a84 cmpeq bx,ax
 	00167a90 mov ax,bx
 	00167a9c jz 0x00167b14
		00167b14: CONDITIONAL_JUMP
		00167aa4: FALL_THROUGH

	[00167aa4]
		00167a50: FALL_THROUGH
 	00167aa4 push op
 	00167aac mov ax,0x2c8769
 	00167ab8 farpush ax
 	00167ac0 mov mar,0x3cef20
 	00167acc mov ax,mar
 	00167ad8 mov op,ax
 	00167ae0 setfuncargs 0x1
 	00167ae8 mov ax,0x6f6f20
 	00167af4 farcall ax
 	00167afc farsubsp 0x1
 	00167b04 pop op
 	00167b0c jmp 0x00167b84
		00167b84: UNCONDITIONAL_JUMP

	[00167b14]
		00167a50: CONDITIONAL_JUMP
 	00167b14 sourceline 0x14d2
 	00167b1c push op
 	00167b24 mov ax,0x2c8792
 	00167b30 farpush ax
 	00167b38 mov mar,0x3cef20
 	00167b44 mov ax,mar
 	00167b50 mov op,ax
 	00167b58 setfuncargs 0x1
 	00167b60 mov ax,0x6f6f20
 	00167b6c farcall ax
 	00167b74 farsubsp 0x1
 	00167b7c pop op
		00167b84: FALL_THROUGH

	[00167b84]
		0016791c: UNCONDITIONAL_JUMP
		001679e0: UNCONDITIONAL_JUMP
		00167aa4: UNCONDITIONAL_JUMP
		00167b14: FALL_THROUGH
 	00167b84 sourceline 0x14d4
 	00167b8c push op
 	00167b94 mov ax,0x2be326
 	00167ba0 farpush ax
 	00167ba8 mov mar,0xafef20
 	00167bb4 mov ax,mar
 	00167bc0 mov op,ax
 	00167bc8 setfuncargs 0x1
 	00167bd0 mov ax,0x6f6f20
 	00167bdc farcall ax
 	00167be4 farsubsp 0x1
 	00167bec pop op
 	00167bf4 sourceline 0x14d5
 	00167bfc push op
 	00167c04 mov ax,0x427
 	00167c10 farpush ax
 	00167c18 mov ax,0x397
 	00167c24 farpush ax
 	00167c2c mov ax,0x0
 	00167c38 farpush ax
 	00167c40 mov ax,0x3
 	00167c4c farpush ax
 	00167c54 mov ax,0x1
 	00167c60 farpush ax
 	00167c68 mov mar,0x3cef20
 	00167c74 mov ax,mar
 	00167c80 mov op,ax
 	00167c88 setfuncargs 0x5
 	00167c90 mov ax,0x536f20
 	00167c9c farcall ax
 	00167ca4 farsubsp 0x5
 	00167cac pop op
 	00167cb4 sourceline 0x14d6
 	00167cbc push op
 	00167cc4 mov ax,0x2
 	00167cd0 farpush ax
 	00167cd8 mov mar,0x3cef20
 	00167ce4 mov ax,mar
 	00167cf0 mov op,ax
 	00167cf8 setfuncargs 0x1
 	00167d00 mov ax,0x51ef20
 	00167d0c farcall ax
 	00167d14 farsubsp 0x1
 	00167d1c pop op
 	00167d24 sourceline 0x14d7
 	00167d2c mov ax,0x2
 	00167d38 mov bx,ax
 	00167d44 mov mar,0x3cef20
 	00167d50 mov ax,mar
 	00167d5c push op
 	00167d64 mov op,ax
 	00167d6c farpush bx
 	00167d74 setfuncargs 0x1
 	00167d7c mov ax,0x766f20
 	00167d88 farcall ax
 	00167d90 farsubsp 0x1
 	00167d98 pop op
 	00167da0 sourceline 0x14d8
 	00167da8 mov mar,0x3cef20
 	00167db4 mov ax,mar
 	00167dc0 push op
 	00167dc8 mov op,ax
 	00167dd0 setfuncargs 0x0
 	00167dd8 mov ax,0x78ef20
 	00167de4 farcall ax
 	00167dec pop op
 	00167df4 push ax
 	00167dfc mov ax,0x8
 	00167e08 pop bx
 	00167e10 add bx,ax
 	00167e1c mov ax,bx
 	00167e28 mov bx,ax
 	00167e34 mov mar,0x3cef20
 	00167e40 mov ax,mar
 	00167e4c push op
 	00167e54 mov op,ax
 	00167e5c farpush bx
 	00167e64 setfuncargs 0x1
 	00167e6c mov ax,0x526f20
 	00167e78 farcall ax
 	00167e80 farsubsp 0x1
 	00167e88 pop op
 	00167e90 sourceline 0x14d9
 	00167e98 mov mar,0x3cef20
 	00167ea4 mov ax,mar
 	00167eb0 push op
 	00167eb8 mov op,ax
 	00167ec0 setfuncargs 0x0
 	00167ec8 mov ax,0xb36f20
 	00167ed4 farcall ax
 	00167edc pop op
 	00167ee4 push ax
 	00167eec mov ax,0x9
 	00167ef8 pop bx
 	00167f00 sub bx,ax
 	00167f0c mov ax,bx
 	00167f18 mov bx,ax
 	00167f24 mov mar,0x3cef20
 	00167f30 mov ax,mar
 	00167f3c push op
 	00167f44 mov op,ax
 	00167f4c farpush bx
 	00167f54 setfuncargs 0x1
 	00167f5c mov ax,0x70ef20
 	00167f68 farcall ax
 	00167f70 farsubsp 0x1
 	00167f78 pop op
 	00167f80 sourceline 0x14da
 	00167f88 sub sp,0x4
		00167f94: FALL_THROUGH

	[00167f94]
		00167388: UNCONDITIONAL_JUMP
		00167b84: FALL_THROUGH
 	00167f94 sourceline 0x14db
 	00167f9c jmp 0x00168228
		00168228: UNCONDITIONAL_JUMP

	[00167fa4]
		0016734c: CONDITIONAL_JUMP
 	00167fa4 sourceline 0x14dd
 	00167fac mov mar,0x42ef20
 	00167fb8 push mar
 	00167fc0 pop mar
 	00167fc8 memread.ptr ax
 	00167fd0 push ax
 	00167fd8 pop mar
 	00167fe0 mov ax,mar
 	00167fec push op
 	00167ff4 mov op,ax
 	00167ffc setfuncargs 0x0
 	00168004 mov ax,0x89ef20
 	00168010 farcall ax
 	00168018 pop op
 	00168020 push ax
 	00168028 mov mar,0x9cef20
 	00168034 mov ax,mar
 	00168040 pop bx
 	00168048 cmpeq bx,ax
 	00168054 mov ax,bx
 	00168060 jz 0x00168228
		00168228: CONDITIONAL_JUMP
		00168068: FALL_THROUGH

	[00168068]
		00167fa4: FALL_THROUGH
 	00168068 sourceline 0x14df
 	00168070 push op
 	00168078 mov ax,0x397
 	00168084 farpush ax
 	0016808c mov ax,0x6e
 	00168098 farpush ax
 	001680a0 mov ax,0x110
 	001680ac farpush ax
 	001680b4 mov mar,0x3cef20
 	001680c0 mov ax,mar
 	001680cc mov op,ax
 	001680d4 setfuncargs 0x3
 	001680dc mov ax,0x726f20
 	001680e8 farcall ax
 	001680f0 farsubsp 0x3
 	001680f8 pop op
 	00168100 sourceline 0x14e0
 	00168108 mov ax,0x1
 	00168114 mov bx,ax
 	00168120 mov mar,0x3cef20
 	0016812c mov ax,mar
 	00168138 push op
 	00168140 mov op,ax
 	00168148 farpush bx
 	00168150 setfuncargs 0x1
 	00168158 mov ax,0x69ef20
 	00168164 farcall ax
 	0016816c farsubsp 0x1
 	00168174 pop op
 	0016817c sourceline 0x14e2
 	00168184 push op
 	0016818c mov ax,0x2be342
 	00168198 farpush ax
 	001681a0 mov ax,0x138
 	001681ac farpush ax
 	001681b4 mov ax,0x92
 	001681c0 farpush ax
 	001681c8 mov ax,0x0
 	001681d4 farpush ax
 	001681dc mov mar,0x3cef20
 	001681e8 mov ax,mar
 	001681f4 mov op,ax
 	001681fc setfuncargs 0x4
 	00168204 mov ax,0x6aef20
 	00168210 farcall ax
 	00168218 farsubsp 0x4
 	00168220 pop op
		00168228: FALL_THROUGH

	[00168228]
		00167f94: UNCONDITIONAL_JUMP
		00167fa4: CONDITIONAL_JUMP
		00168068: FALL_THROUGH
 	00168228 sourceline 0x14e4
 	00168230 mov ax,0x0
 	0016823c ret

cProcter_UseInv$0:
	[00168240]
 	00168240 sourceline 0x14e9
 	00168248 thisaddr
 	00168250 sourceline 0x14ea
*	00168258 mov mar,0x42ef20
 	00168264 push mar
 	0016826c pop mar
 	00168274 memread.ptr ax
 	0016827c push ax
 	00168284 pop mar
 	0016828c mov ax,mar
 	00168298 push op
 	001682a0 mov op,ax
 	001682a8 setfuncargs 0x0
 	001682b0 mov ax,0x89ef20
 	001682bc farcall ax
 	001682c4 pop op
 	001682cc push ax
 	001682d4 mov mar,0x8e6f20
 	001682e0 mov ax,mar
 	001682ec pop bx
 	001682f4 cmpeq bx,ax
 	00168300 mov ax,bx
 	0016830c jz 0x0016b178
		0016b178: CONDITIONAL_JUMP
		00168314: FALL_THROUGH

	[00168314]
		00168240: FALL_THROUGH
 	00168314 sourceline 0x14ec
 	0016831c mov mar,0xca6f20
 	00168328 memread4 ax
 	00168330 lnot ax
 	00168338 jz 0x0016a100
		0016a100: CONDITIONAL_JUMP
		00168340: FALL_THROUGH

	[00168340]
		00168314: FALL_THROUGH
 	00168340 sourceline 0x14ee
 	00168348 mov ax,0x3
 	00168354 mov bx,ax
 	00168360 mov mar,0x3cef20
 	0016836c mov ax,mar
 	00168378 push op
 	00168380 mov op,ax
 	00168388 farpush bx
 	00168390 setfuncargs 0x1
 	00168398 mov ax,0x69ef20
 	001683a4 farcall ax
 	001683ac farsubsp 0x1
 	001683b4 pop op
 	001683bc sourceline 0x14ef
 	001683c4 setfuncargs 0x0
 	001683cc mov ax,0x6def20
 	001683d8 farcall ax
 	001683e0 lnot ax
 	001683e8 jz 0x00168444
		00168444: CONDITIONAL_JUMP
		001683f0: FALL_THROUGH

	[001683f0]
		00168340: FALL_THROUGH
 	001683f0 mov ax,0x83
 	001683fc farpush ax
 	00168404 mov ax,0x56
 	00168410 farpush ax
 	00168418 setfuncargs 0x2
 	00168420 mov ax,0x6e6f20
 	0016842c farcall ax
 	00168434 farsubsp 0x2
 	0016843c jmp 0x0016a0f0
		0016a0f0: UNCONDITIONAL_JUMP

	[00168444]
		00168340: CONDITIONAL_JUMP
 	00168444 sourceline 0x14f2
 	0016844c mov ax,0x0
 	00168458 mov bx,ax
 	00168464 mov mar,0x336f20
 	00168470 mov ax,mar
 	0016847c farpush bx
 	00168484 setfuncargs 0x1
 	0016848c mov ax,0x43ef20
 	00168498 farcall ax
 	001684a0 farsubsp 0x1
 	001684a8 sourceline 0x14f3
 	001684b0 mov ax,0x1
 	001684bc mov mar,0xca6f20
 	001684c8 memwrite4 ax
 	001684d0 sourceline 0x14f4
 	001684d8 push op
 	001684e0 mov ax,0x397
 	001684ec farpush ax
 	001684f4 mov ax,0x1
 	00168500 farpush ax
 	00168508 mov mar,0x3cef20
 	00168514 mov ax,mar
 	00168520 mov op,ax
 	00168528 setfuncargs 0x2
 	00168530 mov ax,0x6eef20
 	0016853c farcall ax
 	00168544 farsubsp 0x2
 	0016854c pop op
 	00168554 sourceline 0x14f5
 	0016855c push op
 	00168564 mov ax,0x2be384
 	00168570 farpush ax
 	00168578 mov mar,0x3cef20
 	00168584 mov ax,mar
 	00168590 mov op,ax
 	00168598 setfuncargs 0x1
 	001685a0 mov ax,0x6f6f20
 	001685ac farcall ax
 	001685b4 farsubsp 0x1
 	001685bc pop op
 	001685c4 sourceline 0x14f6
 	001685cc push op
 	001685d4 mov ax,0x426
 	001685e0 farpush ax
 	001685e8 mov ax,0x397
 	001685f4 farpush ax
 	001685fc mov ax,0x0
 	00168608 farpush ax
 	00168610 mov ax,0x3
 	0016861c farpush ax
 	00168624 mov ax,0x0
 	00168630 farpush ax
 	00168638 mov mar,0x746f20
 	00168644 mov ax,mar
 	00168650 mov op,ax
 	00168658 setfuncargs 0x5
 	00168660 mov ax,0x536f20
 	0016866c farcall ax
 	00168674 farsubsp 0x5
 	0016867c pop op
 	00168684 sourceline 0x14f7
 	0016868c push op
 	00168694 mov ax,0x6
 	001686a0 farpush ax
 	001686a8 mov mar,0x3cef20
 	001686b4 mov ax,mar
 	001686c0 mov op,ax
 	001686c8 setfuncargs 0x1
 	001686d0 mov ax,0x51ef20
 	001686dc farcall ax
 	001686e4 farsubsp 0x1
 	001686ec pop op
 	001686f4 sourceline 0x14f8
 	001686fc mov ax,0x4e
 	00168708 mov bx,ax
 	00168714 mov mar,0x3cef20
 	00168720 mov ax,mar
 	0016872c push op
 	00168734 mov op,ax
 	0016873c farpush bx
 	00168744 setfuncargs 0x1
 	0016874c mov ax,0x70ef20
 	00168758 farcall ax
 	00168760 farsubsp 0x1
 	00168768 pop op
 	00168770 sourceline 0x14f9
 	00168778 mov ax,0x7b
 	00168784 mov bx,ax
 	00168790 mov mar,0x3cef20
 	0016879c mov ax,mar
 	001687a8 push op
 	001687b0 mov op,ax
 	001687b8 farpush bx
 	001687c0 setfuncargs 0x1
 	001687c8 mov ax,0x526f20
 	001687d4 farcall ax
 	001687dc farsubsp 0x1
 	001687e4 pop op
 	001687ec sourceline 0x14fa
 	001687f4 push op
 	001687fc mov ax,0x426
 	00168808 farpush ax
 	00168810 mov ax,0x397
 	0016881c farpush ax
 	00168824 mov ax,0x0
 	00168830 farpush ax
 	00168838 mov ax,0x3
 	00168844 farpush ax
 	0016884c mov ax,0x1
 	00168858 farpush ax
 	00168860 mov mar,0x3cef20
 	0016886c mov ax,mar
 	00168878 mov op,ax
 	00168880 setfuncargs 0x5
 	00168888 mov ax,0x536f20
 	00168894 farcall ax
 	0016889c farsubsp 0x5
 	001688a4 pop op
 	001688ac sourceline 0x14fb
 	001688b4 push op
 	001688bc mov ax,0x46
 	001688c8 farpush ax
 	001688d0 mov mar,0x746f20
 	001688dc mov ax,mar
 	001688e8 mov op,ax
 	001688f0 setfuncargs 0x1
 	001688f8 mov ax,0x51ef20
 	00168904 farcall ax
 	0016890c farsubsp 0x1
 	00168914 pop op
 	0016891c sourceline 0x14fc
 	00168924 mov ax,0x3c
 	00168930 mov bx,ax
 	0016893c mov mar,0x746f20
 	00168948 mov ax,mar
 	00168954 push op
 	0016895c mov op,ax
 	00168964 farpush bx
 	0016896c setfuncargs 0x1
 	00168974 mov ax,0x70ef20
 	00168980 farcall ax
 	00168988 farsubsp 0x1
 	00168990 pop op
 	00168998 sourceline 0x14fd
 	001689a0 push op
 	001689a8 mov ax,0x426
 	001689b4 farpush ax
 	001689bc mov ax,0x398
 	001689c8 farpush ax
 	001689d0 mov ax,0x0
 	001689dc farpush ax
 	001689e4 mov ax,0x3
 	001689f0 farpush ax
 	001689f8 mov ax,0x0
 	00168a04 farpush ax
 	00168a0c mov mar,0x746f20
 	00168a18 mov ax,mar
 	00168a24 mov op,ax
 	00168a2c setfuncargs 0x5
 	00168a34 mov ax,0x536f20
 	00168a40 farcall ax
 	00168a48 farsubsp 0x5
 	00168a50 pop op
 	00168a58 sourceline 0x14fe
 	00168a60 mov ax,0x17
 	00168a6c farpush ax
 	00168a74 setfuncargs 0x1
 	00168a7c mov ax,0x426f20
 	00168a88 farcall ax
 	00168a90 farsubsp 0x1
 	00168a98 sourceline 0x14ff
 	00168aa0 push op
 	00168aa8 mov ax,0x427
 	00168ab4 farpush ax
 	00168abc mov ax,0x397
 	00168ac8 farpush ax
 	00168ad0 mov ax,0x0
 	00168adc farpush ax
 	00168ae4 mov ax,0x3
 	00168af0 farpush ax
 	00168af8 mov ax,0x1
 	00168b04 farpush ax
 	00168b0c mov mar,0x3cef20
 	00168b18 mov ax,mar
 	00168b24 mov op,ax
 	00168b2c setfuncargs 0x5
 	00168b34 mov ax,0x536f20
 	00168b40 farcall ax
 	00168b48 farsubsp 0x5
 	00168b50 pop op
 	00168b58 sourceline 0x1500
 	00168b60 push op
 	00168b68 mov ax,0x2
 	00168b74 farpush ax
 	00168b7c mov mar,0x3cef20
 	00168b88 mov ax,mar
 	00168b94 mov op,ax
 	00168b9c setfuncargs 0x1
 	00168ba4 mov ax,0x51ef20
 	00168bb0 farcall ax
 	00168bb8 farsubsp 0x1
 	00168bc0 pop op
 	00168bc8 sourceline 0x1501
 	00168bd0 mov ax,0x83
 	00168bdc mov bx,ax
 	00168be8 mov mar,0x3cef20
 	00168bf4 mov ax,mar
 	00168c00 push op
 	00168c08 mov op,ax
 	00168c10 farpush bx
 	00168c18 setfuncargs 0x1
 	00168c20 mov ax,0x526f20
 	00168c2c farcall ax
 	00168c34 farsubsp 0x1
 	00168c3c pop op
 	00168c44 sourceline 0x1502
 	00168c4c mov ax,0x57
 	00168c58 mov bx,ax
 	00168c64 mov mar,0x3cef20
 	00168c70 mov ax,mar
 	00168c7c push op
 	00168c84 mov op,ax
 	00168c8c farpush bx
 	00168c94 setfuncargs 0x1
 	00168c9c mov ax,0x70ef20
 	00168ca8 farcall ax
 	00168cb0 farsubsp 0x1
 	00168cb8 pop op
 	00168cc0 sourceline 0x1503
 	00168cc8 push op
 	00168cd0 mov ax,0x130
 	00168cdc farpush ax
 	00168ce4 mov ax,0x397
 	00168cf0 farpush ax
 	00168cf8 mov mar,0x3cef20
 	00168d04 mov ax,mar
 	00168d10 push op
 	00168d18 mov op,ax
 	00168d20 setfuncargs 0x0
 	00168d28 mov ax,0x78ef20
 	00168d34 farcall ax
 	00168d3c pop op
 	00168d44 farpush ax
 	00168d4c mov mar,0x3cef20
 	00168d58 mov ax,mar
 	00168d64 push op
 	00168d6c mov op,ax
 	00168d74 setfuncargs 0x0
 	00168d7c mov ax,0xb36f20
 	00168d88 farcall ax
 	00168d90 pop op
 	00168d98 push ax
 	00168da0 mov ax,0x10
 	00168dac pop bx
 	00168db4 add bx,ax
 	00168dc0 mov ax,bx
 	00168dcc farpush ax
 	00168dd4 mov mar,0x3cef20
 	00168de0 mov ax,mar
 	00168dec mov op,ax
 	00168df4 setfuncargs 0x4
 	00168dfc mov ax,0xb2ef20
 	00168e08 farcall ax
 	00168e10 farsubsp 0x4
 	00168e18 pop op
 	00168e20 sourceline 0x1504
 	00168e28 push op
 	00168e30 mov ax,0x397
 	00168e3c farpush ax
 	00168e44 mov ax,0x1
 	00168e50 farpush ax
 	00168e58 mov mar,0x3cef20
 	00168e64 mov ax,mar
 	00168e70 mov op,ax
 	00168e78 setfuncargs 0x2
 	00168e80 mov ax,0x6eef20
 	00168e8c farcall ax
 	00168e94 farsubsp 0x2
 	00168e9c pop op
 	00168ea4 sourceline 0x1505
 	00168eac push op
 	00168eb4 mov ax,0x47
 	00168ec0 farpush ax
 	00168ec8 mov mar,0x746f20
 	00168ed4 mov ax,mar
 	00168ee0 mov op,ax
 	00168ee8 setfuncargs 0x1
 	00168ef0 mov ax,0x51ef20
 	00168efc farcall ax
 	00168f04 farsubsp 0x1
 	00168f0c pop op
 	00168f14 sourceline 0x1506
 	00168f1c mov ax,0x83
 	00168f28 mov bx,ax
 	00168f34 mov mar,0x746f20
 	00168f40 mov ax,mar
 	00168f4c push op
 	00168f54 mov op,ax
 	00168f5c farpush bx
 	00168f64 setfuncargs 0x1
 	00168f6c mov ax,0x526f20
 	00168f78 farcall ax
 	00168f80 farsubsp 0x1
 	00168f88 pop op
 	00168f90 sourceline 0x1507
 	00168f98 mov ax,0x3f
 	00168fa4 mov bx,ax
 	00168fb0 mov mar,0x746f20
 	00168fbc mov ax,mar
 	00168fc8 push op
 	00168fd0 mov op,ax
 	00168fd8 farpush bx
 	00168fe0 setfuncargs 0x1
 	00168fe8 mov ax,0x70ef20
 	00168ff4 farcall ax
 	00168ffc farsubsp 0x1
 	00169004 pop op
 	0016900c sourceline 0x1508
 	00169014 push op
 	0016901c mov ax,0x426
 	00169028 farpush ax
 	00169030 mov ax,0x397
 	0016903c farpush ax
 	00169044 mov ax,0x0
 	00169050 farpush ax
 	00169058 mov ax,0x3
 	00169064 farpush ax
 	0016906c mov ax,0x0
 	00169078 farpush ax
 	00169080 mov mar,0x746f20
 	0016908c mov ax,mar
 	00169098 mov op,ax
 	001690a0 setfuncargs 0x5
 	001690a8 mov ax,0x536f20
 	001690b4 farcall ax
 	001690bc farsubsp 0x5
 	001690c4 pop op
 	001690cc sourceline 0x1509
 	001690d4 mov ax,0xa
 	001690e0 farpush ax
 	001690e8 setfuncargs 0x1
 	001690f0 mov ax,0x426f20
 	001690fc farcall ax
 	00169104 farsubsp 0x1
 	0016910c sourceline 0x150a
 	00169114 push op
 	0016911c mov ax,0x2be39c
 	00169128 farpush ax
 	00169130 mov mar,0x746f20
 	0016913c mov ax,mar
 	00169148 mov op,ax
 	00169150 setfuncargs 0x1
 	00169158 mov ax,0x6f6f20
 	00169164 farcall ax
 	0016916c farsubsp 0x1
 	00169174 pop op
 	0016917c sourceline 0x150b
 	00169184 push op
 	0016918c mov ax,0x2be3e1
 	00169198 farpush ax
 	001691a0 mov mar,0x3cef20
 	001691ac mov ax,mar
 	001691b8 mov op,ax
 	001691c0 setfuncargs 0x1
 	001691c8 mov ax,0x6f6f20
 	001691d4 farcall ax
 	001691dc farsubsp 0x1
 	001691e4 pop op
 	001691ec sourceline 0x150c
 	001691f4 push op
 	001691fc mov ax,0x2be404
 	00169208 farpush ax
 	00169210 mov mar,0x746f20
 	0016921c mov ax,mar
 	00169228 mov op,ax
 	00169230 setfuncargs 0x1
 	00169238 mov ax,0x6f6f20
 	00169244 farcall ax
 	0016924c farsubsp 0x1
 	00169254 pop op
 	0016925c sourceline 0x150d
 	00169264 push op
 	0016926c mov ax,0x2be4d1
 	00169278 farpush ax
 	00169280 mov mar,0x746f20
 	0016928c mov ax,mar
 	00169298 mov op,ax
 	001692a0 setfuncargs 0x1
 	001692a8 mov ax,0x6f6f20
 	001692b4 farcall ax
 	001692bc farsubsp 0x1
 	001692c4 pop op
 	001692cc sourceline 0x150e
 	001692d4 push op
 	001692dc mov ax,0x2be501
 	001692e8 farpush ax
 	001692f0 mov mar,0x3cef20
 	001692fc mov ax,mar
 	00169308 mov op,ax
 	00169310 setfuncargs 0x1
 	00169318 mov ax,0x6f6f20
 	00169324 farcall ax
 	0016932c farsubsp 0x1
 	00169334 pop op
 	0016933c sourceline 0x150f
 	00169344 push op
 	0016934c mov ax,0x2be51d
 	00169358 farpush ax
 	00169360 mov mar,0x746f20
 	0016936c mov ax,mar
 	00169378 mov op,ax
 	00169380 setfuncargs 0x1
 	00169388 mov ax,0x6f6f20
 	00169394 farcall ax
 	0016939c farsubsp 0x1
 	001693a4 pop op
 	001693ac sourceline 0x1510
 	001693b4 push op
 	001693bc mov ax,0x2be5b5
 	001693c8 farpush ax
 	001693d0 mov mar,0x3cef20
 	001693dc mov ax,mar
 	001693e8 mov op,ax
 	001693f0 setfuncargs 0x1
 	001693f8 mov ax,0x6f6f20
 	00169404 farcall ax
 	0016940c farsubsp 0x1
 	00169414 pop op
 	0016941c sourceline 0x1511
 	00169424 push op
 	0016942c mov ax,0x2be5e6
 	00169438 farpush ax
 	00169440 mov mar,0x746f20
 	0016944c mov ax,mar
 	00169458 mov op,ax
 	00169460 setfuncargs 0x1
 	00169468 mov ax,0x6f6f20
 	00169474 farcall ax
 	0016947c farsubsp 0x1
 	00169484 pop op
 	0016948c sourceline 0x1512
 	00169494 push op
 	0016949c mov ax,0x2be60d
 	001694a8 farpush ax
 	001694b0 mov mar,0x3cef20
 	001694bc mov ax,mar
 	001694c8 mov op,ax
 	001694d0 setfuncargs 0x1
 	001694d8 mov ax,0x6f6f20
 	001694e4 farcall ax
 	001694ec farsubsp 0x1
 	001694f4 pop op
 	001694fc sourceline 0x1513
 	00169504 push op
 	0016950c mov ax,0x48
 	00169518 farpush ax
 	00169520 mov mar,0x746f20
 	0016952c mov ax,mar
 	00169538 mov op,ax
 	00169540 setfuncargs 0x1
 	00169548 mov ax,0x51ef20
 	00169554 farcall ax
 	0016955c farsubsp 0x1
 	00169564 pop op
 	0016956c sourceline 0x1514
 	00169574 mov ax,0x2
 	00169580 mov bx,ax
 	0016958c mov mar,0x746f20
 	00169598 mov ax,mar
 	001695a4 push op
 	001695ac mov op,ax
 	001695b4 farpush bx
 	001695bc setfuncargs 0x1
 	001695c4 mov ax,0x766f20
 	001695d0 farcall ax
 	001695d8 farsubsp 0x1
 	001695e0 pop op
 	001695e8 sourceline 0x1515
 	001695f0 mov ax,0x7d
 	001695fc mov bx,ax
 	00169608 mov mar,0x746f20
 	00169614 mov ax,mar
 	00169620 push op
 	00169628 mov op,ax
 	00169630 farpush bx
 	00169638 setfuncargs 0x1
 	00169640 mov ax,0x526f20
 	0016964c farcall ax
 	00169654 farsubsp 0x1
 	0016965c pop op
 	00169664 sourceline 0x1516
 	0016966c mov ax,0x44
 	00169678 mov bx,ax
 	00169684 mov mar,0x746f20
 	00169690 mov ax,mar
 	0016969c push op
 	001696a4 mov op,ax
 	001696ac farpush bx
 	001696b4 setfuncargs 0x1
 	001696bc mov ax,0x70ef20
 	001696c8 farcall ax
 	001696d0 farsubsp 0x1
 	001696d8 pop op
 	001696e0 sourceline 0x1517
 	001696e8 mov ax,0x87
 	001696f4 mov bx,ax
 	00169700 mov mar,0x746f20
 	0016970c mov ax,mar
 	00169718 push op
 	00169720 mov op,ax
 	00169728 farpush bx
 	00169730 setfuncargs 0x1
 	00169738 mov ax,0xcaef20
 	00169744 farcall ax
 	0016974c farsubsp 0x1
 	00169754 pop op
 	0016975c sourceline 0x1518
 	00169764 mov ax,0x2
 	00169770 farpush ax
 	00169778 setfuncargs 0x1
 	00169780 mov ax,0xbd6f20
 	0016978c farcall ax
 	00169794 farsubsp 0x1
 	0016979c sourceline 0x1519
 	001697a4 mov ax,0x3
 	001697b0 farpush ax
 	001697b8 setfuncargs 0x1
 	001697c0 mov ax,0xbd6f20
 	001697cc farcall ax
 	001697d4 farsubsp 0x1
 	001697dc sourceline 0x151a
 	001697e4 mov ax,0x6
 	001697f0 farpush ax
 	001697f8 setfuncargs 0x1
 	00169800 mov ax,0xbd6f20
 	0016980c farcall ax
 	00169814 farsubsp 0x1
 	0016981c sourceline 0x151b
 	00169824 mov ax,0x8
 	00169830 farpush ax
 	00169838 setfuncargs 0x1
 	00169840 mov ax,0xbd6f20
 	0016984c farcall ax
 	00169854 farsubsp 0x1
 	0016985c sourceline 0x151c
 	00169864 push op
 	0016986c mov mar,0x3cef20
 	00169878 mov ax,mar
 	00169884 mov op,ax
 	0016988c setfuncargs 0x0
 	00169894 mov ax,0xcb6f20
 	001698a0 farcall ax
 	001698a8 pop op
 	001698b0 sourceline 0x151d
 	001698b8 mov ax,0x0
 	001698c4 farpush ax
 	001698cc mov ax,0x6
 	001698d8 farpush ax
 	001698e0 setfuncargs 0x2
 	001698e8 mov ax,0x756f20
 	001698f4 farcall ax
 	001698fc farsubsp 0x2
 	00169904 sourceline 0x151e
 	0016990c push op
 	00169914 mov ax,0x131
 	00169920 farpush ax
 	00169928 mov ax,0x398
 	00169934 farpush ax
 	0016993c mov ax,0x8b
 	00169948 farpush ax
 	00169950 mov ax,0x91
 	0016995c farpush ax
 	00169964 mov mar,0x746f20
 	00169970 mov ax,mar
 	0016997c mov op,ax
 	00169984 setfuncargs 0x4
 	0016998c mov ax,0xb2ef20
 	00169998 farcall ax
 	001699a0 farsubsp 0x4
 	001699a8 pop op
 	001699b0 sourceline 0x151f
 	001699b8 push op
 	001699c0 mov ax,0x131
 	001699cc farpush ax
 	001699d4 mov ax,0x397
 	001699e0 farpush ax
 	001699e8 mov ax,0x7e
 	001699f4 farpush ax
 	001699fc mov ax,0xc3
 	00169a08 farpush ax
 	00169a10 mov mar,0x3cef20
 	00169a1c mov ax,mar
 	00169a28 mov op,ax
 	00169a30 setfuncargs 0x4
 	00169a38 mov ax,0xb2ef20
 	00169a44 farcall ax
 	00169a4c farsubsp 0x4
 	00169a54 pop op
 	00169a5c sourceline 0x1520
 	00169a64 push op
 	00169a6c mov ax,0x131
 	00169a78 farpush ax
 	00169a80 mov ax,0x397
 	00169a8c farpush ax
 	00169a94 mov ax,0x8b
 	00169aa0 farpush ax
 	00169aa8 mov mar,0x3cef20
 	00169ab4 mov ax,mar
 	00169ac0 push op
 	00169ac8 mov op,ax
 	00169ad0 setfuncargs 0x0
 	00169ad8 mov ax,0xb36f20
 	00169ae4 farcall ax
 	00169aec pop op
 	00169af4 farpush ax
 	00169afc mov mar,0x3cef20
 	00169b08 mov ax,mar
 	00169b14 mov op,ax
 	00169b1c setfuncargs 0x4
 	00169b24 mov ax,0xb2ef20
 	00169b30 farcall ax
 	00169b38 farsubsp 0x4
 	00169b40 pop op
 	00169b48 sourceline 0x1521
 	00169b50 mov ax,0x190
 	00169b5c farpush ax
 	00169b64 mov ax,0x3
 	00169b70 farpush ax
 	00169b78 setfuncargs 0x2
 	00169b80 mov ax,0x756f20
 	00169b8c farcall ax
 	00169b94 farsubsp 0x2
 	00169b9c sourceline 0x1522
 	00169ba4 mov ax,0x1
 	00169bb0 farpush ax
 	00169bb8 setfuncargs 0x1
 	00169bc0 mov ax,0x426f20
 	00169bcc farcall ax
 	00169bd4 farsubsp 0x1
 	00169bdc sourceline 0x1523
 	00169be4 push op
 	00169bec mov ax,0x130
 	00169bf8 farpush ax
 	00169c00 mov ax,0x397
 	00169c0c farpush ax
 	00169c14 mov ax,0x8b
 	00169c20 farpush ax
 	00169c28 mov mar,0x3cef20
 	00169c34 mov ax,mar
 	00169c40 push op
 	00169c48 mov op,ax
 	00169c50 setfuncargs 0x0
 	00169c58 mov ax,0xb36f20
 	00169c64 farcall ax
 	00169c6c pop op
 	00169c74 push ax
 	00169c7c mov ax,0xd
 	00169c88 pop bx
 	00169c90 add bx,ax
 	00169c9c mov ax,bx
 	00169ca8 farpush ax
 	00169cb0 mov mar,0x3cef20
 	00169cbc mov ax,mar
 	00169cc8 mov op,ax
 	00169cd0 setfuncargs 0x4
 	00169cd8 mov ax,0xb2ef20
 	00169ce4 farcall ax
 	00169cec farsubsp 0x4
 	00169cf4 pop op
 	00169cfc sourceline 0x1524
 	00169d04 push op
 	00169d0c mov ax,0x397
 	00169d18 farpush ax
 	00169d20 mov ax,0x6
 	00169d2c farpush ax
 	00169d34 mov mar,0x3cef20
 	00169d40 mov ax,mar
 	00169d4c mov op,ax
 	00169d54 setfuncargs 0x2
 	00169d5c mov ax,0x6eef20
 	00169d68 farcall ax
 	00169d70 farsubsp 0x2
 	00169d78 pop op
 	00169d80 sourceline 0x1525
 	00169d88 mov ax,0x8
 	00169d94 farpush ax
 	00169d9c setfuncargs 0x1
 	00169da4 mov ax,0x426f20
 	00169db0 farcall ax
 	00169db8 farsubsp 0x1
 	00169dc0 sourceline 0x1526
 	00169dc8 push op
 	00169dd0 mov ax,0x4a
 	00169ddc farpush ax
 	00169de4 mov mar,0x3cef20
 	00169df0 mov ax,mar
 	00169dfc mov op,ax
 	00169e04 setfuncargs 0x1
 	00169e0c mov ax,0x51ef20
 	00169e18 farcall ax
 	00169e20 farsubsp 0x1
 	00169e28 pop op
 	00169e30 sourceline 0x1527
 	00169e38 mov ax,0x85
 	00169e44 mov bx,ax
 	00169e50 mov mar,0x3cef20
 	00169e5c mov ax,mar
 	00169e68 push op
 	00169e70 mov op,ax
 	00169e78 farpush bx
 	00169e80 setfuncargs 0x1
 	00169e88 mov ax,0x526f20
 	00169e94 farcall ax
 	00169e9c farsubsp 0x1
 	00169ea4 pop op
 	00169eac sourceline 0x1528
 	00169eb4 mov ax,0xd4
 	00169ec0 mov bx,ax
 	00169ecc mov mar,0x3cef20
 	00169ed8 mov ax,mar
 	00169ee4 push op
 	00169eec mov op,ax
 	00169ef4 farpush bx
 	00169efc setfuncargs 0x1
 	00169f04 mov ax,0x70ef20
 	00169f10 farcall ax
 	00169f18 farsubsp 0x1
 	00169f20 pop op
 	00169f28 sourceline 0x1529
 	00169f30 push op
 	00169f38 mov ax,0x426
 	00169f44 farpush ax
 	00169f4c mov ax,0x397
 	00169f58 farpush ax
 	00169f60 mov ax,0x0
 	00169f6c farpush ax
 	00169f74 mov ax,0x3
 	00169f80 farpush ax
 	00169f88 mov ax,0x0
 	00169f94 farpush ax
 	00169f9c mov mar,0x3cef20
 	00169fa8 mov ax,mar
 	00169fb4 mov op,ax
 	00169fbc setfuncargs 0x5
 	00169fc4 mov ax,0x536f20
 	00169fd0 farcall ax
 	00169fd8 farsubsp 0x5
 	00169fe0 pop op
 	00169fe8 sourceline 0x152a
 	00169ff0 mov ax,0x1
 	00169ffc mov mar,0xb56f20
 	0016a008 memwrite4 ax
 	0016a010 sourceline 0x152b
 	0016a018 mov ax,0x0
 	0016a024 mov bx,ax
 	0016a030 mov mar,0x3cef20
 	0016a03c mov ax,mar
 	0016a048 push op
 	0016a050 mov op,ax
 	0016a058 farpush bx
 	0016a060 setfuncargs 0x1
 	0016a068 mov ax,0x436f20
 	0016a074 farcall ax
 	0016a07c farsubsp 0x1
 	0016a084 pop op
 	0016a08c sourceline 0x152d
 	0016a094 mov ax,0x1
 	0016a0a0 mov bx,ax
 	0016a0ac mov mar,0x336f20
 	0016a0b8 mov ax,mar
 	0016a0c4 farpush bx
 	0016a0cc setfuncargs 0x1
 	0016a0d4 mov ax,0x43ef20
 	0016a0e0 farcall ax
 	0016a0e8 farsubsp 0x1
		0016a0f0: FALL_THROUGH

	[0016a0f0]
		001683f0: UNCONDITIONAL_JUMP
		00168444: FALL_THROUGH
 	0016a0f0 sourceline 0x152f
 	0016a0f8 jmp 0x0016b168
		0016b168: UNCONDITIONAL_JUMP

	[0016a100]
		00168314: CONDITIONAL_JUMP
 	0016a100 sourceline 0x1532
 	0016a108 mov ax,0x0
 	0016a114 mov mar,0xb56f20
 	0016a120 memwrite4 ax
 	0016a128 sourceline 0x1533
 	0016a130 mov ax,0x0
 	0016a13c mov bx,ax
 	0016a148 mov mar,0x3cef20
 	0016a154 mov ax,mar
 	0016a160 push op
 	0016a168 mov op,ax
 	0016a170 farpush bx
 	0016a178 setfuncargs 0x1
 	0016a180 mov ax,0x436f20
 	0016a18c farcall ax
 	0016a194 farsubsp 0x1
 	0016a19c pop op
 	0016a1a4 sourceline 0x1534
 	0016a1ac push op
 	0016a1b4 mov ax,0x427
 	0016a1c0 farpush ax
 	0016a1c8 mov ax,0x397
 	0016a1d4 farpush ax
 	0016a1dc mov ax,0x0
 	0016a1e8 farpush ax
 	0016a1f0 mov ax,0x4
 	0016a1fc farpush ax
 	0016a204 mov ax,0x0
 	0016a210 farpush ax
 	0016a218 mov mar,0x3cef20
 	0016a224 mov ax,mar
 	0016a230 mov op,ax
 	0016a238 setfuncargs 0x5
 	0016a240 mov ax,0x536f20
 	0016a24c farcall ax
 	0016a254 farsubsp 0x5
 	0016a25c pop op
 	0016a264 sourceline 0x1535
 	0016a26c push op
 	0016a274 mov ax,0x2
 	0016a280 farpush ax
 	0016a288 mov mar,0x3cef20
 	0016a294 mov ax,mar
 	0016a2a0 mov op,ax
 	0016a2a8 setfuncargs 0x1
 	0016a2b0 mov ax,0x51ef20
 	0016a2bc farcall ax
 	0016a2c4 farsubsp 0x1
 	0016a2cc pop op
 	0016a2d4 sourceline 0x1536
 	0016a2dc mov ax,0x8c
 	0016a2e8 farpush ax
 	0016a2f0 mov ax,0x7
 	0016a2fc farpush ax
 	0016a304 setfuncargs 0x2
 	0016a30c mov ax,0x756f20
 	0016a318 farcall ax
 	0016a320 farsubsp 0x2
 	0016a328 sourceline 0x1537
 	0016a330 mov ax,0xd0
 	0016a33c mov bx,ax
 	0016a348 mov mar,0x3cef20
 	0016a354 mov ax,mar
 	0016a360 push op
 	0016a368 mov op,ax
 	0016a370 farpush bx
 	0016a378 setfuncargs 0x1
 	0016a380 mov ax,0x70ef20
 	0016a38c farcall ax
 	0016a394 farsubsp 0x1
 	0016a39c pop op
 	0016a3a4 sourceline 0x1538
 	0016a3ac mov ax,0x8b
 	0016a3b8 mov bx,ax
 	0016a3c4 mov mar,0x3cef20
 	0016a3d0 mov ax,mar
 	0016a3dc push op
 	0016a3e4 mov op,ax
 	0016a3ec farpush bx
 	0016a3f4 setfuncargs 0x1
 	0016a3fc mov ax,0x526f20
 	0016a408 farcall ax
 	0016a410 farsubsp 0x1
 	0016a418 pop op
 	0016a420 sourceline 0x1539
 	0016a428 push op
 	0016a430 mov ax,0x131
 	0016a43c farpush ax
 	0016a444 mov ax,0x397
 	0016a450 farpush ax
 	0016a458 mov ax,0x84
 	0016a464 farpush ax
 	0016a46c mov ax,0xb1
 	0016a478 farpush ax
 	0016a480 mov mar,0x3cef20
 	0016a48c mov ax,mar
 	0016a498 mov op,ax
 	0016a4a0 setfuncargs 0x4
 	0016a4a8 mov ax,0xb2ef20
 	0016a4b4 farcall ax
 	0016a4bc farsubsp 0x4
 	0016a4c4 pop op
 	0016a4cc sourceline 0x153a
 	0016a4d4 push op
 	0016a4dc mov ax,0x6
 	0016a4e8 farpush ax
 	0016a4f0 mov mar,0x3cef20
 	0016a4fc mov ax,mar
 	0016a508 mov op,ax
 	0016a510 setfuncargs 0x1
 	0016a518 mov ax,0x51ef20
 	0016a524 farcall ax
 	0016a52c farsubsp 0x1
 	0016a534 pop op
 	0016a53c sourceline 0x153b
 	0016a544 mov mar,0x3cef20
 	0016a550 mov ax,mar
 	0016a55c push op
 	0016a564 mov op,ax
 	0016a56c setfuncargs 0x0
 	0016a574 mov ax,0x78ef20
 	0016a580 farcall ax
 	0016a588 pop op
 	0016a590 push ax
 	0016a598 mov ax,0x8
 	0016a5a4 pop bx
 	0016a5ac sub bx,ax
 	0016a5b8 mov ax,bx
 	0016a5c4 mov bx,ax
 	0016a5d0 mov mar,0x3cef20
 	0016a5dc mov ax,mar
 	0016a5e8 push op
 	0016a5f0 mov op,ax
 	0016a5f8 farpush bx
 	0016a600 setfuncargs 0x1
 	0016a608 mov ax,0x526f20
 	0016a614 farcall ax
 	0016a61c farsubsp 0x1
 	0016a624 pop op
 	0016a62c sourceline 0x153c
 	0016a634 mov mar,0x3cef20
 	0016a640 mov ax,mar
 	0016a64c push op
 	0016a654 mov op,ax
 	0016a65c setfuncargs 0x0
 	0016a664 mov ax,0xb36f20
 	0016a670 farcall ax
 	0016a678 pop op
 	0016a680 push ax
 	0016a688 mov ax,0x8
 	0016a694 pop bx
 	0016a69c sub bx,ax
 	0016a6a8 mov ax,bx
 	0016a6b4 mov bx,ax
 	0016a6c0 mov mar,0x3cef20
 	0016a6cc mov ax,mar
 	0016a6d8 push op
 	0016a6e0 mov op,ax
 	0016a6e8 farpush bx
 	0016a6f0 setfuncargs 0x1
 	0016a6f8 mov ax,0x70ef20
 	0016a704 farcall ax
 	0016a70c farsubsp 0x1
 	0016a714 pop op
 	0016a71c sourceline 0x153d
 	0016a724 push op
 	0016a72c mov ax,0x426
 	0016a738 farpush ax
 	0016a740 mov ax,0x397
 	0016a74c farpush ax
 	0016a754 mov ax,0x0
 	0016a760 farpush ax
 	0016a768 mov ax,0x3
 	0016a774 farpush ax
 	0016a77c mov ax,0x1
 	0016a788 farpush ax
 	0016a790 mov mar,0x3cef20
 	0016a79c mov ax,mar
 	0016a7a8 mov op,ax
 	0016a7b0 setfuncargs 0x5
 	0016a7b8 mov ax,0x536f20
 	0016a7c4 farcall ax
 	0016a7cc farsubsp 0x5
 	0016a7d4 pop op
 	0016a7dc sourceline 0x153f
 	0016a7e4 mov ax,0x3
 	0016a7f0 mov bx,ax
 	0016a7fc mov mar,0x3cef20
 	0016a808 mov ax,mar
 	0016a814 push op
 	0016a81c mov op,ax
 	0016a824 farpush bx
 	0016a82c setfuncargs 0x1
 	0016a834 mov ax,0x69ef20
 	0016a840 farcall ax
 	0016a848 farsubsp 0x1
 	0016a850 pop op
 	0016a858 sourceline 0x1540
 	0016a860 push op
 	0016a868 mov ax,0x2be61d
 	0016a874 farpush ax
 	0016a87c mov mar,0x3cef20
 	0016a888 mov ax,mar
 	0016a894 mov op,ax
 	0016a89c setfuncargs 0x1
 	0016a8a4 mov ax,0x6f6f20
 	0016a8b0 farcall ax
 	0016a8b8 farsubsp 0x1
 	0016a8c0 pop op
 	0016a8c8 sourceline 0x1541
 	0016a8d0 push op
 	0016a8d8 mov ax,0x2be641
 	0016a8e4 farpush ax
 	0016a8ec mov mar,0x746f20
 	0016a8f8 mov ax,mar
 	0016a904 mov op,ax
 	0016a90c setfuncargs 0x1
 	0016a914 mov ax,0x6f6f20
 	0016a920 farcall ax
 	0016a928 farsubsp 0x1
 	0016a930 pop op
 	0016a938 sourceline 0x1542
 	0016a940 push op
 	0016a948 mov ax,0x427
 	0016a954 farpush ax
 	0016a95c mov ax,0x397
 	0016a968 farpush ax
 	0016a970 mov ax,0x0
 	0016a97c farpush ax
 	0016a984 mov ax,0x3
 	0016a990 farpush ax
 	0016a998 mov ax,0x1
 	0016a9a4 farpush ax
 	0016a9ac mov mar,0x3cef20
 	0016a9b8 mov ax,mar
 	0016a9c4 mov op,ax
 	0016a9cc setfuncargs 0x5
 	0016a9d4 mov ax,0x536f20
 	0016a9e0 farcall ax
 	0016a9e8 farsubsp 0x5
 	0016a9f0 pop op
 	0016a9f8 sourceline 0x1543
 	0016aa00 push op
 	0016aa08 mov ax,0x2
 	0016aa14 farpush ax
 	0016aa1c mov mar,0x3cef20
 	0016aa28 mov ax,mar
 	0016aa34 mov op,ax
 	0016aa3c setfuncargs 0x1
 	0016aa44 mov ax,0x51ef20
 	0016aa50 farcall ax
 	0016aa58 farsubsp 0x1
 	0016aa60 pop op
 	0016aa68 sourceline 0x1544
 	0016aa70 mov mar,0x3cef20
 	0016aa7c mov ax,mar
 	0016aa88 push op
 	0016aa90 mov op,ax
 	0016aa98 setfuncargs 0x0
 	0016aaa0 mov ax,0x78ef20
 	0016aaac farcall ax
 	0016aab4 pop op
 	0016aabc push ax
 	0016aac4 mov ax,0x8
 	0016aad0 pop bx
 	0016aad8 add bx,ax
 	0016aae4 mov ax,bx
 	0016aaf0 mov bx,ax
 	0016aafc mov mar,0x3cef20
 	0016ab08 mov ax,mar
 	0016ab14 push op
 	0016ab1c mov op,ax
 	0016ab24 farpush bx
 	0016ab2c setfuncargs 0x1
 	0016ab34 mov ax,0x526f20
 	0016ab40 farcall ax
 	0016ab48 farsubsp 0x1
 	0016ab50 pop op
 	0016ab58 sourceline 0x1545
 	0016ab60 mov mar,0x3cef20
 	0016ab6c mov ax,mar
 	0016ab78 push op
 	0016ab80 mov op,ax
 	0016ab88 setfuncargs 0x0
 	0016ab90 mov ax,0xb36f20
 	0016ab9c farcall ax
 	0016aba4 pop op
 	0016abac push ax
 	0016abb4 mov ax,0x8
 	0016abc0 pop bx
 	0016abc8 add bx,ax
 	0016abd4 mov ax,bx
 	0016abe0 mov bx,ax
 	0016abec mov mar,0x3cef20
 	0016abf8 mov ax,mar
 	0016ac04 push op
 	0016ac0c mov op,ax
 	0016ac14 farpush bx
 	0016ac1c setfuncargs 0x1
 	0016ac24 mov ax,0x70ef20
 	0016ac30 farcall ax
 	0016ac38 farsubsp 0x1
 	0016ac40 pop op
 	0016ac48 sourceline 0x1546
 	0016ac50 push op
 	0016ac58 mov ax,0x131
 	0016ac64 farpush ax
 	0016ac6c mov ax,0x397
 	0016ac78 farpush ax
 	0016ac80 mov ax,0x8b
 	0016ac8c farpush ax
 	0016ac94 mov ax,0xc3
 	0016aca0 farpush ax
 	0016aca8 mov mar,0x3cef20
 	0016acb4 mov ax,mar
 	0016acc0 mov op,ax
 	0016acc8 setfuncargs 0x4
 	0016acd0 mov ax,0xb2ef20
 	0016acdc farcall ax
 	0016ace4 farsubsp 0x4
 	0016acec pop op
 	0016acf4 sourceline 0x1547
 	0016acfc mov ax,0x1
 	0016ad08 farpush ax
 	0016ad10 setfuncargs 0x1
 	0016ad18 mov ax,0x426f20
 	0016ad24 farcall ax
 	0016ad2c farsubsp 0x1
 	0016ad34 sourceline 0x1548
 	0016ad3c push op
 	0016ad44 mov ax,0x130
 	0016ad50 farpush ax
 	0016ad58 mov ax,0x397
 	0016ad64 farpush ax
 	0016ad6c mov ax,0x8b
 	0016ad78 farpush ax
 	0016ad80 mov mar,0x3cef20
 	0016ad8c mov ax,mar
 	0016ad98 push op
 	0016ada0 mov op,ax
 	0016ada8 setfuncargs 0x0
 	0016adb0 mov ax,0xb36f20
 	0016adbc farcall ax
 	0016adc4 pop op
 	0016adcc push ax
 	0016add4 mov ax,0xd
 	0016ade0 pop bx
 	0016ade8 add bx,ax
 	0016adf4 mov ax,bx
 	0016ae00 farpush ax
 	0016ae08 mov mar,0x3cef20
 	0016ae14 mov ax,mar
 	0016ae20 mov op,ax
 	0016ae28 setfuncargs 0x4
 	0016ae30 mov ax,0xb2ef20
 	0016ae3c farcall ax
 	0016ae44 farsubsp 0x4
 	0016ae4c pop op
 	0016ae54 sourceline 0x1549
 	0016ae5c push op
 	0016ae64 mov ax,0x397
 	0016ae70 farpush ax
 	0016ae78 mov ax,0x6
 	0016ae84 farpush ax
 	0016ae8c mov mar,0x3cef20
 	0016ae98 mov ax,mar
 	0016aea4 mov op,ax
 	0016aeac setfuncargs 0x2
 	0016aeb4 mov ax,0x6eef20
 	0016aec0 farcall ax
 	0016aec8 farsubsp 0x2
 	0016aed0 pop op
 	0016aed8 sourceline 0x154a
 	0016aee0 mov ax,0x8
 	0016aeec farpush ax
 	0016aef4 setfuncargs 0x1
 	0016aefc mov ax,0x426f20
 	0016af08 farcall ax
 	0016af10 farsubsp 0x1
 	0016af18 sourceline 0x154b
 	0016af20 push op
 	0016af28 mov ax,0x4a
 	0016af34 farpush ax
 	0016af3c mov mar,0x3cef20
 	0016af48 mov ax,mar
 	0016af54 mov op,ax
 	0016af5c setfuncargs 0x1
 	0016af64 mov ax,0x51ef20
 	0016af70 farcall ax
 	0016af78 farsubsp 0x1
 	0016af80 pop op
 	0016af88 sourceline 0x154c
 	0016af90 mov ax,0x85
 	0016af9c mov bx,ax
 	0016afa8 mov mar,0x3cef20
 	0016afb4 mov ax,mar
 	0016afc0 push op
 	0016afc8 mov op,ax
 	0016afd0 farpush bx
 	0016afd8 setfuncargs 0x1
 	0016afe0 mov ax,0x526f20
 	0016afec farcall ax
 	0016aff4 farsubsp 0x1
 	0016affc pop op
 	0016b004 sourceline 0x154d
 	0016b00c mov ax,0xd4
 	0016b018 mov bx,ax
 	0016b024 mov mar,0x3cef20
 	0016b030 mov ax,mar
 	0016b03c push op
 	0016b044 mov op,ax
 	0016b04c farpush bx
 	0016b054 setfuncargs 0x1
 	0016b05c mov ax,0x70ef20
 	0016b068 farcall ax
 	0016b070 farsubsp 0x1
 	0016b078 pop op
 	0016b080 sourceline 0x154e
 	0016b088 push op
 	0016b090 mov ax,0x426
 	0016b09c farpush ax
 	0016b0a4 mov ax,0x397
 	0016b0b0 farpush ax
 	0016b0b8 mov ax,0x0
 	0016b0c4 farpush ax
 	0016b0cc mov ax,0x3
 	0016b0d8 farpush ax
 	0016b0e0 mov ax,0x0
 	0016b0ec farpush ax
 	0016b0f4 mov mar,0x3cef20
 	0016b100 mov ax,mar
 	0016b10c mov op,ax
 	0016b114 setfuncargs 0x5
 	0016b11c mov ax,0x536f20
 	0016b128 farcall ax
 	0016b130 farsubsp 0x5
 	0016b138 pop op
 	0016b140 sourceline 0x154f
 	0016b148 mov ax,0x1
 	0016b154 mov mar,0xb56f20
 	0016b160 memwrite4 ax
		0016b168: FALL_THROUGH

	[0016b168]
		0016a0f0: UNCONDITIONAL_JUMP
		0016a100: FALL_THROUGH
 	0016b168 sourceline 0x1551
 	0016b170 jmp 0x0017131c
		0017131c: UNCONDITIONAL_JUMP

	[0016b178]
		00168240: CONDITIONAL_JUMP
 	0016b178 sourceline 0x1554
 	0016b180 mov mar,0x3cef20
 	0016b18c mov ax,mar
 	0016b198 push op
 	0016b1a0 mov op,ax
 	0016b1a8 setfuncargs 0x0
 	0016b1b0 mov ax,0x89ef20
 	0016b1bc farcall ax
 	0016b1c4 pop op
 	0016b1cc push ax
 	0016b1d4 mov mar,0x8cef20
 	0016b1e0 mov ax,mar
 	0016b1ec pop bx
 	0016b1f4 cmpeq bx,ax
 	0016b200 mov ax,bx
 	0016b20c jnz 0x0016b2c8
		0016b2c8: CONDITIONAL_JUMP
		0016b214: FALL_THROUGH

	[0016b214]
		0016b178: FALL_THROUGH
 	0016b214 push ax
 	0016b21c mov mar,0x3cef20
 	0016b228 mov ax,mar
 	0016b234 push op
 	0016b23c mov op,ax
 	0016b244 setfuncargs 0x0
 	0016b24c mov ax,0x89ef20
 	0016b258 farcall ax
 	0016b260 pop op
 	0016b268 push ax
 	0016b270 mov mar,0x8b6f20
 	0016b27c mov ax,mar
 	0016b288 pop bx
 	0016b290 cmpeq bx,ax
 	0016b29c mov ax,bx
 	0016b2a8 pop bx
 	0016b2b0 lor bx,ax
 	0016b2bc mov ax,bx
		0016b2c8: FALL_THROUGH

	[0016b2c8]
		0016b178: CONDITIONAL_JUMP
		0016b214: FALL_THROUGH
 	0016b2c8 jnz 0x0016b384
		0016b384: CONDITIONAL_JUMP
		0016b2d0: FALL_THROUGH

	[0016b2d0]
		0016b2c8: FALL_THROUGH
 	0016b2d0 push ax
 	0016b2d8 mov mar,0x3cef20
 	0016b2e4 mov ax,mar
 	0016b2f0 push op
 	0016b2f8 mov op,ax
 	0016b300 setfuncargs 0x0
 	0016b308 mov ax,0x89ef20
 	0016b314 farcall ax
 	0016b31c pop op
 	0016b324 push ax
 	0016b32c mov mar,0x8c6f20
 	0016b338 mov ax,mar
 	0016b344 pop bx
 	0016b34c cmpeq bx,ax
 	0016b358 mov ax,bx
 	0016b364 pop bx
 	0016b36c lor bx,ax
 	0016b378 mov ax,bx
		0016b384: FALL_THROUGH

	[0016b384]
		0016b2c8: CONDITIONAL_JUMP
		0016b2d0: FALL_THROUGH
 	0016b384 jz 0x0016c8c0
		0016c8c0: CONDITIONAL_JUMP
		0016b38c: FALL_THROUGH

	[0016b38c]
		0016b384: FALL_THROUGH
 	0016b38c sourceline 0x1556
 	0016b394 mov mar,0xca6f20
 	0016b3a0 memread4 ax
 	0016b3a8 lnot ax
 	0016b3b0 jz 0x0016b588
		0016b588: CONDITIONAL_JUMP
		0016b3b8: FALL_THROUGH

	[0016b3b8]
		0016b38c: FALL_THROUGH
 	0016b3b8 sourceline 0x1558
 	0016b3c0 push op
 	0016b3c8 mov ax,0x397
 	0016b3d4 farpush ax
 	0016b3dc mov ax,0x98
 	0016b3e8 farpush ax
 	0016b3f0 mov ax,0x33
 	0016b3fc farpush ax
 	0016b404 mov mar,0x3cef20
 	0016b410 mov ax,mar
 	0016b41c mov op,ax
 	0016b424 setfuncargs 0x3
 	0016b42c mov ax,0x726f20
 	0016b438 farcall ax
 	0016b440 farsubsp 0x3
 	0016b448 pop op
 	0016b450 sourceline 0x1559
 	0016b458 mov ax,0x1
 	0016b464 mov bx,ax
 	0016b470 mov mar,0x3cef20
 	0016b47c mov ax,mar
 	0016b488 push op
 	0016b490 mov op,ax
 	0016b498 farpush bx
 	0016b4a0 setfuncargs 0x1
 	0016b4a8 mov ax,0x69ef20
 	0016b4b4 farcall ax
 	0016b4bc farsubsp 0x1
 	0016b4c4 pop op
 	0016b4cc sourceline 0x155b
 	0016b4d4 push op
 	0016b4dc mov ax,0x2beb3c
 	0016b4e8 farpush ax
 	0016b4f0 mov ax,0x138
 	0016b4fc farpush ax
 	0016b504 mov ax,0x92
 	0016b510 farpush ax
 	0016b518 mov ax,0x0
 	0016b524 farpush ax
 	0016b52c mov mar,0x3cef20
 	0016b538 mov ax,mar
 	0016b544 mov op,ax
 	0016b54c setfuncargs 0x4
 	0016b554 mov ax,0x6aef20
 	0016b560 farcall ax
 	0016b568 farsubsp 0x4
 	0016b570 pop op
 	0016b578 sourceline 0x155c
 	0016b580 jmp 0x0016c8b0
		0016c8b0: UNCONDITIONAL_JUMP

	[0016b588]
		0016b38c: CONDITIONAL_JUMP
 	0016b588 sourceline 0x155f
 	0016b590 mov ax,0x0
 	0016b59c mov mar,0xb56f20
 	0016b5a8 memwrite4 ax
 	0016b5b0 sourceline 0x1560
 	0016b5b8 mov ax,0x0
 	0016b5c4 mov bx,ax
 	0016b5d0 mov mar,0x3cef20
 	0016b5dc mov ax,mar
 	0016b5e8 push op
 	0016b5f0 mov op,ax
 	0016b5f8 farpush bx
 	0016b600 setfuncargs 0x1
 	0016b608 mov ax,0x436f20
 	0016b614 farcall ax
 	0016b61c farsubsp 0x1
 	0016b624 pop op
 	0016b62c sourceline 0x1561
 	0016b634 push op
 	0016b63c mov ax,0x427
 	0016b648 farpush ax
 	0016b650 mov ax,0x397
 	0016b65c farpush ax
 	0016b664 mov ax,0x0
 	0016b670 farpush ax
 	0016b678 mov ax,0x4
 	0016b684 farpush ax
 	0016b68c mov ax,0x0
 	0016b698 farpush ax
 	0016b6a0 mov mar,0x3cef20
 	0016b6ac mov ax,mar
 	0016b6b8 mov op,ax
 	0016b6c0 setfuncargs 0x5
 	0016b6c8 mov ax,0x536f20
 	0016b6d4 farcall ax
 	0016b6dc farsubsp 0x5
 	0016b6e4 pop op
 	0016b6ec sourceline 0x1562
 	0016b6f4 push op
 	0016b6fc mov ax,0x2
 	0016b708 farpush ax
 	0016b710 mov mar,0x3cef20
 	0016b71c mov ax,mar
 	0016b728 mov op,ax
 	0016b730 setfuncargs 0x1
 	0016b738 mov ax,0x51ef20
 	0016b744 farcall ax
 	0016b74c farsubsp 0x1
 	0016b754 pop op
 	0016b75c sourceline 0x1563
 	0016b764 mov ax,0x8c
 	0016b770 farpush ax
 	0016b778 mov ax,0x7
 	0016b784 farpush ax
 	0016b78c setfuncargs 0x2
 	0016b794 mov ax,0x756f20
 	0016b7a0 farcall ax
 	0016b7a8 farsubsp 0x2
 	0016b7b0 sourceline 0x1564
 	0016b7b8 mov ax,0xd0
 	0016b7c4 mov bx,ax
 	0016b7d0 mov mar,0x3cef20
 	0016b7dc mov ax,mar
 	0016b7e8 push op
 	0016b7f0 mov op,ax
 	0016b7f8 farpush bx
 	0016b800 setfuncargs 0x1
 	0016b808 mov ax,0x70ef20
 	0016b814 farcall ax
 	0016b81c farsubsp 0x1
 	0016b824 pop op
 	0016b82c sourceline 0x1565
 	0016b834 mov ax,0x8b
 	0016b840 mov bx,ax
 	0016b84c mov mar,0x3cef20
 	0016b858 mov ax,mar
 	0016b864 push op
 	0016b86c mov op,ax
 	0016b874 farpush bx
 	0016b87c setfuncargs 0x1
 	0016b884 mov ax,0x526f20
 	0016b890 farcall ax
 	0016b898 farsubsp 0x1
 	0016b8a0 pop op
 	0016b8a8 sourceline 0x1566
 	0016b8b0 push op
 	0016b8b8 mov ax,0x131
 	0016b8c4 farpush ax
 	0016b8cc mov ax,0x397
 	0016b8d8 farpush ax
 	0016b8e0 mov ax,0x84
 	0016b8ec farpush ax
 	0016b8f4 mov ax,0xb1
 	0016b900 farpush ax
 	0016b908 mov mar,0x3cef20
 	0016b914 mov ax,mar
 	0016b920 mov op,ax
 	0016b928 setfuncargs 0x4
 	0016b930 mov ax,0xb2ef20
 	0016b93c farcall ax
 	0016b944 farsubsp 0x4
 	0016b94c pop op
 	0016b954 sourceline 0x1567
 	0016b95c push op
 	0016b964 mov ax,0x6
 	0016b970 farpush ax
 	0016b978 mov mar,0x3cef20
 	0016b984 mov ax,mar
 	0016b990 mov op,ax
 	0016b998 setfuncargs 0x1
 	0016b9a0 mov ax,0x51ef20
 	0016b9ac farcall ax
 	0016b9b4 farsubsp 0x1
 	0016b9bc pop op
 	0016b9c4 sourceline 0x1568
 	0016b9cc mov mar,0x3cef20
 	0016b9d8 mov ax,mar
 	0016b9e4 push op
 	0016b9ec mov op,ax
 	0016b9f4 setfuncargs 0x0
 	0016b9fc mov ax,0x78ef20
 	0016ba08 farcall ax
 	0016ba10 pop op
 	0016ba18 push ax
 	0016ba20 mov ax,0x8
 	0016ba2c pop bx
 	0016ba34 sub bx,ax
 	0016ba40 mov ax,bx
 	0016ba4c mov bx,ax
 	0016ba58 mov mar,0x3cef20
 	0016ba64 mov ax,mar
 	0016ba70 push op
 	0016ba78 mov op,ax
 	0016ba80 farpush bx
 	0016ba88 setfuncargs 0x1
 	0016ba90 mov ax,0x526f20
 	0016ba9c farcall ax
 	0016baa4 farsubsp 0x1
 	0016baac pop op
 	0016bab4 sourceline 0x1569
 	0016babc mov mar,0x3cef20
 	0016bac8 mov ax,mar
 	0016bad4 push op
 	0016badc mov op,ax
 	0016bae4 setfuncargs 0x0
 	0016baec mov ax,0xb36f20
 	0016baf8 farcall ax
 	0016bb00 pop op
 	0016bb08 push ax
 	0016bb10 mov ax,0x8
 	0016bb1c pop bx
 	0016bb24 sub bx,ax
 	0016bb30 mov ax,bx
 	0016bb3c mov bx,ax
 	0016bb48 mov mar,0x3cef20
 	0016bb54 mov ax,mar
 	0016bb60 push op
 	0016bb68 mov op,ax
 	0016bb70 farpush bx
 	0016bb78 setfuncargs 0x1
 	0016bb80 mov ax,0x70ef20
 	0016bb8c farcall ax
 	0016bb94 farsubsp 0x1
 	0016bb9c pop op
 	0016bba4 sourceline 0x156a
 	0016bbac push op
 	0016bbb4 mov ax,0x426
 	0016bbc0 farpush ax
 	0016bbc8 mov ax,0x397
 	0016bbd4 farpush ax
 	0016bbdc mov ax,0x0
 	0016bbe8 farpush ax
 	0016bbf0 mov ax,0x3
 	0016bbfc farpush ax
 	0016bc04 mov ax,0x1
 	0016bc10 farpush ax
 	0016bc18 mov mar,0x3cef20
 	0016bc24 mov ax,mar
 	0016bc30 mov op,ax
 	0016bc38 setfuncargs 0x5
 	0016bc40 mov ax,0x536f20
 	0016bc4c farcall ax
 	0016bc54 farsubsp 0x5
 	0016bc5c pop op
 	0016bc64 sourceline 0x156c
 	0016bc6c mov ax,0x3
 	0016bc78 mov bx,ax
 	0016bc84 mov mar,0x3cef20
 	0016bc90 mov ax,mar
 	0016bc9c push op
 	0016bca4 mov op,ax
 	0016bcac farpush bx
 	0016bcb4 setfuncargs 0x1
 	0016bcbc mov ax,0x69ef20
 	0016bcc8 farcall ax
 	0016bcd0 farsubsp 0x1
 	0016bcd8 pop op
 	0016bce0 sourceline 0x156e
 	0016bce8 mov ax,0x3
 	0016bcf4 farpush ax
 	0016bcfc setfuncargs 0x1
 	0016bd04 mov ax,0x4a6f20
 	0016bd10 farcall ax
 	0016bd18 farsubsp 0x1
 	0016bd20 mov mar,sp
 	0016bd2c memwrite4 ax
 	0016bd34 add sp,0x4
 	0016bd40 sourceline 0x156f
 	0016bd48 stackptr 0x4
 	0016bd50 memread4 ax
 	0016bd58 push ax
 	0016bd60 mov ax,0x0
 	0016bd6c pop bx
 	0016bd74 cmpeq bx,ax
 	0016bd80 mov ax,bx
 	0016bd8c jz 0x0016be04
		0016be04: CONDITIONAL_JUMP
		0016bd94: FALL_THROUGH

	[0016bd94]
		0016b588: FALL_THROUGH
 	0016bd94 push op
 	0016bd9c mov ax,0x2c8717
 	0016bda8 farpush ax
 	0016bdb0 mov mar,0x3cef20
 	0016bdbc mov ax,mar
 	0016bdc8 mov op,ax
 	0016bdd0 setfuncargs 0x1
 	0016bdd8 mov ax,0x6f6f20
 	0016bde4 farcall ax
 	0016bdec farsubsp 0x1
 	0016bdf4 pop op
 	0016bdfc jmp 0x0016bffc
		0016bffc: UNCONDITIONAL_JUMP

	[0016be04]
		0016b588: CONDITIONAL_JUMP
 	0016be04 sourceline 0x1570
 	0016be0c stackptr 0x4
 	0016be14 memread4 ax
 	0016be1c push ax
 	0016be24 mov ax,0x1
 	0016be30 pop bx
 	0016be38 cmpeq bx,ax
 	0016be44 mov ax,bx
 	0016be50 jz 0x0016bec8
		0016bec8: CONDITIONAL_JUMP
		0016be58: FALL_THROUGH

	[0016be58]
		0016be04: FALL_THROUGH
 	0016be58 push op
 	0016be60 mov ax,0x2c8740
 	0016be6c farpush ax
 	0016be74 mov mar,0x3cef20
 	0016be80 mov ax,mar
 	0016be8c mov op,ax
 	0016be94 setfuncargs 0x1
 	0016be9c mov ax,0x6f6f20
 	0016bea8 farcall ax
 	0016beb0 farsubsp 0x1
 	0016beb8 pop op
 	0016bec0 jmp 0x0016bffc
		0016bffc: UNCONDITIONAL_JUMP

	[0016bec8]
		0016be04: CONDITIONAL_JUMP
 	0016bec8 sourceline 0x1571
 	0016bed0 stackptr 0x4
 	0016bed8 memread4 ax
 	0016bee0 push ax
 	0016bee8 mov ax,0x2
 	0016bef4 pop bx
 	0016befc cmpeq bx,ax
 	0016bf08 mov ax,bx
 	0016bf14 jz 0x0016bf8c
		0016bf8c: CONDITIONAL_JUMP
		0016bf1c: FALL_THROUGH

	[0016bf1c]
		0016bec8: FALL_THROUGH
 	0016bf1c push op
 	0016bf24 mov ax,0x2c8769
 	0016bf30 farpush ax
 	0016bf38 mov mar,0x3cef20
 	0016bf44 mov ax,mar
 	0016bf50 mov op,ax
 	0016bf58 setfuncargs 0x1
 	0016bf60 mov ax,0x6f6f20
 	0016bf6c farcall ax
 	0016bf74 farsubsp 0x1
 	0016bf7c pop op
 	0016bf84 jmp 0x0016bffc
		0016bffc: UNCONDITIONAL_JUMP

	[0016bf8c]
		0016bec8: CONDITIONAL_JUMP
 	0016bf8c sourceline 0x1572
 	0016bf94 push op
 	0016bf9c mov ax,0x2c8792
 	0016bfa8 farpush ax
 	0016bfb0 mov mar,0x3cef20
 	0016bfbc mov ax,mar
 	0016bfc8 mov op,ax
 	0016bfd0 setfuncargs 0x1
 	0016bfd8 mov ax,0x6f6f20
 	0016bfe4 farcall ax
 	0016bfec farsubsp 0x1
 	0016bff4 pop op
		0016bffc: FALL_THROUGH

	[0016bffc]
		0016bd94: UNCONDITIONAL_JUMP
		0016be58: UNCONDITIONAL_JUMP
		0016bf1c: UNCONDITIONAL_JUMP
		0016bf8c: FALL_THROUGH
 	0016bffc sourceline 0x1574
 	0016c004 push op
 	0016c00c mov ax,0x2bec5d
 	0016c018 farpush ax
 	0016c020 mov mar,0x746f20
 	0016c02c mov ax,mar
 	0016c038 mov op,ax
 	0016c040 setfuncargs 0x1
 	0016c048 mov ax,0x6f6f20
 	0016c054 farcall ax
 	0016c05c farsubsp 0x1
 	0016c064 pop op
 	0016c06c sourceline 0x1575
 	0016c074 push op
 	0016c07c mov ax,0x427
 	0016c088 farpush ax
 	0016c090 mov ax,0x397
 	0016c09c farpush ax
 	0016c0a4 mov ax,0x0
 	0016c0b0 farpush ax
 	0016c0b8 mov ax,0x3
 	0016c0c4 farpush ax
 	0016c0cc mov ax,0x1
 	0016c0d8 farpush ax
 	0016c0e0 mov mar,0x3cef20
 	0016c0ec mov ax,mar
 	0016c0f8 mov op,ax
 	0016c100 setfuncargs 0x5
 	0016c108 mov ax,0x536f20
 	0016c114 farcall ax
 	0016c11c farsubsp 0x5
 	0016c124 pop op
 	0016c12c sourceline 0x1576
 	0016c134 push op
 	0016c13c mov ax,0x2
 	0016c148 farpush ax
 	0016c150 mov mar,0x3cef20
 	0016c15c mov ax,mar
 	0016c168 mov op,ax
 	0016c170 setfuncargs 0x1
 	0016c178 mov ax,0x51ef20
 	0016c184 farcall ax
 	0016c18c farsubsp 0x1
 	0016c194 pop op
 	0016c19c sourceline 0x1577
 	0016c1a4 mov mar,0x3cef20
 	0016c1b0 mov ax,mar
 	0016c1bc push op
 	0016c1c4 mov op,ax
 	0016c1cc setfuncargs 0x0
 	0016c1d4 mov ax,0x78ef20
 	0016c1e0 farcall ax
 	0016c1e8 pop op
 	0016c1f0 push ax
 	0016c1f8 mov ax,0x8
 	0016c204 pop bx
 	0016c20c add bx,ax
 	0016c218 mov ax,bx
 	0016c224 mov bx,ax
 	0016c230 mov mar,0x3cef20
 	0016c23c mov ax,mar
 	0016c248 push op
 	0016c250 mov op,ax
 	0016c258 farpush bx
 	0016c260 setfuncargs 0x1
 	0016c268 mov ax,0x526f20
 	0016c274 farcall ax
 	0016c27c farsubsp 0x1
 	0016c284 pop op
 	0016c28c sourceline 0x1578
 	0016c294 mov mar,0x3cef20
 	0016c2a0 mov ax,mar
 	0016c2ac push op
 	0016c2b4 mov op,ax
 	0016c2bc setfuncargs 0x0
 	0016c2c4 mov ax,0xb36f20
 	0016c2d0 farcall ax
 	0016c2d8 pop op
 	0016c2e0 push ax
 	0016c2e8 mov ax,0x8
 	0016c2f4 pop bx
 	0016c2fc add bx,ax
 	0016c308 mov ax,bx
 	0016c314 mov bx,ax
 	0016c320 mov mar,0x3cef20
 	0016c32c mov ax,mar
 	0016c338 push op
 	0016c340 mov op,ax
 	0016c348 farpush bx
 	0016c350 setfuncargs 0x1
 	0016c358 mov ax,0x70ef20
 	0016c364 farcall ax
 	0016c36c farsubsp 0x1
 	0016c374 pop op
 	0016c37c sourceline 0x1579
 	0016c384 push op
 	0016c38c mov ax,0x131
 	0016c398 farpush ax
 	0016c3a0 mov ax,0x397
 	0016c3ac farpush ax
 	0016c3b4 mov ax,0x8b
 	0016c3c0 farpush ax
 	0016c3c8 mov ax,0xc3
 	0016c3d4 farpush ax
 	0016c3dc mov mar,0x3cef20
 	0016c3e8 mov ax,mar
 	0016c3f4 mov op,ax
 	0016c3fc setfuncargs 0x4
 	0016c404 mov ax,0xb2ef20
 	0016c410 farcall ax
 	0016c418 farsubsp 0x4
 	0016c420 pop op
 	0016c428 sourceline 0x157a
 	0016c430 mov ax,0x1
 	0016c43c farpush ax
 	0016c444 setfuncargs 0x1
 	0016c44c mov ax,0x426f20
 	0016c458 farcall ax
 	0016c460 farsubsp 0x1
 	0016c468 sourceline 0x157b
 	0016c470 push op
 	0016c478 mov ax,0x130
 	0016c484 farpush ax
 	0016c48c mov ax,0x397
 	0016c498 farpush ax
 	0016c4a0 mov ax,0x8b
 	0016c4ac farpush ax
 	0016c4b4 mov mar,0x3cef20
 	0016c4c0 mov ax,mar
 	0016c4cc push op
 	0016c4d4 mov op,ax
 	0016c4dc setfuncargs 0x0
 	0016c4e4 mov ax,0xb36f20
 	0016c4f0 farcall ax
 	0016c4f8 pop op
 	0016c500 push ax
 	0016c508 mov ax,0xd
 	0016c514 pop bx
 	0016c51c add bx,ax
 	0016c528 mov ax,bx
 	0016c534 farpush ax
 	0016c53c mov mar,0x3cef20
 	0016c548 mov ax,mar
 	0016c554 mov op,ax
 	0016c55c setfuncargs 0x4
 	0016c564 mov ax,0xb2ef20
 	0016c570 farcall ax
 	0016c578 farsubsp 0x4
 	0016c580 pop op
 	0016c588 sourceline 0x157c
 	0016c590 push op
 	0016c598 mov ax,0x397
 	0016c5a4 farpush ax
 	0016c5ac mov ax,0x6
 	0016c5b8 farpush ax
 	0016c5c0 mov mar,0x3cef20
 	0016c5cc mov ax,mar
 	0016c5d8 mov op,ax
 	0016c5e0 setfuncargs 0x2
 	0016c5e8 mov ax,0x6eef20
 	0016c5f4 farcall ax
 	0016c5fc farsubsp 0x2
 	0016c604 pop op
 	0016c60c sourceline 0x157d
 	0016c614 mov ax,0x8
 	0016c620 farpush ax
 	0016c628 setfuncargs 0x1
 	0016c630 mov ax,0x426f20
 	0016c63c farcall ax
 	0016c644 farsubsp 0x1
 	0016c64c sourceline 0x157e
 	0016c654 push op
 	0016c65c mov ax,0x4a
 	0016c668 farpush ax
 	0016c670 mov mar,0x3cef20
 	0016c67c mov ax,mar
 	0016c688 mov op,ax
 	0016c690 setfuncargs 0x1
 	0016c698 mov ax,0x51ef20
 	0016c6a4 farcall ax
 	0016c6ac farsubsp 0x1
 	0016c6b4 pop op
 	0016c6bc sourceline 0x157f
 	0016c6c4 mov ax,0x85
 	0016c6d0 mov bx,ax
 	0016c6dc mov mar,0x3cef20
 	0016c6e8 mov ax,mar
 	0016c6f4 push op
 	0016c6fc mov op,ax
 	0016c704 farpush bx
 	0016c70c setfuncargs 0x1
 	0016c714 mov ax,0x526f20
 	0016c720 farcall ax
 	0016c728 farsubsp 0x1
 	0016c730 pop op
 	0016c738 sourceline 0x1580
 	0016c740 mov ax,0xd4
 	0016c74c mov bx,ax
 	0016c758 mov mar,0x3cef20
 	0016c764 mov ax,mar
 	0016c770 push op
 	0016c778 mov op,ax
 	0016c780 farpush bx
 	0016c788 setfuncargs 0x1
 	0016c790 mov ax,0x70ef20
 	0016c79c farcall ax
 	0016c7a4 farsubsp 0x1
 	0016c7ac pop op
 	0016c7b4 sourceline 0x1581
 	0016c7bc push op
 	0016c7c4 mov ax,0x426
 	0016c7d0 farpush ax
 	0016c7d8 mov ax,0x397
 	0016c7e4 farpush ax
 	0016c7ec mov ax,0x0
 	0016c7f8 farpush ax
 	0016c800 mov ax,0x3
 	0016c80c farpush ax
 	0016c814 mov ax,0x0
 	0016c820 farpush ax
 	0016c828 mov mar,0x3cef20
 	0016c834 mov ax,mar
 	0016c840 mov op,ax
 	0016c848 setfuncargs 0x5
 	0016c850 mov ax,0x536f20
 	0016c85c farcall ax
 	0016c864 farsubsp 0x5
 	0016c86c pop op
 	0016c874 sourceline 0x1582
 	0016c87c mov ax,0x1
 	0016c888 mov mar,0xb56f20
 	0016c894 memwrite4 ax
 	0016c89c sourceline 0x1583
 	0016c8a4 sub sp,0x4
		0016c8b0: FALL_THROUGH

	[0016c8b0]
		0016b3b8: UNCONDITIONAL_JUMP
		0016bffc: FALL_THROUGH
 	0016c8b0 sourceline 0x1584
 	0016c8b8 jmp 0x0017131c
		0017131c: UNCONDITIONAL_JUMP

	[0016c8c0]
		0016b384: CONDITIONAL_JUMP
 	0016c8c0 sourceline 0x1587
 	0016c8c8 mov mar,0x3cef20
 	0016c8d4 mov ax,mar
 	0016c8e0 push op
 	0016c8e8 mov op,ax
 	0016c8f0 setfuncargs 0x0
 	0016c8f8 mov ax,0x89ef20
 	0016c904 farcall ax
 	0016c90c pop op
 	0016c914 push ax
 	0016c91c mov mar,0x8bef20
 	0016c928 mov ax,mar
 	0016c934 pop bx
 	0016c93c cmpeq bx,ax
 	0016c948 mov ax,bx
 	0016c954 jz 0x0016de90
		0016de90: CONDITIONAL_JUMP
		0016c95c: FALL_THROUGH

	[0016c95c]
		0016c8c0: FALL_THROUGH
 	0016c95c sourceline 0x1589
 	0016c964 mov mar,0xca6f20
 	0016c970 memread4 ax
 	0016c978 lnot ax
 	0016c980 jz 0x0016cb58
		0016cb58: CONDITIONAL_JUMP
		0016c988: FALL_THROUGH

	[0016c988]
		0016c95c: FALL_THROUGH
 	0016c988 sourceline 0x158b
 	0016c990 push op
 	0016c998 mov ax,0x397
 	0016c9a4 farpush ax
 	0016c9ac mov ax,0x98
 	0016c9b8 farpush ax
 	0016c9c0 mov ax,0x33
 	0016c9cc farpush ax
 	0016c9d4 mov mar,0x3cef20
 	0016c9e0 mov ax,mar
 	0016c9ec mov op,ax
 	0016c9f4 setfuncargs 0x3
 	0016c9fc mov ax,0x726f20
 	0016ca08 farcall ax
 	0016ca10 farsubsp 0x3
 	0016ca18 pop op
 	0016ca20 sourceline 0x158c
 	0016ca28 mov ax,0x1
 	0016ca34 mov bx,ax
 	0016ca40 mov mar,0x3cef20
 	0016ca4c mov ax,mar
 	0016ca58 push op
 	0016ca60 mov op,ax
 	0016ca68 farpush bx
 	0016ca70 setfuncargs 0x1
 	0016ca78 mov ax,0x69ef20
 	0016ca84 farcall ax
 	0016ca8c farsubsp 0x1
 	0016ca94 pop op
 	0016ca9c sourceline 0x158e
 	0016caa4 push op
 	0016caac mov ax,0x2be783
 	0016cab8 farpush ax
 	0016cac0 mov ax,0x138
 	0016cacc farpush ax
 	0016cad4 mov ax,0x92
 	0016cae0 farpush ax
 	0016cae8 mov ax,0x0
 	0016caf4 farpush ax
 	0016cafc mov mar,0x3cef20
 	0016cb08 mov ax,mar
 	0016cb14 mov op,ax
 	0016cb1c setfuncargs 0x4
 	0016cb24 mov ax,0x6aef20
 	0016cb30 farcall ax
 	0016cb38 farsubsp 0x4
 	0016cb40 pop op
 	0016cb48 sourceline 0x158f
 	0016cb50 jmp 0x0016de80
		0016de80: UNCONDITIONAL_JUMP

	[0016cb58]
		0016c95c: CONDITIONAL_JUMP
 	0016cb58 sourceline 0x1592
 	0016cb60 mov ax,0x0
 	0016cb6c mov mar,0xb56f20
 	0016cb78 memwrite4 ax
 	0016cb80 sourceline 0x1593
 	0016cb88 mov ax,0x0
 	0016cb94 mov bx,ax
 	0016cba0 mov mar,0x3cef20
 	0016cbac mov ax,mar
 	0016cbb8 push op
 	0016cbc0 mov op,ax
 	0016cbc8 farpush bx
 	0016cbd0 setfuncargs 0x1
 	0016cbd8 mov ax,0x436f20
 	0016cbe4 farcall ax
 	0016cbec farsubsp 0x1
 	0016cbf4 pop op
 	0016cbfc sourceline 0x1594
 	0016cc04 push op
 	0016cc0c mov ax,0x427
 	0016cc18 farpush ax
 	0016cc20 mov ax,0x397
 	0016cc2c farpush ax
 	0016cc34 mov ax,0x0
 	0016cc40 farpush ax
 	0016cc48 mov ax,0x4
 	0016cc54 farpush ax
 	0016cc5c mov ax,0x0
 	0016cc68 farpush ax
 	0016cc70 mov mar,0x3cef20
 	0016cc7c mov ax,mar
 	0016cc88 mov op,ax
 	0016cc90 setfuncargs 0x5
 	0016cc98 mov ax,0x536f20
 	0016cca4 farcall ax
 	0016ccac farsubsp 0x5
 	0016ccb4 pop op
 	0016ccbc sourceline 0x1595
 	0016ccc4 push op
 	0016cccc mov ax,0x2
 	0016ccd8 farpush ax
 	0016cce0 mov mar,0x3cef20
 	0016ccec mov ax,mar
 	0016ccf8 mov op,ax
 	0016cd00 setfuncargs 0x1
 	0016cd08 mov ax,0x51ef20
 	0016cd14 farcall ax
 	0016cd1c farsubsp 0x1
 	0016cd24 pop op
 	0016cd2c sourceline 0x1596
 	0016cd34 mov ax,0x8c
 	0016cd40 farpush ax
 	0016cd48 mov ax,0x7
 	0016cd54 farpush ax
 	0016cd5c setfuncargs 0x2
 	0016cd64 mov ax,0x756f20
 	0016cd70 farcall ax
 	0016cd78 farsubsp 0x2
 	0016cd80 sourceline 0x1597
 	0016cd88 mov ax,0xd0
 	0016cd94 mov bx,ax
 	0016cda0 mov mar,0x3cef20
 	0016cdac mov ax,mar
 	0016cdb8 push op
 	0016cdc0 mov op,ax
 	0016cdc8 farpush bx
 	0016cdd0 setfuncargs 0x1
 	0016cdd8 mov ax,0x70ef20
 	0016cde4 farcall ax
 	0016cdec farsubsp 0x1
 	0016cdf4 pop op
 	0016cdfc sourceline 0x1598
 	0016ce04 mov ax,0x8b
 	0016ce10 mov bx,ax
 	0016ce1c mov mar,0x3cef20
 	0016ce28 mov ax,mar
 	0016ce34 push op
 	0016ce3c mov op,ax
 	0016ce44 farpush bx
 	0016ce4c setfuncargs 0x1
 	0016ce54 mov ax,0x526f20
 	0016ce60 farcall ax
 	0016ce68 farsubsp 0x1
 	0016ce70 pop op
 	0016ce78 sourceline 0x1599
 	0016ce80 push op
 	0016ce88 mov ax,0x131
 	0016ce94 farpush ax
 	0016ce9c mov ax,0x397
 	0016cea8 farpush ax
 	0016ceb0 mov ax,0x84
 	0016cebc farpush ax
 	0016cec4 mov ax,0xb1
 	0016ced0 farpush ax
 	0016ced8 mov mar,0x3cef20
 	0016cee4 mov ax,mar
 	0016cef0 mov op,ax
 	0016cef8 setfuncargs 0x4
 	0016cf00 mov ax,0xb2ef20
 	0016cf0c farcall ax
 	0016cf14 farsubsp 0x4
 	0016cf1c pop op
 	0016cf24 sourceline 0x159a
 	0016cf2c push op
 	0016cf34 mov ax,0x6
 	0016cf40 farpush ax
 	0016cf48 mov mar,0x3cef20
 	0016cf54 mov ax,mar
 	0016cf60 mov op,ax
 	0016cf68 setfuncargs 0x1
 	0016cf70 mov ax,0x51ef20
 	0016cf7c farcall ax
 	0016cf84 farsubsp 0x1
 	0016cf8c pop op
 	0016cf94 sourceline 0x159b
 	0016cf9c mov mar,0x3cef20
 	0016cfa8 mov ax,mar
 	0016cfb4 push op
 	0016cfbc mov op,ax
 	0016cfc4 setfuncargs 0x0
 	0016cfcc mov ax,0x78ef20
 	0016cfd8 farcall ax
 	0016cfe0 pop op
 	0016cfe8 push ax
 	0016cff0 mov ax,0x8
 	0016cffc pop bx
 	0016d004 sub bx,ax
 	0016d010 mov ax,bx
 	0016d01c mov bx,ax
 	0016d028 mov mar,0x3cef20
 	0016d034 mov ax,mar
 	0016d040 push op
 	0016d048 mov op,ax
 	0016d050 farpush bx
 	0016d058 setfuncargs 0x1
 	0016d060 mov ax,0x526f20
 	0016d06c farcall ax
 	0016d074 farsubsp 0x1
 	0016d07c pop op
 	0016d084 sourceline 0x159c
 	0016d08c mov mar,0x3cef20
 	0016d098 mov ax,mar
 	0016d0a4 push op
 	0016d0ac mov op,ax
 	0016d0b4 setfuncargs 0x0
 	0016d0bc mov ax,0xb36f20
 	0016d0c8 farcall ax
 	0016d0d0 pop op
 	0016d0d8 push ax
 	0016d0e0 mov ax,0x8
 	0016d0ec pop bx
 	0016d0f4 sub bx,ax
 	0016d100 mov ax,bx
 	0016d10c mov bx,ax
 	0016d118 mov mar,0x3cef20
 	0016d124 mov ax,mar
 	0016d130 push op
 	0016d138 mov op,ax
 	0016d140 farpush bx
 	0016d148 setfuncargs 0x1
 	0016d150 mov ax,0x70ef20
 	0016d15c farcall ax
 	0016d164 farsubsp 0x1
 	0016d16c pop op
 	0016d174 sourceline 0x159d
 	0016d17c push op
 	0016d184 mov ax,0x426
 	0016d190 farpush ax
 	0016d198 mov ax,0x397
 	0016d1a4 farpush ax
 	0016d1ac mov ax,0x0
 	0016d1b8 farpush ax
 	0016d1c0 mov ax,0x3
 	0016d1cc farpush ax
 	0016d1d4 mov ax,0x1
 	0016d1e0 farpush ax
 	0016d1e8 mov mar,0x3cef20
 	0016d1f4 mov ax,mar
 	0016d200 mov op,ax
 	0016d208 setfuncargs 0x5
 	0016d210 mov ax,0x536f20
 	0016d21c farcall ax
 	0016d224 farsubsp 0x5
 	0016d22c pop op
 	0016d234 sourceline 0x159f
 	0016d23c mov ax,0x3
 	0016d248 mov bx,ax
 	0016d254 mov mar,0x3cef20
 	0016d260 mov ax,mar
 	0016d26c push op
 	0016d274 mov op,ax
 	0016d27c farpush bx
 	0016d284 setfuncargs 0x1
 	0016d28c mov ax,0x69ef20
 	0016d298 farcall ax
 	0016d2a0 farsubsp 0x1
 	0016d2a8 pop op
 	0016d2b0 sourceline 0x15a1
 	0016d2b8 mov ax,0x3
 	0016d2c4 farpush ax
 	0016d2cc setfuncargs 0x1
 	0016d2d4 mov ax,0x4a6f20
 	0016d2e0 farcall ax
 	0016d2e8 farsubsp 0x1
 	0016d2f0 mov mar,sp
 	0016d2fc memwrite4 ax
 	0016d304 add sp,0x4
 	0016d310 sourceline 0x15a2
 	0016d318 stackptr 0x4
 	0016d320 memread4 ax
 	0016d328 push ax
 	0016d330 mov ax,0x0
 	0016d33c pop bx
 	0016d344 cmpeq bx,ax
 	0016d350 mov ax,bx
 	0016d35c jz 0x0016d3d4
		0016d3d4: CONDITIONAL_JUMP
		0016d364: FALL_THROUGH

	[0016d364]
		0016cb58: FALL_THROUGH
 	0016d364 push op
 	0016d36c mov ax,0x2c8717
 	0016d378 farpush ax
 	0016d380 mov mar,0x3cef20
 	0016d38c mov ax,mar
 	0016d398 mov op,ax
 	0016d3a0 setfuncargs 0x1
 	0016d3a8 mov ax,0x6f6f20
 	0016d3b4 farcall ax
 	0016d3bc farsubsp 0x1
 	0016d3c4 pop op
 	0016d3cc jmp 0x0016d5cc
		0016d5cc: UNCONDITIONAL_JUMP

	[0016d3d4]
		0016cb58: CONDITIONAL_JUMP
 	0016d3d4 sourceline 0x15a3
 	0016d3dc stackptr 0x4
 	0016d3e4 memread4 ax
 	0016d3ec push ax
 	0016d3f4 mov ax,0x1
 	0016d400 pop bx
 	0016d408 cmpeq bx,ax
 	0016d414 mov ax,bx
 	0016d420 jz 0x0016d498
		0016d498: CONDITIONAL_JUMP
		0016d428: FALL_THROUGH

	[0016d428]
		0016d3d4: FALL_THROUGH
 	0016d428 push op
 	0016d430 mov ax,0x2c8740
 	0016d43c farpush ax
 	0016d444 mov mar,0x3cef20
 	0016d450 mov ax,mar
 	0016d45c mov op,ax
 	0016d464 setfuncargs 0x1
 	0016d46c mov ax,0x6f6f20
 	0016d478 farcall ax
 	0016d480 farsubsp 0x1
 	0016d488 pop op
 	0016d490 jmp 0x0016d5cc
		0016d5cc: UNCONDITIONAL_JUMP

	[0016d498]
		0016d3d4: CONDITIONAL_JUMP
 	0016d498 sourceline 0x15a4
 	0016d4a0 stackptr 0x4
 	0016d4a8 memread4 ax
 	0016d4b0 push ax
 	0016d4b8 mov ax,0x2
 	0016d4c4 pop bx
 	0016d4cc cmpeq bx,ax
 	0016d4d8 mov ax,bx
 	0016d4e4 jz 0x0016d55c
		0016d55c: CONDITIONAL_JUMP
		0016d4ec: FALL_THROUGH

	[0016d4ec]
		0016d498: FALL_THROUGH
 	0016d4ec push op
 	0016d4f4 mov ax,0x2c8769
 	0016d500 farpush ax
 	0016d508 mov mar,0x3cef20
 	0016d514 mov ax,mar
 	0016d520 mov op,ax
 	0016d528 setfuncargs 0x1
 	0016d530 mov ax,0x6f6f20
 	0016d53c farcall ax
 	0016d544 farsubsp 0x1
 	0016d54c pop op
 	0016d554 jmp 0x0016d5cc
		0016d5cc: UNCONDITIONAL_JUMP

	[0016d55c]
		0016d498: CONDITIONAL_JUMP
 	0016d55c sourceline 0x15a5
 	0016d564 push op
 	0016d56c mov ax,0x2c8792
 	0016d578 farpush ax
 	0016d580 mov mar,0x3cef20
 	0016d58c mov ax,mar
 	0016d598 mov op,ax
 	0016d5a0 setfuncargs 0x1
 	0016d5a8 mov ax,0x6f6f20
 	0016d5b4 farcall ax
 	0016d5bc farsubsp 0x1
 	0016d5c4 pop op
		0016d5cc: FALL_THROUGH

	[0016d5cc]
		0016d364: UNCONDITIONAL_JUMP
		0016d428: UNCONDITIONAL_JUMP
		0016d4ec: UNCONDITIONAL_JUMP
		0016d55c: FALL_THROUGH
 	0016d5cc sourceline 0x15a7
 	0016d5d4 push op
 	0016d5dc mov ax,0x2be85b
 	0016d5e8 farpush ax
 	0016d5f0 mov mar,0x746f20
 	0016d5fc mov ax,mar
 	0016d608 mov op,ax
 	0016d610 setfuncargs 0x1
 	0016d618 mov ax,0x6f6f20
 	0016d624 farcall ax
 	0016d62c farsubsp 0x1
 	0016d634 pop op
 	0016d63c sourceline 0x15a8
 	0016d644 push op
 	0016d64c mov ax,0x427
 	0016d658 farpush ax
 	0016d660 mov ax,0x397
 	0016d66c farpush ax
 	0016d674 mov ax,0x0
 	0016d680 farpush ax
 	0016d688 mov ax,0x3
 	0016d694 farpush ax
 	0016d69c mov ax,0x1
 	0016d6a8 farpush ax
 	0016d6b0 mov mar,0x3cef20
 	0016d6bc mov ax,mar
 	0016d6c8 mov op,ax
 	0016d6d0 setfuncargs 0x5
 	0016d6d8 mov ax,0x536f20
 	0016d6e4 farcall ax
 	0016d6ec farsubsp 0x5
 	0016d6f4 pop op
 	0016d6fc sourceline 0x15a9
 	0016d704 push op
 	0016d70c mov ax,0x2
 	0016d718 farpush ax
 	0016d720 mov mar,0x3cef20
 	0016d72c mov ax,mar
 	0016d738 mov op,ax
 	0016d740 setfuncargs 0x1
 	0016d748 mov ax,0x51ef20
 	0016d754 farcall ax
 	0016d75c farsubsp 0x1
 	0016d764 pop op
 	0016d76c sourceline 0x15aa
 	0016d774 mov mar,0x3cef20
 	0016d780 mov ax,mar
 	0016d78c push op
 	0016d794 mov op,ax
 	0016d79c setfuncargs 0x0
 	0016d7a4 mov ax,0x78ef20
 	0016d7b0 farcall ax
 	0016d7b8 pop op
 	0016d7c0 push ax
 	0016d7c8 mov ax,0x8
 	0016d7d4 pop bx
 	0016d7dc add bx,ax
 	0016d7e8 mov ax,bx
 	0016d7f4 mov bx,ax
 	0016d800 mov mar,0x3cef20
 	0016d80c mov ax,mar
 	0016d818 push op
 	0016d820 mov op,ax
 	0016d828 farpush bx
 	0016d830 setfuncargs 0x1
 	0016d838 mov ax,0x526f20
 	0016d844 farcall ax
 	0016d84c farsubsp 0x1
 	0016d854 pop op
 	0016d85c sourceline 0x15ab
 	0016d864 mov mar,0x3cef20
 	0016d870 mov ax,mar
 	0016d87c push op
 	0016d884 mov op,ax
 	0016d88c setfuncargs 0x0
 	0016d894 mov ax,0xb36f20
 	0016d8a0 farcall ax
 	0016d8a8 pop op
 	0016d8b0 push ax
 	0016d8b8 mov ax,0x8
 	0016d8c4 pop bx
 	0016d8cc add bx,ax
 	0016d8d8 mov ax,bx
 	0016d8e4 mov bx,ax
 	0016d8f0 mov mar,0x3cef20
 	0016d8fc mov ax,mar
 	0016d908 push op
 	0016d910 mov op,ax
 	0016d918 farpush bx
 	0016d920 setfuncargs 0x1
 	0016d928 mov ax,0x70ef20
 	0016d934 farcall ax
 	0016d93c farsubsp 0x1
 	0016d944 pop op
 	0016d94c sourceline 0x15ac
 	0016d954 push op
 	0016d95c mov ax,0x131
 	0016d968 farpush ax
 	0016d970 mov ax,0x397
 	0016d97c farpush ax
 	0016d984 mov ax,0x8b
 	0016d990 farpush ax
 	0016d998 mov ax,0xc3
 	0016d9a4 farpush ax
 	0016d9ac mov mar,0x3cef20
 	0016d9b8 mov ax,mar
 	0016d9c4 mov op,ax
 	0016d9cc setfuncargs 0x4
 	0016d9d4 mov ax,0xb2ef20
 	0016d9e0 farcall ax
 	0016d9e8 farsubsp 0x4
 	0016d9f0 pop op
 	0016d9f8 sourceline 0x15ad
 	0016da00 mov ax,0x1
 	0016da0c farpush ax
 	0016da14 setfuncargs 0x1
 	0016da1c mov ax,0x426f20
 	0016da28 farcall ax
 	0016da30 farsubsp 0x1
 	0016da38 sourceline 0x15ae
 	0016da40 push op
 	0016da48 mov ax,0x130
 	0016da54 farpush ax
 	0016da5c mov ax,0x397
 	0016da68 farpush ax
 	0016da70 mov ax,0x8b
 	0016da7c farpush ax
 	0016da84 mov mar,0x3cef20
 	0016da90 mov ax,mar
 	0016da9c push op
 	0016daa4 mov op,ax
 	0016daac setfuncargs 0x0
 	0016dab4 mov ax,0xb36f20
 	0016dac0 farcall ax
 	0016dac8 pop op
 	0016dad0 push ax
 	0016dad8 mov ax,0xd
 	0016dae4 pop bx
 	0016daec add bx,ax
 	0016daf8 mov ax,bx
 	0016db04 farpush ax
 	0016db0c mov mar,0x3cef20
 	0016db18 mov ax,mar
 	0016db24 mov op,ax
 	0016db2c setfuncargs 0x4
 	0016db34 mov ax,0xb2ef20
 	0016db40 farcall ax
 	0016db48 farsubsp 0x4
 	0016db50 pop op
 	0016db58 sourceline 0x15af
 	0016db60 push op
 	0016db68 mov ax,0x397
 	0016db74 farpush ax
 	0016db7c mov ax,0x6
 	0016db88 farpush ax
 	0016db90 mov mar,0x3cef20
 	0016db9c mov ax,mar
 	0016dba8 mov op,ax
 	0016dbb0 setfuncargs 0x2
 	0016dbb8 mov ax,0x6eef20
 	0016dbc4 farcall ax
 	0016dbcc farsubsp 0x2
 	0016dbd4 pop op
 	0016dbdc sourceline 0x15b0
 	0016dbe4 mov ax,0x8
 	0016dbf0 farpush ax
 	0016dbf8 setfuncargs 0x1
 	0016dc00 mov ax,0x426f20
 	0016dc0c farcall ax
 	0016dc14 farsubsp 0x1
 	0016dc1c sourceline 0x15b1
 	0016dc24 push op
 	0016dc2c mov ax,0x4a
 	0016dc38 farpush ax
 	0016dc40 mov mar,0x3cef20
 	0016dc4c mov ax,mar
 	0016dc58 mov op,ax
 	0016dc60 setfuncargs 0x1
 	0016dc68 mov ax,0x51ef20
 	0016dc74 farcall ax
 	0016dc7c farsubsp 0x1
 	0016dc84 pop op
 	0016dc8c sourceline 0x15b2
 	0016dc94 mov ax,0x85
 	0016dca0 mov bx,ax
 	0016dcac mov mar,0x3cef20
 	0016dcb8 mov ax,mar
 	0016dcc4 push op
 	0016dccc mov op,ax
 	0016dcd4 farpush bx
 	0016dcdc setfuncargs 0x1
 	0016dce4 mov ax,0x526f20
 	0016dcf0 farcall ax
 	0016dcf8 farsubsp 0x1
 	0016dd00 pop op
 	0016dd08 sourceline 0x15b3
 	0016dd10 mov ax,0xd4
 	0016dd1c mov bx,ax
 	0016dd28 mov mar,0x3cef20
 	0016dd34 mov ax,mar
 	0016dd40 push op
 	0016dd48 mov op,ax
 	0016dd50 farpush bx
 	0016dd58 setfuncargs 0x1
 	0016dd60 mov ax,0x70ef20
 	0016dd6c farcall ax
 	0016dd74 farsubsp 0x1
 	0016dd7c pop op
 	0016dd84 sourceline 0x15b4
 	0016dd8c push op
 	0016dd94 mov ax,0x426
 	0016dda0 farpush ax
 	0016dda8 mov ax,0x397
 	0016ddb4 farpush ax
 	0016ddbc mov ax,0x0
 	0016ddc8 farpush ax
 	0016ddd0 mov ax,0x3
 	0016dddc farpush ax
 	0016dde4 mov ax,0x0
 	0016ddf0 farpush ax
 	0016ddf8 mov mar,0x3cef20
 	0016de04 mov ax,mar
 	0016de10 mov op,ax
 	0016de18 setfuncargs 0x5
 	0016de20 mov ax,0x536f20
 	0016de2c farcall ax
 	0016de34 farsubsp 0x5
 	0016de3c pop op
 	0016de44 sourceline 0x15b5
 	0016de4c mov ax,0x1
 	0016de58 mov mar,0xb56f20
 	0016de64 memwrite4 ax
 	0016de6c sourceline 0x15b6
 	0016de74 sub sp,0x4
		0016de80: FALL_THROUGH

	[0016de80]
		0016c988: UNCONDITIONAL_JUMP
		0016d5cc: FALL_THROUGH
 	0016de80 sourceline 0x15b7
 	0016de88 jmp 0x0017131c
		0017131c: UNCONDITIONAL_JUMP

	[0016de90]
		0016c8c0: CONDITIONAL_JUMP
 	0016de90 sourceline 0x15b9
 	0016de98 mov mar,0x3cef20
 	0016dea4 mov ax,mar
 	0016deb0 push op
 	0016deb8 mov op,ax
 	0016dec0 setfuncargs 0x0
 	0016dec8 mov ax,0x89ef20
 	0016ded4 farcall ax
 	0016dedc pop op
 	0016dee4 push ax
 	0016deec mov mar,0x8aef20
 	0016def8 mov ax,mar
 	0016df04 pop bx
 	0016df0c cmpeq bx,ax
 	0016df18 mov ax,bx
 	0016df24 jz 0x0016f460
		0016f460: CONDITIONAL_JUMP
		0016df2c: FALL_THROUGH

	[0016df2c]
		0016de90: FALL_THROUGH
 	0016df2c sourceline 0x15bb
 	0016df34 mov mar,0xca6f20
 	0016df40 memread4 ax
 	0016df48 lnot ax
 	0016df50 jz 0x0016e128
		0016e128: CONDITIONAL_JUMP
		0016df58: FALL_THROUGH

	[0016df58]
		0016df2c: FALL_THROUGH
 	0016df58 sourceline 0x15bd
 	0016df60 push op
 	0016df68 mov ax,0x397
 	0016df74 farpush ax
 	0016df7c mov ax,0x98
 	0016df88 farpush ax
 	0016df90 mov ax,0x33
 	0016df9c farpush ax
 	0016dfa4 mov mar,0x3cef20
 	0016dfb0 mov ax,mar
 	0016dfbc mov op,ax
 	0016dfc4 setfuncargs 0x3
 	0016dfcc mov ax,0x726f20
 	0016dfd8 farcall ax
 	0016dfe0 farsubsp 0x3
 	0016dfe8 pop op
 	0016dff0 sourceline 0x15be
 	0016dff8 mov ax,0x1
 	0016e004 mov bx,ax
 	0016e010 mov mar,0x3cef20
 	0016e01c mov ax,mar
 	0016e028 push op
 	0016e030 mov op,ax
 	0016e038 farpush bx
 	0016e040 setfuncargs 0x1
 	0016e048 mov ax,0x69ef20
 	0016e054 farcall ax
 	0016e05c farsubsp 0x1
 	0016e064 pop op
 	0016e06c sourceline 0x15c0
 	0016e074 push op
 	0016e07c mov ax,0x2beb3c
 	0016e088 farpush ax
 	0016e090 mov ax,0x138
 	0016e09c farpush ax
 	0016e0a4 mov ax,0x92
 	0016e0b0 farpush ax
 	0016e0b8 mov ax,0x0
 	0016e0c4 farpush ax
 	0016e0cc mov mar,0x3cef20
 	0016e0d8 mov ax,mar
 	0016e0e4 mov op,ax
 	0016e0ec setfuncargs 0x4
 	0016e0f4 mov ax,0x6aef20
 	0016e100 farcall ax
 	0016e108 farsubsp 0x4
 	0016e110 pop op
 	0016e118 sourceline 0x15c1
 	0016e120 jmp 0x0016f450
		0016f450: UNCONDITIONAL_JUMP

	[0016e128]
		0016df2c: CONDITIONAL_JUMP
 	0016e128 sourceline 0x15c4
 	0016e130 mov ax,0x0
 	0016e13c mov mar,0xb56f20
 	0016e148 memwrite4 ax
 	0016e150 sourceline 0x15c5
 	0016e158 mov ax,0x0
 	0016e164 mov bx,ax
 	0016e170 mov mar,0x3cef20
 	0016e17c mov ax,mar
 	0016e188 push op
 	0016e190 mov op,ax
 	0016e198 farpush bx
 	0016e1a0 setfuncargs 0x1
 	0016e1a8 mov ax,0x436f20
 	0016e1b4 farcall ax
 	0016e1bc farsubsp 0x1
 	0016e1c4 pop op
 	0016e1cc sourceline 0x15c6
 	0016e1d4 push op
 	0016e1dc mov ax,0x427
 	0016e1e8 farpush ax
 	0016e1f0 mov ax,0x397
 	0016e1fc farpush ax
 	0016e204 mov ax,0x0
 	0016e210 farpush ax
 	0016e218 mov ax,0x4
 	0016e224 farpush ax
 	0016e22c mov ax,0x0
 	0016e238 farpush ax
 	0016e240 mov mar,0x3cef20
 	0016e24c mov ax,mar
 	0016e258 mov op,ax
 	0016e260 setfuncargs 0x5
 	0016e268 mov ax,0x536f20
 	0016e274 farcall ax
 	0016e27c farsubsp 0x5
 	0016e284 pop op
 	0016e28c sourceline 0x15c7
 	0016e294 push op
 	0016e29c mov ax,0x2
 	0016e2a8 farpush ax
 	0016e2b0 mov mar,0x3cef20
 	0016e2bc mov ax,mar
 	0016e2c8 mov op,ax
 	0016e2d0 setfuncargs 0x1
 	0016e2d8 mov ax,0x51ef20
 	0016e2e4 farcall ax
 	0016e2ec farsubsp 0x1
 	0016e2f4 pop op
 	0016e2fc sourceline 0x15c8
 	0016e304 mov ax,0x8c
 	0016e310 farpush ax
 	0016e318 mov ax,0x7
 	0016e324 farpush ax
 	0016e32c setfuncargs 0x2
 	0016e334 mov ax,0x756f20
 	0016e340 farcall ax
 	0016e348 farsubsp 0x2
 	0016e350 sourceline 0x15c9
 	0016e358 mov ax,0xd0
 	0016e364 mov bx,ax
 	0016e370 mov mar,0x3cef20
 	0016e37c mov ax,mar
 	0016e388 push op
 	0016e390 mov op,ax
 	0016e398 farpush bx
 	0016e3a0 setfuncargs 0x1
 	0016e3a8 mov ax,0x70ef20
 	0016e3b4 farcall ax
 	0016e3bc farsubsp 0x1
 	0016e3c4 pop op
 	0016e3cc sourceline 0x15ca
 	0016e3d4 mov ax,0x8b
 	0016e3e0 mov bx,ax
 	0016e3ec mov mar,0x3cef20
 	0016e3f8 mov ax,mar
 	0016e404 push op
 	0016e40c mov op,ax
 	0016e414 farpush bx
 	0016e41c setfuncargs 0x1
 	0016e424 mov ax,0x526f20
 	0016e430 farcall ax
 	0016e438 farsubsp 0x1
 	0016e440 pop op
 	0016e448 sourceline 0x15cb
 	0016e450 push op
 	0016e458 mov ax,0x131
 	0016e464 farpush ax
 	0016e46c mov ax,0x397
 	0016e478 farpush ax
 	0016e480 mov ax,0x84
 	0016e48c farpush ax
 	0016e494 mov ax,0xb1
 	0016e4a0 farpush ax
 	0016e4a8 mov mar,0x3cef20
 	0016e4b4 mov ax,mar
 	0016e4c0 mov op,ax
 	0016e4c8 setfuncargs 0x4
 	0016e4d0 mov ax,0xb2ef20
 	0016e4dc farcall ax
 	0016e4e4 farsubsp 0x4
 	0016e4ec pop op
 	0016e4f4 sourceline 0x15cc
 	0016e4fc push op
 	0016e504 mov ax,0x6
 	0016e510 farpush ax
 	0016e518 mov mar,0x3cef20
 	0016e524 mov ax,mar
 	0016e530 mov op,ax
 	0016e538 setfuncargs 0x1
 	0016e540 mov ax,0x51ef20
 	0016e54c farcall ax
 	0016e554 farsubsp 0x1
 	0016e55c pop op
 	0016e564 sourceline 0x15cd
 	0016e56c mov mar,0x3cef20
 	0016e578 mov ax,mar
 	0016e584 push op
 	0016e58c mov op,ax
 	0016e594 setfuncargs 0x0
 	0016e59c mov ax,0x78ef20
 	0016e5a8 farcall ax
 	0016e5b0 pop op
 	0016e5b8 push ax
 	0016e5c0 mov ax,0x8
 	0016e5cc pop bx
 	0016e5d4 sub bx,ax
 	0016e5e0 mov ax,bx
 	0016e5ec mov bx,ax
 	0016e5f8 mov mar,0x3cef20
 	0016e604 mov ax,mar
 	0016e610 push op
 	0016e618 mov op,ax
 	0016e620 farpush bx
 	0016e628 setfuncargs 0x1
 	0016e630 mov ax,0x526f20
 	0016e63c farcall ax
 	0016e644 farsubsp 0x1
 	0016e64c pop op
 	0016e654 sourceline 0x15ce
 	0016e65c mov mar,0x3cef20
 	0016e668 mov ax,mar
 	0016e674 push op
 	0016e67c mov op,ax
 	0016e684 setfuncargs 0x0
 	0016e68c mov ax,0xb36f20
 	0016e698 farcall ax
 	0016e6a0 pop op
 	0016e6a8 push ax
 	0016e6b0 mov ax,0x8
 	0016e6bc pop bx
 	0016e6c4 sub bx,ax
 	0016e6d0 mov ax,bx
 	0016e6dc mov bx,ax
 	0016e6e8 mov mar,0x3cef20
 	0016e6f4 mov ax,mar
 	0016e700 push op
 	0016e708 mov op,ax
 	0016e710 farpush bx
 	0016e718 setfuncargs 0x1
 	0016e720 mov ax,0x70ef20
 	0016e72c farcall ax
 	0016e734 farsubsp 0x1
 	0016e73c pop op
 	0016e744 sourceline 0x15cf
 	0016e74c push op
 	0016e754 mov ax,0x426
 	0016e760 farpush ax
 	0016e768 mov ax,0x397
 	0016e774 farpush ax
 	0016e77c mov ax,0x0
 	0016e788 farpush ax
 	0016e790 mov ax,0x3
 	0016e79c farpush ax
 	0016e7a4 mov ax,0x1
 	0016e7b0 farpush ax
 	0016e7b8 mov mar,0x3cef20
 	0016e7c4 mov ax,mar
 	0016e7d0 mov op,ax
 	0016e7d8 setfuncargs 0x5
 	0016e7e0 mov ax,0x536f20
 	0016e7ec farcall ax
 	0016e7f4 farsubsp 0x5
 	0016e7fc pop op
 	0016e804 sourceline 0x15d1
 	0016e80c mov ax,0x3
 	0016e818 mov bx,ax
 	0016e824 mov mar,0x3cef20
 	0016e830 mov ax,mar
 	0016e83c push op
 	0016e844 mov op,ax
 	0016e84c farpush bx
 	0016e854 setfuncargs 0x1
 	0016e85c mov ax,0x69ef20
 	0016e868 farcall ax
 	0016e870 farsubsp 0x1
 	0016e878 pop op
 	0016e880 sourceline 0x15d3
 	0016e888 mov ax,0x3
 	0016e894 farpush ax
 	0016e89c setfuncargs 0x1
 	0016e8a4 mov ax,0x4a6f20
 	0016e8b0 farcall ax
 	0016e8b8 farsubsp 0x1
 	0016e8c0 mov mar,sp
 	0016e8cc memwrite4 ax
 	0016e8d4 add sp,0x4
 	0016e8e0 sourceline 0x15d4
 	0016e8e8 stackptr 0x4
 	0016e8f0 memread4 ax
 	0016e8f8 push ax
 	0016e900 mov ax,0x0
 	0016e90c pop bx
 	0016e914 cmpeq bx,ax
 	0016e920 mov ax,bx
 	0016e92c jz 0x0016e9a4
		0016e9a4: CONDITIONAL_JUMP
		0016e934: FALL_THROUGH

	[0016e934]
		0016e128: FALL_THROUGH
 	0016e934 push op
 	0016e93c mov ax,0x2c8717
 	0016e948 farpush ax
 	0016e950 mov mar,0x3cef20
 	0016e95c mov ax,mar
 	0016e968 mov op,ax
 	0016e970 setfuncargs 0x1
 	0016e978 mov ax,0x6f6f20
 	0016e984 farcall ax
 	0016e98c farsubsp 0x1
 	0016e994 pop op
 	0016e99c jmp 0x0016eb9c
		0016eb9c: UNCONDITIONAL_JUMP

	[0016e9a4]
		0016e128: CONDITIONAL_JUMP
 	0016e9a4 sourceline 0x15d5
 	0016e9ac stackptr 0x4
 	0016e9b4 memread4 ax
 	0016e9bc push ax
 	0016e9c4 mov ax,0x1
 	0016e9d0 pop bx
 	0016e9d8 cmpeq bx,ax
 	0016e9e4 mov ax,bx
 	0016e9f0 jz 0x0016ea68
		0016ea68: CONDITIONAL_JUMP
		0016e9f8: FALL_THROUGH

	[0016e9f8]
		0016e9a4: FALL_THROUGH
 	0016e9f8 push op
 	0016ea00 mov ax,0x2c8740
 	0016ea0c farpush ax
 	0016ea14 mov mar,0x3cef20
 	0016ea20 mov ax,mar
 	0016ea2c mov op,ax
 	0016ea34 setfuncargs 0x1
 	0016ea3c mov ax,0x6f6f20
 	0016ea48 farcall ax
 	0016ea50 farsubsp 0x1
 	0016ea58 pop op
 	0016ea60 jmp 0x0016eb9c
		0016eb9c: UNCONDITIONAL_JUMP

	[0016ea68]
		0016e9a4: CONDITIONAL_JUMP
 	0016ea68 sourceline 0x15d6
 	0016ea70 stackptr 0x4
 	0016ea78 memread4 ax
 	0016ea80 push ax
 	0016ea88 mov ax,0x2
 	0016ea94 pop bx
 	0016ea9c cmpeq bx,ax
 	0016eaa8 mov ax,bx
 	0016eab4 jz 0x0016eb2c
		0016eb2c: CONDITIONAL_JUMP
		0016eabc: FALL_THROUGH

	[0016eabc]
		0016ea68: FALL_THROUGH
 	0016eabc push op
 	0016eac4 mov ax,0x2c8769
 	0016ead0 farpush ax
 	0016ead8 mov mar,0x3cef20
 	0016eae4 mov ax,mar
 	0016eaf0 mov op,ax
 	0016eaf8 setfuncargs 0x1
 	0016eb00 mov ax,0x6f6f20
 	0016eb0c farcall ax
 	0016eb14 farsubsp 0x1
 	0016eb1c pop op
 	0016eb24 jmp 0x0016eb9c
		0016eb9c: UNCONDITIONAL_JUMP

	[0016eb2c]
		0016ea68: CONDITIONAL_JUMP
 	0016eb2c sourceline 0x15d7
 	0016eb34 push op
 	0016eb3c mov ax,0x2c8792
 	0016eb48 farpush ax
 	0016eb50 mov mar,0x3cef20
 	0016eb5c mov ax,mar
 	0016eb68 mov op,ax
 	0016eb70 setfuncargs 0x1
 	0016eb78 mov ax,0x6f6f20
 	0016eb84 farcall ax
 	0016eb8c farsubsp 0x1
 	0016eb94 pop op
		0016eb9c: FALL_THROUGH

	[0016eb9c]
		0016e934: UNCONDITIONAL_JUMP
		0016e9f8: UNCONDITIONAL_JUMP
		0016eabc: UNCONDITIONAL_JUMP
		0016eb2c: FALL_THROUGH
 	0016eb9c sourceline 0x15d9
 	0016eba4 push op
 	0016ebac mov ax,0x2be992
 	0016ebb8 farpush ax
 	0016ebc0 mov mar,0x746f20
 	0016ebcc mov ax,mar
 	0016ebd8 mov op,ax
 	0016ebe0 setfuncargs 0x1
 	0016ebe8 mov ax,0x6f6f20
 	0016ebf4 farcall ax
 	0016ebfc farsubsp 0x1
 	0016ec04 pop op
 	0016ec0c sourceline 0x15da
 	0016ec14 push op
 	0016ec1c mov ax,0x427
 	0016ec28 farpush ax
 	0016ec30 mov ax,0x397
 	0016ec3c farpush ax
 	0016ec44 mov ax,0x0
 	0016ec50 farpush ax
 	0016ec58 mov ax,0x3
 	0016ec64 farpush ax
 	0016ec6c mov ax,0x1
 	0016ec78 farpush ax
 	0016ec80 mov mar,0x3cef20
 	0016ec8c mov ax,mar
 	0016ec98 mov op,ax
 	0016eca0 setfuncargs 0x5
 	0016eca8 mov ax,0x536f20
 	0016ecb4 farcall ax
 	0016ecbc farsubsp 0x5
 	0016ecc4 pop op
 	0016eccc sourceline 0x15db
 	0016ecd4 push op
 	0016ecdc mov ax,0x2
 	0016ece8 farpush ax
 	0016ecf0 mov mar,0x3cef20
 	0016ecfc mov ax,mar
 	0016ed08 mov op,ax
 	0016ed10 setfuncargs 0x1
 	0016ed18 mov ax,0x51ef20
 	0016ed24 farcall ax
 	0016ed2c farsubsp 0x1
 	0016ed34 pop op
 	0016ed3c sourceline 0x15dc
 	0016ed44 mov mar,0x3cef20
 	0016ed50 mov ax,mar
 	0016ed5c push op
 	0016ed64 mov op,ax
 	0016ed6c setfuncargs 0x0
 	0016ed74 mov ax,0x78ef20
 	0016ed80 farcall ax
 	0016ed88 pop op
 	0016ed90 push ax
 	0016ed98 mov ax,0x8
 	0016eda4 pop bx
 	0016edac add bx,ax
 	0016edb8 mov ax,bx
 	0016edc4 mov bx,ax
 	0016edd0 mov mar,0x3cef20
 	0016eddc mov ax,mar
 	0016ede8 push op
 	0016edf0 mov op,ax
 	0016edf8 farpush bx
 	0016ee00 setfuncargs 0x1
 	0016ee08 mov ax,0x526f20
 	0016ee14 farcall ax
 	0016ee1c farsubsp 0x1
 	0016ee24 pop op
 	0016ee2c sourceline 0x15dd
 	0016ee34 mov mar,0x3cef20
 	0016ee40 mov ax,mar
 	0016ee4c push op
 	0016ee54 mov op,ax
 	0016ee5c setfuncargs 0x0
 	0016ee64 mov ax,0xb36f20
 	0016ee70 farcall ax
 	0016ee78 pop op
 	0016ee80 push ax
 	0016ee88 mov ax,0x8
 	0016ee94 pop bx
 	0016ee9c add bx,ax
 	0016eea8 mov ax,bx
 	0016eeb4 mov bx,ax
 	0016eec0 mov mar,0x3cef20
 	0016eecc mov ax,mar
 	0016eed8 push op
 	0016eee0 mov op,ax
 	0016eee8 farpush bx
 	0016eef0 setfuncargs 0x1
 	0016eef8 mov ax,0x70ef20
 	0016ef04 farcall ax
 	0016ef0c farsubsp 0x1
 	0016ef14 pop op
 	0016ef1c sourceline 0x15de
 	0016ef24 push op
 	0016ef2c mov ax,0x131
 	0016ef38 farpush ax
 	0016ef40 mov ax,0x397
 	0016ef4c farpush ax
 	0016ef54 mov ax,0x8b
 	0016ef60 farpush ax
 	0016ef68 mov ax,0xc3
 	0016ef74 farpush ax
 	0016ef7c mov mar,0x3cef20
 	0016ef88 mov ax,mar
 	0016ef94 mov op,ax
 	0016ef9c setfuncargs 0x4
 	0016efa4 mov ax,0xb2ef20
 	0016efb0 farcall ax
 	0016efb8 farsubsp 0x4
 	0016efc0 pop op
 	0016efc8 sourceline 0x15df
 	0016efd0 mov ax,0x1
 	0016efdc farpush ax
 	0016efe4 setfuncargs 0x1
 	0016efec mov ax,0x426f20
 	0016eff8 farcall ax
 	0016f000 farsubsp 0x1
 	0016f008 sourceline 0x15e0
 	0016f010 push op
 	0016f018 mov ax,0x130
 	0016f024 farpush ax
 	0016f02c mov ax,0x397
 	0016f038 farpush ax
 	0016f040 mov ax,0x8b
 	0016f04c farpush ax
 	0016f054 mov mar,0x3cef20
 	0016f060 mov ax,mar
 	0016f06c push op
 	0016f074 mov op,ax
 	0016f07c setfuncargs 0x0
 	0016f084 mov ax,0xb36f20
 	0016f090 farcall ax
 	0016f098 pop op
 	0016f0a0 push ax
 	0016f0a8 mov ax,0xd
 	0016f0b4 pop bx
 	0016f0bc add bx,ax
 	0016f0c8 mov ax,bx
 	0016f0d4 farpush ax
 	0016f0dc mov mar,0x3cef20
 	0016f0e8 mov ax,mar
 	0016f0f4 mov op,ax
 	0016f0fc setfuncargs 0x4
 	0016f104 mov ax,0xb2ef20
 	0016f110 farcall ax
 	0016f118 farsubsp 0x4
 	0016f120 pop op
 	0016f128 sourceline 0x15e1
 	0016f130 push op
 	0016f138 mov ax,0x397
 	0016f144 farpush ax
 	0016f14c mov ax,0x6
 	0016f158 farpush ax
 	0016f160 mov mar,0x3cef20
 	0016f16c mov ax,mar
 	0016f178 mov op,ax
 	0016f180 setfuncargs 0x2
 	0016f188 mov ax,0x6eef20
 	0016f194 farcall ax
 	0016f19c farsubsp 0x2
 	0016f1a4 pop op
 	0016f1ac sourceline 0x15e2
 	0016f1b4 mov ax,0x8
 	0016f1c0 farpush ax
 	0016f1c8 setfuncargs 0x1
 	0016f1d0 mov ax,0x426f20
 	0016f1dc farcall ax
 	0016f1e4 farsubsp 0x1
 	0016f1ec sourceline 0x15e3
 	0016f1f4 push op
 	0016f1fc mov ax,0x4a
 	0016f208 farpush ax
 	0016f210 mov mar,0x3cef20
 	0016f21c mov ax,mar
 	0016f228 mov op,ax
 	0016f230 setfuncargs 0x1
 	0016f238 mov ax,0x51ef20
 	0016f244 farcall ax
 	0016f24c farsubsp 0x1
 	0016f254 pop op
 	0016f25c sourceline 0x15e4
 	0016f264 mov ax,0x85
 	0016f270 mov bx,ax
 	0016f27c mov mar,0x3cef20
 	0016f288 mov ax,mar
 	0016f294 push op
 	0016f29c mov op,ax
 	0016f2a4 farpush bx
 	0016f2ac setfuncargs 0x1
 	0016f2b4 mov ax,0x526f20
 	0016f2c0 farcall ax
 	0016f2c8 farsubsp 0x1
 	0016f2d0 pop op
 	0016f2d8 sourceline 0x15e5
 	0016f2e0 mov ax,0xd4
 	0016f2ec mov bx,ax
 	0016f2f8 mov mar,0x3cef20
 	0016f304 mov ax,mar
 	0016f310 push op
 	0016f318 mov op,ax
 	0016f320 farpush bx
 	0016f328 setfuncargs 0x1
 	0016f330 mov ax,0x70ef20
 	0016f33c farcall ax
 	0016f344 farsubsp 0x1
 	0016f34c pop op
 	0016f354 sourceline 0x15e6
 	0016f35c push op
 	0016f364 mov ax,0x426
 	0016f370 farpush ax
 	0016f378 mov ax,0x397
 	0016f384 farpush ax
 	0016f38c mov ax,0x0
 	0016f398 farpush ax
 	0016f3a0 mov ax,0x3
 	0016f3ac farpush ax
 	0016f3b4 mov ax,0x0
 	0016f3c0 farpush ax
 	0016f3c8 mov mar,0x3cef20
 	0016f3d4 mov ax,mar
 	0016f3e0 mov op,ax
 	0016f3e8 setfuncargs 0x5
 	0016f3f0 mov ax,0x536f20
 	0016f3fc farcall ax
 	0016f404 farsubsp 0x5
 	0016f40c pop op
 	0016f414 sourceline 0x15e7
 	0016f41c mov ax,0x1
 	0016f428 mov mar,0xb56f20
 	0016f434 memwrite4 ax
 	0016f43c sourceline 0x15e8
 	0016f444 sub sp,0x4
		0016f450: FALL_THROUGH

	[0016f450]
		0016df58: UNCONDITIONAL_JUMP
		0016eb9c: FALL_THROUGH
 	0016f450 sourceline 0x15e9
 	0016f458 jmp 0x0017131c
		0017131c: UNCONDITIONAL_JUMP

	[0016f460]
		0016de90: CONDITIONAL_JUMP
 	0016f460 sourceline 0x15eb
 	0016f468 mov mar,0x3cef20
 	0016f474 mov ax,mar
 	0016f480 push op
 	0016f488 mov op,ax
 	0016f490 setfuncargs 0x0
 	0016f498 mov ax,0x89ef20
 	0016f4a4 farcall ax
 	0016f4ac pop op
 	0016f4b4 push ax
 	0016f4bc mov mar,0x7def20
 	0016f4c8 mov ax,mar
 	0016f4d4 pop bx
 	0016f4dc cmpeq bx,ax
 	0016f4e8 mov ax,bx
 	0016f4f4 jz 0x0016f830
		0016f830: CONDITIONAL_JUMP
		0016f4fc: FALL_THROUGH

	[0016f4fc]
		0016f460: FALL_THROUGH
 	0016f4fc sourceline 0x15ed
 	0016f504 mov mar,0xca6f20
 	0016f510 memread4 ax
 	0016f518 lnot ax
 	0016f520 jz 0x0016f6f8
		0016f6f8: CONDITIONAL_JUMP
		0016f528: FALL_THROUGH

	[0016f528]
		0016f4fc: FALL_THROUGH
 	0016f528 sourceline 0x15ef
 	0016f530 push op
 	0016f538 mov ax,0x397
 	0016f544 farpush ax
 	0016f54c mov ax,0x98
 	0016f558 farpush ax
 	0016f560 mov ax,0x33
 	0016f56c farpush ax
 	0016f574 mov mar,0x3cef20
 	0016f580 mov ax,mar
 	0016f58c mov op,ax
 	0016f594 setfuncargs 0x3
 	0016f59c mov ax,0x726f20
 	0016f5a8 farcall ax
 	0016f5b0 farsubsp 0x3
 	0016f5b8 pop op
 	0016f5c0 sourceline 0x15f0
 	0016f5c8 mov ax,0x1
 	0016f5d4 mov bx,ax
 	0016f5e0 mov mar,0x3cef20
 	0016f5ec mov ax,mar
 	0016f5f8 push op
 	0016f600 mov op,ax
 	0016f608 farpush bx
 	0016f610 setfuncargs 0x1
 	0016f618 mov ax,0x69ef20
 	0016f624 farcall ax
 	0016f62c farsubsp 0x1
 	0016f634 pop op
 	0016f63c sourceline 0x15f2
 	0016f644 push op
 	0016f64c mov ax,0x2beb3c
 	0016f658 farpush ax
 	0016f660 mov ax,0x138
 	0016f66c farpush ax
 	0016f674 mov ax,0x92
 	0016f680 farpush ax
 	0016f688 mov ax,0x0
 	0016f694 farpush ax
 	0016f69c mov mar,0x3cef20
 	0016f6a8 mov ax,mar
 	0016f6b4 mov op,ax
 	0016f6bc setfuncargs 0x4
 	0016f6c4 mov ax,0x6aef20
 	0016f6d0 farcall ax
 	0016f6d8 farsubsp 0x4
 	0016f6e0 pop op
 	0016f6e8 sourceline 0x15f3
 	0016f6f0 jmp 0x0016f820
		0016f820: UNCONDITIONAL_JUMP

	[0016f6f8]
		0016f4fc: CONDITIONAL_JUMP
 	0016f6f8 sourceline 0x15f6
 	0016f700 mov ax,0x1
 	0016f70c mov bx,ax
 	0016f718 mov mar,0x3cef20
 	0016f724 mov ax,mar
 	0016f730 push op
 	0016f738 mov op,ax
 	0016f740 farpush bx
 	0016f748 setfuncargs 0x1
 	0016f750 mov ax,0x69ef20
 	0016f75c farcall ax
 	0016f764 farsubsp 0x1
 	0016f76c pop op
 	0016f774 sourceline 0x15f8
 	0016f77c push op
 	0016f784 mov ax,0x2c2e3b
 	0016f790 farpush ax
 	0016f798 mov ax,0x138
 	0016f7a4 farpush ax
 	0016f7ac mov ax,0x92
 	0016f7b8 farpush ax
 	0016f7c0 mov ax,0x0
 	0016f7cc farpush ax
 	0016f7d4 mov mar,0x3cef20
 	0016f7e0 mov ax,mar
 	0016f7ec mov op,ax
 	0016f7f4 setfuncargs 0x4
 	0016f7fc mov ax,0x6aef20
 	0016f808 farcall ax
 	0016f810 farsubsp 0x4
 	0016f818 pop op
		0016f820: FALL_THROUGH

	[0016f820]
		0016f528: UNCONDITIONAL_JUMP
		0016f6f8: FALL_THROUGH
 	0016f820 sourceline 0x15fa
 	0016f828 jmp 0x0017131c
		0017131c: UNCONDITIONAL_JUMP

	[0016f830]
		0016f460: CONDITIONAL_JUMP
 	0016f830 sourceline 0x15fc
 	0016f838 mov mar,0x3cef20
 	0016f844 mov ax,mar
 	0016f850 push op
 	0016f858 mov op,ax
 	0016f860 setfuncargs 0x0
 	0016f868 mov ax,0x89ef20
 	0016f874 farcall ax
 	0016f87c pop op
 	0016f884 push ax
 	0016f88c mov mar,0x8d6f20
 	0016f898 mov ax,mar
 	0016f8a4 pop bx
 	0016f8ac cmpeq bx,ax
 	0016f8b8 mov ax,bx
 	0016f8c4 jz 0x0016fc00
		0016fc00: CONDITIONAL_JUMP
		0016f8cc: FALL_THROUGH

	[0016f8cc]
		0016f830: FALL_THROUGH
 	0016f8cc sourceline 0x15fe
 	0016f8d4 mov mar,0xca6f20
 	0016f8e0 memread4 ax
 	0016f8e8 lnot ax
 	0016f8f0 jz 0x0016fac8
		0016fac8: CONDITIONAL_JUMP
		0016f8f8: FALL_THROUGH

	[0016f8f8]
		0016f8cc: FALL_THROUGH
 	0016f8f8 sourceline 0x1600
 	0016f900 push op
 	0016f908 mov ax,0x397
 	0016f914 farpush ax
 	0016f91c mov ax,0x98
 	0016f928 farpush ax
 	0016f930 mov ax,0x33
 	0016f93c farpush ax
 	0016f944 mov mar,0x3cef20
 	0016f950 mov ax,mar
 	0016f95c mov op,ax
 	0016f964 setfuncargs 0x3
 	0016f96c mov ax,0x726f20
 	0016f978 farcall ax
 	0016f980 farsubsp 0x3
 	0016f988 pop op
 	0016f990 sourceline 0x1601
 	0016f998 mov ax,0x1
 	0016f9a4 mov bx,ax
 	0016f9b0 mov mar,0x3cef20
 	0016f9bc mov ax,mar
 	0016f9c8 push op
 	0016f9d0 mov op,ax
 	0016f9d8 farpush bx
 	0016f9e0 setfuncargs 0x1
 	0016f9e8 mov ax,0x69ef20
 	0016f9f4 farcall ax
 	0016f9fc farsubsp 0x1
 	0016fa04 pop op
 	0016fa0c sourceline 0x1603
 	0016fa14 push op
 	0016fa1c mov ax,0x2beb3c
 	0016fa28 farpush ax
 	0016fa30 mov ax,0x138
 	0016fa3c farpush ax
 	0016fa44 mov ax,0x92
 	0016fa50 farpush ax
 	0016fa58 mov ax,0x0
 	0016fa64 farpush ax
 	0016fa6c mov mar,0x3cef20
 	0016fa78 mov ax,mar
 	0016fa84 mov op,ax
 	0016fa8c setfuncargs 0x4
 	0016fa94 mov ax,0x6aef20
 	0016faa0 farcall ax
 	0016faa8 farsubsp 0x4
 	0016fab0 pop op
 	0016fab8 sourceline 0x1604
 	0016fac0 jmp 0x0016fbf0
		0016fbf0: UNCONDITIONAL_JUMP

	[0016fac8]
		0016f8cc: CONDITIONAL_JUMP
 	0016fac8 sourceline 0x1607
 	0016fad0 mov ax,0x1
 	0016fadc mov bx,ax
 	0016fae8 mov mar,0x3cef20
 	0016faf4 mov ax,mar
 	0016fb00 push op
 	0016fb08 mov op,ax
 	0016fb10 farpush bx
 	0016fb18 setfuncargs 0x1
 	0016fb20 mov ax,0x69ef20
 	0016fb2c farcall ax
 	0016fb34 farsubsp 0x1
 	0016fb3c pop op
 	0016fb44 sourceline 0x1609
 	0016fb4c push op
 	0016fb54 mov ax,0x2beade
 	0016fb60 farpush ax
 	0016fb68 mov ax,0x138
 	0016fb74 farpush ax
 	0016fb7c mov ax,0x92
 	0016fb88 farpush ax
 	0016fb90 mov ax,0x0
 	0016fb9c farpush ax
 	0016fba4 mov mar,0x3cef20
 	0016fbb0 mov ax,mar
 	0016fbbc mov op,ax
 	0016fbc4 setfuncargs 0x4
 	0016fbcc mov ax,0x6aef20
 	0016fbd8 farcall ax
 	0016fbe0 farsubsp 0x4
 	0016fbe8 pop op
		0016fbf0: FALL_THROUGH

	[0016fbf0]
		0016f8f8: UNCONDITIONAL_JUMP
		0016fac8: FALL_THROUGH
 	0016fbf0 sourceline 0x160b
 	0016fbf8 jmp 0x0017131c
		0017131c: UNCONDITIONAL_JUMP

	[0016fc00]
		0016f830: CONDITIONAL_JUMP
 	0016fc00 sourceline 0x160d
 	0016fc08 mov mar,0x3cef20
 	0016fc14 mov ax,mar
 	0016fc20 push op
 	0016fc28 mov op,ax
 	0016fc30 setfuncargs 0x0
 	0016fc38 mov ax,0x89ef20
 	0016fc44 farcall ax
 	0016fc4c pop op
 	0016fc54 push ax
 	0016fc5c mov mar,0x8def20
 	0016fc68 mov ax,mar
 	0016fc74 pop bx
 	0016fc7c cmpeq bx,ax
 	0016fc88 mov ax,bx
 	0016fc94 jz 0x0016ffd0
		0016ffd0: CONDITIONAL_JUMP
		0016fc9c: FALL_THROUGH

	[0016fc9c]
		0016fc00: FALL_THROUGH
 	0016fc9c sourceline 0x160f
 	0016fca4 mov mar,0xca6f20
 	0016fcb0 memread4 ax
 	0016fcb8 lnot ax
 	0016fcc0 jz 0x0016fe98
		0016fe98: CONDITIONAL_JUMP
		0016fcc8: FALL_THROUGH

	[0016fcc8]
		0016fc9c: FALL_THROUGH
 	0016fcc8 sourceline 0x1611
 	0016fcd0 push op
 	0016fcd8 mov ax,0x397
 	0016fce4 farpush ax
 	0016fcec mov ax,0x98
 	0016fcf8 farpush ax
 	0016fd00 mov ax,0x33
 	0016fd0c farpush ax
 	0016fd14 mov mar,0x3cef20
 	0016fd20 mov ax,mar
 	0016fd2c mov op,ax
 	0016fd34 setfuncargs 0x3
 	0016fd3c mov ax,0x726f20
 	0016fd48 farcall ax
 	0016fd50 farsubsp 0x3
 	0016fd58 pop op
 	0016fd60 sourceline 0x1612
 	0016fd68 mov ax,0x1
 	0016fd74 mov bx,ax
 	0016fd80 mov mar,0x3cef20
 	0016fd8c mov ax,mar
 	0016fd98 push op
 	0016fda0 mov op,ax
 	0016fda8 farpush bx
 	0016fdb0 setfuncargs 0x1
 	0016fdb8 mov ax,0x69ef20
 	0016fdc4 farcall ax
 	0016fdcc farsubsp 0x1
 	0016fdd4 pop op
 	0016fddc sourceline 0x1614
 	0016fde4 push op
 	0016fdec mov ax,0x2beb3c
 	0016fdf8 farpush ax
 	0016fe00 mov ax,0x138
 	0016fe0c farpush ax
 	0016fe14 mov ax,0x92
 	0016fe20 farpush ax
 	0016fe28 mov ax,0x0
 	0016fe34 farpush ax
 	0016fe3c mov mar,0x3cef20
 	0016fe48 mov ax,mar
 	0016fe54 mov op,ax
 	0016fe5c setfuncargs 0x4
 	0016fe64 mov ax,0x6aef20
 	0016fe70 farcall ax
 	0016fe78 farsubsp 0x4
 	0016fe80 pop op
 	0016fe88 sourceline 0x1615
 	0016fe90 jmp 0x0016ffc0
		0016ffc0: UNCONDITIONAL_JUMP

	[0016fe98]
		0016fc9c: CONDITIONAL_JUMP
 	0016fe98 sourceline 0x1618
 	0016fea0 mov ax,0x1
 	0016feac mov bx,ax
 	0016feb8 mov mar,0x3cef20
 	0016fec4 mov ax,mar
 	0016fed0 push op
 	0016fed8 mov op,ax
 	0016fee0 farpush bx
 	0016fee8 setfuncargs 0x1
 	0016fef0 mov ax,0x69ef20
 	0016fefc farcall ax
 	0016ff04 farsubsp 0x1
 	0016ff0c pop op
 	0016ff14 sourceline 0x161a
 	0016ff1c push op
 	0016ff24 mov ax,0x2beb6f
 	0016ff30 farpush ax
 	0016ff38 mov ax,0x138
 	0016ff44 farpush ax
 	0016ff4c mov ax,0x92
 	0016ff58 farpush ax
 	0016ff60 mov ax,0x0
 	0016ff6c farpush ax
 	0016ff74 mov mar,0x3cef20
 	0016ff80 mov ax,mar
 	0016ff8c mov op,ax
 	0016ff94 setfuncargs 0x4
 	0016ff9c mov ax,0x6aef20
 	0016ffa8 farcall ax
 	0016ffb0 farsubsp 0x4
 	0016ffb8 pop op
		0016ffc0: FALL_THROUGH

	[0016ffc0]
		0016fcc8: UNCONDITIONAL_JUMP
		0016fe98: FALL_THROUGH
 	0016ffc0 sourceline 0x161c
 	0016ffc8 jmp 0x0017131c
		0017131c: UNCONDITIONAL_JUMP

	[0016ffd0]
		0016fc00: CONDITIONAL_JUMP
 	0016ffd0 sourceline 0x1620
 	0016ffd8 mov mar,0xca6f20
 	0016ffe4 memread4 ax
 	0016ffec jz 0x0017131c
		0017131c: CONDITIONAL_JUMP
		0016fff4: FALL_THROUGH

	[0016fff4]
		0016ffd0: FALL_THROUGH
 	0016fff4 sourceline 0x1622
 	0016fffc mov ax,0x0
 	00170008 mov mar,0xb56f20
 	00170014 memwrite4 ax
 	0017001c sourceline 0x1623
 	00170024 mov ax,0x0
 	00170030 mov bx,ax
 	0017003c mov mar,0x3cef20
 	00170048 mov ax,mar
 	00170054 push op
 	0017005c mov op,ax
 	00170064 farpush bx
 	0017006c setfuncargs 0x1
 	00170074 mov ax,0x436f20
 	00170080 farcall ax
 	00170088 farsubsp 0x1
 	00170090 pop op
 	00170098 sourceline 0x1624
 	001700a0 push op
 	001700a8 mov ax,0x427
 	001700b4 farpush ax
 	001700bc mov ax,0x397
 	001700c8 farpush ax
 	001700d0 mov ax,0x0
 	001700dc farpush ax
 	001700e4 mov ax,0x4
 	001700f0 farpush ax
 	001700f8 mov ax,0x0
 	00170104 farpush ax
 	0017010c mov mar,0x3cef20
 	00170118 mov ax,mar
 	00170124 mov op,ax
 	0017012c setfuncargs 0x5
 	00170134 mov ax,0x536f20
 	00170140 farcall ax
 	00170148 farsubsp 0x5
 	00170150 pop op
 	00170158 sourceline 0x1625
 	00170160 push op
 	00170168 mov ax,0x2
 	00170174 farpush ax
 	0017017c mov mar,0x3cef20
 	00170188 mov ax,mar
 	00170194 mov op,ax
 	0017019c setfuncargs 0x1
 	001701a4 mov ax,0x51ef20
 	001701b0 farcall ax
 	001701b8 farsubsp 0x1
 	001701c0 pop op
 	001701c8 sourceline 0x1626
 	001701d0 mov ax,0x8c
 	001701dc farpush ax
 	001701e4 mov ax,0x7
 	001701f0 farpush ax
 	001701f8 setfuncargs 0x2
 	00170200 mov ax,0x756f20
 	0017020c farcall ax
 	00170214 farsubsp 0x2
 	0017021c sourceline 0x1627
 	00170224 mov ax,0xd0
 	00170230 mov bx,ax
 	0017023c mov mar,0x3cef20
 	00170248 mov ax,mar
 	00170254 push op
 	0017025c mov op,ax
 	00170264 farpush bx
 	0017026c setfuncargs 0x1
 	00170274 mov ax,0x70ef20
 	00170280 farcall ax
 	00170288 farsubsp 0x1
 	00170290 pop op
 	00170298 sourceline 0x1628
 	001702a0 mov ax,0x8b
 	001702ac mov bx,ax
 	001702b8 mov mar,0x3cef20
 	001702c4 mov ax,mar
 	001702d0 push op
 	001702d8 mov op,ax
 	001702e0 farpush bx
 	001702e8 setfuncargs 0x1
 	001702f0 mov ax,0x526f20
 	001702fc farcall ax
 	00170304 farsubsp 0x1
 	0017030c pop op
 	00170314 sourceline 0x1629
 	0017031c push op
 	00170324 mov ax,0x131
 	00170330 farpush ax
 	00170338 mov ax,0x397
 	00170344 farpush ax
 	0017034c mov ax,0x84
 	00170358 farpush ax
 	00170360 mov ax,0xb1
 	0017036c farpush ax
 	00170374 mov mar,0x3cef20
 	00170380 mov ax,mar
 	0017038c mov op,ax
 	00170394 setfuncargs 0x4
 	0017039c mov ax,0xb2ef20
 	001703a8 farcall ax
 	001703b0 farsubsp 0x4
 	001703b8 pop op
 	001703c0 sourceline 0x162a
 	001703c8 push op
 	001703d0 mov ax,0x6
 	001703dc farpush ax
 	001703e4 mov mar,0x3cef20
 	001703f0 mov ax,mar
 	001703fc mov op,ax
 	00170404 setfuncargs 0x1
 	0017040c mov ax,0x51ef20
 	00170418 farcall ax
 	00170420 farsubsp 0x1
 	00170428 pop op
 	00170430 sourceline 0x162b
 	00170438 mov mar,0x3cef20
 	00170444 mov ax,mar
 	00170450 push op
 	00170458 mov op,ax
 	00170460 setfuncargs 0x0
 	00170468 mov ax,0x78ef20
 	00170474 farcall ax
 	0017047c pop op
 	00170484 push ax
 	0017048c mov ax,0x8
 	00170498 pop bx
 	001704a0 sub bx,ax
 	001704ac mov ax,bx
 	001704b8 mov bx,ax
 	001704c4 mov mar,0x3cef20
 	001704d0 mov ax,mar
 	001704dc push op
 	001704e4 mov op,ax
 	001704ec farpush bx
 	001704f4 setfuncargs 0x1
 	001704fc mov ax,0x526f20
 	00170508 farcall ax
 	00170510 farsubsp 0x1
 	00170518 pop op
 	00170520 sourceline 0x162c
 	00170528 mov mar,0x3cef20
 	00170534 mov ax,mar
 	00170540 push op
 	00170548 mov op,ax
 	00170550 setfuncargs 0x0
 	00170558 mov ax,0xb36f20
 	00170564 farcall ax
 	0017056c pop op
 	00170574 push ax
 	0017057c mov ax,0x8
 	00170588 pop bx
 	00170590 sub bx,ax
 	0017059c mov ax,bx
 	001705a8 mov bx,ax
 	001705b4 mov mar,0x3cef20
 	001705c0 mov ax,mar
 	001705cc push op
 	001705d4 mov op,ax
 	001705dc farpush bx
 	001705e4 setfuncargs 0x1
 	001705ec mov ax,0x70ef20
 	001705f8 farcall ax
 	00170600 farsubsp 0x1
 	00170608 pop op
 	00170610 sourceline 0x162d
 	00170618 push op
 	00170620 mov ax,0x426
 	0017062c farpush ax
 	00170634 mov ax,0x397
 	00170640 farpush ax
 	00170648 mov ax,0x0
 	00170654 farpush ax
 	0017065c mov ax,0x3
 	00170668 farpush ax
 	00170670 mov ax,0x1
 	0017067c farpush ax
 	00170684 mov mar,0x3cef20
 	00170690 mov ax,mar
 	0017069c mov op,ax
 	001706a4 setfuncargs 0x5
 	001706ac mov ax,0x536f20
 	001706b8 farcall ax
 	001706c0 farsubsp 0x5
 	001706c8 pop op
 	001706d0 sourceline 0x162f
 	001706d8 mov ax,0x3
 	001706e4 mov bx,ax
 	001706f0 mov mar,0x3cef20
 	001706fc mov ax,mar
 	00170708 push op
 	00170710 mov op,ax
 	00170718 farpush bx
 	00170720 setfuncargs 0x1
 	00170728 mov ax,0x69ef20
 	00170734 farcall ax
 	0017073c farsubsp 0x1
 	00170744 pop op
 	0017074c sourceline 0x1631
 	00170754 mov ax,0x3
 	00170760 farpush ax
 	00170768 setfuncargs 0x1
 	00170770 mov ax,0x4a6f20
 	0017077c farcall ax
 	00170784 farsubsp 0x1
 	0017078c mov mar,sp
 	00170798 memwrite4 ax
 	001707a0 add sp,0x4
 	001707ac sourceline 0x1632
 	001707b4 stackptr 0x4
 	001707bc memread4 ax
 	001707c4 push ax
 	001707cc mov ax,0x0
 	001707d8 pop bx
 	001707e0 cmpeq bx,ax
 	001707ec mov ax,bx
 	001707f8 jz 0x00170870
		00170870: CONDITIONAL_JUMP
		00170800: FALL_THROUGH

	[00170800]
		0016fff4: FALL_THROUGH
 	00170800 push op
 	00170808 mov ax,0x2c8717
 	00170814 farpush ax
 	0017081c mov mar,0x3cef20
 	00170828 mov ax,mar
 	00170834 mov op,ax
 	0017083c setfuncargs 0x1
 	00170844 mov ax,0x6f6f20
 	00170850 farcall ax
 	00170858 farsubsp 0x1
 	00170860 pop op
 	00170868 jmp 0x00170a68
		00170a68: UNCONDITIONAL_JUMP

	[00170870]
		0016fff4: CONDITIONAL_JUMP
 	00170870 sourceline 0x1633
 	00170878 stackptr 0x4
 	00170880 memread4 ax
 	00170888 push ax
 	00170890 mov ax,0x1
 	0017089c pop bx
 	001708a4 cmpeq bx,ax
 	001708b0 mov ax,bx
 	001708bc jz 0x00170934
		00170934: CONDITIONAL_JUMP
		001708c4: FALL_THROUGH

	[001708c4]
		00170870: FALL_THROUGH
 	001708c4 push op
 	001708cc mov ax,0x2c8740
 	001708d8 farpush ax
 	001708e0 mov mar,0x3cef20
 	001708ec mov ax,mar
 	001708f8 mov op,ax
 	00170900 setfuncargs 0x1
 	00170908 mov ax,0x6f6f20
 	00170914 farcall ax
 	0017091c farsubsp 0x1
 	00170924 pop op
 	0017092c jmp 0x00170a68
		00170a68: UNCONDITIONAL_JUMP

	[00170934]
		00170870: CONDITIONAL_JUMP
 	00170934 sourceline 0x1634
 	0017093c stackptr 0x4
 	00170944 memread4 ax
 	0017094c push ax
 	00170954 mov ax,0x2
 	00170960 pop bx
 	00170968 cmpeq bx,ax
 	00170974 mov ax,bx
 	00170980 jz 0x001709f8
		001709f8: CONDITIONAL_JUMP
		00170988: FALL_THROUGH

	[00170988]
		00170934: FALL_THROUGH
 	00170988 push op
 	00170990 mov ax,0x2c8769
 	0017099c farpush ax
 	001709a4 mov mar,0x3cef20
 	001709b0 mov ax,mar
 	001709bc mov op,ax
 	001709c4 setfuncargs 0x1
 	001709cc mov ax,0x6f6f20
 	001709d8 farcall ax
 	001709e0 farsubsp 0x1
 	001709e8 pop op
 	001709f0 jmp 0x00170a68
		00170a68: UNCONDITIONAL_JUMP

	[001709f8]
		00170934: CONDITIONAL_JUMP
 	001709f8 sourceline 0x1635
 	00170a00 push op
 	00170a08 mov ax,0x2c8792
 	00170a14 farpush ax
 	00170a1c mov mar,0x3cef20
 	00170a28 mov ax,mar
 	00170a34 mov op,ax
 	00170a3c setfuncargs 0x1
 	00170a44 mov ax,0x6f6f20
 	00170a50 farcall ax
 	00170a58 farsubsp 0x1
 	00170a60 pop op
		00170a68: FALL_THROUGH

	[00170a68]
		00170800: UNCONDITIONAL_JUMP
		001708c4: UNCONDITIONAL_JUMP
		00170988: UNCONDITIONAL_JUMP
		001709f8: FALL_THROUGH
 	00170a68 sourceline 0x1637
 	00170a70 push op
 	00170a78 mov ax,0x2bec5d
 	00170a84 farpush ax
 	00170a8c mov mar,0x746f20
 	00170a98 mov ax,mar
 	00170aa4 mov op,ax
 	00170aac setfuncargs 0x1
 	00170ab4 mov ax,0x6f6f20
 	00170ac0 farcall ax
 	00170ac8 farsubsp 0x1
 	00170ad0 pop op
 	00170ad8 sourceline 0x1638
 	00170ae0 push op
 	00170ae8 mov ax,0x427
 	00170af4 farpush ax
 	00170afc mov ax,0x397
 	00170b08 farpush ax
 	00170b10 mov ax,0x0
 	00170b1c farpush ax
 	00170b24 mov ax,0x3
 	00170b30 farpush ax
 	00170b38 mov ax,0x1
 	00170b44 farpush ax
 	00170b4c mov mar,0x3cef20
 	00170b58 mov ax,mar
 	00170b64 mov op,ax
 	00170b6c setfuncargs 0x5
 	00170b74 mov ax,0x536f20
 	00170b80 farcall ax
 	00170b88 farsubsp 0x5
 	00170b90 pop op
 	00170b98 sourceline 0x1639
 	00170ba0 push op
 	00170ba8 mov ax,0x2
 	00170bb4 farpush ax
 	00170bbc mov mar,0x3cef20
 	00170bc8 mov ax,mar
 	00170bd4 mov op,ax
 	00170bdc setfuncargs 0x1
 	00170be4 mov ax,0x51ef20
 	00170bf0 farcall ax
 	00170bf8 farsubsp 0x1
 	00170c00 pop op
 	00170c08 sourceline 0x163a
 	00170c10 mov mar,0x3cef20
 	00170c1c mov ax,mar
 	00170c28 push op
 	00170c30 mov op,ax
 	00170c38 setfuncargs 0x0
 	00170c40 mov ax,0x78ef20
 	00170c4c farcall ax
 	00170c54 pop op
 	00170c5c push ax
 	00170c64 mov ax,0x8
 	00170c70 pop bx
 	00170c78 add bx,ax
 	00170c84 mov ax,bx
 	00170c90 mov bx,ax
 	00170c9c mov mar,0x3cef20
 	00170ca8 mov ax,mar
 	00170cb4 push op
 	00170cbc mov op,ax
 	00170cc4 farpush bx
 	00170ccc setfuncargs 0x1
 	00170cd4 mov ax,0x526f20
 	00170ce0 farcall ax
 	00170ce8 farsubsp 0x1
 	00170cf0 pop op
 	00170cf8 sourceline 0x163b
 	00170d00 mov mar,0x3cef20
 	00170d0c mov ax,mar
 	00170d18 push op
 	00170d20 mov op,ax
 	00170d28 setfuncargs 0x0
 	00170d30 mov ax,0xb36f20
 	00170d3c farcall ax
 	00170d44 pop op
 	00170d4c push ax
 	00170d54 mov ax,0x8
 	00170d60 pop bx
 	00170d68 add bx,ax
 	00170d74 mov ax,bx
 	00170d80 mov bx,ax
 	00170d8c mov mar,0x3cef20
 	00170d98 mov ax,mar
 	00170da4 push op
 	00170dac mov op,ax
 	00170db4 farpush bx
 	00170dbc setfuncargs 0x1
 	00170dc4 mov ax,0x70ef20
 	00170dd0 farcall ax
 	00170dd8 farsubsp 0x1
 	00170de0 pop op
 	00170de8 sourceline 0x163c
 	00170df0 push op
 	00170df8 mov ax,0x131
 	00170e04 farpush ax
 	00170e0c mov ax,0x397
 	00170e18 farpush ax
 	00170e20 mov ax,0x8b
 	00170e2c farpush ax
 	00170e34 mov ax,0xc3
 	00170e40 farpush ax
 	00170e48 mov mar,0x3cef20
 	00170e54 mov ax,mar
 	00170e60 mov op,ax
 	00170e68 setfuncargs 0x4
 	00170e70 mov ax,0xb2ef20
 	00170e7c farcall ax
 	00170e84 farsubsp 0x4
 	00170e8c pop op
 	00170e94 sourceline 0x163d
 	00170e9c mov ax,0x1
 	00170ea8 farpush ax
 	00170eb0 setfuncargs 0x1
 	00170eb8 mov ax,0x426f20
 	00170ec4 farcall ax
 	00170ecc farsubsp 0x1
 	00170ed4 sourceline 0x163e
 	00170edc push op
 	00170ee4 mov ax,0x130
 	00170ef0 farpush ax
 	00170ef8 mov ax,0x397
 	00170f04 farpush ax
 	00170f0c mov ax,0x8b
 	00170f18 farpush ax
 	00170f20 mov mar,0x3cef20
 	00170f2c mov ax,mar
 	00170f38 push op
 	00170f40 mov op,ax
 	00170f48 setfuncargs 0x0
 	00170f50 mov ax,0xb36f20
 	00170f5c farcall ax
 	00170f64 pop op
 	00170f6c push ax
 	00170f74 mov ax,0xd
 	00170f80 pop bx
 	00170f88 add bx,ax
 	00170f94 mov ax,bx
 	00170fa0 farpush ax
 	00170fa8 mov mar,0x3cef20
 	00170fb4 mov ax,mar
 	00170fc0 mov op,ax
 	00170fc8 setfuncargs 0x4
 	00170fd0 mov ax,0xb2ef20
 	00170fdc farcall ax
 	00170fe4 farsubsp 0x4
 	00170fec pop op
 	00170ff4 sourceline 0x163f
 	00170ffc push op
 	00171004 mov ax,0x397
 	00171010 farpush ax
 	00171018 mov ax,0x6
 	00171024 farpush ax
 	0017102c mov mar,0x3cef20
 	00171038 mov ax,mar
 	00171044 mov op,ax
 	0017104c setfuncargs 0x2
 	00171054 mov ax,0x6eef20
 	00171060 farcall ax
 	00171068 farsubsp 0x2
 	00171070 pop op
 	00171078 sourceline 0x1640
 	00171080 mov ax,0x8
 	0017108c farpush ax
 	00171094 setfuncargs 0x1
 	0017109c mov ax,0x426f20
 	001710a8 farcall ax
 	001710b0 farsubsp 0x1
 	001710b8 sourceline 0x1641
 	001710c0 push op
 	001710c8 mov ax,0x4a
 	001710d4 farpush ax
 	001710dc mov mar,0x3cef20
 	001710e8 mov ax,mar
 	001710f4 mov op,ax
 	001710fc setfuncargs 0x1
 	00171104 mov ax,0x51ef20
 	00171110 farcall ax
 	00171118 farsubsp 0x1
 	00171120 pop op
 	00171128 sourceline 0x1642
 	00171130 mov ax,0x85
 	0017113c mov bx,ax
 	00171148 mov mar,0x3cef20
 	00171154 mov ax,mar
 	00171160 push op
 	00171168 mov op,ax
 	00171170 farpush bx
 	00171178 setfuncargs 0x1
 	00171180 mov ax,0x526f20
 	0017118c farcall ax
 	00171194 farsubsp 0x1
 	0017119c pop op
 	001711a4 sourceline 0x1643
 	001711ac mov ax,0xd4
 	001711b8 mov bx,ax
 	001711c4 mov mar,0x3cef20
 	001711d0 mov ax,mar
 	001711dc push op
 	001711e4 mov op,ax
 	001711ec farpush bx
 	001711f4 setfuncargs 0x1
 	001711fc mov ax,0x70ef20
 	00171208 farcall ax
 	00171210 farsubsp 0x1
 	00171218 pop op
 	00171220 sourceline 0x1644
 	00171228 push op
 	00171230 mov ax,0x426
 	0017123c farpush ax
 	00171244 mov ax,0x397
 	00171250 farpush ax
 	00171258 mov ax,0x0
 	00171264 farpush ax
 	0017126c mov ax,0x3
 	00171278 farpush ax
 	00171280 mov ax,0x0
 	0017128c farpush ax
 	00171294 mov mar,0x3cef20
 	001712a0 mov ax,mar
 	001712ac mov op,ax
 	001712b4 setfuncargs 0x5
 	001712bc mov ax,0x536f20
 	001712c8 farcall ax
 	001712d0 farsubsp 0x5
 	001712d8 pop op
 	001712e0 sourceline 0x1645
 	001712e8 mov ax,0x1
 	001712f4 mov mar,0xb56f20
 	00171300 memwrite4 ax
 	00171308 sourceline 0x1646
 	00171310 sub sp,0x4
		0017131c: FALL_THROUGH

	[0017131c]
		0016b168: UNCONDITIONAL_JUMP
		0016c8b0: UNCONDITIONAL_JUMP
		0016de80: UNCONDITIONAL_JUMP
		0016f450: UNCONDITIONAL_JUMP
		0016f820: UNCONDITIONAL_JUMP
		0016fbf0: UNCONDITIONAL_JUMP
		0016ffc0: UNCONDITIONAL_JUMP
		0016ffd0: CONDITIONAL_JUMP
		00170a68: FALL_THROUGH
 	0017131c sourceline 0x1648
 	00171324 mov ax,0x0
 	00171330 ret

cPoliceMan_UseInv$0:
	[00171334]
 	00171334 sourceline 0x164e
 	0017133c thisaddr
 	00171344 sourceline 0x164f
*	0017134c mov mar,0x3cef20
 	00171358 mov ax,mar
 	00171364 push op
 	0017136c mov op,ax
 	00171374 setfuncargs 0x0
 	0017137c mov ax,0x89ef20
 	00171388 farcall ax
 	00171390 pop op
 	00171398 push ax
 	001713a0 mov mar,0x9d6f20
 	001713ac mov ax,mar
 	001713b8 pop bx
 	001713c0 cmpeq bx,ax
 	001713cc mov ax,bx
 	001713d8 jz 0x001722c0
		001722c0: CONDITIONAL_JUMP
		001713e0: FALL_THROUGH

	[001713e0]
		00171334: FALL_THROUGH
 	001713e0 sourceline 0x1651
 	001713e8 setfuncargs 0x0
 	001713f0 mov ax,0x6def20
 	001713fc farcall ax
 	00171404 lnot ax
 	0017140c jz 0x00171468
		00171468: CONDITIONAL_JUMP
		00171414: FALL_THROUGH

	[00171414]
		001713e0: FALL_THROUGH
 	00171414 mov ax,0x81
 	00171420 farpush ax
 	00171428 mov ax,0x79
 	00171434 farpush ax
 	0017143c setfuncargs 0x2
 	00171444 mov ax,0x6e6f20
 	00171450 farcall ax
 	00171458 farsubsp 0x2
 	00171460 jmp 0x001722b0
		001722b0: UNCONDITIONAL_JUMP

	[00171468]
		001713e0: CONDITIONAL_JUMP
 	00171468 sourceline 0x1653
 	00171470 mov ax,0x0
 	0017147c mov bx,ax
 	00171488 mov mar,0x336f20
 	00171494 mov ax,mar
 	001714a0 farpush bx
 	001714a8 setfuncargs 0x1
 	001714b0 mov ax,0x43ef20
 	001714bc farcall ax
 	001714c4 farsubsp 0x1
 	001714cc sourceline 0x1654
 	001714d4 push op
 	001714dc mov ax,0x397
 	001714e8 farpush ax
 	001714f0 mov ax,0x5
 	001714fc farpush ax
 	00171504 mov mar,0x3cef20
 	00171510 mov ax,mar
 	0017151c mov op,ax
 	00171524 setfuncargs 0x2
 	0017152c mov ax,0x6eef20
 	00171538 farcall ax
 	00171540 farsubsp 0x2
 	00171548 pop op
 	00171550 sourceline 0x1655
 	00171558 mov ax,0xa
 	00171564 farpush ax
 	0017156c setfuncargs 0x1
 	00171574 mov ax,0x426f20
 	00171580 farcall ax
 	00171588 farsubsp 0x1
 	00171590 sourceline 0x1656
 	00171598 mov ax,0x3
 	001715a4 mov bx,ax
 	001715b0 mov mar,0x3cef20
 	001715bc mov ax,mar
 	001715c8 push op
 	001715d0 mov op,ax
 	001715d8 farpush bx
 	001715e0 setfuncargs 0x1
 	001715e8 mov ax,0x69ef20
 	001715f4 farcall ax
 	001715fc farsubsp 0x1
 	00171604 pop op
 	0017160c sourceline 0x1657
 	00171614 push op
 	0017161c mov ax,0x2bec7c
 	00171628 farpush ax
 	00171630 mov mar,0x3cef20
 	0017163c mov ax,mar
 	00171648 mov op,ax
 	00171650 setfuncargs 0x1
 	00171658 mov ax,0x6f6f20
 	00171664 farcall ax
 	0017166c farsubsp 0x1
 	00171674 pop op
 	0017167c sourceline 0x1658
 	00171684 push op
 	0017168c mov ax,0x2becd1
 	00171698 farpush ax
 	001716a0 mov mar,0xb6ef20
 	001716ac mov ax,mar
 	001716b8 mov op,ax
 	001716c0 setfuncargs 0x1
 	001716c8 mov ax,0x6f6f20
 	001716d4 farcall ax
 	001716dc farsubsp 0x1
 	001716e4 pop op
 	001716ec sourceline 0x1659
 	001716f4 push op
 	001716fc mov ax,0xf
 	00171708 farpush ax
 	00171710 mov mar,0x3cef20
 	0017171c mov ax,mar
 	00171728 mov op,ax
 	00171730 setfuncargs 0x1
 	00171738 mov ax,0x51ef20
 	00171744 farcall ax
 	0017174c farsubsp 0x1
 	00171754 pop op
 	0017175c sourceline 0x165a
 	00171764 mov ax,0x7b
 	00171770 mov bx,ax
 	0017177c mov mar,0x3cef20
 	00171788 mov ax,mar
 	00171794 push op
 	0017179c mov op,ax
 	001717a4 farpush bx
 	001717ac setfuncargs 0x1
 	001717b4 mov ax,0x526f20
 	001717c0 farcall ax
 	001717c8 farsubsp 0x1
 	001717d0 pop op
 	001717d8 sourceline 0x165b
 	001717e0 mov ax,0x7f
 	001717ec mov bx,ax
 	001717f8 mov mar,0x3cef20
 	00171804 mov ax,mar
 	00171810 push op
 	00171818 mov op,ax
 	00171820 farpush bx
 	00171828 setfuncargs 0x1
 	00171830 mov ax,0x70ef20
 	0017183c farcall ax
 	00171844 farsubsp 0x1
 	0017184c pop op
 	00171854 sourceline 0x165c
 	0017185c push op
 	00171864 mov ax,0x426
 	00171870 farpush ax
 	00171878 mov ax,0x397
 	00171884 farpush ax
 	0017188c mov ax,0x0
 	00171898 farpush ax
 	001718a0 mov ax,0x3
 	001718ac farpush ax
 	001718b4 mov ax,0x0
 	001718c0 farpush ax
 	001718c8 mov mar,0x3cef20
 	001718d4 mov ax,mar
 	001718e0 mov op,ax
 	001718e8 setfuncargs 0x5
 	001718f0 mov ax,0x536f20
 	001718fc farcall ax
 	00171904 farsubsp 0x5
 	0017190c pop op
 	00171914 sourceline 0x165d
 	0017191c mov ax,0x14
 	00171928 farpush ax
 	00171930 setfuncargs 0x1
 	00171938 mov ax,0x426f20
 	00171944 farcall ax
 	0017194c farsubsp 0x1
 	00171954 sourceline 0x165e
 	0017195c push op
 	00171964 mov ax,0x2becf8
 	00171970 farpush ax
 	00171978 mov mar,0xb6ef20
 	00171984 mov ax,mar
 	00171990 mov op,ax
 	00171998 setfuncargs 0x1
 	001719a0 mov ax,0x6f6f20
 	001719ac farcall ax
 	001719b4 farsubsp 0x1
 	001719bc pop op
 	001719c4 sourceline 0x165f
 	001719cc push op
 	001719d4 mov ax,0x427
 	001719e0 farpush ax
 	001719e8 mov ax,0x397
 	001719f4 farpush ax
 	001719fc mov ax,0x0
 	00171a08 farpush ax
 	00171a10 mov ax,0x3
 	00171a1c farpush ax
 	00171a24 mov ax,0x0
 	00171a30 farpush ax
 	00171a38 mov mar,0x3cef20
 	00171a44 mov ax,mar
 	00171a50 mov op,ax
 	00171a58 setfuncargs 0x5
 	00171a60 mov ax,0x536f20
 	00171a6c farcall ax
 	00171a74 farsubsp 0x5
 	00171a7c pop op
 	00171a84 sourceline 0x1660
 	00171a8c push op
 	00171a94 mov ax,0x2
 	00171aa0 farpush ax
 	00171aa8 mov mar,0x3cef20
 	00171ab4 mov ax,mar
 	00171ac0 mov op,ax
 	00171ac8 setfuncargs 0x1
 	00171ad0 mov ax,0x51ef20
 	00171adc farcall ax
 	00171ae4 farsubsp 0x1
 	00171aec pop op
 	00171af4 sourceline 0x1661
 	00171afc mov ax,0x5
 	00171b08 mov bx,ax
 	00171b14 mov mar,0x3cef20
 	00171b20 mov ax,mar
 	00171b2c push op
 	00171b34 mov op,ax
 	00171b3c farpush bx
 	00171b44 setfuncargs 0x1
 	00171b4c mov ax,0x766f20
 	00171b58 farcall ax
 	00171b60 farsubsp 0x1
 	00171b68 pop op
 	00171b70 sourceline 0x1662
 	00171b78 mov ax,0x81
 	00171b84 mov bx,ax
 	00171b90 mov mar,0x3cef20
 	00171b9c mov ax,mar
 	00171ba8 push op
 	00171bb0 mov op,ax
 	00171bb8 farpush bx
 	00171bc0 setfuncargs 0x1
 	00171bc8 mov ax,0x526f20
 	00171bd4 farcall ax
 	00171bdc farsubsp 0x1
 	00171be4 pop op
 	00171bec sourceline 0x1663
 	00171bf4 mov ax,0x79
 	00171c00 mov bx,ax
 	00171c0c mov mar,0x3cef20
 	00171c18 mov ax,mar
 	00171c24 push op
 	00171c2c mov op,ax
 	00171c34 farpush bx
 	00171c3c setfuncargs 0x1
 	00171c44 mov ax,0x70ef20
 	00171c50 farcall ax
 	00171c58 farsubsp 0x1
 	00171c60 pop op
 	00171c68 sourceline 0x1664
 	00171c70 push op
 	00171c78 mov ax,0x2bed17
 	00171c84 farpush ax
 	00171c8c mov mar,0xb6ef20
 	00171c98 mov ax,mar
 	00171ca4 mov op,ax
 	00171cac setfuncargs 0x1
 	00171cb4 mov ax,0x6f6f20
 	00171cc0 farcall ax
 	00171cc8 farsubsp 0x1
 	00171cd0 pop op
 	00171cd8 sourceline 0x1665
 	00171ce0 push op
 	00171ce8 mov ax,0x2bed45
 	00171cf4 farpush ax
 	00171cfc mov mar,0x3cef20
 	00171d08 mov ax,mar
 	00171d14 mov op,ax
 	00171d1c setfuncargs 0x1
 	00171d24 mov ax,0x6f6f20
 	00171d30 farcall ax
 	00171d38 farsubsp 0x1
 	00171d40 pop op
 	00171d48 sourceline 0x1666
 	00171d50 push op
 	00171d58 mov ax,0x2bedc0
 	00171d64 farpush ax
 	00171d6c mov mar,0xb6ef20
 	00171d78 mov ax,mar
 	00171d84 mov op,ax
 	00171d8c setfuncargs 0x1
 	00171d94 mov ax,0x6f6f20
 	00171da0 farcall ax
 	00171da8 farsubsp 0x1
 	00171db0 pop op
 	00171db8 sourceline 0x1667
 	00171dc0 push op
 	00171dc8 mov ax,0x2bee3c
 	00171dd4 farpush ax
 	00171ddc mov mar,0x3cef20
 	00171de8 mov ax,mar
 	00171df4 mov op,ax
 	00171dfc setfuncargs 0x1
 	00171e04 mov ax,0x6f6f20
 	00171e10 farcall ax
 	00171e18 farsubsp 0x1
 	00171e20 pop op
 	00171e28 sourceline 0x1668
 	00171e30 push op
 	00171e38 mov ax,0x2bee60
 	00171e44 farpush ax
 	00171e4c mov mar,0xb6ef20
 	00171e58 mov ax,mar
 	00171e64 mov op,ax
 	00171e6c setfuncargs 0x1
 	00171e74 mov ax,0x6f6f20
 	00171e80 farcall ax
 	00171e88 farsubsp 0x1
 	00171e90 pop op
 	00171e98 sourceline 0x1669
 	00171ea0 push op
 	00171ea8 mov ax,0x2bee85
 	00171eb4 farpush ax
 	00171ebc mov mar,0x3cef20
 	00171ec8 mov ax,mar
 	00171ed4 mov op,ax
 	00171edc setfuncargs 0x1
 	00171ee4 mov ax,0x6f6f20
 	00171ef0 farcall ax
 	00171ef8 farsubsp 0x1
 	00171f00 pop op
 	00171f08 sourceline 0x166a
 	00171f10 push op
 	00171f18 mov ax,0x2bee95
 	00171f24 farpush ax
 	00171f2c mov mar,0xb6ef20
 	00171f38 mov ax,mar
 	00171f44 mov op,ax
 	00171f4c setfuncargs 0x1
 	00171f54 mov ax,0x6f6f20
 	00171f60 farcall ax
 	00171f68 farsubsp 0x1
 	00171f70 pop op
 	00171f78 sourceline 0x166b
 	00171f80 push op
 	00171f88 mov ax,0x2bef06
 	00171f94 farpush ax
 	00171f9c mov mar,0x3cef20
 	00171fa8 mov ax,mar
 	00171fb4 mov op,ax
 	00171fbc setfuncargs 0x1
 	00171fc4 mov ax,0x6f6f20
 	00171fd0 farcall ax
 	00171fd8 farsubsp 0x1
 	00171fe0 pop op
 	00171fe8 sourceline 0x166c
 	00171ff0 push op
 	00171ff8 mov ax,0x2bef46
 	00172004 farpush ax
 	0017200c mov mar,0xb6ef20
 	00172018 mov ax,mar
 	00172024 mov op,ax
 	0017202c setfuncargs 0x1
 	00172034 mov ax,0x6f6f20
 	00172040 farcall ax
 	00172048 farsubsp 0x1
 	00172050 pop op
 	00172058 sourceline 0x166d
 	00172060 push op
 	00172068 mov ax,0x2befd2
 	00172074 farpush ax
 	0017207c mov mar,0x3cef20
 	00172088 mov ax,mar
 	00172094 mov op,ax
 	0017209c setfuncargs 0x1
 	001720a4 mov ax,0x6f6f20
 	001720b0 farcall ax
 	001720b8 farsubsp 0x1
 	001720c0 pop op
 	001720c8 sourceline 0x166e
 	001720d0 push op
 	001720d8 mov ax,0x2beff8
 	001720e4 farpush ax
 	001720ec mov mar,0xb6ef20
 	001720f8 mov ax,mar
 	00172104 mov op,ax
 	0017210c setfuncargs 0x1
 	00172114 mov ax,0x6f6f20
 	00172120 farcall ax
 	00172128 farsubsp 0x1
 	00172130 pop op
 	00172138 sourceline 0x166f
 	00172140 push op
 	00172148 mov ax,0x2bf01c
 	00172154 farpush ax
 	0017215c mov mar,0x3cef20
 	00172168 mov ax,mar
 	00172174 mov op,ax
 	0017217c setfuncargs 0x1
 	00172184 mov ax,0x6f6f20
 	00172190 farcall ax
 	00172198 farsubsp 0x1
 	001721a0 pop op
 	001721a8 sourceline 0x1670
 	001721b0 mov ax,0x1
 	001721bc mov mar,0xb5ef20
 	001721c8 memwrite4 ax
 	001721d0 sourceline 0x1671
 	001721d8 push op
 	001721e0 mov mar,0x9d6f20
 	001721ec mov ax,mar
 	001721f8 farpush ax
 	00172200 mov mar,0x3cef20
 	0017220c mov ax,mar
 	00172218 mov op,ax
 	00172220 setfuncargs 0x1
 	00172228 mov ax,0x7d6f20
 	00172234 farcall ax
 	0017223c farsubsp 0x1
 	00172244 pop op
 	0017224c sourceline 0x1672
 	00172254 mov ax,0x1
 	00172260 mov bx,ax
 	0017226c mov mar,0x336f20
 	00172278 mov ax,mar
 	00172284 farpush bx
 	0017228c setfuncargs 0x1
 	00172294 mov ax,0x43ef20
 	001722a0 farcall ax
 	001722a8 farsubsp 0x1
		001722b0: FALL_THROUGH

	[001722b0]
		00171414: UNCONDITIONAL_JUMP
		00171468: FALL_THROUGH
 	001722b0 sourceline 0x1674
 	001722b8 jmp 0x00173f48
		00173f48: UNCONDITIONAL_JUMP

	[001722c0]
		00171334: CONDITIONAL_JUMP
 	001722c0 sourceline 0x1676
 	001722c8 mov mar,0x3cef20
 	001722d4 mov ax,mar
 	001722e0 push op
 	001722e8 mov op,ax
 	001722f0 setfuncargs 0x0
 	001722f8 mov ax,0x89ef20
 	00172304 farcall ax
 	0017230c pop op
 	00172314 push ax
 	0017231c mov mar,0x8cef20
 	00172328 mov ax,mar
 	00172334 pop bx
 	0017233c cmpeq bx,ax
 	00172348 mov ax,bx
 	00172354 jnz 0x00172410
		00172410: CONDITIONAL_JUMP
		0017235c: FALL_THROUGH

	[0017235c]
		001722c0: FALL_THROUGH
 	0017235c push ax
 	00172364 mov mar,0x3cef20
 	00172370 mov ax,mar
 	0017237c push op
 	00172384 mov op,ax
 	0017238c setfuncargs 0x0
 	00172394 mov ax,0x89ef20
 	001723a0 farcall ax
 	001723a8 pop op
 	001723b0 push ax
 	001723b8 mov mar,0x8b6f20
 	001723c4 mov ax,mar
 	001723d0 pop bx
 	001723d8 cmpeq bx,ax
 	001723e4 mov ax,bx
 	001723f0 pop bx
 	001723f8 lor bx,ax
 	00172404 mov ax,bx
		00172410: FALL_THROUGH

	[00172410]
		001722c0: CONDITIONAL_JUMP
		0017235c: FALL_THROUGH
 	00172410 jnz 0x001724cc
		001724cc: CONDITIONAL_JUMP
		00172418: FALL_THROUGH

	[00172418]
		00172410: FALL_THROUGH
 	00172418 push ax
 	00172420 mov mar,0x3cef20
 	0017242c mov ax,mar
 	00172438 push op
 	00172440 mov op,ax
 	00172448 setfuncargs 0x0
 	00172450 mov ax,0x89ef20
 	0017245c farcall ax
 	00172464 pop op
 	0017246c push ax
 	00172474 mov mar,0x8c6f20
 	00172480 mov ax,mar
 	0017248c pop bx
 	00172494 cmpeq bx,ax
 	001724a0 mov ax,bx
 	001724ac pop bx
 	001724b4 lor bx,ax
 	001724c0 mov ax,bx
		001724cc: FALL_THROUGH

	[001724cc]
		00172410: CONDITIONAL_JUMP
		00172418: FALL_THROUGH
 	001724cc jnz 0x00172588
		00172588: CONDITIONAL_JUMP
		001724d4: FALL_THROUGH

	[001724d4]
		001724cc: FALL_THROUGH
 	001724d4 push ax
 	001724dc mov mar,0x3cef20
 	001724e8 mov ax,mar
 	001724f4 push op
 	001724fc mov op,ax
 	00172504 setfuncargs 0x0
 	0017250c mov ax,0x89ef20
 	00172518 farcall ax
 	00172520 pop op
 	00172528 push ax
 	00172530 mov mar,0x8def20
 	0017253c mov ax,mar
 	00172548 pop bx
 	00172550 cmpeq bx,ax
 	0017255c mov ax,bx
 	00172568 pop bx
 	00172570 lor bx,ax
 	0017257c mov ax,bx
		00172588: FALL_THROUGH

	[00172588]
		001724cc: CONDITIONAL_JUMP
		001724d4: FALL_THROUGH
 	00172588 jnz 0x00172644
		00172644: CONDITIONAL_JUMP
		00172590: FALL_THROUGH

	[00172590]
		00172588: FALL_THROUGH
 	00172590 push ax
 	00172598 mov mar,0x3cef20
 	001725a4 mov ax,mar
 	001725b0 push op
 	001725b8 mov op,ax
 	001725c0 setfuncargs 0x0
 	001725c8 mov ax,0x89ef20
 	001725d4 farcall ax
 	001725dc pop op
 	001725e4 push ax
 	001725ec mov mar,0x8aef20
 	001725f8 mov ax,mar
 	00172604 pop bx
 	0017260c cmpeq bx,ax
 	00172618 mov ax,bx
 	00172624 pop bx
 	0017262c lor bx,ax
 	00172638 mov ax,bx
		00172644: FALL_THROUGH

	[00172644]
		00172588: CONDITIONAL_JUMP
		00172590: FALL_THROUGH
 	00172644 jnz 0x00172700
		00172700: CONDITIONAL_JUMP
		0017264c: FALL_THROUGH

	[0017264c]
		00172644: FALL_THROUGH
 	0017264c push ax
 	00172654 mov mar,0x3cef20
 	00172660 mov ax,mar
 	0017266c push op
 	00172674 mov op,ax
 	0017267c setfuncargs 0x0
 	00172684 mov ax,0x89ef20
 	00172690 farcall ax
 	00172698 pop op
 	001726a0 push ax
 	001726a8 mov mar,0x8e6f20
 	001726b4 mov ax,mar
 	001726c0 pop bx
 	001726c8 cmpeq bx,ax
 	001726d4 mov ax,bx
 	001726e0 pop bx
 	001726e8 lor bx,ax
 	001726f4 mov ax,bx
		00172700: FALL_THROUGH

	[00172700]
		00172644: CONDITIONAL_JUMP
		0017264c: FALL_THROUGH
 	00172700 jz 0x00173188
		00173188: CONDITIONAL_JUMP
		00172708: FALL_THROUGH

	[00172708]
		00172700: FALL_THROUGH
 	00172708 sourceline 0x1679
 	00172710 setfuncargs 0x0
 	00172718 mov ax,0x6def20
 	00172724 farcall ax
 	0017272c lnot ax
 	00172734 jz 0x00172790
		00172790: CONDITIONAL_JUMP
		0017273c: FALL_THROUGH

	[0017273c]
		00172708: FALL_THROUGH
 	0017273c mov ax,0x81
 	00172748 farpush ax
 	00172750 mov ax,0x79
 	0017275c farpush ax
 	00172764 setfuncargs 0x2
 	0017276c mov ax,0x6e6f20
 	00172778 farcall ax
 	00172780 farsubsp 0x2
 	00172788 jmp 0x00173178
		00173178: UNCONDITIONAL_JUMP

	[00172790]
		00172708: CONDITIONAL_JUMP
 	00172790 sourceline 0x167c
 	00172798 mov ax,0x3
 	001727a4 mov bx,ax
 	001727b0 mov mar,0x3cef20
 	001727bc mov ax,mar
 	001727c8 push op
 	001727d0 mov op,ax
 	001727d8 farpush bx
 	001727e0 setfuncargs 0x1
 	001727e8 mov ax,0x69ef20
 	001727f4 farcall ax
 	001727fc farsubsp 0x1
 	00172804 pop op
 	0017280c sourceline 0x167d
 	00172814 mov ax,0x0
 	00172820 mov bx,ax
 	0017282c mov mar,0x3cef20
 	00172838 mov ax,mar
 	00172844 push op
 	0017284c mov op,ax
 	00172854 farpush bx
 	0017285c setfuncargs 0x1
 	00172864 mov ax,0x436f20
 	00172870 farcall ax
 	00172878 farsubsp 0x1
 	00172880 pop op
 	00172888 sourceline 0x167e
 	00172890 push op
 	00172898 mov ax,0x397
 	001728a4 farpush ax
 	001728ac mov ax,0x5
 	001728b8 farpush ax
 	001728c0 mov mar,0x3cef20
 	001728cc mov ax,mar
 	001728d8 mov op,ax
 	001728e0 setfuncargs 0x2
 	001728e8 mov ax,0x6eef20
 	001728f4 farcall ax
 	001728fc farsubsp 0x2
 	00172904 pop op
 	0017290c sourceline 0x167f
 	00172914 push op
 	0017291c mov ax,0xf
 	00172928 farpush ax
 	00172930 mov mar,0x3cef20
 	0017293c mov ax,mar
 	00172948 mov op,ax
 	00172950 setfuncargs 0x1
 	00172958 mov ax,0x51ef20
 	00172964 farcall ax
 	0017296c farsubsp 0x1
 	00172974 pop op
 	0017297c sourceline 0x1680
 	00172984 mov ax,0x7b
 	00172990 mov bx,ax
 	0017299c mov mar,0x3cef20
 	001729a8 mov ax,mar
 	001729b4 push op
 	001729bc mov op,ax
 	001729c4 farpush bx
 	001729cc setfuncargs 0x1
 	001729d4 mov ax,0x526f20
 	001729e0 farcall ax
 	001729e8 farsubsp 0x1
 	001729f0 pop op
 	001729f8 sourceline 0x1681
 	00172a00 mov ax,0x7f
 	00172a0c mov bx,ax
 	00172a18 mov mar,0x3cef20
 	00172a24 mov ax,mar
 	00172a30 push op
 	00172a38 mov op,ax
 	00172a40 farpush bx
 	00172a48 setfuncargs 0x1
 	00172a50 mov ax,0x70ef20
 	00172a5c farcall ax
 	00172a64 farsubsp 0x1
 	00172a6c pop op
 	00172a74 sourceline 0x1682
 	00172a7c push op
 	00172a84 mov ax,0x426
 	00172a90 farpush ax
 	00172a98 mov ax,0x397
 	00172aa4 farpush ax
 	00172aac mov ax,0x0
 	00172ab8 farpush ax
 	00172ac0 mov ax,0x3
 	00172acc farpush ax
 	00172ad4 mov ax,0x0
 	00172ae0 farpush ax
 	00172ae8 mov mar,0x3cef20
 	00172af4 mov ax,mar
 	00172b00 mov op,ax
 	00172b08 setfuncargs 0x5
 	00172b10 mov ax,0x536f20
 	00172b1c farcall ax
 	00172b24 farsubsp 0x5
 	00172b2c pop op
 	00172b34 sourceline 0x1684
 	00172b3c mov ax,0x3
 	00172b48 farpush ax
 	00172b50 setfuncargs 0x1
 	00172b58 mov ax,0x4a6f20
 	00172b64 farcall ax
 	00172b6c farsubsp 0x1
 	00172b74 mov mar,sp
 	00172b80 memwrite4 ax
 	00172b88 add sp,0x4
 	00172b94 sourceline 0x1685
 	00172b9c stackptr 0x4
 	00172ba4 memread4 ax
 	00172bac push ax
 	00172bb4 mov ax,0x0
 	00172bc0 pop bx
 	00172bc8 cmpeq bx,ax
 	00172bd4 mov ax,bx
 	00172be0 jz 0x00172c58
		00172c58: CONDITIONAL_JUMP
		00172be8: FALL_THROUGH

	[00172be8]
		00172790: FALL_THROUGH
 	00172be8 push op
 	00172bf0 mov ax,0x2c8717
 	00172bfc farpush ax
 	00172c04 mov mar,0x3cef20
 	00172c10 mov ax,mar
 	00172c1c mov op,ax
 	00172c24 setfuncargs 0x1
 	00172c2c mov ax,0x6f6f20
 	00172c38 farcall ax
 	00172c40 farsubsp 0x1
 	00172c48 pop op
 	00172c50 jmp 0x00172e50
		00172e50: UNCONDITIONAL_JUMP

	[00172c58]
		00172790: CONDITIONAL_JUMP
 	00172c58 sourceline 0x1686
 	00172c60 stackptr 0x4
 	00172c68 memread4 ax
 	00172c70 push ax
 	00172c78 mov ax,0x1
 	00172c84 pop bx
 	00172c8c cmpeq bx,ax
 	00172c98 mov ax,bx
 	00172ca4 jz 0x00172d1c
		00172d1c: CONDITIONAL_JUMP
		00172cac: FALL_THROUGH

	[00172cac]
		00172c58: FALL_THROUGH
 	00172cac push op
 	00172cb4 mov ax,0x2c8740
 	00172cc0 farpush ax
 	00172cc8 mov mar,0x3cef20
 	00172cd4 mov ax,mar
 	00172ce0 mov op,ax
 	00172ce8 setfuncargs 0x1
 	00172cf0 mov ax,0x6f6f20
 	00172cfc farcall ax
 	00172d04 farsubsp 0x1
 	00172d0c pop op
 	00172d14 jmp 0x00172e50
		00172e50: UNCONDITIONAL_JUMP

	[00172d1c]
		00172c58: CONDITIONAL_JUMP
 	00172d1c sourceline 0x1687
 	00172d24 stackptr 0x4
 	00172d2c memread4 ax
 	00172d34 push ax
 	00172d3c mov ax,0x2
 	00172d48 pop bx
 	00172d50 cmpeq bx,ax
 	00172d5c mov ax,bx
 	00172d68 jz 0x00172de0
		00172de0: CONDITIONAL_JUMP
		00172d70: FALL_THROUGH

	[00172d70]
		00172d1c: FALL_THROUGH
 	00172d70 push op
 	00172d78 mov ax,0x2c8769
 	00172d84 farpush ax
 	00172d8c mov mar,0x3cef20
 	00172d98 mov ax,mar
 	00172da4 mov op,ax
 	00172dac setfuncargs 0x1
 	00172db4 mov ax,0x6f6f20
 	00172dc0 farcall ax
 	00172dc8 farsubsp 0x1
 	00172dd0 pop op
 	00172dd8 jmp 0x00172e50
		00172e50: UNCONDITIONAL_JUMP

	[00172de0]
		00172d1c: CONDITIONAL_JUMP
 	00172de0 sourceline 0x1688
 	00172de8 push op
 	00172df0 mov ax,0x2c8792
 	00172dfc farpush ax
 	00172e04 mov mar,0x3cef20
 	00172e10 mov ax,mar
 	00172e1c mov op,ax
 	00172e24 setfuncargs 0x1
 	00172e2c mov ax,0x6f6f20
 	00172e38 farcall ax
 	00172e40 farsubsp 0x1
 	00172e48 pop op
		00172e50: FALL_THROUGH

	[00172e50]
		00172be8: UNCONDITIONAL_JUMP
		00172cac: UNCONDITIONAL_JUMP
		00172d70: UNCONDITIONAL_JUMP
		00172de0: FALL_THROUGH
 	00172e50 sourceline 0x168a
 	00172e58 push op
 	00172e60 mov ax,0x2bf0d0
 	00172e6c farpush ax
 	00172e74 mov mar,0xb6ef20
 	00172e80 mov ax,mar
 	00172e8c mov op,ax
 	00172e94 setfuncargs 0x1
 	00172e9c mov ax,0x6f6f20
 	00172ea8 farcall ax
 	00172eb0 farsubsp 0x1
 	00172eb8 pop op
 	00172ec0 sourceline 0x168b
 	00172ec8 push op
 	00172ed0 mov ax,0x427
 	00172edc farpush ax
 	00172ee4 mov ax,0x397
 	00172ef0 farpush ax
 	00172ef8 mov ax,0x0
 	00172f04 farpush ax
 	00172f0c mov ax,0x3
 	00172f18 farpush ax
 	00172f20 mov ax,0x0
 	00172f2c farpush ax
 	00172f34 mov mar,0x3cef20
 	00172f40 mov ax,mar
 	00172f4c mov op,ax
 	00172f54 setfuncargs 0x5
 	00172f5c mov ax,0x536f20
 	00172f68 farcall ax
 	00172f70 farsubsp 0x5
 	00172f78 pop op
 	00172f80 sourceline 0x168c
 	00172f88 push op
 	00172f90 mov ax,0x2
 	00172f9c farpush ax
 	00172fa4 mov mar,0x3cef20
 	00172fb0 mov ax,mar
 	00172fbc mov op,ax
 	00172fc4 setfuncargs 0x1
 	00172fcc mov ax,0x51ef20
 	00172fd8 farcall ax
 	00172fe0 farsubsp 0x1
 	00172fe8 pop op
 	00172ff0 sourceline 0x168d
 	00172ff8 mov ax,0x5
 	00173004 mov bx,ax
 	00173010 mov mar,0x3cef20
 	0017301c mov ax,mar
 	00173028 push op
 	00173030 mov op,ax
 	00173038 farpush bx
 	00173040 setfuncargs 0x1
 	00173048 mov ax,0x766f20
 	00173054 farcall ax
 	0017305c farsubsp 0x1
 	00173064 pop op
 	0017306c sourceline 0x168e
 	00173074 mov ax,0x81
 	00173080 mov bx,ax
 	0017308c mov mar,0x3cef20
 	00173098 mov ax,mar
 	001730a4 push op
 	001730ac mov op,ax
 	001730b4 farpush bx
 	001730bc setfuncargs 0x1
 	001730c4 mov ax,0x526f20
 	001730d0 farcall ax
 	001730d8 farsubsp 0x1
 	001730e0 pop op
 	001730e8 sourceline 0x168f
 	001730f0 mov ax,0x79
 	001730fc mov bx,ax
 	00173108 mov mar,0x3cef20
 	00173114 mov ax,mar
 	00173120 push op
 	00173128 mov op,ax
 	00173130 farpush bx
 	00173138 setfuncargs 0x1
 	00173140 mov ax,0x70ef20
 	0017314c farcall ax
 	00173154 farsubsp 0x1
 	0017315c pop op
 	00173164 sourceline 0x1690
 	0017316c sub sp,0x4
		00173178: FALL_THROUGH

	[00173178]
		0017273c: UNCONDITIONAL_JUMP
		00172e50: FALL_THROUGH
 	00173178 sourceline 0x1691
 	00173180 jmp 0x00173f48
		00173f48: UNCONDITIONAL_JUMP

	[00173188]
		00172700: CONDITIONAL_JUMP
 	00173188 sourceline 0x1693
 	00173190 mov mar,0x3cef20
 	0017319c mov ax,mar
 	001731a8 push op
 	001731b0 mov op,ax
 	001731b8 setfuncargs 0x0
 	001731c0 mov ax,0x89ef20
 	001731cc farcall ax
 	001731d4 pop op
 	001731dc push ax
 	001731e4 mov mar,0x8d6f20
 	001731f0 mov ax,mar
 	001731fc pop bx
 	00173204 cmpeq bx,ax
 	00173210 mov ax,bx
 	0017321c jz 0x00173bb0
		00173bb0: CONDITIONAL_JUMP
		00173224: FALL_THROUGH

	[00173224]
		00173188: FALL_THROUGH
 	00173224 sourceline 0x1695
 	0017322c mov mar,0xb5ef20
 	00173238 memread4 ax
 	00173240 jz 0x00173380
		00173380: CONDITIONAL_JUMP
		00173248: FALL_THROUGH

	[00173248]
		00173224: FALL_THROUGH
 	00173248 sourceline 0x1697
 	00173250 mov ax,0x1
 	0017325c mov bx,ax
 	00173268 mov mar,0x3cef20
 	00173274 mov ax,mar
 	00173280 push op
 	00173288 mov op,ax
 	00173290 farpush bx
 	00173298 setfuncargs 0x1
 	001732a0 mov ax,0x69ef20
 	001732ac farcall ax
 	001732b4 farsubsp 0x1
 	001732bc pop op
 	001732c4 sourceline 0x1699
 	001732cc push op
 	001732d4 mov ax,0x2bf0ed
 	001732e0 farpush ax
 	001732e8 mov ax,0x138
 	001732f4 farpush ax
 	001732fc mov ax,0x92
 	00173308 farpush ax
 	00173310 mov ax,0x0
 	0017331c farpush ax
 	00173324 mov mar,0x3cef20
 	00173330 mov ax,mar
 	0017333c mov op,ax
 	00173344 setfuncargs 0x4
 	0017334c mov ax,0x6aef20
 	00173358 farcall ax
 	00173360 farsubsp 0x4
 	00173368 pop op
 	00173370 sourceline 0x169a
 	00173378 jmp 0x00173ba0
		00173ba0: UNCONDITIONAL_JUMP

	[00173380]
		00173224: CONDITIONAL_JUMP
 	00173380 sourceline 0x169d
 	00173388 setfuncargs 0x0
 	00173390 mov ax,0x6def20
 	0017339c farcall ax
 	001733a4 lnot ax
 	001733ac jz 0x00173408
		00173408: CONDITIONAL_JUMP
		001733b4: FALL_THROUGH

	[001733b4]
		00173380: FALL_THROUGH
 	001733b4 mov ax,0x81
 	001733c0 farpush ax
 	001733c8 mov ax,0x79
 	001733d4 farpush ax
 	001733dc setfuncargs 0x2
 	001733e4 mov ax,0x6e6f20
 	001733f0 farcall ax
 	001733f8 farsubsp 0x2
 	00173400 jmp 0x00173ba0
		00173ba0: UNCONDITIONAL_JUMP

	[00173408]
		00173380: CONDITIONAL_JUMP
 	00173408 sourceline 0x16a0
 	00173410 mov ax,0x3
 	0017341c mov bx,ax
 	00173428 mov mar,0x3cef20
 	00173434 mov ax,mar
 	00173440 push op
 	00173448 mov op,ax
 	00173450 farpush bx
 	00173458 setfuncargs 0x1
 	00173460 mov ax,0x69ef20
 	0017346c farcall ax
 	00173474 farsubsp 0x1
 	0017347c pop op
 	00173484 sourceline 0x16a1
 	0017348c mov ax,0x0
 	00173498 mov bx,ax
 	001734a4 mov mar,0x3cef20
 	001734b0 mov ax,mar
 	001734bc push op
 	001734c4 mov op,ax
 	001734cc farpush bx
 	001734d4 setfuncargs 0x1
 	001734dc mov ax,0x436f20
 	001734e8 farcall ax
 	001734f0 farsubsp 0x1
 	001734f8 pop op
 	00173500 sourceline 0x16a2
 	00173508 push op
 	00173510 mov ax,0x397
 	0017351c farpush ax
 	00173524 mov ax,0x5
 	00173530 farpush ax
 	00173538 mov mar,0x3cef20
 	00173544 mov ax,mar
 	00173550 mov op,ax
 	00173558 setfuncargs 0x2
 	00173560 mov ax,0x6eef20
 	0017356c farcall ax
 	00173574 farsubsp 0x2
 	0017357c pop op
 	00173584 sourceline 0x16a3
 	0017358c push op
 	00173594 mov ax,0xf
 	001735a0 farpush ax
 	001735a8 mov mar,0x3cef20
 	001735b4 mov ax,mar
 	001735c0 mov op,ax
 	001735c8 setfuncargs 0x1
 	001735d0 mov ax,0x51ef20
 	001735dc farcall ax
 	001735e4 farsubsp 0x1
 	001735ec pop op
 	001735f4 sourceline 0x16a4
 	001735fc mov ax,0x7b
 	00173608 mov bx,ax
 	00173614 mov mar,0x3cef20
 	00173620 mov ax,mar
 	0017362c push op
 	00173634 mov op,ax
 	0017363c farpush bx
 	00173644 setfuncargs 0x1
 	0017364c mov ax,0x526f20
 	00173658 farcall ax
 	00173660 farsubsp 0x1
 	00173668 pop op
 	00173670 sourceline 0x16a5
 	00173678 mov ax,0x7f
 	00173684 mov bx,ax
 	00173690 mov mar,0x3cef20
 	0017369c mov ax,mar
 	001736a8 push op
 	001736b0 mov op,ax
 	001736b8 farpush bx
 	001736c0 setfuncargs 0x1
 	001736c8 mov ax,0x70ef20
 	001736d4 farcall ax
 	001736dc farsubsp 0x1
 	001736e4 pop op
 	001736ec sourceline 0x16a6
 	001736f4 push op
 	001736fc mov ax,0x426
 	00173708 farpush ax
 	00173710 mov ax,0x397
 	0017371c farpush ax
 	00173724 mov ax,0x0
 	00173730 farpush ax
 	00173738 mov ax,0x3
 	00173744 farpush ax
 	0017374c mov ax,0x0
 	00173758 farpush ax
 	00173760 mov mar,0x3cef20
 	0017376c mov ax,mar
 	00173778 mov op,ax
 	00173780 setfuncargs 0x5
 	00173788 mov ax,0x536f20
 	00173794 farcall ax
 	0017379c farsubsp 0x5
 	001737a4 pop op
 	001737ac sourceline 0x16a7
 	001737b4 push op
 	001737bc mov ax,0x2bf13b
 	001737c8 farpush ax
 	001737d0 mov mar,0x3cef20
 	001737dc mov ax,mar
 	001737e8 mov op,ax
 	001737f0 setfuncargs 0x1
 	001737f8 mov ax,0x6f6f20
 	00173804 farcall ax
 	0017380c farsubsp 0x1
 	00173814 pop op
 	0017381c sourceline 0x16a8
 	00173824 push op
 	0017382c mov ax,0x2bf186
 	00173838 farpush ax
 	00173840 mov mar,0xb6ef20
 	0017384c mov ax,mar
 	00173858 mov op,ax
 	00173860 setfuncargs 0x1
 	00173868 mov ax,0x6f6f20
 	00173874 farcall ax
 	0017387c farsubsp 0x1
 	00173884 pop op
 	0017388c sourceline 0x16a9
 	00173894 push op
 	0017389c mov ax,0x2bf1bf
 	001738a8 farpush ax
 	001738b0 mov mar,0x3cef20
 	001738bc mov ax,mar
 	001738c8 mov op,ax
 	001738d0 setfuncargs 0x1
 	001738d8 mov ax,0x6f6f20
 	001738e4 farcall ax
 	001738ec farsubsp 0x1
 	001738f4 pop op
 	001738fc sourceline 0x16ab
 	00173904 push op
 	0017390c mov ax,0x427
 	00173918 farpush ax
 	00173920 mov ax,0x397
 	0017392c farpush ax
 	00173934 mov ax,0x0
 	00173940 farpush ax
 	00173948 mov ax,0x3
 	00173954 farpush ax
 	0017395c mov ax,0x0
 	00173968 farpush ax
 	00173970 mov mar,0x3cef20
 	0017397c mov ax,mar
 	00173988 mov op,ax
 	00173990 setfuncargs 0x5
 	00173998 mov ax,0x536f20
 	001739a4 farcall ax
 	001739ac farsubsp 0x5
 	001739b4 pop op
 	001739bc sourceline 0x16ac
 	001739c4 push op
 	001739cc mov ax,0x2
 	001739d8 farpush ax
 	001739e0 mov mar,0x3cef20
 	001739ec mov ax,mar
 	001739f8 mov op,ax
 	00173a00 setfuncargs 0x1
 	00173a08 mov ax,0x51ef20
 	00173a14 farcall ax
 	00173a1c farsubsp 0x1
 	00173a24 pop op
 	00173a2c sourceline 0x16ad
 	00173a34 mov ax,0x5
 	00173a40 mov bx,ax
 	00173a4c mov mar,0x3cef20
 	00173a58 mov ax,mar
 	00173a64 push op
 	00173a6c mov op,ax
 	00173a74 farpush bx
 	00173a7c setfuncargs 0x1
 	00173a84 mov ax,0x766f20
 	00173a90 farcall ax
 	00173a98 farsubsp 0x1
 	00173aa0 pop op
 	00173aa8 sourceline 0x16ae
 	00173ab0 mov ax,0x81
 	00173abc mov bx,ax
 	00173ac8 mov mar,0x3cef20
 	00173ad4 mov ax,mar
 	00173ae0 push op
 	00173ae8 mov op,ax
 	00173af0 farpush bx
 	00173af8 setfuncargs 0x1
 	00173b00 mov ax,0x526f20
 	00173b0c farcall ax
 	00173b14 farsubsp 0x1
 	00173b1c pop op
 	00173b24 sourceline 0x16af
 	00173b2c mov ax,0x79
 	00173b38 mov bx,ax
 	00173b44 mov mar,0x3cef20
 	00173b50 mov ax,mar
 	00173b5c push op
 	00173b64 mov op,ax
 	00173b6c farpush bx
 	00173b74 setfuncargs 0x1
 	00173b7c mov ax,0x70ef20
 	00173b88 farcall ax
 	00173b90 farsubsp 0x1
 	00173b98 pop op
		00173ba0: FALL_THROUGH

	[00173ba0]
		00173248: UNCONDITIONAL_JUMP
		001733b4: UNCONDITIONAL_JUMP
		00173408: FALL_THROUGH
 	00173ba0 sourceline 0x16b2
 	00173ba8 jmp 0x00173f48
		00173f48: UNCONDITIONAL_JUMP

	[00173bb0]
		00173188: CONDITIONAL_JUMP
 	00173bb0 sourceline 0x16b4
 	00173bb8 mov mar,0x3cef20
 	00173bc4 mov ax,mar
 	00173bd0 push op
 	00173bd8 mov op,ax
 	00173be0 setfuncargs 0x0
 	00173be8 mov ax,0x89ef20
 	00173bf4 farcall ax
 	00173bfc pop op
 	00173c04 push ax
 	00173c0c mov mar,0x8bef20
 	00173c18 mov ax,mar
 	00173c24 pop bx
 	00173c2c cmpeq bx,ax
 	00173c38 mov ax,bx
 	00173c44 jz 0x00173d84
		00173d84: CONDITIONAL_JUMP
		00173c4c: FALL_THROUGH

	[00173c4c]
		00173bb0: FALL_THROUGH
 	00173c4c sourceline 0x16b6
 	00173c54 mov ax,0x1
 	00173c60 mov bx,ax
 	00173c6c mov mar,0x3cef20
 	00173c78 mov ax,mar
 	00173c84 push op
 	00173c8c mov op,ax
 	00173c94 farpush bx
 	00173c9c setfuncargs 0x1
 	00173ca4 mov ax,0x69ef20
 	00173cb0 farcall ax
 	00173cb8 farsubsp 0x1
 	00173cc0 pop op
 	00173cc8 sourceline 0x16b8
 	00173cd0 push op
 	00173cd8 mov ax,0x2bf1f6
 	00173ce4 farpush ax
 	00173cec mov ax,0x138
 	00173cf8 farpush ax
 	00173d00 mov ax,0x92
 	00173d0c farpush ax
 	00173d14 mov ax,0x0
 	00173d20 farpush ax
 	00173d28 mov mar,0x3cef20
 	00173d34 mov ax,mar
 	00173d40 mov op,ax
 	00173d48 setfuncargs 0x4
 	00173d50 mov ax,0x6aef20
 	00173d5c farcall ax
 	00173d64 farsubsp 0x4
 	00173d6c pop op
 	00173d74 sourceline 0x16b9
 	00173d7c jmp 0x00173f48
		00173f48: UNCONDITIONAL_JUMP

	[00173d84]
		00173bb0: CONDITIONAL_JUMP
 	00173d84 sourceline 0x16bb
 	00173d8c mov mar,0x3cef20
 	00173d98 mov ax,mar
 	00173da4 push op
 	00173dac mov op,ax
 	00173db4 setfuncargs 0x0
 	00173dbc mov ax,0x89ef20
 	00173dc8 farcall ax
 	00173dd0 pop op
 	00173dd8 push ax
 	00173de0 mov mar,0x7def20
 	00173dec mov ax,mar
 	00173df8 pop bx
 	00173e00 cmpeq bx,ax
 	00173e0c mov ax,bx
 	00173e18 jz 0x00173f48
		00173f48: CONDITIONAL_JUMP
		00173e20: FALL_THROUGH

	[00173e20]
		00173d84: FALL_THROUGH
 	00173e20 sourceline 0x16bd
 	00173e28 mov ax,0x1
 	00173e34 mov bx,ax
 	00173e40 mov mar,0x3cef20
 	00173e4c mov ax,mar
 	00173e58 push op
 	00173e60 mov op,ax
 	00173e68 farpush bx
 	00173e70 setfuncargs 0x1
 	00173e78 mov ax,0x69ef20
 	00173e84 farcall ax
 	00173e8c farsubsp 0x1
 	00173e94 pop op
 	00173e9c sourceline 0x16bf
 	00173ea4 push op
 	00173eac mov ax,0x2c2e3b
 	00173eb8 farpush ax
 	00173ec0 mov ax,0x138
 	00173ecc farpush ax
 	00173ed4 mov ax,0x92
 	00173ee0 farpush ax
 	00173ee8 mov ax,0x0
 	00173ef4 farpush ax
 	00173efc mov mar,0x3cef20
 	00173f08 mov ax,mar
 	00173f14 mov op,ax
 	00173f1c setfuncargs 0x4
 	00173f24 mov ax,0x6aef20
 	00173f30 farcall ax
 	00173f38 farsubsp 0x4
 	00173f40 pop op
		00173f48: FALL_THROUGH

	[00173f48]
		001722b0: UNCONDITIONAL_JUMP
		00173178: UNCONDITIONAL_JUMP
		00173ba0: UNCONDITIONAL_JUMP
		00173c4c: UNCONDITIONAL_JUMP
		00173d84: CONDITIONAL_JUMP
		00173e20: FALL_THROUGH
 	00173f48 sourceline 0x16c1
 	00173f50 mov ax,0x0
 	00173f5c ret

cJudy_UseInv$0:
	[00173f60]
 	00173f60 sourceline 0x16c6
 	00173f68 thisaddr
 	00173f70 sourceline 0x16c7
*	00173f78 mov mar,0x3cef20
 	00173f84 mov ax,mar
 	00173f90 push op
 	00173f98 mov op,ax
 	00173fa0 setfuncargs 0x0
 	00173fa8 mov ax,0x89ef20
 	00173fb4 farcall ax
 	00173fbc pop op
 	00173fc4 push ax
 	00173fcc mov mar,0x8aef20
 	00173fd8 mov ax,mar
 	00173fe4 pop bx
 	00173fec cmpeq bx,ax
 	00173ff8 mov ax,bx
 	00174004 jz 0x00176038
		00176038: CONDITIONAL_JUMP
		0017400c: FALL_THROUGH

	[0017400c]
		00173f60: FALL_THROUGH
 	0017400c sourceline 0x16c9
 	00174014 mov mar,0x806f20
 	00174020 memread4 ax
 	00174028 lnot ax
 	00174030 jz 0x00175e68
		00175e68: CONDITIONAL_JUMP
		00174038: FALL_THROUGH

	[00174038]
		0017400c: FALL_THROUGH
 	00174038 sourceline 0x16cb
 	00174040 setfuncargs 0x0
 	00174048 mov ax,0x6def20
 	00174054 farcall ax
 	0017405c lnot ax
 	00174064 jz 0x001740c0
		001740c0: CONDITIONAL_JUMP
		0017406c: FALL_THROUGH

	[0017406c]
		00174038: FALL_THROUGH
 	0017406c mov ax,0x82
 	00174078 farpush ax
 	00174080 mov ax,0x86
 	0017408c farpush ax
 	00174094 setfuncargs 0x2
 	0017409c mov ax,0x6e6f20
 	001740a8 farcall ax
 	001740b0 farsubsp 0x2
 	001740b8 jmp 0x00175e58
		00175e58: UNCONDITIONAL_JUMP

	[001740c0]
		00174038: CONDITIONAL_JUMP
 	001740c0 sourceline 0x16ce
 	001740c8 mov ax,0x0
 	001740d4 push ax
 	001740dc mov ax,0x1
 	001740e8 assertlte ax,0x32
 	001740f4 mul ax,0x8
 	00174100 mov cx,ax
 	0017410c pop ax
 	00174114 mov bx,ax
 	00174120 mov mar,0x6c6f20
 	0017412c add mar,cx
 	00174138 mov ax,mar
 	00174144 push op
 	0017414c mov op,ax
 	00174154 farpush bx
 	0017415c setfuncargs 0x1
 	00174164 mov ax,0xa66f20
 	00174170 farcall ax
 	00174178 farsubsp 0x1
 	00174180 pop op
 	00174188 sourceline 0x16cf
 	00174190 mov ax,0x3
 	0017419c mov bx,ax
 	001741a8 mov mar,0x3cef20
 	001741b4 mov ax,mar
 	001741c0 push op
 	001741c8 mov op,ax
 	001741d0 farpush bx
 	001741d8 setfuncargs 0x1
 	001741e0 mov ax,0x69ef20
 	001741ec farcall ax
 	001741f4 farsubsp 0x1
 	001741fc pop op
 	00174204 sourceline 0x16d0
 	0017420c push op
 	00174214 mov ax,0x397
 	00174220 farpush ax
 	00174228 mov ax,0x1
 	00174234 farpush ax
 	0017423c mov mar,0x3cef20
 	00174248 mov ax,mar
 	00174254 mov op,ax
 	0017425c setfuncargs 0x2
 	00174264 mov ax,0x6eef20
 	00174270 farcall ax
 	00174278 farsubsp 0x2
 	00174280 pop op
 	00174288 sourceline 0x16d1
 	00174290 mov ax,0x104654
 	0017429c call ax
 	001742a4 sourceline 0x16d2
 	001742ac mov ax,0x0
 	001742b8 mov bx,ax
 	001742c4 mov mar,0x3cef20
 	001742d0 mov ax,mar
 	001742dc push op
 	001742e4 mov op,ax
 	001742ec farpush bx
 	001742f4 setfuncargs 0x1
 	001742fc mov ax,0x436f20
 	00174308 farcall ax
 	00174310 farsubsp 0x1
 	00174318 pop op
 	00174320 sourceline 0x16d3
 	00174328 mov ax,0xf
 	00174334 farpush ax
 	0017433c setfuncargs 0x1
 	00174344 mov ax,0x426f20
 	00174350 farcall ax
 	00174358 farsubsp 0x1
 	00174360 sourceline 0x16d4
 	00174368 push op
 	00174370 mov ax,0x2bf2b8
 	0017437c farpush ax
 	00174384 mov mar,0x3cef20
 	00174390 mov ax,mar
 	0017439c mov op,ax
 	001743a4 setfuncargs 0x1
 	001743ac mov ax,0x6f6f20
 	001743b8 farcall ax
 	001743c0 farsubsp 0x1
 	001743c8 pop op
 	001743d0 sourceline 0x16d5
 	001743d8 push op
 	001743e0 mov ax,0x2bf2dd
 	001743ec farpush ax
 	001743f4 mov mar,0x506f20
 	00174400 mov ax,mar
 	0017440c mov op,ax
 	00174414 setfuncargs 0x1
 	0017441c mov ax,0x6f6f20
 	00174428 farcall ax
 	00174430 farsubsp 0x1
 	00174438 pop op
 	00174440 sourceline 0x16d6
 	00174448 mov ax,0x270f
 	00174454 mov bx,ax
 	00174460 mov mar,0x506f20
 	0017446c mov ax,mar
 	00174478 push op
 	00174480 mov op,ax
 	00174488 farpush bx
 	00174490 setfuncargs 0x1
 	00174498 mov ax,0xcaef20
 	001744a4 farcall ax
 	001744ac farsubsp 0x1
 	001744b4 pop op
 	001744bc sourceline 0x16d7
 	001744c4 push op
 	001744cc mov ax,0x6
 	001744d8 farpush ax
 	001744e0 mov mar,0x3cef20
 	001744ec mov ax,mar
 	001744f8 mov op,ax
 	00174500 setfuncargs 0x1
 	00174508 mov ax,0x51ef20
 	00174514 farcall ax
 	0017451c farsubsp 0x1
 	00174524 pop op
 	0017452c sourceline 0x16d8
 	00174534 mov ax,0x7a
 	00174540 mov bx,ax
 	0017454c mov mar,0x3cef20
 	00174558 mov ax,mar
 	00174564 push op
 	0017456c mov op,ax
 	00174574 farpush bx
 	0017457c setfuncargs 0x1
 	00174584 mov ax,0x526f20
 	00174590 farcall ax
 	00174598 farsubsp 0x1
 	001745a0 pop op
 	001745a8 sourceline 0x16d9
 	001745b0 mov ax,0x7e
 	001745bc mov bx,ax
 	001745c8 mov mar,0x3cef20
 	001745d4 mov ax,mar
 	001745e0 push op
 	001745e8 mov op,ax
 	001745f0 farpush bx
 	001745f8 setfuncargs 0x1
 	00174600 mov ax,0x70ef20
 	0017460c farcall ax
 	00174614 farsubsp 0x1
 	0017461c pop op
 	00174624 sourceline 0x16da
 	0017462c push op
 	00174634 mov ax,0x6e
 	00174640 farpush ax
 	00174648 mov mar,0x506f20
 	00174654 mov ax,mar
 	00174660 mov op,ax
 	00174668 setfuncargs 0x1
 	00174670 mov ax,0x51ef20
 	0017467c farcall ax
 	00174684 farsubsp 0x1
 	0017468c pop op
 	00174694 sourceline 0x16db
 	0017469c mov ax,0x5f
 	001746a8 mov bx,ax
 	001746b4 mov mar,0x506f20
 	001746c0 mov ax,mar
 	001746cc push op
 	001746d4 mov op,ax
 	001746dc farpush bx
 	001746e4 setfuncargs 0x1
 	001746ec mov ax,0x70ef20
 	001746f8 farcall ax
 	00174700 farsubsp 0x1
 	00174708 pop op
 	00174710 sourceline 0x16dc
 	00174718 push op
 	00174720 mov ax,0x426
 	0017472c farpush ax
 	00174734 mov ax,0x398
 	00174740 farpush ax
 	00174748 mov ax,0x0
 	00174754 farpush ax
 	0017475c mov ax,0x3
 	00174768 farpush ax
 	00174770 mov ax,0x0
 	0017477c farpush ax
 	00174784 mov mar,0x506f20
 	00174790 mov ax,mar
 	0017479c mov op,ax
 	001747a4 setfuncargs 0x5
 	001747ac mov ax,0x536f20
 	001747b8 farcall ax
 	001747c0 farsubsp 0x5
 	001747c8 pop op
 	001747d0 sourceline 0x16dd
 	001747d8 push op
 	001747e0 mov ax,0x426
 	001747ec farpush ax
 	001747f4 mov ax,0x397
 	00174800 farpush ax
 	00174808 mov ax,0x0
 	00174814 farpush ax
 	0017481c mov ax,0x3
 	00174828 farpush ax
 	00174830 mov ax,0x2
 	0017483c farpush ax
 	00174844 mov mar,0x3cef20
 	00174850 mov ax,mar
 	0017485c mov op,ax
 	00174864 setfuncargs 0x5
 	0017486c mov ax,0x536f20
 	00174878 farcall ax
 	00174880 farsubsp 0x5
 	00174888 pop op
 	00174890 sourceline 0x16de
 	00174898 push op
 	001748a0 mov ax,0x6c
 	001748ac farpush ax
 	001748b4 mov mar,0x506f20
 	001748c0 mov ax,mar
 	001748cc mov op,ax
 	001748d4 setfuncargs 0x1
 	001748dc mov ax,0x51ef20
 	001748e8 farcall ax
 	001748f0 farsubsp 0x1
 	001748f8 pop op
 	00174900 sourceline 0x16df
 	00174908 mov ax,0x7f
 	00174914 mov bx,ax
 	00174920 mov mar,0x506f20
 	0017492c mov ax,mar
 	00174938 push op
 	00174940 mov op,ax
 	00174948 farpush bx
 	00174950 setfuncargs 0x1
 	00174958 mov ax,0x526f20
 	00174964 farcall ax
 	0017496c farsubsp 0x1
 	00174974 pop op
 	0017497c sourceline 0x16e0
 	00174984 mov ax,0x60
 	00174990 mov bx,ax
 	0017499c mov mar,0x506f20
 	001749a8 mov ax,mar
 	001749b4 push op
 	001749bc mov op,ax
 	001749c4 farpush bx
 	001749cc setfuncargs 0x1
 	001749d4 mov ax,0x70ef20
 	001749e0 farcall ax
 	001749e8 farsubsp 0x1
 	001749f0 pop op
 	001749f8 sourceline 0x16e1
 	00174a00 push op
 	00174a08 mov ax,0x427
 	00174a14 farpush ax
 	00174a1c mov ax,0x398
 	00174a28 farpush ax
 	00174a30 mov ax,0x0
 	00174a3c farpush ax
 	00174a44 mov ax,0x3
 	00174a50 farpush ax
 	00174a58 mov ax,0x2
 	00174a64 farpush ax
 	00174a6c mov mar,0x3cef20
 	00174a78 mov ax,mar
 	00174a84 mov op,ax
 	00174a8c setfuncargs 0x5
 	00174a94 mov ax,0x536f20
 	00174aa0 farcall ax
 	00174aa8 farsubsp 0x5
 	00174ab0 pop op
 	00174ab8 sourceline 0x16e2
 	00174ac0 mov ax,0x1
 	00174acc mov mar,0xcbef20
 	00174ad8 memwrite4 ax
 	00174ae0 sourceline 0x16e3
 	00174ae8 push op
 	00174af0 mov ax,0x426
 	00174afc farpush ax
 	00174b04 mov ax,0x397
 	00174b10 farpush ax
 	00174b18 mov ax,0x0
 	00174b24 farpush ax
 	00174b2c mov ax,0x3
 	00174b38 farpush ax
 	00174b40 mov ax,0x0
 	00174b4c farpush ax
 	00174b54 mov mar,0x506f20
 	00174b60 mov ax,mar
 	00174b6c mov op,ax
 	00174b74 setfuncargs 0x5
 	00174b7c mov ax,0x536f20
 	00174b88 farcall ax
 	00174b90 farsubsp 0x5
 	00174b98 pop op
 	00174ba0 sourceline 0x16e4
 	00174ba8 push op
 	00174bb0 mov ax,0x2bf30c
 	00174bbc farpush ax
 	00174bc4 mov mar,0x506f20
 	00174bd0 mov ax,mar
 	00174bdc mov op,ax
 	00174be4 setfuncargs 0x1
 	00174bec mov ax,0x6f6f20
 	00174bf8 farcall ax
 	00174c00 farsubsp 0x1
 	00174c08 pop op
 	00174c10 sourceline 0x16e5
 	00174c18 mov ax,0x28
 	00174c24 farpush ax
 	00174c2c setfuncargs 0x1
 	00174c34 mov ax,0x426f20
 	00174c40 farcall ax
 	00174c48 farsubsp 0x1
 	00174c50 sourceline 0x16e6
 	00174c58 push op
 	00174c60 mov ax,0x2bf34d
 	00174c6c farpush ax
 	00174c74 mov mar,0x506f20
 	00174c80 mov ax,mar
 	00174c8c mov op,ax
 	00174c94 setfuncargs 0x1
 	00174c9c mov ax,0x6f6f20
 	00174ca8 farcall ax
 	00174cb0 farsubsp 0x1
 	00174cb8 pop op
 	00174cc0 sourceline 0x16e7
 	00174cc8 push op
 	00174cd0 mov ax,0x2bf3cf
 	00174cdc farpush ax
 	00174ce4 mov mar,0x3cef20
 	00174cf0 mov ax,mar
 	00174cfc mov op,ax
 	00174d04 setfuncargs 0x1
 	00174d0c mov ax,0x6f6f20
 	00174d18 farcall ax
 	00174d20 farsubsp 0x1
 	00174d28 pop op
 	00174d30 sourceline 0x16e8
 	00174d38 push op
 	00174d40 mov ax,0x2bf402
 	00174d4c farpush ax
 	00174d54 mov mar,0x506f20
 	00174d60 mov ax,mar
 	00174d6c mov op,ax
 	00174d74 setfuncargs 0x1
 	00174d7c mov ax,0x6f6f20
 	00174d88 farcall ax
 	00174d90 farsubsp 0x1
 	00174d98 pop op
 	00174da0 sourceline 0x16e9
 	00174da8 push op
 	00174db0 mov ax,0x2bf476
 	00174dbc farpush ax
 	00174dc4 mov mar,0x3cef20
 	00174dd0 mov ax,mar
 	00174ddc mov op,ax
 	00174de4 setfuncargs 0x1
 	00174dec mov ax,0x6f6f20
 	00174df8 farcall ax
 	00174e00 farsubsp 0x1
 	00174e08 pop op
 	00174e10 sourceline 0x16ea
 	00174e18 push op
 	00174e20 mov ax,0x2bf4a2
 	00174e2c farpush ax
 	00174e34 mov mar,0x506f20
 	00174e40 mov ax,mar
 	00174e4c mov op,ax
 	00174e54 setfuncargs 0x1
 	00174e5c mov ax,0x6f6f20
 	00174e68 farcall ax
 	00174e70 farsubsp 0x1
 	00174e78 pop op
 	00174e80 sourceline 0x16eb
 	00174e88 push op
 	00174e90 mov ax,0x426
 	00174e9c farpush ax
 	00174ea4 mov ax,0x397
 	00174eb0 farpush ax
 	00174eb8 mov ax,0x0
 	00174ec4 farpush ax
 	00174ecc mov ax,0x3
 	00174ed8 farpush ax
 	00174ee0 mov ax,0x1
 	00174eec farpush ax
 	00174ef4 mov mar,0x506f20
 	00174f00 mov ax,mar
 	00174f0c mov op,ax
 	00174f14 setfuncargs 0x5
 	00174f1c mov ax,0x536f20
 	00174f28 farcall ax
 	00174f30 farsubsp 0x5
 	00174f38 pop op
 	00174f40 sourceline 0x16ec
 	00174f48 mov ax,0x5
 	00174f54 farpush ax
 	00174f5c setfuncargs 0x1
 	00174f64 mov ax,0x426f20
 	00174f70 farcall ax
 	00174f78 farsubsp 0x1
 	00174f80 sourceline 0x16ed
 	00174f88 push op
 	00174f90 mov ax,0x6b
 	00174f9c farpush ax
 	00174fa4 mov mar,0x506f20
 	00174fb0 mov ax,mar
 	00174fbc mov op,ax
 	00174fc4 setfuncargs 0x1
 	00174fcc mov ax,0x51ef20
 	00174fd8 farcall ax
 	00174fe0 farsubsp 0x1
 	00174fe8 pop op
 	00174ff0 sourceline 0x16ee
 	00174ff8 mov ax,0x7e
 	00175004 mov bx,ax
 	00175010 mov mar,0x506f20
 	0017501c mov ax,mar
 	00175028 push op
 	00175030 mov op,ax
 	00175038 farpush bx
 	00175040 setfuncargs 0x1
 	00175048 mov ax,0x526f20
 	00175054 farcall ax
 	0017505c farsubsp 0x1
 	00175064 pop op
 	0017506c sourceline 0x16ef
 	00175074 mov ax,0x5b
 	00175080 mov bx,ax
 	0017508c mov mar,0x506f20
 	00175098 mov ax,mar
 	001750a4 push op
 	001750ac mov op,ax
 	001750b4 farpush bx
 	001750bc setfuncargs 0x1
 	001750c4 mov ax,0x70ef20
 	001750d0 farcall ax
 	001750d8 farsubsp 0x1
 	001750e0 pop op
 	001750e8 sourceline 0x16f0
 	001750f0 push op
 	001750f8 mov ax,0x426
 	00175104 farpush ax
 	0017510c mov ax,0x398
 	00175118 farpush ax
 	00175120 mov ax,0x0
 	0017512c farpush ax
 	00175134 mov ax,0x3
 	00175140 farpush ax
 	00175148 mov ax,0x0
 	00175154 farpush ax
 	0017515c mov mar,0x506f20
 	00175168 mov ax,mar
 	00175174 mov op,ax
 	0017517c setfuncargs 0x5
 	00175184 mov ax,0x536f20
 	00175190 farcall ax
 	00175198 farsubsp 0x5
 	001751a0 pop op
 	001751a8 sourceline 0x16f1
 	001751b0 push op
 	001751b8 mov ax,0x2bf4e9
 	001751c4 farpush ax
 	001751cc mov mar,0x3cef20
 	001751d8 mov ax,mar
 	001751e4 mov op,ax
 	001751ec setfuncargs 0x1
 	001751f4 mov ax,0x6f6f20
 	00175200 farcall ax
 	00175208 farsubsp 0x1
 	00175210 pop op
 	00175218 sourceline 0x16f2
 	00175220 push op
 	00175228 mov ax,0x2bf4f4
 	00175234 farpush ax
 	0017523c mov mar,0x506f20
 	00175248 mov ax,mar
 	00175254 mov op,ax
 	0017525c setfuncargs 0x1
 	00175264 mov ax,0x6f6f20
 	00175270 farcall ax
 	00175278 farsubsp 0x1
 	00175280 pop op
 	00175288 sourceline 0x16f3
 	00175290 push op
 	00175298 mov ax,0x2bf567
 	001752a4 farpush ax
 	001752ac mov mar,0x3cef20
 	001752b8 mov ax,mar
 	001752c4 mov op,ax
 	001752cc setfuncargs 0x1
 	001752d4 mov ax,0x6f6f20
 	001752e0 farcall ax
 	001752e8 farsubsp 0x1
 	001752f0 pop op
 	001752f8 sourceline 0x16f4
 	00175300 push op
 	00175308 mov ax,0x6e
 	00175314 farpush ax
 	0017531c mov mar,0x506f20
 	00175328 mov ax,mar
 	00175334 mov op,ax
 	0017533c setfuncargs 0x1
 	00175344 mov ax,0x51ef20
 	00175350 farcall ax
 	00175358 farsubsp 0x1
 	00175360 pop op
 	00175368 sourceline 0x16f5
 	00175370 mov ax,0x5f
 	0017537c mov bx,ax
 	00175388 mov mar,0x506f20
 	00175394 mov ax,mar
 	001753a0 push op
 	001753a8 mov op,ax
 	001753b0 farpush bx
 	001753b8 setfuncargs 0x1
 	001753c0 mov ax,0x70ef20
 	001753cc farcall ax
 	001753d4 farsubsp 0x1
 	001753dc pop op
 	001753e4 sourceline 0x16f6
 	001753ec push op
 	001753f4 mov ax,0x426
 	00175400 farpush ax
 	00175408 mov ax,0x398
 	00175414 farpush ax
 	0017541c mov ax,0x0
 	00175428 farpush ax
 	00175430 mov ax,0x3
 	0017543c farpush ax
 	00175444 mov ax,0x0
 	00175450 farpush ax
 	00175458 mov mar,0x506f20
 	00175464 mov ax,mar
 	00175470 mov op,ax
 	00175478 setfuncargs 0x5
 	00175480 mov ax,0x536f20
 	0017548c farcall ax
 	00175494 farsubsp 0x5
 	0017549c pop op
 	001754a4 sourceline 0x16f7
 	001754ac push op
 	001754b4 mov ax,0x6
 	001754c0 farpush ax
 	001754c8 mov mar,0x3cef20
 	001754d4 mov ax,mar
 	001754e0 mov op,ax
 	001754e8 setfuncargs 0x1
 	001754f0 mov ax,0x51ef20
 	001754fc farcall ax
 	00175504 farsubsp 0x1
 	0017550c pop op
 	00175514 sourceline 0x16f8
 	0017551c mov ax,0x7a
 	00175528 mov bx,ax
 	00175534 mov mar,0x3cef20
 	00175540 mov ax,mar
 	0017554c push op
 	00175554 mov op,ax
 	0017555c farpush bx
 	00175564 setfuncargs 0x1
 	0017556c mov ax,0x526f20
 	00175578 farcall ax
 	00175580 farsubsp 0x1
 	00175588 pop op
 	00175590 sourceline 0x16f9
 	00175598 mov ax,0x7e
 	001755a4 mov bx,ax
 	001755b0 mov mar,0x3cef20
 	001755bc mov ax,mar
 	001755c8 push op
 	001755d0 mov op,ax
 	001755d8 farpush bx
 	001755e0 setfuncargs 0x1
 	001755e8 mov ax,0x70ef20
 	001755f4 farcall ax
 	001755fc farsubsp 0x1
 	00175604 pop op
 	0017560c sourceline 0x16fa
 	00175614 push op
 	0017561c mov ax,0x426
 	00175628 farpush ax
 	00175630 mov ax,0x397
 	0017563c farpush ax
 	00175644 mov ax,0x0
 	00175650 farpush ax
 	00175658 mov ax,0x3
 	00175664 farpush ax
 	0017566c mov ax,0x2
 	00175678 farpush ax
 	00175680 mov mar,0x3cef20
 	0017568c mov ax,mar
 	00175698 mov op,ax
 	001756a0 setfuncargs 0x5
 	001756a8 mov ax,0x536f20
 	001756b4 farcall ax
 	001756bc farsubsp 0x5
 	001756c4 pop op
 	001756cc sourceline 0x16fb
 	001756d4 push op
 	001756dc mov ax,0x427
 	001756e8 farpush ax
 	001756f0 mov ax,0x398
 	001756fc farpush ax
 	00175704 mov ax,0x0
 	00175710 farpush ax
 	00175718 mov ax,0x3
 	00175724 farpush ax
 	0017572c mov ax,0x0
 	00175738 farpush ax
 	00175740 mov mar,0x506f20
 	0017574c mov ax,mar
 	00175758 mov op,ax
 	00175760 setfuncargs 0x5
 	00175768 mov ax,0x536f20
 	00175774 farcall ax
 	0017577c farsubsp 0x5
 	00175784 pop op
 	0017578c sourceline 0x16fc
 	00175794 push op
 	0017579c mov ax,0x427
 	001757a8 farpush ax
 	001757b0 mov ax,0x397
 	001757bc farpush ax
 	001757c4 mov ax,0x0
 	001757d0 farpush ax
 	001757d8 mov ax,0x3
 	001757e4 farpush ax
 	001757ec mov ax,0x2
 	001757f8 farpush ax
 	00175800 mov mar,0x3cef20
 	0017580c mov ax,mar
 	00175818 mov op,ax
 	00175820 setfuncargs 0x5
 	00175828 mov ax,0x536f20
 	00175834 farcall ax
 	0017583c farsubsp 0x5
 	00175844 pop op
 	0017584c sourceline 0x16fd
 	00175854 push op
 	0017585c mov ax,0x2
 	00175868 farpush ax
 	00175870 mov mar,0x3cef20
 	0017587c mov ax,mar
 	00175888 mov op,ax
 	00175890 setfuncargs 0x1
 	00175898 mov ax,0x51ef20
 	001758a4 farcall ax
 	001758ac farsubsp 0x1
 	001758b4 pop op
 	001758bc sourceline 0x16fe
 	001758c4 mov ax,0x1
 	001758d0 mov bx,ax
 	001758dc mov mar,0x3cef20
 	001758e8 mov ax,mar
 	001758f4 push op
 	001758fc mov op,ax
 	00175904 farpush bx
 	0017590c setfuncargs 0x1
 	00175914 mov ax,0x766f20
 	00175920 farcall ax
 	00175928 farsubsp 0x1
 	00175930 pop op
 	00175938 sourceline 0x16ff
 	00175940 mov ax,0x86
 	0017594c mov bx,ax
 	00175958 mov mar,0x3cef20
 	00175964 mov ax,mar
 	00175970 push op
 	00175978 mov op,ax
 	00175980 farpush bx
 	00175988 setfuncargs 0x1
 	00175990 mov ax,0x70ef20
 	0017599c farcall ax
 	001759a4 farsubsp 0x1
 	001759ac pop op
 	001759b4 sourceline 0x1700
 	001759bc mov ax,0x82
 	001759c8 mov bx,ax
 	001759d4 mov mar,0x3cef20
 	001759e0 mov ax,mar
 	001759ec push op
 	001759f4 mov op,ax
 	001759fc farpush bx
 	00175a04 setfuncargs 0x1
 	00175a0c mov ax,0x526f20
 	00175a18 farcall ax
 	00175a20 farsubsp 0x1
 	00175a28 pop op
 	00175a30 sourceline 0x1701
 	00175a38 mov ax,0x1
 	00175a44 mov mar,0x806f20
 	00175a50 memwrite4 ax
 	00175a58 sourceline 0x1702
 	00175a60 mov ax,0x1
 	00175a6c push ax
 	00175a74 mov ax,0x1
 	00175a80 assertlte ax,0x32
 	00175a8c mul ax,0x8
 	00175a98 mov cx,ax
 	00175aa4 pop ax
 	00175aac mov bx,ax
 	00175ab8 mov mar,0x6c6f20
 	00175ac4 add mar,cx
 	00175ad0 mov ax,mar
 	00175adc push op
 	00175ae4 mov op,ax
 	00175aec farpush bx
 	00175af4 setfuncargs 0x1
 	00175afc mov ax,0xa66f20
 	00175b08 farcall ax
 	00175b10 farsubsp 0x1
 	00175b18 pop op
 	00175b20 sourceline 0x1703
 	00175b28 push op
 	00175b30 mov ax,0x6b
 	00175b3c farpush ax
 	00175b44 mov mar,0x506f20
 	00175b50 mov ax,mar
 	00175b5c mov op,ax
 	00175b64 setfuncargs 0x1
 	00175b6c mov ax,0x51ef20
 	00175b78 farcall ax
 	00175b80 farsubsp 0x1
 	00175b88 pop op
 	00175b90 sourceline 0x1704
 	00175b98 mov ax,0x5b
 	00175ba4 mov bx,ax
 	00175bb0 mov mar,0x506f20
 	00175bbc mov ax,mar
 	00175bc8 push op
 	00175bd0 mov op,ax
 	00175bd8 farpush bx
 	00175be0 setfuncargs 0x1
 	00175be8 mov ax,0x70ef20
 	00175bf4 farcall ax
 	00175bfc farsubsp 0x1
 	00175c04 pop op
 	00175c0c sourceline 0x1705
 	00175c14 push op
 	00175c1c mov ax,0x427
 	00175c28 farpush ax
 	00175c30 mov ax,0x398
 	00175c3c farpush ax
 	00175c44 mov ax,0x0
 	00175c50 farpush ax
 	00175c58 mov ax,0x3
 	00175c64 farpush ax
 	00175c6c mov ax,0x0
 	00175c78 farpush ax
 	00175c80 mov mar,0x506f20
 	00175c8c mov ax,mar
 	00175c98 mov op,ax
 	00175ca0 setfuncargs 0x5
 	00175ca8 mov ax,0x536f20
 	00175cb4 farcall ax
 	00175cbc farsubsp 0x5
 	00175cc4 pop op
 	00175ccc sourceline 0x1706
 	00175cd4 mov ax,0x0
 	00175ce0 mov bx,ax
 	00175cec mov mar,0x506f20
 	00175cf8 mov ax,mar
 	00175d04 push op
 	00175d0c mov op,ax
 	00175d14 farpush bx
 	00175d1c setfuncargs 0x1
 	00175d24 mov ax,0xcaef20
 	00175d30 farcall ax
 	00175d38 farsubsp 0x1
 	00175d40 pop op
 	00175d48 sourceline 0x1707
 	00175d50 push op
 	00175d58 mov ax,0x2
 	00175d64 farpush ax
 	00175d6c mov ax,0x5
 	00175d78 farpush ax
 	00175d80 mov mar,0xabef20
 	00175d8c mov ax,mar
 	00175d98 mov op,ax
 	00175da0 setfuncargs 0x2
 	00175da8 mov ax,0xc26f20
 	00175db4 farcall ax
 	00175dbc farsubsp 0x2
 	00175dc4 pop op
 	00175dcc sourceline 0x1708
 	00175dd4 mov ax,0x50
 	00175de0 push ax
 	00175de8 mov ax,0x1e
 	00175df4 push ax
 	00175dfc mov ax,0x10445c
 	00175e08 call ax
 	00175e10 sub sp,0x8
 	00175e1c mov mar,0x4e6f20
 	00175e28 memwrite4 ax
 	00175e30 sourceline 0x1709
 	00175e38 mov ax,0x1
 	00175e44 mov mar,0x4aef20
 	00175e50 memwrite4 ax
		00175e58: FALL_THROUGH

	[00175e58]
		0017406c: UNCONDITIONAL_JUMP
		001740c0: FALL_THROUGH
 	00175e58 sourceline 0x170b
 	00175e60 jmp 0x00176028
		00176028: UNCONDITIONAL_JUMP

	[00175e68]
		0017400c: CONDITIONAL_JUMP
 	00175e68 sourceline 0x170e
 	00175e70 push op
 	00175e78 mov ax,0x397
 	00175e84 farpush ax
 	00175e8c mov ax,0x73
 	00175e98 farpush ax
 	00175ea0 mov ax,0x5c
 	00175eac farpush ax
 	00175eb4 mov mar,0x3cef20
 	00175ec0 mov ax,mar
 	00175ecc mov op,ax
 	00175ed4 setfuncargs 0x3
 	00175edc mov ax,0x726f20
 	00175ee8 farcall ax
 	00175ef0 farsubsp 0x3
 	00175ef8 pop op
 	00175f00 sourceline 0x170f
 	00175f08 mov ax,0x1
 	00175f14 mov bx,ax
 	00175f20 mov mar,0x3cef20
 	00175f2c mov ax,mar
 	00175f38 push op
 	00175f40 mov op,ax
 	00175f48 farpush bx
 	00175f50 setfuncargs 0x1
 	00175f58 mov ax,0x69ef20
 	00175f64 farcall ax
 	00175f6c farsubsp 0x1
 	00175f74 pop op
 	00175f7c sourceline 0x1711
 	00175f84 push op
 	00175f8c mov ax,0x2bf58f
 	00175f98 farpush ax
 	00175fa0 mov ax,0x138
 	00175fac farpush ax
 	00175fb4 mov ax,0x92
 	00175fc0 farpush ax
 	00175fc8 mov ax,0x0
 	00175fd4 farpush ax
 	00175fdc mov mar,0x3cef20
 	00175fe8 mov ax,mar
 	00175ff4 mov op,ax
 	00175ffc setfuncargs 0x4
 	00176004 mov ax,0x6aef20
 	00176010 farcall ax
 	00176018 farsubsp 0x4
 	00176020 pop op
		00176028: FALL_THROUGH

	[00176028]
		00175e58: UNCONDITIONAL_JUMP
		00175e68: FALL_THROUGH
 	00176028 sourceline 0x1713
 	00176030 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00176038]
		00173f60: CONDITIONAL_JUMP
 	00176038 sourceline 0x1715
 	00176040 mov mar,0x3cef20
 	0017604c mov ax,mar
 	00176058 push op
 	00176060 mov op,ax
 	00176068 setfuncargs 0x0
 	00176070 mov ax,0x89ef20
 	0017607c farcall ax
 	00176084 pop op
 	0017608c push ax
 	00176094 mov mar,0x8b6f20
 	001760a0 mov ax,mar
 	001760ac pop bx
 	001760b4 cmpeq bx,ax
 	001760c0 mov ax,bx
 	001760cc jnz 0x00176188
		00176188: CONDITIONAL_JUMP
		001760d4: FALL_THROUGH

	[001760d4]
		00176038: FALL_THROUGH
 	001760d4 push ax
 	001760dc mov mar,0x3cef20
 	001760e8 mov ax,mar
 	001760f4 push op
 	001760fc mov op,ax
 	00176104 setfuncargs 0x0
 	0017610c mov ax,0x89ef20
 	00176118 farcall ax
 	00176120 pop op
 	00176128 push ax
 	00176130 mov mar,0x8a6f20
 	0017613c mov ax,mar
 	00176148 pop bx
 	00176150 cmpeq bx,ax
 	0017615c mov ax,bx
 	00176168 pop bx
 	00176170 lor bx,ax
 	0017617c mov ax,bx
		00176188: FALL_THROUGH

	[00176188]
		00176038: CONDITIONAL_JUMP
		001760d4: FALL_THROUGH
 	00176188 jnz 0x00176244
		00176244: CONDITIONAL_JUMP
		00176190: FALL_THROUGH

	[00176190]
		00176188: FALL_THROUGH
 	00176190 push ax
 	00176198 mov mar,0x3cef20
 	001761a4 mov ax,mar
 	001761b0 push op
 	001761b8 mov op,ax
 	001761c0 setfuncargs 0x0
 	001761c8 mov ax,0x89ef20
 	001761d4 farcall ax
 	001761dc pop op
 	001761e4 push ax
 	001761ec mov mar,0xa0ef20
 	001761f8 mov ax,mar
 	00176204 pop bx
 	0017620c cmpeq bx,ax
 	00176218 mov ax,bx
 	00176224 pop bx
 	0017622c lor bx,ax
 	00176238 mov ax,bx
		00176244: FALL_THROUGH

	[00176244]
		00176188: CONDITIONAL_JUMP
		00176190: FALL_THROUGH
 	00176244 jnz 0x00176300
		00176300: CONDITIONAL_JUMP
		0017624c: FALL_THROUGH

	[0017624c]
		00176244: FALL_THROUGH
 	0017624c push ax
 	00176254 mov mar,0x3cef20
 	00176260 mov ax,mar
 	0017626c push op
 	00176274 mov op,ax
 	0017627c setfuncargs 0x0
 	00176284 mov ax,0x89ef20
 	00176290 farcall ax
 	00176298 pop op
 	001762a0 push ax
 	001762a8 mov mar,0x9def20
 	001762b4 mov ax,mar
 	001762c0 pop bx
 	001762c8 cmpeq bx,ax
 	001762d4 mov ax,bx
 	001762e0 pop bx
 	001762e8 lor bx,ax
 	001762f4 mov ax,bx
		00176300: FALL_THROUGH

	[00176300]
		00176244: CONDITIONAL_JUMP
		0017624c: FALL_THROUGH
 	00176300 jnz 0x001763bc
		001763bc: CONDITIONAL_JUMP
		00176308: FALL_THROUGH

	[00176308]
		00176300: FALL_THROUGH
 	00176308 push ax
 	00176310 mov mar,0x3cef20
 	0017631c mov ax,mar
 	00176328 push op
 	00176330 mov op,ax
 	00176338 setfuncargs 0x0
 	00176340 mov ax,0x89ef20
 	0017634c farcall ax
 	00176354 pop op
 	0017635c push ax
 	00176364 mov mar,0xa06f20
 	00176370 mov ax,mar
 	0017637c pop bx
 	00176384 cmpeq bx,ax
 	00176390 mov ax,bx
 	0017639c pop bx
 	001763a4 lor bx,ax
 	001763b0 mov ax,bx
		001763bc: FALL_THROUGH

	[001763bc]
		00176300: CONDITIONAL_JUMP
		00176308: FALL_THROUGH
 	001763bc jnz 0x00176478
		00176478: CONDITIONAL_JUMP
		001763c4: FALL_THROUGH

	[001763c4]
		001763bc: FALL_THROUGH
 	001763c4 push ax
 	001763cc mov mar,0x3cef20
 	001763d8 mov ax,mar
 	001763e4 push op
 	001763ec mov op,ax
 	001763f4 setfuncargs 0x0
 	001763fc mov ax,0x89ef20
 	00176408 farcall ax
 	00176410 pop op
 	00176418 push ax
 	00176420 mov mar,0x9fef20
 	0017642c mov ax,mar
 	00176438 pop bx
 	00176440 cmpeq bx,ax
 	0017644c mov ax,bx
 	00176458 pop bx
 	00176460 lor bx,ax
 	0017646c mov ax,bx
		00176478: FALL_THROUGH

	[00176478]
		001763bc: CONDITIONAL_JUMP
		001763c4: FALL_THROUGH
 	00176478 jz 0x00176fb4
		00176fb4: CONDITIONAL_JUMP
		00176480: FALL_THROUGH

	[00176480]
		00176478: FALL_THROUGH
 	00176480 sourceline 0x1718
 	00176488 setfuncargs 0x0
 	00176490 mov ax,0x6def20
 	0017649c farcall ax
 	001764a4 lnot ax
 	001764ac jz 0x00176508
		00176508: CONDITIONAL_JUMP
		001764b4: FALL_THROUGH

	[001764b4]
		00176480: FALL_THROUGH
 	001764b4 mov ax,0x82
 	001764c0 farpush ax
 	001764c8 mov ax,0x86
 	001764d4 farpush ax
 	001764dc setfuncargs 0x2
 	001764e4 mov ax,0x6e6f20
 	001764f0 farcall ax
 	001764f8 farsubsp 0x2
 	00176500 jmp 0x00176fa4
		00176fa4: UNCONDITIONAL_JUMP

	[00176508]
		00176480: CONDITIONAL_JUMP
 	00176508 sourceline 0x171b
 	00176510 mov ax,0x0
 	0017651c push ax
 	00176524 mov ax,0x1
 	00176530 assertlte ax,0x32
 	0017653c mul ax,0x8
 	00176548 mov cx,ax
 	00176554 pop ax
 	0017655c mov bx,ax
 	00176568 mov mar,0x6c6f20
 	00176574 add mar,cx
 	00176580 mov ax,mar
 	0017658c push op
 	00176594 mov op,ax
 	0017659c farpush bx
 	001765a4 setfuncargs 0x1
 	001765ac mov ax,0xa66f20
 	001765b8 farcall ax
 	001765c0 farsubsp 0x1
 	001765c8 pop op
 	001765d0 sourceline 0x171c
 	001765d8 mov ax,0x3
 	001765e4 mov bx,ax
 	001765f0 mov mar,0x3cef20
 	001765fc mov ax,mar
 	00176608 push op
 	00176610 mov op,ax
 	00176618 farpush bx
 	00176620 setfuncargs 0x1
 	00176628 mov ax,0x69ef20
 	00176634 farcall ax
 	0017663c farsubsp 0x1
 	00176644 pop op
 	0017664c sourceline 0x171d
 	00176654 push op
 	0017665c mov ax,0x397
 	00176668 farpush ax
 	00176670 mov ax,0x1
 	0017667c farpush ax
 	00176684 mov mar,0x3cef20
 	00176690 mov ax,mar
 	0017669c mov op,ax
 	001766a4 setfuncargs 0x2
 	001766ac mov ax,0x6eef20
 	001766b8 farcall ax
 	001766c0 farsubsp 0x2
 	001766c8 pop op
 	001766d0 sourceline 0x171e
 	001766d8 mov ax,0x104654
 	001766e4 call ax
 	001766ec sourceline 0x171f
 	001766f4 push op
 	001766fc mov ax,0x6
 	00176708 farpush ax
 	00176710 mov mar,0x3cef20
 	0017671c mov ax,mar
 	00176728 mov op,ax
 	00176730 setfuncargs 0x1
 	00176738 mov ax,0x51ef20
 	00176744 farcall ax
 	0017674c farsubsp 0x1
 	00176754 pop op
 	0017675c sourceline 0x1720
 	00176764 mov ax,0x7a
 	00176770 mov bx,ax
 	0017677c mov mar,0x3cef20
 	00176788 mov ax,mar
 	00176794 push op
 	0017679c mov op,ax
 	001767a4 farpush bx
 	001767ac setfuncargs 0x1
 	001767b4 mov ax,0x526f20
 	001767c0 farcall ax
 	001767c8 farsubsp 0x1
 	001767d0 pop op
 	001767d8 sourceline 0x1721
 	001767e0 mov ax,0x7e
 	001767ec mov bx,ax
 	001767f8 mov mar,0x3cef20
 	00176804 mov ax,mar
 	00176810 push op
 	00176818 mov op,ax
 	00176820 farpush bx
 	00176828 setfuncargs 0x1
 	00176830 mov ax,0x70ef20
 	0017683c farcall ax
 	00176844 farsubsp 0x1
 	0017684c pop op
 	00176854 sourceline 0x1722
 	0017685c push op
 	00176864 mov ax,0x426
 	00176870 farpush ax
 	00176878 mov ax,0x397
 	00176884 farpush ax
 	0017688c mov ax,0x0
 	00176898 farpush ax
 	001768a0 mov ax,0x3
 	001768ac farpush ax
 	001768b4 mov ax,0x2
 	001768c0 farpush ax
 	001768c8 mov mar,0x3cef20
 	001768d4 mov ax,mar
 	001768e0 mov op,ax
 	001768e8 setfuncargs 0x5
 	001768f0 mov ax,0x536f20
 	001768fc farcall ax
 	00176904 farsubsp 0x5
 	0017690c pop op
 	00176914 sourceline 0x1725
 	0017691c push op
 	00176924 mov ax,0x2bf5bc
 	00176930 farpush ax
 	00176938 mov mar,0x3cef20
 	00176944 mov ax,mar
 	00176950 mov op,ax
 	00176958 setfuncargs 0x1
 	00176960 mov ax,0x6f6f20
 	0017696c farcall ax
 	00176974 farsubsp 0x1
 	0017697c pop op
 	00176984 sourceline 0x1726
 	0017698c push op
 	00176994 mov ax,0x2bf5dd
 	001769a0 farpush ax
 	001769a8 mov mar,0x506f20
 	001769b4 mov ax,mar
 	001769c0 mov op,ax
 	001769c8 setfuncargs 0x1
 	001769d0 mov ax,0x6f6f20
 	001769dc farcall ax
 	001769e4 farsubsp 0x1
 	001769ec pop op
 	001769f4 sourceline 0x1727
 	001769fc push op
 	00176a04 mov ax,0x427
 	00176a10 farpush ax
 	00176a18 mov ax,0x398
 	00176a24 farpush ax
 	00176a2c mov ax,0x0
 	00176a38 farpush ax
 	00176a40 mov ax,0x3
 	00176a4c farpush ax
 	00176a54 mov ax,0x0
 	00176a60 farpush ax
 	00176a68 mov mar,0x506f20
 	00176a74 mov ax,mar
 	00176a80 mov op,ax
 	00176a88 setfuncargs 0x5
 	00176a90 mov ax,0x536f20
 	00176a9c farcall ax
 	00176aa4 farsubsp 0x5
 	00176aac pop op
 	00176ab4 sourceline 0x1728
 	00176abc push op
 	00176ac4 mov ax,0x427
 	00176ad0 farpush ax
 	00176ad8 mov ax,0x397
 	00176ae4 farpush ax
 	00176aec mov ax,0x0
 	00176af8 farpush ax
 	00176b00 mov ax,0x3
 	00176b0c farpush ax
 	00176b14 mov ax,0x2
 	00176b20 farpush ax
 	00176b28 mov mar,0x3cef20
 	00176b34 mov ax,mar
 	00176b40 mov op,ax
 	00176b48 setfuncargs 0x5
 	00176b50 mov ax,0x536f20
 	00176b5c farcall ax
 	00176b64 farsubsp 0x5
 	00176b6c pop op
 	00176b74 sourceline 0x1729
 	00176b7c push op
 	00176b84 mov ax,0x2
 	00176b90 farpush ax
 	00176b98 mov mar,0x3cef20
 	00176ba4 mov ax,mar
 	00176bb0 mov op,ax
 	00176bb8 setfuncargs 0x1
 	00176bc0 mov ax,0x51ef20
 	00176bcc farcall ax
 	00176bd4 farsubsp 0x1
 	00176bdc pop op
 	00176be4 sourceline 0x172a
 	00176bec mov ax,0x1
 	00176bf8 mov bx,ax
 	00176c04 mov mar,0x3cef20
 	00176c10 mov ax,mar
 	00176c1c push op
 	00176c24 mov op,ax
 	00176c2c farpush bx
 	00176c34 setfuncargs 0x1
 	00176c3c mov ax,0x766f20
 	00176c48 farcall ax
 	00176c50 farsubsp 0x1
 	00176c58 pop op
 	00176c60 sourceline 0x172b
 	00176c68 mov ax,0x86
 	00176c74 mov bx,ax
 	00176c80 mov mar,0x3cef20
 	00176c8c mov ax,mar
 	00176c98 push op
 	00176ca0 mov op,ax
 	00176ca8 farpush bx
 	00176cb0 setfuncargs 0x1
 	00176cb8 mov ax,0x70ef20
 	00176cc4 farcall ax
 	00176ccc farsubsp 0x1
 	00176cd4 pop op
 	00176cdc sourceline 0x172c
 	00176ce4 mov ax,0x82
 	00176cf0 mov bx,ax
 	00176cfc mov mar,0x3cef20
 	00176d08 mov ax,mar
 	00176d14 push op
 	00176d1c mov op,ax
 	00176d24 farpush bx
 	00176d2c setfuncargs 0x1
 	00176d34 mov ax,0x526f20
 	00176d40 farcall ax
 	00176d48 farsubsp 0x1
 	00176d50 pop op
 	00176d58 sourceline 0x172d
 	00176d60 mov ax,0x0
 	00176d6c mov bx,ax
 	00176d78 mov mar,0x3cef20
 	00176d84 mov ax,mar
 	00176d90 push op
 	00176d98 mov op,ax
 	00176da0 farpush bx
 	00176da8 setfuncargs 0x1
 	00176db0 mov ax,0x436f20
 	00176dbc farcall ax
 	00176dc4 farsubsp 0x1
 	00176dcc pop op
 	00176dd4 sourceline 0x172e
 	00176ddc mov ax,0x1
 	00176de8 mov bx,ax
 	00176df4 mov mar,0x3cef20
 	00176e00 mov ax,mar
 	00176e0c push op
 	00176e14 mov op,ax
 	00176e1c farpush bx
 	00176e24 setfuncargs 0x1
 	00176e2c mov ax,0x69ef20
 	00176e38 farcall ax
 	00176e40 farsubsp 0x1
 	00176e48 pop op
 	00176e50 sourceline 0x172f
 	00176e58 mov ax,0x1
 	00176e64 push ax
 	00176e6c mov ax,0x1
 	00176e78 assertlte ax,0x32
 	00176e84 mul ax,0x8
 	00176e90 mov cx,ax
 	00176e9c pop ax
 	00176ea4 mov bx,ax
 	00176eb0 mov mar,0x6c6f20
 	00176ebc add mar,cx
 	00176ec8 mov ax,mar
 	00176ed4 push op
 	00176edc mov op,ax
 	00176ee4 farpush bx
 	00176eec setfuncargs 0x1
 	00176ef4 mov ax,0xa66f20
 	00176f00 farcall ax
 	00176f08 farsubsp 0x1
 	00176f10 pop op
 	00176f18 sourceline 0x1730
 	00176f20 mov ax,0x50
 	00176f2c push ax
 	00176f34 mov ax,0x1e
 	00176f40 push ax
 	00176f48 mov ax,0x10445c
 	00176f54 call ax
 	00176f5c sub sp,0x8
 	00176f68 mov mar,0x4e6f20
 	00176f74 memwrite4 ax
 	00176f7c sourceline 0x1731
 	00176f84 mov ax,0x1
 	00176f90 mov mar,0x4aef20
 	00176f9c memwrite4 ax
		00176fa4: FALL_THROUGH

	[00176fa4]
		001764b4: UNCONDITIONAL_JUMP
		00176508: FALL_THROUGH
 	00176fa4 sourceline 0x1733
 	00176fac jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00176fb4]
		00176478: CONDITIONAL_JUMP
 	00176fb4 sourceline 0x1735
 	00176fbc mov mar,0x3cef20
 	00176fc8 mov ax,mar
 	00176fd4 push op
 	00176fdc mov op,ax
 	00176fe4 setfuncargs 0x0
 	00176fec mov ax,0x89ef20
 	00176ff8 farcall ax
 	00177000 pop op
 	00177008 push ax
 	00177010 mov mar,0x8cef20
 	0017701c mov ax,mar
 	00177028 pop bx
 	00177030 cmpeq bx,ax
 	0017703c mov ax,bx
 	00177048 jz 0x00177bf4
		00177bf4: CONDITIONAL_JUMP
		00177050: FALL_THROUGH

	[00177050]
		00176fb4: FALL_THROUGH
 	00177050 sourceline 0x1737
 	00177058 setfuncargs 0x0
 	00177060 mov ax,0x6def20
 	0017706c farcall ax
 	00177074 lnot ax
 	0017707c jz 0x001770d8
		001770d8: CONDITIONAL_JUMP
		00177084: FALL_THROUGH

	[00177084]
		00177050: FALL_THROUGH
 	00177084 mov ax,0x82
 	00177090 farpush ax
 	00177098 mov ax,0x86
 	001770a4 farpush ax
 	001770ac setfuncargs 0x2
 	001770b4 mov ax,0x6e6f20
 	001770c0 farcall ax
 	001770c8 farsubsp 0x2
 	001770d0 jmp 0x00177be4
		00177be4: UNCONDITIONAL_JUMP

	[001770d8]
		00177050: CONDITIONAL_JUMP
 	001770d8 sourceline 0x173a
 	001770e0 mov ax,0x0
 	001770ec push ax
 	001770f4 mov ax,0x1
 	00177100 assertlte ax,0x32
 	0017710c mul ax,0x8
 	00177118 mov cx,ax
 	00177124 pop ax
 	0017712c mov bx,ax
 	00177138 mov mar,0x6c6f20
 	00177144 add mar,cx
 	00177150 mov ax,mar
 	0017715c push op
 	00177164 mov op,ax
 	0017716c farpush bx
 	00177174 setfuncargs 0x1
 	0017717c mov ax,0xa66f20
 	00177188 farcall ax
 	00177190 farsubsp 0x1
 	00177198 pop op
 	001771a0 sourceline 0x173b
 	001771a8 mov ax,0x3
 	001771b4 mov bx,ax
 	001771c0 mov mar,0x3cef20
 	001771cc mov ax,mar
 	001771d8 push op
 	001771e0 mov op,ax
 	001771e8 farpush bx
 	001771f0 setfuncargs 0x1
 	001771f8 mov ax,0x69ef20
 	00177204 farcall ax
 	0017720c farsubsp 0x1
 	00177214 pop op
 	0017721c sourceline 0x173c
 	00177224 push op
 	0017722c mov ax,0x397
 	00177238 farpush ax
 	00177240 mov ax,0x1
 	0017724c farpush ax
 	00177254 mov mar,0x3cef20
 	00177260 mov ax,mar
 	0017726c mov op,ax
 	00177274 setfuncargs 0x2
 	0017727c mov ax,0x6eef20
 	00177288 farcall ax
 	00177290 farsubsp 0x2
 	00177298 pop op
 	001772a0 sourceline 0x173d
 	001772a8 mov ax,0x104654
 	001772b4 call ax
 	001772bc sourceline 0x173e
 	001772c4 push op
 	001772cc mov ax,0x6
 	001772d8 farpush ax
 	001772e0 mov mar,0x3cef20
 	001772ec mov ax,mar
 	001772f8 mov op,ax
 	00177300 setfuncargs 0x1
 	00177308 mov ax,0x51ef20
 	00177314 farcall ax
 	0017731c farsubsp 0x1
 	00177324 pop op
 	0017732c sourceline 0x173f
 	00177334 mov ax,0x7a
 	00177340 mov bx,ax
 	0017734c mov mar,0x3cef20
 	00177358 mov ax,mar
 	00177364 push op
 	0017736c mov op,ax
 	00177374 farpush bx
 	0017737c setfuncargs 0x1
 	00177384 mov ax,0x526f20
 	00177390 farcall ax
 	00177398 farsubsp 0x1
 	001773a0 pop op
 	001773a8 sourceline 0x1740
 	001773b0 mov ax,0x7e
 	001773bc mov bx,ax
 	001773c8 mov mar,0x3cef20
 	001773d4 mov ax,mar
 	001773e0 push op
 	001773e8 mov op,ax
 	001773f0 farpush bx
 	001773f8 setfuncargs 0x1
 	00177400 mov ax,0x70ef20
 	0017740c farcall ax
 	00177414 farsubsp 0x1
 	0017741c pop op
 	00177424 sourceline 0x1741
 	0017742c push op
 	00177434 mov ax,0x426
 	00177440 farpush ax
 	00177448 mov ax,0x397
 	00177454 farpush ax
 	0017745c mov ax,0x0
 	00177468 farpush ax
 	00177470 mov ax,0x3
 	0017747c farpush ax
 	00177484 mov ax,0x2
 	00177490 farpush ax
 	00177498 mov mar,0x3cef20
 	001774a4 mov ax,mar
 	001774b0 mov op,ax
 	001774b8 setfuncargs 0x5
 	001774c0 mov ax,0x536f20
 	001774cc farcall ax
 	001774d4 farsubsp 0x5
 	001774dc pop op
 	001774e4 sourceline 0x1744
 	001774ec push op
 	001774f4 mov ax,0x2bf607
 	00177500 farpush ax
 	00177508 mov mar,0x3cef20
 	00177514 mov ax,mar
 	00177520 mov op,ax
 	00177528 setfuncargs 0x1
 	00177530 mov ax,0x6f6f20
 	0017753c farcall ax
 	00177544 farsubsp 0x1
 	0017754c pop op
 	00177554 sourceline 0x1745
 	0017755c push op
 	00177564 mov ax,0x2bf63c
 	00177570 farpush ax
 	00177578 mov mar,0x506f20
 	00177584 mov ax,mar
 	00177590 mov op,ax
 	00177598 setfuncargs 0x1
 	001775a0 mov ax,0x6f6f20
 	001775ac farcall ax
 	001775b4 farsubsp 0x1
 	001775bc pop op
 	001775c4 sourceline 0x1746
 	001775cc push op
 	001775d4 mov ax,0x2bf682
 	001775e0 farpush ax
 	001775e8 mov mar,0x3cef20
 	001775f4 mov ax,mar
 	00177600 mov op,ax
 	00177608 setfuncargs 0x1
 	00177610 mov ax,0x6f6f20
 	0017761c farcall ax
 	00177624 farsubsp 0x1
 	0017762c pop op
 	00177634 sourceline 0x1747
 	0017763c push op
 	00177644 mov ax,0x427
 	00177650 farpush ax
 	00177658 mov ax,0x398
 	00177664 farpush ax
 	0017766c mov ax,0x0
 	00177678 farpush ax
 	00177680 mov ax,0x3
 	0017768c farpush ax
 	00177694 mov ax,0x0
 	001776a0 farpush ax
 	001776a8 mov mar,0x506f20
 	001776b4 mov ax,mar
 	001776c0 mov op,ax
 	001776c8 setfuncargs 0x5
 	001776d0 mov ax,0x536f20
 	001776dc farcall ax
 	001776e4 farsubsp 0x5
 	001776ec pop op
 	001776f4 sourceline 0x1748
 	001776fc push op
 	00177704 mov ax,0x427
 	00177710 farpush ax
 	00177718 mov ax,0x397
 	00177724 farpush ax
 	0017772c mov ax,0x0
 	00177738 farpush ax
 	00177740 mov ax,0x3
 	0017774c farpush ax
 	00177754 mov ax,0x2
 	00177760 farpush ax
 	00177768 mov mar,0x3cef20
 	00177774 mov ax,mar
 	00177780 mov op,ax
 	00177788 setfuncargs 0x5
 	00177790 mov ax,0x536f20
 	0017779c farcall ax
 	001777a4 farsubsp 0x5
 	001777ac pop op
 	001777b4 sourceline 0x1749
 	001777bc push op
 	001777c4 mov ax,0x2
 	001777d0 farpush ax
 	001777d8 mov mar,0x3cef20
 	001777e4 mov ax,mar
 	001777f0 mov op,ax
 	001777f8 setfuncargs 0x1
 	00177800 mov ax,0x51ef20
 	0017780c farcall ax
 	00177814 farsubsp 0x1
 	0017781c pop op
 	00177824 sourceline 0x174a
 	0017782c mov ax,0x1
 	00177838 mov bx,ax
 	00177844 mov mar,0x3cef20
 	00177850 mov ax,mar
 	0017785c push op
 	00177864 mov op,ax
 	0017786c farpush bx
 	00177874 setfuncargs 0x1
 	0017787c mov ax,0x766f20
 	00177888 farcall ax
 	00177890 farsubsp 0x1
 	00177898 pop op
 	001778a0 sourceline 0x174b
 	001778a8 mov ax,0x86
 	001778b4 mov bx,ax
 	001778c0 mov mar,0x3cef20
 	001778cc mov ax,mar
 	001778d8 push op
 	001778e0 mov op,ax
 	001778e8 farpush bx
 	001778f0 setfuncargs 0x1
 	001778f8 mov ax,0x70ef20
 	00177904 farcall ax
 	0017790c farsubsp 0x1
 	00177914 pop op
 	0017791c sourceline 0x174c
 	00177924 mov ax,0x82
 	00177930 mov bx,ax
 	0017793c mov mar,0x3cef20
 	00177948 mov ax,mar
 	00177954 push op
 	0017795c mov op,ax
 	00177964 farpush bx
 	0017796c setfuncargs 0x1
 	00177974 mov ax,0x526f20
 	00177980 farcall ax
 	00177988 farsubsp 0x1
 	00177990 pop op
 	00177998 sourceline 0x174d
 	001779a0 mov ax,0x0
 	001779ac mov bx,ax
 	001779b8 mov mar,0x3cef20
 	001779c4 mov ax,mar
 	001779d0 push op
 	001779d8 mov op,ax
 	001779e0 farpush bx
 	001779e8 setfuncargs 0x1
 	001779f0 mov ax,0x436f20
 	001779fc farcall ax
 	00177a04 farsubsp 0x1
 	00177a0c pop op
 	00177a14 sourceline 0x174e
 	00177a1c mov ax,0x1
 	00177a28 mov bx,ax
 	00177a34 mov mar,0x3cef20
 	00177a40 mov ax,mar
 	00177a4c push op
 	00177a54 mov op,ax
 	00177a5c farpush bx
 	00177a64 setfuncargs 0x1
 	00177a6c mov ax,0x69ef20
 	00177a78 farcall ax
 	00177a80 farsubsp 0x1
 	00177a88 pop op
 	00177a90 sourceline 0x174f
 	00177a98 mov ax,0x1
 	00177aa4 push ax
 	00177aac mov ax,0x1
 	00177ab8 assertlte ax,0x32
 	00177ac4 mul ax,0x8
 	00177ad0 mov cx,ax
 	00177adc pop ax
 	00177ae4 mov bx,ax
 	00177af0 mov mar,0x6c6f20
 	00177afc add mar,cx
 	00177b08 mov ax,mar
 	00177b14 push op
 	00177b1c mov op,ax
 	00177b24 farpush bx
 	00177b2c setfuncargs 0x1
 	00177b34 mov ax,0xa66f20
 	00177b40 farcall ax
 	00177b48 farsubsp 0x1
 	00177b50 pop op
 	00177b58 sourceline 0x1750
 	00177b60 mov ax,0x50
 	00177b6c push ax
 	00177b74 mov ax,0x1e
 	00177b80 push ax
 	00177b88 mov ax,0x10445c
 	00177b94 call ax
 	00177b9c sub sp,0x8
 	00177ba8 mov mar,0x4e6f20
 	00177bb4 memwrite4 ax
 	00177bbc sourceline 0x1751
 	00177bc4 mov ax,0x1
 	00177bd0 mov mar,0x4aef20
 	00177bdc memwrite4 ax
		00177be4: FALL_THROUGH

	[00177be4]
		00177084: UNCONDITIONAL_JUMP
		001770d8: FALL_THROUGH
 	00177be4 sourceline 0x1753
 	00177bec jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00177bf4]
		00176fb4: CONDITIONAL_JUMP
 	00177bf4 sourceline 0x1755
 	00177bfc mov mar,0x3cef20
 	00177c08 mov ax,mar
 	00177c14 push op
 	00177c1c mov op,ax
 	00177c24 setfuncargs 0x0
 	00177c2c mov ax,0x89ef20
 	00177c38 farcall ax
 	00177c40 pop op
 	00177c48 push ax
 	00177c50 mov mar,0x8d6f20
 	00177c5c mov ax,mar
 	00177c68 pop bx
 	00177c70 cmpeq bx,ax
 	00177c7c mov ax,bx
 	00177c88 jz 0x001787c4
		001787c4: CONDITIONAL_JUMP
		00177c90: FALL_THROUGH

	[00177c90]
		00177bf4: FALL_THROUGH
 	00177c90 sourceline 0x1757
 	00177c98 setfuncargs 0x0
 	00177ca0 mov ax,0x6def20
 	00177cac farcall ax
 	00177cb4 lnot ax
 	00177cbc jz 0x00177d18
		00177d18: CONDITIONAL_JUMP
		00177cc4: FALL_THROUGH

	[00177cc4]
		00177c90: FALL_THROUGH
 	00177cc4 mov ax,0x82
 	00177cd0 farpush ax
 	00177cd8 mov ax,0x86
 	00177ce4 farpush ax
 	00177cec setfuncargs 0x2
 	00177cf4 mov ax,0x6e6f20
 	00177d00 farcall ax
 	00177d08 farsubsp 0x2
 	00177d10 jmp 0x001787b4
		001787b4: UNCONDITIONAL_JUMP

	[00177d18]
		00177c90: CONDITIONAL_JUMP
 	00177d18 sourceline 0x175a
 	00177d20 mov ax,0x0
 	00177d2c push ax
 	00177d34 mov ax,0x1
 	00177d40 assertlte ax,0x32
 	00177d4c mul ax,0x8
 	00177d58 mov cx,ax
 	00177d64 pop ax
 	00177d6c mov bx,ax
 	00177d78 mov mar,0x6c6f20
 	00177d84 add mar,cx
 	00177d90 mov ax,mar
 	00177d9c push op
 	00177da4 mov op,ax
 	00177dac farpush bx
 	00177db4 setfuncargs 0x1
 	00177dbc mov ax,0xa66f20
 	00177dc8 farcall ax
 	00177dd0 farsubsp 0x1
 	00177dd8 pop op
 	00177de0 sourceline 0x175b
 	00177de8 mov ax,0x3
 	00177df4 mov bx,ax
 	00177e00 mov mar,0x3cef20
 	00177e0c mov ax,mar
 	00177e18 push op
 	00177e20 mov op,ax
 	00177e28 farpush bx
 	00177e30 setfuncargs 0x1
 	00177e38 mov ax,0x69ef20
 	00177e44 farcall ax
 	00177e4c farsubsp 0x1
 	00177e54 pop op
 	00177e5c sourceline 0x175c
 	00177e64 push op
 	00177e6c mov ax,0x397
 	00177e78 farpush ax
 	00177e80 mov ax,0x1
 	00177e8c farpush ax
 	00177e94 mov mar,0x3cef20
 	00177ea0 mov ax,mar
 	00177eac mov op,ax
 	00177eb4 setfuncargs 0x2
 	00177ebc mov ax,0x6eef20
 	00177ec8 farcall ax
 	00177ed0 farsubsp 0x2
 	00177ed8 pop op
 	00177ee0 sourceline 0x175d
 	00177ee8 mov ax,0x104654
 	00177ef4 call ax
 	00177efc sourceline 0x175e
 	00177f04 push op
 	00177f0c mov ax,0x6
 	00177f18 farpush ax
 	00177f20 mov mar,0x3cef20
 	00177f2c mov ax,mar
 	00177f38 mov op,ax
 	00177f40 setfuncargs 0x1
 	00177f48 mov ax,0x51ef20
 	00177f54 farcall ax
 	00177f5c farsubsp 0x1
 	00177f64 pop op
 	00177f6c sourceline 0x175f
 	00177f74 mov ax,0x7a
 	00177f80 mov bx,ax
 	00177f8c mov mar,0x3cef20
 	00177f98 mov ax,mar
 	00177fa4 push op
 	00177fac mov op,ax
 	00177fb4 farpush bx
 	00177fbc setfuncargs 0x1
 	00177fc4 mov ax,0x526f20
 	00177fd0 farcall ax
 	00177fd8 farsubsp 0x1
 	00177fe0 pop op
 	00177fe8 sourceline 0x1760
 	00177ff0 mov ax,0x7e
 	00177ffc mov bx,ax
 	00178008 mov mar,0x3cef20
 	00178014 mov ax,mar
 	00178020 push op
 	00178028 mov op,ax
 	00178030 farpush bx
 	00178038 setfuncargs 0x1
 	00178040 mov ax,0x70ef20
 	0017804c farcall ax
 	00178054 farsubsp 0x1
 	0017805c pop op
 	00178064 sourceline 0x1761
 	0017806c push op
 	00178074 mov ax,0x426
 	00178080 farpush ax
 	00178088 mov ax,0x397
 	00178094 farpush ax
 	0017809c mov ax,0x0
 	001780a8 farpush ax
 	001780b0 mov ax,0x3
 	001780bc farpush ax
 	001780c4 mov ax,0x2
 	001780d0 farpush ax
 	001780d8 mov mar,0x3cef20
 	001780e4 mov ax,mar
 	001780f0 mov op,ax
 	001780f8 setfuncargs 0x5
 	00178100 mov ax,0x536f20
 	0017810c farcall ax
 	00178114 farsubsp 0x5
 	0017811c pop op
 	00178124 sourceline 0x1764
 	0017812c push op
 	00178134 mov ax,0x2bf6e2
 	00178140 farpush ax
 	00178148 mov mar,0x3cef20
 	00178154 mov ax,mar
 	00178160 mov op,ax
 	00178168 setfuncargs 0x1
 	00178170 mov ax,0x6f6f20
 	0017817c farcall ax
 	00178184 farsubsp 0x1
 	0017818c pop op
 	00178194 sourceline 0x1765
 	0017819c push op
 	001781a4 mov ax,0x2bf6fe
 	001781b0 farpush ax
 	001781b8 mov mar,0x506f20
 	001781c4 mov ax,mar
 	001781d0 mov op,ax
 	001781d8 setfuncargs 0x1
 	001781e0 mov ax,0x6f6f20
 	001781ec farcall ax
 	001781f4 farsubsp 0x1
 	001781fc pop op
 	00178204 sourceline 0x1766
 	0017820c push op
 	00178214 mov ax,0x427
 	00178220 farpush ax
 	00178228 mov ax,0x398
 	00178234 farpush ax
 	0017823c mov ax,0x0
 	00178248 farpush ax
 	00178250 mov ax,0x3
 	0017825c farpush ax
 	00178264 mov ax,0x0
 	00178270 farpush ax
 	00178278 mov mar,0x506f20
 	00178284 mov ax,mar
 	00178290 mov op,ax
 	00178298 setfuncargs 0x5
 	001782a0 mov ax,0x536f20
 	001782ac farcall ax
 	001782b4 farsubsp 0x5
 	001782bc pop op
 	001782c4 sourceline 0x1767
 	001782cc push op
 	001782d4 mov ax,0x427
 	001782e0 farpush ax
 	001782e8 mov ax,0x397
 	001782f4 farpush ax
 	001782fc mov ax,0x0
 	00178308 farpush ax
 	00178310 mov ax,0x3
 	0017831c farpush ax
 	00178324 mov ax,0x2
 	00178330 farpush ax
 	00178338 mov mar,0x3cef20
 	00178344 mov ax,mar
 	00178350 mov op,ax
 	00178358 setfuncargs 0x5
 	00178360 mov ax,0x536f20
 	0017836c farcall ax
 	00178374 farsubsp 0x5
 	0017837c pop op
 	00178384 sourceline 0x1768
 	0017838c push op
 	00178394 mov ax,0x2
 	001783a0 farpush ax
 	001783a8 mov mar,0x3cef20
 	001783b4 mov ax,mar
 	001783c0 mov op,ax
 	001783c8 setfuncargs 0x1
 	001783d0 mov ax,0x51ef20
 	001783dc farcall ax
 	001783e4 farsubsp 0x1
 	001783ec pop op
 	001783f4 sourceline 0x1769
 	001783fc mov ax,0x1
 	00178408 mov bx,ax
 	00178414 mov mar,0x3cef20
 	00178420 mov ax,mar
 	0017842c push op
 	00178434 mov op,ax
 	0017843c farpush bx
 	00178444 setfuncargs 0x1
 	0017844c mov ax,0x766f20
 	00178458 farcall ax
 	00178460 farsubsp 0x1
 	00178468 pop op
 	00178470 sourceline 0x176a
 	00178478 mov ax,0x86
 	00178484 mov bx,ax
 	00178490 mov mar,0x3cef20
 	0017849c mov ax,mar
 	001784a8 push op
 	001784b0 mov op,ax
 	001784b8 farpush bx
 	001784c0 setfuncargs 0x1
 	001784c8 mov ax,0x70ef20
 	001784d4 farcall ax
 	001784dc farsubsp 0x1
 	001784e4 pop op
 	001784ec sourceline 0x176b
 	001784f4 mov ax,0x82
 	00178500 mov bx,ax
 	0017850c mov mar,0x3cef20
 	00178518 mov ax,mar
 	00178524 push op
 	0017852c mov op,ax
 	00178534 farpush bx
 	0017853c setfuncargs 0x1
 	00178544 mov ax,0x526f20
 	00178550 farcall ax
 	00178558 farsubsp 0x1
 	00178560 pop op
 	00178568 sourceline 0x176c
 	00178570 mov ax,0x0
 	0017857c mov bx,ax
 	00178588 mov mar,0x3cef20
 	00178594 mov ax,mar
 	001785a0 push op
 	001785a8 mov op,ax
 	001785b0 farpush bx
 	001785b8 setfuncargs 0x1
 	001785c0 mov ax,0x436f20
 	001785cc farcall ax
 	001785d4 farsubsp 0x1
 	001785dc pop op
 	001785e4 sourceline 0x176d
 	001785ec mov ax,0x1
 	001785f8 mov bx,ax
 	00178604 mov mar,0x3cef20
 	00178610 mov ax,mar
 	0017861c push op
 	00178624 mov op,ax
 	0017862c farpush bx
 	00178634 setfuncargs 0x1
 	0017863c mov ax,0x69ef20
 	00178648 farcall ax
 	00178650 farsubsp 0x1
 	00178658 pop op
 	00178660 sourceline 0x176e
 	00178668 mov ax,0x1
 	00178674 push ax
 	0017867c mov ax,0x1
 	00178688 assertlte ax,0x32
 	00178694 mul ax,0x8
 	001786a0 mov cx,ax
 	001786ac pop ax
 	001786b4 mov bx,ax
 	001786c0 mov mar,0x6c6f20
 	001786cc add mar,cx
 	001786d8 mov ax,mar
 	001786e4 push op
 	001786ec mov op,ax
 	001786f4 farpush bx
 	001786fc setfuncargs 0x1
 	00178704 mov ax,0xa66f20
 	00178710 farcall ax
 	00178718 farsubsp 0x1
 	00178720 pop op
 	00178728 sourceline 0x176f
 	00178730 mov ax,0x50
 	0017873c push ax
 	00178744 mov ax,0x1e
 	00178750 push ax
 	00178758 mov ax,0x10445c
 	00178764 call ax
 	0017876c sub sp,0x8
 	00178778 mov mar,0x4e6f20
 	00178784 memwrite4 ax
 	0017878c sourceline 0x1770
 	00178794 mov ax,0x1
 	001787a0 mov mar,0x4aef20
 	001787ac memwrite4 ax
		001787b4: FALL_THROUGH

	[001787b4]
		00177cc4: UNCONDITIONAL_JUMP
		00177d18: FALL_THROUGH
 	001787b4 sourceline 0x1772
 	001787bc jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[001787c4]
		00177bf4: CONDITIONAL_JUMP
 	001787c4 sourceline 0x1774
 	001787cc mov mar,0x3cef20
 	001787d8 mov ax,mar
 	001787e4 push op
 	001787ec mov op,ax
 	001787f4 setfuncargs 0x0
 	001787fc mov ax,0x89ef20
 	00178808 farcall ax
 	00178810 pop op
 	00178818 push ax
 	00178820 mov mar,0x98ef20
 	0017882c mov ax,mar
 	00178838 pop bx
 	00178840 cmpeq bx,ax
 	0017884c mov ax,bx
 	00178858 jz 0x00179324
		00179324: CONDITIONAL_JUMP
		00178860: FALL_THROUGH

	[00178860]
		001787c4: FALL_THROUGH
 	00178860 sourceline 0x1776
 	00178868 setfuncargs 0x0
 	00178870 mov ax,0x6def20
 	0017887c farcall ax
 	00178884 lnot ax
 	0017888c jz 0x001788e8
		001788e8: CONDITIONAL_JUMP
		00178894: FALL_THROUGH

	[00178894]
		00178860: FALL_THROUGH
 	00178894 mov ax,0x82
 	001788a0 farpush ax
 	001788a8 mov ax,0x86
 	001788b4 farpush ax
 	001788bc setfuncargs 0x2
 	001788c4 mov ax,0x6e6f20
 	001788d0 farcall ax
 	001788d8 farsubsp 0x2
 	001788e0 jmp 0x00179314
		00179314: UNCONDITIONAL_JUMP

	[001788e8]
		00178860: CONDITIONAL_JUMP
 	001788e8 sourceline 0x1779
 	001788f0 mov ax,0x0
 	001788fc push ax
 	00178904 mov ax,0x1
 	00178910 assertlte ax,0x32
 	0017891c mul ax,0x8
 	00178928 mov cx,ax
 	00178934 pop ax
 	0017893c mov bx,ax
 	00178948 mov mar,0x6c6f20
 	00178954 add mar,cx
 	00178960 mov ax,mar
 	0017896c push op
 	00178974 mov op,ax
 	0017897c farpush bx
 	00178984 setfuncargs 0x1
 	0017898c mov ax,0xa66f20
 	00178998 farcall ax
 	001789a0 farsubsp 0x1
 	001789a8 pop op
 	001789b0 sourceline 0x177a
 	001789b8 mov ax,0x3
 	001789c4 mov bx,ax
 	001789d0 mov mar,0x3cef20
 	001789dc mov ax,mar
 	001789e8 push op
 	001789f0 mov op,ax
 	001789f8 farpush bx
 	00178a00 setfuncargs 0x1
 	00178a08 mov ax,0x69ef20
 	00178a14 farcall ax
 	00178a1c farsubsp 0x1
 	00178a24 pop op
 	00178a2c sourceline 0x177b
 	00178a34 push op
 	00178a3c mov ax,0x397
 	00178a48 farpush ax
 	00178a50 mov ax,0x1
 	00178a5c farpush ax
 	00178a64 mov mar,0x3cef20
 	00178a70 mov ax,mar
 	00178a7c mov op,ax
 	00178a84 setfuncargs 0x2
 	00178a8c mov ax,0x6eef20
 	00178a98 farcall ax
 	00178aa0 farsubsp 0x2
 	00178aa8 pop op
 	00178ab0 sourceline 0x177c
 	00178ab8 mov ax,0x104654
 	00178ac4 call ax
 	00178acc sourceline 0x177d
 	00178ad4 push op
 	00178adc mov ax,0x6
 	00178ae8 farpush ax
 	00178af0 mov mar,0x3cef20
 	00178afc mov ax,mar
 	00178b08 mov op,ax
 	00178b10 setfuncargs 0x1
 	00178b18 mov ax,0x51ef20
 	00178b24 farcall ax
 	00178b2c farsubsp 0x1
 	00178b34 pop op
 	00178b3c sourceline 0x177e
 	00178b44 mov ax,0x7a
 	00178b50 mov bx,ax
 	00178b5c mov mar,0x3cef20
 	00178b68 mov ax,mar
 	00178b74 push op
 	00178b7c mov op,ax
 	00178b84 farpush bx
 	00178b8c setfuncargs 0x1
 	00178b94 mov ax,0x526f20
 	00178ba0 farcall ax
 	00178ba8 farsubsp 0x1
 	00178bb0 pop op
 	00178bb8 sourceline 0x177f
 	00178bc0 mov ax,0x7e
 	00178bcc mov bx,ax
 	00178bd8 mov mar,0x3cef20
 	00178be4 mov ax,mar
 	00178bf0 push op
 	00178bf8 mov op,ax
 	00178c00 farpush bx
 	00178c08 setfuncargs 0x1
 	00178c10 mov ax,0x70ef20
 	00178c1c farcall ax
 	00178c24 farsubsp 0x1
 	00178c2c pop op
 	00178c34 sourceline 0x1780
 	00178c3c push op
 	00178c44 mov ax,0x426
 	00178c50 farpush ax
 	00178c58 mov ax,0x397
 	00178c64 farpush ax
 	00178c6c mov ax,0x0
 	00178c78 farpush ax
 	00178c80 mov ax,0x3
 	00178c8c farpush ax
 	00178c94 mov ax,0x2
 	00178ca0 farpush ax
 	00178ca8 mov mar,0x3cef20
 	00178cb4 mov ax,mar
 	00178cc0 mov op,ax
 	00178cc8 setfuncargs 0x5
 	00178cd0 mov ax,0x536f20
 	00178cdc farcall ax
 	00178ce4 farsubsp 0x5
 	00178cec pop op
 	00178cf4 sourceline 0x1783
 	00178cfc push op
 	00178d04 mov ax,0x2bf728
 	00178d10 farpush ax
 	00178d18 mov mar,0x506f20
 	00178d24 mov ax,mar
 	00178d30 mov op,ax
 	00178d38 setfuncargs 0x1
 	00178d40 mov ax,0x6f6f20
 	00178d4c farcall ax
 	00178d54 farsubsp 0x1
 	00178d5c pop op
 	00178d64 sourceline 0x1784
 	00178d6c push op
 	00178d74 mov ax,0x427
 	00178d80 farpush ax
 	00178d88 mov ax,0x398
 	00178d94 farpush ax
 	00178d9c mov ax,0x0
 	00178da8 farpush ax
 	00178db0 mov ax,0x3
 	00178dbc farpush ax
 	00178dc4 mov ax,0x0
 	00178dd0 farpush ax
 	00178dd8 mov mar,0x506f20
 	00178de4 mov ax,mar
 	00178df0 mov op,ax
 	00178df8 setfuncargs 0x5
 	00178e00 mov ax,0x536f20
 	00178e0c farcall ax
 	00178e14 farsubsp 0x5
 	00178e1c pop op
 	00178e24 sourceline 0x1785
 	00178e2c push op
 	00178e34 mov ax,0x427
 	00178e40 farpush ax
 	00178e48 mov ax,0x397
 	00178e54 farpush ax
 	00178e5c mov ax,0x0
 	00178e68 farpush ax
 	00178e70 mov ax,0x3
 	00178e7c farpush ax
 	00178e84 mov ax,0x2
 	00178e90 farpush ax
 	00178e98 mov mar,0x3cef20
 	00178ea4 mov ax,mar
 	00178eb0 mov op,ax
 	00178eb8 setfuncargs 0x5
 	00178ec0 mov ax,0x536f20
 	00178ecc farcall ax
 	00178ed4 farsubsp 0x5
 	00178edc pop op
 	00178ee4 sourceline 0x1786
 	00178eec push op
 	00178ef4 mov ax,0x2
 	00178f00 farpush ax
 	00178f08 mov mar,0x3cef20
 	00178f14 mov ax,mar
 	00178f20 mov op,ax
 	00178f28 setfuncargs 0x1
 	00178f30 mov ax,0x51ef20
 	00178f3c farcall ax
 	00178f44 farsubsp 0x1
 	00178f4c pop op
 	00178f54 sourceline 0x1787
 	00178f5c mov ax,0x1
 	00178f68 mov bx,ax
 	00178f74 mov mar,0x3cef20
 	00178f80 mov ax,mar
 	00178f8c push op
 	00178f94 mov op,ax
 	00178f9c farpush bx
 	00178fa4 setfuncargs 0x1
 	00178fac mov ax,0x766f20
 	00178fb8 farcall ax
 	00178fc0 farsubsp 0x1
 	00178fc8 pop op
 	00178fd0 sourceline 0x1788
 	00178fd8 mov ax,0x86
 	00178fe4 mov bx,ax
 	00178ff0 mov mar,0x3cef20
 	00178ffc mov ax,mar
 	00179008 push op
 	00179010 mov op,ax
 	00179018 farpush bx
 	00179020 setfuncargs 0x1
 	00179028 mov ax,0x70ef20
 	00179034 farcall ax
 	0017903c farsubsp 0x1
 	00179044 pop op
 	0017904c sourceline 0x1789
 	00179054 mov ax,0x82
 	00179060 mov bx,ax
 	0017906c mov mar,0x3cef20
 	00179078 mov ax,mar
 	00179084 push op
 	0017908c mov op,ax
 	00179094 farpush bx
 	0017909c setfuncargs 0x1
 	001790a4 mov ax,0x526f20
 	001790b0 farcall ax
 	001790b8 farsubsp 0x1
 	001790c0 pop op
 	001790c8 sourceline 0x178a
 	001790d0 mov ax,0x0
 	001790dc mov bx,ax
 	001790e8 mov mar,0x3cef20
 	001790f4 mov ax,mar
 	00179100 push op
 	00179108 mov op,ax
 	00179110 farpush bx
 	00179118 setfuncargs 0x1
 	00179120 mov ax,0x436f20
 	0017912c farcall ax
 	00179134 farsubsp 0x1
 	0017913c pop op
 	00179144 sourceline 0x178b
 	0017914c mov ax,0x1
 	00179158 mov bx,ax
 	00179164 mov mar,0x3cef20
 	00179170 mov ax,mar
 	0017917c push op
 	00179184 mov op,ax
 	0017918c farpush bx
 	00179194 setfuncargs 0x1
 	0017919c mov ax,0x69ef20
 	001791a8 farcall ax
 	001791b0 farsubsp 0x1
 	001791b8 pop op
 	001791c0 sourceline 0x178c
 	001791c8 mov ax,0x1
 	001791d4 push ax
 	001791dc mov ax,0x1
 	001791e8 assertlte ax,0x32
 	001791f4 mul ax,0x8
 	00179200 mov cx,ax
 	0017920c pop ax
 	00179214 mov bx,ax
 	00179220 mov mar,0x6c6f20
 	0017922c add mar,cx
 	00179238 mov ax,mar
 	00179244 push op
 	0017924c mov op,ax
 	00179254 farpush bx
 	0017925c setfuncargs 0x1
 	00179264 mov ax,0xa66f20
 	00179270 farcall ax
 	00179278 farsubsp 0x1
 	00179280 pop op
 	00179288 sourceline 0x178d
 	00179290 mov ax,0x50
 	0017929c push ax
 	001792a4 mov ax,0x1e
 	001792b0 push ax
 	001792b8 mov ax,0x10445c
 	001792c4 call ax
 	001792cc sub sp,0x8
 	001792d8 mov mar,0x4e6f20
 	001792e4 memwrite4 ax
 	001792ec sourceline 0x178e
 	001792f4 mov ax,0x1
 	00179300 mov mar,0x4aef20
 	0017930c memwrite4 ax
		00179314: FALL_THROUGH

	[00179314]
		00178894: UNCONDITIONAL_JUMP
		001788e8: FALL_THROUGH
 	00179314 sourceline 0x1790
 	0017931c jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00179324]
		001787c4: CONDITIONAL_JUMP
 	00179324 sourceline 0x1792
 	0017932c mov mar,0x3cef20
 	00179338 mov ax,mar
 	00179344 push op
 	0017934c mov op,ax
 	00179354 setfuncargs 0x0
 	0017935c mov ax,0x89ef20
 	00179368 farcall ax
 	00179370 pop op
 	00179378 push ax
 	00179380 mov mar,0x8bef20
 	0017938c mov ax,mar
 	00179398 pop bx
 	001793a0 cmpeq bx,ax
 	001793ac mov ax,bx
 	001793b8 jz 0x00179ef4
		00179ef4: CONDITIONAL_JUMP
		001793c0: FALL_THROUGH

	[001793c0]
		00179324: FALL_THROUGH
 	001793c0 sourceline 0x1794
 	001793c8 setfuncargs 0x0
 	001793d0 mov ax,0x6def20
 	001793dc farcall ax
 	001793e4 lnot ax
 	001793ec jz 0x00179448
		00179448: CONDITIONAL_JUMP
		001793f4: FALL_THROUGH

	[001793f4]
		001793c0: FALL_THROUGH
 	001793f4 mov ax,0x82
 	00179400 farpush ax
 	00179408 mov ax,0x86
 	00179414 farpush ax
 	0017941c setfuncargs 0x2
 	00179424 mov ax,0x6e6f20
 	00179430 farcall ax
 	00179438 farsubsp 0x2
 	00179440 jmp 0x00179ee4
		00179ee4: UNCONDITIONAL_JUMP

	[00179448]
		001793c0: CONDITIONAL_JUMP
 	00179448 sourceline 0x1797
 	00179450 mov ax,0x0
 	0017945c push ax
 	00179464 mov ax,0x1
 	00179470 assertlte ax,0x32
 	0017947c mul ax,0x8
 	00179488 mov cx,ax
 	00179494 pop ax
 	0017949c mov bx,ax
 	001794a8 mov mar,0x6c6f20
 	001794b4 add mar,cx
 	001794c0 mov ax,mar
 	001794cc push op
 	001794d4 mov op,ax
 	001794dc farpush bx
 	001794e4 setfuncargs 0x1
 	001794ec mov ax,0xa66f20
 	001794f8 farcall ax
 	00179500 farsubsp 0x1
 	00179508 pop op
 	00179510 sourceline 0x1798
 	00179518 mov ax,0x3
 	00179524 mov bx,ax
 	00179530 mov mar,0x3cef20
 	0017953c mov ax,mar
 	00179548 push op
 	00179550 mov op,ax
 	00179558 farpush bx
 	00179560 setfuncargs 0x1
 	00179568 mov ax,0x69ef20
 	00179574 farcall ax
 	0017957c farsubsp 0x1
 	00179584 pop op
 	0017958c sourceline 0x1799
 	00179594 push op
 	0017959c mov ax,0x397
 	001795a8 farpush ax
 	001795b0 mov ax,0x1
 	001795bc farpush ax
 	001795c4 mov mar,0x3cef20
 	001795d0 mov ax,mar
 	001795dc mov op,ax
 	001795e4 setfuncargs 0x2
 	001795ec mov ax,0x6eef20
 	001795f8 farcall ax
 	00179600 farsubsp 0x2
 	00179608 pop op
 	00179610 sourceline 0x179a
 	00179618 mov ax,0x104654
 	00179624 call ax
 	0017962c sourceline 0x179b
 	00179634 push op
 	0017963c mov ax,0x6
 	00179648 farpush ax
 	00179650 mov mar,0x3cef20
 	0017965c mov ax,mar
 	00179668 mov op,ax
 	00179670 setfuncargs 0x1
 	00179678 mov ax,0x51ef20
 	00179684 farcall ax
 	0017968c farsubsp 0x1
 	00179694 pop op
 	0017969c sourceline 0x179c
 	001796a4 mov ax,0x7a
 	001796b0 mov bx,ax
 	001796bc mov mar,0x3cef20
 	001796c8 mov ax,mar
 	001796d4 push op
 	001796dc mov op,ax
 	001796e4 farpush bx
 	001796ec setfuncargs 0x1
 	001796f4 mov ax,0x526f20
 	00179700 farcall ax
 	00179708 farsubsp 0x1
 	00179710 pop op
 	00179718 sourceline 0x179d
 	00179720 mov ax,0x7e
 	0017972c mov bx,ax
 	00179738 mov mar,0x3cef20
 	00179744 mov ax,mar
 	00179750 push op
 	00179758 mov op,ax
 	00179760 farpush bx
 	00179768 setfuncargs 0x1
 	00179770 mov ax,0x70ef20
 	0017977c farcall ax
 	00179784 farsubsp 0x1
 	0017978c pop op
 	00179794 sourceline 0x179e
 	0017979c push op
 	001797a4 mov ax,0x426
 	001797b0 farpush ax
 	001797b8 mov ax,0x397
 	001797c4 farpush ax
 	001797cc mov ax,0x0
 	001797d8 farpush ax
 	001797e0 mov ax,0x3
 	001797ec farpush ax
 	001797f4 mov ax,0x2
 	00179800 farpush ax
 	00179808 mov mar,0x3cef20
 	00179814 mov ax,mar
 	00179820 mov op,ax
 	00179828 setfuncargs 0x5
 	00179830 mov ax,0x536f20
 	0017983c farcall ax
 	00179844 farsubsp 0x5
 	0017984c pop op
 	00179854 sourceline 0x17a1
 	0017985c push op
 	00179864 mov ax,0x2bf764
 	00179870 farpush ax
 	00179878 mov mar,0x3cef20
 	00179884 mov ax,mar
 	00179890 mov op,ax
 	00179898 setfuncargs 0x1
 	001798a0 mov ax,0x6f6f20
 	001798ac farcall ax
 	001798b4 farsubsp 0x1
 	001798bc pop op
 	001798c4 sourceline 0x17a2
 	001798cc push op
 	001798d4 mov ax,0x2bf78a
 	001798e0 farpush ax
 	001798e8 mov mar,0x506f20
 	001798f4 mov ax,mar
 	00179900 mov op,ax
 	00179908 setfuncargs 0x1
 	00179910 mov ax,0x6f6f20
 	0017991c farcall ax
 	00179924 farsubsp 0x1
 	0017992c pop op
 	00179934 sourceline 0x17a3
 	0017993c push op
 	00179944 mov ax,0x427
 	00179950 farpush ax
 	00179958 mov ax,0x398
 	00179964 farpush ax
 	0017996c mov ax,0x0
 	00179978 farpush ax
 	00179980 mov ax,0x3
 	0017998c farpush ax
 	00179994 mov ax,0x0
 	001799a0 farpush ax
 	001799a8 mov mar,0x506f20
 	001799b4 mov ax,mar
 	001799c0 mov op,ax
 	001799c8 setfuncargs 0x5
 	001799d0 mov ax,0x536f20
 	001799dc farcall ax
 	001799e4 farsubsp 0x5
 	001799ec pop op
 	001799f4 sourceline 0x17a4
 	001799fc push op
 	00179a04 mov ax,0x427
 	00179a10 farpush ax
 	00179a18 mov ax,0x397
 	00179a24 farpush ax
 	00179a2c mov ax,0x0
 	00179a38 farpush ax
 	00179a40 mov ax,0x3
 	00179a4c farpush ax
 	00179a54 mov ax,0x2
 	00179a60 farpush ax
 	00179a68 mov mar,0x3cef20
 	00179a74 mov ax,mar
 	00179a80 mov op,ax
 	00179a88 setfuncargs 0x5
 	00179a90 mov ax,0x536f20
 	00179a9c farcall ax
 	00179aa4 farsubsp 0x5
 	00179aac pop op
 	00179ab4 sourceline 0x17a5
 	00179abc push op
 	00179ac4 mov ax,0x2
 	00179ad0 farpush ax
 	00179ad8 mov mar,0x3cef20
 	00179ae4 mov ax,mar
 	00179af0 mov op,ax
 	00179af8 setfuncargs 0x1
 	00179b00 mov ax,0x51ef20
 	00179b0c farcall ax
 	00179b14 farsubsp 0x1
 	00179b1c pop op
 	00179b24 sourceline 0x17a6
 	00179b2c mov ax,0x1
 	00179b38 mov bx,ax
 	00179b44 mov mar,0x3cef20
 	00179b50 mov ax,mar
 	00179b5c push op
 	00179b64 mov op,ax
 	00179b6c farpush bx
 	00179b74 setfuncargs 0x1
 	00179b7c mov ax,0x766f20
 	00179b88 farcall ax
 	00179b90 farsubsp 0x1
 	00179b98 pop op
 	00179ba0 sourceline 0x17a7
 	00179ba8 mov ax,0x86
 	00179bb4 mov bx,ax
 	00179bc0 mov mar,0x3cef20
 	00179bcc mov ax,mar
 	00179bd8 push op
 	00179be0 mov op,ax
 	00179be8 farpush bx
 	00179bf0 setfuncargs 0x1
 	00179bf8 mov ax,0x70ef20
 	00179c04 farcall ax
 	00179c0c farsubsp 0x1
 	00179c14 pop op
 	00179c1c sourceline 0x17a8
 	00179c24 mov ax,0x82
 	00179c30 mov bx,ax
 	00179c3c mov mar,0x3cef20
 	00179c48 mov ax,mar
 	00179c54 push op
 	00179c5c mov op,ax
 	00179c64 farpush bx
 	00179c6c setfuncargs 0x1
 	00179c74 mov ax,0x526f20
 	00179c80 farcall ax
 	00179c88 farsubsp 0x1
 	00179c90 pop op
 	00179c98 sourceline 0x17a9
 	00179ca0 mov ax,0x0
 	00179cac mov bx,ax
 	00179cb8 mov mar,0x3cef20
 	00179cc4 mov ax,mar
 	00179cd0 push op
 	00179cd8 mov op,ax
 	00179ce0 farpush bx
 	00179ce8 setfuncargs 0x1
 	00179cf0 mov ax,0x436f20
 	00179cfc farcall ax
 	00179d04 farsubsp 0x1
 	00179d0c pop op
 	00179d14 sourceline 0x17aa
 	00179d1c mov ax,0x1
 	00179d28 mov bx,ax
 	00179d34 mov mar,0x3cef20
 	00179d40 mov ax,mar
 	00179d4c push op
 	00179d54 mov op,ax
 	00179d5c farpush bx
 	00179d64 setfuncargs 0x1
 	00179d6c mov ax,0x69ef20
 	00179d78 farcall ax
 	00179d80 farsubsp 0x1
 	00179d88 pop op
 	00179d90 sourceline 0x17ab
 	00179d98 mov ax,0x1
 	00179da4 push ax
 	00179dac mov ax,0x1
 	00179db8 assertlte ax,0x32
 	00179dc4 mul ax,0x8
 	00179dd0 mov cx,ax
 	00179ddc pop ax
 	00179de4 mov bx,ax
 	00179df0 mov mar,0x6c6f20
 	00179dfc add mar,cx
 	00179e08 mov ax,mar
 	00179e14 push op
 	00179e1c mov op,ax
 	00179e24 farpush bx
 	00179e2c setfuncargs 0x1
 	00179e34 mov ax,0xa66f20
 	00179e40 farcall ax
 	00179e48 farsubsp 0x1
 	00179e50 pop op
 	00179e58 sourceline 0x17ac
 	00179e60 mov ax,0x50
 	00179e6c push ax
 	00179e74 mov ax,0x1e
 	00179e80 push ax
 	00179e88 mov ax,0x10445c
 	00179e94 call ax
 	00179e9c sub sp,0x8
 	00179ea8 mov mar,0x4e6f20
 	00179eb4 memwrite4 ax
 	00179ebc sourceline 0x17ad
 	00179ec4 mov ax,0x1
 	00179ed0 mov mar,0x4aef20
 	00179edc memwrite4 ax
		00179ee4: FALL_THROUGH

	[00179ee4]
		001793f4: UNCONDITIONAL_JUMP
		00179448: FALL_THROUGH
 	00179ee4 sourceline 0x17af
 	00179eec jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00179ef4]
		00179324: CONDITIONAL_JUMP
 	00179ef4 sourceline 0x17b1
 	00179efc mov mar,0x3cef20
 	00179f08 mov ax,mar
 	00179f14 push op
 	00179f1c mov op,ax
 	00179f24 setfuncargs 0x0
 	00179f2c mov ax,0x89ef20
 	00179f38 farcall ax
 	00179f40 pop op
 	00179f48 push ax
 	00179f50 mov mar,0x8c6f20
 	00179f5c mov ax,mar
 	00179f68 pop bx
 	00179f70 cmpeq bx,ax
 	00179f7c mov ax,bx
 	00179f88 jz 0x0017aac4
		0017aac4: CONDITIONAL_JUMP
		00179f90: FALL_THROUGH

	[00179f90]
		00179ef4: FALL_THROUGH
 	00179f90 sourceline 0x17b3
 	00179f98 setfuncargs 0x0
 	00179fa0 mov ax,0x6def20
 	00179fac farcall ax
 	00179fb4 lnot ax
 	00179fbc jz 0x0017a018
		0017a018: CONDITIONAL_JUMP
		00179fc4: FALL_THROUGH

	[00179fc4]
		00179f90: FALL_THROUGH
 	00179fc4 mov ax,0x82
 	00179fd0 farpush ax
 	00179fd8 mov ax,0x86
 	00179fe4 farpush ax
 	00179fec setfuncargs 0x2
 	00179ff4 mov ax,0x6e6f20
 	0017a000 farcall ax
 	0017a008 farsubsp 0x2
 	0017a010 jmp 0x0017aab4
		0017aab4: UNCONDITIONAL_JUMP

	[0017a018]
		00179f90: CONDITIONAL_JUMP
 	0017a018 sourceline 0x17b6
 	0017a020 mov ax,0x0
 	0017a02c push ax
 	0017a034 mov ax,0x1
 	0017a040 assertlte ax,0x32
 	0017a04c mul ax,0x8
 	0017a058 mov cx,ax
 	0017a064 pop ax
 	0017a06c mov bx,ax
 	0017a078 mov mar,0x6c6f20
 	0017a084 add mar,cx
 	0017a090 mov ax,mar
 	0017a09c push op
 	0017a0a4 mov op,ax
 	0017a0ac farpush bx
 	0017a0b4 setfuncargs 0x1
 	0017a0bc mov ax,0xa66f20
 	0017a0c8 farcall ax
 	0017a0d0 farsubsp 0x1
 	0017a0d8 pop op
 	0017a0e0 sourceline 0x17b7
 	0017a0e8 mov ax,0x3
 	0017a0f4 mov bx,ax
 	0017a100 mov mar,0x3cef20
 	0017a10c mov ax,mar
 	0017a118 push op
 	0017a120 mov op,ax
 	0017a128 farpush bx
 	0017a130 setfuncargs 0x1
 	0017a138 mov ax,0x69ef20
 	0017a144 farcall ax
 	0017a14c farsubsp 0x1
 	0017a154 pop op
 	0017a15c sourceline 0x17b8
 	0017a164 push op
 	0017a16c mov ax,0x397
 	0017a178 farpush ax
 	0017a180 mov ax,0x1
 	0017a18c farpush ax
 	0017a194 mov mar,0x3cef20
 	0017a1a0 mov ax,mar
 	0017a1ac mov op,ax
 	0017a1b4 setfuncargs 0x2
 	0017a1bc mov ax,0x6eef20
 	0017a1c8 farcall ax
 	0017a1d0 farsubsp 0x2
 	0017a1d8 pop op
 	0017a1e0 sourceline 0x17b9
 	0017a1e8 mov ax,0x104654
 	0017a1f4 call ax
 	0017a1fc sourceline 0x17ba
 	0017a204 push op
 	0017a20c mov ax,0x6
 	0017a218 farpush ax
 	0017a220 mov mar,0x3cef20
 	0017a22c mov ax,mar
 	0017a238 mov op,ax
 	0017a240 setfuncargs 0x1
 	0017a248 mov ax,0x51ef20
 	0017a254 farcall ax
 	0017a25c farsubsp 0x1
 	0017a264 pop op
 	0017a26c sourceline 0x17bb
 	0017a274 mov ax,0x7a
 	0017a280 mov bx,ax
 	0017a28c mov mar,0x3cef20
 	0017a298 mov ax,mar
 	0017a2a4 push op
 	0017a2ac mov op,ax
 	0017a2b4 farpush bx
 	0017a2bc setfuncargs 0x1
 	0017a2c4 mov ax,0x526f20
 	0017a2d0 farcall ax
 	0017a2d8 farsubsp 0x1
 	0017a2e0 pop op
 	0017a2e8 sourceline 0x17bc
 	0017a2f0 mov ax,0x7e
 	0017a2fc mov bx,ax
 	0017a308 mov mar,0x3cef20
 	0017a314 mov ax,mar
 	0017a320 push op
 	0017a328 mov op,ax
 	0017a330 farpush bx
 	0017a338 setfuncargs 0x1
 	0017a340 mov ax,0x70ef20
 	0017a34c farcall ax
 	0017a354 farsubsp 0x1
 	0017a35c pop op
 	0017a364 sourceline 0x17bd
 	0017a36c push op
 	0017a374 mov ax,0x426
 	0017a380 farpush ax
 	0017a388 mov ax,0x397
 	0017a394 farpush ax
 	0017a39c mov ax,0x0
 	0017a3a8 farpush ax
 	0017a3b0 mov ax,0x3
 	0017a3bc farpush ax
 	0017a3c4 mov ax,0x2
 	0017a3d0 farpush ax
 	0017a3d8 mov mar,0x3cef20
 	0017a3e4 mov ax,mar
 	0017a3f0 mov op,ax
 	0017a3f8 setfuncargs 0x5
 	0017a400 mov ax,0x536f20
 	0017a40c farcall ax
 	0017a414 farsubsp 0x5
 	0017a41c pop op
 	0017a424 sourceline 0x17c0
 	0017a42c push op
 	0017a434 mov ax,0x2bf7cc
 	0017a440 farpush ax
 	0017a448 mov mar,0x3cef20
 	0017a454 mov ax,mar
 	0017a460 mov op,ax
 	0017a468 setfuncargs 0x1
 	0017a470 mov ax,0x6f6f20
 	0017a47c farcall ax
 	0017a484 farsubsp 0x1
 	0017a48c pop op
 	0017a494 sourceline 0x17c1
 	0017a49c push op
 	0017a4a4 mov ax,0x2bf7eb
 	0017a4b0 farpush ax
 	0017a4b8 mov mar,0x506f20
 	0017a4c4 mov ax,mar
 	0017a4d0 mov op,ax
 	0017a4d8 setfuncargs 0x1
 	0017a4e0 mov ax,0x6f6f20
 	0017a4ec farcall ax
 	0017a4f4 farsubsp 0x1
 	0017a4fc pop op
 	0017a504 sourceline 0x17c2
 	0017a50c push op
 	0017a514 mov ax,0x427
 	0017a520 farpush ax
 	0017a528 mov ax,0x398
 	0017a534 farpush ax
 	0017a53c mov ax,0x0
 	0017a548 farpush ax
 	0017a550 mov ax,0x3
 	0017a55c farpush ax
 	0017a564 mov ax,0x0
 	0017a570 farpush ax
 	0017a578 mov mar,0x506f20
 	0017a584 mov ax,mar
 	0017a590 mov op,ax
 	0017a598 setfuncargs 0x5
 	0017a5a0 mov ax,0x536f20
 	0017a5ac farcall ax
 	0017a5b4 farsubsp 0x5
 	0017a5bc pop op
 	0017a5c4 sourceline 0x17c3
 	0017a5cc push op
 	0017a5d4 mov ax,0x427
 	0017a5e0 farpush ax
 	0017a5e8 mov ax,0x397
 	0017a5f4 farpush ax
 	0017a5fc mov ax,0x0
 	0017a608 farpush ax
 	0017a610 mov ax,0x3
 	0017a61c farpush ax
 	0017a624 mov ax,0x2
 	0017a630 farpush ax
 	0017a638 mov mar,0x3cef20
 	0017a644 mov ax,mar
 	0017a650 mov op,ax
 	0017a658 setfuncargs 0x5
 	0017a660 mov ax,0x536f20
 	0017a66c farcall ax
 	0017a674 farsubsp 0x5
 	0017a67c pop op
 	0017a684 sourceline 0x17c4
 	0017a68c push op
 	0017a694 mov ax,0x2
 	0017a6a0 farpush ax
 	0017a6a8 mov mar,0x3cef20
 	0017a6b4 mov ax,mar
 	0017a6c0 mov op,ax
 	0017a6c8 setfuncargs 0x1
 	0017a6d0 mov ax,0x51ef20
 	0017a6dc farcall ax
 	0017a6e4 farsubsp 0x1
 	0017a6ec pop op
 	0017a6f4 sourceline 0x17c5
 	0017a6fc mov ax,0x1
 	0017a708 mov bx,ax
 	0017a714 mov mar,0x3cef20
 	0017a720 mov ax,mar
 	0017a72c push op
 	0017a734 mov op,ax
 	0017a73c farpush bx
 	0017a744 setfuncargs 0x1
 	0017a74c mov ax,0x766f20
 	0017a758 farcall ax
 	0017a760 farsubsp 0x1
 	0017a768 pop op
 	0017a770 sourceline 0x17c6
 	0017a778 mov ax,0x86
 	0017a784 mov bx,ax
 	0017a790 mov mar,0x3cef20
 	0017a79c mov ax,mar
 	0017a7a8 push op
 	0017a7b0 mov op,ax
 	0017a7b8 farpush bx
 	0017a7c0 setfuncargs 0x1
 	0017a7c8 mov ax,0x70ef20
 	0017a7d4 farcall ax
 	0017a7dc farsubsp 0x1
 	0017a7e4 pop op
 	0017a7ec sourceline 0x17c7
 	0017a7f4 mov ax,0x82
 	0017a800 mov bx,ax
 	0017a80c mov mar,0x3cef20
 	0017a818 mov ax,mar
 	0017a824 push op
 	0017a82c mov op,ax
 	0017a834 farpush bx
 	0017a83c setfuncargs 0x1
 	0017a844 mov ax,0x526f20
 	0017a850 farcall ax
 	0017a858 farsubsp 0x1
 	0017a860 pop op
 	0017a868 sourceline 0x17c8
 	0017a870 mov ax,0x0
 	0017a87c mov bx,ax
 	0017a888 mov mar,0x3cef20
 	0017a894 mov ax,mar
 	0017a8a0 push op
 	0017a8a8 mov op,ax
 	0017a8b0 farpush bx
 	0017a8b8 setfuncargs 0x1
 	0017a8c0 mov ax,0x436f20
 	0017a8cc farcall ax
 	0017a8d4 farsubsp 0x1
 	0017a8dc pop op
 	0017a8e4 sourceline 0x17c9
 	0017a8ec mov ax,0x1
 	0017a8f8 mov bx,ax
 	0017a904 mov mar,0x3cef20
 	0017a910 mov ax,mar
 	0017a91c push op
 	0017a924 mov op,ax
 	0017a92c farpush bx
 	0017a934 setfuncargs 0x1
 	0017a93c mov ax,0x69ef20
 	0017a948 farcall ax
 	0017a950 farsubsp 0x1
 	0017a958 pop op
 	0017a960 sourceline 0x17ca
 	0017a968 mov ax,0x1
 	0017a974 push ax
 	0017a97c mov ax,0x1
 	0017a988 assertlte ax,0x32
 	0017a994 mul ax,0x8
 	0017a9a0 mov cx,ax
 	0017a9ac pop ax
 	0017a9b4 mov bx,ax
 	0017a9c0 mov mar,0x6c6f20
 	0017a9cc add mar,cx
 	0017a9d8 mov ax,mar
 	0017a9e4 push op
 	0017a9ec mov op,ax
 	0017a9f4 farpush bx
 	0017a9fc setfuncargs 0x1
 	0017aa04 mov ax,0xa66f20
 	0017aa10 farcall ax
 	0017aa18 farsubsp 0x1
 	0017aa20 pop op
 	0017aa28 sourceline 0x17cb
 	0017aa30 mov ax,0x50
 	0017aa3c push ax
 	0017aa44 mov ax,0x1e
 	0017aa50 push ax
 	0017aa58 mov ax,0x10445c
 	0017aa64 call ax
 	0017aa6c sub sp,0x8
 	0017aa78 mov mar,0x4e6f20
 	0017aa84 memwrite4 ax
 	0017aa8c sourceline 0x17cc
 	0017aa94 mov ax,0x1
 	0017aaa0 mov mar,0x4aef20
 	0017aaac memwrite4 ax
		0017aab4: FALL_THROUGH

	[0017aab4]
		00179fc4: UNCONDITIONAL_JUMP
		0017a018: FALL_THROUGH
 	0017aab4 sourceline 0x17ce
 	0017aabc jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[0017aac4]
		00179ef4: CONDITIONAL_JUMP
 	0017aac4 sourceline 0x17d0
 	0017aacc mov mar,0x3cef20
 	0017aad8 mov ax,mar
 	0017aae4 push op
 	0017aaec mov op,ax
 	0017aaf4 setfuncargs 0x0
 	0017aafc mov ax,0x89ef20
 	0017ab08 farcall ax
 	0017ab10 pop op
 	0017ab18 push ax
 	0017ab20 mov mar,0x7cef20
 	0017ab2c mov ax,mar
 	0017ab38 pop bx
 	0017ab40 cmpeq bx,ax
 	0017ab4c mov ax,bx
 	0017ab58 jz 0x0017b694
		0017b694: CONDITIONAL_JUMP
		0017ab60: FALL_THROUGH

	[0017ab60]
		0017aac4: FALL_THROUGH
 	0017ab60 sourceline 0x17d2
 	0017ab68 setfuncargs 0x0
 	0017ab70 mov ax,0x6def20
 	0017ab7c farcall ax
 	0017ab84 lnot ax
 	0017ab8c jz 0x0017abe8
		0017abe8: CONDITIONAL_JUMP
		0017ab94: FALL_THROUGH

	[0017ab94]
		0017ab60: FALL_THROUGH
 	0017ab94 mov ax,0x82
 	0017aba0 farpush ax
 	0017aba8 mov ax,0x86
 	0017abb4 farpush ax
 	0017abbc setfuncargs 0x2
 	0017abc4 mov ax,0x6e6f20
 	0017abd0 farcall ax
 	0017abd8 farsubsp 0x2
 	0017abe0 jmp 0x0017b684
		0017b684: UNCONDITIONAL_JUMP

	[0017abe8]
		0017ab60: CONDITIONAL_JUMP
 	0017abe8 sourceline 0x17d5
 	0017abf0 mov ax,0x0
 	0017abfc push ax
 	0017ac04 mov ax,0x1
 	0017ac10 assertlte ax,0x32
 	0017ac1c mul ax,0x8
 	0017ac28 mov cx,ax
 	0017ac34 pop ax
 	0017ac3c mov bx,ax
 	0017ac48 mov mar,0x6c6f20
 	0017ac54 add mar,cx
 	0017ac60 mov ax,mar
 	0017ac6c push op
 	0017ac74 mov op,ax
 	0017ac7c farpush bx
 	0017ac84 setfuncargs 0x1
 	0017ac8c mov ax,0xa66f20
 	0017ac98 farcall ax
 	0017aca0 farsubsp 0x1
 	0017aca8 pop op
 	0017acb0 sourceline 0x17d6
 	0017acb8 mov ax,0x3
 	0017acc4 mov bx,ax
 	0017acd0 mov mar,0x3cef20
 	0017acdc mov ax,mar
 	0017ace8 push op
 	0017acf0 mov op,ax
 	0017acf8 farpush bx
 	0017ad00 setfuncargs 0x1
 	0017ad08 mov ax,0x69ef20
 	0017ad14 farcall ax
 	0017ad1c farsubsp 0x1
 	0017ad24 pop op
 	0017ad2c sourceline 0x17d7
 	0017ad34 push op
 	0017ad3c mov ax,0x397
 	0017ad48 farpush ax
 	0017ad50 mov ax,0x1
 	0017ad5c farpush ax
 	0017ad64 mov mar,0x3cef20
 	0017ad70 mov ax,mar
 	0017ad7c mov op,ax
 	0017ad84 setfuncargs 0x2
 	0017ad8c mov ax,0x6eef20
 	0017ad98 farcall ax
 	0017ada0 farsubsp 0x2
 	0017ada8 pop op
 	0017adb0 sourceline 0x17d8
 	0017adb8 mov ax,0x104654
 	0017adc4 call ax
 	0017adcc sourceline 0x17d9
 	0017add4 push op
 	0017addc mov ax,0x6
 	0017ade8 farpush ax
 	0017adf0 mov mar,0x3cef20
 	0017adfc mov ax,mar
 	0017ae08 mov op,ax
 	0017ae10 setfuncargs 0x1
 	0017ae18 mov ax,0x51ef20
 	0017ae24 farcall ax
 	0017ae2c farsubsp 0x1
 	0017ae34 pop op
 	0017ae3c sourceline 0x17da
 	0017ae44 mov ax,0x7a
 	0017ae50 mov bx,ax
 	0017ae5c mov mar,0x3cef20
 	0017ae68 mov ax,mar
 	0017ae74 push op
 	0017ae7c mov op,ax
 	0017ae84 farpush bx
 	0017ae8c setfuncargs 0x1
 	0017ae94 mov ax,0x526f20
 	0017aea0 farcall ax
 	0017aea8 farsubsp 0x1
 	0017aeb0 pop op
 	0017aeb8 sourceline 0x17db
 	0017aec0 mov ax,0x7e
 	0017aecc mov bx,ax
 	0017aed8 mov mar,0x3cef20
 	0017aee4 mov ax,mar
 	0017aef0 push op
 	0017aef8 mov op,ax
 	0017af00 farpush bx
 	0017af08 setfuncargs 0x1
 	0017af10 mov ax,0x70ef20
 	0017af1c farcall ax
 	0017af24 farsubsp 0x1
 	0017af2c pop op
 	0017af34 sourceline 0x17dc
 	0017af3c push op
 	0017af44 mov ax,0x426
 	0017af50 farpush ax
 	0017af58 mov ax,0x397
 	0017af64 farpush ax
 	0017af6c mov ax,0x0
 	0017af78 farpush ax
 	0017af80 mov ax,0x3
 	0017af8c farpush ax
 	0017af94 mov ax,0x2
 	0017afa0 farpush ax
 	0017afa8 mov mar,0x3cef20
 	0017afb4 mov ax,mar
 	0017afc0 mov op,ax
 	0017afc8 setfuncargs 0x5
 	0017afd0 mov ax,0x536f20
 	0017afdc farcall ax
 	0017afe4 farsubsp 0x5
 	0017afec pop op
 	0017aff4 sourceline 0x17df
 	0017affc push op
 	0017b004 mov ax,0x2bfe43
 	0017b010 farpush ax
 	0017b018 mov mar,0x3cef20
 	0017b024 mov ax,mar
 	0017b030 mov op,ax
 	0017b038 setfuncargs 0x1
 	0017b040 mov ax,0x6f6f20
 	0017b04c farcall ax
 	0017b054 farsubsp 0x1
 	0017b05c pop op
 	0017b064 sourceline 0x17e0
 	0017b06c push op
 	0017b074 mov ax,0x2bf881
 	0017b080 farpush ax
 	0017b088 mov mar,0x506f20
 	0017b094 mov ax,mar
 	0017b0a0 mov op,ax
 	0017b0a8 setfuncargs 0x1
 	0017b0b0 mov ax,0x6f6f20
 	0017b0bc farcall ax
 	0017b0c4 farsubsp 0x1
 	0017b0cc pop op
 	0017b0d4 sourceline 0x17e1
 	0017b0dc push op
 	0017b0e4 mov ax,0x427
 	0017b0f0 farpush ax
 	0017b0f8 mov ax,0x398
 	0017b104 farpush ax
 	0017b10c mov ax,0x0
 	0017b118 farpush ax
 	0017b120 mov ax,0x3
 	0017b12c farpush ax
 	0017b134 mov ax,0x0
 	0017b140 farpush ax
 	0017b148 mov mar,0x506f20
 	0017b154 mov ax,mar
 	0017b160 mov op,ax
 	0017b168 setfuncargs 0x5
 	0017b170 mov ax,0x536f20
 	0017b17c farcall ax
 	0017b184 farsubsp 0x5
 	0017b18c pop op
 	0017b194 sourceline 0x17e2
 	0017b19c push op
 	0017b1a4 mov ax,0x427
 	0017b1b0 farpush ax
 	0017b1b8 mov ax,0x397
 	0017b1c4 farpush ax
 	0017b1cc mov ax,0x0
 	0017b1d8 farpush ax
 	0017b1e0 mov ax,0x3
 	0017b1ec farpush ax
 	0017b1f4 mov ax,0x2
 	0017b200 farpush ax
 	0017b208 mov mar,0x3cef20
 	0017b214 mov ax,mar
 	0017b220 mov op,ax
 	0017b228 setfuncargs 0x5
 	0017b230 mov ax,0x536f20
 	0017b23c farcall ax
 	0017b244 farsubsp 0x5
 	0017b24c pop op
 	0017b254 sourceline 0x17e3
 	0017b25c push op
 	0017b264 mov ax,0x2
 	0017b270 farpush ax
 	0017b278 mov mar,0x3cef20
 	0017b284 mov ax,mar
 	0017b290 mov op,ax
 	0017b298 setfuncargs 0x1
 	0017b2a0 mov ax,0x51ef20
 	0017b2ac farcall ax
 	0017b2b4 farsubsp 0x1
 	0017b2bc pop op
 	0017b2c4 sourceline 0x17e4
 	0017b2cc mov ax,0x1
 	0017b2d8 mov bx,ax
 	0017b2e4 mov mar,0x3cef20
 	0017b2f0 mov ax,mar
 	0017b2fc push op
 	0017b304 mov op,ax
 	0017b30c farpush bx
 	0017b314 setfuncargs 0x1
 	0017b31c mov ax,0x766f20
 	0017b328 farcall ax
 	0017b330 farsubsp 0x1
 	0017b338 pop op
 	0017b340 sourceline 0x17e5
 	0017b348 mov ax,0x86
 	0017b354 mov bx,ax
 	0017b360 mov mar,0x3cef20
 	0017b36c mov ax,mar
 	0017b378 push op
 	0017b380 mov op,ax
 	0017b388 farpush bx
 	0017b390 setfuncargs 0x1
 	0017b398 mov ax,0x70ef20
 	0017b3a4 farcall ax
 	0017b3ac farsubsp 0x1
 	0017b3b4 pop op
 	0017b3bc sourceline 0x17e6
 	0017b3c4 mov ax,0x82
 	0017b3d0 mov bx,ax
 	0017b3dc mov mar,0x3cef20
 	0017b3e8 mov ax,mar
 	0017b3f4 push op
 	0017b3fc mov op,ax
 	0017b404 farpush bx
 	0017b40c setfuncargs 0x1
 	0017b414 mov ax,0x526f20
 	0017b420 farcall ax
 	0017b428 farsubsp 0x1
 	0017b430 pop op
 	0017b438 sourceline 0x17e7
 	0017b440 mov ax,0x0
 	0017b44c mov bx,ax
 	0017b458 mov mar,0x3cef20
 	0017b464 mov ax,mar
 	0017b470 push op
 	0017b478 mov op,ax
 	0017b480 farpush bx
 	0017b488 setfuncargs 0x1
 	0017b490 mov ax,0x436f20
 	0017b49c farcall ax
 	0017b4a4 farsubsp 0x1
 	0017b4ac pop op
 	0017b4b4 sourceline 0x17e8
 	0017b4bc mov ax,0x1
 	0017b4c8 mov bx,ax
 	0017b4d4 mov mar,0x3cef20
 	0017b4e0 mov ax,mar
 	0017b4ec push op
 	0017b4f4 mov op,ax
 	0017b4fc farpush bx
 	0017b504 setfuncargs 0x1
 	0017b50c mov ax,0x69ef20
 	0017b518 farcall ax
 	0017b520 farsubsp 0x1
 	0017b528 pop op
 	0017b530 sourceline 0x17e9
 	0017b538 mov ax,0x1
 	0017b544 push ax
 	0017b54c mov ax,0x1
 	0017b558 assertlte ax,0x32
 	0017b564 mul ax,0x8
 	0017b570 mov cx,ax
 	0017b57c pop ax
 	0017b584 mov bx,ax
 	0017b590 mov mar,0x6c6f20
 	0017b59c add mar,cx
 	0017b5a8 mov ax,mar
 	0017b5b4 push op
 	0017b5bc mov op,ax
 	0017b5c4 farpush bx
 	0017b5cc setfuncargs 0x1
 	0017b5d4 mov ax,0xa66f20
 	0017b5e0 farcall ax
 	0017b5e8 farsubsp 0x1
 	0017b5f0 pop op
 	0017b5f8 sourceline 0x17ea
 	0017b600 mov ax,0x50
 	0017b60c push ax
 	0017b614 mov ax,0x1e
 	0017b620 push ax
 	0017b628 mov ax,0x10445c
 	0017b634 call ax
 	0017b63c sub sp,0x8
 	0017b648 mov mar,0x4e6f20
 	0017b654 memwrite4 ax
 	0017b65c sourceline 0x17eb
 	0017b664 mov ax,0x1
 	0017b670 mov mar,0x4aef20
 	0017b67c memwrite4 ax
		0017b684: FALL_THROUGH

	[0017b684]
		0017ab94: UNCONDITIONAL_JUMP
		0017abe8: FALL_THROUGH
 	0017b684 sourceline 0x17ed
 	0017b68c jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[0017b694]
		0017aac4: CONDITIONAL_JUMP
 	0017b694 sourceline 0x17ef
 	0017b69c mov mar,0x3cef20
 	0017b6a8 mov ax,mar
 	0017b6b4 push op
 	0017b6bc mov op,ax
 	0017b6c4 setfuncargs 0x0
 	0017b6cc mov ax,0x89ef20
 	0017b6d8 farcall ax
 	0017b6e0 pop op
 	0017b6e8 push ax
 	0017b6f0 mov mar,0x7def20
 	0017b6fc mov ax,mar
 	0017b708 pop bx
 	0017b710 cmpeq bx,ax
 	0017b71c mov ax,bx
 	0017b728 jz 0x0017e248
		0017e248: CONDITIONAL_JUMP
		0017b730: FALL_THROUGH

	[0017b730]
		0017b694: FALL_THROUGH
 	0017b730 sourceline 0x17f1
 	0017b738 mov mar,0x7fef20
 	0017b744 memread4 ax
 	0017b74c jz 0x0017dee8
		0017dee8: CONDITIONAL_JUMP
		0017b754: FALL_THROUGH

	[0017b754]
		0017b730: FALL_THROUGH
 	0017b754 sourceline 0x17f3
 	0017b75c mov mar,0xcc6f20
 	0017b768 memread4 ax
 	0017b770 lnot ax
 	0017b778 jz 0x0017bae0
		0017bae0: CONDITIONAL_JUMP
		0017b780: FALL_THROUGH

	[0017b780]
		0017b754: FALL_THROUGH
 	0017b780 sourceline 0x17f5
 	0017b788 mov ax,0x0
 	0017b794 push ax
 	0017b79c mov ax,0x1
 	0017b7a8 assertlte ax,0x32
 	0017b7b4 mul ax,0x8
 	0017b7c0 mov cx,ax
 	0017b7cc pop ax
 	0017b7d4 mov bx,ax
 	0017b7e0 mov mar,0x6c6f20
 	0017b7ec add mar,cx
 	0017b7f8 mov ax,mar
 	0017b804 push op
 	0017b80c mov op,ax
 	0017b814 farpush bx
 	0017b81c setfuncargs 0x1
 	0017b824 mov ax,0xa66f20
 	0017b830 farcall ax
 	0017b838 farsubsp 0x1
 	0017b840 pop op
 	0017b848 sourceline 0x17f6
 	0017b850 mov ax,0x1
 	0017b85c mov bx,ax
 	0017b868 mov mar,0x3cef20
 	0017b874 mov ax,mar
 	0017b880 push op
 	0017b888 mov op,ax
 	0017b890 farpush bx
 	0017b898 setfuncargs 0x1
 	0017b8a0 mov ax,0x69ef20
 	0017b8ac farcall ax
 	0017b8b4 farsubsp 0x1
 	0017b8bc pop op
 	0017b8c4 sourceline 0x17f7
 	0017b8cc push op
 	0017b8d4 mov ax,0x397
 	0017b8e0 farpush ax
 	0017b8e8 mov ax,0x73
 	0017b8f4 farpush ax
 	0017b8fc mov ax,0x5c
 	0017b908 farpush ax
 	0017b910 mov mar,0x3cef20
 	0017b91c mov ax,mar
 	0017b928 mov op,ax
 	0017b930 setfuncargs 0x3
 	0017b938 mov ax,0x726f20
 	0017b944 farcall ax
 	0017b94c farsubsp 0x3
 	0017b954 pop op
 	0017b95c sourceline 0x17fa
 	0017b964 push op
 	0017b96c mov ax,0x2bf8b8
 	0017b978 farpush ax
 	0017b980 mov ax,0x138
 	0017b98c farpush ax
 	0017b994 mov ax,0x92
 	0017b9a0 farpush ax
 	0017b9a8 mov ax,0x0
 	0017b9b4 farpush ax
 	0017b9bc mov mar,0x3cef20
 	0017b9c8 mov ax,mar
 	0017b9d4 mov op,ax
 	0017b9dc setfuncargs 0x4
 	0017b9e4 mov ax,0x6aef20
 	0017b9f0 farcall ax
 	0017b9f8 farsubsp 0x4
 	0017ba00 pop op
 	0017ba08 sourceline 0x17fb
 	0017ba10 mov ax,0x1
 	0017ba1c push ax
 	0017ba24 mov ax,0x1
 	0017ba30 assertlte ax,0x32
 	0017ba3c mul ax,0x8
 	0017ba48 mov cx,ax
 	0017ba54 pop ax
 	0017ba5c mov bx,ax
 	0017ba68 mov mar,0x6c6f20
 	0017ba74 add mar,cx
 	0017ba80 mov ax,mar
 	0017ba8c push op
 	0017ba94 mov op,ax
 	0017ba9c farpush bx
 	0017baa4 setfuncargs 0x1
 	0017baac mov ax,0xa66f20
 	0017bab8 farcall ax
 	0017bac0 farsubsp 0x1
 	0017bac8 pop op
 	0017bad0 sourceline 0x17fc
 	0017bad8 jmp 0x0017ded8
		0017ded8: UNCONDITIONAL_JUMP

	[0017bae0]
		0017b754: CONDITIONAL_JUMP
 	0017bae0 sourceline 0x17ff
 	0017bae8 mov mar,0xccef20
 	0017baf4 memread4 ax
 	0017bafc lnot ax
 	0017bb04 jz 0x0017db88
		0017db88: CONDITIONAL_JUMP
		0017bb0c: FALL_THROUGH

	[0017bb0c]
		0017bae0: FALL_THROUGH
 	0017bb0c sourceline 0x1801
 	0017bb14 setfuncargs 0x0
 	0017bb1c mov ax,0x6def20
 	0017bb28 farcall ax
 	0017bb30 lnot ax
 	0017bb38 jz 0x0017bb94
		0017bb94: CONDITIONAL_JUMP
		0017bb40: FALL_THROUGH

	[0017bb40]
		0017bb0c: FALL_THROUGH
 	0017bb40 mov ax,0x82
 	0017bb4c farpush ax
 	0017bb54 mov ax,0x86
 	0017bb60 farpush ax
 	0017bb68 setfuncargs 0x2
 	0017bb70 mov ax,0x6e6f20
 	0017bb7c farcall ax
 	0017bb84 farsubsp 0x2
 	0017bb8c jmp 0x0017db78
		0017db78: UNCONDITIONAL_JUMP

	[0017bb94]
		0017bb0c: CONDITIONAL_JUMP
 	0017bb94 sourceline 0x1804
 	0017bb9c mov ax,0x0
 	0017bba8 push ax
 	0017bbb0 mov ax,0x1
 	0017bbbc assertlte ax,0x32
 	0017bbc8 mul ax,0x8
 	0017bbd4 mov cx,ax
 	0017bbe0 pop ax
 	0017bbe8 mov bx,ax
 	0017bbf4 mov mar,0x6c6f20
 	0017bc00 add mar,cx
 	0017bc0c mov ax,mar
 	0017bc18 push op
 	0017bc20 mov op,ax
 	0017bc28 farpush bx
 	0017bc30 setfuncargs 0x1
 	0017bc38 mov ax,0xa66f20
 	0017bc44 farcall ax
 	0017bc4c farsubsp 0x1
 	0017bc54 pop op
 	0017bc5c sourceline 0x1805
 	0017bc64 mov ax,0x3
 	0017bc70 mov bx,ax
 	0017bc7c mov mar,0x3cef20
 	0017bc88 mov ax,mar
 	0017bc94 push op
 	0017bc9c mov op,ax
 	0017bca4 farpush bx
 	0017bcac setfuncargs 0x1
 	0017bcb4 mov ax,0x69ef20
 	0017bcc0 farcall ax
 	0017bcc8 farsubsp 0x1
 	0017bcd0 pop op
 	0017bcd8 sourceline 0x1806
 	0017bce0 push op
 	0017bce8 mov ax,0x397
 	0017bcf4 farpush ax
 	0017bcfc mov ax,0x1
 	0017bd08 farpush ax
 	0017bd10 mov mar,0x3cef20
 	0017bd1c mov ax,mar
 	0017bd28 mov op,ax
 	0017bd30 setfuncargs 0x2
 	0017bd38 mov ax,0x6eef20
 	0017bd44 farcall ax
 	0017bd4c farsubsp 0x2
 	0017bd54 pop op
 	0017bd5c sourceline 0x1807
 	0017bd64 mov ax,0x104654
 	0017bd70 call ax
 	0017bd78 sourceline 0x180a
 	0017bd80 push op
 	0017bd88 mov ax,0x2bf8f9
 	0017bd94 farpush ax
 	0017bd9c mov mar,0x3cef20
 	0017bda8 mov ax,mar
 	0017bdb4 mov op,ax
 	0017bdbc setfuncargs 0x1
 	0017bdc4 mov ax,0x6f6f20
 	0017bdd0 farcall ax
 	0017bdd8 farsubsp 0x1
 	0017bde0 pop op
 	0017bde8 sourceline 0x180b
 	0017bdf0 push op
 	0017bdf8 mov ax,0x3
 	0017be04 farpush ax
 	0017be0c mov mar,0xadef20
 	0017be18 mov ax,mar
 	0017be24 mov op,ax
 	0017be2c setfuncargs 0x1
 	0017be34 mov ax,0x6d6f20
 	0017be40 farcall ax
 	0017be48 farsubsp 0x1
 	0017be50 pop op
 	0017be58 lnot ax
 	0017be60 jz 0x0017c3d8
		0017c3d8: CONDITIONAL_JUMP
		0017be68: FALL_THROUGH

	[0017be68]
		0017bb94: FALL_THROUGH
 	0017be68 sourceline 0x180d
 	0017be70 push op
 	0017be78 mov ax,0x2bf9b1
 	0017be84 farpush ax
 	0017be8c mov mar,0x506f20
 	0017be98 mov ax,mar
 	0017bea4 mov op,ax
 	0017beac setfuncargs 0x1
 	0017beb4 mov ax,0x6f6f20
 	0017bec0 farcall ax
 	0017bec8 farsubsp 0x1
 	0017bed0 pop op
 	0017bed8 sourceline 0x180e
 	0017bee0 push op
 	0017bee8 mov ax,0x427
 	0017bef4 farpush ax
 	0017befc mov ax,0x398
 	0017bf08 farpush ax
 	0017bf10 mov ax,0x0
 	0017bf1c farpush ax
 	0017bf24 mov ax,0x3
 	0017bf30 farpush ax
 	0017bf38 mov ax,0x0
 	0017bf44 farpush ax
 	0017bf4c mov mar,0x506f20
 	0017bf58 mov ax,mar
 	0017bf64 mov op,ax
 	0017bf6c setfuncargs 0x5
 	0017bf74 mov ax,0x536f20
 	0017bf80 farcall ax
 	0017bf88 farsubsp 0x5
 	0017bf90 pop op
 	0017bf98 sourceline 0x180f
 	0017bfa0 push op
 	0017bfa8 mov ax,0x2
 	0017bfb4 farpush ax
 	0017bfbc mov mar,0x3cef20
 	0017bfc8 mov ax,mar
 	0017bfd4 mov op,ax
 	0017bfdc setfuncargs 0x1
 	0017bfe4 mov ax,0x51ef20
 	0017bff0 farcall ax
 	0017bff8 farsubsp 0x1
 	0017c000 pop op
 	0017c008 sourceline 0x1810
 	0017c010 mov ax,0x1
 	0017c01c mov bx,ax
 	0017c028 mov mar,0x3cef20
 	0017c034 mov ax,mar
 	0017c040 push op
 	0017c048 mov op,ax
 	0017c050 farpush bx
 	0017c058 setfuncargs 0x1
 	0017c060 mov ax,0x766f20
 	0017c06c farcall ax
 	0017c074 farsubsp 0x1
 	0017c07c pop op
 	0017c084 sourceline 0x1811
 	0017c08c mov ax,0x86
 	0017c098 mov bx,ax
 	0017c0a4 mov mar,0x3cef20
 	0017c0b0 mov ax,mar
 	0017c0bc push op
 	0017c0c4 mov op,ax
 	0017c0cc farpush bx
 	0017c0d4 setfuncargs 0x1
 	0017c0dc mov ax,0x70ef20
 	0017c0e8 farcall ax
 	0017c0f0 farsubsp 0x1
 	0017c0f8 pop op
 	0017c100 sourceline 0x1812
 	0017c108 mov ax,0x82
 	0017c114 mov bx,ax
 	0017c120 mov mar,0x3cef20
 	0017c12c mov ax,mar
 	0017c138 push op
 	0017c140 mov op,ax
 	0017c148 farpush bx
 	0017c150 setfuncargs 0x1
 	0017c158 mov ax,0x526f20
 	0017c164 farcall ax
 	0017c16c farsubsp 0x1
 	0017c174 pop op
 	0017c17c sourceline 0x1813
 	0017c184 mov ax,0x0
 	0017c190 mov bx,ax
 	0017c19c mov mar,0x3cef20
 	0017c1a8 mov ax,mar
 	0017c1b4 push op
 	0017c1bc mov op,ax
 	0017c1c4 farpush bx
 	0017c1cc setfuncargs 0x1
 	0017c1d4 mov ax,0x436f20
 	0017c1e0 farcall ax
 	0017c1e8 farsubsp 0x1
 	0017c1f0 pop op
 	0017c1f8 sourceline 0x1814
 	0017c200 mov ax,0x1
 	0017c20c mov bx,ax
 	0017c218 mov mar,0x3cef20
 	0017c224 mov ax,mar
 	0017c230 push op
 	0017c238 mov op,ax
 	0017c240 farpush bx
 	0017c248 setfuncargs 0x1
 	0017c250 mov ax,0x69ef20
 	0017c25c farcall ax
 	0017c264 farsubsp 0x1
 	0017c26c pop op
 	0017c274 sourceline 0x1815
 	0017c27c mov ax,0x1
 	0017c288 push ax
 	0017c290 mov ax,0x1
 	0017c29c assertlte ax,0x32
 	0017c2a8 mul ax,0x8
 	0017c2b4 mov cx,ax
 	0017c2c0 pop ax
 	0017c2c8 mov bx,ax
 	0017c2d4 mov mar,0x6c6f20
 	0017c2e0 add mar,cx
 	0017c2ec mov ax,mar
 	0017c2f8 push op
 	0017c300 mov op,ax
 	0017c308 farpush bx
 	0017c310 setfuncargs 0x1
 	0017c318 mov ax,0xa66f20
 	0017c324 farcall ax
 	0017c32c farsubsp 0x1
 	0017c334 pop op
 	0017c33c sourceline 0x1816
 	0017c344 mov ax,0x50
 	0017c350 push ax
 	0017c358 mov ax,0x1e
 	0017c364 push ax
 	0017c36c mov ax,0x10445c
 	0017c378 call ax
 	0017c380 sub sp,0x8
 	0017c38c mov mar,0x4e6f20
 	0017c398 memwrite4 ax
 	0017c3a0 sourceline 0x1817
 	0017c3a8 mov ax,0x1
 	0017c3b4 mov mar,0x4aef20
 	0017c3c0 memwrite4 ax
 	0017c3c8 sourceline 0x1818
 	0017c3d0 jmp 0x0017db78
		0017db78: UNCONDITIONAL_JUMP

	[0017c3d8]
		0017bb94: CONDITIONAL_JUMP
 	0017c3d8 sourceline 0x181b
 	0017c3e0 mov ax,0x0
 	0017c3ec mov bx,ax
 	0017c3f8 mov mar,0x3cef20
 	0017c404 mov ax,mar
 	0017c410 push op
 	0017c418 mov op,ax
 	0017c420 farpush bx
 	0017c428 setfuncargs 0x1
 	0017c430 mov ax,0x436f20
 	0017c43c farcall ax
 	0017c444 farsubsp 0x1
 	0017c44c pop op
 	0017c454 sourceline 0x181c
 	0017c45c push op
 	0017c464 mov ax,0x2bfa23
 	0017c470 farpush ax
 	0017c478 mov mar,0x506f20
 	0017c484 mov ax,mar
 	0017c490 mov op,ax
 	0017c498 setfuncargs 0x1
 	0017c4a0 mov ax,0x6f6f20
 	0017c4ac farcall ax
 	0017c4b4 farsubsp 0x1
 	0017c4bc pop op
 	0017c4c4 sourceline 0x181d
 	0017c4cc push op
 	0017c4d4 mov ax,0x6
 	0017c4e0 farpush ax
 	0017c4e8 mov mar,0x3cef20
 	0017c4f4 mov ax,mar
 	0017c500 mov op,ax
 	0017c508 setfuncargs 0x1
 	0017c510 mov ax,0x51ef20
 	0017c51c farcall ax
 	0017c524 farsubsp 0x1
 	0017c52c pop op
 	0017c534 sourceline 0x181e
 	0017c53c mov ax,0x7a
 	0017c548 mov bx,ax
 	0017c554 mov mar,0x3cef20
 	0017c560 mov ax,mar
 	0017c56c push op
 	0017c574 mov op,ax
 	0017c57c farpush bx
 	0017c584 setfuncargs 0x1
 	0017c58c mov ax,0x526f20
 	0017c598 farcall ax
 	0017c5a0 farsubsp 0x1
 	0017c5a8 pop op
 	0017c5b0 sourceline 0x181f
 	0017c5b8 mov ax,0x7e
 	0017c5c4 mov bx,ax
 	0017c5d0 mov mar,0x3cef20
 	0017c5dc mov ax,mar
 	0017c5e8 push op
 	0017c5f0 mov op,ax
 	0017c5f8 farpush bx
 	0017c600 setfuncargs 0x1
 	0017c608 mov ax,0x70ef20
 	0017c614 farcall ax
 	0017c61c farsubsp 0x1
 	0017c624 pop op
 	0017c62c sourceline 0x1820
 	0017c634 push op
 	0017c63c mov ax,0x6e
 	0017c648 farpush ax
 	0017c650 mov mar,0x506f20
 	0017c65c mov ax,mar
 	0017c668 mov op,ax
 	0017c670 setfuncargs 0x1
 	0017c678 mov ax,0x51ef20
 	0017c684 farcall ax
 	0017c68c farsubsp 0x1
 	0017c694 pop op
 	0017c69c sourceline 0x1821
 	0017c6a4 mov ax,0x5f
 	0017c6b0 mov bx,ax
 	0017c6bc mov mar,0x506f20
 	0017c6c8 mov ax,mar
 	0017c6d4 push op
 	0017c6dc mov op,ax
 	0017c6e4 farpush bx
 	0017c6ec setfuncargs 0x1
 	0017c6f4 mov ax,0x70ef20
 	0017c700 farcall ax
 	0017c708 farsubsp 0x1
 	0017c710 pop op
 	0017c718 sourceline 0x1822
 	0017c720 push op
 	0017c728 mov ax,0x426
 	0017c734 farpush ax
 	0017c73c mov ax,0x398
 	0017c748 farpush ax
 	0017c750 mov ax,0x0
 	0017c75c farpush ax
 	0017c764 mov ax,0x3
 	0017c770 farpush ax
 	0017c778 mov ax,0x0
 	0017c784 farpush ax
 	0017c78c mov mar,0x506f20
 	0017c798 mov ax,mar
 	0017c7a4 mov op,ax
 	0017c7ac setfuncargs 0x5
 	0017c7b4 mov ax,0x536f20
 	0017c7c0 farcall ax
 	0017c7c8 farsubsp 0x5
 	0017c7d0 pop op
 	0017c7d8 sourceline 0x1823
 	0017c7e0 push op
 	0017c7e8 mov ax,0x426
 	0017c7f4 farpush ax
 	0017c7fc mov ax,0x397
 	0017c808 farpush ax
 	0017c810 mov ax,0x0
 	0017c81c farpush ax
 	0017c824 mov ax,0x3
 	0017c830 farpush ax
 	0017c838 mov ax,0x2
 	0017c844 farpush ax
 	0017c84c mov mar,0x3cef20
 	0017c858 mov ax,mar
 	0017c864 mov op,ax
 	0017c86c setfuncargs 0x5
 	0017c874 mov ax,0x536f20
 	0017c880 farcall ax
 	0017c888 farsubsp 0x5
 	0017c890 pop op
 	0017c898 sourceline 0x1824
 	0017c8a0 push op
 	0017c8a8 mov ax,0x427
 	0017c8b4 farpush ax
 	0017c8bc mov ax,0x398
 	0017c8c8 farpush ax
 	0017c8d0 mov ax,0x0
 	0017c8dc farpush ax
 	0017c8e4 mov ax,0x3
 	0017c8f0 farpush ax
 	0017c8f8 mov ax,0x0
 	0017c904 farpush ax
 	0017c90c mov mar,0x506f20
 	0017c918 mov ax,mar
 	0017c924 mov op,ax
 	0017c92c setfuncargs 0x5
 	0017c934 mov ax,0x536f20
 	0017c940 farcall ax
 	0017c948 farsubsp 0x5
 	0017c950 pop op
 	0017c958 sourceline 0x1825
 	0017c960 push op
 	0017c968 mov ax,0x427
 	0017c974 farpush ax
 	0017c97c mov ax,0x397
 	0017c988 farpush ax
 	0017c990 mov ax,0x0
 	0017c99c farpush ax
 	0017c9a4 mov ax,0x3
 	0017c9b0 farpush ax
 	0017c9b8 mov ax,0x2
 	0017c9c4 farpush ax
 	0017c9cc mov mar,0x3cef20
 	0017c9d8 mov ax,mar
 	0017c9e4 mov op,ax
 	0017c9ec setfuncargs 0x5
 	0017c9f4 mov ax,0x536f20
 	0017ca00 farcall ax
 	0017ca08 farsubsp 0x5
 	0017ca10 pop op
 	0017ca18 sourceline 0x1826
 	0017ca20 push op
 	0017ca28 mov ax,0x2
 	0017ca34 farpush ax
 	0017ca3c mov mar,0x3cef20
 	0017ca48 mov ax,mar
 	0017ca54 mov op,ax
 	0017ca5c setfuncargs 0x1
 	0017ca64 mov ax,0x51ef20
 	0017ca70 farcall ax
 	0017ca78 farsubsp 0x1
 	0017ca80 pop op
 	0017ca88 sourceline 0x1827
 	0017ca90 mov ax,0x1
 	0017ca9c mov bx,ax
 	0017caa8 mov mar,0x3cef20
 	0017cab4 mov ax,mar
 	0017cac0 push op
 	0017cac8 mov op,ax
 	0017cad0 farpush bx
 	0017cad8 setfuncargs 0x1
 	0017cae0 mov ax,0x766f20
 	0017caec farcall ax
 	0017caf4 farsubsp 0x1
 	0017cafc pop op
 	0017cb04 sourceline 0x1828
 	0017cb0c mov ax,0x86
 	0017cb18 mov bx,ax
 	0017cb24 mov mar,0x3cef20
 	0017cb30 mov ax,mar
 	0017cb3c push op
 	0017cb44 mov op,ax
 	0017cb4c farpush bx
 	0017cb54 setfuncargs 0x1
 	0017cb5c mov ax,0x70ef20
 	0017cb68 farcall ax
 	0017cb70 farsubsp 0x1
 	0017cb78 pop op
 	0017cb80 sourceline 0x1829
 	0017cb88 mov ax,0x82
 	0017cb94 mov bx,ax
 	0017cba0 mov mar,0x3cef20
 	0017cbac mov ax,mar
 	0017cbb8 push op
 	0017cbc0 mov op,ax
 	0017cbc8 farpush bx
 	0017cbd0 setfuncargs 0x1
 	0017cbd8 mov ax,0x526f20
 	0017cbe4 farcall ax
 	0017cbec farsubsp 0x1
 	0017cbf4 pop op
 	0017cbfc sourceline 0x182a
 	0017cc04 push op
 	0017cc0c mov ax,0x6b
 	0017cc18 farpush ax
 	0017cc20 mov mar,0x506f20
 	0017cc2c mov ax,mar
 	0017cc38 mov op,ax
 	0017cc40 setfuncargs 0x1
 	0017cc48 mov ax,0x51ef20
 	0017cc54 farcall ax
 	0017cc5c farsubsp 0x1
 	0017cc64 pop op
 	0017cc6c sourceline 0x182b
 	0017cc74 mov ax,0x5b
 	0017cc80 mov bx,ax
 	0017cc8c mov mar,0x506f20
 	0017cc98 mov ax,mar
 	0017cca4 push op
 	0017ccac mov op,ax
 	0017ccb4 farpush bx
 	0017ccbc setfuncargs 0x1
 	0017ccc4 mov ax,0x70ef20
 	0017ccd0 farcall ax
 	0017ccd8 farsubsp 0x1
 	0017cce0 pop op
 	0017cce8 sourceline 0x182c
 	0017ccf0 push op
 	0017ccf8 mov ax,0x427
 	0017cd04 farpush ax
 	0017cd0c mov ax,0x397
 	0017cd18 farpush ax
 	0017cd20 mov ax,0x0
 	0017cd2c farpush ax
 	0017cd34 mov ax,0x3
 	0017cd40 farpush ax
 	0017cd48 mov ax,0x0
 	0017cd54 farpush ax
 	0017cd5c mov mar,0x506f20
 	0017cd68 mov ax,mar
 	0017cd74 mov op,ax
 	0017cd7c setfuncargs 0x5
 	0017cd84 mov ax,0x536f20
 	0017cd90 farcall ax
 	0017cd98 farsubsp 0x5
 	0017cda0 pop op
 	0017cda8 sourceline 0x182d
 	0017cdb0 push op
 	0017cdb8 mov ax,0x2bfa42
 	0017cdc4 farpush ax
 	0017cdcc mov mar,0x3cef20
 	0017cdd8 mov ax,mar
 	0017cde4 mov op,ax
 	0017cdec setfuncargs 0x1
 	0017cdf4 mov ax,0x6f6f20
 	0017ce00 farcall ax
 	0017ce08 farsubsp 0x1
 	0017ce10 pop op
 	0017ce18 sourceline 0x182e
 	0017ce20 push op
 	0017ce28 mov ax,0x2bfae5
 	0017ce34 farpush ax
 	0017ce3c mov mar,0x3cef20
 	0017ce48 mov ax,mar
 	0017ce54 mov op,ax
 	0017ce5c setfuncargs 0x1
 	0017ce64 mov ax,0x6f6f20
 	0017ce70 farcall ax
 	0017ce78 farsubsp 0x1
 	0017ce80 pop op
 	0017ce88 sourceline 0x182f
 	0017ce90 push op
 	0017ce98 mov ax,0x2bfb69
 	0017cea4 farpush ax
 	0017ceac mov mar,0x3cef20
 	0017ceb8 mov ax,mar
 	0017cec4 mov op,ax
 	0017cecc setfuncargs 0x1
 	0017ced4 mov ax,0x6f6f20
 	0017cee0 farcall ax
 	0017cee8 farsubsp 0x1
 	0017cef0 pop op
 	0017cef8 sourceline 0x1830
 	0017cf00 push op
 	0017cf08 mov ax,0x2bfbf4
 	0017cf14 farpush ax
 	0017cf1c mov mar,0x3cef20
 	0017cf28 mov ax,mar
 	0017cf34 mov op,ax
 	0017cf3c setfuncargs 0x1
 	0017cf44 mov ax,0x6f6f20
 	0017cf50 farcall ax
 	0017cf58 farsubsp 0x1
 	0017cf60 pop op
 	0017cf68 sourceline 0x1831
 	0017cf70 push op
 	0017cf78 mov ax,0x2bfc58
 	0017cf84 farpush ax
 	0017cf8c mov mar,0x506f20
 	0017cf98 mov ax,mar
 	0017cfa4 mov op,ax
 	0017cfac setfuncargs 0x1
 	0017cfb4 mov ax,0x6f6f20
 	0017cfc0 farcall ax
 	0017cfc8 farsubsp 0x1
 	0017cfd0 pop op
 	0017cfd8 sourceline 0x1832
 	0017cfe0 push op
 	0017cfe8 mov ax,0x2bfcc4
 	0017cff4 farpush ax
 	0017cffc mov mar,0x3cef20
 	0017d008 mov ax,mar
 	0017d014 mov op,ax
 	0017d01c setfuncargs 0x1
 	0017d024 mov ax,0x6f6f20
 	0017d030 farcall ax
 	0017d038 farsubsp 0x1
 	0017d040 pop op
 	0017d048 sourceline 0x1833
 	0017d050 push op
 	0017d058 mov ax,0x426
 	0017d064 farpush ax
 	0017d06c mov ax,0x397
 	0017d078 farpush ax
 	0017d080 mov ax,0x0
 	0017d08c farpush ax
 	0017d094 mov ax,0x3
 	0017d0a0 farpush ax
 	0017d0a8 mov ax,0x0
 	0017d0b4 farpush ax
 	0017d0bc mov mar,0x506f20
 	0017d0c8 mov ax,mar
 	0017d0d4 mov op,ax
 	0017d0dc setfuncargs 0x5
 	0017d0e4 mov ax,0x536f20
 	0017d0f0 farcall ax
 	0017d0f8 farsubsp 0x5
 	0017d100 pop op
 	0017d108 sourceline 0x1834
 	0017d110 push op
 	0017d118 mov ax,0x6e
 	0017d124 farpush ax
 	0017d12c mov mar,0x506f20
 	0017d138 mov ax,mar
 	0017d144 mov op,ax
 	0017d14c setfuncargs 0x1
 	0017d154 mov ax,0x51ef20
 	0017d160 farcall ax
 	0017d168 farsubsp 0x1
 	0017d170 pop op
 	0017d178 sourceline 0x1835
 	0017d180 mov ax,0x5f
 	0017d18c mov bx,ax
 	0017d198 mov mar,0x506f20
 	0017d1a4 mov ax,mar
 	0017d1b0 push op
 	0017d1b8 mov op,ax
 	0017d1c0 farpush bx
 	0017d1c8 setfuncargs 0x1
 	0017d1d0 mov ax,0x70ef20
 	0017d1dc farcall ax
 	0017d1e4 farsubsp 0x1
 	0017d1ec pop op
 	0017d1f4 sourceline 0x1836
 	0017d1fc push op
 	0017d204 mov ax,0x426
 	0017d210 farpush ax
 	0017d218 mov ax,0x398
 	0017d224 farpush ax
 	0017d22c mov ax,0x0
 	0017d238 farpush ax
 	0017d240 mov ax,0x3
 	0017d24c farpush ax
 	0017d254 mov ax,0x0
 	0017d260 farpush ax
 	0017d268 mov mar,0x506f20
 	0017d274 mov ax,mar
 	0017d280 mov op,ax
 	0017d288 setfuncargs 0x5
 	0017d290 mov ax,0x536f20
 	0017d29c farcall ax
 	0017d2a4 farsubsp 0x5
 	0017d2ac pop op
 	0017d2b4 sourceline 0x1837
 	0017d2bc push op
 	0017d2c4 mov ax,0x6
 	0017d2d0 farpush ax
 	0017d2d8 mov mar,0x3cef20
 	0017d2e4 mov ax,mar
 	0017d2f0 mov op,ax
 	0017d2f8 setfuncargs 0x1
 	0017d300 mov ax,0x51ef20
 	0017d30c farcall ax
 	0017d314 farsubsp 0x1
 	0017d31c pop op
 	0017d324 sourceline 0x1838
 	0017d32c mov ax,0x7a
 	0017d338 mov bx,ax
 	0017d344 mov mar,0x3cef20
 	0017d350 mov ax,mar
 	0017d35c push op
 	0017d364 mov op,ax
 	0017d36c farpush bx
 	0017d374 setfuncargs 0x1
 	0017d37c mov ax,0x526f20
 	0017d388 farcall ax
 	0017d390 farsubsp 0x1
 	0017d398 pop op
 	0017d3a0 sourceline 0x1839
 	0017d3a8 mov ax,0x7e
 	0017d3b4 mov bx,ax
 	0017d3c0 mov mar,0x3cef20
 	0017d3cc mov ax,mar
 	0017d3d8 push op
 	0017d3e0 mov op,ax
 	0017d3e8 farpush bx
 	0017d3f0 setfuncargs 0x1
 	0017d3f8 mov ax,0x70ef20
 	0017d404 farcall ax
 	0017d40c farsubsp 0x1
 	0017d414 pop op
 	0017d41c sourceline 0x183a
 	0017d424 push op
 	0017d42c mov ax,0x426
 	0017d438 farpush ax
 	0017d440 mov ax,0x397
 	0017d44c farpush ax
 	0017d454 mov ax,0x0
 	0017d460 farpush ax
 	0017d468 mov ax,0x3
 	0017d474 farpush ax
 	0017d47c mov ax,0x2
 	0017d488 farpush ax
 	0017d490 mov mar,0x3cef20
 	0017d49c mov ax,mar
 	0017d4a8 mov op,ax
 	0017d4b0 setfuncargs 0x5
 	0017d4b8 mov ax,0x536f20
 	0017d4c4 farcall ax
 	0017d4cc farsubsp 0x5
 	0017d4d4 pop op
 	0017d4dc sourceline 0x183b
 	0017d4e4 push op
 	0017d4ec mov ax,0x427
 	0017d4f8 farpush ax
 	0017d500 mov ax,0x398
 	0017d50c farpush ax
 	0017d514 mov ax,0x0
 	0017d520 farpush ax
 	0017d528 mov ax,0x3
 	0017d534 farpush ax
 	0017d53c mov ax,0x0
 	0017d548 farpush ax
 	0017d550 mov mar,0x506f20
 	0017d55c mov ax,mar
 	0017d568 mov op,ax
 	0017d570 setfuncargs 0x5
 	0017d578 mov ax,0x536f20
 	0017d584 farcall ax
 	0017d58c farsubsp 0x5
 	0017d594 pop op
 	0017d59c sourceline 0x183c
 	0017d5a4 push op
 	0017d5ac mov ax,0x427
 	0017d5b8 farpush ax
 	0017d5c0 mov ax,0x397
 	0017d5cc farpush ax
 	0017d5d4 mov ax,0x0
 	0017d5e0 farpush ax
 	0017d5e8 mov ax,0x3
 	0017d5f4 farpush ax
 	0017d5fc mov ax,0x2
 	0017d608 farpush ax
 	0017d610 mov mar,0x3cef20
 	0017d61c mov ax,mar
 	0017d628 mov op,ax
 	0017d630 setfuncargs 0x5
 	0017d638 mov ax,0x536f20
 	0017d644 farcall ax
 	0017d64c farsubsp 0x5
 	0017d654 pop op
 	0017d65c sourceline 0x183d
 	0017d664 push op
 	0017d66c mov ax,0x2
 	0017d678 farpush ax
 	0017d680 mov mar,0x3cef20
 	0017d68c mov ax,mar
 	0017d698 mov op,ax
 	0017d6a0 setfuncargs 0x1
 	0017d6a8 mov ax,0x51ef20
 	0017d6b4 farcall ax
 	0017d6bc farsubsp 0x1
 	0017d6c4 pop op
 	0017d6cc sourceline 0x183e
 	0017d6d4 mov ax,0x1
 	0017d6e0 mov bx,ax
 	0017d6ec mov mar,0x3cef20
 	0017d6f8 mov ax,mar
 	0017d704 push op
 	0017d70c mov op,ax
 	0017d714 farpush bx
 	0017d71c setfuncargs 0x1
 	0017d724 mov ax,0x766f20
 	0017d730 farcall ax
 	0017d738 farsubsp 0x1
 	0017d740 pop op
 	0017d748 sourceline 0x183f
 	0017d750 mov ax,0x86
 	0017d75c mov bx,ax
 	0017d768 mov mar,0x3cef20
 	0017d774 mov ax,mar
 	0017d780 push op
 	0017d788 mov op,ax
 	0017d790 farpush bx
 	0017d798 setfuncargs 0x1
 	0017d7a0 mov ax,0x70ef20
 	0017d7ac farcall ax
 	0017d7b4 farsubsp 0x1
 	0017d7bc pop op
 	0017d7c4 sourceline 0x1840
 	0017d7cc mov ax,0x82
 	0017d7d8 mov bx,ax
 	0017d7e4 mov mar,0x3cef20
 	0017d7f0 mov ax,mar
 	0017d7fc push op
 	0017d804 mov op,ax
 	0017d80c farpush bx
 	0017d814 setfuncargs 0x1
 	0017d81c mov ax,0x526f20
 	0017d828 farcall ax
 	0017d830 farsubsp 0x1
 	0017d838 pop op
 	0017d840 sourceline 0x1841
 	0017d848 push op
 	0017d850 mov ax,0x2bfd0b
 	0017d85c farpush ax
 	0017d864 mov mar,0x506f20
 	0017d870 mov ax,mar
 	0017d87c mov op,ax
 	0017d884 setfuncargs 0x1
 	0017d88c mov ax,0x6f6f20
 	0017d898 farcall ax
 	0017d8a0 farsubsp 0x1
 	0017d8a8 pop op
 	0017d8b0 sourceline 0x1842
 	0017d8b8 mov ax,0x1
 	0017d8c4 mov mar,0xae6f20
 	0017d8d0 memwrite4 ax
 	0017d8d8 sourceline 0x1843
 	0017d8e0 mov ax,0x1
 	0017d8ec mov mar,0xccef20
 	0017d8f8 memwrite4 ax
 	0017d900 sourceline 0x1844
 	0017d908 push op
 	0017d910 mov ax,0x2
 	0017d91c farpush ax
 	0017d924 mov ax,0x4
 	0017d930 farpush ax
 	0017d938 mov mar,0xadef20
 	0017d944 mov ax,mar
 	0017d950 mov op,ax
 	0017d958 setfuncargs 0x2
 	0017d960 mov ax,0xc26f20
 	0017d96c farcall ax
 	0017d974 farsubsp 0x2
 	0017d97c pop op
 	0017d984 sourceline 0x1845
 	0017d98c push op
 	0017d994 mov ax,0x6
 	0017d9a0 farpush ax
 	0017d9a8 mov mar,0xadef20
 	0017d9b4 mov ax,mar
 	0017d9c0 mov op,ax
 	0017d9c8 setfuncargs 0x1
 	0017d9d0 mov ax,0x6d6f20
 	0017d9dc farcall ax
 	0017d9e4 farsubsp 0x1
 	0017d9ec pop op
 	0017d9f4 lnot ax
 	0017d9fc jz 0x0017da80
		0017da80: CONDITIONAL_JUMP
		0017da04: FALL_THROUGH

	[0017da04]
		0017c3d8: FALL_THROUGH
 	0017da04 push op
 	0017da0c mov ax,0x1
 	0017da18 farpush ax
 	0017da20 mov ax,0x6
 	0017da2c farpush ax
 	0017da34 mov mar,0xadef20
 	0017da40 mov ax,mar
 	0017da4c mov op,ax
 	0017da54 setfuncargs 0x2
 	0017da5c mov ax,0xc26f20
 	0017da68 farcall ax
 	0017da70 farsubsp 0x2
 	0017da78 pop op
		0017da80: FALL_THROUGH

	[0017da80]
		0017c3d8: CONDITIONAL_JUMP
		0017da04: FALL_THROUGH
 	0017da80 sourceline 0x1846
 	0017da88 mov ax,0x1
 	0017da94 mov mar,0xcd6f20
 	0017daa0 memwrite4 ax
 	0017daa8 sourceline 0x1847
 	0017dab0 mov ax,0x3
 	0017dabc mov bx,ax
 	0017dac8 mov mar,0x3cef20
 	0017dad4 mov ax,mar
 	0017dae0 push op
 	0017dae8 mov op,ax
 	0017daf0 farpush bx
 	0017daf8 setfuncargs 0x1
 	0017db00 mov ax,0x69ef20
 	0017db0c farcall ax
 	0017db14 farsubsp 0x1
 	0017db1c pop op
 	0017db24 sourceline 0x1848
 	0017db2c push op
 	0017db34 mov mar,0xadef20
 	0017db40 mov ax,mar
 	0017db4c mov op,ax
 	0017db54 setfuncargs 0x0
 	0017db5c mov ax,0x71ef20
 	0017db68 farcall ax
 	0017db70 pop op
		0017db78: FALL_THROUGH

	[0017db78]
		0017bb40: UNCONDITIONAL_JUMP
		0017be68: UNCONDITIONAL_JUMP
		0017da80: FALL_THROUGH
 	0017db78 sourceline 0x184b
 	0017db80 jmp 0x0017ded8
		0017ded8: UNCONDITIONAL_JUMP

	[0017db88]
		0017bae0: CONDITIONAL_JUMP
 	0017db88 sourceline 0x184e
 	0017db90 mov ax,0x0
 	0017db9c push ax
 	0017dba4 mov ax,0x1
 	0017dbb0 assertlte ax,0x32
 	0017dbbc mul ax,0x8
 	0017dbc8 mov cx,ax
 	0017dbd4 pop ax
 	0017dbdc mov bx,ax
 	0017dbe8 mov mar,0x6c6f20
 	0017dbf4 add mar,cx
 	0017dc00 mov ax,mar
 	0017dc0c push op
 	0017dc14 mov op,ax
 	0017dc1c farpush bx
 	0017dc24 setfuncargs 0x1
 	0017dc2c mov ax,0xa66f20
 	0017dc38 farcall ax
 	0017dc40 farsubsp 0x1
 	0017dc48 pop op
 	0017dc50 sourceline 0x184f
 	0017dc58 mov ax,0x1
 	0017dc64 mov bx,ax
 	0017dc70 mov mar,0x3cef20
 	0017dc7c mov ax,mar
 	0017dc88 push op
 	0017dc90 mov op,ax
 	0017dc98 farpush bx
 	0017dca0 setfuncargs 0x1
 	0017dca8 mov ax,0x69ef20
 	0017dcb4 farcall ax
 	0017dcbc farsubsp 0x1
 	0017dcc4 pop op
 	0017dccc sourceline 0x1850
 	0017dcd4 push op
 	0017dcdc mov ax,0x397
 	0017dce8 farpush ax
 	0017dcf0 mov ax,0x73
 	0017dcfc farpush ax
 	0017dd04 mov ax,0x5c
 	0017dd10 farpush ax
 	0017dd18 mov mar,0x3cef20
 	0017dd24 mov ax,mar
 	0017dd30 mov op,ax
 	0017dd38 setfuncargs 0x3
 	0017dd40 mov ax,0x726f20
 	0017dd4c farcall ax
 	0017dd54 farsubsp 0x3
 	0017dd5c pop op
 	0017dd64 sourceline 0x1851
 	0017dd6c push op
 	0017dd74 mov ax,0x2bfdc8
 	0017dd80 farpush ax
 	0017dd88 mov ax,0x138
 	0017dd94 farpush ax
 	0017dd9c mov ax,0x92
 	0017dda8 farpush ax
 	0017ddb0 mov ax,0x0
 	0017ddbc farpush ax
 	0017ddc4 mov mar,0x3cef20
 	0017ddd0 mov ax,mar
 	0017dddc mov op,ax
 	0017dde4 setfuncargs 0x4
 	0017ddec mov ax,0x6aef20
 	0017ddf8 farcall ax
 	0017de00 farsubsp 0x4
 	0017de08 pop op
 	0017de10 sourceline 0x1852
 	0017de18 mov ax,0x1
 	0017de24 push ax
 	0017de2c mov ax,0x1
 	0017de38 assertlte ax,0x32
 	0017de44 mul ax,0x8
 	0017de50 mov cx,ax
 	0017de5c pop ax
 	0017de64 mov bx,ax
 	0017de70 mov mar,0x6c6f20
 	0017de7c add mar,cx
 	0017de88 mov ax,mar
 	0017de94 push op
 	0017de9c mov op,ax
 	0017dea4 farpush bx
 	0017deac setfuncargs 0x1
 	0017deb4 mov ax,0xa66f20
 	0017dec0 farcall ax
 	0017dec8 farsubsp 0x1
 	0017ded0 pop op
		0017ded8: FALL_THROUGH

	[0017ded8]
		0017b780: UNCONDITIONAL_JUMP
		0017db78: UNCONDITIONAL_JUMP
		0017db88: FALL_THROUGH
 	0017ded8 sourceline 0x1855
 	0017dee0 jmp 0x0017e238
		0017e238: UNCONDITIONAL_JUMP

	[0017dee8]
		0017b730: CONDITIONAL_JUMP
 	0017dee8 sourceline 0x1858
 	0017def0 mov ax,0x0
 	0017defc push ax
 	0017df04 mov ax,0x1
 	0017df10 assertlte ax,0x32
 	0017df1c mul ax,0x8
 	0017df28 mov cx,ax
 	0017df34 pop ax
 	0017df3c mov bx,ax
 	0017df48 mov mar,0x6c6f20
 	0017df54 add mar,cx
 	0017df60 mov ax,mar
 	0017df6c push op
 	0017df74 mov op,ax
 	0017df7c farpush bx
 	0017df84 setfuncargs 0x1
 	0017df8c mov ax,0xa66f20
 	0017df98 farcall ax
 	0017dfa0 farsubsp 0x1
 	0017dfa8 pop op
 	0017dfb0 sourceline 0x1859
 	0017dfb8 mov ax,0x1
 	0017dfc4 mov bx,ax
 	0017dfd0 mov mar,0x3cef20
 	0017dfdc mov ax,mar
 	0017dfe8 push op
 	0017dff0 mov op,ax
 	0017dff8 farpush bx
 	0017e000 setfuncargs 0x1
 	0017e008 mov ax,0x69ef20
 	0017e014 farcall ax
 	0017e01c farsubsp 0x1
 	0017e024 pop op
 	0017e02c sourceline 0x185a
 	0017e034 push op
 	0017e03c mov ax,0x397
 	0017e048 farpush ax
 	0017e050 mov ax,0x73
 	0017e05c farpush ax
 	0017e064 mov ax,0x5c
 	0017e070 farpush ax
 	0017e078 mov mar,0x3cef20
 	0017e084 mov ax,mar
 	0017e090 mov op,ax
 	0017e098 setfuncargs 0x3
 	0017e0a0 mov ax,0x726f20
 	0017e0ac farcall ax
 	0017e0b4 farsubsp 0x3
 	0017e0bc pop op
 	0017e0c4 sourceline 0x185b
 	0017e0cc push op
 	0017e0d4 mov ax,0x2bfe05
 	0017e0e0 farpush ax
 	0017e0e8 mov ax,0x138
 	0017e0f4 farpush ax
 	0017e0fc mov ax,0x92
 	0017e108 farpush ax
 	0017e110 mov ax,0x0
 	0017e11c farpush ax
 	0017e124 mov mar,0x3cef20
 	0017e130 mov ax,mar
 	0017e13c mov op,ax
 	0017e144 setfuncargs 0x4
 	0017e14c mov ax,0x6aef20
 	0017e158 farcall ax
 	0017e160 farsubsp 0x4
 	0017e168 pop op
 	0017e170 sourceline 0x185c
 	0017e178 mov ax,0x1
 	0017e184 push ax
 	0017e18c mov ax,0x1
 	0017e198 assertlte ax,0x32
 	0017e1a4 mul ax,0x8
 	0017e1b0 mov cx,ax
 	0017e1bc pop ax
 	0017e1c4 mov bx,ax
 	0017e1d0 mov mar,0x6c6f20
 	0017e1dc add mar,cx
 	0017e1e8 mov ax,mar
 	0017e1f4 push op
 	0017e1fc mov op,ax
 	0017e204 farpush bx
 	0017e20c setfuncargs 0x1
 	0017e214 mov ax,0xa66f20
 	0017e220 farcall ax
 	0017e228 farsubsp 0x1
 	0017e230 pop op
		0017e238: FALL_THROUGH

	[0017e238]
		0017ded8: UNCONDITIONAL_JUMP
		0017dee8: FALL_THROUGH
 	0017e238 sourceline 0x185e
 	0017e240 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[0017e248]
		0017b694: CONDITIONAL_JUMP
 	0017e248 sourceline 0x1862
 	0017e250 mov mar,0x3cef20
 	0017e25c mov ax,mar
 	0017e268 push op
 	0017e270 mov op,ax
 	0017e278 setfuncargs 0x0
 	0017e280 mov ax,0x89ef20
 	0017e28c farcall ax
 	0017e294 pop op
 	0017e29c push ax
 	0017e2a4 mov mar,0x8def20
 	0017e2b0 mov ax,mar
 	0017e2bc pop bx
 	0017e2c4 cmpeq bx,ax
 	0017e2d0 mov ax,bx
 	0017e2dc jz 0x0017ee18
		0017ee18: CONDITIONAL_JUMP
		0017e2e4: FALL_THROUGH

	[0017e2e4]
		0017e248: FALL_THROUGH
 	0017e2e4 sourceline 0x1864
 	0017e2ec setfuncargs 0x0
 	0017e2f4 mov ax,0x6def20
 	0017e300 farcall ax
 	0017e308 lnot ax
 	0017e310 jz 0x0017e36c
		0017e36c: CONDITIONAL_JUMP
		0017e318: FALL_THROUGH

	[0017e318]
		0017e2e4: FALL_THROUGH
 	0017e318 mov ax,0x82
 	0017e324 farpush ax
 	0017e32c mov ax,0x86
 	0017e338 farpush ax
 	0017e340 setfuncargs 0x2
 	0017e348 mov ax,0x6e6f20
 	0017e354 farcall ax
 	0017e35c farsubsp 0x2
 	0017e364 jmp 0x0017ee08
		0017ee08: UNCONDITIONAL_JUMP

	[0017e36c]
		0017e2e4: CONDITIONAL_JUMP
 	0017e36c sourceline 0x1867
 	0017e374 mov ax,0x0
 	0017e380 push ax
 	0017e388 mov ax,0x1
 	0017e394 assertlte ax,0x32
 	0017e3a0 mul ax,0x8
 	0017e3ac mov cx,ax
 	0017e3b8 pop ax
 	0017e3c0 mov bx,ax
 	0017e3cc mov mar,0x6c6f20
 	0017e3d8 add mar,cx
 	0017e3e4 mov ax,mar
 	0017e3f0 push op
 	0017e3f8 mov op,ax
 	0017e400 farpush bx
 	0017e408 setfuncargs 0x1
 	0017e410 mov ax,0xa66f20
 	0017e41c farcall ax
 	0017e424 farsubsp 0x1
 	0017e42c pop op
 	0017e434 sourceline 0x1868
 	0017e43c mov ax,0x3
 	0017e448 mov bx,ax
 	0017e454 mov mar,0x3cef20
 	0017e460 mov ax,mar
 	0017e46c push op
 	0017e474 mov op,ax
 	0017e47c farpush bx
 	0017e484 setfuncargs 0x1
 	0017e48c mov ax,0x69ef20
 	0017e498 farcall ax
 	0017e4a0 farsubsp 0x1
 	0017e4a8 pop op
 	0017e4b0 sourceline 0x1869
 	0017e4b8 push op
 	0017e4c0 mov ax,0x397
 	0017e4cc farpush ax
 	0017e4d4 mov ax,0x1
 	0017e4e0 farpush ax
 	0017e4e8 mov mar,0x3cef20
 	0017e4f4 mov ax,mar
 	0017e500 mov op,ax
 	0017e508 setfuncargs 0x2
 	0017e510 mov ax,0x6eef20
 	0017e51c farcall ax
 	0017e524 farsubsp 0x2
 	0017e52c pop op
 	0017e534 sourceline 0x186a
 	0017e53c mov ax,0x104654
 	0017e548 call ax
 	0017e550 sourceline 0x186b
 	0017e558 push op
 	0017e560 mov ax,0x6
 	0017e56c farpush ax
 	0017e574 mov mar,0x3cef20
 	0017e580 mov ax,mar
 	0017e58c mov op,ax
 	0017e594 setfuncargs 0x1
 	0017e59c mov ax,0x51ef20
 	0017e5a8 farcall ax
 	0017e5b0 farsubsp 0x1
 	0017e5b8 pop op
 	0017e5c0 sourceline 0x186c
 	0017e5c8 mov ax,0x7a
 	0017e5d4 mov bx,ax
 	0017e5e0 mov mar,0x3cef20
 	0017e5ec mov ax,mar
 	0017e5f8 push op
 	0017e600 mov op,ax
 	0017e608 farpush bx
 	0017e610 setfuncargs 0x1
 	0017e618 mov ax,0x526f20
 	0017e624 farcall ax
 	0017e62c farsubsp 0x1
 	0017e634 pop op
 	0017e63c sourceline 0x186d
 	0017e644 mov ax,0x7e
 	0017e650 mov bx,ax
 	0017e65c mov mar,0x3cef20
 	0017e668 mov ax,mar
 	0017e674 push op
 	0017e67c mov op,ax
 	0017e684 farpush bx
 	0017e68c setfuncargs 0x1
 	0017e694 mov ax,0x70ef20
 	0017e6a0 farcall ax
 	0017e6a8 farsubsp 0x1
 	0017e6b0 pop op
 	0017e6b8 sourceline 0x186e
 	0017e6c0 push op
 	0017e6c8 mov ax,0x426
 	0017e6d4 farpush ax
 	0017e6dc mov ax,0x397
 	0017e6e8 farpush ax
 	0017e6f0 mov ax,0x0
 	0017e6fc farpush ax
 	0017e704 mov ax,0x3
 	0017e710 farpush ax
 	0017e718 mov ax,0x2
 	0017e724 farpush ax
 	0017e72c mov mar,0x3cef20
 	0017e738 mov ax,mar
 	0017e744 mov op,ax
 	0017e74c setfuncargs 0x5
 	0017e754 mov ax,0x536f20
 	0017e760 farcall ax
 	0017e768 farsubsp 0x5
 	0017e770 pop op
 	0017e778 sourceline 0x1871
 	0017e780 push op
 	0017e788 mov ax,0x2bfe43
 	0017e794 farpush ax
 	0017e79c mov mar,0x3cef20
 	0017e7a8 mov ax,mar
 	0017e7b4 mov op,ax
 	0017e7bc setfuncargs 0x1
 	0017e7c4 mov ax,0x6f6f20
 	0017e7d0 farcall ax
 	0017e7d8 farsubsp 0x1
 	0017e7e0 pop op
 	0017e7e8 sourceline 0x1872
 	0017e7f0 push op
 	0017e7f8 mov ax,0x2bfe5d
 	0017e804 farpush ax
 	0017e80c mov mar,0x506f20
 	0017e818 mov ax,mar
 	0017e824 mov op,ax
 	0017e82c setfuncargs 0x1
 	0017e834 mov ax,0x6f6f20
 	0017e840 farcall ax
 	0017e848 farsubsp 0x1
 	0017e850 pop op
 	0017e858 sourceline 0x1873
 	0017e860 push op
 	0017e868 mov ax,0x427
 	0017e874 farpush ax
 	0017e87c mov ax,0x398
 	0017e888 farpush ax
 	0017e890 mov ax,0x0
 	0017e89c farpush ax
 	0017e8a4 mov ax,0x3
 	0017e8b0 farpush ax
 	0017e8b8 mov ax,0x0
 	0017e8c4 farpush ax
 	0017e8cc mov mar,0x506f20
 	0017e8d8 mov ax,mar
 	0017e8e4 mov op,ax
 	0017e8ec setfuncargs 0x5
 	0017e8f4 mov ax,0x536f20
 	0017e900 farcall ax
 	0017e908 farsubsp 0x5
 	0017e910 pop op
 	0017e918 sourceline 0x1874
 	0017e920 push op
 	0017e928 mov ax,0x427
 	0017e934 farpush ax
 	0017e93c mov ax,0x397
 	0017e948 farpush ax
 	0017e950 mov ax,0x0
 	0017e95c farpush ax
 	0017e964 mov ax,0x3
 	0017e970 farpush ax
 	0017e978 mov ax,0x2
 	0017e984 farpush ax
 	0017e98c mov mar,0x3cef20
 	0017e998 mov ax,mar
 	0017e9a4 mov op,ax
 	0017e9ac setfuncargs 0x5
 	0017e9b4 mov ax,0x536f20
 	0017e9c0 farcall ax
 	0017e9c8 farsubsp 0x5
 	0017e9d0 pop op
 	0017e9d8 sourceline 0x1875
 	0017e9e0 push op
 	0017e9e8 mov ax,0x2
 	0017e9f4 farpush ax
 	0017e9fc mov mar,0x3cef20
 	0017ea08 mov ax,mar
 	0017ea14 mov op,ax
 	0017ea1c setfuncargs 0x1
 	0017ea24 mov ax,0x51ef20
 	0017ea30 farcall ax
 	0017ea38 farsubsp 0x1
 	0017ea40 pop op
 	0017ea48 sourceline 0x1876
 	0017ea50 mov ax,0x1
 	0017ea5c mov bx,ax
 	0017ea68 mov mar,0x3cef20
 	0017ea74 mov ax,mar
 	0017ea80 push op
 	0017ea88 mov op,ax
 	0017ea90 farpush bx
 	0017ea98 setfuncargs 0x1
 	0017eaa0 mov ax,0x766f20
 	0017eaac farcall ax
 	0017eab4 farsubsp 0x1
 	0017eabc pop op
 	0017eac4 sourceline 0x1877
 	0017eacc mov ax,0x86
 	0017ead8 mov bx,ax
 	0017eae4 mov mar,0x3cef20
 	0017eaf0 mov ax,mar
 	0017eafc push op
 	0017eb04 mov op,ax
 	0017eb0c farpush bx
 	0017eb14 setfuncargs 0x1
 	0017eb1c mov ax,0x70ef20
 	0017eb28 farcall ax
 	0017eb30 farsubsp 0x1
 	0017eb38 pop op
 	0017eb40 sourceline 0x1878
 	0017eb48 mov ax,0x82
 	0017eb54 mov bx,ax
 	0017eb60 mov mar,0x3cef20
 	0017eb6c mov ax,mar
 	0017eb78 push op
 	0017eb80 mov op,ax
 	0017eb88 farpush bx
 	0017eb90 setfuncargs 0x1
 	0017eb98 mov ax,0x526f20
 	0017eba4 farcall ax
 	0017ebac farsubsp 0x1
 	0017ebb4 pop op
 	0017ebbc sourceline 0x1879
 	0017ebc4 mov ax,0x0
 	0017ebd0 mov bx,ax
 	0017ebdc mov mar,0x3cef20
 	0017ebe8 mov ax,mar
 	0017ebf4 push op
 	0017ebfc mov op,ax
 	0017ec04 farpush bx
 	0017ec0c setfuncargs 0x1
 	0017ec14 mov ax,0x436f20
 	0017ec20 farcall ax
 	0017ec28 farsubsp 0x1
 	0017ec30 pop op
 	0017ec38 sourceline 0x187a
 	0017ec40 mov ax,0x1
 	0017ec4c mov bx,ax
 	0017ec58 mov mar,0x3cef20
 	0017ec64 mov ax,mar
 	0017ec70 push op
 	0017ec78 mov op,ax
 	0017ec80 farpush bx
 	0017ec88 setfuncargs 0x1
 	0017ec90 mov ax,0x69ef20
 	0017ec9c farcall ax
 	0017eca4 farsubsp 0x1
 	0017ecac pop op
 	0017ecb4 sourceline 0x187b
 	0017ecbc mov ax,0x1
 	0017ecc8 push ax
 	0017ecd0 mov ax,0x1
 	0017ecdc assertlte ax,0x32
 	0017ece8 mul ax,0x8
 	0017ecf4 mov cx,ax
 	0017ed00 pop ax
 	0017ed08 mov bx,ax
 	0017ed14 mov mar,0x6c6f20
 	0017ed20 add mar,cx
 	0017ed2c mov ax,mar
 	0017ed38 push op
 	0017ed40 mov op,ax
 	0017ed48 farpush bx
 	0017ed50 setfuncargs 0x1
 	0017ed58 mov ax,0xa66f20
 	0017ed64 farcall ax
 	0017ed6c farsubsp 0x1
 	0017ed74 pop op
 	0017ed7c sourceline 0x187c
 	0017ed84 mov ax,0x50
 	0017ed90 push ax
 	0017ed98 mov ax,0x1e
 	0017eda4 push ax
 	0017edac mov ax,0x10445c
 	0017edb8 call ax
 	0017edc0 sub sp,0x8
 	0017edcc mov mar,0x4e6f20
 	0017edd8 memwrite4 ax
 	0017ede0 sourceline 0x187d
 	0017ede8 mov ax,0x1
 	0017edf4 mov mar,0x4aef20
 	0017ee00 memwrite4 ax
		0017ee08: FALL_THROUGH

	[0017ee08]
		0017e318: UNCONDITIONAL_JUMP
		0017e36c: FALL_THROUGH
 	0017ee08 sourceline 0x187f
 	0017ee10 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[0017ee18]
		0017e248: CONDITIONAL_JUMP
 	0017ee18 sourceline 0x1881
 	0017ee20 mov mar,0x3cef20
 	0017ee2c mov ax,mar
 	0017ee38 push op
 	0017ee40 mov op,ax
 	0017ee48 setfuncargs 0x0
 	0017ee50 mov ax,0x89ef20
 	0017ee5c farcall ax
 	0017ee64 pop op
 	0017ee6c push ax
 	0017ee74 mov mar,0x9f6f20
 	0017ee80 mov ax,mar
 	0017ee8c pop bx
 	0017ee94 cmpeq bx,ax
 	0017eea0 mov ax,bx
 	0017eeac jz 0x0017f9e8
		0017f9e8: CONDITIONAL_JUMP
		0017eeb4: FALL_THROUGH

	[0017eeb4]
		0017ee18: FALL_THROUGH
 	0017eeb4 sourceline 0x1883
 	0017eebc setfuncargs 0x0
 	0017eec4 mov ax,0x6def20
 	0017eed0 farcall ax
 	0017eed8 lnot ax
 	0017eee0 jz 0x0017ef3c
		0017ef3c: CONDITIONAL_JUMP
		0017eee8: FALL_THROUGH

	[0017eee8]
		0017eeb4: FALL_THROUGH
 	0017eee8 mov ax,0x82
 	0017eef4 farpush ax
 	0017eefc mov ax,0x86
 	0017ef08 farpush ax
 	0017ef10 setfuncargs 0x2
 	0017ef18 mov ax,0x6e6f20
 	0017ef24 farcall ax
 	0017ef2c farsubsp 0x2
 	0017ef34 jmp 0x0017f9d8
		0017f9d8: UNCONDITIONAL_JUMP

	[0017ef3c]
		0017eeb4: CONDITIONAL_JUMP
 	0017ef3c sourceline 0x1886
 	0017ef44 mov ax,0x0
 	0017ef50 push ax
 	0017ef58 mov ax,0x1
 	0017ef64 assertlte ax,0x32
 	0017ef70 mul ax,0x8
 	0017ef7c mov cx,ax
 	0017ef88 pop ax
 	0017ef90 mov bx,ax
 	0017ef9c mov mar,0x6c6f20
 	0017efa8 add mar,cx
 	0017efb4 mov ax,mar
 	0017efc0 push op
 	0017efc8 mov op,ax
 	0017efd0 farpush bx
 	0017efd8 setfuncargs 0x1
 	0017efe0 mov ax,0xa66f20
 	0017efec farcall ax
 	0017eff4 farsubsp 0x1
 	0017effc pop op
 	0017f004 sourceline 0x1887
 	0017f00c mov ax,0x3
 	0017f018 mov bx,ax
 	0017f024 mov mar,0x3cef20
 	0017f030 mov ax,mar
 	0017f03c push op
 	0017f044 mov op,ax
 	0017f04c farpush bx
 	0017f054 setfuncargs 0x1
 	0017f05c mov ax,0x69ef20
 	0017f068 farcall ax
 	0017f070 farsubsp 0x1
 	0017f078 pop op
 	0017f080 sourceline 0x1888
 	0017f088 push op
 	0017f090 mov ax,0x397
 	0017f09c farpush ax
 	0017f0a4 mov ax,0x1
 	0017f0b0 farpush ax
 	0017f0b8 mov mar,0x3cef20
 	0017f0c4 mov ax,mar
 	0017f0d0 mov op,ax
 	0017f0d8 setfuncargs 0x2
 	0017f0e0 mov ax,0x6eef20
 	0017f0ec farcall ax
 	0017f0f4 farsubsp 0x2
 	0017f0fc pop op
 	0017f104 sourceline 0x1889
 	0017f10c mov ax,0x104654
 	0017f118 call ax
 	0017f120 sourceline 0x188a
 	0017f128 push op
 	0017f130 mov ax,0x6
 	0017f13c farpush ax
 	0017f144 mov mar,0x3cef20
 	0017f150 mov ax,mar
 	0017f15c mov op,ax
 	0017f164 setfuncargs 0x1
 	0017f16c mov ax,0x51ef20
 	0017f178 farcall ax
 	0017f180 farsubsp 0x1
 	0017f188 pop op
 	0017f190 sourceline 0x188b
 	0017f198 mov ax,0x7a
 	0017f1a4 mov bx,ax
 	0017f1b0 mov mar,0x3cef20
 	0017f1bc mov ax,mar
 	0017f1c8 push op
 	0017f1d0 mov op,ax
 	0017f1d8 farpush bx
 	0017f1e0 setfuncargs 0x1
 	0017f1e8 mov ax,0x526f20
 	0017f1f4 farcall ax
 	0017f1fc farsubsp 0x1
 	0017f204 pop op
 	0017f20c sourceline 0x188c
 	0017f214 mov ax,0x7e
 	0017f220 mov bx,ax
 	0017f22c mov mar,0x3cef20
 	0017f238 mov ax,mar
 	0017f244 push op
 	0017f24c mov op,ax
 	0017f254 farpush bx
 	0017f25c setfuncargs 0x1
 	0017f264 mov ax,0x70ef20
 	0017f270 farcall ax
 	0017f278 farsubsp 0x1
 	0017f280 pop op
 	0017f288 sourceline 0x188d
 	0017f290 push op
 	0017f298 mov ax,0x426
 	0017f2a4 farpush ax
 	0017f2ac mov ax,0x397
 	0017f2b8 farpush ax
 	0017f2c0 mov ax,0x0
 	0017f2cc farpush ax
 	0017f2d4 mov ax,0x3
 	0017f2e0 farpush ax
 	0017f2e8 mov ax,0x2
 	0017f2f4 farpush ax
 	0017f2fc mov mar,0x3cef20
 	0017f308 mov ax,mar
 	0017f314 mov op,ax
 	0017f31c setfuncargs 0x5
 	0017f324 mov ax,0x536f20
 	0017f330 farcall ax
 	0017f338 farsubsp 0x5
 	0017f340 pop op
 	0017f348 sourceline 0x1890
 	0017f350 push op
 	0017f358 mov ax,0x2bfea2
 	0017f364 farpush ax
 	0017f36c mov mar,0x3cef20
 	0017f378 mov ax,mar
 	0017f384 mov op,ax
 	0017f38c setfuncargs 0x1
 	0017f394 mov ax,0x6f6f20
 	0017f3a0 farcall ax
 	0017f3a8 farsubsp 0x1
 	0017f3b0 pop op
 	0017f3b8 sourceline 0x1891
 	0017f3c0 push op
 	0017f3c8 mov ax,0x2bfeb9
 	0017f3d4 farpush ax
 	0017f3dc mov mar,0x506f20
 	0017f3e8 mov ax,mar
 	0017f3f4 mov op,ax
 	0017f3fc setfuncargs 0x1
 	0017f404 mov ax,0x6f6f20
 	0017f410 farcall ax
 	0017f418 farsubsp 0x1
 	0017f420 pop op
 	0017f428 sourceline 0x1892
 	0017f430 push op
 	0017f438 mov ax,0x427
 	0017f444 farpush ax
 	0017f44c mov ax,0x398
 	0017f458 farpush ax
 	0017f460 mov ax,0x0
 	0017f46c farpush ax
 	0017f474 mov ax,0x3
 	0017f480 farpush ax
 	0017f488 mov ax,0x0
 	0017f494 farpush ax
 	0017f49c mov mar,0x506f20
 	0017f4a8 mov ax,mar
 	0017f4b4 mov op,ax
 	0017f4bc setfuncargs 0x5
 	0017f4c4 mov ax,0x536f20
 	0017f4d0 farcall ax
 	0017f4d8 farsubsp 0x5
 	0017f4e0 pop op
 	0017f4e8 sourceline 0x1893
 	0017f4f0 push op
 	0017f4f8 mov ax,0x427
 	0017f504 farpush ax
 	0017f50c mov ax,0x397
 	0017f518 farpush ax
 	0017f520 mov ax,0x0
 	0017f52c farpush ax
 	0017f534 mov ax,0x3
 	0017f540 farpush ax
 	0017f548 mov ax,0x2
 	0017f554 farpush ax
 	0017f55c mov mar,0x3cef20
 	0017f568 mov ax,mar
 	0017f574 mov op,ax
 	0017f57c setfuncargs 0x5
 	0017f584 mov ax,0x536f20
 	0017f590 farcall ax
 	0017f598 farsubsp 0x5
 	0017f5a0 pop op
 	0017f5a8 sourceline 0x1894
 	0017f5b0 push op
 	0017f5b8 mov ax,0x2
 	0017f5c4 farpush ax
 	0017f5cc mov mar,0x3cef20
 	0017f5d8 mov ax,mar
 	0017f5e4 mov op,ax
 	0017f5ec setfuncargs 0x1
 	0017f5f4 mov ax,0x51ef20
 	0017f600 farcall ax
 	0017f608 farsubsp 0x1
 	0017f610 pop op
 	0017f618 sourceline 0x1895
 	0017f620 mov ax,0x1
 	0017f62c mov bx,ax
 	0017f638 mov mar,0x3cef20
 	0017f644 mov ax,mar
 	0017f650 push op
 	0017f658 mov op,ax
 	0017f660 farpush bx
 	0017f668 setfuncargs 0x1
 	0017f670 mov ax,0x766f20
 	0017f67c farcall ax
 	0017f684 farsubsp 0x1
 	0017f68c pop op
 	0017f694 sourceline 0x1896
 	0017f69c mov ax,0x86
 	0017f6a8 mov bx,ax
 	0017f6b4 mov mar,0x3cef20
 	0017f6c0 mov ax,mar
 	0017f6cc push op
 	0017f6d4 mov op,ax
 	0017f6dc farpush bx
 	0017f6e4 setfuncargs 0x1
 	0017f6ec mov ax,0x70ef20
 	0017f6f8 farcall ax
 	0017f700 farsubsp 0x1
 	0017f708 pop op
 	0017f710 sourceline 0x1897
 	0017f718 mov ax,0x82
 	0017f724 mov bx,ax
 	0017f730 mov mar,0x3cef20
 	0017f73c mov ax,mar
 	0017f748 push op
 	0017f750 mov op,ax
 	0017f758 farpush bx
 	0017f760 setfuncargs 0x1
 	0017f768 mov ax,0x526f20
 	0017f774 farcall ax
 	0017f77c farsubsp 0x1
 	0017f784 pop op
 	0017f78c sourceline 0x1898
 	0017f794 mov ax,0x0
 	0017f7a0 mov bx,ax
 	0017f7ac mov mar,0x3cef20
 	0017f7b8 mov ax,mar
 	0017f7c4 push op
 	0017f7cc mov op,ax
 	0017f7d4 farpush bx
 	0017f7dc setfuncargs 0x1
 	0017f7e4 mov ax,0x436f20
 	0017f7f0 farcall ax
 	0017f7f8 farsubsp 0x1
 	0017f800 pop op
 	0017f808 sourceline 0x1899
 	0017f810 mov ax,0x1
 	0017f81c mov bx,ax
 	0017f828 mov mar,0x3cef20
 	0017f834 mov ax,mar
 	0017f840 push op
 	0017f848 mov op,ax
 	0017f850 farpush bx
 	0017f858 setfuncargs 0x1
 	0017f860 mov ax,0x69ef20
 	0017f86c farcall ax
 	0017f874 farsubsp 0x1
 	0017f87c pop op
 	0017f884 sourceline 0x189a
 	0017f88c mov ax,0x1
 	0017f898 push ax
 	0017f8a0 mov ax,0x1
 	0017f8ac assertlte ax,0x32
 	0017f8b8 mul ax,0x8
 	0017f8c4 mov cx,ax
 	0017f8d0 pop ax
 	0017f8d8 mov bx,ax
 	0017f8e4 mov mar,0x6c6f20
 	0017f8f0 add mar,cx
 	0017f8fc mov ax,mar
 	0017f908 push op
 	0017f910 mov op,ax
 	0017f918 farpush bx
 	0017f920 setfuncargs 0x1
 	0017f928 mov ax,0xa66f20
 	0017f934 farcall ax
 	0017f93c farsubsp 0x1
 	0017f944 pop op
 	0017f94c sourceline 0x189b
 	0017f954 mov ax,0x50
 	0017f960 push ax
 	0017f968 mov ax,0x1e
 	0017f974 push ax
 	0017f97c mov ax,0x10445c
 	0017f988 call ax
 	0017f990 sub sp,0x8
 	0017f99c mov mar,0x4e6f20
 	0017f9a8 memwrite4 ax
 	0017f9b0 sourceline 0x189c
 	0017f9b8 mov ax,0x1
 	0017f9c4 mov mar,0x4aef20
 	0017f9d0 memwrite4 ax
		0017f9d8: FALL_THROUGH

	[0017f9d8]
		0017eee8: UNCONDITIONAL_JUMP
		0017ef3c: FALL_THROUGH
 	0017f9d8 sourceline 0x189e
 	0017f9e0 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[0017f9e8]
		0017ee18: CONDITIONAL_JUMP
 	0017f9e8 sourceline 0x18a0
 	0017f9f0 mov mar,0x3cef20
 	0017f9fc mov ax,mar
 	0017fa08 push op
 	0017fa10 mov op,ax
 	0017fa18 setfuncargs 0x0
 	0017fa20 mov ax,0x89ef20
 	0017fa2c farcall ax
 	0017fa34 pop op
 	0017fa3c push ax
 	0017fa44 mov mar,0x9eef20
 	0017fa50 mov ax,mar
 	0017fa5c pop bx
 	0017fa64 cmpeq bx,ax
 	0017fa70 mov ax,bx
 	0017fa7c jz 0x00180628
		00180628: CONDITIONAL_JUMP
		0017fa84: FALL_THROUGH

	[0017fa84]
		0017f9e8: FALL_THROUGH
 	0017fa84 sourceline 0x18a2
 	0017fa8c setfuncargs 0x0
 	0017fa94 mov ax,0x6def20
 	0017faa0 farcall ax
 	0017faa8 lnot ax
 	0017fab0 jz 0x0017fb0c
		0017fb0c: CONDITIONAL_JUMP
		0017fab8: FALL_THROUGH

	[0017fab8]
		0017fa84: FALL_THROUGH
 	0017fab8 mov ax,0x82
 	0017fac4 farpush ax
 	0017facc mov ax,0x86
 	0017fad8 farpush ax
 	0017fae0 setfuncargs 0x2
 	0017fae8 mov ax,0x6e6f20
 	0017faf4 farcall ax
 	0017fafc farsubsp 0x2
 	0017fb04 jmp 0x00180618
		00180618: UNCONDITIONAL_JUMP

	[0017fb0c]
		0017fa84: CONDITIONAL_JUMP
 	0017fb0c sourceline 0x18a5
 	0017fb14 mov ax,0x0
 	0017fb20 push ax
 	0017fb28 mov ax,0x1
 	0017fb34 assertlte ax,0x32
 	0017fb40 mul ax,0x8
 	0017fb4c mov cx,ax
 	0017fb58 pop ax
 	0017fb60 mov bx,ax
 	0017fb6c mov mar,0x6c6f20
 	0017fb78 add mar,cx
 	0017fb84 mov ax,mar
 	0017fb90 push op
 	0017fb98 mov op,ax
 	0017fba0 farpush bx
 	0017fba8 setfuncargs 0x1
 	0017fbb0 mov ax,0xa66f20
 	0017fbbc farcall ax
 	0017fbc4 farsubsp 0x1
 	0017fbcc pop op
 	0017fbd4 sourceline 0x18a6
 	0017fbdc mov ax,0x3
 	0017fbe8 mov bx,ax
 	0017fbf4 mov mar,0x3cef20
 	0017fc00 mov ax,mar
 	0017fc0c push op
 	0017fc14 mov op,ax
 	0017fc1c farpush bx
 	0017fc24 setfuncargs 0x1
 	0017fc2c mov ax,0x69ef20
 	0017fc38 farcall ax
 	0017fc40 farsubsp 0x1
 	0017fc48 pop op
 	0017fc50 sourceline 0x18a7
 	0017fc58 push op
 	0017fc60 mov ax,0x397
 	0017fc6c farpush ax
 	0017fc74 mov ax,0x1
 	0017fc80 farpush ax
 	0017fc88 mov mar,0x3cef20
 	0017fc94 mov ax,mar
 	0017fca0 mov op,ax
 	0017fca8 setfuncargs 0x2
 	0017fcb0 mov ax,0x6eef20
 	0017fcbc farcall ax
 	0017fcc4 farsubsp 0x2
 	0017fccc pop op
 	0017fcd4 sourceline 0x18a8
 	0017fcdc mov ax,0x104654
 	0017fce8 call ax
 	0017fcf0 sourceline 0x18a9
 	0017fcf8 push op
 	0017fd00 mov ax,0x6
 	0017fd0c farpush ax
 	0017fd14 mov mar,0x3cef20
 	0017fd20 mov ax,mar
 	0017fd2c mov op,ax
 	0017fd34 setfuncargs 0x1
 	0017fd3c mov ax,0x51ef20
 	0017fd48 farcall ax
 	0017fd50 farsubsp 0x1
 	0017fd58 pop op
 	0017fd60 sourceline 0x18aa
 	0017fd68 mov ax,0x7a
 	0017fd74 mov bx,ax
 	0017fd80 mov mar,0x3cef20
 	0017fd8c mov ax,mar
 	0017fd98 push op
 	0017fda0 mov op,ax
 	0017fda8 farpush bx
 	0017fdb0 setfuncargs 0x1
 	0017fdb8 mov ax,0x526f20
 	0017fdc4 farcall ax
 	0017fdcc farsubsp 0x1
 	0017fdd4 pop op
 	0017fddc sourceline 0x18ab
 	0017fde4 mov ax,0x7e
 	0017fdf0 mov bx,ax
 	0017fdfc mov mar,0x3cef20
 	0017fe08 mov ax,mar
 	0017fe14 push op
 	0017fe1c mov op,ax
 	0017fe24 farpush bx
 	0017fe2c setfuncargs 0x1
 	0017fe34 mov ax,0x70ef20
 	0017fe40 farcall ax
 	0017fe48 farsubsp 0x1
 	0017fe50 pop op
 	0017fe58 sourceline 0x18ac
 	0017fe60 push op
 	0017fe68 mov ax,0x426
 	0017fe74 farpush ax
 	0017fe7c mov ax,0x397
 	0017fe88 farpush ax
 	0017fe90 mov ax,0x0
 	0017fe9c farpush ax
 	0017fea4 mov ax,0x3
 	0017feb0 farpush ax
 	0017feb8 mov ax,0x2
 	0017fec4 farpush ax
 	0017fecc mov mar,0x3cef20
 	0017fed8 mov ax,mar
 	0017fee4 mov op,ax
 	0017feec setfuncargs 0x5
 	0017fef4 mov ax,0x536f20
 	0017ff00 farcall ax
 	0017ff08 farsubsp 0x5
 	0017ff10 pop op
 	0017ff18 sourceline 0x18af
 	0017ff20 push op
 	0017ff28 mov ax,0x2bff11
 	0017ff34 farpush ax
 	0017ff3c mov mar,0x3cef20
 	0017ff48 mov ax,mar
 	0017ff54 mov op,ax
 	0017ff5c setfuncargs 0x1
 	0017ff64 mov ax,0x6f6f20
 	0017ff70 farcall ax
 	0017ff78 farsubsp 0x1
 	0017ff80 pop op
 	0017ff88 sourceline 0x18b0
 	0017ff90 push op
 	0017ff98 mov ax,0x2bff32
 	0017ffa4 farpush ax
 	0017ffac mov mar,0x506f20
 	0017ffb8 mov ax,mar
 	0017ffc4 mov op,ax
 	0017ffcc setfuncargs 0x1
 	0017ffd4 mov ax,0x6f6f20
 	0017ffe0 farcall ax
 	0017ffe8 farsubsp 0x1
 	0017fff0 pop op
 	0017fff8 sourceline 0x18b1
 	00180000 push op
 	00180008 mov ax,0x2bff4a
 	00180014 farpush ax
 	0018001c mov mar,0x3cef20
 	00180028 mov ax,mar
 	00180034 mov op,ax
 	0018003c setfuncargs 0x1
 	00180044 mov ax,0x6f6f20
 	00180050 farcall ax
 	00180058 farsubsp 0x1
 	00180060 pop op
 	00180068 sourceline 0x18b2
 	00180070 push op
 	00180078 mov ax,0x427
 	00180084 farpush ax
 	0018008c mov ax,0x398
 	00180098 farpush ax
 	001800a0 mov ax,0x0
 	001800ac farpush ax
 	001800b4 mov ax,0x3
 	001800c0 farpush ax
 	001800c8 mov ax,0x0
 	001800d4 farpush ax
 	001800dc mov mar,0x506f20
 	001800e8 mov ax,mar
 	001800f4 mov op,ax
 	001800fc setfuncargs 0x5
 	00180104 mov ax,0x536f20
 	00180110 farcall ax
 	00180118 farsubsp 0x5
 	00180120 pop op
 	00180128 sourceline 0x18b3
 	00180130 push op
 	00180138 mov ax,0x427
 	00180144 farpush ax
 	0018014c mov ax,0x397
 	00180158 farpush ax
 	00180160 mov ax,0x0
 	0018016c farpush ax
 	00180174 mov ax,0x3
 	00180180 farpush ax
 	00180188 mov ax,0x2
 	00180194 farpush ax
 	0018019c mov mar,0x3cef20
 	001801a8 mov ax,mar
 	001801b4 mov op,ax
 	001801bc setfuncargs 0x5
 	001801c4 mov ax,0x536f20
 	001801d0 farcall ax
 	001801d8 farsubsp 0x5
 	001801e0 pop op
 	001801e8 sourceline 0x18b4
 	001801f0 push op
 	001801f8 mov ax,0x2
 	00180204 farpush ax
 	0018020c mov mar,0x3cef20
 	00180218 mov ax,mar
 	00180224 mov op,ax
 	0018022c setfuncargs 0x1
 	00180234 mov ax,0x51ef20
 	00180240 farcall ax
 	00180248 farsubsp 0x1
 	00180250 pop op
 	00180258 sourceline 0x18b5
 	00180260 mov ax,0x1
 	0018026c mov bx,ax
 	00180278 mov mar,0x3cef20
 	00180284 mov ax,mar
 	00180290 push op
 	00180298 mov op,ax
 	001802a0 farpush bx
 	001802a8 setfuncargs 0x1
 	001802b0 mov ax,0x766f20
 	001802bc farcall ax
 	001802c4 farsubsp 0x1
 	001802cc pop op
 	001802d4 sourceline 0x18b6
 	001802dc mov ax,0x86
 	001802e8 mov bx,ax
 	001802f4 mov mar,0x3cef20
 	00180300 mov ax,mar
 	0018030c push op
 	00180314 mov op,ax
 	0018031c farpush bx
 	00180324 setfuncargs 0x1
 	0018032c mov ax,0x70ef20
 	00180338 farcall ax
 	00180340 farsubsp 0x1
 	00180348 pop op
 	00180350 sourceline 0x18b7
 	00180358 mov ax,0x82
 	00180364 mov bx,ax
 	00180370 mov mar,0x3cef20
 	0018037c mov ax,mar
 	00180388 push op
 	00180390 mov op,ax
 	00180398 farpush bx
 	001803a0 setfuncargs 0x1
 	001803a8 mov ax,0x526f20
 	001803b4 farcall ax
 	001803bc farsubsp 0x1
 	001803c4 pop op
 	001803cc sourceline 0x18b8
 	001803d4 mov ax,0x0
 	001803e0 mov bx,ax
 	001803ec mov mar,0x3cef20
 	001803f8 mov ax,mar
 	00180404 push op
 	0018040c mov op,ax
 	00180414 farpush bx
 	0018041c setfuncargs 0x1
 	00180424 mov ax,0x436f20
 	00180430 farcall ax
 	00180438 farsubsp 0x1
 	00180440 pop op
 	00180448 sourceline 0x18b9
 	00180450 mov ax,0x1
 	0018045c mov bx,ax
 	00180468 mov mar,0x3cef20
 	00180474 mov ax,mar
 	00180480 push op
 	00180488 mov op,ax
 	00180490 farpush bx
 	00180498 setfuncargs 0x1
 	001804a0 mov ax,0x69ef20
 	001804ac farcall ax
 	001804b4 farsubsp 0x1
 	001804bc pop op
 	001804c4 sourceline 0x18ba
 	001804cc mov ax,0x1
 	001804d8 push ax
 	001804e0 mov ax,0x1
 	001804ec assertlte ax,0x32
 	001804f8 mul ax,0x8
 	00180504 mov cx,ax
 	00180510 pop ax
 	00180518 mov bx,ax
 	00180524 mov mar,0x6c6f20
 	00180530 add mar,cx
 	0018053c mov ax,mar
 	00180548 push op
 	00180550 mov op,ax
 	00180558 farpush bx
 	00180560 setfuncargs 0x1
 	00180568 mov ax,0xa66f20
 	00180574 farcall ax
 	0018057c farsubsp 0x1
 	00180584 pop op
 	0018058c sourceline 0x18bb
 	00180594 mov ax,0x50
 	001805a0 push ax
 	001805a8 mov ax,0x1e
 	001805b4 push ax
 	001805bc mov ax,0x10445c
 	001805c8 call ax
 	001805d0 sub sp,0x8
 	001805dc mov mar,0x4e6f20
 	001805e8 memwrite4 ax
 	001805f0 sourceline 0x18bc
 	001805f8 mov ax,0x1
 	00180604 mov mar,0x4aef20
 	00180610 memwrite4 ax
		00180618: FALL_THROUGH

	[00180618]
		0017fab8: UNCONDITIONAL_JUMP
		0017fb0c: FALL_THROUGH
 	00180618 sourceline 0x18be
 	00180620 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00180628]
		0017f9e8: CONDITIONAL_JUMP
 	00180628 sourceline 0x18c0
 	00180630 mov mar,0x3cef20
 	0018063c mov ax,mar
 	00180648 push op
 	00180650 mov op,ax
 	00180658 setfuncargs 0x0
 	00180660 mov ax,0x89ef20
 	0018066c farcall ax
 	00180674 pop op
 	0018067c push ax
 	00180684 mov mar,0x99ef20
 	00180690 mov ax,mar
 	0018069c pop bx
 	001806a4 cmpeq bx,ax
 	001806b0 mov ax,bx
 	001806bc jz 0x001811f8
		001811f8: CONDITIONAL_JUMP
		001806c4: FALL_THROUGH

	[001806c4]
		00180628: FALL_THROUGH
 	001806c4 sourceline 0x18c2
 	001806cc setfuncargs 0x0
 	001806d4 mov ax,0x6def20
 	001806e0 farcall ax
 	001806e8 lnot ax
 	001806f0 jz 0x0018074c
		0018074c: CONDITIONAL_JUMP
		001806f8: FALL_THROUGH

	[001806f8]
		001806c4: FALL_THROUGH
 	001806f8 mov ax,0x82
 	00180704 farpush ax
 	0018070c mov ax,0x86
 	00180718 farpush ax
 	00180720 setfuncargs 0x2
 	00180728 mov ax,0x6e6f20
 	00180734 farcall ax
 	0018073c farsubsp 0x2
 	00180744 jmp 0x001811e8
		001811e8: UNCONDITIONAL_JUMP

	[0018074c]
		001806c4: CONDITIONAL_JUMP
 	0018074c sourceline 0x18c5
 	00180754 mov ax,0x0
 	00180760 push ax
 	00180768 mov ax,0x1
 	00180774 assertlte ax,0x32
 	00180780 mul ax,0x8
 	0018078c mov cx,ax
 	00180798 pop ax
 	001807a0 mov bx,ax
 	001807ac mov mar,0x6c6f20
 	001807b8 add mar,cx
 	001807c4 mov ax,mar
 	001807d0 push op
 	001807d8 mov op,ax
 	001807e0 farpush bx
 	001807e8 setfuncargs 0x1
 	001807f0 mov ax,0xa66f20
 	001807fc farcall ax
 	00180804 farsubsp 0x1
 	0018080c pop op
 	00180814 sourceline 0x18c6
 	0018081c mov ax,0x3
 	00180828 mov bx,ax
 	00180834 mov mar,0x3cef20
 	00180840 mov ax,mar
 	0018084c push op
 	00180854 mov op,ax
 	0018085c farpush bx
 	00180864 setfuncargs 0x1
 	0018086c mov ax,0x69ef20
 	00180878 farcall ax
 	00180880 farsubsp 0x1
 	00180888 pop op
 	00180890 sourceline 0x18c7
 	00180898 push op
 	001808a0 mov ax,0x397
 	001808ac farpush ax
 	001808b4 mov ax,0x1
 	001808c0 farpush ax
 	001808c8 mov mar,0x3cef20
 	001808d4 mov ax,mar
 	001808e0 mov op,ax
 	001808e8 setfuncargs 0x2
 	001808f0 mov ax,0x6eef20
 	001808fc farcall ax
 	00180904 farsubsp 0x2
 	0018090c pop op
 	00180914 sourceline 0x18c8
 	0018091c mov ax,0x104654
 	00180928 call ax
 	00180930 sourceline 0x18c9
 	00180938 push op
 	00180940 mov ax,0x6
 	0018094c farpush ax
 	00180954 mov mar,0x3cef20
 	00180960 mov ax,mar
 	0018096c mov op,ax
 	00180974 setfuncargs 0x1
 	0018097c mov ax,0x51ef20
 	00180988 farcall ax
 	00180990 farsubsp 0x1
 	00180998 pop op
 	001809a0 sourceline 0x18ca
 	001809a8 mov ax,0x7a
 	001809b4 mov bx,ax
 	001809c0 mov mar,0x3cef20
 	001809cc mov ax,mar
 	001809d8 push op
 	001809e0 mov op,ax
 	001809e8 farpush bx
 	001809f0 setfuncargs 0x1
 	001809f8 mov ax,0x526f20
 	00180a04 farcall ax
 	00180a0c farsubsp 0x1
 	00180a14 pop op
 	00180a1c sourceline 0x18cb
 	00180a24 mov ax,0x7e
 	00180a30 mov bx,ax
 	00180a3c mov mar,0x3cef20
 	00180a48 mov ax,mar
 	00180a54 push op
 	00180a5c mov op,ax
 	00180a64 farpush bx
 	00180a6c setfuncargs 0x1
 	00180a74 mov ax,0x70ef20
 	00180a80 farcall ax
 	00180a88 farsubsp 0x1
 	00180a90 pop op
 	00180a98 sourceline 0x18cc
 	00180aa0 push op
 	00180aa8 mov ax,0x426
 	00180ab4 farpush ax
 	00180abc mov ax,0x397
 	00180ac8 farpush ax
 	00180ad0 mov ax,0x0
 	00180adc farpush ax
 	00180ae4 mov ax,0x3
 	00180af0 farpush ax
 	00180af8 mov ax,0x2
 	00180b04 farpush ax
 	00180b0c mov mar,0x3cef20
 	00180b18 mov ax,mar
 	00180b24 mov op,ax
 	00180b2c setfuncargs 0x5
 	00180b34 mov ax,0x536f20
 	00180b40 farcall ax
 	00180b48 farsubsp 0x5
 	00180b50 pop op
 	00180b58 sourceline 0x18cf
 	00180b60 push op
 	00180b68 mov ax,0x2bff62
 	00180b74 farpush ax
 	00180b7c mov mar,0x3cef20
 	00180b88 mov ax,mar
 	00180b94 mov op,ax
 	00180b9c setfuncargs 0x1
 	00180ba4 mov ax,0x6f6f20
 	00180bb0 farcall ax
 	00180bb8 farsubsp 0x1
 	00180bc0 pop op
 	00180bc8 sourceline 0x18d0
 	00180bd0 push op
 	00180bd8 mov ax,0x2bff83
 	00180be4 farpush ax
 	00180bec mov mar,0x506f20
 	00180bf8 mov ax,mar
 	00180c04 mov op,ax
 	00180c0c setfuncargs 0x1
 	00180c14 mov ax,0x6f6f20
 	00180c20 farcall ax
 	00180c28 farsubsp 0x1
 	00180c30 pop op
 	00180c38 sourceline 0x18d1
 	00180c40 push op
 	00180c48 mov ax,0x427
 	00180c54 farpush ax
 	00180c5c mov ax,0x398
 	00180c68 farpush ax
 	00180c70 mov ax,0x0
 	00180c7c farpush ax
 	00180c84 mov ax,0x3
 	00180c90 farpush ax
 	00180c98 mov ax,0x0
 	00180ca4 farpush ax
 	00180cac mov mar,0x506f20
 	00180cb8 mov ax,mar
 	00180cc4 mov op,ax
 	00180ccc setfuncargs 0x5
 	00180cd4 mov ax,0x536f20
 	00180ce0 farcall ax
 	00180ce8 farsubsp 0x5
 	00180cf0 pop op
 	00180cf8 sourceline 0x18d2
 	00180d00 push op
 	00180d08 mov ax,0x427
 	00180d14 farpush ax
 	00180d1c mov ax,0x397
 	00180d28 farpush ax
 	00180d30 mov ax,0x0
 	00180d3c farpush ax
 	00180d44 mov ax,0x3
 	00180d50 farpush ax
 	00180d58 mov ax,0x2
 	00180d64 farpush ax
 	00180d6c mov mar,0x3cef20
 	00180d78 mov ax,mar
 	00180d84 mov op,ax
 	00180d8c setfuncargs 0x5
 	00180d94 mov ax,0x536f20
 	00180da0 farcall ax
 	00180da8 farsubsp 0x5
 	00180db0 pop op
 	00180db8 sourceline 0x18d3
 	00180dc0 push op
 	00180dc8 mov ax,0x2
 	00180dd4 farpush ax
 	00180ddc mov mar,0x3cef20
 	00180de8 mov ax,mar
 	00180df4 mov op,ax
 	00180dfc setfuncargs 0x1
 	00180e04 mov ax,0x51ef20
 	00180e10 farcall ax
 	00180e18 farsubsp 0x1
 	00180e20 pop op
 	00180e28 sourceline 0x18d4
 	00180e30 mov ax,0x1
 	00180e3c mov bx,ax
 	00180e48 mov mar,0x3cef20
 	00180e54 mov ax,mar
 	00180e60 push op
 	00180e68 mov op,ax
 	00180e70 farpush bx
 	00180e78 setfuncargs 0x1
 	00180e80 mov ax,0x766f20
 	00180e8c farcall ax
 	00180e94 farsubsp 0x1
 	00180e9c pop op
 	00180ea4 sourceline 0x18d5
 	00180eac mov ax,0x86
 	00180eb8 mov bx,ax
 	00180ec4 mov mar,0x3cef20
 	00180ed0 mov ax,mar
 	00180edc push op
 	00180ee4 mov op,ax
 	00180eec farpush bx
 	00180ef4 setfuncargs 0x1
 	00180efc mov ax,0x70ef20
 	00180f08 farcall ax
 	00180f10 farsubsp 0x1
 	00180f18 pop op
 	00180f20 sourceline 0x18d6
 	00180f28 mov ax,0x82
 	00180f34 mov bx,ax
 	00180f40 mov mar,0x3cef20
 	00180f4c mov ax,mar
 	00180f58 push op
 	00180f60 mov op,ax
 	00180f68 farpush bx
 	00180f70 setfuncargs 0x1
 	00180f78 mov ax,0x526f20
 	00180f84 farcall ax
 	00180f8c farsubsp 0x1
 	00180f94 pop op
 	00180f9c sourceline 0x18d7
 	00180fa4 mov ax,0x0
 	00180fb0 mov bx,ax
 	00180fbc mov mar,0x3cef20
 	00180fc8 mov ax,mar
 	00180fd4 push op
 	00180fdc mov op,ax
 	00180fe4 farpush bx
 	00180fec setfuncargs 0x1
 	00180ff4 mov ax,0x436f20
 	00181000 farcall ax
 	00181008 farsubsp 0x1
 	00181010 pop op
 	00181018 sourceline 0x18d8
 	00181020 mov ax,0x1
 	0018102c mov bx,ax
 	00181038 mov mar,0x3cef20
 	00181044 mov ax,mar
 	00181050 push op
 	00181058 mov op,ax
 	00181060 farpush bx
 	00181068 setfuncargs 0x1
 	00181070 mov ax,0x69ef20
 	0018107c farcall ax
 	00181084 farsubsp 0x1
 	0018108c pop op
 	00181094 sourceline 0x18d9
 	0018109c mov ax,0x1
 	001810a8 push ax
 	001810b0 mov ax,0x1
 	001810bc assertlte ax,0x32
 	001810c8 mul ax,0x8
 	001810d4 mov cx,ax
 	001810e0 pop ax
 	001810e8 mov bx,ax
 	001810f4 mov mar,0x6c6f20
 	00181100 add mar,cx
 	0018110c mov ax,mar
 	00181118 push op
 	00181120 mov op,ax
 	00181128 farpush bx
 	00181130 setfuncargs 0x1
 	00181138 mov ax,0xa66f20
 	00181144 farcall ax
 	0018114c farsubsp 0x1
 	00181154 pop op
 	0018115c sourceline 0x18da
 	00181164 mov ax,0x50
 	00181170 push ax
 	00181178 mov ax,0x1e
 	00181184 push ax
 	0018118c mov ax,0x10445c
 	00181198 call ax
 	001811a0 sub sp,0x8
 	001811ac mov mar,0x4e6f20
 	001811b8 memwrite4 ax
 	001811c0 sourceline 0x18db
 	001811c8 mov ax,0x1
 	001811d4 mov mar,0x4aef20
 	001811e0 memwrite4 ax
		001811e8: FALL_THROUGH

	[001811e8]
		001806f8: UNCONDITIONAL_JUMP
		0018074c: FALL_THROUGH
 	001811e8 sourceline 0x18dd
 	001811f0 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[001811f8]
		00180628: CONDITIONAL_JUMP
 	001811f8 sourceline 0x18df
 	00181200 mov mar,0x3cef20
 	0018120c mov ax,mar
 	00181218 push op
 	00181220 mov op,ax
 	00181228 setfuncargs 0x0
 	00181230 mov ax,0x89ef20
 	0018123c farcall ax
 	00181244 pop op
 	0018124c push ax
 	00181254 mov mar,0x9e6f20
 	00181260 mov ax,mar
 	0018126c pop bx
 	00181274 cmpeq bx,ax
 	00181280 mov ax,bx
 	0018128c jz 0x00181dc8
		00181dc8: CONDITIONAL_JUMP
		00181294: FALL_THROUGH

	[00181294]
		001811f8: FALL_THROUGH
 	00181294 sourceline 0x18e1
 	0018129c setfuncargs 0x0
 	001812a4 mov ax,0x6def20
 	001812b0 farcall ax
 	001812b8 lnot ax
 	001812c0 jz 0x0018131c
		0018131c: CONDITIONAL_JUMP
		001812c8: FALL_THROUGH

	[001812c8]
		00181294: FALL_THROUGH
 	001812c8 mov ax,0x82
 	001812d4 farpush ax
 	001812dc mov ax,0x86
 	001812e8 farpush ax
 	001812f0 setfuncargs 0x2
 	001812f8 mov ax,0x6e6f20
 	00181304 farcall ax
 	0018130c farsubsp 0x2
 	00181314 jmp 0x00181db8
		00181db8: UNCONDITIONAL_JUMP

	[0018131c]
		00181294: CONDITIONAL_JUMP
 	0018131c sourceline 0x18e4
 	00181324 mov ax,0x0
 	00181330 push ax
 	00181338 mov ax,0x1
 	00181344 assertlte ax,0x32
 	00181350 mul ax,0x8
 	0018135c mov cx,ax
 	00181368 pop ax
 	00181370 mov bx,ax
 	0018137c mov mar,0x6c6f20
 	00181388 add mar,cx
 	00181394 mov ax,mar
 	001813a0 push op
 	001813a8 mov op,ax
 	001813b0 farpush bx
 	001813b8 setfuncargs 0x1
 	001813c0 mov ax,0xa66f20
 	001813cc farcall ax
 	001813d4 farsubsp 0x1
 	001813dc pop op
 	001813e4 sourceline 0x18e5
 	001813ec mov ax,0x3
 	001813f8 mov bx,ax
 	00181404 mov mar,0x3cef20
 	00181410 mov ax,mar
 	0018141c push op
 	00181424 mov op,ax
 	0018142c farpush bx
 	00181434 setfuncargs 0x1
 	0018143c mov ax,0x69ef20
 	00181448 farcall ax
 	00181450 farsubsp 0x1
 	00181458 pop op
 	00181460 sourceline 0x18e6
 	00181468 push op
 	00181470 mov ax,0x397
 	0018147c farpush ax
 	00181484 mov ax,0x1
 	00181490 farpush ax
 	00181498 mov mar,0x3cef20
 	001814a4 mov ax,mar
 	001814b0 mov op,ax
 	001814b8 setfuncargs 0x2
 	001814c0 mov ax,0x6eef20
 	001814cc farcall ax
 	001814d4 farsubsp 0x2
 	001814dc pop op
 	001814e4 sourceline 0x18e7
 	001814ec mov ax,0x104654
 	001814f8 call ax
 	00181500 sourceline 0x18e8
 	00181508 push op
 	00181510 mov ax,0x6
 	0018151c farpush ax
 	00181524 mov mar,0x3cef20
 	00181530 mov ax,mar
 	0018153c mov op,ax
 	00181544 setfuncargs 0x1
 	0018154c mov ax,0x51ef20
 	00181558 farcall ax
 	00181560 farsubsp 0x1
 	00181568 pop op
 	00181570 sourceline 0x18e9
 	00181578 mov ax,0x7a
 	00181584 mov bx,ax
 	00181590 mov mar,0x3cef20
 	0018159c mov ax,mar
 	001815a8 push op
 	001815b0 mov op,ax
 	001815b8 farpush bx
 	001815c0 setfuncargs 0x1
 	001815c8 mov ax,0x526f20
 	001815d4 farcall ax
 	001815dc farsubsp 0x1
 	001815e4 pop op
 	001815ec sourceline 0x18ea
 	001815f4 mov ax,0x7e
 	00181600 mov bx,ax
 	0018160c mov mar,0x3cef20
 	00181618 mov ax,mar
 	00181624 push op
 	0018162c mov op,ax
 	00181634 farpush bx
 	0018163c setfuncargs 0x1
 	00181644 mov ax,0x70ef20
 	00181650 farcall ax
 	00181658 farsubsp 0x1
 	00181660 pop op
 	00181668 sourceline 0x18eb
 	00181670 push op
 	00181678 mov ax,0x426
 	00181684 farpush ax
 	0018168c mov ax,0x397
 	00181698 farpush ax
 	001816a0 mov ax,0x0
 	001816ac farpush ax
 	001816b4 mov ax,0x3
 	001816c0 farpush ax
 	001816c8 mov ax,0x2
 	001816d4 farpush ax
 	001816dc mov mar,0x3cef20
 	001816e8 mov ax,mar
 	001816f4 mov op,ax
 	001816fc setfuncargs 0x5
 	00181704 mov ax,0x536f20
 	00181710 farcall ax
 	00181718 farsubsp 0x5
 	00181720 pop op
 	00181728 sourceline 0x18ee
 	00181730 push op
 	00181738 mov ax,0x2bffbf
 	00181744 farpush ax
 	0018174c mov mar,0x3cef20
 	00181758 mov ax,mar
 	00181764 mov op,ax
 	0018176c setfuncargs 0x1
 	00181774 mov ax,0x6f6f20
 	00181780 farcall ax
 	00181788 farsubsp 0x1
 	00181790 pop op
 	00181798 sourceline 0x18ef
 	001817a0 push op
 	001817a8 mov ax,0x2bffdf
 	001817b4 farpush ax
 	001817bc mov mar,0x506f20
 	001817c8 mov ax,mar
 	001817d4 mov op,ax
 	001817dc setfuncargs 0x1
 	001817e4 mov ax,0x6f6f20
 	001817f0 farcall ax
 	001817f8 farsubsp 0x1
 	00181800 pop op
 	00181808 sourceline 0x18f0
 	00181810 push op
 	00181818 mov ax,0x427
 	00181824 farpush ax
 	0018182c mov ax,0x398
 	00181838 farpush ax
 	00181840 mov ax,0x0
 	0018184c farpush ax
 	00181854 mov ax,0x3
 	00181860 farpush ax
 	00181868 mov ax,0x0
 	00181874 farpush ax
 	0018187c mov mar,0x506f20
 	00181888 mov ax,mar
 	00181894 mov op,ax
 	0018189c setfuncargs 0x5
 	001818a4 mov ax,0x536f20
 	001818b0 farcall ax
 	001818b8 farsubsp 0x5
 	001818c0 pop op
 	001818c8 sourceline 0x18f1
 	001818d0 push op
 	001818d8 mov ax,0x427
 	001818e4 farpush ax
 	001818ec mov ax,0x397
 	001818f8 farpush ax
 	00181900 mov ax,0x0
 	0018190c farpush ax
 	00181914 mov ax,0x3
 	00181920 farpush ax
 	00181928 mov ax,0x2
 	00181934 farpush ax
 	0018193c mov mar,0x3cef20
 	00181948 mov ax,mar
 	00181954 mov op,ax
 	0018195c setfuncargs 0x5
 	00181964 mov ax,0x536f20
 	00181970 farcall ax
 	00181978 farsubsp 0x5
 	00181980 pop op
 	00181988 sourceline 0x18f2
 	00181990 push op
 	00181998 mov ax,0x2
 	001819a4 farpush ax
 	001819ac mov mar,0x3cef20
 	001819b8 mov ax,mar
 	001819c4 mov op,ax
 	001819cc setfuncargs 0x1
 	001819d4 mov ax,0x51ef20
 	001819e0 farcall ax
 	001819e8 farsubsp 0x1
 	001819f0 pop op
 	001819f8 sourceline 0x18f3
 	00181a00 mov ax,0x1
 	00181a0c mov bx,ax
 	00181a18 mov mar,0x3cef20
 	00181a24 mov ax,mar
 	00181a30 push op
 	00181a38 mov op,ax
 	00181a40 farpush bx
 	00181a48 setfuncargs 0x1
 	00181a50 mov ax,0x766f20
 	00181a5c farcall ax
 	00181a64 farsubsp 0x1
 	00181a6c pop op
 	00181a74 sourceline 0x18f4
 	00181a7c mov ax,0x86
 	00181a88 mov bx,ax
 	00181a94 mov mar,0x3cef20
 	00181aa0 mov ax,mar
 	00181aac push op
 	00181ab4 mov op,ax
 	00181abc farpush bx
 	00181ac4 setfuncargs 0x1
 	00181acc mov ax,0x70ef20
 	00181ad8 farcall ax
 	00181ae0 farsubsp 0x1
 	00181ae8 pop op
 	00181af0 sourceline 0x18f5
 	00181af8 mov ax,0x82
 	00181b04 mov bx,ax
 	00181b10 mov mar,0x3cef20
 	00181b1c mov ax,mar
 	00181b28 push op
 	00181b30 mov op,ax
 	00181b38 farpush bx
 	00181b40 setfuncargs 0x1
 	00181b48 mov ax,0x526f20
 	00181b54 farcall ax
 	00181b5c farsubsp 0x1
 	00181b64 pop op
 	00181b6c sourceline 0x18f6
 	00181b74 mov ax,0x0
 	00181b80 mov bx,ax
 	00181b8c mov mar,0x3cef20
 	00181b98 mov ax,mar
 	00181ba4 push op
 	00181bac mov op,ax
 	00181bb4 farpush bx
 	00181bbc setfuncargs 0x1
 	00181bc4 mov ax,0x436f20
 	00181bd0 farcall ax
 	00181bd8 farsubsp 0x1
 	00181be0 pop op
 	00181be8 sourceline 0x18f7
 	00181bf0 mov ax,0x1
 	00181bfc mov bx,ax
 	00181c08 mov mar,0x3cef20
 	00181c14 mov ax,mar
 	00181c20 push op
 	00181c28 mov op,ax
 	00181c30 farpush bx
 	00181c38 setfuncargs 0x1
 	00181c40 mov ax,0x69ef20
 	00181c4c farcall ax
 	00181c54 farsubsp 0x1
 	00181c5c pop op
 	00181c64 sourceline 0x18f8
 	00181c6c mov ax,0x1
 	00181c78 push ax
 	00181c80 mov ax,0x1
 	00181c8c assertlte ax,0x32
 	00181c98 mul ax,0x8
 	00181ca4 mov cx,ax
 	00181cb0 pop ax
 	00181cb8 mov bx,ax
 	00181cc4 mov mar,0x6c6f20
 	00181cd0 add mar,cx
 	00181cdc mov ax,mar
 	00181ce8 push op
 	00181cf0 mov op,ax
 	00181cf8 farpush bx
 	00181d00 setfuncargs 0x1
 	00181d08 mov ax,0xa66f20
 	00181d14 farcall ax
 	00181d1c farsubsp 0x1
 	00181d24 pop op
 	00181d2c sourceline 0x18f9
 	00181d34 mov ax,0x50
 	00181d40 push ax
 	00181d48 mov ax,0x1e
 	00181d54 push ax
 	00181d5c mov ax,0x10445c
 	00181d68 call ax
 	00181d70 sub sp,0x8
 	00181d7c mov mar,0x4e6f20
 	00181d88 memwrite4 ax
 	00181d90 sourceline 0x18fa
 	00181d98 mov ax,0x1
 	00181da4 mov mar,0x4aef20
 	00181db0 memwrite4 ax
		00181db8: FALL_THROUGH

	[00181db8]
		001812c8: UNCONDITIONAL_JUMP
		0018131c: FALL_THROUGH
 	00181db8 sourceline 0x18fc
 	00181dc0 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00181dc8]
		001811f8: CONDITIONAL_JUMP
 	00181dc8 sourceline 0x18fe
 	00181dd0 mov mar,0x3cef20
 	00181ddc mov ax,mar
 	00181de8 push op
 	00181df0 mov op,ax
 	00181df8 setfuncargs 0x0
 	00181e00 mov ax,0x89ef20
 	00181e0c farcall ax
 	00181e14 pop op
 	00181e1c push ax
 	00181e24 mov mar,0x9cef20
 	00181e30 mov ax,mar
 	00181e3c pop bx
 	00181e44 cmpeq bx,ax
 	00181e50 mov ax,bx
 	00181e5c jz 0x00182a78
		00182a78: CONDITIONAL_JUMP
		00181e64: FALL_THROUGH

	[00181e64]
		00181dc8: FALL_THROUGH
 	00181e64 sourceline 0x1900
 	00181e6c setfuncargs 0x0
 	00181e74 mov ax,0x6def20
 	00181e80 farcall ax
 	00181e88 lnot ax
 	00181e90 jz 0x00181eec
		00181eec: CONDITIONAL_JUMP
		00181e98: FALL_THROUGH

	[00181e98]
		00181e64: FALL_THROUGH
 	00181e98 mov ax,0x82
 	00181ea4 farpush ax
 	00181eac mov ax,0x86
 	00181eb8 farpush ax
 	00181ec0 setfuncargs 0x2
 	00181ec8 mov ax,0x6e6f20
 	00181ed4 farcall ax
 	00181edc farsubsp 0x2
 	00181ee4 jmp 0x00182a68
		00182a68: UNCONDITIONAL_JUMP

	[00181eec]
		00181e64: CONDITIONAL_JUMP
 	00181eec sourceline 0x1903
 	00181ef4 mov ax,0x0
 	00181f00 push ax
 	00181f08 mov ax,0x1
 	00181f14 assertlte ax,0x32
 	00181f20 mul ax,0x8
 	00181f2c mov cx,ax
 	00181f38 pop ax
 	00181f40 mov bx,ax
 	00181f4c mov mar,0x6c6f20
 	00181f58 add mar,cx
 	00181f64 mov ax,mar
 	00181f70 push op
 	00181f78 mov op,ax
 	00181f80 farpush bx
 	00181f88 setfuncargs 0x1
 	00181f90 mov ax,0xa66f20
 	00181f9c farcall ax
 	00181fa4 farsubsp 0x1
 	00181fac pop op
 	00181fb4 sourceline 0x1904
 	00181fbc mov ax,0x3
 	00181fc8 mov bx,ax
 	00181fd4 mov mar,0x3cef20
 	00181fe0 mov ax,mar
 	00181fec push op
 	00181ff4 mov op,ax
 	00181ffc farpush bx
 	00182004 setfuncargs 0x1
 	0018200c mov ax,0x69ef20
 	00182018 farcall ax
 	00182020 farsubsp 0x1
 	00182028 pop op
 	00182030 sourceline 0x1905
 	00182038 push op
 	00182040 mov ax,0x397
 	0018204c farpush ax
 	00182054 mov ax,0x1
 	00182060 farpush ax
 	00182068 mov mar,0x3cef20
 	00182074 mov ax,mar
 	00182080 mov op,ax
 	00182088 setfuncargs 0x2
 	00182090 mov ax,0x6eef20
 	0018209c farcall ax
 	001820a4 farsubsp 0x2
 	001820ac pop op
 	001820b4 sourceline 0x1906
 	001820bc mov ax,0x104654
 	001820c8 call ax
 	001820d0 sourceline 0x1907
 	001820d8 push op
 	001820e0 mov ax,0x6
 	001820ec farpush ax
 	001820f4 mov mar,0x3cef20
 	00182100 mov ax,mar
 	0018210c mov op,ax
 	00182114 setfuncargs 0x1
 	0018211c mov ax,0x51ef20
 	00182128 farcall ax
 	00182130 farsubsp 0x1
 	00182138 pop op
 	00182140 sourceline 0x1908
 	00182148 mov ax,0x7a
 	00182154 mov bx,ax
 	00182160 mov mar,0x3cef20
 	0018216c mov ax,mar
 	00182178 push op
 	00182180 mov op,ax
 	00182188 farpush bx
 	00182190 setfuncargs 0x1
 	00182198 mov ax,0x526f20
 	001821a4 farcall ax
 	001821ac farsubsp 0x1
 	001821b4 pop op
 	001821bc sourceline 0x1909
 	001821c4 mov ax,0x7e
 	001821d0 mov bx,ax
 	001821dc mov mar,0x3cef20
 	001821e8 mov ax,mar
 	001821f4 push op
 	001821fc mov op,ax
 	00182204 farpush bx
 	0018220c setfuncargs 0x1
 	00182214 mov ax,0x70ef20
 	00182220 farcall ax
 	00182228 farsubsp 0x1
 	00182230 pop op
 	00182238 sourceline 0x190a
 	00182240 push op
 	00182248 mov ax,0x426
 	00182254 farpush ax
 	0018225c mov ax,0x397
 	00182268 farpush ax
 	00182270 mov ax,0x0
 	0018227c farpush ax
 	00182284 mov ax,0x3
 	00182290 farpush ax
 	00182298 mov ax,0x2
 	001822a4 farpush ax
 	001822ac mov mar,0x3cef20
 	001822b8 mov ax,mar
 	001822c4 mov op,ax
 	001822cc setfuncargs 0x5
 	001822d4 mov ax,0x536f20
 	001822e0 farcall ax
 	001822e8 farsubsp 0x5
 	001822f0 pop op
 	001822f8 sourceline 0x190d
 	00182300 push op
 	00182308 mov ax,0x2c001e
 	00182314 farpush ax
 	0018231c mov mar,0x3cef20
 	00182328 mov ax,mar
 	00182334 mov op,ax
 	0018233c setfuncargs 0x1
 	00182344 mov ax,0x6f6f20
 	00182350 farcall ax
 	00182358 farsubsp 0x1
 	00182360 pop op
 	00182368 sourceline 0x190e
 	00182370 push op
 	00182378 mov ax,0x2c0037
 	00182384 farpush ax
 	0018238c mov mar,0x506f20
 	00182398 mov ax,mar
 	001823a4 mov op,ax
 	001823ac setfuncargs 0x1
 	001823b4 mov ax,0x6f6f20
 	001823c0 farcall ax
 	001823c8 farsubsp 0x1
 	001823d0 pop op
 	001823d8 sourceline 0x190f
 	001823e0 push op
 	001823e8 mov ax,0x2c005f
 	001823f4 farpush ax
 	001823fc mov mar,0x3cef20
 	00182408 mov ax,mar
 	00182414 mov op,ax
 	0018241c setfuncargs 0x1
 	00182424 mov ax,0x6f6f20
 	00182430 farcall ax
 	00182438 farsubsp 0x1
 	00182440 pop op
 	00182448 sourceline 0x1910
 	00182450 push op
 	00182458 mov ax,0x2c0082
 	00182464 farpush ax
 	0018246c mov mar,0x506f20
 	00182478 mov ax,mar
 	00182484 mov op,ax
 	0018248c setfuncargs 0x1
 	00182494 mov ax,0x6f6f20
 	001824a0 farcall ax
 	001824a8 farsubsp 0x1
 	001824b0 pop op
 	001824b8 sourceline 0x1911
 	001824c0 push op
 	001824c8 mov ax,0x427
 	001824d4 farpush ax
 	001824dc mov ax,0x398
 	001824e8 farpush ax
 	001824f0 mov ax,0x0
 	001824fc farpush ax
 	00182504 mov ax,0x3
 	00182510 farpush ax
 	00182518 mov ax,0x0
 	00182524 farpush ax
 	0018252c mov mar,0x506f20
 	00182538 mov ax,mar
 	00182544 mov op,ax
 	0018254c setfuncargs 0x5
 	00182554 mov ax,0x536f20
 	00182560 farcall ax
 	00182568 farsubsp 0x5
 	00182570 pop op
 	00182578 sourceline 0x1912
 	00182580 push op
 	00182588 mov ax,0x427
 	00182594 farpush ax
 	0018259c mov ax,0x397
 	001825a8 farpush ax
 	001825b0 mov ax,0x0
 	001825bc farpush ax
 	001825c4 mov ax,0x3
 	001825d0 farpush ax
 	001825d8 mov ax,0x2
 	001825e4 farpush ax
 	001825ec mov mar,0x3cef20
 	001825f8 mov ax,mar
 	00182604 mov op,ax
 	0018260c setfuncargs 0x5
 	00182614 mov ax,0x536f20
 	00182620 farcall ax
 	00182628 farsubsp 0x5
 	00182630 pop op
 	00182638 sourceline 0x1913
 	00182640 push op
 	00182648 mov ax,0x2
 	00182654 farpush ax
 	0018265c mov mar,0x3cef20
 	00182668 mov ax,mar
 	00182674 mov op,ax
 	0018267c setfuncargs 0x1
 	00182684 mov ax,0x51ef20
 	00182690 farcall ax
 	00182698 farsubsp 0x1
 	001826a0 pop op
 	001826a8 sourceline 0x1914
 	001826b0 mov ax,0x1
 	001826bc mov bx,ax
 	001826c8 mov mar,0x3cef20
 	001826d4 mov ax,mar
 	001826e0 push op
 	001826e8 mov op,ax
 	001826f0 farpush bx
 	001826f8 setfuncargs 0x1
 	00182700 mov ax,0x766f20
 	0018270c farcall ax
 	00182714 farsubsp 0x1
 	0018271c pop op
 	00182724 sourceline 0x1915
 	0018272c mov ax,0x86
 	00182738 mov bx,ax
 	00182744 mov mar,0x3cef20
 	00182750 mov ax,mar
 	0018275c push op
 	00182764 mov op,ax
 	0018276c farpush bx
 	00182774 setfuncargs 0x1
 	0018277c mov ax,0x70ef20
 	00182788 farcall ax
 	00182790 farsubsp 0x1
 	00182798 pop op
 	001827a0 sourceline 0x1916
 	001827a8 mov ax,0x82
 	001827b4 mov bx,ax
 	001827c0 mov mar,0x3cef20
 	001827cc mov ax,mar
 	001827d8 push op
 	001827e0 mov op,ax
 	001827e8 farpush bx
 	001827f0 setfuncargs 0x1
 	001827f8 mov ax,0x526f20
 	00182804 farcall ax
 	0018280c farsubsp 0x1
 	00182814 pop op
 	0018281c sourceline 0x1917
 	00182824 mov ax,0x0
 	00182830 mov bx,ax
 	0018283c mov mar,0x3cef20
 	00182848 mov ax,mar
 	00182854 push op
 	0018285c mov op,ax
 	00182864 farpush bx
 	0018286c setfuncargs 0x1
 	00182874 mov ax,0x436f20
 	00182880 farcall ax
 	00182888 farsubsp 0x1
 	00182890 pop op
 	00182898 sourceline 0x1918
 	001828a0 mov ax,0x1
 	001828ac mov bx,ax
 	001828b8 mov mar,0x3cef20
 	001828c4 mov ax,mar
 	001828d0 push op
 	001828d8 mov op,ax
 	001828e0 farpush bx
 	001828e8 setfuncargs 0x1
 	001828f0 mov ax,0x69ef20
 	001828fc farcall ax
 	00182904 farsubsp 0x1
 	0018290c pop op
 	00182914 sourceline 0x1919
 	0018291c mov ax,0x1
 	00182928 push ax
 	00182930 mov ax,0x1
 	0018293c assertlte ax,0x32
 	00182948 mul ax,0x8
 	00182954 mov cx,ax
 	00182960 pop ax
 	00182968 mov bx,ax
 	00182974 mov mar,0x6c6f20
 	00182980 add mar,cx
 	0018298c mov ax,mar
 	00182998 push op
 	001829a0 mov op,ax
 	001829a8 farpush bx
 	001829b0 setfuncargs 0x1
 	001829b8 mov ax,0xa66f20
 	001829c4 farcall ax
 	001829cc farsubsp 0x1
 	001829d4 pop op
 	001829dc sourceline 0x191a
 	001829e4 mov ax,0x50
 	001829f0 push ax
 	001829f8 mov ax,0x1e
 	00182a04 push ax
 	00182a0c mov ax,0x10445c
 	00182a18 call ax
 	00182a20 sub sp,0x8
 	00182a2c mov mar,0x4e6f20
 	00182a38 memwrite4 ax
 	00182a40 sourceline 0x191b
 	00182a48 mov ax,0x1
 	00182a54 mov mar,0x4aef20
 	00182a60 memwrite4 ax
		00182a68: FALL_THROUGH

	[00182a68]
		00181e98: UNCONDITIONAL_JUMP
		00181eec: FALL_THROUGH
 	00182a68 sourceline 0x191d
 	00182a70 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00182a78]
		00181dc8: CONDITIONAL_JUMP
 	00182a78 sourceline 0x191f
 	00182a80 mov mar,0x3cef20
 	00182a8c mov ax,mar
 	00182a98 push op
 	00182aa0 mov op,ax
 	00182aa8 setfuncargs 0x0
 	00182ab0 mov ax,0x89ef20
 	00182abc farcall ax
 	00182ac4 pop op
 	00182acc push ax
 	00182ad4 mov mar,0x8e6f20
 	00182ae0 mov ax,mar
 	00182aec pop bx
 	00182af4 cmpeq bx,ax
 	00182b00 mov ax,bx
 	00182b0c jz 0x00183728
		00183728: CONDITIONAL_JUMP
		00182b14: FALL_THROUGH

	[00182b14]
		00182a78: FALL_THROUGH
 	00182b14 sourceline 0x1921
 	00182b1c setfuncargs 0x0
 	00182b24 mov ax,0x6def20
 	00182b30 farcall ax
 	00182b38 lnot ax
 	00182b40 jz 0x00182b9c
		00182b9c: CONDITIONAL_JUMP
		00182b48: FALL_THROUGH

	[00182b48]
		00182b14: FALL_THROUGH
 	00182b48 mov ax,0x82
 	00182b54 farpush ax
 	00182b5c mov ax,0x86
 	00182b68 farpush ax
 	00182b70 setfuncargs 0x2
 	00182b78 mov ax,0x6e6f20
 	00182b84 farcall ax
 	00182b8c farsubsp 0x2
 	00182b94 jmp 0x00183718
		00183718: UNCONDITIONAL_JUMP

	[00182b9c]
		00182b14: CONDITIONAL_JUMP
 	00182b9c sourceline 0x1924
 	00182ba4 mov ax,0x0
 	00182bb0 push ax
 	00182bb8 mov ax,0x1
 	00182bc4 assertlte ax,0x32
 	00182bd0 mul ax,0x8
 	00182bdc mov cx,ax
 	00182be8 pop ax
 	00182bf0 mov bx,ax
 	00182bfc mov mar,0x6c6f20
 	00182c08 add mar,cx
 	00182c14 mov ax,mar
 	00182c20 push op
 	00182c28 mov op,ax
 	00182c30 farpush bx
 	00182c38 setfuncargs 0x1
 	00182c40 mov ax,0xa66f20
 	00182c4c farcall ax
 	00182c54 farsubsp 0x1
 	00182c5c pop op
 	00182c64 sourceline 0x1925
 	00182c6c mov ax,0x3
 	00182c78 mov bx,ax
 	00182c84 mov mar,0x3cef20
 	00182c90 mov ax,mar
 	00182c9c push op
 	00182ca4 mov op,ax
 	00182cac farpush bx
 	00182cb4 setfuncargs 0x1
 	00182cbc mov ax,0x69ef20
 	00182cc8 farcall ax
 	00182cd0 farsubsp 0x1
 	00182cd8 pop op
 	00182ce0 sourceline 0x1926
 	00182ce8 push op
 	00182cf0 mov ax,0x397
 	00182cfc farpush ax
 	00182d04 mov ax,0x1
 	00182d10 farpush ax
 	00182d18 mov mar,0x3cef20
 	00182d24 mov ax,mar
 	00182d30 mov op,ax
 	00182d38 setfuncargs 0x2
 	00182d40 mov ax,0x6eef20
 	00182d4c farcall ax
 	00182d54 farsubsp 0x2
 	00182d5c pop op
 	00182d64 sourceline 0x1927
 	00182d6c mov ax,0x104654
 	00182d78 call ax
 	00182d80 sourceline 0x1928
 	00182d88 push op
 	00182d90 mov ax,0x6
 	00182d9c farpush ax
 	00182da4 mov mar,0x3cef20
 	00182db0 mov ax,mar
 	00182dbc mov op,ax
 	00182dc4 setfuncargs 0x1
 	00182dcc mov ax,0x51ef20
 	00182dd8 farcall ax
 	00182de0 farsubsp 0x1
 	00182de8 pop op
 	00182df0 sourceline 0x1929
 	00182df8 mov ax,0x7a
 	00182e04 mov bx,ax
 	00182e10 mov mar,0x3cef20
 	00182e1c mov ax,mar
 	00182e28 push op
 	00182e30 mov op,ax
 	00182e38 farpush bx
 	00182e40 setfuncargs 0x1
 	00182e48 mov ax,0x526f20
 	00182e54 farcall ax
 	00182e5c farsubsp 0x1
 	00182e64 pop op
 	00182e6c sourceline 0x192a
 	00182e74 mov ax,0x7e
 	00182e80 mov bx,ax
 	00182e8c mov mar,0x3cef20
 	00182e98 mov ax,mar
 	00182ea4 push op
 	00182eac mov op,ax
 	00182eb4 farpush bx
 	00182ebc setfuncargs 0x1
 	00182ec4 mov ax,0x70ef20
 	00182ed0 farcall ax
 	00182ed8 farsubsp 0x1
 	00182ee0 pop op
 	00182ee8 sourceline 0x192b
 	00182ef0 push op
 	00182ef8 mov ax,0x426
 	00182f04 farpush ax
 	00182f0c mov ax,0x397
 	00182f18 farpush ax
 	00182f20 mov ax,0x0
 	00182f2c farpush ax
 	00182f34 mov ax,0x3
 	00182f40 farpush ax
 	00182f48 mov ax,0x2
 	00182f54 farpush ax
 	00182f5c mov mar,0x3cef20
 	00182f68 mov ax,mar
 	00182f74 mov op,ax
 	00182f7c setfuncargs 0x5
 	00182f84 mov ax,0x536f20
 	00182f90 farcall ax
 	00182f98 farsubsp 0x5
 	00182fa0 pop op
 	00182fa8 sourceline 0x192e
 	00182fb0 push op
 	00182fb8 mov ax,0x2c00a3
 	00182fc4 farpush ax
 	00182fcc mov mar,0x3cef20
 	00182fd8 mov ax,mar
 	00182fe4 mov op,ax
 	00182fec setfuncargs 0x1
 	00182ff4 mov ax,0x6f6f20
 	00183000 farcall ax
 	00183008 farsubsp 0x1
 	00183010 pop op
 	00183018 sourceline 0x192f
 	00183020 push op
 	00183028 mov ax,0x2c00cc
 	00183034 farpush ax
 	0018303c mov mar,0x506f20
 	00183048 mov ax,mar
 	00183054 mov op,ax
 	0018305c setfuncargs 0x1
 	00183064 mov ax,0x6f6f20
 	00183070 farcall ax
 	00183078 farsubsp 0x1
 	00183080 pop op
 	00183088 sourceline 0x1930
 	00183090 push op
 	00183098 mov ax,0x2c00f8
 	001830a4 farpush ax
 	001830ac mov mar,0x3cef20
 	001830b8 mov ax,mar
 	001830c4 mov op,ax
 	001830cc setfuncargs 0x1
 	001830d4 mov ax,0x6f6f20
 	001830e0 farcall ax
 	001830e8 farsubsp 0x1
 	001830f0 pop op
 	001830f8 sourceline 0x1931
 	00183100 push op
 	00183108 mov ax,0x2c0127
 	00183114 farpush ax
 	0018311c mov mar,0x506f20
 	00183128 mov ax,mar
 	00183134 mov op,ax
 	0018313c setfuncargs 0x1
 	00183144 mov ax,0x6f6f20
 	00183150 farcall ax
 	00183158 farsubsp 0x1
 	00183160 pop op
 	00183168 sourceline 0x1932
 	00183170 push op
 	00183178 mov ax,0x427
 	00183184 farpush ax
 	0018318c mov ax,0x398
 	00183198 farpush ax
 	001831a0 mov ax,0x0
 	001831ac farpush ax
 	001831b4 mov ax,0x3
 	001831c0 farpush ax
 	001831c8 mov ax,0x0
 	001831d4 farpush ax
 	001831dc mov mar,0x506f20
 	001831e8 mov ax,mar
 	001831f4 mov op,ax
 	001831fc setfuncargs 0x5
 	00183204 mov ax,0x536f20
 	00183210 farcall ax
 	00183218 farsubsp 0x5
 	00183220 pop op
 	00183228 sourceline 0x1933
 	00183230 push op
 	00183238 mov ax,0x427
 	00183244 farpush ax
 	0018324c mov ax,0x397
 	00183258 farpush ax
 	00183260 mov ax,0x0
 	0018326c farpush ax
 	00183274 mov ax,0x3
 	00183280 farpush ax
 	00183288 mov ax,0x2
 	00183294 farpush ax
 	0018329c mov mar,0x3cef20
 	001832a8 mov ax,mar
 	001832b4 mov op,ax
 	001832bc setfuncargs 0x5
 	001832c4 mov ax,0x536f20
 	001832d0 farcall ax
 	001832d8 farsubsp 0x5
 	001832e0 pop op
 	001832e8 sourceline 0x1934
 	001832f0 push op
 	001832f8 mov ax,0x2
 	00183304 farpush ax
 	0018330c mov mar,0x3cef20
 	00183318 mov ax,mar
 	00183324 mov op,ax
 	0018332c setfuncargs 0x1
 	00183334 mov ax,0x51ef20
 	00183340 farcall ax
 	00183348 farsubsp 0x1
 	00183350 pop op
 	00183358 sourceline 0x1935
 	00183360 mov ax,0x1
 	0018336c mov bx,ax
 	00183378 mov mar,0x3cef20
 	00183384 mov ax,mar
 	00183390 push op
 	00183398 mov op,ax
 	001833a0 farpush bx
 	001833a8 setfuncargs 0x1
 	001833b0 mov ax,0x766f20
 	001833bc farcall ax
 	001833c4 farsubsp 0x1
 	001833cc pop op
 	001833d4 sourceline 0x1936
 	001833dc mov ax,0x86
 	001833e8 mov bx,ax
 	001833f4 mov mar,0x3cef20
 	00183400 mov ax,mar
 	0018340c push op
 	00183414 mov op,ax
 	0018341c farpush bx
 	00183424 setfuncargs 0x1
 	0018342c mov ax,0x70ef20
 	00183438 farcall ax
 	00183440 farsubsp 0x1
 	00183448 pop op
 	00183450 sourceline 0x1937
 	00183458 mov ax,0x82
 	00183464 mov bx,ax
 	00183470 mov mar,0x3cef20
 	0018347c mov ax,mar
 	00183488 push op
 	00183490 mov op,ax
 	00183498 farpush bx
 	001834a0 setfuncargs 0x1
 	001834a8 mov ax,0x526f20
 	001834b4 farcall ax
 	001834bc farsubsp 0x1
 	001834c4 pop op
 	001834cc sourceline 0x1938
 	001834d4 mov ax,0x0
 	001834e0 mov bx,ax
 	001834ec mov mar,0x3cef20
 	001834f8 mov ax,mar
 	00183504 push op
 	0018350c mov op,ax
 	00183514 farpush bx
 	0018351c setfuncargs 0x1
 	00183524 mov ax,0x436f20
 	00183530 farcall ax
 	00183538 farsubsp 0x1
 	00183540 pop op
 	00183548 sourceline 0x1939
 	00183550 mov ax,0x1
 	0018355c mov bx,ax
 	00183568 mov mar,0x3cef20
 	00183574 mov ax,mar
 	00183580 push op
 	00183588 mov op,ax
 	00183590 farpush bx
 	00183598 setfuncargs 0x1
 	001835a0 mov ax,0x69ef20
 	001835ac farcall ax
 	001835b4 farsubsp 0x1
 	001835bc pop op
 	001835c4 sourceline 0x193a
 	001835cc mov ax,0x1
 	001835d8 push ax
 	001835e0 mov ax,0x1
 	001835ec assertlte ax,0x32
 	001835f8 mul ax,0x8
 	00183604 mov cx,ax
 	00183610 pop ax
 	00183618 mov bx,ax
 	00183624 mov mar,0x6c6f20
 	00183630 add mar,cx
 	0018363c mov ax,mar
 	00183648 push op
 	00183650 mov op,ax
 	00183658 farpush bx
 	00183660 setfuncargs 0x1
 	00183668 mov ax,0xa66f20
 	00183674 farcall ax
 	0018367c farsubsp 0x1
 	00183684 pop op
 	0018368c sourceline 0x193b
 	00183694 mov ax,0x50
 	001836a0 push ax
 	001836a8 mov ax,0x1e
 	001836b4 push ax
 	001836bc mov ax,0x10445c
 	001836c8 call ax
 	001836d0 sub sp,0x8
 	001836dc mov mar,0x4e6f20
 	001836e8 memwrite4 ax
 	001836f0 sourceline 0x193c
 	001836f8 mov ax,0x1
 	00183704 mov mar,0x4aef20
 	00183710 memwrite4 ax
		00183718: FALL_THROUGH

	[00183718]
		00182b48: UNCONDITIONAL_JUMP
		00182b9c: FALL_THROUGH
 	00183718 sourceline 0x193e
 	00183720 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00183728]
		00182a78: CONDITIONAL_JUMP
 	00183728 sourceline 0x1940
 	00183730 mov mar,0x3cef20
 	0018373c mov ax,mar
 	00183748 push op
 	00183750 mov op,ax
 	00183758 setfuncargs 0x0
 	00183760 mov ax,0x89ef20
 	0018376c farcall ax
 	00183774 pop op
 	0018377c push ax
 	00183784 mov mar,0x9d6f20
 	00183790 mov ax,mar
 	0018379c pop bx
 	001837a4 cmpeq bx,ax
 	001837b0 mov ax,bx
 	001837bc jz 0x001842f8
		001842f8: CONDITIONAL_JUMP
		001837c4: FALL_THROUGH

	[001837c4]
		00183728: FALL_THROUGH
 	001837c4 sourceline 0x1942
 	001837cc setfuncargs 0x0
 	001837d4 mov ax,0x6def20
 	001837e0 farcall ax
 	001837e8 lnot ax
 	001837f0 jz 0x0018384c
		0018384c: CONDITIONAL_JUMP
		001837f8: FALL_THROUGH

	[001837f8]
		001837c4: FALL_THROUGH
 	001837f8 mov ax,0x82
 	00183804 farpush ax
 	0018380c mov ax,0x86
 	00183818 farpush ax
 	00183820 setfuncargs 0x2
 	00183828 mov ax,0x6e6f20
 	00183834 farcall ax
 	0018383c farsubsp 0x2
 	00183844 jmp 0x001842e8
		001842e8: UNCONDITIONAL_JUMP

	[0018384c]
		001837c4: CONDITIONAL_JUMP
 	0018384c sourceline 0x1945
 	00183854 mov ax,0x0
 	00183860 push ax
 	00183868 mov ax,0x1
 	00183874 assertlte ax,0x32
 	00183880 mul ax,0x8
 	0018388c mov cx,ax
 	00183898 pop ax
 	001838a0 mov bx,ax
 	001838ac mov mar,0x6c6f20
 	001838b8 add mar,cx
 	001838c4 mov ax,mar
 	001838d0 push op
 	001838d8 mov op,ax
 	001838e0 farpush bx
 	001838e8 setfuncargs 0x1
 	001838f0 mov ax,0xa66f20
 	001838fc farcall ax
 	00183904 farsubsp 0x1
 	0018390c pop op
 	00183914 sourceline 0x1946
 	0018391c mov ax,0x3
 	00183928 mov bx,ax
 	00183934 mov mar,0x3cef20
 	00183940 mov ax,mar
 	0018394c push op
 	00183954 mov op,ax
 	0018395c farpush bx
 	00183964 setfuncargs 0x1
 	0018396c mov ax,0x69ef20
 	00183978 farcall ax
 	00183980 farsubsp 0x1
 	00183988 pop op
 	00183990 sourceline 0x1947
 	00183998 push op
 	001839a0 mov ax,0x397
 	001839ac farpush ax
 	001839b4 mov ax,0x1
 	001839c0 farpush ax
 	001839c8 mov mar,0x3cef20
 	001839d4 mov ax,mar
 	001839e0 mov op,ax
 	001839e8 setfuncargs 0x2
 	001839f0 mov ax,0x6eef20
 	001839fc farcall ax
 	00183a04 farsubsp 0x2
 	00183a0c pop op
 	00183a14 sourceline 0x1948
 	00183a1c mov ax,0x104654
 	00183a28 call ax
 	00183a30 sourceline 0x1949
 	00183a38 push op
 	00183a40 mov ax,0x6
 	00183a4c farpush ax
 	00183a54 mov mar,0x3cef20
 	00183a60 mov ax,mar
 	00183a6c mov op,ax
 	00183a74 setfuncargs 0x1
 	00183a7c mov ax,0x51ef20
 	00183a88 farcall ax
 	00183a90 farsubsp 0x1
 	00183a98 pop op
 	00183aa0 sourceline 0x194a
 	00183aa8 mov ax,0x7a
 	00183ab4 mov bx,ax
 	00183ac0 mov mar,0x3cef20
 	00183acc mov ax,mar
 	00183ad8 push op
 	00183ae0 mov op,ax
 	00183ae8 farpush bx
 	00183af0 setfuncargs 0x1
 	00183af8 mov ax,0x526f20
 	00183b04 farcall ax
 	00183b0c farsubsp 0x1
 	00183b14 pop op
 	00183b1c sourceline 0x194b
 	00183b24 mov ax,0x7e
 	00183b30 mov bx,ax
 	00183b3c mov mar,0x3cef20
 	00183b48 mov ax,mar
 	00183b54 push op
 	00183b5c mov op,ax
 	00183b64 farpush bx
 	00183b6c setfuncargs 0x1
 	00183b74 mov ax,0x70ef20
 	00183b80 farcall ax
 	00183b88 farsubsp 0x1
 	00183b90 pop op
 	00183b98 sourceline 0x194c
 	00183ba0 push op
 	00183ba8 mov ax,0x426
 	00183bb4 farpush ax
 	00183bbc mov ax,0x397
 	00183bc8 farpush ax
 	00183bd0 mov ax,0x0
 	00183bdc farpush ax
 	00183be4 mov ax,0x3
 	00183bf0 farpush ax
 	00183bf8 mov ax,0x2
 	00183c04 farpush ax
 	00183c0c mov mar,0x3cef20
 	00183c18 mov ax,mar
 	00183c24 mov op,ax
 	00183c2c setfuncargs 0x5
 	00183c34 mov ax,0x536f20
 	00183c40 farcall ax
 	00183c48 farsubsp 0x5
 	00183c50 pop op
 	00183c58 sourceline 0x194f
 	00183c60 push op
 	00183c68 mov ax,0x2c0154
 	00183c74 farpush ax
 	00183c7c mov mar,0x3cef20
 	00183c88 mov ax,mar
 	00183c94 mov op,ax
 	00183c9c setfuncargs 0x1
 	00183ca4 mov ax,0x6f6f20
 	00183cb0 farcall ax
 	00183cb8 farsubsp 0x1
 	00183cc0 pop op
 	00183cc8 sourceline 0x1950
 	00183cd0 push op
 	00183cd8 mov ax,0x2c0193
 	00183ce4 farpush ax
 	00183cec mov mar,0x506f20
 	00183cf8 mov ax,mar
 	00183d04 mov op,ax
 	00183d0c setfuncargs 0x1
 	00183d14 mov ax,0x6f6f20
 	00183d20 farcall ax
 	00183d28 farsubsp 0x1
 	00183d30 pop op
 	00183d38 sourceline 0x1951
 	00183d40 push op
 	00183d48 mov ax,0x427
 	00183d54 farpush ax
 	00183d5c mov ax,0x398
 	00183d68 farpush ax
 	00183d70 mov ax,0x0
 	00183d7c farpush ax
 	00183d84 mov ax,0x3
 	00183d90 farpush ax
 	00183d98 mov ax,0x0
 	00183da4 farpush ax
 	00183dac mov mar,0x506f20
 	00183db8 mov ax,mar
 	00183dc4 mov op,ax
 	00183dcc setfuncargs 0x5
 	00183dd4 mov ax,0x536f20
 	00183de0 farcall ax
 	00183de8 farsubsp 0x5
 	00183df0 pop op
 	00183df8 sourceline 0x1952
 	00183e00 push op
 	00183e08 mov ax,0x427
 	00183e14 farpush ax
 	00183e1c mov ax,0x397
 	00183e28 farpush ax
 	00183e30 mov ax,0x0
 	00183e3c farpush ax
 	00183e44 mov ax,0x3
 	00183e50 farpush ax
 	00183e58 mov ax,0x2
 	00183e64 farpush ax
 	00183e6c mov mar,0x3cef20
 	00183e78 mov ax,mar
 	00183e84 mov op,ax
 	00183e8c setfuncargs 0x5
 	00183e94 mov ax,0x536f20
 	00183ea0 farcall ax
 	00183ea8 farsubsp 0x5
 	00183eb0 pop op
 	00183eb8 sourceline 0x1953
 	00183ec0 push op
 	00183ec8 mov ax,0x2
 	00183ed4 farpush ax
 	00183edc mov mar,0x3cef20
 	00183ee8 mov ax,mar
 	00183ef4 mov op,ax
 	00183efc setfuncargs 0x1
 	00183f04 mov ax,0x51ef20
 	00183f10 farcall ax
 	00183f18 farsubsp 0x1
 	00183f20 pop op
 	00183f28 sourceline 0x1954
 	00183f30 mov ax,0x1
 	00183f3c mov bx,ax
 	00183f48 mov mar,0x3cef20
 	00183f54 mov ax,mar
 	00183f60 push op
 	00183f68 mov op,ax
 	00183f70 farpush bx
 	00183f78 setfuncargs 0x1
 	00183f80 mov ax,0x766f20
 	00183f8c farcall ax
 	00183f94 farsubsp 0x1
 	00183f9c pop op
 	00183fa4 sourceline 0x1955
 	00183fac mov ax,0x86
 	00183fb8 mov bx,ax
 	00183fc4 mov mar,0x3cef20
 	00183fd0 mov ax,mar
 	00183fdc push op
 	00183fe4 mov op,ax
 	00183fec farpush bx
 	00183ff4 setfuncargs 0x1
 	00183ffc mov ax,0x70ef20
 	00184008 farcall ax
 	00184010 farsubsp 0x1
 	00184018 pop op
 	00184020 sourceline 0x1956
 	00184028 mov ax,0x82
 	00184034 mov bx,ax
 	00184040 mov mar,0x3cef20
 	0018404c mov ax,mar
 	00184058 push op
 	00184060 mov op,ax
 	00184068 farpush bx
 	00184070 setfuncargs 0x1
 	00184078 mov ax,0x526f20
 	00184084 farcall ax
 	0018408c farsubsp 0x1
 	00184094 pop op
 	0018409c sourceline 0x1957
 	001840a4 mov ax,0x0
 	001840b0 mov bx,ax
 	001840bc mov mar,0x3cef20
 	001840c8 mov ax,mar
 	001840d4 push op
 	001840dc mov op,ax
 	001840e4 farpush bx
 	001840ec setfuncargs 0x1
 	001840f4 mov ax,0x436f20
 	00184100 farcall ax
 	00184108 farsubsp 0x1
 	00184110 pop op
 	00184118 sourceline 0x1958
 	00184120 mov ax,0x1
 	0018412c mov bx,ax
 	00184138 mov mar,0x3cef20
 	00184144 mov ax,mar
 	00184150 push op
 	00184158 mov op,ax
 	00184160 farpush bx
 	00184168 setfuncargs 0x1
 	00184170 mov ax,0x69ef20
 	0018417c farcall ax
 	00184184 farsubsp 0x1
 	0018418c pop op
 	00184194 sourceline 0x1959
 	0018419c mov ax,0x1
 	001841a8 push ax
 	001841b0 mov ax,0x1
 	001841bc assertlte ax,0x32
 	001841c8 mul ax,0x8
 	001841d4 mov cx,ax
 	001841e0 pop ax
 	001841e8 mov bx,ax
 	001841f4 mov mar,0x6c6f20
 	00184200 add mar,cx
 	0018420c mov ax,mar
 	00184218 push op
 	00184220 mov op,ax
 	00184228 farpush bx
 	00184230 setfuncargs 0x1
 	00184238 mov ax,0xa66f20
 	00184244 farcall ax
 	0018424c farsubsp 0x1
 	00184254 pop op
 	0018425c sourceline 0x195a
 	00184264 mov ax,0x50
 	00184270 push ax
 	00184278 mov ax,0x1e
 	00184284 push ax
 	0018428c mov ax,0x10445c
 	00184298 call ax
 	001842a0 sub sp,0x8
 	001842ac mov mar,0x4e6f20
 	001842b8 memwrite4 ax
 	001842c0 sourceline 0x195b
 	001842c8 mov ax,0x1
 	001842d4 mov mar,0x4aef20
 	001842e0 memwrite4 ax
		001842e8: FALL_THROUGH

	[001842e8]
		001837f8: UNCONDITIONAL_JUMP
		0018384c: FALL_THROUGH
 	001842e8 sourceline 0x195d
 	001842f0 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[001842f8]
		00183728: CONDITIONAL_JUMP
 	001842f8 sourceline 0x195f
 	00184300 mov mar,0x3cef20
 	0018430c mov ax,mar
 	00184318 push op
 	00184320 mov op,ax
 	00184328 setfuncargs 0x0
 	00184330 mov ax,0x89ef20
 	0018433c farcall ax
 	00184344 pop op
 	0018434c push ax
 	00184354 mov mar,0x8eef20
 	00184360 mov ax,mar
 	0018436c pop bx
 	00184374 cmpeq bx,ax
 	00184380 mov ax,bx
 	0018438c jz 0x001851cc
		001851cc: CONDITIONAL_JUMP
		00184394: FALL_THROUGH

	[00184394]
		001842f8: FALL_THROUGH
 	00184394 sourceline 0x1961
 	0018439c setfuncargs 0x0
 	001843a4 mov ax,0x6def20
 	001843b0 farcall ax
 	001843b8 lnot ax
 	001843c0 jz 0x0018441c
		0018441c: CONDITIONAL_JUMP
		001843c8: FALL_THROUGH

	[001843c8]
		00184394: FALL_THROUGH
 	001843c8 mov ax,0x82
 	001843d4 farpush ax
 	001843dc mov ax,0x86
 	001843e8 farpush ax
 	001843f0 setfuncargs 0x2
 	001843f8 mov ax,0x6e6f20
 	00184404 farcall ax
 	0018440c farsubsp 0x2
 	00184414 jmp 0x001851bc
		001851bc: UNCONDITIONAL_JUMP

	[0018441c]
		00184394: CONDITIONAL_JUMP
 	0018441c sourceline 0x1964
 	00184424 mov ax,0x0
 	00184430 push ax
 	00184438 mov ax,0x1
 	00184444 assertlte ax,0x32
 	00184450 mul ax,0x8
 	0018445c mov cx,ax
 	00184468 pop ax
 	00184470 mov bx,ax
 	0018447c mov mar,0x6c6f20
 	00184488 add mar,cx
 	00184494 mov ax,mar
 	001844a0 push op
 	001844a8 mov op,ax
 	001844b0 farpush bx
 	001844b8 setfuncargs 0x1
 	001844c0 mov ax,0xa66f20
 	001844cc farcall ax
 	001844d4 farsubsp 0x1
 	001844dc pop op
 	001844e4 sourceline 0x1965
 	001844ec mov ax,0x3
 	001844f8 mov bx,ax
 	00184504 mov mar,0x3cef20
 	00184510 mov ax,mar
 	0018451c push op
 	00184524 mov op,ax
 	0018452c farpush bx
 	00184534 setfuncargs 0x1
 	0018453c mov ax,0x69ef20
 	00184548 farcall ax
 	00184550 farsubsp 0x1
 	00184558 pop op
 	00184560 sourceline 0x1966
 	00184568 push op
 	00184570 mov ax,0x397
 	0018457c farpush ax
 	00184584 mov ax,0x1
 	00184590 farpush ax
 	00184598 mov mar,0x3cef20
 	001845a4 mov ax,mar
 	001845b0 mov op,ax
 	001845b8 setfuncargs 0x2
 	001845c0 mov ax,0x6eef20
 	001845cc farcall ax
 	001845d4 farsubsp 0x2
 	001845dc pop op
 	001845e4 sourceline 0x1967
 	001845ec mov ax,0x104654
 	001845f8 call ax
 	00184600 sourceline 0x1968
 	00184608 push op
 	00184610 mov ax,0x6
 	0018461c farpush ax
 	00184624 mov mar,0x3cef20
 	00184630 mov ax,mar
 	0018463c mov op,ax
 	00184644 setfuncargs 0x1
 	0018464c mov ax,0x51ef20
 	00184658 farcall ax
 	00184660 farsubsp 0x1
 	00184668 pop op
 	00184670 sourceline 0x1969
 	00184678 mov ax,0x7a
 	00184684 mov bx,ax
 	00184690 mov mar,0x3cef20
 	0018469c mov ax,mar
 	001846a8 push op
 	001846b0 mov op,ax
 	001846b8 farpush bx
 	001846c0 setfuncargs 0x1
 	001846c8 mov ax,0x526f20
 	001846d4 farcall ax
 	001846dc farsubsp 0x1
 	001846e4 pop op
 	001846ec sourceline 0x196a
 	001846f4 mov ax,0x7e
 	00184700 mov bx,ax
 	0018470c mov mar,0x3cef20
 	00184718 mov ax,mar
 	00184724 push op
 	0018472c mov op,ax
 	00184734 farpush bx
 	0018473c setfuncargs 0x1
 	00184744 mov ax,0x70ef20
 	00184750 farcall ax
 	00184758 farsubsp 0x1
 	00184760 pop op
 	00184768 sourceline 0x196b
 	00184770 push op
 	00184778 mov ax,0x426
 	00184784 farpush ax
 	0018478c mov ax,0x397
 	00184798 farpush ax
 	001847a0 mov ax,0x0
 	001847ac farpush ax
 	001847b4 mov ax,0x3
 	001847c0 farpush ax
 	001847c8 mov ax,0x2
 	001847d4 farpush ax
 	001847dc mov mar,0x3cef20
 	001847e8 mov ax,mar
 	001847f4 mov op,ax
 	001847fc setfuncargs 0x5
 	00184804 mov ax,0x536f20
 	00184810 farcall ax
 	00184818 farsubsp 0x5
 	00184820 pop op
 	00184828 sourceline 0x196e
 	00184830 push op
 	00184838 mov ax,0x2c01e0
 	00184844 farpush ax
 	0018484c mov mar,0x3cef20
 	00184858 mov ax,mar
 	00184864 mov op,ax
 	0018486c setfuncargs 0x1
 	00184874 mov ax,0x6f6f20
 	00184880 farcall ax
 	00184888 farsubsp 0x1
 	00184890 pop op
 	00184898 sourceline 0x196f
 	001848a0 push op
 	001848a8 mov ax,0x2c0215
 	001848b4 farpush ax
 	001848bc mov mar,0x506f20
 	001848c8 mov ax,mar
 	001848d4 mov op,ax
 	001848dc setfuncargs 0x1
 	001848e4 mov ax,0x6f6f20
 	001848f0 farcall ax
 	001848f8 farsubsp 0x1
 	00184900 pop op
 	00184908 sourceline 0x1970
 	00184910 push op
 	00184918 mov ax,0x2c0229
 	00184924 farpush ax
 	0018492c mov mar,0x3cef20
 	00184938 mov ax,mar
 	00184944 mov op,ax
 	0018494c setfuncargs 0x1
 	00184954 mov ax,0x6f6f20
 	00184960 farcall ax
 	00184968 farsubsp 0x1
 	00184970 pop op
 	00184978 sourceline 0x1971
 	00184980 push op
 	00184988 mov ax,0x2c027d
 	00184994 farpush ax
 	0018499c mov mar,0x506f20
 	001849a8 mov ax,mar
 	001849b4 mov op,ax
 	001849bc setfuncargs 0x1
 	001849c4 mov ax,0x6f6f20
 	001849d0 farcall ax
 	001849d8 farsubsp 0x1
 	001849e0 pop op
 	001849e8 sourceline 0x1972
 	001849f0 push op
 	001849f8 mov ax,0x2c0344
 	00184a04 farpush ax
 	00184a0c mov mar,0x506f20
 	00184a18 mov ax,mar
 	00184a24 mov op,ax
 	00184a2c setfuncargs 0x1
 	00184a34 mov ax,0x6f6f20
 	00184a40 farcall ax
 	00184a48 farsubsp 0x1
 	00184a50 pop op
 	00184a58 sourceline 0x1973
 	00184a60 push op
 	00184a68 mov ax,0x2c0390
 	00184a74 farpush ax
 	00184a7c mov mar,0x3cef20
 	00184a88 mov ax,mar
 	00184a94 mov op,ax
 	00184a9c setfuncargs 0x1
 	00184aa4 mov ax,0x6f6f20
 	00184ab0 farcall ax
 	00184ab8 farsubsp 0x1
 	00184ac0 pop op
 	00184ac8 sourceline 0x1974
 	00184ad0 push op
 	00184ad8 mov ax,0x2c03ae
 	00184ae4 farpush ax
 	00184aec mov mar,0x506f20
 	00184af8 mov ax,mar
 	00184b04 mov op,ax
 	00184b0c setfuncargs 0x1
 	00184b14 mov ax,0x6f6f20
 	00184b20 farcall ax
 	00184b28 farsubsp 0x1
 	00184b30 pop op
 	00184b38 sourceline 0x1975
 	00184b40 mov mar,0x80ef20
 	00184b4c memread4 ax
 	00184b54 lnot ax
 	00184b5c jz 0x00184c0c
		00184c0c: CONDITIONAL_JUMP
		00184b64: FALL_THROUGH

	[00184b64]
		0018441c: FALL_THROUGH
 	00184b64 push op
 	00184b6c mov ax,0x7cfe
 	00184b78 farpush ax
 	00184b80 mov mar,0x816f20
 	00184b8c mov ax,mar
 	00184b98 farpush ax
 	00184ba0 mov mar,0x81ef20
 	00184bac mov ax,mar
 	00184bb8 mov op,ax
 	00184bc0 setfuncargs 0x2
 	00184bc8 mov ax,0x7e6f20
 	00184bd4 farcall ax
 	00184bdc farsubsp 0x2
 	00184be4 pop op
 	00184bec mov ax,0x1
 	00184bf8 mov mar,0x80ef20
 	00184c04 memwrite4 ax
		00184c0c: FALL_THROUGH

	[00184c0c]
		0018441c: CONDITIONAL_JUMP
		00184b64: FALL_THROUGH
 	00184c0c sourceline 0x1976
 	00184c14 push op
 	00184c1c mov ax,0x427
 	00184c28 farpush ax
 	00184c30 mov ax,0x398
 	00184c3c farpush ax
 	00184c44 mov ax,0x0
 	00184c50 farpush ax
 	00184c58 mov ax,0x3
 	00184c64 farpush ax
 	00184c6c mov ax,0x0
 	00184c78 farpush ax
 	00184c80 mov mar,0x506f20
 	00184c8c mov ax,mar
 	00184c98 mov op,ax
 	00184ca0 setfuncargs 0x5
 	00184ca8 mov ax,0x536f20
 	00184cb4 farcall ax
 	00184cbc farsubsp 0x5
 	00184cc4 pop op
 	00184ccc sourceline 0x1977
 	00184cd4 push op
 	00184cdc mov ax,0x427
 	00184ce8 farpush ax
 	00184cf0 mov ax,0x397
 	00184cfc farpush ax
 	00184d04 mov ax,0x0
 	00184d10 farpush ax
 	00184d18 mov ax,0x3
 	00184d24 farpush ax
 	00184d2c mov ax,0x2
 	00184d38 farpush ax
 	00184d40 mov mar,0x3cef20
 	00184d4c mov ax,mar
 	00184d58 mov op,ax
 	00184d60 setfuncargs 0x5
 	00184d68 mov ax,0x536f20
 	00184d74 farcall ax
 	00184d7c farsubsp 0x5
 	00184d84 pop op
 	00184d8c sourceline 0x1978
 	00184d94 push op
 	00184d9c mov ax,0x2
 	00184da8 farpush ax
 	00184db0 mov mar,0x3cef20
 	00184dbc mov ax,mar
 	00184dc8 mov op,ax
 	00184dd0 setfuncargs 0x1
 	00184dd8 mov ax,0x51ef20
 	00184de4 farcall ax
 	00184dec farsubsp 0x1
 	00184df4 pop op
 	00184dfc sourceline 0x1979
 	00184e04 mov ax,0x1
 	00184e10 mov bx,ax
 	00184e1c mov mar,0x3cef20
 	00184e28 mov ax,mar
 	00184e34 push op
 	00184e3c mov op,ax
 	00184e44 farpush bx
 	00184e4c setfuncargs 0x1
 	00184e54 mov ax,0x766f20
 	00184e60 farcall ax
 	00184e68 farsubsp 0x1
 	00184e70 pop op
 	00184e78 sourceline 0x197a
 	00184e80 mov ax,0x86
 	00184e8c mov bx,ax
 	00184e98 mov mar,0x3cef20
 	00184ea4 mov ax,mar
 	00184eb0 push op
 	00184eb8 mov op,ax
 	00184ec0 farpush bx
 	00184ec8 setfuncargs 0x1
 	00184ed0 mov ax,0x70ef20
 	00184edc farcall ax
 	00184ee4 farsubsp 0x1
 	00184eec pop op
 	00184ef4 sourceline 0x197b
 	00184efc mov ax,0x82
 	00184f08 mov bx,ax
 	00184f14 mov mar,0x3cef20
 	00184f20 mov ax,mar
 	00184f2c push op
 	00184f34 mov op,ax
 	00184f3c farpush bx
 	00184f44 setfuncargs 0x1
 	00184f4c mov ax,0x526f20
 	00184f58 farcall ax
 	00184f60 farsubsp 0x1
 	00184f68 pop op
 	00184f70 sourceline 0x197c
 	00184f78 mov ax,0x0
 	00184f84 mov bx,ax
 	00184f90 mov mar,0x3cef20
 	00184f9c mov ax,mar
 	00184fa8 push op
 	00184fb0 mov op,ax
 	00184fb8 farpush bx
 	00184fc0 setfuncargs 0x1
 	00184fc8 mov ax,0x436f20
 	00184fd4 farcall ax
 	00184fdc farsubsp 0x1
 	00184fe4 pop op
 	00184fec sourceline 0x197d
 	00184ff4 mov ax,0x1
 	00185000 mov bx,ax
 	0018500c mov mar,0x3cef20
 	00185018 mov ax,mar
 	00185024 push op
 	0018502c mov op,ax
 	00185034 farpush bx
 	0018503c setfuncargs 0x1
 	00185044 mov ax,0x69ef20
 	00185050 farcall ax
 	00185058 farsubsp 0x1
 	00185060 pop op
 	00185068 sourceline 0x197e
 	00185070 mov ax,0x1
 	0018507c push ax
 	00185084 mov ax,0x1
 	00185090 assertlte ax,0x32
 	0018509c mul ax,0x8
 	001850a8 mov cx,ax
 	001850b4 pop ax
 	001850bc mov bx,ax
 	001850c8 mov mar,0x6c6f20
 	001850d4 add mar,cx
 	001850e0 mov ax,mar
 	001850ec push op
 	001850f4 mov op,ax
 	001850fc farpush bx
 	00185104 setfuncargs 0x1
 	0018510c mov ax,0xa66f20
 	00185118 farcall ax
 	00185120 farsubsp 0x1
 	00185128 pop op
 	00185130 sourceline 0x197f
 	00185138 mov ax,0x50
 	00185144 push ax
 	0018514c mov ax,0x1e
 	00185158 push ax
 	00185160 mov ax,0x10445c
 	0018516c call ax
 	00185174 sub sp,0x8
 	00185180 mov mar,0x4e6f20
 	0018518c memwrite4 ax
 	00185194 sourceline 0x1980
 	0018519c mov ax,0x1
 	001851a8 mov mar,0x4aef20
 	001851b4 memwrite4 ax
		001851bc: FALL_THROUGH

	[001851bc]
		001843c8: UNCONDITIONAL_JUMP
		00184c0c: FALL_THROUGH
 	001851bc sourceline 0x1982
 	001851c4 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[001851cc]
		001842f8: CONDITIONAL_JUMP
 	001851cc sourceline 0x1984
 	001851d4 mov mar,0x3cef20
 	001851e0 mov ax,mar
 	001851ec push op
 	001851f4 mov op,ax
 	001851fc setfuncargs 0x0
 	00185204 mov ax,0x89ef20
 	00185210 farcall ax
 	00185218 pop op
 	00185220 push ax
 	00185228 mov mar,0x9aef20
 	00185234 mov ax,mar
 	00185240 pop bx
 	00185248 cmpeq bx,ax
 	00185254 mov ax,bx
 	00185260 jnz 0x0018531c
		0018531c: CONDITIONAL_JUMP
		00185268: FALL_THROUGH

	[00185268]
		001851cc: FALL_THROUGH
 	00185268 push ax
 	00185270 mov mar,0x3cef20
 	0018527c mov ax,mar
 	00185288 push op
 	00185290 mov op,ax
 	00185298 setfuncargs 0x0
 	001852a0 mov ax,0x89ef20
 	001852ac farcall ax
 	001852b4 pop op
 	001852bc push ax
 	001852c4 mov mar,0x9b6f20
 	001852d0 mov ax,mar
 	001852dc pop bx
 	001852e4 cmpeq bx,ax
 	001852f0 mov ax,bx
 	001852fc pop bx
 	00185304 lor bx,ax
 	00185310 mov ax,bx
		0018531c: FALL_THROUGH

	[0018531c]
		001851cc: CONDITIONAL_JUMP
		00185268: FALL_THROUGH
 	0018531c jz 0x00185ec8
		00185ec8: CONDITIONAL_JUMP
		00185324: FALL_THROUGH

	[00185324]
		0018531c: FALL_THROUGH
 	00185324 sourceline 0x1986
 	0018532c setfuncargs 0x0
 	00185334 mov ax,0x6def20
 	00185340 farcall ax
 	00185348 lnot ax
 	00185350 jz 0x001853ac
		001853ac: CONDITIONAL_JUMP
		00185358: FALL_THROUGH

	[00185358]
		00185324: FALL_THROUGH
 	00185358 mov ax,0x82
 	00185364 farpush ax
 	0018536c mov ax,0x86
 	00185378 farpush ax
 	00185380 setfuncargs 0x2
 	00185388 mov ax,0x6e6f20
 	00185394 farcall ax
 	0018539c farsubsp 0x2
 	001853a4 jmp 0x00185eb8
		00185eb8: UNCONDITIONAL_JUMP

	[001853ac]
		00185324: CONDITIONAL_JUMP
 	001853ac sourceline 0x1989
 	001853b4 mov ax,0x0
 	001853c0 push ax
 	001853c8 mov ax,0x1
 	001853d4 assertlte ax,0x32
 	001853e0 mul ax,0x8
 	001853ec mov cx,ax
 	001853f8 pop ax
 	00185400 mov bx,ax
 	0018540c mov mar,0x6c6f20
 	00185418 add mar,cx
 	00185424 mov ax,mar
 	00185430 push op
 	00185438 mov op,ax
 	00185440 farpush bx
 	00185448 setfuncargs 0x1
 	00185450 mov ax,0xa66f20
 	0018545c farcall ax
 	00185464 farsubsp 0x1
 	0018546c pop op
 	00185474 sourceline 0x198a
 	0018547c mov ax,0x3
 	00185488 mov bx,ax
 	00185494 mov mar,0x3cef20
 	001854a0 mov ax,mar
 	001854ac push op
 	001854b4 mov op,ax
 	001854bc farpush bx
 	001854c4 setfuncargs 0x1
 	001854cc mov ax,0x69ef20
 	001854d8 farcall ax
 	001854e0 farsubsp 0x1
 	001854e8 pop op
 	001854f0 sourceline 0x198b
 	001854f8 push op
 	00185500 mov ax,0x397
 	0018550c farpush ax
 	00185514 mov ax,0x1
 	00185520 farpush ax
 	00185528 mov mar,0x3cef20
 	00185534 mov ax,mar
 	00185540 mov op,ax
 	00185548 setfuncargs 0x2
 	00185550 mov ax,0x6eef20
 	0018555c farcall ax
 	00185564 farsubsp 0x2
 	0018556c pop op
 	00185574 sourceline 0x198c
 	0018557c mov ax,0x104654
 	00185588 call ax
 	00185590 sourceline 0x198d
 	00185598 push op
 	001855a0 mov ax,0x6
 	001855ac farpush ax
 	001855b4 mov mar,0x3cef20
 	001855c0 mov ax,mar
 	001855cc mov op,ax
 	001855d4 setfuncargs 0x1
 	001855dc mov ax,0x51ef20
 	001855e8 farcall ax
 	001855f0 farsubsp 0x1
 	001855f8 pop op
 	00185600 sourceline 0x198e
 	00185608 mov ax,0x7a
 	00185614 mov bx,ax
 	00185620 mov mar,0x3cef20
 	0018562c mov ax,mar
 	00185638 push op
 	00185640 mov op,ax
 	00185648 farpush bx
 	00185650 setfuncargs 0x1
 	00185658 mov ax,0x526f20
 	00185664 farcall ax
 	0018566c farsubsp 0x1
 	00185674 pop op
 	0018567c sourceline 0x198f
 	00185684 mov ax,0x7e
 	00185690 mov bx,ax
 	0018569c mov mar,0x3cef20
 	001856a8 mov ax,mar
 	001856b4 push op
 	001856bc mov op,ax
 	001856c4 farpush bx
 	001856cc setfuncargs 0x1
 	001856d4 mov ax,0x70ef20
 	001856e0 farcall ax
 	001856e8 farsubsp 0x1
 	001856f0 pop op
 	001856f8 sourceline 0x1990
 	00185700 push op
 	00185708 mov ax,0x426
 	00185714 farpush ax
 	0018571c mov ax,0x397
 	00185728 farpush ax
 	00185730 mov ax,0x0
 	0018573c farpush ax
 	00185744 mov ax,0x3
 	00185750 farpush ax
 	00185758 mov ax,0x2
 	00185764 farpush ax
 	0018576c mov mar,0x3cef20
 	00185778 mov ax,mar
 	00185784 mov op,ax
 	0018578c setfuncargs 0x5
 	00185794 mov ax,0x536f20
 	001857a0 farcall ax
 	001857a8 farsubsp 0x5
 	001857b0 pop op
 	001857b8 sourceline 0x1993
 	001857c0 push op
 	001857c8 mov ax,0x2c0402
 	001857d4 farpush ax
 	001857dc mov mar,0x3cef20
 	001857e8 mov ax,mar
 	001857f4 mov op,ax
 	001857fc setfuncargs 0x1
 	00185804 mov ax,0x6f6f20
 	00185810 farcall ax
 	00185818 farsubsp 0x1
 	00185820 pop op
 	00185828 sourceline 0x1994
 	00185830 push op
 	00185838 mov ax,0x2c03d2
 	00185844 farpush ax
 	0018584c mov mar,0x506f20
 	00185858 mov ax,mar
 	00185864 mov op,ax
 	0018586c setfuncargs 0x1
 	00185874 mov ax,0x6f6f20
 	00185880 farcall ax
 	00185888 farsubsp 0x1
 	00185890 pop op
 	00185898 sourceline 0x1995
 	001858a0 push op
 	001858a8 mov ax,0x2c03f2
 	001858b4 farpush ax
 	001858bc mov mar,0x3cef20
 	001858c8 mov ax,mar
 	001858d4 mov op,ax
 	001858dc setfuncargs 0x1
 	001858e4 mov ax,0x6f6f20
 	001858f0 farcall ax
 	001858f8 farsubsp 0x1
 	00185900 pop op
 	00185908 sourceline 0x1996
 	00185910 push op
 	00185918 mov ax,0x427
 	00185924 farpush ax
 	0018592c mov ax,0x398
 	00185938 farpush ax
 	00185940 mov ax,0x0
 	0018594c farpush ax
 	00185954 mov ax,0x3
 	00185960 farpush ax
 	00185968 mov ax,0x0
 	00185974 farpush ax
 	0018597c mov mar,0x506f20
 	00185988 mov ax,mar
 	00185994 mov op,ax
 	0018599c setfuncargs 0x5
 	001859a4 mov ax,0x536f20
 	001859b0 farcall ax
 	001859b8 farsubsp 0x5
 	001859c0 pop op
 	001859c8 sourceline 0x1997
 	001859d0 push op
 	001859d8 mov ax,0x427
 	001859e4 farpush ax
 	001859ec mov ax,0x397
 	001859f8 farpush ax
 	00185a00 mov ax,0x0
 	00185a0c farpush ax
 	00185a14 mov ax,0x3
 	00185a20 farpush ax
 	00185a28 mov ax,0x2
 	00185a34 farpush ax
 	00185a3c mov mar,0x3cef20
 	00185a48 mov ax,mar
 	00185a54 mov op,ax
 	00185a5c setfuncargs 0x5
 	00185a64 mov ax,0x536f20
 	00185a70 farcall ax
 	00185a78 farsubsp 0x5
 	00185a80 pop op
 	00185a88 sourceline 0x1998
 	00185a90 push op
 	00185a98 mov ax,0x2
 	00185aa4 farpush ax
 	00185aac mov mar,0x3cef20
 	00185ab8 mov ax,mar
 	00185ac4 mov op,ax
 	00185acc setfuncargs 0x1
 	00185ad4 mov ax,0x51ef20
 	00185ae0 farcall ax
 	00185ae8 farsubsp 0x1
 	00185af0 pop op
 	00185af8 sourceline 0x1999
 	00185b00 mov ax,0x1
 	00185b0c mov bx,ax
 	00185b18 mov mar,0x3cef20
 	00185b24 mov ax,mar
 	00185b30 push op
 	00185b38 mov op,ax
 	00185b40 farpush bx
 	00185b48 setfuncargs 0x1
 	00185b50 mov ax,0x766f20
 	00185b5c farcall ax
 	00185b64 farsubsp 0x1
 	00185b6c pop op
 	00185b74 sourceline 0x199a
 	00185b7c mov ax,0x86
 	00185b88 mov bx,ax
 	00185b94 mov mar,0x3cef20
 	00185ba0 mov ax,mar
 	00185bac push op
 	00185bb4 mov op,ax
 	00185bbc farpush bx
 	00185bc4 setfuncargs 0x1
 	00185bcc mov ax,0x70ef20
 	00185bd8 farcall ax
 	00185be0 farsubsp 0x1
 	00185be8 pop op
 	00185bf0 sourceline 0x199b
 	00185bf8 mov ax,0x82
 	00185c04 mov bx,ax
 	00185c10 mov mar,0x3cef20
 	00185c1c mov ax,mar
 	00185c28 push op
 	00185c30 mov op,ax
 	00185c38 farpush bx
 	00185c40 setfuncargs 0x1
 	00185c48 mov ax,0x526f20
 	00185c54 farcall ax
 	00185c5c farsubsp 0x1
 	00185c64 pop op
 	00185c6c sourceline 0x199c
 	00185c74 mov ax,0x0
 	00185c80 mov bx,ax
 	00185c8c mov mar,0x3cef20
 	00185c98 mov ax,mar
 	00185ca4 push op
 	00185cac mov op,ax
 	00185cb4 farpush bx
 	00185cbc setfuncargs 0x1
 	00185cc4 mov ax,0x436f20
 	00185cd0 farcall ax
 	00185cd8 farsubsp 0x1
 	00185ce0 pop op
 	00185ce8 sourceline 0x199d
 	00185cf0 mov ax,0x1
 	00185cfc mov bx,ax
 	00185d08 mov mar,0x3cef20
 	00185d14 mov ax,mar
 	00185d20 push op
 	00185d28 mov op,ax
 	00185d30 farpush bx
 	00185d38 setfuncargs 0x1
 	00185d40 mov ax,0x69ef20
 	00185d4c farcall ax
 	00185d54 farsubsp 0x1
 	00185d5c pop op
 	00185d64 sourceline 0x199e
 	00185d6c mov ax,0x1
 	00185d78 push ax
 	00185d80 mov ax,0x1
 	00185d8c assertlte ax,0x32
 	00185d98 mul ax,0x8
 	00185da4 mov cx,ax
 	00185db0 pop ax
 	00185db8 mov bx,ax
 	00185dc4 mov mar,0x6c6f20
 	00185dd0 add mar,cx
 	00185ddc mov ax,mar
 	00185de8 push op
 	00185df0 mov op,ax
 	00185df8 farpush bx
 	00185e00 setfuncargs 0x1
 	00185e08 mov ax,0xa66f20
 	00185e14 farcall ax
 	00185e1c farsubsp 0x1
 	00185e24 pop op
 	00185e2c sourceline 0x199f
 	00185e34 mov ax,0x50
 	00185e40 push ax
 	00185e48 mov ax,0x1e
 	00185e54 push ax
 	00185e5c mov ax,0x10445c
 	00185e68 call ax
 	00185e70 sub sp,0x8
 	00185e7c mov mar,0x4e6f20
 	00185e88 memwrite4 ax
 	00185e90 sourceline 0x19a0
 	00185e98 mov ax,0x1
 	00185ea4 mov mar,0x4aef20
 	00185eb0 memwrite4 ax
		00185eb8: FALL_THROUGH

	[00185eb8]
		00185358: UNCONDITIONAL_JUMP
		001853ac: FALL_THROUGH
 	00185eb8 sourceline 0x19a2
 	00185ec0 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00185ec8]
		0018531c: CONDITIONAL_JUMP
 	00185ec8 sourceline 0x19a4
 	00185ed0 mov mar,0x3cef20
 	00185edc mov ax,mar
 	00185ee8 push op
 	00185ef0 mov op,ax
 	00185ef8 setfuncargs 0x0
 	00185f00 mov ax,0x89ef20
 	00185f0c farcall ax
 	00185f14 pop op
 	00185f1c push ax
 	00185f24 mov mar,0x9bef20
 	00185f30 mov ax,mar
 	00185f3c pop bx
 	00185f44 cmpeq bx,ax
 	00185f50 mov ax,bx
 	00185f5c jnz 0x00186018
		00186018: CONDITIONAL_JUMP
		00185f64: FALL_THROUGH

	[00185f64]
		00185ec8: FALL_THROUGH
 	00185f64 push ax
 	00185f6c mov mar,0x3cef20
 	00185f78 mov ax,mar
 	00185f84 push op
 	00185f8c mov op,ax
 	00185f94 setfuncargs 0x0
 	00185f9c mov ax,0x89ef20
 	00185fa8 farcall ax
 	00185fb0 pop op
 	00185fb8 push ax
 	00185fc0 mov mar,0x986f20
 	00185fcc mov ax,mar
 	00185fd8 pop bx
 	00185fe0 cmpeq bx,ax
 	00185fec mov ax,bx
 	00185ff8 pop bx
 	00186000 lor bx,ax
 	0018600c mov ax,bx
		00186018: FALL_THROUGH

	[00186018]
		00185ec8: CONDITIONAL_JUMP
		00185f64: FALL_THROUGH
 	00186018 jz 0x00186b54
		00186b54: CONDITIONAL_JUMP
		00186020: FALL_THROUGH

	[00186020]
		00186018: FALL_THROUGH
 	00186020 sourceline 0x19a6
 	00186028 setfuncargs 0x0
 	00186030 mov ax,0x6def20
 	0018603c farcall ax
 	00186044 lnot ax
 	0018604c jz 0x001860a8
		001860a8: CONDITIONAL_JUMP
		00186054: FALL_THROUGH

	[00186054]
		00186020: FALL_THROUGH
 	00186054 mov ax,0x82
 	00186060 farpush ax
 	00186068 mov ax,0x86
 	00186074 farpush ax
 	0018607c setfuncargs 0x2
 	00186084 mov ax,0x6e6f20
 	00186090 farcall ax
 	00186098 farsubsp 0x2
 	001860a0 jmp 0x00186b44
		00186b44: UNCONDITIONAL_JUMP

	[001860a8]
		00186020: CONDITIONAL_JUMP
 	001860a8 sourceline 0x19a9
 	001860b0 mov ax,0x0
 	001860bc push ax
 	001860c4 mov ax,0x1
 	001860d0 assertlte ax,0x32
 	001860dc mul ax,0x8
 	001860e8 mov cx,ax
 	001860f4 pop ax
 	001860fc mov bx,ax
 	00186108 mov mar,0x6c6f20
 	00186114 add mar,cx
 	00186120 mov ax,mar
 	0018612c push op
 	00186134 mov op,ax
 	0018613c farpush bx
 	00186144 setfuncargs 0x1
 	0018614c mov ax,0xa66f20
 	00186158 farcall ax
 	00186160 farsubsp 0x1
 	00186168 pop op
 	00186170 sourceline 0x19aa
 	00186178 mov ax,0x3
 	00186184 mov bx,ax
 	00186190 mov mar,0x3cef20
 	0018619c mov ax,mar
 	001861a8 push op
 	001861b0 mov op,ax
 	001861b8 farpush bx
 	001861c0 setfuncargs 0x1
 	001861c8 mov ax,0x69ef20
 	001861d4 farcall ax
 	001861dc farsubsp 0x1
 	001861e4 pop op
 	001861ec sourceline 0x19ab
 	001861f4 push op
 	001861fc mov ax,0x397
 	00186208 farpush ax
 	00186210 mov ax,0x1
 	0018621c farpush ax
 	00186224 mov mar,0x3cef20
 	00186230 mov ax,mar
 	0018623c mov op,ax
 	00186244 setfuncargs 0x2
 	0018624c mov ax,0x6eef20
 	00186258 farcall ax
 	00186260 farsubsp 0x2
 	00186268 pop op
 	00186270 sourceline 0x19ac
 	00186278 mov ax,0x104654
 	00186284 call ax
 	0018628c sourceline 0x19ad
 	00186294 push op
 	0018629c mov ax,0x6
 	001862a8 farpush ax
 	001862b0 mov mar,0x3cef20
 	001862bc mov ax,mar
 	001862c8 mov op,ax
 	001862d0 setfuncargs 0x1
 	001862d8 mov ax,0x51ef20
 	001862e4 farcall ax
 	001862ec farsubsp 0x1
 	001862f4 pop op
 	001862fc sourceline 0x19ae
 	00186304 mov ax,0x7a
 	00186310 mov bx,ax
 	0018631c mov mar,0x3cef20
 	00186328 mov ax,mar
 	00186334 push op
 	0018633c mov op,ax
 	00186344 farpush bx
 	0018634c setfuncargs 0x1
 	00186354 mov ax,0x526f20
 	00186360 farcall ax
 	00186368 farsubsp 0x1
 	00186370 pop op
 	00186378 sourceline 0x19af
 	00186380 mov ax,0x7e
 	0018638c mov bx,ax
 	00186398 mov mar,0x3cef20
 	001863a4 mov ax,mar
 	001863b0 push op
 	001863b8 mov op,ax
 	001863c0 farpush bx
 	001863c8 setfuncargs 0x1
 	001863d0 mov ax,0x70ef20
 	001863dc farcall ax
 	001863e4 farsubsp 0x1
 	001863ec pop op
 	001863f4 sourceline 0x19b0
 	001863fc push op
 	00186404 mov ax,0x426
 	00186410 farpush ax
 	00186418 mov ax,0x397
 	00186424 farpush ax
 	0018642c mov ax,0x0
 	00186438 farpush ax
 	00186440 mov ax,0x3
 	0018644c farpush ax
 	00186454 mov ax,0x2
 	00186460 farpush ax
 	00186468 mov mar,0x3cef20
 	00186474 mov ax,mar
 	00186480 mov op,ax
 	00186488 setfuncargs 0x5
 	00186490 mov ax,0x536f20
 	0018649c farcall ax
 	001864a4 farsubsp 0x5
 	001864ac pop op
 	001864b4 sourceline 0x19b3
 	001864bc push op
 	001864c4 mov ax,0x2c0402
 	001864d0 farpush ax
 	001864d8 mov mar,0x3cef20
 	001864e4 mov ax,mar
 	001864f0 mov op,ax
 	001864f8 setfuncargs 0x1
 	00186500 mov ax,0x6f6f20
 	0018650c farcall ax
 	00186514 farsubsp 0x1
 	0018651c pop op
 	00186524 sourceline 0x19b4
 	0018652c push op
 	00186534 mov ax,0x2c0415
 	00186540 farpush ax
 	00186548 mov mar,0x506f20
 	00186554 mov ax,mar
 	00186560 mov op,ax
 	00186568 setfuncargs 0x1
 	00186570 mov ax,0x6f6f20
 	0018657c farcall ax
 	00186584 farsubsp 0x1
 	0018658c pop op
 	00186594 sourceline 0x19b5
 	0018659c push op
 	001865a4 mov ax,0x427
 	001865b0 farpush ax
 	001865b8 mov ax,0x398
 	001865c4 farpush ax
 	001865cc mov ax,0x0
 	001865d8 farpush ax
 	001865e0 mov ax,0x3
 	001865ec farpush ax
 	001865f4 mov ax,0x0
 	00186600 farpush ax
 	00186608 mov mar,0x506f20
 	00186614 mov ax,mar
 	00186620 mov op,ax
 	00186628 setfuncargs 0x5
 	00186630 mov ax,0x536f20
 	0018663c farcall ax
 	00186644 farsubsp 0x5
 	0018664c pop op
 	00186654 sourceline 0x19b6
 	0018665c push op
 	00186664 mov ax,0x427
 	00186670 farpush ax
 	00186678 mov ax,0x397
 	00186684 farpush ax
 	0018668c mov ax,0x0
 	00186698 farpush ax
 	001866a0 mov ax,0x3
 	001866ac farpush ax
 	001866b4 mov ax,0x2
 	001866c0 farpush ax
 	001866c8 mov mar,0x3cef20
 	001866d4 mov ax,mar
 	001866e0 mov op,ax
 	001866e8 setfuncargs 0x5
 	001866f0 mov ax,0x536f20
 	001866fc farcall ax
 	00186704 farsubsp 0x5
 	0018670c pop op
 	00186714 sourceline 0x19b7
 	0018671c push op
 	00186724 mov ax,0x2
 	00186730 farpush ax
 	00186738 mov mar,0x3cef20
 	00186744 mov ax,mar
 	00186750 mov op,ax
 	00186758 setfuncargs 0x1
 	00186760 mov ax,0x51ef20
 	0018676c farcall ax
 	00186774 farsubsp 0x1
 	0018677c pop op
 	00186784 sourceline 0x19b8
 	0018678c mov ax,0x1
 	00186798 mov bx,ax
 	001867a4 mov mar,0x3cef20
 	001867b0 mov ax,mar
 	001867bc push op
 	001867c4 mov op,ax
 	001867cc farpush bx
 	001867d4 setfuncargs 0x1
 	001867dc mov ax,0x766f20
 	001867e8 farcall ax
 	001867f0 farsubsp 0x1
 	001867f8 pop op
 	00186800 sourceline 0x19b9
 	00186808 mov ax,0x86
 	00186814 mov bx,ax
 	00186820 mov mar,0x3cef20
 	0018682c mov ax,mar
 	00186838 push op
 	00186840 mov op,ax
 	00186848 farpush bx
 	00186850 setfuncargs 0x1
 	00186858 mov ax,0x70ef20
 	00186864 farcall ax
 	0018686c farsubsp 0x1
 	00186874 pop op
 	0018687c sourceline 0x19ba
 	00186884 mov ax,0x82
 	00186890 mov bx,ax
 	0018689c mov mar,0x3cef20
 	001868a8 mov ax,mar
 	001868b4 push op
 	001868bc mov op,ax
 	001868c4 farpush bx
 	001868cc setfuncargs 0x1
 	001868d4 mov ax,0x526f20
 	001868e0 farcall ax
 	001868e8 farsubsp 0x1
 	001868f0 pop op
 	001868f8 sourceline 0x19bb
 	00186900 mov ax,0x0
 	0018690c mov bx,ax
 	00186918 mov mar,0x3cef20
 	00186924 mov ax,mar
 	00186930 push op
 	00186938 mov op,ax
 	00186940 farpush bx
 	00186948 setfuncargs 0x1
 	00186950 mov ax,0x436f20
 	0018695c farcall ax
 	00186964 farsubsp 0x1
 	0018696c pop op
 	00186974 sourceline 0x19bc
 	0018697c mov ax,0x1
 	00186988 mov bx,ax
 	00186994 mov mar,0x3cef20
 	001869a0 mov ax,mar
 	001869ac push op
 	001869b4 mov op,ax
 	001869bc farpush bx
 	001869c4 setfuncargs 0x1
 	001869cc mov ax,0x69ef20
 	001869d8 farcall ax
 	001869e0 farsubsp 0x1
 	001869e8 pop op
 	001869f0 sourceline 0x19bd
 	001869f8 mov ax,0x1
 	00186a04 push ax
 	00186a0c mov ax,0x1
 	00186a18 assertlte ax,0x32
 	00186a24 mul ax,0x8
 	00186a30 mov cx,ax
 	00186a3c pop ax
 	00186a44 mov bx,ax
 	00186a50 mov mar,0x6c6f20
 	00186a5c add mar,cx
 	00186a68 mov ax,mar
 	00186a74 push op
 	00186a7c mov op,ax
 	00186a84 farpush bx
 	00186a8c setfuncargs 0x1
 	00186a94 mov ax,0xa66f20
 	00186aa0 farcall ax
 	00186aa8 farsubsp 0x1
 	00186ab0 pop op
 	00186ab8 sourceline 0x19be
 	00186ac0 mov ax,0x50
 	00186acc push ax
 	00186ad4 mov ax,0x1e
 	00186ae0 push ax
 	00186ae8 mov ax,0x10445c
 	00186af4 call ax
 	00186afc sub sp,0x8
 	00186b08 mov mar,0x4e6f20
 	00186b14 memwrite4 ax
 	00186b1c sourceline 0x19bf
 	00186b24 mov ax,0x1
 	00186b30 mov mar,0x4aef20
 	00186b3c memwrite4 ax
		00186b44: FALL_THROUGH

	[00186b44]
		00186054: UNCONDITIONAL_JUMP
		001860a8: FALL_THROUGH
 	00186b44 sourceline 0x19c1
 	00186b4c jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00186b54]
		00186018: CONDITIONAL_JUMP
 	00186b54 sourceline 0x19c3
 	00186b5c mov mar,0x3cef20
 	00186b68 mov ax,mar
 	00186b74 push op
 	00186b7c mov op,ax
 	00186b84 setfuncargs 0x0
 	00186b8c mov ax,0x89ef20
 	00186b98 farcall ax
 	00186ba0 pop op
 	00186ba8 push ax
 	00186bb0 mov mar,0x8f6f20
 	00186bbc mov ax,mar
 	00186bc8 pop bx
 	00186bd0 cmpeq bx,ax
 	00186bdc mov ax,bx
 	00186be8 jz 0x00187804
		00187804: CONDITIONAL_JUMP
		00186bf0: FALL_THROUGH

	[00186bf0]
		00186b54: FALL_THROUGH
 	00186bf0 sourceline 0x19c5
 	00186bf8 setfuncargs 0x0
 	00186c00 mov ax,0x6def20
 	00186c0c farcall ax
 	00186c14 lnot ax
 	00186c1c jz 0x00186c78
		00186c78: CONDITIONAL_JUMP
		00186c24: FALL_THROUGH

	[00186c24]
		00186bf0: FALL_THROUGH
 	00186c24 mov ax,0x82
 	00186c30 farpush ax
 	00186c38 mov ax,0x86
 	00186c44 farpush ax
 	00186c4c setfuncargs 0x2
 	00186c54 mov ax,0x6e6f20
 	00186c60 farcall ax
 	00186c68 farsubsp 0x2
 	00186c70 jmp 0x001877f4
		001877f4: UNCONDITIONAL_JUMP

	[00186c78]
		00186bf0: CONDITIONAL_JUMP
 	00186c78 sourceline 0x19c8
 	00186c80 mov ax,0x0
 	00186c8c push ax
 	00186c94 mov ax,0x1
 	00186ca0 assertlte ax,0x32
 	00186cac mul ax,0x8
 	00186cb8 mov cx,ax
 	00186cc4 pop ax
 	00186ccc mov bx,ax
 	00186cd8 mov mar,0x6c6f20
 	00186ce4 add mar,cx
 	00186cf0 mov ax,mar
 	00186cfc push op
 	00186d04 mov op,ax
 	00186d0c farpush bx
 	00186d14 setfuncargs 0x1
 	00186d1c mov ax,0xa66f20
 	00186d28 farcall ax
 	00186d30 farsubsp 0x1
 	00186d38 pop op
 	00186d40 sourceline 0x19c9
 	00186d48 mov ax,0x3
 	00186d54 mov bx,ax
 	00186d60 mov mar,0x3cef20
 	00186d6c mov ax,mar
 	00186d78 push op
 	00186d80 mov op,ax
 	00186d88 farpush bx
 	00186d90 setfuncargs 0x1
 	00186d98 mov ax,0x69ef20
 	00186da4 farcall ax
 	00186dac farsubsp 0x1
 	00186db4 pop op
 	00186dbc sourceline 0x19ca
 	00186dc4 push op
 	00186dcc mov ax,0x397
 	00186dd8 farpush ax
 	00186de0 mov ax,0x1
 	00186dec farpush ax
 	00186df4 mov mar,0x3cef20
 	00186e00 mov ax,mar
 	00186e0c mov op,ax
 	00186e14 setfuncargs 0x2
 	00186e1c mov ax,0x6eef20
 	00186e28 farcall ax
 	00186e30 farsubsp 0x2
 	00186e38 pop op
 	00186e40 sourceline 0x19cb
 	00186e48 mov ax,0x104654
 	00186e54 call ax
 	00186e5c sourceline 0x19cc
 	00186e64 push op
 	00186e6c mov ax,0x6
 	00186e78 farpush ax
 	00186e80 mov mar,0x3cef20
 	00186e8c mov ax,mar
 	00186e98 mov op,ax
 	00186ea0 setfuncargs 0x1
 	00186ea8 mov ax,0x51ef20
 	00186eb4 farcall ax
 	00186ebc farsubsp 0x1
 	00186ec4 pop op
 	00186ecc sourceline 0x19cd
 	00186ed4 mov ax,0x7a
 	00186ee0 mov bx,ax
 	00186eec mov mar,0x3cef20
 	00186ef8 mov ax,mar
 	00186f04 push op
 	00186f0c mov op,ax
 	00186f14 farpush bx
 	00186f1c setfuncargs 0x1
 	00186f24 mov ax,0x526f20
 	00186f30 farcall ax
 	00186f38 farsubsp 0x1
 	00186f40 pop op
 	00186f48 sourceline 0x19ce
 	00186f50 mov ax,0x7e
 	00186f5c mov bx,ax
 	00186f68 mov mar,0x3cef20
 	00186f74 mov ax,mar
 	00186f80 push op
 	00186f88 mov op,ax
 	00186f90 farpush bx
 	00186f98 setfuncargs 0x1
 	00186fa0 mov ax,0x70ef20
 	00186fac farcall ax
 	00186fb4 farsubsp 0x1
 	00186fbc pop op
 	00186fc4 sourceline 0x19cf
 	00186fcc push op
 	00186fd4 mov ax,0x426
 	00186fe0 farpush ax
 	00186fe8 mov ax,0x397
 	00186ff4 farpush ax
 	00186ffc mov ax,0x0
 	00187008 farpush ax
 	00187010 mov ax,0x3
 	0018701c farpush ax
 	00187024 mov ax,0x2
 	00187030 farpush ax
 	00187038 mov mar,0x3cef20
 	00187044 mov ax,mar
 	00187050 mov op,ax
 	00187058 setfuncargs 0x5
 	00187060 mov ax,0x536f20
 	0018706c farcall ax
 	00187074 farsubsp 0x5
 	0018707c pop op
 	00187084 sourceline 0x19d2
 	0018708c push op
 	00187094 mov ax,0x2c0445
 	001870a0 farpush ax
 	001870a8 mov mar,0x3cef20
 	001870b4 mov ax,mar
 	001870c0 mov op,ax
 	001870c8 setfuncargs 0x1
 	001870d0 mov ax,0x6f6f20
 	001870dc farcall ax
 	001870e4 farsubsp 0x1
 	001870ec pop op
 	001870f4 sourceline 0x19d3
 	001870fc push op
 	00187104 mov ax,0x2c0464
 	00187110 farpush ax
 	00187118 mov mar,0x506f20
 	00187124 mov ax,mar
 	00187130 mov op,ax
 	00187138 setfuncargs 0x1
 	00187140 mov ax,0x6f6f20
 	0018714c farcall ax
 	00187154 farsubsp 0x1
 	0018715c pop op
 	00187164 sourceline 0x19d4
 	0018716c push op
 	00187174 mov ax,0x2c048b
 	00187180 farpush ax
 	00187188 mov mar,0x3cef20
 	00187194 mov ax,mar
 	001871a0 mov op,ax
 	001871a8 setfuncargs 0x1
 	001871b0 mov ax,0x6f6f20
 	001871bc farcall ax
 	001871c4 farsubsp 0x1
 	001871cc pop op
 	001871d4 sourceline 0x19d5
 	001871dc push op
 	001871e4 mov ax,0x2c04e1
 	001871f0 farpush ax
 	001871f8 mov mar,0x506f20
 	00187204 mov ax,mar
 	00187210 mov op,ax
 	00187218 setfuncargs 0x1
 	00187220 mov ax,0x6f6f20
 	0018722c farcall ax
 	00187234 farsubsp 0x1
 	0018723c pop op
 	00187244 sourceline 0x19d6
 	0018724c push op
 	00187254 mov ax,0x427
 	00187260 farpush ax
 	00187268 mov ax,0x398
 	00187274 farpush ax
 	0018727c mov ax,0x0
 	00187288 farpush ax
 	00187290 mov ax,0x3
 	0018729c farpush ax
 	001872a4 mov ax,0x0
 	001872b0 farpush ax
 	001872b8 mov mar,0x506f20
 	001872c4 mov ax,mar
 	001872d0 mov op,ax
 	001872d8 setfuncargs 0x5
 	001872e0 mov ax,0x536f20
 	001872ec farcall ax
 	001872f4 farsubsp 0x5
 	001872fc pop op
 	00187304 sourceline 0x19d7
 	0018730c push op
 	00187314 mov ax,0x427
 	00187320 farpush ax
 	00187328 mov ax,0x397
 	00187334 farpush ax
 	0018733c mov ax,0x0
 	00187348 farpush ax
 	00187350 mov ax,0x3
 	0018735c farpush ax
 	00187364 mov ax,0x2
 	00187370 farpush ax
 	00187378 mov mar,0x3cef20
 	00187384 mov ax,mar
 	00187390 mov op,ax
 	00187398 setfuncargs 0x5
 	001873a0 mov ax,0x536f20
 	001873ac farcall ax
 	001873b4 farsubsp 0x5
 	001873bc pop op
 	001873c4 sourceline 0x19d8
 	001873cc push op
 	001873d4 mov ax,0x2
 	001873e0 farpush ax
 	001873e8 mov mar,0x3cef20
 	001873f4 mov ax,mar
 	00187400 mov op,ax
 	00187408 setfuncargs 0x1
 	00187410 mov ax,0x51ef20
 	0018741c farcall ax
 	00187424 farsubsp 0x1
 	0018742c pop op
 	00187434 sourceline 0x19d9
 	0018743c mov ax,0x1
 	00187448 mov bx,ax
 	00187454 mov mar,0x3cef20
 	00187460 mov ax,mar
 	0018746c push op
 	00187474 mov op,ax
 	0018747c farpush bx
 	00187484 setfuncargs 0x1
 	0018748c mov ax,0x766f20
 	00187498 farcall ax
 	001874a0 farsubsp 0x1
 	001874a8 pop op
 	001874b0 sourceline 0x19da
 	001874b8 mov ax,0x86
 	001874c4 mov bx,ax
 	001874d0 mov mar,0x3cef20
 	001874dc mov ax,mar
 	001874e8 push op
 	001874f0 mov op,ax
 	001874f8 farpush bx
 	00187500 setfuncargs 0x1
 	00187508 mov ax,0x70ef20
 	00187514 farcall ax
 	0018751c farsubsp 0x1
 	00187524 pop op
 	0018752c sourceline 0x19db
 	00187534 mov ax,0x82
 	00187540 mov bx,ax
 	0018754c mov mar,0x3cef20
 	00187558 mov ax,mar
 	00187564 push op
 	0018756c mov op,ax
 	00187574 farpush bx
 	0018757c setfuncargs 0x1
 	00187584 mov ax,0x526f20
 	00187590 farcall ax
 	00187598 farsubsp 0x1
 	001875a0 pop op
 	001875a8 sourceline 0x19dc
 	001875b0 mov ax,0x0
 	001875bc mov bx,ax
 	001875c8 mov mar,0x3cef20
 	001875d4 mov ax,mar
 	001875e0 push op
 	001875e8 mov op,ax
 	001875f0 farpush bx
 	001875f8 setfuncargs 0x1
 	00187600 mov ax,0x436f20
 	0018760c farcall ax
 	00187614 farsubsp 0x1
 	0018761c pop op
 	00187624 sourceline 0x19dd
 	0018762c mov ax,0x1
 	00187638 mov bx,ax
 	00187644 mov mar,0x3cef20
 	00187650 mov ax,mar
 	0018765c push op
 	00187664 mov op,ax
 	0018766c farpush bx
 	00187674 setfuncargs 0x1
 	0018767c mov ax,0x69ef20
 	00187688 farcall ax
 	00187690 farsubsp 0x1
 	00187698 pop op
 	001876a0 sourceline 0x19de
 	001876a8 mov ax,0x1
 	001876b4 push ax
 	001876bc mov ax,0x1
 	001876c8 assertlte ax,0x32
 	001876d4 mul ax,0x8
 	001876e0 mov cx,ax
 	001876ec pop ax
 	001876f4 mov bx,ax
 	00187700 mov mar,0x6c6f20
 	0018770c add mar,cx
 	00187718 mov ax,mar
 	00187724 push op
 	0018772c mov op,ax
 	00187734 farpush bx
 	0018773c setfuncargs 0x1
 	00187744 mov ax,0xa66f20
 	00187750 farcall ax
 	00187758 farsubsp 0x1
 	00187760 pop op
 	00187768 sourceline 0x19df
 	00187770 mov ax,0x50
 	0018777c push ax
 	00187784 mov ax,0x1e
 	00187790 push ax
 	00187798 mov ax,0x10445c
 	001877a4 call ax
 	001877ac sub sp,0x8
 	001877b8 mov mar,0x4e6f20
 	001877c4 memwrite4 ax
 	001877cc sourceline 0x19e0
 	001877d4 mov ax,0x1
 	001877e0 mov mar,0x4aef20
 	001877ec memwrite4 ax
		001877f4: FALL_THROUGH

	[001877f4]
		00186c24: UNCONDITIONAL_JUMP
		00186c78: FALL_THROUGH
 	001877f4 sourceline 0x19e2
 	001877fc jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00187804]
		00186b54: CONDITIONAL_JUMP
 	00187804 sourceline 0x19e4
 	0018780c mov mar,0x3cef20
 	00187818 mov ax,mar
 	00187824 push op
 	0018782c mov op,ax
 	00187834 setfuncargs 0x0
 	0018783c mov ax,0x89ef20
 	00187848 farcall ax
 	00187850 pop op
 	00187858 push ax
 	00187860 mov mar,0x97ef20
 	0018786c mov ax,mar
 	00187878 pop bx
 	00187880 cmpeq bx,ax
 	0018788c mov ax,bx
 	00187898 jz 0x001884b4
		001884b4: CONDITIONAL_JUMP
		001878a0: FALL_THROUGH

	[001878a0]
		00187804: FALL_THROUGH
 	001878a0 sourceline 0x19e6
 	001878a8 setfuncargs 0x0
 	001878b0 mov ax,0x6def20
 	001878bc farcall ax
 	001878c4 lnot ax
 	001878cc jz 0x00187928
		00187928: CONDITIONAL_JUMP
		001878d4: FALL_THROUGH

	[001878d4]
		001878a0: FALL_THROUGH
 	001878d4 mov ax,0x82
 	001878e0 farpush ax
 	001878e8 mov ax,0x86
 	001878f4 farpush ax
 	001878fc setfuncargs 0x2
 	00187904 mov ax,0x6e6f20
 	00187910 farcall ax
 	00187918 farsubsp 0x2
 	00187920 jmp 0x001884a4
		001884a4: UNCONDITIONAL_JUMP

	[00187928]
		001878a0: CONDITIONAL_JUMP
 	00187928 sourceline 0x19e9
 	00187930 mov ax,0x0
 	0018793c push ax
 	00187944 mov ax,0x1
 	00187950 assertlte ax,0x32
 	0018795c mul ax,0x8
 	00187968 mov cx,ax
 	00187974 pop ax
 	0018797c mov bx,ax
 	00187988 mov mar,0x6c6f20
 	00187994 add mar,cx
 	001879a0 mov ax,mar
 	001879ac push op
 	001879b4 mov op,ax
 	001879bc farpush bx
 	001879c4 setfuncargs 0x1
 	001879cc mov ax,0xa66f20
 	001879d8 farcall ax
 	001879e0 farsubsp 0x1
 	001879e8 pop op
 	001879f0 sourceline 0x19ea
 	001879f8 mov ax,0x3
 	00187a04 mov bx,ax
 	00187a10 mov mar,0x3cef20
 	00187a1c mov ax,mar
 	00187a28 push op
 	00187a30 mov op,ax
 	00187a38 farpush bx
 	00187a40 setfuncargs 0x1
 	00187a48 mov ax,0x69ef20
 	00187a54 farcall ax
 	00187a5c farsubsp 0x1
 	00187a64 pop op
 	00187a6c sourceline 0x19eb
 	00187a74 push op
 	00187a7c mov ax,0x397
 	00187a88 farpush ax
 	00187a90 mov ax,0x1
 	00187a9c farpush ax
 	00187aa4 mov mar,0x3cef20
 	00187ab0 mov ax,mar
 	00187abc mov op,ax
 	00187ac4 setfuncargs 0x2
 	00187acc mov ax,0x6eef20
 	00187ad8 farcall ax
 	00187ae0 farsubsp 0x2
 	00187ae8 pop op
 	00187af0 sourceline 0x19ec
 	00187af8 mov ax,0x104654
 	00187b04 call ax
 	00187b0c sourceline 0x19ed
 	00187b14 push op
 	00187b1c mov ax,0x6
 	00187b28 farpush ax
 	00187b30 mov mar,0x3cef20
 	00187b3c mov ax,mar
 	00187b48 mov op,ax
 	00187b50 setfuncargs 0x1
 	00187b58 mov ax,0x51ef20
 	00187b64 farcall ax
 	00187b6c farsubsp 0x1
 	00187b74 pop op
 	00187b7c sourceline 0x19ee
 	00187b84 mov ax,0x7a
 	00187b90 mov bx,ax
 	00187b9c mov mar,0x3cef20
 	00187ba8 mov ax,mar
 	00187bb4 push op
 	00187bbc mov op,ax
 	00187bc4 farpush bx
 	00187bcc setfuncargs 0x1
 	00187bd4 mov ax,0x526f20
 	00187be0 farcall ax
 	00187be8 farsubsp 0x1
 	00187bf0 pop op
 	00187bf8 sourceline 0x19ef
 	00187c00 mov ax,0x7e
 	00187c0c mov bx,ax
 	00187c18 mov mar,0x3cef20
 	00187c24 mov ax,mar
 	00187c30 push op
 	00187c38 mov op,ax
 	00187c40 farpush bx
 	00187c48 setfuncargs 0x1
 	00187c50 mov ax,0x70ef20
 	00187c5c farcall ax
 	00187c64 farsubsp 0x1
 	00187c6c pop op
 	00187c74 sourceline 0x19f0
 	00187c7c push op
 	00187c84 mov ax,0x426
 	00187c90 farpush ax
 	00187c98 mov ax,0x397
 	00187ca4 farpush ax
 	00187cac mov ax,0x0
 	00187cb8 farpush ax
 	00187cc0 mov ax,0x3
 	00187ccc farpush ax
 	00187cd4 mov ax,0x2
 	00187ce0 farpush ax
 	00187ce8 mov mar,0x3cef20
 	00187cf4 mov ax,mar
 	00187d00 mov op,ax
 	00187d08 setfuncargs 0x5
 	00187d10 mov ax,0x536f20
 	00187d1c farcall ax
 	00187d24 farsubsp 0x5
 	00187d2c pop op
 	00187d34 sourceline 0x19f3
 	00187d3c push op
 	00187d44 mov ax,0x2c050e
 	00187d50 farpush ax
 	00187d58 mov mar,0x3cef20
 	00187d64 mov ax,mar
 	00187d70 mov op,ax
 	00187d78 setfuncargs 0x1
 	00187d80 mov ax,0x6f6f20
 	00187d8c farcall ax
 	00187d94 farsubsp 0x1
 	00187d9c pop op
 	00187da4 sourceline 0x19f4
 	00187dac push op
 	00187db4 mov ax,0x2c052d
 	00187dc0 farpush ax
 	00187dc8 mov mar,0x506f20
 	00187dd4 mov ax,mar
 	00187de0 mov op,ax
 	00187de8 setfuncargs 0x1
 	00187df0 mov ax,0x6f6f20
 	00187dfc farcall ax
 	00187e04 farsubsp 0x1
 	00187e0c pop op
 	00187e14 sourceline 0x19f5
 	00187e1c push op
 	00187e24 mov ax,0x2c055a
 	00187e30 farpush ax
 	00187e38 mov mar,0x3cef20
 	00187e44 mov ax,mar
 	00187e50 mov op,ax
 	00187e58 setfuncargs 0x1
 	00187e60 mov ax,0x6f6f20
 	00187e6c farcall ax
 	00187e74 farsubsp 0x1
 	00187e7c pop op
 	00187e84 sourceline 0x19f6
 	00187e8c push op
 	00187e94 mov ax,0x2c058d
 	00187ea0 farpush ax
 	00187ea8 mov mar,0x506f20
 	00187eb4 mov ax,mar
 	00187ec0 mov op,ax
 	00187ec8 setfuncargs 0x1
 	00187ed0 mov ax,0x6f6f20
 	00187edc farcall ax
 	00187ee4 farsubsp 0x1
 	00187eec pop op
 	00187ef4 sourceline 0x19f7
 	00187efc push op
 	00187f04 mov ax,0x427
 	00187f10 farpush ax
 	00187f18 mov ax,0x398
 	00187f24 farpush ax
 	00187f2c mov ax,0x0
 	00187f38 farpush ax
 	00187f40 mov ax,0x3
 	00187f4c farpush ax
 	00187f54 mov ax,0x0
 	00187f60 farpush ax
 	00187f68 mov mar,0x506f20
 	00187f74 mov ax,mar
 	00187f80 mov op,ax
 	00187f88 setfuncargs 0x5
 	00187f90 mov ax,0x536f20
 	00187f9c farcall ax
 	00187fa4 farsubsp 0x5
 	00187fac pop op
 	00187fb4 sourceline 0x19f8
 	00187fbc push op
 	00187fc4 mov ax,0x427
 	00187fd0 farpush ax
 	00187fd8 mov ax,0x397
 	00187fe4 farpush ax
 	00187fec mov ax,0x0
 	00187ff8 farpush ax
 	00188000 mov ax,0x3
 	0018800c farpush ax
 	00188014 mov ax,0x2
 	00188020 farpush ax
 	00188028 mov mar,0x3cef20
 	00188034 mov ax,mar
 	00188040 mov op,ax
 	00188048 setfuncargs 0x5
 	00188050 mov ax,0x536f20
 	0018805c farcall ax
 	00188064 farsubsp 0x5
 	0018806c pop op
 	00188074 sourceline 0x19f9
 	0018807c push op
 	00188084 mov ax,0x2
 	00188090 farpush ax
 	00188098 mov mar,0x3cef20
 	001880a4 mov ax,mar
 	001880b0 mov op,ax
 	001880b8 setfuncargs 0x1
 	001880c0 mov ax,0x51ef20
 	001880cc farcall ax
 	001880d4 farsubsp 0x1
 	001880dc pop op
 	001880e4 sourceline 0x19fa
 	001880ec mov ax,0x1
 	001880f8 mov bx,ax
 	00188104 mov mar,0x3cef20
 	00188110 mov ax,mar
 	0018811c push op
 	00188124 mov op,ax
 	0018812c farpush bx
 	00188134 setfuncargs 0x1
 	0018813c mov ax,0x766f20
 	00188148 farcall ax
 	00188150 farsubsp 0x1
 	00188158 pop op
 	00188160 sourceline 0x19fb
 	00188168 mov ax,0x86
 	00188174 mov bx,ax
 	00188180 mov mar,0x3cef20
 	0018818c mov ax,mar
 	00188198 push op
 	001881a0 mov op,ax
 	001881a8 farpush bx
 	001881b0 setfuncargs 0x1
 	001881b8 mov ax,0x70ef20
 	001881c4 farcall ax
 	001881cc farsubsp 0x1
 	001881d4 pop op
 	001881dc sourceline 0x19fc
 	001881e4 mov ax,0x82
 	001881f0 mov bx,ax
 	001881fc mov mar,0x3cef20
 	00188208 mov ax,mar
 	00188214 push op
 	0018821c mov op,ax
 	00188224 farpush bx
 	0018822c setfuncargs 0x1
 	00188234 mov ax,0x526f20
 	00188240 farcall ax
 	00188248 farsubsp 0x1
 	00188250 pop op
 	00188258 sourceline 0x19fd
 	00188260 mov ax,0x0
 	0018826c mov bx,ax
 	00188278 mov mar,0x3cef20
 	00188284 mov ax,mar
 	00188290 push op
 	00188298 mov op,ax
 	001882a0 farpush bx
 	001882a8 setfuncargs 0x1
 	001882b0 mov ax,0x436f20
 	001882bc farcall ax
 	001882c4 farsubsp 0x1
 	001882cc pop op
 	001882d4 sourceline 0x19fe
 	001882dc mov ax,0x1
 	001882e8 mov bx,ax
 	001882f4 mov mar,0x3cef20
 	00188300 mov ax,mar
 	0018830c push op
 	00188314 mov op,ax
 	0018831c farpush bx
 	00188324 setfuncargs 0x1
 	0018832c mov ax,0x69ef20
 	00188338 farcall ax
 	00188340 farsubsp 0x1
 	00188348 pop op
 	00188350 sourceline 0x19ff
 	00188358 mov ax,0x1
 	00188364 push ax
 	0018836c mov ax,0x1
 	00188378 assertlte ax,0x32
 	00188384 mul ax,0x8
 	00188390 mov cx,ax
 	0018839c pop ax
 	001883a4 mov bx,ax
 	001883b0 mov mar,0x6c6f20
 	001883bc add mar,cx
 	001883c8 mov ax,mar
 	001883d4 push op
 	001883dc mov op,ax
 	001883e4 farpush bx
 	001883ec setfuncargs 0x1
 	001883f4 mov ax,0xa66f20
 	00188400 farcall ax
 	00188408 farsubsp 0x1
 	00188410 pop op
 	00188418 sourceline 0x1a00
 	00188420 mov ax,0x50
 	0018842c push ax
 	00188434 mov ax,0x1e
 	00188440 push ax
 	00188448 mov ax,0x10445c
 	00188454 call ax
 	0018845c sub sp,0x8
 	00188468 mov mar,0x4e6f20
 	00188474 memwrite4 ax
 	0018847c sourceline 0x1a01
 	00188484 mov ax,0x1
 	00188490 mov mar,0x4aef20
 	0018849c memwrite4 ax
		001884a4: FALL_THROUGH

	[001884a4]
		001878d4: UNCONDITIONAL_JUMP
		00187928: FALL_THROUGH
 	001884a4 sourceline 0x1a03
 	001884ac jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[001884b4]
		00187804: CONDITIONAL_JUMP
 	001884b4 sourceline 0x1a05
 	001884bc mov mar,0x3cef20
 	001884c8 mov ax,mar
 	001884d4 push op
 	001884dc mov op,ax
 	001884e4 setfuncargs 0x0
 	001884ec mov ax,0x89ef20
 	001884f8 farcall ax
 	00188500 pop op
 	00188508 push ax
 	00188510 mov mar,0x8fef20
 	0018851c mov ax,mar
 	00188528 pop bx
 	00188530 cmpeq bx,ax
 	0018853c mov ax,bx
 	00188548 jz 0x00189084
		00189084: CONDITIONAL_JUMP
		00188550: FALL_THROUGH

	[00188550]
		001884b4: FALL_THROUGH
 	00188550 sourceline 0x1a07
 	00188558 setfuncargs 0x0
 	00188560 mov ax,0x6def20
 	0018856c farcall ax
 	00188574 lnot ax
 	0018857c jz 0x001885d8
		001885d8: CONDITIONAL_JUMP
		00188584: FALL_THROUGH

	[00188584]
		00188550: FALL_THROUGH
 	00188584 mov ax,0x82
 	00188590 farpush ax
 	00188598 mov ax,0x86
 	001885a4 farpush ax
 	001885ac setfuncargs 0x2
 	001885b4 mov ax,0x6e6f20
 	001885c0 farcall ax
 	001885c8 farsubsp 0x2
 	001885d0 jmp 0x00189074
		00189074: UNCONDITIONAL_JUMP

	[001885d8]
		00188550: CONDITIONAL_JUMP
 	001885d8 sourceline 0x1a0a
 	001885e0 mov ax,0x0
 	001885ec push ax
 	001885f4 mov ax,0x1
 	00188600 assertlte ax,0x32
 	0018860c mul ax,0x8
 	00188618 mov cx,ax
 	00188624 pop ax
 	0018862c mov bx,ax
 	00188638 mov mar,0x6c6f20
 	00188644 add mar,cx
 	00188650 mov ax,mar
 	0018865c push op
 	00188664 mov op,ax
 	0018866c farpush bx
 	00188674 setfuncargs 0x1
 	0018867c mov ax,0xa66f20
 	00188688 farcall ax
 	00188690 farsubsp 0x1
 	00188698 pop op
 	001886a0 sourceline 0x1a0b
 	001886a8 mov ax,0x3
 	001886b4 mov bx,ax
 	001886c0 mov mar,0x3cef20
 	001886cc mov ax,mar
 	001886d8 push op
 	001886e0 mov op,ax
 	001886e8 farpush bx
 	001886f0 setfuncargs 0x1
 	001886f8 mov ax,0x69ef20
 	00188704 farcall ax
 	0018870c farsubsp 0x1
 	00188714 pop op
 	0018871c sourceline 0x1a0c
 	00188724 push op
 	0018872c mov ax,0x397
 	00188738 farpush ax
 	00188740 mov ax,0x1
 	0018874c farpush ax
 	00188754 mov mar,0x3cef20
 	00188760 mov ax,mar
 	0018876c mov op,ax
 	00188774 setfuncargs 0x2
 	0018877c mov ax,0x6eef20
 	00188788 farcall ax
 	00188790 farsubsp 0x2
 	00188798 pop op
 	001887a0 sourceline 0x1a0d
 	001887a8 mov ax,0x104654
 	001887b4 call ax
 	001887bc sourceline 0x1a0e
 	001887c4 push op
 	001887cc mov ax,0x6
 	001887d8 farpush ax
 	001887e0 mov mar,0x3cef20
 	001887ec mov ax,mar
 	001887f8 mov op,ax
 	00188800 setfuncargs 0x1
 	00188808 mov ax,0x51ef20
 	00188814 farcall ax
 	0018881c farsubsp 0x1
 	00188824 pop op
 	0018882c sourceline 0x1a0f
 	00188834 mov ax,0x7a
 	00188840 mov bx,ax
 	0018884c mov mar,0x3cef20
 	00188858 mov ax,mar
 	00188864 push op
 	0018886c mov op,ax
 	00188874 farpush bx
 	0018887c setfuncargs 0x1
 	00188884 mov ax,0x526f20
 	00188890 farcall ax
 	00188898 farsubsp 0x1
 	001888a0 pop op
 	001888a8 sourceline 0x1a10
 	001888b0 mov ax,0x7e
 	001888bc mov bx,ax
 	001888c8 mov mar,0x3cef20
 	001888d4 mov ax,mar
 	001888e0 push op
 	001888e8 mov op,ax
 	001888f0 farpush bx
 	001888f8 setfuncargs 0x1
 	00188900 mov ax,0x70ef20
 	0018890c farcall ax
 	00188914 farsubsp 0x1
 	0018891c pop op
 	00188924 sourceline 0x1a11
 	0018892c push op
 	00188934 mov ax,0x426
 	00188940 farpush ax
 	00188948 mov ax,0x397
 	00188954 farpush ax
 	0018895c mov ax,0x0
 	00188968 farpush ax
 	00188970 mov ax,0x3
 	0018897c farpush ax
 	00188984 mov ax,0x2
 	00188990 farpush ax
 	00188998 mov mar,0x3cef20
 	001889a4 mov ax,mar
 	001889b0 mov op,ax
 	001889b8 setfuncargs 0x5
 	001889c0 mov ax,0x536f20
 	001889cc farcall ax
 	001889d4 farsubsp 0x5
 	001889dc pop op
 	001889e4 sourceline 0x1a14
 	001889ec push op
 	001889f4 mov ax,0x2c05a5
 	00188a00 farpush ax
 	00188a08 mov mar,0x3cef20
 	00188a14 mov ax,mar
 	00188a20 mov op,ax
 	00188a28 setfuncargs 0x1
 	00188a30 mov ax,0x6f6f20
 	00188a3c farcall ax
 	00188a44 farsubsp 0x1
 	00188a4c pop op
 	00188a54 sourceline 0x1a15
 	00188a5c push op
 	00188a64 mov ax,0x2c05c3
 	00188a70 farpush ax
 	00188a78 mov mar,0x506f20
 	00188a84 mov ax,mar
 	00188a90 mov op,ax
 	00188a98 setfuncargs 0x1
 	00188aa0 mov ax,0x6f6f20
 	00188aac farcall ax
 	00188ab4 farsubsp 0x1
 	00188abc pop op
 	00188ac4 sourceline 0x1a16
 	00188acc push op
 	00188ad4 mov ax,0x427
 	00188ae0 farpush ax
 	00188ae8 mov ax,0x398
 	00188af4 farpush ax
 	00188afc mov ax,0x0
 	00188b08 farpush ax
 	00188b10 mov ax,0x3
 	00188b1c farpush ax
 	00188b24 mov ax,0x0
 	00188b30 farpush ax
 	00188b38 mov mar,0x506f20
 	00188b44 mov ax,mar
 	00188b50 mov op,ax
 	00188b58 setfuncargs 0x5
 	00188b60 mov ax,0x536f20
 	00188b6c farcall ax
 	00188b74 farsubsp 0x5
 	00188b7c pop op
 	00188b84 sourceline 0x1a17
 	00188b8c push op
 	00188b94 mov ax,0x427
 	00188ba0 farpush ax
 	00188ba8 mov ax,0x397
 	00188bb4 farpush ax
 	00188bbc mov ax,0x0
 	00188bc8 farpush ax
 	00188bd0 mov ax,0x3
 	00188bdc farpush ax
 	00188be4 mov ax,0x2
 	00188bf0 farpush ax
 	00188bf8 mov mar,0x3cef20
 	00188c04 mov ax,mar
 	00188c10 mov op,ax
 	00188c18 setfuncargs 0x5
 	00188c20 mov ax,0x536f20
 	00188c2c farcall ax
 	00188c34 farsubsp 0x5
 	00188c3c pop op
 	00188c44 sourceline 0x1a18
 	00188c4c push op
 	00188c54 mov ax,0x2
 	00188c60 farpush ax
 	00188c68 mov mar,0x3cef20
 	00188c74 mov ax,mar
 	00188c80 mov op,ax
 	00188c88 setfuncargs 0x1
 	00188c90 mov ax,0x51ef20
 	00188c9c farcall ax
 	00188ca4 farsubsp 0x1
 	00188cac pop op
 	00188cb4 sourceline 0x1a19
 	00188cbc mov ax,0x1
 	00188cc8 mov bx,ax
 	00188cd4 mov mar,0x3cef20
 	00188ce0 mov ax,mar
 	00188cec push op
 	00188cf4 mov op,ax
 	00188cfc farpush bx
 	00188d04 setfuncargs 0x1
 	00188d0c mov ax,0x766f20
 	00188d18 farcall ax
 	00188d20 farsubsp 0x1
 	00188d28 pop op
 	00188d30 sourceline 0x1a1a
 	00188d38 mov ax,0x86
 	00188d44 mov bx,ax
 	00188d50 mov mar,0x3cef20
 	00188d5c mov ax,mar
 	00188d68 push op
 	00188d70 mov op,ax
 	00188d78 farpush bx
 	00188d80 setfuncargs 0x1
 	00188d88 mov ax,0x70ef20
 	00188d94 farcall ax
 	00188d9c farsubsp 0x1
 	00188da4 pop op
 	00188dac sourceline 0x1a1b
 	00188db4 mov ax,0x82
 	00188dc0 mov bx,ax
 	00188dcc mov mar,0x3cef20
 	00188dd8 mov ax,mar
 	00188de4 push op
 	00188dec mov op,ax
 	00188df4 farpush bx
 	00188dfc setfuncargs 0x1
 	00188e04 mov ax,0x526f20
 	00188e10 farcall ax
 	00188e18 farsubsp 0x1
 	00188e20 pop op
 	00188e28 sourceline 0x1a1c
 	00188e30 mov ax,0x0
 	00188e3c mov bx,ax
 	00188e48 mov mar,0x3cef20
 	00188e54 mov ax,mar
 	00188e60 push op
 	00188e68 mov op,ax
 	00188e70 farpush bx
 	00188e78 setfuncargs 0x1
 	00188e80 mov ax,0x436f20
 	00188e8c farcall ax
 	00188e94 farsubsp 0x1
 	00188e9c pop op
 	00188ea4 sourceline 0x1a1d
 	00188eac mov ax,0x1
 	00188eb8 mov bx,ax
 	00188ec4 mov mar,0x3cef20
 	00188ed0 mov ax,mar
 	00188edc push op
 	00188ee4 mov op,ax
 	00188eec farpush bx
 	00188ef4 setfuncargs 0x1
 	00188efc mov ax,0x69ef20
 	00188f08 farcall ax
 	00188f10 farsubsp 0x1
 	00188f18 pop op
 	00188f20 sourceline 0x1a1e
 	00188f28 mov ax,0x1
 	00188f34 push ax
 	00188f3c mov ax,0x1
 	00188f48 assertlte ax,0x32
 	00188f54 mul ax,0x8
 	00188f60 mov cx,ax
 	00188f6c pop ax
 	00188f74 mov bx,ax
 	00188f80 mov mar,0x6c6f20
 	00188f8c add mar,cx
 	00188f98 mov ax,mar
 	00188fa4 push op
 	00188fac mov op,ax
 	00188fb4 farpush bx
 	00188fbc setfuncargs 0x1
 	00188fc4 mov ax,0xa66f20
 	00188fd0 farcall ax
 	00188fd8 farsubsp 0x1
 	00188fe0 pop op
 	00188fe8 sourceline 0x1a1f
 	00188ff0 mov ax,0x50
 	00188ffc push ax
 	00189004 mov ax,0x1e
 	00189010 push ax
 	00189018 mov ax,0x10445c
 	00189024 call ax
 	0018902c sub sp,0x8
 	00189038 mov mar,0x4e6f20
 	00189044 memwrite4 ax
 	0018904c sourceline 0x1a20
 	00189054 mov ax,0x1
 	00189060 mov mar,0x4aef20
 	0018906c memwrite4 ax
		00189074: FALL_THROUGH

	[00189074]
		00188584: UNCONDITIONAL_JUMP
		001885d8: FALL_THROUGH
 	00189074 sourceline 0x1a22
 	0018907c jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00189084]
		001884b4: CONDITIONAL_JUMP
 	00189084 sourceline 0x1a24
 	0018908c mov mar,0x3cef20
 	00189098 mov ax,mar
 	001890a4 push op
 	001890ac mov op,ax
 	001890b4 setfuncargs 0x0
 	001890bc mov ax,0x89ef20
 	001890c8 farcall ax
 	001890d0 pop op
 	001890d8 push ax
 	001890e0 mov mar,0x906f20
 	001890ec mov ax,mar
 	001890f8 pop bx
 	00189100 cmpeq bx,ax
 	0018910c mov ax,bx
 	00189118 jz 0x00189ef4
		00189ef4: CONDITIONAL_JUMP
		00189120: FALL_THROUGH

	[00189120]
		00189084: FALL_THROUGH
 	00189120 sourceline 0x1a26
 	00189128 setfuncargs 0x0
 	00189130 mov ax,0x6def20
 	0018913c farcall ax
 	00189144 lnot ax
 	0018914c jz 0x001891a8
		001891a8: CONDITIONAL_JUMP
		00189154: FALL_THROUGH

	[00189154]
		00189120: FALL_THROUGH
 	00189154 mov ax,0x82
 	00189160 farpush ax
 	00189168 mov ax,0x86
 	00189174 farpush ax
 	0018917c setfuncargs 0x2
 	00189184 mov ax,0x6e6f20
 	00189190 farcall ax
 	00189198 farsubsp 0x2
 	001891a0 jmp 0x00189ee4
		00189ee4: UNCONDITIONAL_JUMP

	[001891a8]
		00189120: CONDITIONAL_JUMP
 	001891a8 sourceline 0x1a29
 	001891b0 mov ax,0x0
 	001891bc push ax
 	001891c4 mov ax,0x1
 	001891d0 assertlte ax,0x32
 	001891dc mul ax,0x8
 	001891e8 mov cx,ax
 	001891f4 pop ax
 	001891fc mov bx,ax
 	00189208 mov mar,0x6c6f20
 	00189214 add mar,cx
 	00189220 mov ax,mar
 	0018922c push op
 	00189234 mov op,ax
 	0018923c farpush bx
 	00189244 setfuncargs 0x1
 	0018924c mov ax,0xa66f20
 	00189258 farcall ax
 	00189260 farsubsp 0x1
 	00189268 pop op
 	00189270 sourceline 0x1a2a
 	00189278 mov ax,0x3
 	00189284 mov bx,ax
 	00189290 mov mar,0x3cef20
 	0018929c mov ax,mar
 	001892a8 push op
 	001892b0 mov op,ax
 	001892b8 farpush bx
 	001892c0 setfuncargs 0x1
 	001892c8 mov ax,0x69ef20
 	001892d4 farcall ax
 	001892dc farsubsp 0x1
 	001892e4 pop op
 	001892ec sourceline 0x1a2b
 	001892f4 push op
 	001892fc mov ax,0x397
 	00189308 farpush ax
 	00189310 mov ax,0x1
 	0018931c farpush ax
 	00189324 mov mar,0x3cef20
 	00189330 mov ax,mar
 	0018933c mov op,ax
 	00189344 setfuncargs 0x2
 	0018934c mov ax,0x6eef20
 	00189358 farcall ax
 	00189360 farsubsp 0x2
 	00189368 pop op
 	00189370 sourceline 0x1a2c
 	00189378 mov ax,0x104654
 	00189384 call ax
 	0018938c sourceline 0x1a2d
 	00189394 push op
 	0018939c mov ax,0x6
 	001893a8 farpush ax
 	001893b0 mov mar,0x3cef20
 	001893bc mov ax,mar
 	001893c8 mov op,ax
 	001893d0 setfuncargs 0x1
 	001893d8 mov ax,0x51ef20
 	001893e4 farcall ax
 	001893ec farsubsp 0x1
 	001893f4 pop op
 	001893fc sourceline 0x1a2e
 	00189404 mov ax,0x7a
 	00189410 mov bx,ax
 	0018941c mov mar,0x3cef20
 	00189428 mov ax,mar
 	00189434 push op
 	0018943c mov op,ax
 	00189444 farpush bx
 	0018944c setfuncargs 0x1
 	00189454 mov ax,0x526f20
 	00189460 farcall ax
 	00189468 farsubsp 0x1
 	00189470 pop op
 	00189478 sourceline 0x1a2f
 	00189480 mov ax,0x7e
 	0018948c mov bx,ax
 	00189498 mov mar,0x3cef20
 	001894a4 mov ax,mar
 	001894b0 push op
 	001894b8 mov op,ax
 	001894c0 farpush bx
 	001894c8 setfuncargs 0x1
 	001894d0 mov ax,0x70ef20
 	001894dc farcall ax
 	001894e4 farsubsp 0x1
 	001894ec pop op
 	001894f4 sourceline 0x1a30
 	001894fc push op
 	00189504 mov ax,0x426
 	00189510 farpush ax
 	00189518 mov ax,0x397
 	00189524 farpush ax
 	0018952c mov ax,0x0
 	00189538 farpush ax
 	00189540 mov ax,0x3
 	0018954c farpush ax
 	00189554 mov ax,0x2
 	00189560 farpush ax
 	00189568 mov mar,0x3cef20
 	00189574 mov ax,mar
 	00189580 mov op,ax
 	00189588 setfuncargs 0x5
 	00189590 mov ax,0x536f20
 	0018959c farcall ax
 	001895a4 farsubsp 0x5
 	001895ac pop op
 	001895b4 sourceline 0x1a33
 	001895bc push op
 	001895c4 mov ax,0x2c05fa
 	001895d0 farpush ax
 	001895d8 mov mar,0x3cef20
 	001895e4 mov ax,mar
 	001895f0 mov op,ax
 	001895f8 setfuncargs 0x1
 	00189600 mov ax,0x6f6f20
 	0018960c farcall ax
 	00189614 farsubsp 0x1
 	0018961c pop op
 	00189624 sourceline 0x1a34
 	0018962c push op
 	00189634 mov ax,0x2c061e
 	00189640 farpush ax
 	00189648 mov mar,0x506f20
 	00189654 mov ax,mar
 	00189660 mov op,ax
 	00189668 setfuncargs 0x1
 	00189670 mov ax,0x6f6f20
 	0018967c farcall ax
 	00189684 farsubsp 0x1
 	0018968c pop op
 	00189694 sourceline 0x1a35
 	0018969c push op
 	001896a4 mov ax,0x2c0631
 	001896b0 farpush ax
 	001896b8 mov mar,0x3cef20
 	001896c4 mov ax,mar
 	001896d0 mov op,ax
 	001896d8 setfuncargs 0x1
 	001896e0 mov ax,0x6f6f20
 	001896ec farcall ax
 	001896f4 farsubsp 0x1
 	001896fc pop op
 	00189704 sourceline 0x1a36
 	0018970c push op
 	00189714 mov ax,0x2c0657
 	00189720 farpush ax
 	00189728 mov mar,0x506f20
 	00189734 mov ax,mar
 	00189740 mov op,ax
 	00189748 setfuncargs 0x1
 	00189750 mov ax,0x6f6f20
 	0018975c farcall ax
 	00189764 farsubsp 0x1
 	0018976c pop op
 	00189774 sourceline 0x1a37
 	0018977c push op
 	00189784 mov ax,0x2c0684
 	00189790 farpush ax
 	00189798 mov mar,0x3cef20
 	001897a4 mov ax,mar
 	001897b0 mov op,ax
 	001897b8 setfuncargs 0x1
 	001897c0 mov ax,0x6f6f20
 	001897cc farcall ax
 	001897d4 farsubsp 0x1
 	001897dc pop op
 	001897e4 sourceline 0x1a38
 	001897ec push op
 	001897f4 mov ax,0x2c06a7
 	00189800 farpush ax
 	00189808 mov mar,0x506f20
 	00189814 mov ax,mar
 	00189820 mov op,ax
 	00189828 setfuncargs 0x1
 	00189830 mov ax,0x6f6f20
 	0018983c farcall ax
 	00189844 farsubsp 0x1
 	0018984c pop op
 	00189854 sourceline 0x1a39
 	0018985c push op
 	00189864 mov ax,0x2c06d0
 	00189870 farpush ax
 	00189878 mov mar,0x3cef20
 	00189884 mov ax,mar
 	00189890 mov op,ax
 	00189898 setfuncargs 0x1
 	001898a0 mov ax,0x6f6f20
 	001898ac farcall ax
 	001898b4 farsubsp 0x1
 	001898bc pop op
 	001898c4 sourceline 0x1a3a
 	001898cc push op
 	001898d4 mov ax,0x2c06dc
 	001898e0 farpush ax
 	001898e8 mov mar,0x506f20
 	001898f4 mov ax,mar
 	00189900 mov op,ax
 	00189908 setfuncargs 0x1
 	00189910 mov ax,0x6f6f20
 	0018991c farcall ax
 	00189924 farsubsp 0x1
 	0018992c pop op
 	00189934 sourceline 0x1a3b
 	0018993c push op
 	00189944 mov ax,0x427
 	00189950 farpush ax
 	00189958 mov ax,0x398
 	00189964 farpush ax
 	0018996c mov ax,0x0
 	00189978 farpush ax
 	00189980 mov ax,0x3
 	0018998c farpush ax
 	00189994 mov ax,0x0
 	001899a0 farpush ax
 	001899a8 mov mar,0x506f20
 	001899b4 mov ax,mar
 	001899c0 mov op,ax
 	001899c8 setfuncargs 0x5
 	001899d0 mov ax,0x536f20
 	001899dc farcall ax
 	001899e4 farsubsp 0x5
 	001899ec pop op
 	001899f4 sourceline 0x1a3c
 	001899fc push op
 	00189a04 mov ax,0x427
 	00189a10 farpush ax
 	00189a18 mov ax,0x397
 	00189a24 farpush ax
 	00189a2c mov ax,0x0
 	00189a38 farpush ax
 	00189a40 mov ax,0x3
 	00189a4c farpush ax
 	00189a54 mov ax,0x2
 	00189a60 farpush ax
 	00189a68 mov mar,0x3cef20
 	00189a74 mov ax,mar
 	00189a80 mov op,ax
 	00189a88 setfuncargs 0x5
 	00189a90 mov ax,0x536f20
 	00189a9c farcall ax
 	00189aa4 farsubsp 0x5
 	00189aac pop op
 	00189ab4 sourceline 0x1a3d
 	00189abc push op
 	00189ac4 mov ax,0x2
 	00189ad0 farpush ax
 	00189ad8 mov mar,0x3cef20
 	00189ae4 mov ax,mar
 	00189af0 mov op,ax
 	00189af8 setfuncargs 0x1
 	00189b00 mov ax,0x51ef20
 	00189b0c farcall ax
 	00189b14 farsubsp 0x1
 	00189b1c pop op
 	00189b24 sourceline 0x1a3e
 	00189b2c mov ax,0x1
 	00189b38 mov bx,ax
 	00189b44 mov mar,0x3cef20
 	00189b50 mov ax,mar
 	00189b5c push op
 	00189b64 mov op,ax
 	00189b6c farpush bx
 	00189b74 setfuncargs 0x1
 	00189b7c mov ax,0x766f20
 	00189b88 farcall ax
 	00189b90 farsubsp 0x1
 	00189b98 pop op
 	00189ba0 sourceline 0x1a3f
 	00189ba8 mov ax,0x86
 	00189bb4 mov bx,ax
 	00189bc0 mov mar,0x3cef20
 	00189bcc mov ax,mar
 	00189bd8 push op
 	00189be0 mov op,ax
 	00189be8 farpush bx
 	00189bf0 setfuncargs 0x1
 	00189bf8 mov ax,0x70ef20
 	00189c04 farcall ax
 	00189c0c farsubsp 0x1
 	00189c14 pop op
 	00189c1c sourceline 0x1a40
 	00189c24 mov ax,0x82
 	00189c30 mov bx,ax
 	00189c3c mov mar,0x3cef20
 	00189c48 mov ax,mar
 	00189c54 push op
 	00189c5c mov op,ax
 	00189c64 farpush bx
 	00189c6c setfuncargs 0x1
 	00189c74 mov ax,0x526f20
 	00189c80 farcall ax
 	00189c88 farsubsp 0x1
 	00189c90 pop op
 	00189c98 sourceline 0x1a41
 	00189ca0 mov ax,0x0
 	00189cac mov bx,ax
 	00189cb8 mov mar,0x3cef20
 	00189cc4 mov ax,mar
 	00189cd0 push op
 	00189cd8 mov op,ax
 	00189ce0 farpush bx
 	00189ce8 setfuncargs 0x1
 	00189cf0 mov ax,0x436f20
 	00189cfc farcall ax
 	00189d04 farsubsp 0x1
 	00189d0c pop op
 	00189d14 sourceline 0x1a42
 	00189d1c mov ax,0x1
 	00189d28 mov bx,ax
 	00189d34 mov mar,0x3cef20
 	00189d40 mov ax,mar
 	00189d4c push op
 	00189d54 mov op,ax
 	00189d5c farpush bx
 	00189d64 setfuncargs 0x1
 	00189d6c mov ax,0x69ef20
 	00189d78 farcall ax
 	00189d80 farsubsp 0x1
 	00189d88 pop op
 	00189d90 sourceline 0x1a43
 	00189d98 mov ax,0x1
 	00189da4 push ax
 	00189dac mov ax,0x1
 	00189db8 assertlte ax,0x32
 	00189dc4 mul ax,0x8
 	00189dd0 mov cx,ax
 	00189ddc pop ax
 	00189de4 mov bx,ax
 	00189df0 mov mar,0x6c6f20
 	00189dfc add mar,cx
 	00189e08 mov ax,mar
 	00189e14 push op
 	00189e1c mov op,ax
 	00189e24 farpush bx
 	00189e2c setfuncargs 0x1
 	00189e34 mov ax,0xa66f20
 	00189e40 farcall ax
 	00189e48 farsubsp 0x1
 	00189e50 pop op
 	00189e58 sourceline 0x1a44
 	00189e60 mov ax,0x50
 	00189e6c push ax
 	00189e74 mov ax,0x1e
 	00189e80 push ax
 	00189e88 mov ax,0x10445c
 	00189e94 call ax
 	00189e9c sub sp,0x8
 	00189ea8 mov mar,0x4e6f20
 	00189eb4 memwrite4 ax
 	00189ebc sourceline 0x1a45
 	00189ec4 mov ax,0x1
 	00189ed0 mov mar,0x4aef20
 	00189edc memwrite4 ax
		00189ee4: FALL_THROUGH

	[00189ee4]
		00189154: UNCONDITIONAL_JUMP
		001891a8: FALL_THROUGH
 	00189ee4 sourceline 0x1a47
 	00189eec jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[00189ef4]
		00189084: CONDITIONAL_JUMP
 	00189ef4 sourceline 0x1a49
 	00189efc mov mar,0x3cef20
 	00189f08 mov ax,mar
 	00189f14 push op
 	00189f1c mov op,ax
 	00189f24 setfuncargs 0x0
 	00189f2c mov ax,0x89ef20
 	00189f38 farcall ax
 	00189f40 pop op
 	00189f48 push ax
 	00189f50 mov mar,0x976f20
 	00189f5c mov ax,mar
 	00189f68 pop bx
 	00189f70 cmpeq bx,ax
 	00189f7c mov ax,bx
 	00189f88 jz 0x0018aac4
		0018aac4: CONDITIONAL_JUMP
		00189f90: FALL_THROUGH

	[00189f90]
		00189ef4: FALL_THROUGH
 	00189f90 sourceline 0x1a4b
 	00189f98 setfuncargs 0x0
 	00189fa0 mov ax,0x6def20
 	00189fac farcall ax
 	00189fb4 lnot ax
 	00189fbc jz 0x0018a018
		0018a018: CONDITIONAL_JUMP
		00189fc4: FALL_THROUGH

	[00189fc4]
		00189f90: FALL_THROUGH
 	00189fc4 mov ax,0x82
 	00189fd0 farpush ax
 	00189fd8 mov ax,0x86
 	00189fe4 farpush ax
 	00189fec setfuncargs 0x2
 	00189ff4 mov ax,0x6e6f20
 	0018a000 farcall ax
 	0018a008 farsubsp 0x2
 	0018a010 jmp 0x0018aab4
		0018aab4: UNCONDITIONAL_JUMP

	[0018a018]
		00189f90: CONDITIONAL_JUMP
 	0018a018 sourceline 0x1a4e
 	0018a020 mov ax,0x0
 	0018a02c push ax
 	0018a034 mov ax,0x1
 	0018a040 assertlte ax,0x32
 	0018a04c mul ax,0x8
 	0018a058 mov cx,ax
 	0018a064 pop ax
 	0018a06c mov bx,ax
 	0018a078 mov mar,0x6c6f20
 	0018a084 add mar,cx
 	0018a090 mov ax,mar
 	0018a09c push op
 	0018a0a4 mov op,ax
 	0018a0ac farpush bx
 	0018a0b4 setfuncargs 0x1
 	0018a0bc mov ax,0xa66f20
 	0018a0c8 farcall ax
 	0018a0d0 farsubsp 0x1
 	0018a0d8 pop op
 	0018a0e0 sourceline 0x1a4f
 	0018a0e8 mov ax,0x3
 	0018a0f4 mov bx,ax
 	0018a100 mov mar,0x3cef20
 	0018a10c mov ax,mar
 	0018a118 push op
 	0018a120 mov op,ax
 	0018a128 farpush bx
 	0018a130 setfuncargs 0x1
 	0018a138 mov ax,0x69ef20
 	0018a144 farcall ax
 	0018a14c farsubsp 0x1
 	0018a154 pop op
 	0018a15c sourceline 0x1a50
 	0018a164 push op
 	0018a16c mov ax,0x397
 	0018a178 farpush ax
 	0018a180 mov ax,0x1
 	0018a18c farpush ax
 	0018a194 mov mar,0x3cef20
 	0018a1a0 mov ax,mar
 	0018a1ac mov op,ax
 	0018a1b4 setfuncargs 0x2
 	0018a1bc mov ax,0x6eef20
 	0018a1c8 farcall ax
 	0018a1d0 farsubsp 0x2
 	0018a1d8 pop op
 	0018a1e0 sourceline 0x1a51
 	0018a1e8 mov ax,0x104654
 	0018a1f4 call ax
 	0018a1fc sourceline 0x1a52
 	0018a204 push op
 	0018a20c mov ax,0x6
 	0018a218 farpush ax
 	0018a220 mov mar,0x3cef20
 	0018a22c mov ax,mar
 	0018a238 mov op,ax
 	0018a240 setfuncargs 0x1
 	0018a248 mov ax,0x51ef20
 	0018a254 farcall ax
 	0018a25c farsubsp 0x1
 	0018a264 pop op
 	0018a26c sourceline 0x1a53
 	0018a274 mov ax,0x7a
 	0018a280 mov bx,ax
 	0018a28c mov mar,0x3cef20
 	0018a298 mov ax,mar
 	0018a2a4 push op
 	0018a2ac mov op,ax
 	0018a2b4 farpush bx
 	0018a2bc setfuncargs 0x1
 	0018a2c4 mov ax,0x526f20
 	0018a2d0 farcall ax
 	0018a2d8 farsubsp 0x1
 	0018a2e0 pop op
 	0018a2e8 sourceline 0x1a54
 	0018a2f0 mov ax,0x7e
 	0018a2fc mov bx,ax
 	0018a308 mov mar,0x3cef20
 	0018a314 mov ax,mar
 	0018a320 push op
 	0018a328 mov op,ax
 	0018a330 farpush bx
 	0018a338 setfuncargs 0x1
 	0018a340 mov ax,0x70ef20
 	0018a34c farcall ax
 	0018a354 farsubsp 0x1
 	0018a35c pop op
 	0018a364 sourceline 0x1a55
 	0018a36c push op
 	0018a374 mov ax,0x426
 	0018a380 farpush ax
 	0018a388 mov ax,0x397
 	0018a394 farpush ax
 	0018a39c mov ax,0x0
 	0018a3a8 farpush ax
 	0018a3b0 mov ax,0x3
 	0018a3bc farpush ax
 	0018a3c4 mov ax,0x2
 	0018a3d0 farpush ax
 	0018a3d8 mov mar,0x3cef20
 	0018a3e4 mov ax,mar
 	0018a3f0 mov op,ax
 	0018a3f8 setfuncargs 0x5
 	0018a400 mov ax,0x536f20
 	0018a40c farcall ax
 	0018a414 farsubsp 0x5
 	0018a41c pop op
 	0018a424 sourceline 0x1a58
 	0018a42c push op
 	0018a434 mov ax,0x2c0709
 	0018a440 farpush ax
 	0018a448 mov mar,0x3cef20
 	0018a454 mov ax,mar
 	0018a460 mov op,ax
 	0018a468 setfuncargs 0x1
 	0018a470 mov ax,0x6f6f20
 	0018a47c farcall ax
 	0018a484 farsubsp 0x1
 	0018a48c pop op
 	0018a494 sourceline 0x1a59
 	0018a49c push op
 	0018a4a4 mov ax,0x2c072c
 	0018a4b0 farpush ax
 	0018a4b8 mov mar,0x506f20
 	0018a4c4 mov ax,mar
 	0018a4d0 mov op,ax
 	0018a4d8 setfuncargs 0x1
 	0018a4e0 mov ax,0x6f6f20
 	0018a4ec farcall ax
 	0018a4f4 farsubsp 0x1
 	0018a4fc pop op
 	0018a504 sourceline 0x1a5a
 	0018a50c push op
 	0018a514 mov ax,0x427
 	0018a520 farpush ax
 	0018a528 mov ax,0x398
 	0018a534 farpush ax
 	0018a53c mov ax,0x0
 	0018a548 farpush ax
 	0018a550 mov ax,0x3
 	0018a55c farpush ax
 	0018a564 mov ax,0x0
 	0018a570 farpush ax
 	0018a578 mov mar,0x506f20
 	0018a584 mov ax,mar
 	0018a590 mov op,ax
 	0018a598 setfuncargs 0x5
 	0018a5a0 mov ax,0x536f20
 	0018a5ac farcall ax
 	0018a5b4 farsubsp 0x5
 	0018a5bc pop op
 	0018a5c4 sourceline 0x1a5b
 	0018a5cc push op
 	0018a5d4 mov ax,0x427
 	0018a5e0 farpush ax
 	0018a5e8 mov ax,0x397
 	0018a5f4 farpush ax
 	0018a5fc mov ax,0x0
 	0018a608 farpush ax
 	0018a610 mov ax,0x3
 	0018a61c farpush ax
 	0018a624 mov ax,0x2
 	0018a630 farpush ax
 	0018a638 mov mar,0x3cef20
 	0018a644 mov ax,mar
 	0018a650 mov op,ax
 	0018a658 setfuncargs 0x5
 	0018a660 mov ax,0x536f20
 	0018a66c farcall ax
 	0018a674 farsubsp 0x5
 	0018a67c pop op
 	0018a684 sourceline 0x1a5c
 	0018a68c push op
 	0018a694 mov ax,0x2
 	0018a6a0 farpush ax
 	0018a6a8 mov mar,0x3cef20
 	0018a6b4 mov ax,mar
 	0018a6c0 mov op,ax
 	0018a6c8 setfuncargs 0x1
 	0018a6d0 mov ax,0x51ef20
 	0018a6dc farcall ax
 	0018a6e4 farsubsp 0x1
 	0018a6ec pop op
 	0018a6f4 sourceline 0x1a5d
 	0018a6fc mov ax,0x1
 	0018a708 mov bx,ax
 	0018a714 mov mar,0x3cef20
 	0018a720 mov ax,mar
 	0018a72c push op
 	0018a734 mov op,ax
 	0018a73c farpush bx
 	0018a744 setfuncargs 0x1
 	0018a74c mov ax,0x766f20
 	0018a758 farcall ax
 	0018a760 farsubsp 0x1
 	0018a768 pop op
 	0018a770 sourceline 0x1a5e
 	0018a778 mov ax,0x86
 	0018a784 mov bx,ax
 	0018a790 mov mar,0x3cef20
 	0018a79c mov ax,mar
 	0018a7a8 push op
 	0018a7b0 mov op,ax
 	0018a7b8 farpush bx
 	0018a7c0 setfuncargs 0x1
 	0018a7c8 mov ax,0x70ef20
 	0018a7d4 farcall ax
 	0018a7dc farsubsp 0x1
 	0018a7e4 pop op
 	0018a7ec sourceline 0x1a5f
 	0018a7f4 mov ax,0x82
 	0018a800 mov bx,ax
 	0018a80c mov mar,0x3cef20
 	0018a818 mov ax,mar
 	0018a824 push op
 	0018a82c mov op,ax
 	0018a834 farpush bx
 	0018a83c setfuncargs 0x1
 	0018a844 mov ax,0x526f20
 	0018a850 farcall ax
 	0018a858 farsubsp 0x1
 	0018a860 pop op
 	0018a868 sourceline 0x1a60
 	0018a870 mov ax,0x0
 	0018a87c mov bx,ax
 	0018a888 mov mar,0x3cef20
 	0018a894 mov ax,mar
 	0018a8a0 push op
 	0018a8a8 mov op,ax
 	0018a8b0 farpush bx
 	0018a8b8 setfuncargs 0x1
 	0018a8c0 mov ax,0x436f20
 	0018a8cc farcall ax
 	0018a8d4 farsubsp 0x1
 	0018a8dc pop op
 	0018a8e4 sourceline 0x1a61
 	0018a8ec mov ax,0x1
 	0018a8f8 mov bx,ax
 	0018a904 mov mar,0x3cef20
 	0018a910 mov ax,mar
 	0018a91c push op
 	0018a924 mov op,ax
 	0018a92c farpush bx
 	0018a934 setfuncargs 0x1
 	0018a93c mov ax,0x69ef20
 	0018a948 farcall ax
 	0018a950 farsubsp 0x1
 	0018a958 pop op
 	0018a960 sourceline 0x1a62
 	0018a968 mov ax,0x1
 	0018a974 push ax
 	0018a97c mov ax,0x1
 	0018a988 assertlte ax,0x32
 	0018a994 mul ax,0x8
 	0018a9a0 mov cx,ax
 	0018a9ac pop ax
 	0018a9b4 mov bx,ax
 	0018a9c0 mov mar,0x6c6f20
 	0018a9cc add mar,cx
 	0018a9d8 mov ax,mar
 	0018a9e4 push op
 	0018a9ec mov op,ax
 	0018a9f4 farpush bx
 	0018a9fc setfuncargs 0x1
 	0018aa04 mov ax,0xa66f20
 	0018aa10 farcall ax
 	0018aa18 farsubsp 0x1
 	0018aa20 pop op
 	0018aa28 sourceline 0x1a63
 	0018aa30 mov ax,0x50
 	0018aa3c push ax
 	0018aa44 mov ax,0x1e
 	0018aa50 push ax
 	0018aa58 mov ax,0x10445c
 	0018aa64 call ax
 	0018aa6c sub sp,0x8
 	0018aa78 mov mar,0x4e6f20
 	0018aa84 memwrite4 ax
 	0018aa8c sourceline 0x1a64
 	0018aa94 mov ax,0x1
 	0018aaa0 mov mar,0x4aef20
 	0018aaac memwrite4 ax
		0018aab4: FALL_THROUGH

	[0018aab4]
		00189fc4: UNCONDITIONAL_JUMP
		0018a018: FALL_THROUGH
 	0018aab4 sourceline 0x1a66
 	0018aabc jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[0018aac4]
		00189ef4: CONDITIONAL_JUMP
 	0018aac4 sourceline 0x1a68
 	0018aacc mov mar,0x3cef20
 	0018aad8 mov ax,mar
 	0018aae4 push op
 	0018aaec mov op,ax
 	0018aaf4 setfuncargs 0x0
 	0018aafc mov ax,0x89ef20
 	0018ab08 farcall ax
 	0018ab10 pop op
 	0018ab18 push ax
 	0018ab20 mov mar,0x846f20
 	0018ab2c mov ax,mar
 	0018ab38 pop bx
 	0018ab40 cmpeq bx,ax
 	0018ab4c mov ax,bx
 	0018ab58 jz 0x0018b954
		0018b954: CONDITIONAL_JUMP
		0018ab60: FALL_THROUGH

	[0018ab60]
		0018aac4: FALL_THROUGH
 	0018ab60 sourceline 0x1a6a
 	0018ab68 setfuncargs 0x0
 	0018ab70 mov ax,0x6def20
 	0018ab7c farcall ax
 	0018ab84 lnot ax
 	0018ab8c jz 0x0018abe8
		0018abe8: CONDITIONAL_JUMP
		0018ab94: FALL_THROUGH

	[0018ab94]
		0018ab60: FALL_THROUGH
 	0018ab94 mov ax,0x82
 	0018aba0 farpush ax
 	0018aba8 mov ax,0x86
 	0018abb4 farpush ax
 	0018abbc setfuncargs 0x2
 	0018abc4 mov ax,0x6e6f20
 	0018abd0 farcall ax
 	0018abd8 farsubsp 0x2
 	0018abe0 jmp 0x0018b944
		0018b944: UNCONDITIONAL_JUMP

	[0018abe8]
		0018ab60: CONDITIONAL_JUMP
 	0018abe8 sourceline 0x1a6d
 	0018abf0 mov ax,0x0
 	0018abfc push ax
 	0018ac04 mov ax,0x1
 	0018ac10 assertlte ax,0x32
 	0018ac1c mul ax,0x8
 	0018ac28 mov cx,ax
 	0018ac34 pop ax
 	0018ac3c mov bx,ax
 	0018ac48 mov mar,0x6c6f20
 	0018ac54 add mar,cx
 	0018ac60 mov ax,mar
 	0018ac6c push op
 	0018ac74 mov op,ax
 	0018ac7c farpush bx
 	0018ac84 setfuncargs 0x1
 	0018ac8c mov ax,0xa66f20
 	0018ac98 farcall ax
 	0018aca0 farsubsp 0x1
 	0018aca8 pop op
 	0018acb0 sourceline 0x1a6e
 	0018acb8 mov ax,0x3
 	0018acc4 mov bx,ax
 	0018acd0 mov mar,0x3cef20
 	0018acdc mov ax,mar
 	0018ace8 push op
 	0018acf0 mov op,ax
 	0018acf8 farpush bx
 	0018ad00 setfuncargs 0x1
 	0018ad08 mov ax,0x69ef20
 	0018ad14 farcall ax
 	0018ad1c farsubsp 0x1
 	0018ad24 pop op
 	0018ad2c sourceline 0x1a6f
 	0018ad34 push op
 	0018ad3c mov ax,0x397
 	0018ad48 farpush ax
 	0018ad50 mov ax,0x1
 	0018ad5c farpush ax
 	0018ad64 mov mar,0x3cef20
 	0018ad70 mov ax,mar
 	0018ad7c mov op,ax
 	0018ad84 setfuncargs 0x2
 	0018ad8c mov ax,0x6eef20
 	0018ad98 farcall ax
 	0018ada0 farsubsp 0x2
 	0018ada8 pop op
 	0018adb0 sourceline 0x1a70
 	0018adb8 mov ax,0x104654
 	0018adc4 call ax
 	0018adcc sourceline 0x1a71
 	0018add4 push op
 	0018addc mov ax,0x6
 	0018ade8 farpush ax
 	0018adf0 mov mar,0x3cef20
 	0018adfc mov ax,mar
 	0018ae08 mov op,ax
 	0018ae10 setfuncargs 0x1
 	0018ae18 mov ax,0x51ef20
 	0018ae24 farcall ax
 	0018ae2c farsubsp 0x1
 	0018ae34 pop op
 	0018ae3c sourceline 0x1a72
 	0018ae44 mov ax,0x7a
 	0018ae50 mov bx,ax
 	0018ae5c mov mar,0x3cef20
 	0018ae68 mov ax,mar
 	0018ae74 push op
 	0018ae7c mov op,ax
 	0018ae84 farpush bx
 	0018ae8c setfuncargs 0x1
 	0018ae94 mov ax,0x526f20
 	0018aea0 farcall ax
 	0018aea8 farsubsp 0x1
 	0018aeb0 pop op
 	0018aeb8 sourceline 0x1a73
 	0018aec0 mov ax,0x7e
 	0018aecc mov bx,ax
 	0018aed8 mov mar,0x3cef20
 	0018aee4 mov ax,mar
 	0018aef0 push op
 	0018aef8 mov op,ax
 	0018af00 farpush bx
 	0018af08 setfuncargs 0x1
 	0018af10 mov ax,0x70ef20
 	0018af1c farcall ax
 	0018af24 farsubsp 0x1
 	0018af2c pop op
 	0018af34 sourceline 0x1a74
 	0018af3c push op
 	0018af44 mov ax,0x426
 	0018af50 farpush ax
 	0018af58 mov ax,0x397
 	0018af64 farpush ax
 	0018af6c mov ax,0x0
 	0018af78 farpush ax
 	0018af80 mov ax,0x3
 	0018af8c farpush ax
 	0018af94 mov ax,0x2
 	0018afa0 farpush ax
 	0018afa8 mov mar,0x3cef20
 	0018afb4 mov ax,mar
 	0018afc0 mov op,ax
 	0018afc8 setfuncargs 0x5
 	0018afd0 mov ax,0x536f20
 	0018afdc farcall ax
 	0018afe4 farsubsp 0x5
 	0018afec pop op
 	0018aff4 sourceline 0x1a78
 	0018affc mov ax,0x3
 	0018b008 farpush ax
 	0018b010 setfuncargs 0x1
 	0018b018 mov ax,0x4a6f20
 	0018b024 farcall ax
 	0018b02c farsubsp 0x1
 	0018b034 mov mar,sp
 	0018b040 memwrite4 ax
 	0018b048 add sp,0x4
 	0018b054 sourceline 0x1a79
 	0018b05c stackptr 0x4
 	0018b064 memread4 ax
 	0018b06c push ax
 	0018b074 mov ax,0x0
 	0018b080 pop bx
 	0018b088 cmpeq bx,ax
 	0018b094 mov ax,bx
 	0018b0a0 jz 0x0018b118
		0018b118: CONDITIONAL_JUMP
		0018b0a8: FALL_THROUGH

	[0018b0a8]
		0018abe8: FALL_THROUGH
 	0018b0a8 push op
 	0018b0b0 mov ax,0x2c8717
 	0018b0bc farpush ax
 	0018b0c4 mov mar,0x3cef20
 	0018b0d0 mov ax,mar
 	0018b0dc mov op,ax
 	0018b0e4 setfuncargs 0x1
 	0018b0ec mov ax,0x6f6f20
 	0018b0f8 farcall ax
 	0018b100 farsubsp 0x1
 	0018b108 pop op
 	0018b110 jmp 0x0018b310
		0018b310: UNCONDITIONAL_JUMP

	[0018b118]
		0018abe8: CONDITIONAL_JUMP
 	0018b118 sourceline 0x1a7a
 	0018b120 stackptr 0x4
 	0018b128 memread4 ax
 	0018b130 push ax
 	0018b138 mov ax,0x1
 	0018b144 pop bx
 	0018b14c cmpeq bx,ax
 	0018b158 mov ax,bx
 	0018b164 jz 0x0018b1dc
		0018b1dc: CONDITIONAL_JUMP
		0018b16c: FALL_THROUGH

	[0018b16c]
		0018b118: FALL_THROUGH
 	0018b16c push op
 	0018b174 mov ax,0x2c8740
 	0018b180 farpush ax
 	0018b188 mov mar,0x3cef20
 	0018b194 mov ax,mar
 	0018b1a0 mov op,ax
 	0018b1a8 setfuncargs 0x1
 	0018b1b0 mov ax,0x6f6f20
 	0018b1bc farcall ax
 	0018b1c4 farsubsp 0x1
 	0018b1cc pop op
 	0018b1d4 jmp 0x0018b310
		0018b310: UNCONDITIONAL_JUMP

	[0018b1dc]
		0018b118: CONDITIONAL_JUMP
 	0018b1dc sourceline 0x1a7b
 	0018b1e4 stackptr 0x4
 	0018b1ec memread4 ax
 	0018b1f4 push ax
 	0018b1fc mov ax,0x2
 	0018b208 pop bx
 	0018b210 cmpeq bx,ax
 	0018b21c mov ax,bx
 	0018b228 jz 0x0018b2a0
		0018b2a0: CONDITIONAL_JUMP
		0018b230: FALL_THROUGH

	[0018b230]
		0018b1dc: FALL_THROUGH
 	0018b230 push op
 	0018b238 mov ax,0x2c8769
 	0018b244 farpush ax
 	0018b24c mov mar,0x3cef20
 	0018b258 mov ax,mar
 	0018b264 mov op,ax
 	0018b26c setfuncargs 0x1
 	0018b274 mov ax,0x6f6f20
 	0018b280 farcall ax
 	0018b288 farsubsp 0x1
 	0018b290 pop op
 	0018b298 jmp 0x0018b310
		0018b310: UNCONDITIONAL_JUMP

	[0018b2a0]
		0018b1dc: CONDITIONAL_JUMP
 	0018b2a0 sourceline 0x1a7c
 	0018b2a8 push op
 	0018b2b0 mov ax,0x2c8792
 	0018b2bc farpush ax
 	0018b2c4 mov mar,0x3cef20
 	0018b2d0 mov ax,mar
 	0018b2dc mov op,ax
 	0018b2e4 setfuncargs 0x1
 	0018b2ec mov ax,0x6f6f20
 	0018b2f8 farcall ax
 	0018b300 farsubsp 0x1
 	0018b308 pop op
		0018b310: FALL_THROUGH

	[0018b310]
		0018b0a8: UNCONDITIONAL_JUMP
		0018b16c: UNCONDITIONAL_JUMP
		0018b230: UNCONDITIONAL_JUMP
		0018b2a0: FALL_THROUGH
 	0018b310 sourceline 0x1a7e
 	0018b318 push op
 	0018b320 mov ax,0x2c07e0
 	0018b32c farpush ax
 	0018b334 mov mar,0x506f20
 	0018b340 mov ax,mar
 	0018b34c mov op,ax
 	0018b354 setfuncargs 0x1
 	0018b35c mov ax,0x6f6f20
 	0018b368 farcall ax
 	0018b370 farsubsp 0x1
 	0018b378 pop op
 	0018b380 sourceline 0x1a85
 	0018b388 push op
 	0018b390 mov ax,0x427
 	0018b39c farpush ax
 	0018b3a4 mov ax,0x398
 	0018b3b0 farpush ax
 	0018b3b8 mov ax,0x0
 	0018b3c4 farpush ax
 	0018b3cc mov ax,0x3
 	0018b3d8 farpush ax
 	0018b3e0 mov ax,0x0
 	0018b3ec farpush ax
 	0018b3f4 mov mar,0x506f20
 	0018b400 mov ax,mar
 	0018b40c mov op,ax
 	0018b414 setfuncargs 0x5
 	0018b41c mov ax,0x536f20
 	0018b428 farcall ax
 	0018b430 farsubsp 0x5
 	0018b438 pop op
 	0018b440 sourceline 0x1a86
 	0018b448 push op
 	0018b450 mov ax,0x427
 	0018b45c farpush ax
 	0018b464 mov ax,0x397
 	0018b470 farpush ax
 	0018b478 mov ax,0x0
 	0018b484 farpush ax
 	0018b48c mov ax,0x3
 	0018b498 farpush ax
 	0018b4a0 mov ax,0x2
 	0018b4ac farpush ax
 	0018b4b4 mov mar,0x3cef20
 	0018b4c0 mov ax,mar
 	0018b4cc mov op,ax
 	0018b4d4 setfuncargs 0x5
 	0018b4dc mov ax,0x536f20
 	0018b4e8 farcall ax
 	0018b4f0 farsubsp 0x5
 	0018b4f8 pop op
 	0018b500 sourceline 0x1a87
 	0018b508 push op
 	0018b510 mov ax,0x2
 	0018b51c farpush ax
 	0018b524 mov mar,0x3cef20
 	0018b530 mov ax,mar
 	0018b53c mov op,ax
 	0018b544 setfuncargs 0x1
 	0018b54c mov ax,0x51ef20
 	0018b558 farcall ax
 	0018b560 farsubsp 0x1
 	0018b568 pop op
 	0018b570 sourceline 0x1a88
 	0018b578 mov ax,0x1
 	0018b584 mov bx,ax
 	0018b590 mov mar,0x3cef20
 	0018b59c mov ax,mar
 	0018b5a8 push op
 	0018b5b0 mov op,ax
 	0018b5b8 farpush bx
 	0018b5c0 setfuncargs 0x1
 	0018b5c8 mov ax,0x766f20
 	0018b5d4 farcall ax
 	0018b5dc farsubsp 0x1
 	0018b5e4 pop op
 	0018b5ec sourceline 0x1a89
 	0018b5f4 mov ax,0x86
 	0018b600 mov bx,ax
 	0018b60c mov mar,0x3cef20
 	0018b618 mov ax,mar
 	0018b624 push op
 	0018b62c mov op,ax
 	0018b634 farpush bx
 	0018b63c setfuncargs 0x1
 	0018b644 mov ax,0x70ef20
 	0018b650 farcall ax
 	0018b658 farsubsp 0x1
 	0018b660 pop op
 	0018b668 sourceline 0x1a8a
 	0018b670 mov ax,0x82
 	0018b67c mov bx,ax
 	0018b688 mov mar,0x3cef20
 	0018b694 mov ax,mar
 	0018b6a0 push op
 	0018b6a8 mov op,ax
 	0018b6b0 farpush bx
 	0018b6b8 setfuncargs 0x1
 	0018b6c0 mov ax,0x526f20
 	0018b6cc farcall ax
 	0018b6d4 farsubsp 0x1
 	0018b6dc pop op
 	0018b6e4 sourceline 0x1a8b
 	0018b6ec mov ax,0x0
 	0018b6f8 mov bx,ax
 	0018b704 mov mar,0x3cef20
 	0018b710 mov ax,mar
 	0018b71c push op
 	0018b724 mov op,ax
 	0018b72c farpush bx
 	0018b734 setfuncargs 0x1
 	0018b73c mov ax,0x436f20
 	0018b748 farcall ax
 	0018b750 farsubsp 0x1
 	0018b758 pop op
 	0018b760 sourceline 0x1a8c
 	0018b768 mov ax,0x1
 	0018b774 mov bx,ax
 	0018b780 mov mar,0x3cef20
 	0018b78c mov ax,mar
 	0018b798 push op
 	0018b7a0 mov op,ax
 	0018b7a8 farpush bx
 	0018b7b0 setfuncargs 0x1
 	0018b7b8 mov ax,0x69ef20
 	0018b7c4 farcall ax
 	0018b7cc farsubsp 0x1
 	0018b7d4 pop op
 	0018b7dc sourceline 0x1a8d
 	0018b7e4 mov ax,0x1
 	0018b7f0 push ax
 	0018b7f8 mov ax,0x1
 	0018b804 assertlte ax,0x32
 	0018b810 mul ax,0x8
 	0018b81c mov cx,ax
 	0018b828 pop ax
 	0018b830 mov bx,ax
 	0018b83c mov mar,0x6c6f20
 	0018b848 add mar,cx
 	0018b854 mov ax,mar
 	0018b860 push op
 	0018b868 mov op,ax
 	0018b870 farpush bx
 	0018b878 setfuncargs 0x1
 	0018b880 mov ax,0xa66f20
 	0018b88c farcall ax
 	0018b894 farsubsp 0x1
 	0018b89c pop op
 	0018b8a4 sourceline 0x1a8e
 	0018b8ac mov ax,0x50
 	0018b8b8 push ax
 	0018b8c0 mov ax,0x1e
 	0018b8cc push ax
 	0018b8d4 mov ax,0x10445c
 	0018b8e0 call ax
 	0018b8e8 sub sp,0x8
 	0018b8f4 mov mar,0x4e6f20
 	0018b900 memwrite4 ax
 	0018b908 sourceline 0x1a8f
 	0018b910 mov ax,0x1
 	0018b91c mov mar,0x4aef20
 	0018b928 memwrite4 ax
 	0018b930 sourceline 0x1a90
 	0018b938 sub sp,0x4
		0018b944: FALL_THROUGH

	[0018b944]
		0018ab94: UNCONDITIONAL_JUMP
		0018b310: FALL_THROUGH
 	0018b944 sourceline 0x1a91
 	0018b94c jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[0018b954]
		0018aac4: CONDITIONAL_JUMP
 	0018b954 sourceline 0x1a93
 	0018b95c mov mar,0x3cef20
 	0018b968 mov ax,mar
 	0018b974 push op
 	0018b97c mov op,ax
 	0018b984 setfuncargs 0x0
 	0018b98c mov ax,0x89ef20
 	0018b998 farcall ax
 	0018b9a0 pop op
 	0018b9a8 push ax
 	0018b9b0 mov mar,0x90ef20
 	0018b9bc mov ax,mar
 	0018b9c8 pop bx
 	0018b9d0 cmpeq bx,ax
 	0018b9dc mov ax,bx
 	0018b9e8 jz 0x0018c674
		0018c674: CONDITIONAL_JUMP
		0018b9f0: FALL_THROUGH

	[0018b9f0]
		0018b954: FALL_THROUGH
 	0018b9f0 sourceline 0x1a95
 	0018b9f8 setfuncargs 0x0
 	0018ba00 mov ax,0x6def20
 	0018ba0c farcall ax
 	0018ba14 lnot ax
 	0018ba1c jz 0x0018ba78
		0018ba78: CONDITIONAL_JUMP
		0018ba24: FALL_THROUGH

	[0018ba24]
		0018b9f0: FALL_THROUGH
 	0018ba24 mov ax,0x82
 	0018ba30 farpush ax
 	0018ba38 mov ax,0x86
 	0018ba44 farpush ax
 	0018ba4c setfuncargs 0x2
 	0018ba54 mov ax,0x6e6f20
 	0018ba60 farcall ax
 	0018ba68 farsubsp 0x2
 	0018ba70 jmp 0x0018c664
		0018c664: UNCONDITIONAL_JUMP

	[0018ba78]
		0018b9f0: CONDITIONAL_JUMP
 	0018ba78 sourceline 0x1a98
 	0018ba80 mov ax,0x0
 	0018ba8c push ax
 	0018ba94 mov ax,0x1
 	0018baa0 assertlte ax,0x32
 	0018baac mul ax,0x8
 	0018bab8 mov cx,ax
 	0018bac4 pop ax
 	0018bacc mov bx,ax
 	0018bad8 mov mar,0x6c6f20
 	0018bae4 add mar,cx
 	0018baf0 mov ax,mar
 	0018bafc push op
 	0018bb04 mov op,ax
 	0018bb0c farpush bx
 	0018bb14 setfuncargs 0x1
 	0018bb1c mov ax,0xa66f20
 	0018bb28 farcall ax
 	0018bb30 farsubsp 0x1
 	0018bb38 pop op
 	0018bb40 sourceline 0x1a99
 	0018bb48 mov ax,0x3
 	0018bb54 mov bx,ax
 	0018bb60 mov mar,0x3cef20
 	0018bb6c mov ax,mar
 	0018bb78 push op
 	0018bb80 mov op,ax
 	0018bb88 farpush bx
 	0018bb90 setfuncargs 0x1
 	0018bb98 mov ax,0x69ef20
 	0018bba4 farcall ax
 	0018bbac farsubsp 0x1
 	0018bbb4 pop op
 	0018bbbc sourceline 0x1a9a
 	0018bbc4 push op
 	0018bbcc mov ax,0x397
 	0018bbd8 farpush ax
 	0018bbe0 mov ax,0x1
 	0018bbec farpush ax
 	0018bbf4 mov mar,0x3cef20
 	0018bc00 mov ax,mar
 	0018bc0c mov op,ax
 	0018bc14 setfuncargs 0x2
 	0018bc1c mov ax,0x6eef20
 	0018bc28 farcall ax
 	0018bc30 farsubsp 0x2
 	0018bc38 pop op
 	0018bc40 sourceline 0x1a9b
 	0018bc48 mov ax,0x104654
 	0018bc54 call ax
 	0018bc5c sourceline 0x1a9c
 	0018bc64 push op
 	0018bc6c mov ax,0x6
 	0018bc78 farpush ax
 	0018bc80 mov mar,0x3cef20
 	0018bc8c mov ax,mar
 	0018bc98 mov op,ax
 	0018bca0 setfuncargs 0x1
 	0018bca8 mov ax,0x51ef20
 	0018bcb4 farcall ax
 	0018bcbc farsubsp 0x1
 	0018bcc4 pop op
 	0018bccc sourceline 0x1a9d
 	0018bcd4 mov ax,0x7a
 	0018bce0 mov bx,ax
 	0018bcec mov mar,0x3cef20
 	0018bcf8 mov ax,mar
 	0018bd04 push op
 	0018bd0c mov op,ax
 	0018bd14 farpush bx
 	0018bd1c setfuncargs 0x1
 	0018bd24 mov ax,0x526f20
 	0018bd30 farcall ax
 	0018bd38 farsubsp 0x1
 	0018bd40 pop op
 	0018bd48 sourceline 0x1a9e
 	0018bd50 mov ax,0x7e
 	0018bd5c mov bx,ax
 	0018bd68 mov mar,0x3cef20
 	0018bd74 mov ax,mar
 	0018bd80 push op
 	0018bd88 mov op,ax
 	0018bd90 farpush bx
 	0018bd98 setfuncargs 0x1
 	0018bda0 mov ax,0x70ef20
 	0018bdac farcall ax
 	0018bdb4 farsubsp 0x1
 	0018bdbc pop op
 	0018bdc4 sourceline 0x1a9f
 	0018bdcc push op
 	0018bdd4 mov ax,0x426
 	0018bde0 farpush ax
 	0018bde8 mov ax,0x397
 	0018bdf4 farpush ax
 	0018bdfc mov ax,0x0
 	0018be08 farpush ax
 	0018be10 mov ax,0x3
 	0018be1c farpush ax
 	0018be24 mov ax,0x2
 	0018be30 farpush ax
 	0018be38 mov mar,0x3cef20
 	0018be44 mov ax,mar
 	0018be50 mov op,ax
 	0018be58 setfuncargs 0x5
 	0018be60 mov ax,0x536f20
 	0018be6c farcall ax
 	0018be74 farsubsp 0x5
 	0018be7c pop op
 	0018be84 sourceline 0x1aa2
 	0018be8c push op
 	0018be94 mov ax,0x2c0813
 	0018bea0 farpush ax
 	0018bea8 mov mar,0x3cef20
 	0018beb4 mov ax,mar
 	0018bec0 mov op,ax
 	0018bec8 setfuncargs 0x1
 	0018bed0 mov ax,0x6f6f20
 	0018bedc farcall ax
 	0018bee4 farsubsp 0x1
 	0018beec pop op
 	0018bef4 sourceline 0x1aa3
 	0018befc push op
 	0018bf04 mov ax,0x2c0880
 	0018bf10 farpush ax
 	0018bf18 mov mar,0x506f20
 	0018bf24 mov ax,mar
 	0018bf30 mov op,ax
 	0018bf38 setfuncargs 0x1
 	0018bf40 mov ax,0x6f6f20
 	0018bf4c farcall ax
 	0018bf54 farsubsp 0x1
 	0018bf5c pop op
 	0018bf64 sourceline 0x1aa4
 	0018bf6c push op
 	0018bf74 mov ax,0x2c0893
 	0018bf80 farpush ax
 	0018bf88 mov mar,0x3cef20
 	0018bf94 mov ax,mar
 	0018bfa0 mov op,ax
 	0018bfa8 setfuncargs 0x1
 	0018bfb0 mov ax,0x6f6f20
 	0018bfbc farcall ax
 	0018bfc4 farsubsp 0x1
 	0018bfcc pop op
 	0018bfd4 sourceline 0x1aa5
 	0018bfdc push op
 	0018bfe4 mov ax,0x2c08dd
 	0018bff0 farpush ax
 	0018bff8 mov mar,0x506f20
 	0018c004 mov ax,mar
 	0018c010 mov op,ax
 	0018c018 setfuncargs 0x1
 	0018c020 mov ax,0x6f6f20
 	0018c02c farcall ax
 	0018c034 farsubsp 0x1
 	0018c03c pop op
 	0018c044 sourceline 0x1aa6
 	0018c04c push op
 	0018c054 mov ax,0x2c0945
 	0018c060 farpush ax
 	0018c068 mov mar,0x3cef20
 	0018c074 mov ax,mar
 	0018c080 mov op,ax
 	0018c088 setfuncargs 0x1
 	0018c090 mov ax,0x6f6f20
 	0018c09c farcall ax
 	0018c0a4 farsubsp 0x1
 	0018c0ac pop op
 	0018c0b4 sourceline 0x1aa7
 	0018c0bc push op
 	0018c0c4 mov ax,0x427
 	0018c0d0 farpush ax
 	0018c0d8 mov ax,0x398
 	0018c0e4 farpush ax
 	0018c0ec mov ax,0x0
 	0018c0f8 farpush ax
 	0018c100 mov ax,0x3
 	0018c10c farpush ax
 	0018c114 mov ax,0x0
 	0018c120 farpush ax
 	0018c128 mov mar,0x506f20
 	0018c134 mov ax,mar
 	0018c140 mov op,ax
 	0018c148 setfuncargs 0x5
 	0018c150 mov ax,0x536f20
 	0018c15c farcall ax
 	0018c164 farsubsp 0x5
 	0018c16c pop op
 	0018c174 sourceline 0x1aa8
 	0018c17c push op
 	0018c184 mov ax,0x427
 	0018c190 farpush ax
 	0018c198 mov ax,0x397
 	0018c1a4 farpush ax
 	0018c1ac mov ax,0x0
 	0018c1b8 farpush ax
 	0018c1c0 mov ax,0x3
 	0018c1cc farpush ax
 	0018c1d4 mov ax,0x2
 	0018c1e0 farpush ax
 	0018c1e8 mov mar,0x3cef20
 	0018c1f4 mov ax,mar
 	0018c200 mov op,ax
 	0018c208 setfuncargs 0x5
 	0018c210 mov ax,0x536f20
 	0018c21c farcall ax
 	0018c224 farsubsp 0x5
 	0018c22c pop op
 	0018c234 sourceline 0x1aa9
 	0018c23c push op
 	0018c244 mov ax,0x2
 	0018c250 farpush ax
 	0018c258 mov mar,0x3cef20
 	0018c264 mov ax,mar
 	0018c270 mov op,ax
 	0018c278 setfuncargs 0x1
 	0018c280 mov ax,0x51ef20
 	0018c28c farcall ax
 	0018c294 farsubsp 0x1
 	0018c29c pop op
 	0018c2a4 sourceline 0x1aaa
 	0018c2ac mov ax,0x1
 	0018c2b8 mov bx,ax
 	0018c2c4 mov mar,0x3cef20
 	0018c2d0 mov ax,mar
 	0018c2dc push op
 	0018c2e4 mov op,ax
 	0018c2ec farpush bx
 	0018c2f4 setfuncargs 0x1
 	0018c2fc mov ax,0x766f20
 	0018c308 farcall ax
 	0018c310 farsubsp 0x1
 	0018c318 pop op
 	0018c320 sourceline 0x1aab
 	0018c328 mov ax,0x86
 	0018c334 mov bx,ax
 	0018c340 mov mar,0x3cef20
 	0018c34c mov ax,mar
 	0018c358 push op
 	0018c360 mov op,ax
 	0018c368 farpush bx
 	0018c370 setfuncargs 0x1
 	0018c378 mov ax,0x70ef20
 	0018c384 farcall ax
 	0018c38c farsubsp 0x1
 	0018c394 pop op
 	0018c39c sourceline 0x1aac
 	0018c3a4 mov ax,0x82
 	0018c3b0 mov bx,ax
 	0018c3bc mov mar,0x3cef20
 	0018c3c8 mov ax,mar
 	0018c3d4 push op
 	0018c3dc mov op,ax
 	0018c3e4 farpush bx
 	0018c3ec setfuncargs 0x1
 	0018c3f4 mov ax,0x526f20
 	0018c400 farcall ax
 	0018c408 farsubsp 0x1
 	0018c410 pop op
 	0018c418 sourceline 0x1aad
 	0018c420 mov ax,0x0
 	0018c42c mov bx,ax
 	0018c438 mov mar,0x3cef20
 	0018c444 mov ax,mar
 	0018c450 push op
 	0018c458 mov op,ax
 	0018c460 farpush bx
 	0018c468 setfuncargs 0x1
 	0018c470 mov ax,0x436f20
 	0018c47c farcall ax
 	0018c484 farsubsp 0x1
 	0018c48c pop op
 	0018c494 sourceline 0x1aae
 	0018c49c mov ax,0x1
 	0018c4a8 mov bx,ax
 	0018c4b4 mov mar,0x3cef20
 	0018c4c0 mov ax,mar
 	0018c4cc push op
 	0018c4d4 mov op,ax
 	0018c4dc farpush bx
 	0018c4e4 setfuncargs 0x1
 	0018c4ec mov ax,0x69ef20
 	0018c4f8 farcall ax
 	0018c500 farsubsp 0x1
 	0018c508 pop op
 	0018c510 sourceline 0x1aaf
 	0018c518 mov ax,0x1
 	0018c524 push ax
 	0018c52c mov ax,0x1
 	0018c538 assertlte ax,0x32
 	0018c544 mul ax,0x8
 	0018c550 mov cx,ax
 	0018c55c pop ax
 	0018c564 mov bx,ax
 	0018c570 mov mar,0x6c6f20
 	0018c57c add mar,cx
 	0018c588 mov ax,mar
 	0018c594 push op
 	0018c59c mov op,ax
 	0018c5a4 farpush bx
 	0018c5ac setfuncargs 0x1
 	0018c5b4 mov ax,0xa66f20
 	0018c5c0 farcall ax
 	0018c5c8 farsubsp 0x1
 	0018c5d0 pop op
 	0018c5d8 sourceline 0x1ab0
 	0018c5e0 mov ax,0x50
 	0018c5ec push ax
 	0018c5f4 mov ax,0x1e
 	0018c600 push ax
 	0018c608 mov ax,0x10445c
 	0018c614 call ax
 	0018c61c sub sp,0x8
 	0018c628 mov mar,0x4e6f20
 	0018c634 memwrite4 ax
 	0018c63c sourceline 0x1ab1
 	0018c644 mov ax,0x1
 	0018c650 mov mar,0x4aef20
 	0018c65c memwrite4 ax
		0018c664: FALL_THROUGH

	[0018c664]
		0018ba24: UNCONDITIONAL_JUMP
		0018ba78: FALL_THROUGH
 	0018c664 sourceline 0x1ab3
 	0018c66c jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[0018c674]
		0018b954: CONDITIONAL_JUMP
 	0018c674 sourceline 0x1ab5
 	0018c67c mov mar,0x3cef20
 	0018c688 mov ax,mar
 	0018c694 push op
 	0018c69c mov op,ax
 	0018c6a4 setfuncargs 0x0
 	0018c6ac mov ax,0x89ef20
 	0018c6b8 farcall ax
 	0018c6c0 pop op
 	0018c6c8 push ax
 	0018c6d0 mov mar,0x916f20
 	0018c6dc mov ax,mar
 	0018c6e8 pop bx
 	0018c6f0 cmpeq bx,ax
 	0018c6fc mov ax,bx
 	0018c708 jz 0x0018d4d4
		0018d4d4: CONDITIONAL_JUMP
		0018c710: FALL_THROUGH

	[0018c710]
		0018c674: FALL_THROUGH
 	0018c710 sourceline 0x1ab7
 	0018c718 setfuncargs 0x0
 	0018c720 mov ax,0x6def20
 	0018c72c farcall ax
 	0018c734 lnot ax
 	0018c73c jz 0x0018c798
		0018c798: CONDITIONAL_JUMP
		0018c744: FALL_THROUGH

	[0018c744]
		0018c710: FALL_THROUGH
 	0018c744 mov ax,0x82
 	0018c750 farpush ax
 	0018c758 mov ax,0x86
 	0018c764 farpush ax
 	0018c76c setfuncargs 0x2
 	0018c774 mov ax,0x6e6f20
 	0018c780 farcall ax
 	0018c788 farsubsp 0x2
 	0018c790 jmp 0x0018d4d4
		0018d4d4: UNCONDITIONAL_JUMP

	[0018c798]
		0018c710: CONDITIONAL_JUMP
 	0018c798 sourceline 0x1aba
 	0018c7a0 mov ax,0x0
 	0018c7ac push ax
 	0018c7b4 mov ax,0x1
 	0018c7c0 assertlte ax,0x32
 	0018c7cc mul ax,0x8
 	0018c7d8 mov cx,ax
 	0018c7e4 pop ax
 	0018c7ec mov bx,ax
 	0018c7f8 mov mar,0x6c6f20
 	0018c804 add mar,cx
 	0018c810 mov ax,mar
 	0018c81c push op
 	0018c824 mov op,ax
 	0018c82c farpush bx
 	0018c834 setfuncargs 0x1
 	0018c83c mov ax,0xa66f20
 	0018c848 farcall ax
 	0018c850 farsubsp 0x1
 	0018c858 pop op
 	0018c860 sourceline 0x1abb
 	0018c868 mov ax,0x3
 	0018c874 mov bx,ax
 	0018c880 mov mar,0x3cef20
 	0018c88c mov ax,mar
 	0018c898 push op
 	0018c8a0 mov op,ax
 	0018c8a8 farpush bx
 	0018c8b0 setfuncargs 0x1
 	0018c8b8 mov ax,0x69ef20
 	0018c8c4 farcall ax
 	0018c8cc farsubsp 0x1
 	0018c8d4 pop op
 	0018c8dc sourceline 0x1abc
 	0018c8e4 push op
 	0018c8ec mov ax,0x397
 	0018c8f8 farpush ax
 	0018c900 mov ax,0x1
 	0018c90c farpush ax
 	0018c914 mov mar,0x3cef20
 	0018c920 mov ax,mar
 	0018c92c mov op,ax
 	0018c934 setfuncargs 0x2
 	0018c93c mov ax,0x6eef20
 	0018c948 farcall ax
 	0018c950 farsubsp 0x2
 	0018c958 pop op
 	0018c960 sourceline 0x1abd
 	0018c968 mov ax,0x104654
 	0018c974 call ax
 	0018c97c sourceline 0x1abe
 	0018c984 push op
 	0018c98c mov ax,0x6
 	0018c998 farpush ax
 	0018c9a0 mov mar,0x3cef20
 	0018c9ac mov ax,mar
 	0018c9b8 mov op,ax
 	0018c9c0 setfuncargs 0x1
 	0018c9c8 mov ax,0x51ef20
 	0018c9d4 farcall ax
 	0018c9dc farsubsp 0x1
 	0018c9e4 pop op
 	0018c9ec sourceline 0x1abf
 	0018c9f4 mov ax,0x7a
 	0018ca00 mov bx,ax
 	0018ca0c mov mar,0x3cef20
 	0018ca18 mov ax,mar
 	0018ca24 push op
 	0018ca2c mov op,ax
 	0018ca34 farpush bx
 	0018ca3c setfuncargs 0x1
 	0018ca44 mov ax,0x526f20
 	0018ca50 farcall ax
 	0018ca58 farsubsp 0x1
 	0018ca60 pop op
 	0018ca68 sourceline 0x1ac0
 	0018ca70 mov ax,0x7e
 	0018ca7c mov bx,ax
 	0018ca88 mov mar,0x3cef20
 	0018ca94 mov ax,mar
 	0018caa0 push op
 	0018caa8 mov op,ax
 	0018cab0 farpush bx
 	0018cab8 setfuncargs 0x1
 	0018cac0 mov ax,0x70ef20
 	0018cacc farcall ax
 	0018cad4 farsubsp 0x1
 	0018cadc pop op
 	0018cae4 sourceline 0x1ac1
 	0018caec push op
 	0018caf4 mov ax,0x426
 	0018cb00 farpush ax
 	0018cb08 mov ax,0x397
 	0018cb14 farpush ax
 	0018cb1c mov ax,0x0
 	0018cb28 farpush ax
 	0018cb30 mov ax,0x3
 	0018cb3c farpush ax
 	0018cb44 mov ax,0x2
 	0018cb50 farpush ax
 	0018cb58 mov mar,0x3cef20
 	0018cb64 mov ax,mar
 	0018cb70 mov op,ax
 	0018cb78 setfuncargs 0x5
 	0018cb80 mov ax,0x536f20
 	0018cb8c farcall ax
 	0018cb94 farsubsp 0x5
 	0018cb9c pop op
 	0018cba4 sourceline 0x1ac4
 	0018cbac push op
 	0018cbb4 mov ax,0x2c0958
 	0018cbc0 farpush ax
 	0018cbc8 mov mar,0x3cef20
 	0018cbd4 mov ax,mar
 	0018cbe0 mov op,ax
 	0018cbe8 setfuncargs 0x1
 	0018cbf0 mov ax,0x6f6f20
 	0018cbfc farcall ax
 	0018cc04 farsubsp 0x1
 	0018cc0c pop op
 	0018cc14 sourceline 0x1ac5
 	0018cc1c push op
 	0018cc24 mov ax,0x2c09e7
 	0018cc30 farpush ax
 	0018cc38 mov mar,0x3cef20
 	0018cc44 mov ax,mar
 	0018cc50 mov op,ax
 	0018cc58 setfuncargs 0x1
 	0018cc60 mov ax,0x6f6f20
 	0018cc6c farcall ax
 	0018cc74 farsubsp 0x1
 	0018cc7c pop op
 	0018cc84 sourceline 0x1ac6
 	0018cc8c push op
 	0018cc94 mov ax,0x2c0a2e
 	0018cca0 farpush ax
 	0018cca8 mov mar,0x506f20
 	0018ccb4 mov ax,mar
 	0018ccc0 mov op,ax
 	0018ccc8 setfuncargs 0x1
 	0018ccd0 mov ax,0x6f6f20
 	0018ccdc farcall ax
 	0018cce4 farsubsp 0x1
 	0018ccec pop op
 	0018ccf4 sourceline 0x1ac7
 	0018ccfc push op
 	0018cd04 mov ax,0x2c0a3f
 	0018cd10 farpush ax
 	0018cd18 mov mar,0x3cef20
 	0018cd24 mov ax,mar
 	0018cd30 mov op,ax
 	0018cd38 setfuncargs 0x1
 	0018cd40 mov ax,0x6f6f20
 	0018cd4c farcall ax
 	0018cd54 farsubsp 0x1
 	0018cd5c pop op
 	0018cd64 sourceline 0x1ac8
 	0018cd6c push op
 	0018cd74 mov ax,0x2c0aa4
 	0018cd80 farpush ax
 	0018cd88 mov mar,0x506f20
 	0018cd94 mov ax,mar
 	0018cda0 mov op,ax
 	0018cda8 setfuncargs 0x1
 	0018cdb0 mov ax,0x6f6f20
 	0018cdbc farcall ax
 	0018cdc4 farsubsp 0x1
 	0018cdcc pop op
 	0018cdd4 sourceline 0x1ac9
 	0018cddc push op
 	0018cde4 mov ax,0x2c0ad2
 	0018cdf0 farpush ax
 	0018cdf8 mov mar,0x3cef20
 	0018ce04 mov ax,mar
 	0018ce10 mov op,ax
 	0018ce18 setfuncargs 0x1
 	0018ce20 mov ax,0x6f6f20
 	0018ce2c farcall ax
 	0018ce34 farsubsp 0x1
 	0018ce3c pop op
 	0018ce44 sourceline 0x1aca
 	0018ce4c push op
 	0018ce54 mov ax,0x2c0b64
 	0018ce60 farpush ax
 	0018ce68 mov mar,0x3cef20
 	0018ce74 mov ax,mar
 	0018ce80 mov op,ax
 	0018ce88 setfuncargs 0x1
 	0018ce90 mov ax,0x6f6f20
 	0018ce9c farcall ax
 	0018cea4 farsubsp 0x1
 	0018ceac pop op
 	0018ceb4 sourceline 0x1acb
 	0018cebc push op
 	0018cec4 mov ax,0x2c0bfa
 	0018ced0 farpush ax
 	0018ced8 mov mar,0x506f20
 	0018cee4 mov ax,mar
 	0018cef0 mov op,ax
 	0018cef8 setfuncargs 0x1
 	0018cf00 mov ax,0x6f6f20
 	0018cf0c farcall ax
 	0018cf14 farsubsp 0x1
 	0018cf1c pop op
 	0018cf24 sourceline 0x1acc
 	0018cf2c push op
 	0018cf34 mov ax,0x427
 	0018cf40 farpush ax
 	0018cf48 mov ax,0x398
 	0018cf54 farpush ax
 	0018cf5c mov ax,0x0
 	0018cf68 farpush ax
 	0018cf70 mov ax,0x3
 	0018cf7c farpush ax
 	0018cf84 mov ax,0x0
 	0018cf90 farpush ax
 	0018cf98 mov mar,0x506f20
 	0018cfa4 mov ax,mar
 	0018cfb0 mov op,ax
 	0018cfb8 setfuncargs 0x5
 	0018cfc0 mov ax,0x536f20
 	0018cfcc farcall ax
 	0018cfd4 farsubsp 0x5
 	0018cfdc pop op
 	0018cfe4 sourceline 0x1acd
 	0018cfec push op
 	0018cff4 mov ax,0x427
 	0018d000 farpush ax
 	0018d008 mov ax,0x397
 	0018d014 farpush ax
 	0018d01c mov ax,0x0
 	0018d028 farpush ax
 	0018d030 mov ax,0x3
 	0018d03c farpush ax
 	0018d044 mov ax,0x2
 	0018d050 farpush ax
 	0018d058 mov mar,0x3cef20
 	0018d064 mov ax,mar
 	0018d070 mov op,ax
 	0018d078 setfuncargs 0x5
 	0018d080 mov ax,0x536f20
 	0018d08c farcall ax
 	0018d094 farsubsp 0x5
 	0018d09c pop op
 	0018d0a4 sourceline 0x1ace
 	0018d0ac push op
 	0018d0b4 mov ax,0x2
 	0018d0c0 farpush ax
 	0018d0c8 mov mar,0x3cef20
 	0018d0d4 mov ax,mar
 	0018d0e0 mov op,ax
 	0018d0e8 setfuncargs 0x1
 	0018d0f0 mov ax,0x51ef20
 	0018d0fc farcall ax
 	0018d104 farsubsp 0x1
 	0018d10c pop op
 	0018d114 sourceline 0x1acf
 	0018d11c mov ax,0x1
 	0018d128 mov bx,ax
 	0018d134 mov mar,0x3cef20
 	0018d140 mov ax,mar
 	0018d14c push op
 	0018d154 mov op,ax
 	0018d15c farpush bx
 	0018d164 setfuncargs 0x1
 	0018d16c mov ax,0x766f20
 	0018d178 farcall ax
 	0018d180 farsubsp 0x1
 	0018d188 pop op
 	0018d190 sourceline 0x1ad0
 	0018d198 mov ax,0x86
 	0018d1a4 mov bx,ax
 	0018d1b0 mov mar,0x3cef20
 	0018d1bc mov ax,mar
 	0018d1c8 push op
 	0018d1d0 mov op,ax
 	0018d1d8 farpush bx
 	0018d1e0 setfuncargs 0x1
 	0018d1e8 mov ax,0x70ef20
 	0018d1f4 farcall ax
 	0018d1fc farsubsp 0x1
 	0018d204 pop op
 	0018d20c sourceline 0x1ad1
 	0018d214 mov ax,0x82
 	0018d220 mov bx,ax
 	0018d22c mov mar,0x3cef20
 	0018d238 mov ax,mar
 	0018d244 push op
 	0018d24c mov op,ax
 	0018d254 farpush bx
 	0018d25c setfuncargs 0x1
 	0018d264 mov ax,0x526f20
 	0018d270 farcall ax
 	0018d278 farsubsp 0x1
 	0018d280 pop op
 	0018d288 sourceline 0x1ad2
 	0018d290 mov ax,0x0
 	0018d29c mov bx,ax
 	0018d2a8 mov mar,0x3cef20
 	0018d2b4 mov ax,mar
 	0018d2c0 push op
 	0018d2c8 mov op,ax
 	0018d2d0 farpush bx
 	0018d2d8 setfuncargs 0x1
 	0018d2e0 mov ax,0x436f20
 	0018d2ec farcall ax
 	0018d2f4 farsubsp 0x1
 	0018d2fc pop op
 	0018d304 sourceline 0x1ad3
 	0018d30c mov ax,0x1
 	0018d318 mov bx,ax
 	0018d324 mov mar,0x3cef20
 	0018d330 mov ax,mar
 	0018d33c push op
 	0018d344 mov op,ax
 	0018d34c farpush bx
 	0018d354 setfuncargs 0x1
 	0018d35c mov ax,0x69ef20
 	0018d368 farcall ax
 	0018d370 farsubsp 0x1
 	0018d378 pop op
 	0018d380 sourceline 0x1ad4
 	0018d388 mov ax,0x1
 	0018d394 push ax
 	0018d39c mov ax,0x1
 	0018d3a8 assertlte ax,0x32
 	0018d3b4 mul ax,0x8
 	0018d3c0 mov cx,ax
 	0018d3cc pop ax
 	0018d3d4 mov bx,ax
 	0018d3e0 mov mar,0x6c6f20
 	0018d3ec add mar,cx
 	0018d3f8 mov ax,mar
 	0018d404 push op
 	0018d40c mov op,ax
 	0018d414 farpush bx
 	0018d41c setfuncargs 0x1
 	0018d424 mov ax,0xa66f20
 	0018d430 farcall ax
 	0018d438 farsubsp 0x1
 	0018d440 pop op
 	0018d448 sourceline 0x1ad5
 	0018d450 mov ax,0x50
 	0018d45c push ax
 	0018d464 mov ax,0x1e
 	0018d470 push ax
 	0018d478 mov ax,0x10445c
 	0018d484 call ax
 	0018d48c sub sp,0x8
 	0018d498 mov mar,0x4e6f20
 	0018d4a4 memwrite4 ax
 	0018d4ac sourceline 0x1ad6
 	0018d4b4 mov ax,0x1
 	0018d4c0 mov mar,0x4aef20
 	0018d4cc memwrite4 ax
		0018d4d4: FALL_THROUGH

	[0018d4d4]
		00176028: UNCONDITIONAL_JUMP
		00176fa4: UNCONDITIONAL_JUMP
		00177be4: UNCONDITIONAL_JUMP
		001787b4: UNCONDITIONAL_JUMP
		00179314: UNCONDITIONAL_JUMP
		00179ee4: UNCONDITIONAL_JUMP
		0017aab4: UNCONDITIONAL_JUMP
		0017b684: UNCONDITIONAL_JUMP
		0017e238: UNCONDITIONAL_JUMP
		0017ee08: UNCONDITIONAL_JUMP
		0017f9d8: UNCONDITIONAL_JUMP
		00180618: UNCONDITIONAL_JUMP
		001811e8: UNCONDITIONAL_JUMP
		00181db8: UNCONDITIONAL_JUMP
		00182a68: UNCONDITIONAL_JUMP
		00183718: UNCONDITIONAL_JUMP
		001842e8: UNCONDITIONAL_JUMP
		001851bc: UNCONDITIONAL_JUMP
		00185eb8: UNCONDITIONAL_JUMP
		00186b44: UNCONDITIONAL_JUMP
		001877f4: UNCONDITIONAL_JUMP
		001884a4: UNCONDITIONAL_JUMP
		00189074: UNCONDITIONAL_JUMP
		00189ee4: UNCONDITIONAL_JUMP
		0018aab4: UNCONDITIONAL_JUMP
		0018b944: UNCONDITIONAL_JUMP
		0018c664: UNCONDITIONAL_JUMP
		0018c674: CONDITIONAL_JUMP
		0018c744: UNCONDITIONAL_JUMP
		0018c798: FALL_THROUGH
 	0018d4d4 sourceline 0x1ad9
 	0018d4dc mov ax,0x0
 	0018d4e8 ret

cPatricia_UseInv$0:
	[0018d4ec]
 	0018d4ec sourceline 0x1adf
 	0018d4f4 thisaddr
 	0018d4fc sourceline 0x1ae0
*	0018d504 mov mar,0x3cef20
 	0018d510 mov ax,mar
 	0018d51c push op
 	0018d524 mov op,ax
 	0018d52c setfuncargs 0x0
 	0018d534 mov ax,0x89ef20
 	0018d540 farcall ax
 	0018d548 pop op
 	0018d550 push ax
 	0018d558 mov mar,0x7cef20
 	0018d564 mov ax,mar
 	0018d570 pop bx
 	0018d578 cmpeq bx,ax
 	0018d584 mov ax,bx
 	0018d590 jnz 0x0018d64c
		0018d64c: CONDITIONAL_JUMP
		0018d598: FALL_THROUGH

	[0018d598]
		0018d4ec: FALL_THROUGH
 	0018d598 push ax
 	0018d5a0 mov mar,0x3cef20
 	0018d5ac mov ax,mar
 	0018d5b8 push op
 	0018d5c0 mov op,ax
 	0018d5c8 setfuncargs 0x0
 	0018d5d0 mov ax,0x89ef20
 	0018d5dc farcall ax
 	0018d5e4 pop op
 	0018d5ec push ax
 	0018d5f4 mov mar,0x7def20
 	0018d600 mov ax,mar
 	0018d60c pop bx
 	0018d614 cmpeq bx,ax
 	0018d620 mov ax,bx
 	0018d62c pop bx
 	0018d634 lor bx,ax
 	0018d640 mov ax,bx
		0018d64c: FALL_THROUGH

	[0018d64c]
		0018d4ec: CONDITIONAL_JUMP
		0018d598: FALL_THROUGH
 	0018d64c jz 0x0018d824
		0018d824: CONDITIONAL_JUMP
		0018d654: FALL_THROUGH

	[0018d654]
		0018d64c: FALL_THROUGH
 	0018d654 sourceline 0x1ae2
 	0018d65c push op
 	0018d664 mov ax,0x397
 	0018d670 farpush ax
 	0018d678 mov ax,0xb9
 	0018d684 farpush ax
 	0018d68c mov ax,-0x5
 	0018d698 farpush ax
 	0018d6a0 mov mar,0x3cef20
 	0018d6ac mov ax,mar
 	0018d6b8 mov op,ax
 	0018d6c0 setfuncargs 0x3
 	0018d6c8 mov ax,0x726f20
 	0018d6d4 farcall ax
 	0018d6dc farsubsp 0x3
 	0018d6e4 pop op
 	0018d6ec sourceline 0x1ae3
 	0018d6f4 mov ax,0x1
 	0018d700 mov bx,ax
 	0018d70c mov mar,0x3cef20
 	0018d718 mov ax,mar
 	0018d724 push op
 	0018d72c mov op,ax
 	0018d734 farpush bx
 	0018d73c setfuncargs 0x1
 	0018d744 mov ax,0x69ef20
 	0018d750 farcall ax
 	0018d758 farsubsp 0x1
 	0018d760 pop op
 	0018d768 sourceline 0x1ae5
 	0018d770 push op
 	0018d778 mov ax,0x2c0c7d
 	0018d784 farpush ax
 	0018d78c mov ax,0x138
 	0018d798 farpush ax
 	0018d7a0 mov ax,0x92
 	0018d7ac farpush ax
 	0018d7b4 mov ax,0x0
 	0018d7c0 farpush ax
 	0018d7c8 mov mar,0x3cef20
 	0018d7d4 mov ax,mar
 	0018d7e0 mov op,ax
 	0018d7e8 setfuncargs 0x4
 	0018d7f0 mov ax,0x6aef20
 	0018d7fc farcall ax
 	0018d804 farsubsp 0x4
 	0018d80c pop op
 	0018d814 sourceline 0x1ae6
 	0018d81c jmp 0x00199214
		00199214: UNCONDITIONAL_JUMP

	[0018d824]
		0018d64c: CONDITIONAL_JUMP
 	0018d824 sourceline 0x1ae8
 	0018d82c mov mar,0x3cef20
 	0018d838 mov ax,mar
 	0018d844 push op
 	0018d84c mov op,ax
 	0018d854 setfuncargs 0x0
 	0018d85c mov ax,0x89ef20
 	0018d868 farcall ax
 	0018d870 pop op
 	0018d878 push ax
 	0018d880 mov mar,0x8def20
 	0018d88c mov ax,mar
 	0018d898 pop bx
 	0018d8a0 cmpeq bx,ax
 	0018d8ac mov ax,bx
 	0018d8b8 jnz 0x0018d974
		0018d974: CONDITIONAL_JUMP
		0018d8c0: FALL_THROUGH

	[0018d8c0]
		0018d824: FALL_THROUGH
 	0018d8c0 push ax
 	0018d8c8 mov mar,0x3cef20
 	0018d8d4 mov ax,mar
 	0018d8e0 push op
 	0018d8e8 mov op,ax
 	0018d8f0 setfuncargs 0x0
 	0018d8f8 mov ax,0x89ef20
 	0018d904 farcall ax
 	0018d90c pop op
 	0018d914 push ax
 	0018d91c mov mar,0x9d6f20
 	0018d928 mov ax,mar
 	0018d934 pop bx
 	0018d93c cmpeq bx,ax
 	0018d948 mov ax,bx
 	0018d954 pop bx
 	0018d95c lor bx,ax
 	0018d968 mov ax,bx
		0018d974: FALL_THROUGH

	[0018d974]
		0018d824: CONDITIONAL_JUMP
		0018d8c0: FALL_THROUGH
 	0018d974 jnz 0x0018da30
		0018da30: CONDITIONAL_JUMP
		0018d97c: FALL_THROUGH

	[0018d97c]
		0018d974: FALL_THROUGH
 	0018d97c push ax
 	0018d984 mov mar,0x3cef20
 	0018d990 mov ax,mar
 	0018d99c push op
 	0018d9a4 mov op,ax
 	0018d9ac setfuncargs 0x0
 	0018d9b4 mov ax,0x89ef20
 	0018d9c0 farcall ax
 	0018d9c8 pop op
 	0018d9d0 push ax
 	0018d9d8 mov mar,0x8eef20
 	0018d9e4 mov ax,mar
 	0018d9f0 pop bx
 	0018d9f8 cmpeq bx,ax
 	0018da04 mov ax,bx
 	0018da10 pop bx
 	0018da18 lor bx,ax
 	0018da24 mov ax,bx
		0018da30: FALL_THROUGH

	[0018da30]
		0018d974: CONDITIONAL_JUMP
		0018d97c: FALL_THROUGH
 	0018da30 jnz 0x0018daec
		0018daec: CONDITIONAL_JUMP
		0018da38: FALL_THROUGH

	[0018da38]
		0018da30: FALL_THROUGH
 	0018da38 push ax
 	0018da40 mov mar,0x3cef20
 	0018da4c mov ax,mar
 	0018da58 push op
 	0018da60 mov op,ax
 	0018da68 setfuncargs 0x0
 	0018da70 mov ax,0x89ef20
 	0018da7c farcall ax
 	0018da84 pop op
 	0018da8c push ax
 	0018da94 mov mar,0x906f20
 	0018daa0 mov ax,mar
 	0018daac pop bx
 	0018dab4 cmpeq bx,ax
 	0018dac0 mov ax,bx
 	0018dacc pop bx
 	0018dad4 lor bx,ax
 	0018dae0 mov ax,bx
		0018daec: FALL_THROUGH

	[0018daec]
		0018da30: CONDITIONAL_JUMP
		0018da38: FALL_THROUGH
 	0018daec jnz 0x0018dba8
		0018dba8: CONDITIONAL_JUMP
		0018daf4: FALL_THROUGH

	[0018daf4]
		0018daec: FALL_THROUGH
 	0018daf4 push ax
 	0018dafc mov mar,0x3cef20
 	0018db08 mov ax,mar
 	0018db14 push op
 	0018db1c mov op,ax
 	0018db24 setfuncargs 0x0
 	0018db2c mov ax,0x89ef20
 	0018db38 farcall ax
 	0018db40 pop op
 	0018db48 push ax
 	0018db50 mov mar,0x8f6f20
 	0018db5c mov ax,mar
 	0018db68 pop bx
 	0018db70 cmpeq bx,ax
 	0018db7c mov ax,bx
 	0018db88 pop bx
 	0018db90 lor bx,ax
 	0018db9c mov ax,bx
		0018dba8: FALL_THROUGH

	[0018dba8]
		0018daec: CONDITIONAL_JUMP
		0018daf4: FALL_THROUGH
 	0018dba8 jnz 0x0018dc64
		0018dc64: CONDITIONAL_JUMP
		0018dbb0: FALL_THROUGH

	[0018dbb0]
		0018dba8: FALL_THROUGH
 	0018dbb0 push ax
 	0018dbb8 mov mar,0x3cef20
 	0018dbc4 mov ax,mar
 	0018dbd0 push op
 	0018dbd8 mov op,ax
 	0018dbe0 setfuncargs 0x0
 	0018dbe8 mov ax,0x89ef20
 	0018dbf4 farcall ax
 	0018dbfc pop op
 	0018dc04 push ax
 	0018dc0c mov mar,0x97ef20
 	0018dc18 mov ax,mar
 	0018dc24 pop bx
 	0018dc2c cmpeq bx,ax
 	0018dc38 mov ax,bx
 	0018dc44 pop bx
 	0018dc4c lor bx,ax
 	0018dc58 mov ax,bx
		0018dc64: FALL_THROUGH

	[0018dc64]
		0018dba8: CONDITIONAL_JUMP
		0018dbb0: FALL_THROUGH
 	0018dc64 jnz 0x0018dd20
		0018dd20: CONDITIONAL_JUMP
		0018dc6c: FALL_THROUGH

	[0018dc6c]
		0018dc64: FALL_THROUGH
 	0018dc6c push ax
 	0018dc74 mov mar,0x3cef20
 	0018dc80 mov ax,mar
 	0018dc8c push op
 	0018dc94 mov op,ax
 	0018dc9c setfuncargs 0x0
 	0018dca4 mov ax,0x89ef20
 	0018dcb0 farcall ax
 	0018dcb8 pop op
 	0018dcc0 push ax
 	0018dcc8 mov mar,0x90ef20
 	0018dcd4 mov ax,mar
 	0018dce0 pop bx
 	0018dce8 cmpeq bx,ax
 	0018dcf4 mov ax,bx
 	0018dd00 pop bx
 	0018dd08 lor bx,ax
 	0018dd14 mov ax,bx
		0018dd20: FALL_THROUGH

	[0018dd20]
		0018dc64: CONDITIONAL_JUMP
		0018dc6c: FALL_THROUGH
 	0018dd20 jnz 0x0018dddc
		0018dddc: CONDITIONAL_JUMP
		0018dd28: FALL_THROUGH

	[0018dd28]
		0018dd20: FALL_THROUGH
 	0018dd28 push ax
 	0018dd30 mov mar,0x3cef20
 	0018dd3c mov ax,mar
 	0018dd48 push op
 	0018dd50 mov op,ax
 	0018dd58 setfuncargs 0x0
 	0018dd60 mov ax,0x89ef20
 	0018dd6c farcall ax
 	0018dd74 pop op
 	0018dd7c push ax
 	0018dd84 mov mar,0x916f20
 	0018dd90 mov ax,mar
 	0018dd9c pop bx
 	0018dda4 cmpeq bx,ax
 	0018ddb0 mov ax,bx
 	0018ddbc pop bx
 	0018ddc4 lor bx,ax
 	0018ddd0 mov ax,bx
		0018dddc: FALL_THROUGH

	[0018dddc]
		0018dd20: CONDITIONAL_JUMP
		0018dd28: FALL_THROUGH
 	0018dddc jz 0x0018dfb4
		0018dfb4: CONDITIONAL_JUMP
		0018dde4: FALL_THROUGH

	[0018dde4]
		0018dddc: FALL_THROUGH
 	0018dde4 sourceline 0x1aeb
 	0018ddec push op
 	0018ddf4 mov ax,0x397
 	0018de00 farpush ax
 	0018de08 mov ax,0xb9
 	0018de14 farpush ax
 	0018de1c mov ax,-0x5
 	0018de28 farpush ax
 	0018de30 mov mar,0x3cef20
 	0018de3c mov ax,mar
 	0018de48 mov op,ax
 	0018de50 setfuncargs 0x3
 	0018de58 mov ax,0x726f20
 	0018de64 farcall ax
 	0018de6c farsubsp 0x3
 	0018de74 pop op
 	0018de7c sourceline 0x1aec
 	0018de84 mov ax,0x1
 	0018de90 mov bx,ax
 	0018de9c mov mar,0x3cef20
 	0018dea8 mov ax,mar
 	0018deb4 push op
 	0018debc mov op,ax
 	0018dec4 farpush bx
 	0018decc setfuncargs 0x1
 	0018ded4 mov ax,0x69ef20
 	0018dee0 farcall ax
 	0018dee8 farsubsp 0x1
 	0018def0 pop op
 	0018def8 sourceline 0x1aee
 	0018df00 push op
 	0018df08 mov ax,0x2c0cb0
 	0018df14 farpush ax
 	0018df1c mov ax,0x138
 	0018df28 farpush ax
 	0018df30 mov ax,0x92
 	0018df3c farpush ax
 	0018df44 mov ax,0x0
 	0018df50 farpush ax
 	0018df58 mov mar,0x3cef20
 	0018df64 mov ax,mar
 	0018df70 mov op,ax
 	0018df78 setfuncargs 0x4
 	0018df80 mov ax,0x6aef20
 	0018df8c farcall ax
 	0018df94 farsubsp 0x4
 	0018df9c pop op
 	0018dfa4 sourceline 0x1aef
 	0018dfac jmp 0x00199214
		00199214: UNCONDITIONAL_JUMP

	[0018dfb4]
		0018dddc: CONDITIONAL_JUMP
 	0018dfb4 sourceline 0x1af1
 	0018dfbc mov mar,0x3cef20
 	0018dfc8 mov ax,mar
 	0018dfd4 push op
 	0018dfdc mov op,ax
 	0018dfe4 setfuncargs 0x0
 	0018dfec mov ax,0x89ef20
 	0018dff8 farcall ax
 	0018e000 pop op
 	0018e008 push ax
 	0018e010 mov mar,0x8aef20
 	0018e01c mov ax,mar
 	0018e028 pop bx
 	0018e030 cmpeq bx,ax
 	0018e03c mov ax,bx
 	0018e048 jnz 0x0018e104
		0018e104: CONDITIONAL_JUMP
		0018e050: FALL_THROUGH

	[0018e050]
		0018dfb4: FALL_THROUGH
 	0018e050 push ax
 	0018e058 mov mar,0x3cef20
 	0018e064 mov ax,mar
 	0018e070 push op
 	0018e078 mov op,ax
 	0018e080 setfuncargs 0x0
 	0018e088 mov ax,0x89ef20
 	0018e094 farcall ax
 	0018e09c pop op
 	0018e0a4 push ax
 	0018e0ac mov mar,0x9cef20
 	0018e0b8 mov ax,mar
 	0018e0c4 pop bx
 	0018e0cc cmpeq bx,ax
 	0018e0d8 mov ax,bx
 	0018e0e4 pop bx
 	0018e0ec lor bx,ax
 	0018e0f8 mov ax,bx
		0018e104: FALL_THROUGH

	[0018e104]
		0018dfb4: CONDITIONAL_JUMP
		0018e050: FALL_THROUGH
 	0018e104 jz 0x0018e2dc
		0018e2dc: CONDITIONAL_JUMP
		0018e10c: FALL_THROUGH

	[0018e10c]
		0018e104: FALL_THROUGH
 	0018e10c sourceline 0x1af3
 	0018e114 push op
 	0018e11c mov ax,0x397
 	0018e128 farpush ax
 	0018e130 mov ax,0xb9
 	0018e13c farpush ax
 	0018e144 mov ax,-0x5
 	0018e150 farpush ax
 	0018e158 mov mar,0x3cef20
 	0018e164 mov ax,mar
 	0018e170 mov op,ax
 	0018e178 setfuncargs 0x3
 	0018e180 mov ax,0x726f20
 	0018e18c farcall ax
 	0018e194 farsubsp 0x3
 	0018e19c pop op
 	0018e1a4 sourceline 0x1af4
 	0018e1ac mov ax,0x1
 	0018e1b8 mov bx,ax
 	0018e1c4 mov mar,0x3cef20
 	0018e1d0 mov ax,mar
 	0018e1dc push op
 	0018e1e4 mov op,ax
 	0018e1ec farpush bx
 	0018e1f4 setfuncargs 0x1
 	0018e1fc mov ax,0x69ef20
 	0018e208 farcall ax
 	0018e210 farsubsp 0x1
 	0018e218 pop op
 	0018e220 sourceline 0x1af6
 	0018e228 push op
 	0018e230 mov ax,0x2c0cf5
 	0018e23c farpush ax
 	0018e244 mov ax,0x138
 	0018e250 farpush ax
 	0018e258 mov ax,0x92
 	0018e264 farpush ax
 	0018e26c mov ax,0x0
 	0018e278 farpush ax
 	0018e280 mov mar,0x3cef20
 	0018e28c mov ax,mar
 	0018e298 mov op,ax
 	0018e2a0 setfuncargs 0x4
 	0018e2a8 mov ax,0x6aef20
 	0018e2b4 farcall ax
 	0018e2bc farsubsp 0x4
 	0018e2c4 pop op
 	0018e2cc sourceline 0x1af7
 	0018e2d4 jmp 0x00199214
		00199214: UNCONDITIONAL_JUMP

	[0018e2dc]
		0018e104: CONDITIONAL_JUMP
 	0018e2dc sourceline 0x1af9
 	0018e2e4 mov mar,0x3cef20
 	0018e2f0 mov ax,mar
 	0018e2fc push op
 	0018e304 mov op,ax
 	0018e30c setfuncargs 0x0
 	0018e314 mov ax,0x89ef20
 	0018e320 farcall ax
 	0018e328 pop op
 	0018e330 push ax
 	0018e338 mov mar,0x8e6f20
 	0018e344 mov ax,mar
 	0018e350 pop bx
 	0018e358 cmpeq bx,ax
 	0018e364 mov ax,bx
 	0018e370 jz 0x0018e548
		0018e548: CONDITIONAL_JUMP
		0018e378: FALL_THROUGH

	[0018e378]
		0018e2dc: FALL_THROUGH
 	0018e378 sourceline 0x1afb
 	0018e380 push op
 	0018e388 mov ax,0x397
 	0018e394 farpush ax
 	0018e39c mov ax,0xb9
 	0018e3a8 farpush ax
 	0018e3b0 mov ax,-0x5
 	0018e3bc farpush ax
 	0018e3c4 mov mar,0x3cef20
 	0018e3d0 mov ax,mar
 	0018e3dc mov op,ax
 	0018e3e4 setfuncargs 0x3
 	0018e3ec mov ax,0x726f20
 	0018e3f8 farcall ax
 	0018e400 farsubsp 0x3
 	0018e408 pop op
 	0018e410 sourceline 0x1afc
 	0018e418 mov ax,0x1
 	0018e424 mov bx,ax
 	0018e430 mov mar,0x3cef20
 	0018e43c mov ax,mar
 	0018e448 push op
 	0018e450 mov op,ax
 	0018e458 farpush bx
 	0018e460 setfuncargs 0x1
 	0018e468 mov ax,0x69ef20
 	0018e474 farcall ax
 	0018e47c farsubsp 0x1
 	0018e484 pop op
 	0018e48c sourceline 0x1afe
 	0018e494 push op
 	0018e49c mov ax,0x2c0d27
 	0018e4a8 farpush ax
 	0018e4b0 mov ax,0x138
 	0018e4bc farpush ax
 	0018e4c4 mov ax,0x92
 	0018e4d0 farpush ax
 	0018e4d8 mov ax,0x0
 	0018e4e4 farpush ax
 	0018e4ec mov mar,0x3cef20
 	0018e4f8 mov ax,mar
 	0018e504 mov op,ax
 	0018e50c setfuncargs 0x4
 	0018e514 mov ax,0x6aef20
 	0018e520 farcall ax
 	0018e528 farsubsp 0x4
 	0018e530 pop op
 	0018e538 sourceline 0x1aff
 	0018e540 jmp 0x00199214
		00199214: UNCONDITIONAL_JUMP

	[0018e548]
		0018e2dc: CONDITIONAL_JUMP
 	0018e548 sourceline 0x1b01
 	0018e550 mov mar,0x3cef20
 	0018e55c mov ax,mar
 	0018e568 push op
 	0018e570 mov op,ax
 	0018e578 setfuncargs 0x0
 	0018e580 mov ax,0x89ef20
 	0018e58c farcall ax
 	0018e594 pop op
 	0018e59c push ax
 	0018e5a4 mov mar,0x976f20
 	0018e5b0 mov ax,mar
 	0018e5bc pop bx
 	0018e5c4 cmpeq bx,ax
 	0018e5d0 mov ax,bx
 	0018e5dc jz 0x0018e7b4
		0018e7b4: CONDITIONAL_JUMP
		0018e5e4: FALL_THROUGH

	[0018e5e4]
		0018e548: FALL_THROUGH
 	0018e5e4 sourceline 0x1b03
 	0018e5ec push op
 	0018e5f4 mov ax,0x397
 	0018e600 farpush ax
 	0018e608 mov ax,0xb9
 	0018e614 farpush ax
 	0018e61c mov ax,-0x5
 	0018e628 farpush ax
 	0018e630 mov mar,0x3cef20
 	0018e63c mov ax,mar
 	0018e648 mov op,ax
 	0018e650 setfuncargs 0x3
 	0018e658 mov ax,0x726f20
 	0018e664 farcall ax
 	0018e66c farsubsp 0x3
 	0018e674 pop op
 	0018e67c sourceline 0x1b04
 	0018e684 mov ax,0x1
 	0018e690 mov bx,ax
 	0018e69c mov mar,0x3cef20
 	0018e6a8 mov ax,mar
 	0018e6b4 push op
 	0018e6bc mov op,ax
 	0018e6c4 farpush bx
 	0018e6cc setfuncargs 0x1
 	0018e6d4 mov ax,0x69ef20
 	0018e6e0 farcall ax
 	0018e6e8 farsubsp 0x1
 	0018e6f0 pop op
 	0018e6f8 sourceline 0x1b06
 	0018e700 push op
 	0018e708 mov ax,0x2c0d75
 	0018e714 farpush ax
 	0018e71c mov ax,0x138
 	0018e728 farpush ax
 	0018e730 mov ax,0x92
 	0018e73c farpush ax
 	0018e744 mov ax,0x0
 	0018e750 farpush ax
 	0018e758 mov mar,0x3cef20
 	0018e764 mov ax,mar
 	0018e770 mov op,ax
 	0018e778 setfuncargs 0x4
 	0018e780 mov ax,0x6aef20
 	0018e78c farcall ax
 	0018e794 farsubsp 0x4
 	0018e79c pop op
 	0018e7a4 sourceline 0x1b07
 	0018e7ac jmp 0x00199214
		00199214: UNCONDITIONAL_JUMP

	[0018e7b4]
		0018e548: CONDITIONAL_JUMP
 	0018e7b4 sourceline 0x1b0a
 	0018e7bc setfuncargs 0x0
 	0018e7c4 mov ax,0x6def20
 	0018e7d0 farcall ax
 	0018e7d8 lnot ax
 	0018e7e0 jz 0x0018e83c
		0018e83c: CONDITIONAL_JUMP
		0018e7e8: FALL_THROUGH

	[0018e7e8]
		0018e7b4: FALL_THROUGH
 	0018e7e8 mov ax,0x88
 	0018e7f4 farpush ax
 	0018e7fc mov ax,0x62
 	0018e808 farpush ax
 	0018e810 setfuncargs 0x2
 	0018e818 mov ax,0x6e6f20
 	0018e824 farcall ax
 	0018e82c farsubsp 0x2
 	0018e834 jmp 0x00199214
		00199214: UNCONDITIONAL_JUMP

	[0018e83c]
		0018e7b4: CONDITIONAL_JUMP
 	0018e83c sourceline 0x1b0d
 	0018e844 push op
 	0018e84c mov ax,0x397
 	0018e858 farpush ax
 	0018e860 mov ax,0x1
 	0018e86c farpush ax
 	0018e874 mov mar,0x3cef20
 	0018e880 mov ax,mar
 	0018e88c mov op,ax
 	0018e894 setfuncargs 0x2
 	0018e89c mov ax,0x6eef20
 	0018e8a8 farcall ax
 	0018e8b0 farsubsp 0x2
 	0018e8b8 pop op
 	0018e8c0 sourceline 0x1b0e
 	0018e8c8 push op
 	0018e8d0 mov ax,0x69
 	0018e8dc farpush ax
 	0018e8e4 mov mar,0x3cef20
 	0018e8f0 mov ax,mar
 	0018e8fc mov op,ax
 	0018e904 setfuncargs 0x1
 	0018e90c mov ax,0x51ef20
 	0018e918 farcall ax
 	0018e920 farsubsp 0x1
 	0018e928 pop op
 	0018e930 sourceline 0x1b0f
 	0018e938 mov mar,0xb76f20
 	0018e944 mov ax,mar
 	0018e950 push op
 	0018e958 mov op,ax
 	0018e960 setfuncargs 0x0
 	0018e968 mov ax,0xb16f20
 	0018e974 farcall ax
 	0018e97c pop op
 	0018e984 push ax
 	0018e98c mov ax,0x0
 	0018e998 pop bx
 	0018e9a0 cmpneq bx,ax
 	0018e9ac mov ax,bx
 	0018e9b8 jz 0x0018ea68
		0018ea68: CONDITIONAL_JUMP
		0018e9c0: FALL_THROUGH

	[0018e9c0]
		0018e83c: FALL_THROUGH
 	0018e9c0 push ax
 	0018e9c8 mov mar,0xb76f20
 	0018e9d4 mov ax,mar
 	0018e9e0 push op
 	0018e9e8 mov op,ax
 	0018e9f0 setfuncargs 0x0
 	0018e9f8 mov ax,0xb16f20
 	0018ea04 farcall ax
 	0018ea0c pop op
 	0018ea14 push ax
 	0018ea1c mov ax,0x33
 	0018ea28 pop bx
 	0018ea30 cmpneq bx,ax
 	0018ea3c mov ax,bx
 	0018ea48 pop bx
 	0018ea50 land bx,ax
 	0018ea5c mov ax,bx
		0018ea68: FALL_THROUGH

	[0018ea68]
		0018e83c: CONDITIONAL_JUMP
		0018e9c0: FALL_THROUGH
 	0018ea68 jz 0x00194c74
		00194c74: CONDITIONAL_JUMP
		0018ea70: FALL_THROUGH

	[0018ea70]
		0018ea68: FALL_THROUGH
 	0018ea70 sourceline 0x1b11
 	0018ea78 push op
 	0018ea80 mov ax,0x6a
 	0018ea8c farpush ax
 	0018ea94 mov mar,0xb76f20
 	0018eaa0 mov ax,mar
 	0018eaac mov op,ax
 	0018eab4 setfuncargs 0x1
 	0018eabc mov ax,0x51ef20
 	0018eac8 farcall ax
 	0018ead0 farsubsp 0x1
 	0018ead8 pop op
 	0018eae0 sourceline 0x1b12
 	0018eae8 mov mar,0xb7ef20
 	0018eaf4 memread4 ax
 	0018eafc mov bx,ax
 	0018eb08 mov mar,0xb76f20
 	0018eb14 mov ax,mar
 	0018eb20 push op
 	0018eb28 mov op,ax
 	0018eb30 farpush bx
 	0018eb38 setfuncargs 0x1
 	0018eb40 mov ax,0x52ef20
 	0018eb4c farcall ax
 	0018eb54 farsubsp 0x1
 	0018eb5c pop op
 	0018eb64 sourceline 0x1b13
 	0018eb6c mov mar,0xb7ef20
 	0018eb78 memread4 ax
 	0018eb80 push ax
 	0018eb88 mov ax,0x1a
 	0018eb94 pop bx
 	0018eb9c cmple bx,ax
 	0018eba8 mov ax,bx
 	0018ebb4 jz 0x0018ec94
		0018ec94: CONDITIONAL_JUMP
		0018ebbc: FALL_THROUGH

	[0018ebbc]
		0018ea70: FALL_THROUGH
 	0018ebbc sourceline 0x1b15
 	0018ebc4 push op
 	0018ebcc mov ax,0x426
 	0018ebd8 farpush ax
 	0018ebe0 mov ax,0x397
 	0018ebec farpush ax
 	0018ebf4 mov ax,0x0
 	0018ec00 farpush ax
 	0018ec08 mov ax,0x3
 	0018ec14 farpush ax
 	0018ec1c mov mar,0xb7ef20
 	0018ec28 memread4 ax
 	0018ec30 farpush ax
 	0018ec38 mov mar,0xb76f20
 	0018ec44 mov ax,mar
 	0018ec50 mov op,ax
 	0018ec58 setfuncargs 0x5
 	0018ec60 mov ax,0x536f20
 	0018ec6c farcall ax
 	0018ec74 farsubsp 0x5
 	0018ec7c pop op
 	0018ec84 sourceline 0x1b16
 	0018ec8c jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018ec94]
		0018ea70: CONDITIONAL_JUMP
 	0018ec94 sourceline 0x1b19
 	0018ec9c mov mar,0xb7ef20
 	0018eca8 memread4 ax
 	0018ecb0 push ax
 	0018ecb8 mov ax,0x1b
 	0018ecc4 pop bx
 	0018eccc cmpeq bx,ax
 	0018ecd8 mov ax,bx
 	0018ece4 jz 0x0018edac
		0018edac: CONDITIONAL_JUMP
		0018ecec: FALL_THROUGH

	[0018ecec]
		0018ec94: FALL_THROUGH
 	0018ecec push op
 	0018ecf4 mov ax,0x426
 	0018ed00 farpush ax
 	0018ed08 mov ax,0x397
 	0018ed14 farpush ax
 	0018ed1c mov ax,0x0
 	0018ed28 farpush ax
 	0018ed30 mov ax,0x3
 	0018ed3c farpush ax
 	0018ed44 mov ax,0x18
 	0018ed50 farpush ax
 	0018ed58 mov mar,0xb76f20
 	0018ed64 mov ax,mar
 	0018ed70 mov op,ax
 	0018ed78 setfuncargs 0x5
 	0018ed80 mov ax,0x536f20
 	0018ed8c farcall ax
 	0018ed94 farsubsp 0x5
 	0018ed9c pop op
 	0018eda4 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018edac]
		0018ec94: CONDITIONAL_JUMP
 	0018edac sourceline 0x1b1a
 	0018edb4 mov mar,0xb7ef20
 	0018edc0 memread4 ax
 	0018edc8 push ax
 	0018edd0 mov ax,0x1c
 	0018eddc pop bx
 	0018ede4 cmpeq bx,ax
 	0018edf0 mov ax,bx
 	0018edfc jz 0x0018eec4
		0018eec4: CONDITIONAL_JUMP
		0018ee04: FALL_THROUGH

	[0018ee04]
		0018edac: FALL_THROUGH
 	0018ee04 push op
 	0018ee0c mov ax,0x426
 	0018ee18 farpush ax
 	0018ee20 mov ax,0x397
 	0018ee2c farpush ax
 	0018ee34 mov ax,0x0
 	0018ee40 farpush ax
 	0018ee48 mov ax,0x3
 	0018ee54 farpush ax
 	0018ee5c mov ax,0x17
 	0018ee68 farpush ax
 	0018ee70 mov mar,0xb76f20
 	0018ee7c mov ax,mar
 	0018ee88 mov op,ax
 	0018ee90 setfuncargs 0x5
 	0018ee98 mov ax,0x536f20
 	0018eea4 farcall ax
 	0018eeac farsubsp 0x5
 	0018eeb4 pop op
 	0018eebc jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018eec4]
		0018edac: CONDITIONAL_JUMP
 	0018eec4 sourceline 0x1b1b
 	0018eecc mov mar,0xb7ef20
 	0018eed8 memread4 ax
 	0018eee0 push ax
 	0018eee8 mov ax,0x1d
 	0018eef4 pop bx
 	0018eefc cmpeq bx,ax
 	0018ef08 mov ax,bx
 	0018ef14 jz 0x0018efdc
		0018efdc: CONDITIONAL_JUMP
		0018ef1c: FALL_THROUGH

	[0018ef1c]
		0018eec4: FALL_THROUGH
 	0018ef1c push op
 	0018ef24 mov ax,0x426
 	0018ef30 farpush ax
 	0018ef38 mov ax,0x397
 	0018ef44 farpush ax
 	0018ef4c mov ax,0x0
 	0018ef58 farpush ax
 	0018ef60 mov ax,0x3
 	0018ef6c farpush ax
 	0018ef74 mov ax,0x16
 	0018ef80 farpush ax
 	0018ef88 mov mar,0xb76f20
 	0018ef94 mov ax,mar
 	0018efa0 mov op,ax
 	0018efa8 setfuncargs 0x5
 	0018efb0 mov ax,0x536f20
 	0018efbc farcall ax
 	0018efc4 farsubsp 0x5
 	0018efcc pop op
 	0018efd4 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018efdc]
		0018eec4: CONDITIONAL_JUMP
 	0018efdc sourceline 0x1b1c
 	0018efe4 mov mar,0xb7ef20
 	0018eff0 memread4 ax
 	0018eff8 push ax
 	0018f000 mov ax,0x1e
 	0018f00c pop bx
 	0018f014 cmpeq bx,ax
 	0018f020 mov ax,bx
 	0018f02c jz 0x0018f0f4
		0018f0f4: CONDITIONAL_JUMP
		0018f034: FALL_THROUGH

	[0018f034]
		0018efdc: FALL_THROUGH
 	0018f034 push op
 	0018f03c mov ax,0x426
 	0018f048 farpush ax
 	0018f050 mov ax,0x397
 	0018f05c farpush ax
 	0018f064 mov ax,0x0
 	0018f070 farpush ax
 	0018f078 mov ax,0x3
 	0018f084 farpush ax
 	0018f08c mov ax,0x15
 	0018f098 farpush ax
 	0018f0a0 mov mar,0xb76f20
 	0018f0ac mov ax,mar
 	0018f0b8 mov op,ax
 	0018f0c0 setfuncargs 0x5
 	0018f0c8 mov ax,0x536f20
 	0018f0d4 farcall ax
 	0018f0dc farsubsp 0x5
 	0018f0e4 pop op
 	0018f0ec jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018f0f4]
		0018efdc: CONDITIONAL_JUMP
 	0018f0f4 sourceline 0x1b1d
 	0018f0fc mov mar,0xb7ef20
 	0018f108 memread4 ax
 	0018f110 push ax
 	0018f118 mov ax,0x1f
 	0018f124 pop bx
 	0018f12c cmpeq bx,ax
 	0018f138 mov ax,bx
 	0018f144 jz 0x0018f20c
		0018f20c: CONDITIONAL_JUMP
		0018f14c: FALL_THROUGH

	[0018f14c]
		0018f0f4: FALL_THROUGH
 	0018f14c push op
 	0018f154 mov ax,0x426
 	0018f160 farpush ax
 	0018f168 mov ax,0x397
 	0018f174 farpush ax
 	0018f17c mov ax,0x0
 	0018f188 farpush ax
 	0018f190 mov ax,0x3
 	0018f19c farpush ax
 	0018f1a4 mov ax,0x14
 	0018f1b0 farpush ax
 	0018f1b8 mov mar,0xb76f20
 	0018f1c4 mov ax,mar
 	0018f1d0 mov op,ax
 	0018f1d8 setfuncargs 0x5
 	0018f1e0 mov ax,0x536f20
 	0018f1ec farcall ax
 	0018f1f4 farsubsp 0x5
 	0018f1fc pop op
 	0018f204 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018f20c]
		0018f0f4: CONDITIONAL_JUMP
 	0018f20c sourceline 0x1b1e
 	0018f214 mov mar,0xb7ef20
 	0018f220 memread4 ax
 	0018f228 push ax
 	0018f230 mov ax,0x20
 	0018f23c pop bx
 	0018f244 cmpeq bx,ax
 	0018f250 mov ax,bx
 	0018f25c jz 0x0018f324
		0018f324: CONDITIONAL_JUMP
		0018f264: FALL_THROUGH

	[0018f264]
		0018f20c: FALL_THROUGH
 	0018f264 push op
 	0018f26c mov ax,0x426
 	0018f278 farpush ax
 	0018f280 mov ax,0x397
 	0018f28c farpush ax
 	0018f294 mov ax,0x0
 	0018f2a0 farpush ax
 	0018f2a8 mov ax,0x3
 	0018f2b4 farpush ax
 	0018f2bc mov ax,0x13
 	0018f2c8 farpush ax
 	0018f2d0 mov mar,0xb76f20
 	0018f2dc mov ax,mar
 	0018f2e8 mov op,ax
 	0018f2f0 setfuncargs 0x5
 	0018f2f8 mov ax,0x536f20
 	0018f304 farcall ax
 	0018f30c farsubsp 0x5
 	0018f314 pop op
 	0018f31c jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018f324]
		0018f20c: CONDITIONAL_JUMP
 	0018f324 sourceline 0x1b1f
 	0018f32c mov mar,0xb7ef20
 	0018f338 memread4 ax
 	0018f340 push ax
 	0018f348 mov ax,0x21
 	0018f354 pop bx
 	0018f35c cmpeq bx,ax
 	0018f368 mov ax,bx
 	0018f374 jz 0x0018f43c
		0018f43c: CONDITIONAL_JUMP
		0018f37c: FALL_THROUGH

	[0018f37c]
		0018f324: FALL_THROUGH
 	0018f37c push op
 	0018f384 mov ax,0x426
 	0018f390 farpush ax
 	0018f398 mov ax,0x397
 	0018f3a4 farpush ax
 	0018f3ac mov ax,0x0
 	0018f3b8 farpush ax
 	0018f3c0 mov ax,0x3
 	0018f3cc farpush ax
 	0018f3d4 mov ax,0x12
 	0018f3e0 farpush ax
 	0018f3e8 mov mar,0xb76f20
 	0018f3f4 mov ax,mar
 	0018f400 mov op,ax
 	0018f408 setfuncargs 0x5
 	0018f410 mov ax,0x536f20
 	0018f41c farcall ax
 	0018f424 farsubsp 0x5
 	0018f42c pop op
 	0018f434 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018f43c]
		0018f324: CONDITIONAL_JUMP
 	0018f43c sourceline 0x1b20
 	0018f444 mov mar,0xb7ef20
 	0018f450 memread4 ax
 	0018f458 push ax
 	0018f460 mov ax,0x22
 	0018f46c pop bx
 	0018f474 cmpeq bx,ax
 	0018f480 mov ax,bx
 	0018f48c jz 0x0018f554
		0018f554: CONDITIONAL_JUMP
		0018f494: FALL_THROUGH

	[0018f494]
		0018f43c: FALL_THROUGH
 	0018f494 push op
 	0018f49c mov ax,0x426
 	0018f4a8 farpush ax
 	0018f4b0 mov ax,0x397
 	0018f4bc farpush ax
 	0018f4c4 mov ax,0x0
 	0018f4d0 farpush ax
 	0018f4d8 mov ax,0x3
 	0018f4e4 farpush ax
 	0018f4ec mov ax,0x11
 	0018f4f8 farpush ax
 	0018f500 mov mar,0xb76f20
 	0018f50c mov ax,mar
 	0018f518 mov op,ax
 	0018f520 setfuncargs 0x5
 	0018f528 mov ax,0x536f20
 	0018f534 farcall ax
 	0018f53c farsubsp 0x5
 	0018f544 pop op
 	0018f54c jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018f554]
		0018f43c: CONDITIONAL_JUMP
 	0018f554 sourceline 0x1b21
 	0018f55c mov mar,0xb7ef20
 	0018f568 memread4 ax
 	0018f570 push ax
 	0018f578 mov ax,0x23
 	0018f584 pop bx
 	0018f58c cmpeq bx,ax
 	0018f598 mov ax,bx
 	0018f5a4 jz 0x0018f66c
		0018f66c: CONDITIONAL_JUMP
		0018f5ac: FALL_THROUGH

	[0018f5ac]
		0018f554: FALL_THROUGH
 	0018f5ac push op
 	0018f5b4 mov ax,0x426
 	0018f5c0 farpush ax
 	0018f5c8 mov ax,0x397
 	0018f5d4 farpush ax
 	0018f5dc mov ax,0x0
 	0018f5e8 farpush ax
 	0018f5f0 mov ax,0x3
 	0018f5fc farpush ax
 	0018f604 mov ax,0x10
 	0018f610 farpush ax
 	0018f618 mov mar,0xb76f20
 	0018f624 mov ax,mar
 	0018f630 mov op,ax
 	0018f638 setfuncargs 0x5
 	0018f640 mov ax,0x536f20
 	0018f64c farcall ax
 	0018f654 farsubsp 0x5
 	0018f65c pop op
 	0018f664 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018f66c]
		0018f554: CONDITIONAL_JUMP
 	0018f66c sourceline 0x1b22
 	0018f674 mov mar,0xb7ef20
 	0018f680 memread4 ax
 	0018f688 push ax
 	0018f690 mov ax,0x24
 	0018f69c pop bx
 	0018f6a4 cmpeq bx,ax
 	0018f6b0 mov ax,bx
 	0018f6bc jz 0x0018f784
		0018f784: CONDITIONAL_JUMP
		0018f6c4: FALL_THROUGH

	[0018f6c4]
		0018f66c: FALL_THROUGH
 	0018f6c4 push op
 	0018f6cc mov ax,0x426
 	0018f6d8 farpush ax
 	0018f6e0 mov ax,0x397
 	0018f6ec farpush ax
 	0018f6f4 mov ax,0x0
 	0018f700 farpush ax
 	0018f708 mov ax,0x3
 	0018f714 farpush ax
 	0018f71c mov ax,0xf
 	0018f728 farpush ax
 	0018f730 mov mar,0xb76f20
 	0018f73c mov ax,mar
 	0018f748 mov op,ax
 	0018f750 setfuncargs 0x5
 	0018f758 mov ax,0x536f20
 	0018f764 farcall ax
 	0018f76c farsubsp 0x5
 	0018f774 pop op
 	0018f77c jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018f784]
		0018f66c: CONDITIONAL_JUMP
 	0018f784 sourceline 0x1b23
 	0018f78c mov mar,0xb7ef20
 	0018f798 memread4 ax
 	0018f7a0 push ax
 	0018f7a8 mov ax,0x25
 	0018f7b4 pop bx
 	0018f7bc cmpeq bx,ax
 	0018f7c8 mov ax,bx
 	0018f7d4 jz 0x0018f89c
		0018f89c: CONDITIONAL_JUMP
		0018f7dc: FALL_THROUGH

	[0018f7dc]
		0018f784: FALL_THROUGH
 	0018f7dc push op
 	0018f7e4 mov ax,0x426
 	0018f7f0 farpush ax
 	0018f7f8 mov ax,0x397
 	0018f804 farpush ax
 	0018f80c mov ax,0x0
 	0018f818 farpush ax
 	0018f820 mov ax,0x3
 	0018f82c farpush ax
 	0018f834 mov ax,0xe
 	0018f840 farpush ax
 	0018f848 mov mar,0xb76f20
 	0018f854 mov ax,mar
 	0018f860 mov op,ax
 	0018f868 setfuncargs 0x5
 	0018f870 mov ax,0x536f20
 	0018f87c farcall ax
 	0018f884 farsubsp 0x5
 	0018f88c pop op
 	0018f894 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018f89c]
		0018f784: CONDITIONAL_JUMP
 	0018f89c sourceline 0x1b24
 	0018f8a4 mov mar,0xb7ef20
 	0018f8b0 memread4 ax
 	0018f8b8 push ax
 	0018f8c0 mov ax,0x26
 	0018f8cc pop bx
 	0018f8d4 cmpeq bx,ax
 	0018f8e0 mov ax,bx
 	0018f8ec jz 0x0018f9b4
		0018f9b4: CONDITIONAL_JUMP
		0018f8f4: FALL_THROUGH

	[0018f8f4]
		0018f89c: FALL_THROUGH
 	0018f8f4 push op
 	0018f8fc mov ax,0x426
 	0018f908 farpush ax
 	0018f910 mov ax,0x397
 	0018f91c farpush ax
 	0018f924 mov ax,0x0
 	0018f930 farpush ax
 	0018f938 mov ax,0x3
 	0018f944 farpush ax
 	0018f94c mov ax,0xd
 	0018f958 farpush ax
 	0018f960 mov mar,0xb76f20
 	0018f96c mov ax,mar
 	0018f978 mov op,ax
 	0018f980 setfuncargs 0x5
 	0018f988 mov ax,0x536f20
 	0018f994 farcall ax
 	0018f99c farsubsp 0x5
 	0018f9a4 pop op
 	0018f9ac jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018f9b4]
		0018f89c: CONDITIONAL_JUMP
 	0018f9b4 sourceline 0x1b25
 	0018f9bc mov mar,0xb7ef20
 	0018f9c8 memread4 ax
 	0018f9d0 push ax
 	0018f9d8 mov ax,0x27
 	0018f9e4 pop bx
 	0018f9ec cmpeq bx,ax
 	0018f9f8 mov ax,bx
 	0018fa04 jz 0x0018facc
		0018facc: CONDITIONAL_JUMP
		0018fa0c: FALL_THROUGH

	[0018fa0c]
		0018f9b4: FALL_THROUGH
 	0018fa0c push op
 	0018fa14 mov ax,0x426
 	0018fa20 farpush ax
 	0018fa28 mov ax,0x397
 	0018fa34 farpush ax
 	0018fa3c mov ax,0x0
 	0018fa48 farpush ax
 	0018fa50 mov ax,0x3
 	0018fa5c farpush ax
 	0018fa64 mov ax,0xc
 	0018fa70 farpush ax
 	0018fa78 mov mar,0xb76f20
 	0018fa84 mov ax,mar
 	0018fa90 mov op,ax
 	0018fa98 setfuncargs 0x5
 	0018faa0 mov ax,0x536f20
 	0018faac farcall ax
 	0018fab4 farsubsp 0x5
 	0018fabc pop op
 	0018fac4 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018facc]
		0018f9b4: CONDITIONAL_JUMP
 	0018facc sourceline 0x1b26
 	0018fad4 mov mar,0xb7ef20
 	0018fae0 memread4 ax
 	0018fae8 push ax
 	0018faf0 mov ax,0x28
 	0018fafc pop bx
 	0018fb04 cmpeq bx,ax
 	0018fb10 mov ax,bx
 	0018fb1c jz 0x0018fbe4
		0018fbe4: CONDITIONAL_JUMP
		0018fb24: FALL_THROUGH

	[0018fb24]
		0018facc: FALL_THROUGH
 	0018fb24 push op
 	0018fb2c mov ax,0x426
 	0018fb38 farpush ax
 	0018fb40 mov ax,0x397
 	0018fb4c farpush ax
 	0018fb54 mov ax,0x0
 	0018fb60 farpush ax
 	0018fb68 mov ax,0x3
 	0018fb74 farpush ax
 	0018fb7c mov ax,0xb
 	0018fb88 farpush ax
 	0018fb90 mov mar,0xb76f20
 	0018fb9c mov ax,mar
 	0018fba8 mov op,ax
 	0018fbb0 setfuncargs 0x5
 	0018fbb8 mov ax,0x536f20
 	0018fbc4 farcall ax
 	0018fbcc farsubsp 0x5
 	0018fbd4 pop op
 	0018fbdc jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018fbe4]
		0018facc: CONDITIONAL_JUMP
 	0018fbe4 sourceline 0x1b27
 	0018fbec mov mar,0xb7ef20
 	0018fbf8 memread4 ax
 	0018fc00 push ax
 	0018fc08 mov ax,0x29
 	0018fc14 pop bx
 	0018fc1c cmpeq bx,ax
 	0018fc28 mov ax,bx
 	0018fc34 jz 0x0018fcfc
		0018fcfc: CONDITIONAL_JUMP
		0018fc3c: FALL_THROUGH

	[0018fc3c]
		0018fbe4: FALL_THROUGH
 	0018fc3c push op
 	0018fc44 mov ax,0x426
 	0018fc50 farpush ax
 	0018fc58 mov ax,0x397
 	0018fc64 farpush ax
 	0018fc6c mov ax,0x0
 	0018fc78 farpush ax
 	0018fc80 mov ax,0x3
 	0018fc8c farpush ax
 	0018fc94 mov ax,0xa
 	0018fca0 farpush ax
 	0018fca8 mov mar,0xb76f20
 	0018fcb4 mov ax,mar
 	0018fcc0 mov op,ax
 	0018fcc8 setfuncargs 0x5
 	0018fcd0 mov ax,0x536f20
 	0018fcdc farcall ax
 	0018fce4 farsubsp 0x5
 	0018fcec pop op
 	0018fcf4 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018fcfc]
		0018fbe4: CONDITIONAL_JUMP
 	0018fcfc sourceline 0x1b28
 	0018fd04 mov mar,0xb7ef20
 	0018fd10 memread4 ax
 	0018fd18 push ax
 	0018fd20 mov ax,0x2a
 	0018fd2c pop bx
 	0018fd34 cmpeq bx,ax
 	0018fd40 mov ax,bx
 	0018fd4c jz 0x0018fe14
		0018fe14: CONDITIONAL_JUMP
		0018fd54: FALL_THROUGH

	[0018fd54]
		0018fcfc: FALL_THROUGH
 	0018fd54 push op
 	0018fd5c mov ax,0x426
 	0018fd68 farpush ax
 	0018fd70 mov ax,0x397
 	0018fd7c farpush ax
 	0018fd84 mov ax,0x0
 	0018fd90 farpush ax
 	0018fd98 mov ax,0x3
 	0018fda4 farpush ax
 	0018fdac mov ax,0x9
 	0018fdb8 farpush ax
 	0018fdc0 mov mar,0xb76f20
 	0018fdcc mov ax,mar
 	0018fdd8 mov op,ax
 	0018fde0 setfuncargs 0x5
 	0018fde8 mov ax,0x536f20
 	0018fdf4 farcall ax
 	0018fdfc farsubsp 0x5
 	0018fe04 pop op
 	0018fe0c jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018fe14]
		0018fcfc: CONDITIONAL_JUMP
 	0018fe14 sourceline 0x1b29
 	0018fe1c mov mar,0xb7ef20
 	0018fe28 memread4 ax
 	0018fe30 push ax
 	0018fe38 mov ax,0x2b
 	0018fe44 pop bx
 	0018fe4c cmpeq bx,ax
 	0018fe58 mov ax,bx
 	0018fe64 jz 0x0018ff2c
		0018ff2c: CONDITIONAL_JUMP
		0018fe6c: FALL_THROUGH

	[0018fe6c]
		0018fe14: FALL_THROUGH
 	0018fe6c push op
 	0018fe74 mov ax,0x426
 	0018fe80 farpush ax
 	0018fe88 mov ax,0x397
 	0018fe94 farpush ax
 	0018fe9c mov ax,0x0
 	0018fea8 farpush ax
 	0018feb0 mov ax,0x3
 	0018febc farpush ax
 	0018fec4 mov ax,0x8
 	0018fed0 farpush ax
 	0018fed8 mov mar,0xb76f20
 	0018fee4 mov ax,mar
 	0018fef0 mov op,ax
 	0018fef8 setfuncargs 0x5
 	0018ff00 mov ax,0x536f20
 	0018ff0c farcall ax
 	0018ff14 farsubsp 0x5
 	0018ff1c pop op
 	0018ff24 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0018ff2c]
		0018fe14: CONDITIONAL_JUMP
 	0018ff2c sourceline 0x1b2a
 	0018ff34 mov mar,0xb7ef20
 	0018ff40 memread4 ax
 	0018ff48 push ax
 	0018ff50 mov ax,0x2c
 	0018ff5c pop bx
 	0018ff64 cmpeq bx,ax
 	0018ff70 mov ax,bx
 	0018ff7c jz 0x00190044
		00190044: CONDITIONAL_JUMP
		0018ff84: FALL_THROUGH

	[0018ff84]
		0018ff2c: FALL_THROUGH
 	0018ff84 push op
 	0018ff8c mov ax,0x426
 	0018ff98 farpush ax
 	0018ffa0 mov ax,0x397
 	0018ffac farpush ax
 	0018ffb4 mov ax,0x0
 	0018ffc0 farpush ax
 	0018ffc8 mov ax,0x3
 	0018ffd4 farpush ax
 	0018ffdc mov ax,0x7
 	0018ffe8 farpush ax
 	0018fff0 mov mar,0xb76f20
 	0018fffc mov ax,mar
 	00190008 mov op,ax
 	00190010 setfuncargs 0x5
 	00190018 mov ax,0x536f20
 	00190024 farcall ax
 	0019002c farsubsp 0x5
 	00190034 pop op
 	0019003c jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[00190044]
		0018ff2c: CONDITIONAL_JUMP
 	00190044 sourceline 0x1b2b
 	0019004c mov mar,0xb7ef20
 	00190058 memread4 ax
 	00190060 push ax
 	00190068 mov ax,0x2d
 	00190074 pop bx
 	0019007c cmpeq bx,ax
 	00190088 mov ax,bx
 	00190094 jz 0x0019015c
		0019015c: CONDITIONAL_JUMP
		0019009c: FALL_THROUGH

	[0019009c]
		00190044: FALL_THROUGH
 	0019009c push op
 	001900a4 mov ax,0x426
 	001900b0 farpush ax
 	001900b8 mov ax,0x397
 	001900c4 farpush ax
 	001900cc mov ax,0x0
 	001900d8 farpush ax
 	001900e0 mov ax,0x3
 	001900ec farpush ax
 	001900f4 mov ax,0x6
 	00190100 farpush ax
 	00190108 mov mar,0xb76f20
 	00190114 mov ax,mar
 	00190120 mov op,ax
 	00190128 setfuncargs 0x5
 	00190130 mov ax,0x536f20
 	0019013c farcall ax
 	00190144 farsubsp 0x5
 	0019014c pop op
 	00190154 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0019015c]
		00190044: CONDITIONAL_JUMP
 	0019015c sourceline 0x1b2c
 	00190164 mov mar,0xb7ef20
 	00190170 memread4 ax
 	00190178 push ax
 	00190180 mov ax,0x2e
 	0019018c pop bx
 	00190194 cmpeq bx,ax
 	001901a0 mov ax,bx
 	001901ac jz 0x00190274
		00190274: CONDITIONAL_JUMP
		001901b4: FALL_THROUGH

	[001901b4]
		0019015c: FALL_THROUGH
 	001901b4 push op
 	001901bc mov ax,0x426
 	001901c8 farpush ax
 	001901d0 mov ax,0x397
 	001901dc farpush ax
 	001901e4 mov ax,0x0
 	001901f0 farpush ax
 	001901f8 mov ax,0x3
 	00190204 farpush ax
 	0019020c mov ax,0x5
 	00190218 farpush ax
 	00190220 mov mar,0xb76f20
 	0019022c mov ax,mar
 	00190238 mov op,ax
 	00190240 setfuncargs 0x5
 	00190248 mov ax,0x536f20
 	00190254 farcall ax
 	0019025c farsubsp 0x5
 	00190264 pop op
 	0019026c jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[00190274]
		0019015c: CONDITIONAL_JUMP
 	00190274 sourceline 0x1b2d
 	0019027c mov mar,0xb7ef20
 	00190288 memread4 ax
 	00190290 push ax
 	00190298 mov ax,0x2f
 	001902a4 pop bx
 	001902ac cmpeq bx,ax
 	001902b8 mov ax,bx
 	001902c4 jz 0x0019038c
		0019038c: CONDITIONAL_JUMP
		001902cc: FALL_THROUGH

	[001902cc]
		00190274: FALL_THROUGH
 	001902cc push op
 	001902d4 mov ax,0x426
 	001902e0 farpush ax
 	001902e8 mov ax,0x397
 	001902f4 farpush ax
 	001902fc mov ax,0x0
 	00190308 farpush ax
 	00190310 mov ax,0x3
 	0019031c farpush ax
 	00190324 mov ax,0x4
 	00190330 farpush ax
 	00190338 mov mar,0xb76f20
 	00190344 mov ax,mar
 	00190350 mov op,ax
 	00190358 setfuncargs 0x5
 	00190360 mov ax,0x536f20
 	0019036c farcall ax
 	00190374 farsubsp 0x5
 	0019037c pop op
 	00190384 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[0019038c]
		00190274: CONDITIONAL_JUMP
 	0019038c sourceline 0x1b2e
 	00190394 mov mar,0xb7ef20
 	001903a0 memread4 ax
 	001903a8 push ax
 	001903b0 mov ax,0x30
 	001903bc pop bx
 	001903c4 cmpeq bx,ax
 	001903d0 mov ax,bx
 	001903dc jz 0x001904a4
		001904a4: CONDITIONAL_JUMP
		001903e4: FALL_THROUGH

	[001903e4]
		0019038c: FALL_THROUGH
 	001903e4 push op
 	001903ec mov ax,0x426
 	001903f8 farpush ax
 	00190400 mov ax,0x397
 	0019040c farpush ax
 	00190414 mov ax,0x0
 	00190420 farpush ax
 	00190428 mov ax,0x3
 	00190434 farpush ax
 	0019043c mov ax,0x3
 	00190448 farpush ax
 	00190450 mov mar,0xb76f20
 	0019045c mov ax,mar
 	00190468 mov op,ax
 	00190470 setfuncargs 0x5
 	00190478 mov ax,0x536f20
 	00190484 farcall ax
 	0019048c farsubsp 0x5
 	00190494 pop op
 	0019049c jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[001904a4]
		0019038c: CONDITIONAL_JUMP
 	001904a4 sourceline 0x1b2f
 	001904ac mov mar,0xb7ef20
 	001904b8 memread4 ax
 	001904c0 push ax
 	001904c8 mov ax,0x31
 	001904d4 pop bx
 	001904dc cmpeq bx,ax
 	001904e8 mov ax,bx
 	001904f4 jz 0x001905bc
		001905bc: CONDITIONAL_JUMP
		001904fc: FALL_THROUGH

	[001904fc]
		001904a4: FALL_THROUGH
 	001904fc push op
 	00190504 mov ax,0x426
 	00190510 farpush ax
 	00190518 mov ax,0x397
 	00190524 farpush ax
 	0019052c mov ax,0x0
 	00190538 farpush ax
 	00190540 mov ax,0x3
 	0019054c farpush ax
 	00190554 mov ax,0x2
 	00190560 farpush ax
 	00190568 mov mar,0xb76f20
 	00190574 mov ax,mar
 	00190580 mov op,ax
 	00190588 setfuncargs 0x5
 	00190590 mov ax,0x536f20
 	0019059c farcall ax
 	001905a4 farsubsp 0x5
 	001905ac pop op
 	001905b4 jmp 0x001906cc
		001906cc: UNCONDITIONAL_JUMP

	[001905bc]
		001904a4: CONDITIONAL_JUMP
 	001905bc sourceline 0x1b30
 	001905c4 mov mar,0xb7ef20
 	001905d0 memread4 ax
 	001905d8 push ax
 	001905e0 mov ax,0x32
 	001905ec pop bx
 	001905f4 cmpeq bx,ax
 	00190600 mov ax,bx
 	0019060c jz 0x001906cc
		001906cc: CONDITIONAL_JUMP
		00190614: FALL_THROUGH

	[00190614]
		001905bc: FALL_THROUGH
 	00190614 push op
 	0019061c mov ax,0x426
 	00190628 farpush ax
 	00190630 mov ax,0x397
 	0019063c farpush ax
 	00190644 mov ax,0x0
 	00190650 farpush ax
 	00190658 mov ax,0x3
 	00190664 farpush ax
 	0019066c mov ax,0x1
 	00190678 farpush ax
 	00190680 mov mar,0xb76f20
 	0019068c mov ax,mar
 	00190698 mov op,ax
 	001906a0 setfuncargs 0x5
 	001906a8 mov ax,0x536f20
 	001906b4 farcall ax
 	001906bc farsubsp 0x5
 	001906c4 pop op
		001906cc: FALL_THROUGH

	[001906cc]
		0018ebbc: UNCONDITIONAL_JUMP
		0018ecec: UNCONDITIONAL_JUMP
		0018ee04: UNCONDITIONAL_JUMP
		0018ef1c: UNCONDITIONAL_JUMP
		0018f034: UNCONDITIONAL_JUMP
		0018f14c: UNCONDITIONAL_JUMP
		0018f264: UNCONDITIONAL_JUMP
		0018f37c: UNCONDITIONAL_JUMP
		0018f494: UNCONDITIONAL_JUMP
		0018f5ac: UNCONDITIONAL_JUMP
		0018f6c4: UNCONDITIONAL_JUMP
		0018f7dc: UNCONDITIONAL_JUMP
		0018f8f4: UNCONDITIONAL_JUMP
		0018fa0c: UNCONDITIONAL_JUMP
		0018fb24: UNCONDITIONAL_JUMP
		0018fc3c: UNCONDITIONAL_JUMP
		0018fd54: UNCONDITIONAL_JUMP
		0018fe6c: UNCONDITIONAL_JUMP
		0018ff84: UNCONDITIONAL_JUMP
		0019009c: UNCONDITIONAL_JUMP
		001901b4: UNCONDITIONAL_JUMP
		001902cc: UNCONDITIONAL_JUMP
		001903e4: UNCONDITIONAL_JUMP
		001904fc: UNCONDITIONAL_JUMP
		001905bc: CONDITIONAL_JUMP
		00190614: FALL_THROUGH
 	001906cc sourceline 0x1b32
 	001906d4 push op
 	001906dc mov ax,0x68
 	001906e8 farpush ax
 	001906f0 mov mar,0xb76f20
 	001906fc mov ax,mar
 	00190708 mov op,ax
 	00190710 setfuncargs 0x1
 	00190718 mov ax,0x51ef20
 	00190724 farcall ax
 	0019072c farsubsp 0x1
 	00190734 pop op
 	0019073c sourceline 0x1b33
 	00190744 mov mar,0xb76f20
 	00190750 mov ax,mar
 	0019075c push op
 	00190764 mov op,ax
 	0019076c setfuncargs 0x0
 	00190774 mov ax,0x78ef20
 	00190780 farcall ax
 	00190788 pop op
 	00190790 push ax
 	00190798 mov ax,0x3
 	001907a4 pop bx
 	001907ac add bx,ax
 	001907b8 mov ax,bx
 	001907c4 mov bx,ax
 	001907d0 mov mar,0xb76f20
 	001907dc mov ax,mar
 	001907e8 push op
 	001907f0 mov op,ax
 	001907f8 farpush bx
 	00190800 setfuncargs 0x1
 	00190808 mov ax,0x526f20
 	00190814 farcall ax
 	0019081c farsubsp 0x1
 	00190824 pop op
 	0019082c sourceline 0x1b34
 	00190834 mov mar,0xb76f20
 	00190840 mov ax,mar
 	0019084c push op
 	00190854 mov op,ax
 	0019085c setfuncargs 0x0
 	00190864 mov ax,0xb36f20
 	00190870 farcall ax
 	00190878 pop op
 	00190880 push ax
 	00190888 mov ax,0x4
 	00190894 pop bx
 	0019089c add bx,ax
 	001908a8 mov ax,bx
 	001908b4 mov bx,ax
 	001908c0 mov mar,0xb76f20
 	001908cc mov ax,mar
 	001908d8 push op
 	001908e0 mov op,ax
 	001908e8 farpush bx
 	001908f0 setfuncargs 0x1
 	001908f8 mov ax,0x70ef20
 	00190904 farcall ax
 	0019090c farsubsp 0x1
 	00190914 pop op
 	0019091c sourceline 0x1b35
 	00190924 push op
 	0019092c mov ax,0x426
 	00190938 farpush ax
 	00190940 mov ax,0x398
 	0019094c farpush ax
 	00190954 mov ax,0x0
 	00190960 farpush ax
 	00190968 mov ax,0x3
 	00190974 farpush ax
 	0019097c mov ax,0x0
 	00190988 farpush ax
 	00190990 mov mar,0xb76f20
 	0019099c mov ax,mar
 	001909a8 mov op,ax
 	001909b0 setfuncargs 0x5
 	001909b8 mov ax,0x536f20
 	001909c4 farcall ax
 	001909cc farsubsp 0x5
 	001909d4 pop op
 	001909dc sourceline 0x1b36
 	001909e4 mov ax,0x3
 	001909f0 mov bx,ax
 	001909fc mov mar,0x3cef20
 	00190a08 mov ax,mar
 	00190a14 push op
 	00190a1c mov op,ax
 	00190a24 farpush bx
 	00190a2c setfuncargs 0x1
 	00190a34 mov ax,0x69ef20
 	00190a40 farcall ax
 	00190a48 farsubsp 0x1
 	00190a50 pop op
 	00190a58 sourceline 0x1b37
 	00190a60 push op
 	00190a68 mov ax,0xda
 	00190a74 farpush ax
 	00190a7c mov mar,0x3cef20
 	00190a88 mov ax,mar
 	00190a94 mov op,ax
 	00190a9c setfuncargs 0x1
 	00190aa4 mov ax,0x51ef20
 	00190ab0 farcall ax
 	00190ab8 farsubsp 0x1
 	00190ac0 pop op
 	00190ac8 sourceline 0x1b38
 	00190ad0 mov mar,0x3cef20
 	00190adc mov ax,mar
 	00190ae8 push op
 	00190af0 mov op,ax
 	00190af8 setfuncargs 0x0
 	00190b00 mov ax,0x78ef20
 	00190b0c farcall ax
 	00190b14 pop op
 	00190b1c mov mar,sp
 	00190b28 memwrite4 ax
 	00190b30 add sp,0x4
 	00190b3c stackptr 0x4
 	00190b44 memread4 ax
 	00190b4c push ax
 	00190b54 mov ax,0x8
 	00190b60 pop bx
 	00190b68 sub bx,ax
 	00190b74 mov ax,bx
 	00190b80 mov bx,ax
 	00190b8c mov mar,0x3cef20
 	00190b98 mov ax,mar
 	00190ba4 push op
 	00190bac mov op,ax
 	00190bb4 farpush bx
 	00190bbc setfuncargs 0x1
 	00190bc4 mov ax,0x526f20
 	00190bd0 farcall ax
 	00190bd8 farsubsp 0x1
 	00190be0 pop op
 	00190be8 sourceline 0x1b39
 	00190bf0 mov mar,0x3cef20
 	00190bfc mov ax,mar
 	00190c08 push op
 	00190c10 mov op,ax
 	00190c18 setfuncargs 0x0
 	00190c20 mov ax,0xb36f20
 	00190c2c farcall ax
 	00190c34 pop op
 	00190c3c mov mar,sp
 	00190c48 memwrite4 ax
 	00190c50 add sp,0x4
 	00190c5c stackptr 0x4
 	00190c64 memread4 ax
 	00190c6c push ax
 	00190c74 mov ax,0x8
 	00190c80 pop bx
 	00190c88 sub bx,ax
 	00190c94 mov ax,bx
 	00190ca0 mov bx,ax
 	00190cac mov mar,0x3cef20
 	00190cb8 mov ax,mar
 	00190cc4 push op
 	00190ccc mov op,ax
 	00190cd4 farpush bx
 	00190cdc setfuncargs 0x1
 	00190ce4 mov ax,0x70ef20
 	00190cf0 farcall ax
 	00190cf8 farsubsp 0x1
 	00190d00 pop op
 	00190d08 sourceline 0x1b3a
 	00190d10 push op
 	00190d18 mov ax,0x426
 	00190d24 farpush ax
 	00190d2c mov ax,0x397
 	00190d38 farpush ax
 	00190d40 mov ax,0x0
 	00190d4c farpush ax
 	00190d54 mov ax,0x3
 	00190d60 farpush ax
 	00190d68 mov ax,0x0
 	00190d74 farpush ax
 	00190d7c mov mar,0x3cef20
 	00190d88 mov ax,mar
 	00190d94 mov op,ax
 	00190d9c setfuncargs 0x5
 	00190da4 mov ax,0x536f20
 	00190db0 farcall ax
 	00190db8 farsubsp 0x5
 	00190dc0 pop op
 	00190dc8 sourceline 0x1b3b
 	00190dd0 mov mar,0x3cef20
 	00190ddc mov ax,mar
 	00190de8 push op
 	00190df0 mov op,ax
 	00190df8 setfuncargs 0x0
 	00190e00 mov ax,0x89ef20
 	00190e0c farcall ax
 	00190e14 pop op
 	00190e1c push ax
 	00190e24 mov mar,0x9def20
 	00190e30 mov ax,mar
 	00190e3c pop bx
 	00190e44 cmpeq bx,ax
 	00190e50 mov ax,bx
 	00190e5c jnz 0x00190f18
		00190f18: CONDITIONAL_JUMP
		00190e64: FALL_THROUGH

	[00190e64]
		001906cc: FALL_THROUGH
 	00190e64 push ax
 	00190e6c mov mar,0x3cef20
 	00190e78 mov ax,mar
 	00190e84 push op
 	00190e8c mov op,ax
 	00190e94 setfuncargs 0x0
 	00190e9c mov ax,0x89ef20
 	00190ea8 farcall ax
 	00190eb0 pop op
 	00190eb8 push ax
 	00190ec0 mov mar,0x8fef20
 	00190ecc mov ax,mar
 	00190ed8 pop bx
 	00190ee0 cmpeq bx,ax
 	00190eec mov ax,bx
 	00190ef8 pop bx
 	00190f00 lor bx,ax
 	00190f0c mov ax,bx
		00190f18: FALL_THROUGH

	[00190f18]
		001906cc: CONDITIONAL_JUMP
		00190e64: FALL_THROUGH
 	00190f18 jnz 0x00190fd4
		00190fd4: CONDITIONAL_JUMP
		00190f20: FALL_THROUGH

	[00190f20]
		00190f18: FALL_THROUGH
 	00190f20 push ax
 	00190f28 mov mar,0x3cef20
 	00190f34 mov ax,mar
 	00190f40 push op
 	00190f48 mov op,ax
 	00190f50 setfuncargs 0x0
 	00190f58 mov ax,0x89ef20
 	00190f64 farcall ax
 	00190f6c pop op
 	00190f74 push ax
 	00190f7c mov mar,0x846f20
 	00190f88 mov ax,mar
 	00190f94 pop bx
 	00190f9c cmpeq bx,ax
 	00190fa8 mov ax,bx
 	00190fb4 pop bx
 	00190fbc lor bx,ax
 	00190fc8 mov ax,bx
		00190fd4: FALL_THROUGH

	[00190fd4]
		00190f18: CONDITIONAL_JUMP
		00190f20: FALL_THROUGH
 	00190fd4 jz 0x00191148
		00191148: CONDITIONAL_JUMP
		00190fdc: FALL_THROUGH

	[00190fdc]
		00190fd4: FALL_THROUGH
 	00190fdc sourceline 0x1b3d
 	00190fe4 push op
 	00190fec mov ax,0x2c19c2
 	00190ff8 farpush ax
 	00191000 mov mar,0x3cef20
 	0019100c mov ax,mar
 	00191018 mov op,ax
 	00191020 setfuncargs 0x1
 	00191028 mov ax,0x6f6f20
 	00191034 farcall ax
 	0019103c farsubsp 0x1
 	00191044 pop op
 	0019104c sourceline 0x1b3e
 	00191054 push op
 	0019105c mov ax,0x2c17cd
 	00191068 farpush ax
 	00191070 mov mar,0xb76f20
 	0019107c mov ax,mar
 	00191088 mov op,ax
 	00191090 setfuncargs 0x1
 	00191098 mov ax,0x6f6f20
 	001910a4 farcall ax
 	001910ac farsubsp 0x1
 	001910b4 pop op
 	001910bc sourceline 0x1b3f
 	001910c4 mov ax,0x0
 	001910d0 mov bx,ax
 	001910dc mov mar,0x3cef20
 	001910e8 mov ax,mar
 	001910f4 push op
 	001910fc mov op,ax
 	00191104 farpush bx
 	0019110c setfuncargs 0x1
 	00191114 mov ax,0x436f20
 	00191120 farcall ax
 	00191128 farsubsp 0x1
 	00191130 pop op
 	00191138 sourceline 0x1b40
 	00191140 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00191148]
		00190fd4: CONDITIONAL_JUMP
 	00191148 sourceline 0x1b42
 	00191150 mov mar,0x3cef20
 	0019115c mov ax,mar
 	00191168 push op
 	00191170 mov op,ax
 	00191178 setfuncargs 0x0
 	00191180 mov ax,0x89ef20
 	0019118c farcall ax
 	00191194 pop op
 	0019119c push ax
 	001911a4 mov mar,0x8cef20
 	001911b0 mov ax,mar
 	001911bc pop bx
 	001911c4 cmpeq bx,ax
 	001911d0 mov ax,bx
 	001911dc jz 0x00191350
		00191350: CONDITIONAL_JUMP
		001911e4: FALL_THROUGH

	[001911e4]
		00191148: FALL_THROUGH
 	001911e4 sourceline 0x1b44
 	001911ec push op
 	001911f4 mov ax,0x2c17d7
 	00191200 farpush ax
 	00191208 mov mar,0x3cef20
 	00191214 mov ax,mar
 	00191220 mov op,ax
 	00191228 setfuncargs 0x1
 	00191230 mov ax,0x6f6f20
 	0019123c farcall ax
 	00191244 farsubsp 0x1
 	0019124c pop op
 	00191254 sourceline 0x1b45
 	0019125c push op
 	00191264 mov ax,0x2c1818
 	00191270 farpush ax
 	00191278 mov mar,0xb76f20
 	00191284 mov ax,mar
 	00191290 mov op,ax
 	00191298 setfuncargs 0x1
 	001912a0 mov ax,0x6f6f20
 	001912ac farcall ax
 	001912b4 farsubsp 0x1
 	001912bc pop op
 	001912c4 sourceline 0x1b46
 	001912cc mov ax,0x0
 	001912d8 mov bx,ax
 	001912e4 mov mar,0x3cef20
 	001912f0 mov ax,mar
 	001912fc push op
 	00191304 mov op,ax
 	0019130c farpush bx
 	00191314 setfuncargs 0x1
 	0019131c mov ax,0x436f20
 	00191328 farcall ax
 	00191330 farsubsp 0x1
 	00191338 pop op
 	00191340 sourceline 0x1b47
 	00191348 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00191350]
		00191148: CONDITIONAL_JUMP
 	00191350 sourceline 0x1b49
 	00191358 mov mar,0x3cef20
 	00191364 mov ax,mar
 	00191370 push op
 	00191378 mov op,ax
 	00191380 setfuncargs 0x0
 	00191388 mov ax,0x89ef20
 	00191394 farcall ax
 	0019139c pop op
 	001913a4 push ax
 	001913ac mov mar,0x8d6f20
 	001913b8 mov ax,mar
 	001913c4 pop bx
 	001913cc cmpeq bx,ax
 	001913d8 mov ax,bx
 	001913e4 jz 0x00191558
		00191558: CONDITIONAL_JUMP
		001913ec: FALL_THROUGH

	[001913ec]
		00191350: FALL_THROUGH
 	001913ec sourceline 0x1b4b
 	001913f4 push op
 	001913fc mov ax,0x2c1844
 	00191408 farpush ax
 	00191410 mov mar,0x3cef20
 	0019141c mov ax,mar
 	00191428 mov op,ax
 	00191430 setfuncargs 0x1
 	00191438 mov ax,0x6f6f20
 	00191444 farcall ax
 	0019144c farsubsp 0x1
 	00191454 pop op
 	0019145c sourceline 0x1b4c
 	00191464 push op
 	0019146c mov ax,0x2c187d
 	00191478 farpush ax
 	00191480 mov mar,0xb76f20
 	0019148c mov ax,mar
 	00191498 mov op,ax
 	001914a0 setfuncargs 0x1
 	001914a8 mov ax,0x6f6f20
 	001914b4 farcall ax
 	001914bc farsubsp 0x1
 	001914c4 pop op
 	001914cc sourceline 0x1b4d
 	001914d4 mov ax,0x0
 	001914e0 mov bx,ax
 	001914ec mov mar,0x3cef20
 	001914f8 mov ax,mar
 	00191504 push op
 	0019150c mov op,ax
 	00191514 farpush bx
 	0019151c setfuncargs 0x1
 	00191524 mov ax,0x436f20
 	00191530 farcall ax
 	00191538 farsubsp 0x1
 	00191540 pop op
 	00191548 sourceline 0x1b4e
 	00191550 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00191558]
		00191350: CONDITIONAL_JUMP
 	00191558 sourceline 0x1b50
 	00191560 mov mar,0x3cef20
 	0019156c mov ax,mar
 	00191578 push op
 	00191580 mov op,ax
 	00191588 setfuncargs 0x0
 	00191590 mov ax,0x89ef20
 	0019159c farcall ax
 	001915a4 pop op
 	001915ac push ax
 	001915b4 mov mar,0x8b6f20
 	001915c0 mov ax,mar
 	001915cc pop bx
 	001915d4 cmpeq bx,ax
 	001915e0 mov ax,bx
 	001915ec jz 0x00191840
		00191840: CONDITIONAL_JUMP
		001915f4: FALL_THROUGH

	[001915f4]
		00191558: FALL_THROUGH
 	001915f4 sourceline 0x1b52
 	001915fc push op
 	00191604 mov ax,0x2c19c2
 	00191610 farpush ax
 	00191618 mov mar,0x3cef20
 	00191624 mov ax,mar
 	00191630 mov op,ax
 	00191638 setfuncargs 0x1
 	00191640 mov ax,0x6f6f20
 	0019164c farcall ax
 	00191654 farsubsp 0x1
 	0019165c pop op
 	00191664 sourceline 0x1b53
 	0019166c push op
 	00191674 mov ax,0x2c18eb
 	00191680 farpush ax
 	00191688 mov mar,0xb76f20
 	00191694 mov ax,mar
 	001916a0 mov op,ax
 	001916a8 setfuncargs 0x1
 	001916b0 mov ax,0x6f6f20
 	001916bc farcall ax
 	001916c4 farsubsp 0x1
 	001916cc pop op
 	001916d4 sourceline 0x1b54
 	001916dc push op
 	001916e4 mov ax,0x2c192c
 	001916f0 farpush ax
 	001916f8 mov mar,0x3cef20
 	00191704 mov ax,mar
 	00191710 mov op,ax
 	00191718 setfuncargs 0x1
 	00191720 mov ax,0x6f6f20
 	0019172c farcall ax
 	00191734 farsubsp 0x1
 	0019173c pop op
 	00191744 sourceline 0x1b55
 	0019174c push op
 	00191754 mov ax,0x2c1949
 	00191760 farpush ax
 	00191768 mov mar,0xb76f20
 	00191774 mov ax,mar
 	00191780 mov op,ax
 	00191788 setfuncargs 0x1
 	00191790 mov ax,0x6f6f20
 	0019179c farcall ax
 	001917a4 farsubsp 0x1
 	001917ac pop op
 	001917b4 sourceline 0x1b56
 	001917bc mov ax,0x0
 	001917c8 mov bx,ax
 	001917d4 mov mar,0x3cef20
 	001917e0 mov ax,mar
 	001917ec push op
 	001917f4 mov op,ax
 	001917fc farpush bx
 	00191804 setfuncargs 0x1
 	0019180c mov ax,0x436f20
 	00191818 farcall ax
 	00191820 farsubsp 0x1
 	00191828 pop op
 	00191830 sourceline 0x1b57
 	00191838 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00191840]
		00191558: CONDITIONAL_JUMP
 	00191840 sourceline 0x1b59
 	00191848 mov mar,0x3cef20
 	00191854 mov ax,mar
 	00191860 push op
 	00191868 mov op,ax
 	00191870 setfuncargs 0x0
 	00191878 mov ax,0x89ef20
 	00191884 farcall ax
 	0019188c pop op
 	00191894 push ax
 	0019189c mov mar,0x98ef20
 	001918a8 mov ax,mar
 	001918b4 pop bx
 	001918bc cmpeq bx,ax
 	001918c8 mov ax,bx
 	001918d4 jz 0x00191a48
		00191a48: CONDITIONAL_JUMP
		001918dc: FALL_THROUGH

	[001918dc]
		00191840: FALL_THROUGH
 	001918dc sourceline 0x1b5b
 	001918e4 push op
 	001918ec mov ax,0x2c1966
 	001918f8 farpush ax
 	00191900 mov mar,0x3cef20
 	0019190c mov ax,mar
 	00191918 mov op,ax
 	00191920 setfuncargs 0x1
 	00191928 mov ax,0x6f6f20
 	00191934 farcall ax
 	0019193c farsubsp 0x1
 	00191944 pop op
 	0019194c sourceline 0x1b5c
 	00191954 push op
 	0019195c mov ax,0x2c1991
 	00191968 farpush ax
 	00191970 mov mar,0xb76f20
 	0019197c mov ax,mar
 	00191988 mov op,ax
 	00191990 setfuncargs 0x1
 	00191998 mov ax,0x6f6f20
 	001919a4 farcall ax
 	001919ac farsubsp 0x1
 	001919b4 pop op
 	001919bc sourceline 0x1b5d
 	001919c4 mov ax,0x0
 	001919d0 mov bx,ax
 	001919dc mov mar,0x3cef20
 	001919e8 mov ax,mar
 	001919f4 push op
 	001919fc mov op,ax
 	00191a04 farpush bx
 	00191a0c setfuncargs 0x1
 	00191a14 mov ax,0x436f20
 	00191a20 farcall ax
 	00191a28 farsubsp 0x1
 	00191a30 pop op
 	00191a38 sourceline 0x1b5e
 	00191a40 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00191a48]
		00191840: CONDITIONAL_JUMP
 	00191a48 sourceline 0x1b60
 	00191a50 mov mar,0x3cef20
 	00191a5c mov ax,mar
 	00191a68 push op
 	00191a70 mov op,ax
 	00191a78 setfuncargs 0x0
 	00191a80 mov ax,0x89ef20
 	00191a8c farcall ax
 	00191a94 pop op
 	00191a9c push ax
 	00191aa4 mov mar,0x8bef20
 	00191ab0 mov ax,mar
 	00191abc pop bx
 	00191ac4 cmpeq bx,ax
 	00191ad0 mov ax,bx
 	00191adc jz 0x00191c50
		00191c50: CONDITIONAL_JUMP
		00191ae4: FALL_THROUGH

	[00191ae4]
		00191a48: FALL_THROUGH
 	00191ae4 sourceline 0x1b62
 	00191aec push op
 	00191af4 mov ax,0x2c19c2
 	00191b00 farpush ax
 	00191b08 mov mar,0x3cef20
 	00191b14 mov ax,mar
 	00191b20 mov op,ax
 	00191b28 setfuncargs 0x1
 	00191b30 mov ax,0x6f6f20
 	00191b3c farcall ax
 	00191b44 farsubsp 0x1
 	00191b4c pop op
 	00191b54 sourceline 0x1b63
 	00191b5c push op
 	00191b64 mov ax,0x2c19ed
 	00191b70 farpush ax
 	00191b78 mov mar,0xb76f20
 	00191b84 mov ax,mar
 	00191b90 mov op,ax
 	00191b98 setfuncargs 0x1
 	00191ba0 mov ax,0x6f6f20
 	00191bac farcall ax
 	00191bb4 farsubsp 0x1
 	00191bbc pop op
 	00191bc4 sourceline 0x1b64
 	00191bcc mov ax,0x0
 	00191bd8 mov bx,ax
 	00191be4 mov mar,0x3cef20
 	00191bf0 mov ax,mar
 	00191bfc push op
 	00191c04 mov op,ax
 	00191c0c farpush bx
 	00191c14 setfuncargs 0x1
 	00191c1c mov ax,0x436f20
 	00191c28 farcall ax
 	00191c30 farsubsp 0x1
 	00191c38 pop op
 	00191c40 sourceline 0x1b65
 	00191c48 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00191c50]
		00191a48: CONDITIONAL_JUMP
 	00191c50 sourceline 0x1b67
 	00191c58 mov mar,0x3cef20
 	00191c64 mov ax,mar
 	00191c70 push op
 	00191c78 mov op,ax
 	00191c80 setfuncargs 0x0
 	00191c88 mov ax,0x89ef20
 	00191c94 farcall ax
 	00191c9c pop op
 	00191ca4 push ax
 	00191cac mov mar,0x8c6f20
 	00191cb8 mov ax,mar
 	00191cc4 pop bx
 	00191ccc cmpeq bx,ax
 	00191cd8 mov ax,bx
 	00191ce4 jz 0x00191f38
		00191f38: CONDITIONAL_JUMP
		00191cec: FALL_THROUGH

	[00191cec]
		00191c50: FALL_THROUGH
 	00191cec sourceline 0x1b69
 	00191cf4 push op
 	00191cfc mov ax,0x2c1a3c
 	00191d08 farpush ax
 	00191d10 mov mar,0x3cef20
 	00191d1c mov ax,mar
 	00191d28 mov op,ax
 	00191d30 setfuncargs 0x1
 	00191d38 mov ax,0x6f6f20
 	00191d44 farcall ax
 	00191d4c farsubsp 0x1
 	00191d54 pop op
 	00191d5c sourceline 0x1b6a
 	00191d64 push op
 	00191d6c mov ax,0x2c1a68
 	00191d78 farpush ax
 	00191d80 mov mar,0xb76f20
 	00191d8c mov ax,mar
 	00191d98 mov op,ax
 	00191da0 setfuncargs 0x1
 	00191da8 mov ax,0x6f6f20
 	00191db4 farcall ax
 	00191dbc farsubsp 0x1
 	00191dc4 pop op
 	00191dcc sourceline 0x1b6b
 	00191dd4 push op
 	00191ddc mov ax,0x2c1af0
 	00191de8 farpush ax
 	00191df0 mov mar,0x3cef20
 	00191dfc mov ax,mar
 	00191e08 mov op,ax
 	00191e10 setfuncargs 0x1
 	00191e18 mov ax,0x6f6f20
 	00191e24 farcall ax
 	00191e2c farsubsp 0x1
 	00191e34 pop op
 	00191e3c sourceline 0x1b6c
 	00191e44 push op
 	00191e4c mov ax,0x2c1b15
 	00191e58 farpush ax
 	00191e60 mov mar,0xb76f20
 	00191e6c mov ax,mar
 	00191e78 mov op,ax
 	00191e80 setfuncargs 0x1
 	00191e88 mov ax,0x6f6f20
 	00191e94 farcall ax
 	00191e9c farsubsp 0x1
 	00191ea4 pop op
 	00191eac sourceline 0x1b6d
 	00191eb4 mov ax,0x0
 	00191ec0 mov bx,ax
 	00191ecc mov mar,0x3cef20
 	00191ed8 mov ax,mar
 	00191ee4 push op
 	00191eec mov op,ax
 	00191ef4 farpush bx
 	00191efc setfuncargs 0x1
 	00191f04 mov ax,0x436f20
 	00191f10 farcall ax
 	00191f18 farsubsp 0x1
 	00191f20 pop op
 	00191f28 sourceline 0x1b6e
 	00191f30 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00191f38]
		00191c50: CONDITIONAL_JUMP
 	00191f38 sourceline 0x1b70
 	00191f40 mov mar,0x3cef20
 	00191f4c mov ax,mar
 	00191f58 push op
 	00191f60 mov op,ax
 	00191f68 setfuncargs 0x0
 	00191f70 mov ax,0x89ef20
 	00191f7c farcall ax
 	00191f84 pop op
 	00191f8c push ax
 	00191f94 mov mar,0x8a6f20
 	00191fa0 mov ax,mar
 	00191fac pop bx
 	00191fb4 cmpeq bx,ax
 	00191fc0 mov ax,bx
 	00191fcc jz 0x00192140
		00192140: CONDITIONAL_JUMP
		00191fd4: FALL_THROUGH

	[00191fd4]
		00191f38: FALL_THROUGH
 	00191fd4 sourceline 0x1b72
 	00191fdc push op
 	00191fe4 mov ax,0x2c1b48
 	00191ff0 farpush ax
 	00191ff8 mov mar,0x3cef20
 	00192004 mov ax,mar
 	00192010 mov op,ax
 	00192018 setfuncargs 0x1
 	00192020 mov ax,0x6f6f20
 	0019202c farcall ax
 	00192034 farsubsp 0x1
 	0019203c pop op
 	00192044 sourceline 0x1b73
 	0019204c push op
 	00192054 mov ax,0x2c1b9c
 	00192060 farpush ax
 	00192068 mov mar,0xb76f20
 	00192074 mov ax,mar
 	00192080 mov op,ax
 	00192088 setfuncargs 0x1
 	00192090 mov ax,0x6f6f20
 	0019209c farcall ax
 	001920a4 farsubsp 0x1
 	001920ac pop op
 	001920b4 sourceline 0x1b74
 	001920bc mov ax,0x0
 	001920c8 mov bx,ax
 	001920d4 mov mar,0x3cef20
 	001920e0 mov ax,mar
 	001920ec push op
 	001920f4 mov op,ax
 	001920fc farpush bx
 	00192104 setfuncargs 0x1
 	0019210c mov ax,0x436f20
 	00192118 farcall ax
 	00192120 farsubsp 0x1
 	00192128 pop op
 	00192130 sourceline 0x1b75
 	00192138 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00192140]
		00191f38: CONDITIONAL_JUMP
 	00192140 sourceline 0x1b77
 	00192148 mov mar,0x3cef20
 	00192154 mov ax,mar
 	00192160 push op
 	00192168 mov op,ax
 	00192170 setfuncargs 0x0
 	00192178 mov ax,0x89ef20
 	00192184 farcall ax
 	0019218c pop op
 	00192194 push ax
 	0019219c mov mar,0x9f6f20
 	001921a8 mov ax,mar
 	001921b4 pop bx
 	001921bc cmpeq bx,ax
 	001921c8 mov ax,bx
 	001921d4 jz 0x00192428
		00192428: CONDITIONAL_JUMP
		001921dc: FALL_THROUGH

	[001921dc]
		00192140: FALL_THROUGH
 	001921dc sourceline 0x1b79
 	001921e4 push op
 	001921ec mov ax,0x2c1bad
 	001921f8 farpush ax
 	00192200 mov mar,0x3cef20
 	0019220c mov ax,mar
 	00192218 mov op,ax
 	00192220 setfuncargs 0x1
 	00192228 mov ax,0x6f6f20
 	00192234 farcall ax
 	0019223c farsubsp 0x1
 	00192244 pop op
 	0019224c sourceline 0x1b7a
 	00192254 push op
 	0019225c mov ax,0x2c1bc4
 	00192268 farpush ax
 	00192270 mov mar,0xb76f20
 	0019227c mov ax,mar
 	00192288 mov op,ax
 	00192290 setfuncargs 0x1
 	00192298 mov ax,0x6f6f20
 	001922a4 farcall ax
 	001922ac farsubsp 0x1
 	001922b4 pop op
 	001922bc sourceline 0x1b7b
 	001922c4 push op
 	001922cc mov ax,0x2c1c1c
 	001922d8 farpush ax
 	001922e0 mov mar,0x3cef20
 	001922ec mov ax,mar
 	001922f8 mov op,ax
 	00192300 setfuncargs 0x1
 	00192308 mov ax,0x6f6f20
 	00192314 farcall ax
 	0019231c farsubsp 0x1
 	00192324 pop op
 	0019232c sourceline 0x1b7c
 	00192334 push op
 	0019233c mov ax,0x2c1c4f
 	00192348 farpush ax
 	00192350 mov mar,0xb76f20
 	0019235c mov ax,mar
 	00192368 mov op,ax
 	00192370 setfuncargs 0x1
 	00192378 mov ax,0x6f6f20
 	00192384 farcall ax
 	0019238c farsubsp 0x1
 	00192394 pop op
 	0019239c sourceline 0x1b7d
 	001923a4 mov ax,0x0
 	001923b0 mov bx,ax
 	001923bc mov mar,0x3cef20
 	001923c8 mov ax,mar
 	001923d4 push op
 	001923dc mov op,ax
 	001923e4 farpush bx
 	001923ec setfuncargs 0x1
 	001923f4 mov ax,0x436f20
 	00192400 farcall ax
 	00192408 farsubsp 0x1
 	00192410 pop op
 	00192418 sourceline 0x1b7e
 	00192420 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00192428]
		00192140: CONDITIONAL_JUMP
 	00192428 sourceline 0x1b80
 	00192430 mov mar,0x3cef20
 	0019243c mov ax,mar
 	00192448 push op
 	00192450 mov op,ax
 	00192458 setfuncargs 0x0
 	00192460 mov ax,0x89ef20
 	0019246c farcall ax
 	00192474 pop op
 	0019247c push ax
 	00192484 mov mar,0x9eef20
 	00192490 mov ax,mar
 	0019249c pop bx
 	001924a4 cmpeq bx,ax
 	001924b0 mov ax,bx
 	001924bc jz 0x001928e8
		001928e8: CONDITIONAL_JUMP
		001924c4: FALL_THROUGH

	[001924c4]
		00192428: FALL_THROUGH
 	001924c4 sourceline 0x1b82
 	001924cc mov ax,0x3
 	001924d8 farpush ax
 	001924e0 setfuncargs 0x1
 	001924e8 mov ax,0x4a6f20
 	001924f4 farcall ax
 	001924fc farsubsp 0x1
 	00192504 mov mar,sp
 	00192510 memwrite4 ax
 	00192518 add sp,0x4
 	00192524 sourceline 0x1b83
 	0019252c stackptr 0x4
 	00192534 memread4 ax
 	0019253c push ax
 	00192544 mov ax,0x0
 	00192550 pop bx
 	00192558 cmpeq bx,ax
 	00192564 mov ax,bx
 	00192570 jz 0x001925e8
		001925e8: CONDITIONAL_JUMP
		00192578: FALL_THROUGH

	[00192578]
		001924c4: FALL_THROUGH
 	00192578 push op
 	00192580 mov ax,0x2c4923
 	0019258c farpush ax
 	00192594 mov mar,0x3cef20
 	001925a0 mov ax,mar
 	001925ac mov op,ax
 	001925b4 setfuncargs 0x1
 	001925bc mov ax,0x6f6f20
 	001925c8 farcall ax
 	001925d0 farsubsp 0x1
 	001925d8 pop op
 	001925e0 jmp 0x001927e0
		001927e0: UNCONDITIONAL_JUMP

	[001925e8]
		001924c4: CONDITIONAL_JUMP
 	001925e8 sourceline 0x1b84
 	001925f0 stackptr 0x4
 	001925f8 memread4 ax
 	00192600 push ax
 	00192608 mov ax,0x1
 	00192614 pop bx
 	0019261c cmpeq bx,ax
 	00192628 mov ax,bx
 	00192634 jz 0x001926ac
		001926ac: CONDITIONAL_JUMP
		0019263c: FALL_THROUGH

	[0019263c]
		001925e8: FALL_THROUGH
 	0019263c push op
 	00192644 mov ax,0x2c4936
 	00192650 farpush ax
 	00192658 mov mar,0x3cef20
 	00192664 mov ax,mar
 	00192670 mov op,ax
 	00192678 setfuncargs 0x1
 	00192680 mov ax,0x6f6f20
 	0019268c farcall ax
 	00192694 farsubsp 0x1
 	0019269c pop op
 	001926a4 jmp 0x001927e0
		001927e0: UNCONDITIONAL_JUMP

	[001926ac]
		001925e8: CONDITIONAL_JUMP
 	001926ac sourceline 0x1b85
 	001926b4 stackptr 0x4
 	001926bc memread4 ax
 	001926c4 push ax
 	001926cc mov ax,0x2
 	001926d8 pop bx
 	001926e0 cmpeq bx,ax
 	001926ec mov ax,bx
 	001926f8 jz 0x00192770
		00192770: CONDITIONAL_JUMP
		00192700: FALL_THROUGH

	[00192700]
		001926ac: FALL_THROUGH
 	00192700 push op
 	00192708 mov ax,0x2c4949
 	00192714 farpush ax
 	0019271c mov mar,0x3cef20
 	00192728 mov ax,mar
 	00192734 mov op,ax
 	0019273c setfuncargs 0x1
 	00192744 mov ax,0x6f6f20
 	00192750 farcall ax
 	00192758 farsubsp 0x1
 	00192760 pop op
 	00192768 jmp 0x001927e0
		001927e0: UNCONDITIONAL_JUMP

	[00192770]
		001926ac: CONDITIONAL_JUMP
 	00192770 sourceline 0x1b86
 	00192778 push op
 	00192780 mov ax,0x2c495c
 	0019278c farpush ax
 	00192794 mov mar,0x3cef20
 	001927a0 mov ax,mar
 	001927ac mov op,ax
 	001927b4 setfuncargs 0x1
 	001927bc mov ax,0x6f6f20
 	001927c8 farcall ax
 	001927d0 farsubsp 0x1
 	001927d8 pop op
		001927e0: FALL_THROUGH

	[001927e0]
		00192578: UNCONDITIONAL_JUMP
		0019263c: UNCONDITIONAL_JUMP
		00192700: UNCONDITIONAL_JUMP
		00192770: FALL_THROUGH
 	001927e0 sourceline 0x1b88
 	001927e8 push op
 	001927f0 mov ax,0x2c1cb6
 	001927fc farpush ax
 	00192804 mov mar,0xb76f20
 	00192810 mov ax,mar
 	0019281c mov op,ax
 	00192824 setfuncargs 0x1
 	0019282c mov ax,0x6f6f20
 	00192838 farcall ax
 	00192840 farsubsp 0x1
 	00192848 pop op
 	00192850 sourceline 0x1b89
 	00192858 mov ax,0x0
 	00192864 mov bx,ax
 	00192870 mov mar,0x3cef20
 	0019287c mov ax,mar
 	00192888 push op
 	00192890 mov op,ax
 	00192898 farpush bx
 	001928a0 setfuncargs 0x1
 	001928a8 mov ax,0x436f20
 	001928b4 farcall ax
 	001928bc farsubsp 0x1
 	001928c4 pop op
 	001928cc sourceline 0x1b8a
 	001928d4 sub sp,0x4
 	001928e0 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[001928e8]
		00192428: CONDITIONAL_JUMP
 	001928e8 sourceline 0x1b8c
 	001928f0 mov mar,0x3cef20
 	001928fc mov ax,mar
 	00192908 push op
 	00192910 mov op,ax
 	00192918 setfuncargs 0x0
 	00192920 mov ax,0x89ef20
 	0019292c farcall ax
 	00192934 pop op
 	0019293c push ax
 	00192944 mov mar,0x99ef20
 	00192950 mov ax,mar
 	0019295c pop bx
 	00192964 cmpeq bx,ax
 	00192970 mov ax,bx
 	0019297c jz 0x00192af0
		00192af0: CONDITIONAL_JUMP
		00192984: FALL_THROUGH

	[00192984]
		001928e8: FALL_THROUGH
 	00192984 sourceline 0x1b8e
 	0019298c push op
 	00192994 mov ax,0x2c1cf1
 	001929a0 farpush ax
 	001929a8 mov mar,0x3cef20
 	001929b4 mov ax,mar
 	001929c0 mov op,ax
 	001929c8 setfuncargs 0x1
 	001929d0 mov ax,0x6f6f20
 	001929dc farcall ax
 	001929e4 farsubsp 0x1
 	001929ec pop op
 	001929f4 sourceline 0x1b8f
 	001929fc push op
 	00192a04 mov ax,0x2c1d12
 	00192a10 farpush ax
 	00192a18 mov mar,0xb76f20
 	00192a24 mov ax,mar
 	00192a30 mov op,ax
 	00192a38 setfuncargs 0x1
 	00192a40 mov ax,0x6f6f20
 	00192a4c farcall ax
 	00192a54 farsubsp 0x1
 	00192a5c pop op
 	00192a64 sourceline 0x1b90
 	00192a6c mov ax,0x0
 	00192a78 mov bx,ax
 	00192a84 mov mar,0x3cef20
 	00192a90 mov ax,mar
 	00192a9c push op
 	00192aa4 mov op,ax
 	00192aac farpush bx
 	00192ab4 setfuncargs 0x1
 	00192abc mov ax,0x436f20
 	00192ac8 farcall ax
 	00192ad0 farsubsp 0x1
 	00192ad8 pop op
 	00192ae0 sourceline 0x1b91
 	00192ae8 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00192af0]
		001928e8: CONDITIONAL_JUMP
 	00192af0 sourceline 0x1b93
 	00192af8 mov mar,0x3cef20
 	00192b04 mov ax,mar
 	00192b10 push op
 	00192b18 mov op,ax
 	00192b20 setfuncargs 0x0
 	00192b28 mov ax,0x89ef20
 	00192b34 farcall ax
 	00192b3c pop op
 	00192b44 push ax
 	00192b4c mov mar,0x9e6f20
 	00192b58 mov ax,mar
 	00192b64 pop bx
 	00192b6c cmpeq bx,ax
 	00192b78 mov ax,bx
 	00192b84 jz 0x00192cf8
		00192cf8: CONDITIONAL_JUMP
		00192b8c: FALL_THROUGH

	[00192b8c]
		00192af0: FALL_THROUGH
 	00192b8c sourceline 0x1b95
 	00192b94 push op
 	00192b9c mov ax,0x2c1d54
 	00192ba8 farpush ax
 	00192bb0 mov mar,0x3cef20
 	00192bbc mov ax,mar
 	00192bc8 mov op,ax
 	00192bd0 setfuncargs 0x1
 	00192bd8 mov ax,0x6f6f20
 	00192be4 farcall ax
 	00192bec farsubsp 0x1
 	00192bf4 pop op
 	00192bfc sourceline 0x1b96
 	00192c04 push op
 	00192c0c mov ax,0x2c1d69
 	00192c18 farpush ax
 	00192c20 mov mar,0xb76f20
 	00192c2c mov ax,mar
 	00192c38 mov op,ax
 	00192c40 setfuncargs 0x1
 	00192c48 mov ax,0x6f6f20
 	00192c54 farcall ax
 	00192c5c farsubsp 0x1
 	00192c64 pop op
 	00192c6c sourceline 0x1b97
 	00192c74 mov ax,0x0
 	00192c80 mov bx,ax
 	00192c8c mov mar,0x3cef20
 	00192c98 mov ax,mar
 	00192ca4 push op
 	00192cac mov op,ax
 	00192cb4 farpush bx
 	00192cbc setfuncargs 0x1
 	00192cc4 mov ax,0x436f20
 	00192cd0 farcall ax
 	00192cd8 farsubsp 0x1
 	00192ce0 pop op
 	00192ce8 sourceline 0x1b98
 	00192cf0 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00192cf8]
		00192af0: CONDITIONAL_JUMP
 	00192cf8 sourceline 0x1b9a
 	00192d00 mov mar,0x3cef20
 	00192d0c mov ax,mar
 	00192d18 push op
 	00192d20 mov op,ax
 	00192d28 setfuncargs 0x0
 	00192d30 mov ax,0x89ef20
 	00192d3c farcall ax
 	00192d44 pop op
 	00192d4c push ax
 	00192d54 mov mar,0xa0ef20
 	00192d60 mov ax,mar
 	00192d6c pop bx
 	00192d74 cmpeq bx,ax
 	00192d80 mov ax,bx
 	00192d8c jz 0x00192f70
		00192f70: CONDITIONAL_JUMP
		00192d94: FALL_THROUGH

	[00192d94]
		00192cf8: FALL_THROUGH
 	00192d94 sourceline 0x1b9c
 	00192d9c push op
 	00192da4 mov ax,0x2c1d95
 	00192db0 farpush ax
 	00192db8 mov mar,0x3cef20
 	00192dc4 mov ax,mar
 	00192dd0 mov op,ax
 	00192dd8 setfuncargs 0x1
 	00192de0 mov ax,0x6f6f20
 	00192dec farcall ax
 	00192df4 farsubsp 0x1
 	00192dfc pop op
 	00192e04 sourceline 0x1b9d
 	00192e0c push op
 	00192e14 mov ax,0x2c1db3
 	00192e20 farpush ax
 	00192e28 mov mar,0xb76f20
 	00192e34 mov ax,mar
 	00192e40 mov op,ax
 	00192e48 setfuncargs 0x1
 	00192e50 mov ax,0x6f6f20
 	00192e5c farcall ax
 	00192e64 farsubsp 0x1
 	00192e6c pop op
 	00192e74 sourceline 0x1b9e
 	00192e7c push op
 	00192e84 mov ax,0x2c1df1
 	00192e90 farpush ax
 	00192e98 mov mar,0x3cef20
 	00192ea4 mov ax,mar
 	00192eb0 mov op,ax
 	00192eb8 setfuncargs 0x1
 	00192ec0 mov ax,0x6f6f20
 	00192ecc farcall ax
 	00192ed4 farsubsp 0x1
 	00192edc pop op
 	00192ee4 sourceline 0x1b9f
 	00192eec mov ax,0x0
 	00192ef8 mov bx,ax
 	00192f04 mov mar,0x3cef20
 	00192f10 mov ax,mar
 	00192f1c push op
 	00192f24 mov op,ax
 	00192f2c farpush bx
 	00192f34 setfuncargs 0x1
 	00192f3c mov ax,0x436f20
 	00192f48 farcall ax
 	00192f50 farsubsp 0x1
 	00192f58 pop op
 	00192f60 sourceline 0x1ba0
 	00192f68 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00192f70]
		00192cf8: CONDITIONAL_JUMP
 	00192f70 sourceline 0x1ba2
 	00192f78 mov mar,0x3cef20
 	00192f84 mov ax,mar
 	00192f90 push op
 	00192f98 mov op,ax
 	00192fa0 setfuncargs 0x0
 	00192fa8 mov ax,0x89ef20
 	00192fb4 farcall ax
 	00192fbc pop op
 	00192fc4 push ax
 	00192fcc mov mar,0x9aef20
 	00192fd8 mov ax,mar
 	00192fe4 pop bx
 	00192fec cmpeq bx,ax
 	00192ff8 mov ax,bx
 	00193004 jz 0x001934a0
		001934a0: CONDITIONAL_JUMP
		0019300c: FALL_THROUGH

	[0019300c]
		00192f70: FALL_THROUGH
 	0019300c sourceline 0x1ba4
 	00193014 mov ax,0x3
 	00193020 farpush ax
 	00193028 setfuncargs 0x1
 	00193030 mov ax,0x4a6f20
 	0019303c farcall ax
 	00193044 farsubsp 0x1
 	0019304c mov mar,sp
 	00193058 memwrite4 ax
 	00193060 add sp,0x4
 	0019306c sourceline 0x1ba5
 	00193074 stackptr 0x4
 	0019307c memread4 ax
 	00193084 push ax
 	0019308c mov ax,0x0
 	00193098 pop bx
 	001930a0 cmpeq bx,ax
 	001930ac mov ax,bx
 	001930b8 jz 0x00193130
		00193130: CONDITIONAL_JUMP
		001930c0: FALL_THROUGH

	[001930c0]
		0019300c: FALL_THROUGH
 	001930c0 push op
 	001930c8 mov ax,0x2c4923
 	001930d4 farpush ax
 	001930dc mov mar,0x3cef20
 	001930e8 mov ax,mar
 	001930f4 mov op,ax
 	001930fc setfuncargs 0x1
 	00193104 mov ax,0x6f6f20
 	00193110 farcall ax
 	00193118 farsubsp 0x1
 	00193120 pop op
 	00193128 jmp 0x00193328
		00193328: UNCONDITIONAL_JUMP

	[00193130]
		0019300c: CONDITIONAL_JUMP
 	00193130 sourceline 0x1ba6
 	00193138 stackptr 0x4
 	00193140 memread4 ax
 	00193148 push ax
 	00193150 mov ax,0x1
 	0019315c pop bx
 	00193164 cmpeq bx,ax
 	00193170 mov ax,bx
 	0019317c jz 0x001931f4
		001931f4: CONDITIONAL_JUMP
		00193184: FALL_THROUGH

	[00193184]
		00193130: FALL_THROUGH
 	00193184 push op
 	0019318c mov ax,0x2c4936
 	00193198 farpush ax
 	001931a0 mov mar,0x3cef20
 	001931ac mov ax,mar
 	001931b8 mov op,ax
 	001931c0 setfuncargs 0x1
 	001931c8 mov ax,0x6f6f20
 	001931d4 farcall ax
 	001931dc farsubsp 0x1
 	001931e4 pop op
 	001931ec jmp 0x00193328
		00193328: UNCONDITIONAL_JUMP

	[001931f4]
		00193130: CONDITIONAL_JUMP
 	001931f4 sourceline 0x1ba7
 	001931fc stackptr 0x4
 	00193204 memread4 ax
 	0019320c push ax
 	00193214 mov ax,0x2
 	00193220 pop bx
 	00193228 cmpeq bx,ax
 	00193234 mov ax,bx
 	00193240 jz 0x001932b8
		001932b8: CONDITIONAL_JUMP
		00193248: FALL_THROUGH

	[00193248]
		001931f4: FALL_THROUGH
 	00193248 push op
 	00193250 mov ax,0x2c4949
 	0019325c farpush ax
 	00193264 mov mar,0x3cef20
 	00193270 mov ax,mar
 	0019327c mov op,ax
 	00193284 setfuncargs 0x1
 	0019328c mov ax,0x6f6f20
 	00193298 farcall ax
 	001932a0 farsubsp 0x1
 	001932a8 pop op
 	001932b0 jmp 0x00193328
		00193328: UNCONDITIONAL_JUMP

	[001932b8]
		001931f4: CONDITIONAL_JUMP
 	001932b8 sourceline 0x1ba8
 	001932c0 push op
 	001932c8 mov ax,0x2c495c
 	001932d4 farpush ax
 	001932dc mov mar,0x3cef20
 	001932e8 mov ax,mar
 	001932f4 mov op,ax
 	001932fc setfuncargs 0x1
 	00193304 mov ax,0x6f6f20
 	00193310 farcall ax
 	00193318 farsubsp 0x1
 	00193320 pop op
		00193328: FALL_THROUGH

	[00193328]
		001930c0: UNCONDITIONAL_JUMP
		00193184: UNCONDITIONAL_JUMP
		00193248: UNCONDITIONAL_JUMP
		001932b8: FALL_THROUGH
 	00193328 sourceline 0x1baa
 	00193330 push op
 	00193338 mov ax,0x2c20ac
 	00193344 farpush ax
 	0019334c mov mar,0xb76f20
 	00193358 mov ax,mar
 	00193364 mov op,ax
 	0019336c setfuncargs 0x1
 	00193374 mov ax,0x6f6f20
 	00193380 farcall ax
 	00193388 farsubsp 0x1
 	00193390 pop op
 	00193398 sourceline 0x1bab
 	001933a0 push op
 	001933a8 mov ax,0x2c20f2
 	001933b4 farpush ax
 	001933bc mov mar,0x3cef20
 	001933c8 mov ax,mar
 	001933d4 mov op,ax
 	001933dc setfuncargs 0x1
 	001933e4 mov ax,0x6f6f20
 	001933f0 farcall ax
 	001933f8 farsubsp 0x1
 	00193400 pop op
 	00193408 sourceline 0x1bac
 	00193410 mov ax,0x0
 	0019341c mov bx,ax
 	00193428 mov mar,0x3cef20
 	00193434 mov ax,mar
 	00193440 push op
 	00193448 mov op,ax
 	00193450 farpush bx
 	00193458 setfuncargs 0x1
 	00193460 mov ax,0x436f20
 	0019346c farcall ax
 	00193474 farsubsp 0x1
 	0019347c pop op
 	00193484 sourceline 0x1bad
 	0019348c sub sp,0x4
 	00193498 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[001934a0]
		00192f70: CONDITIONAL_JUMP
 	001934a0 sourceline 0x1baf
 	001934a8 mov mar,0x3cef20
 	001934b4 mov ax,mar
 	001934c0 push op
 	001934c8 mov op,ax
 	001934d0 setfuncargs 0x0
 	001934d8 mov ax,0x89ef20
 	001934e4 farcall ax
 	001934ec pop op
 	001934f4 push ax
 	001934fc mov mar,0xa06f20
 	00193508 mov ax,mar
 	00193514 pop bx
 	0019351c cmpeq bx,ax
 	00193528 mov ax,bx
 	00193534 jz 0x00193788
		00193788: CONDITIONAL_JUMP
		0019353c: FALL_THROUGH

	[0019353c]
		001934a0: FALL_THROUGH
 	0019353c sourceline 0x1bb1
 	00193544 push op
 	0019354c mov ax,0x2c1ee0
 	00193558 farpush ax
 	00193560 mov mar,0x3cef20
 	0019356c mov ax,mar
 	00193578 mov op,ax
 	00193580 setfuncargs 0x1
 	00193588 mov ax,0x6f6f20
 	00193594 farcall ax
 	0019359c farsubsp 0x1
 	001935a4 pop op
 	001935ac sourceline 0x1bb2
 	001935b4 push op
 	001935bc mov ax,0x2c1ef4
 	001935c8 farpush ax
 	001935d0 mov mar,0xb76f20
 	001935dc mov ax,mar
 	001935e8 mov op,ax
 	001935f0 setfuncargs 0x1
 	001935f8 mov ax,0x6f6f20
 	00193604 farcall ax
 	0019360c farsubsp 0x1
 	00193614 pop op
 	0019361c sourceline 0x1bb3
 	00193624 push op
 	0019362c mov ax,0x2c1f2c
 	00193638 farpush ax
 	00193640 mov mar,0x3cef20
 	0019364c mov ax,mar
 	00193658 mov op,ax
 	00193660 setfuncargs 0x1
 	00193668 mov ax,0x6f6f20
 	00193674 farcall ax
 	0019367c farsubsp 0x1
 	00193684 pop op
 	0019368c sourceline 0x1bb4
 	00193694 push op
 	0019369c mov ax,0x2c1f6d
 	001936a8 farpush ax
 	001936b0 mov mar,0xb76f20
 	001936bc mov ax,mar
 	001936c8 mov op,ax
 	001936d0 setfuncargs 0x1
 	001936d8 mov ax,0x6f6f20
 	001936e4 farcall ax
 	001936ec farsubsp 0x1
 	001936f4 pop op
 	001936fc sourceline 0x1bb5
 	00193704 mov ax,0x0
 	00193710 mov bx,ax
 	0019371c mov mar,0x3cef20
 	00193728 mov ax,mar
 	00193734 push op
 	0019373c mov op,ax
 	00193744 farpush bx
 	0019374c setfuncargs 0x1
 	00193754 mov ax,0x436f20
 	00193760 farcall ax
 	00193768 farsubsp 0x1
 	00193770 pop op
 	00193778 sourceline 0x1bb6
 	00193780 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00193788]
		001934a0: CONDITIONAL_JUMP
 	00193788 sourceline 0x1bb8
 	00193790 mov mar,0x3cef20
 	0019379c mov ax,mar
 	001937a8 push op
 	001937b0 mov op,ax
 	001937b8 setfuncargs 0x0
 	001937c0 mov ax,0x89ef20
 	001937cc farcall ax
 	001937d4 pop op
 	001937dc push ax
 	001937e4 mov mar,0x9fef20
 	001937f0 mov ax,mar
 	001937fc pop bx
 	00193804 cmpeq bx,ax
 	00193810 mov ax,bx
 	0019381c jz 0x00193cb8
		00193cb8: CONDITIONAL_JUMP
		00193824: FALL_THROUGH

	[00193824]
		00193788: FALL_THROUGH
 	00193824 sourceline 0x1bba
 	0019382c mov ax,0x3
 	00193838 farpush ax
 	00193840 setfuncargs 0x1
 	00193848 mov ax,0x4a6f20
 	00193854 farcall ax
 	0019385c farsubsp 0x1
 	00193864 mov mar,sp
 	00193870 memwrite4 ax
 	00193878 add sp,0x4
 	00193884 sourceline 0x1bbb
 	0019388c stackptr 0x4
 	00193894 memread4 ax
 	0019389c push ax
 	001938a4 mov ax,0x0
 	001938b0 pop bx
 	001938b8 cmpeq bx,ax
 	001938c4 mov ax,bx
 	001938d0 jz 0x00193948
		00193948: CONDITIONAL_JUMP
		001938d8: FALL_THROUGH

	[001938d8]
		00193824: FALL_THROUGH
 	001938d8 push op
 	001938e0 mov ax,0x2c4923
 	001938ec farpush ax
 	001938f4 mov mar,0x3cef20
 	00193900 mov ax,mar
 	0019390c mov op,ax
 	00193914 setfuncargs 0x1
 	0019391c mov ax,0x6f6f20
 	00193928 farcall ax
 	00193930 farsubsp 0x1
 	00193938 pop op
 	00193940 jmp 0x00193b40
		00193b40: UNCONDITIONAL_JUMP

	[00193948]
		00193824: CONDITIONAL_JUMP
 	00193948 sourceline 0x1bbc
 	00193950 stackptr 0x4
 	00193958 memread4 ax
 	00193960 push ax
 	00193968 mov ax,0x1
 	00193974 pop bx
 	0019397c cmpeq bx,ax
 	00193988 mov ax,bx
 	00193994 jz 0x00193a0c
		00193a0c: CONDITIONAL_JUMP
		0019399c: FALL_THROUGH

	[0019399c]
		00193948: FALL_THROUGH
 	0019399c push op
 	001939a4 mov ax,0x2c4936
 	001939b0 farpush ax
 	001939b8 mov mar,0x3cef20
 	001939c4 mov ax,mar
 	001939d0 mov op,ax
 	001939d8 setfuncargs 0x1
 	001939e0 mov ax,0x6f6f20
 	001939ec farcall ax
 	001939f4 farsubsp 0x1
 	001939fc pop op
 	00193a04 jmp 0x00193b40
		00193b40: UNCONDITIONAL_JUMP

	[00193a0c]
		00193948: CONDITIONAL_JUMP
 	00193a0c sourceline 0x1bbd
 	00193a14 stackptr 0x4
 	00193a1c memread4 ax
 	00193a24 push ax
 	00193a2c mov ax,0x2
 	00193a38 pop bx
 	00193a40 cmpeq bx,ax
 	00193a4c mov ax,bx
 	00193a58 jz 0x00193ad0
		00193ad0: CONDITIONAL_JUMP
		00193a60: FALL_THROUGH

	[00193a60]
		00193a0c: FALL_THROUGH
 	00193a60 push op
 	00193a68 mov ax,0x2c4949
 	00193a74 farpush ax
 	00193a7c mov mar,0x3cef20
 	00193a88 mov ax,mar
 	00193a94 mov op,ax
 	00193a9c setfuncargs 0x1
 	00193aa4 mov ax,0x6f6f20
 	00193ab0 farcall ax
 	00193ab8 farsubsp 0x1
 	00193ac0 pop op
 	00193ac8 jmp 0x00193b40
		00193b40: UNCONDITIONAL_JUMP

	[00193ad0]
		00193a0c: CONDITIONAL_JUMP
 	00193ad0 sourceline 0x1bbe
 	00193ad8 push op
 	00193ae0 mov ax,0x2c495c
 	00193aec farpush ax
 	00193af4 mov mar,0x3cef20
 	00193b00 mov ax,mar
 	00193b0c mov op,ax
 	00193b14 setfuncargs 0x1
 	00193b1c mov ax,0x6f6f20
 	00193b28 farcall ax
 	00193b30 farsubsp 0x1
 	00193b38 pop op
		00193b40: FALL_THROUGH

	[00193b40]
		001938d8: UNCONDITIONAL_JUMP
		0019399c: UNCONDITIONAL_JUMP
		00193a60: UNCONDITIONAL_JUMP
		00193ad0: FALL_THROUGH
 	00193b40 sourceline 0x1bc0
 	00193b48 push op
 	00193b50 mov ax,0x2c1fd9
 	00193b5c farpush ax
 	00193b64 mov mar,0xb76f20
 	00193b70 mov ax,mar
 	00193b7c mov op,ax
 	00193b84 setfuncargs 0x1
 	00193b8c mov ax,0x6f6f20
 	00193b98 farcall ax
 	00193ba0 farsubsp 0x1
 	00193ba8 pop op
 	00193bb0 sourceline 0x1bc1
 	00193bb8 push op
 	00193bc0 mov ax,0x2c2018
 	00193bcc farpush ax
 	00193bd4 mov mar,0x3cef20
 	00193be0 mov ax,mar
 	00193bec mov op,ax
 	00193bf4 setfuncargs 0x1
 	00193bfc mov ax,0x6f6f20
 	00193c08 farcall ax
 	00193c10 farsubsp 0x1
 	00193c18 pop op
 	00193c20 sourceline 0x1bc2
 	00193c28 mov ax,0x0
 	00193c34 mov bx,ax
 	00193c40 mov mar,0x3cef20
 	00193c4c mov ax,mar
 	00193c58 push op
 	00193c60 mov op,ax
 	00193c68 farpush bx
 	00193c70 setfuncargs 0x1
 	00193c78 mov ax,0x436f20
 	00193c84 farcall ax
 	00193c8c farsubsp 0x1
 	00193c94 pop op
 	00193c9c sourceline 0x1bc3
 	00193ca4 sub sp,0x4
 	00193cb0 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[00193cb8]
		00193788: CONDITIONAL_JUMP
 	00193cb8 sourceline 0x1bc5
 	00193cc0 mov mar,0x3cef20
 	00193ccc mov ax,mar
 	00193cd8 push op
 	00193ce0 mov op,ax
 	00193ce8 setfuncargs 0x0
 	00193cf0 mov ax,0x89ef20
 	00193cfc farcall ax
 	00193d04 pop op
 	00193d0c push ax
 	00193d14 mov mar,0x9b6f20
 	00193d20 mov ax,mar
 	00193d2c pop bx
 	00193d34 cmpeq bx,ax
 	00193d40 mov ax,bx
 	00193d4c jz 0x001941e8
		001941e8: CONDITIONAL_JUMP
		00193d54: FALL_THROUGH

	[00193d54]
		00193cb8: FALL_THROUGH
 	00193d54 sourceline 0x1bc7
 	00193d5c mov ax,0x3
 	00193d68 farpush ax
 	00193d70 setfuncargs 0x1
 	00193d78 mov ax,0x4a6f20
 	00193d84 farcall ax
 	00193d8c farsubsp 0x1
 	00193d94 mov mar,sp
 	00193da0 memwrite4 ax
 	00193da8 add sp,0x4
 	00193db4 sourceline 0x1bc8
 	00193dbc stackptr 0x4
 	00193dc4 memread4 ax
 	00193dcc push ax
 	00193dd4 mov ax,0x0
 	00193de0 pop bx
 	00193de8 cmpeq bx,ax
 	00193df4 mov ax,bx
 	00193e00 jz 0x00193e78
		00193e78: CONDITIONAL_JUMP
		00193e08: FALL_THROUGH

	[00193e08]
		00193d54: FALL_THROUGH
 	00193e08 push op
 	00193e10 mov ax,0x2c4923
 	00193e1c farpush ax
 	00193e24 mov mar,0x3cef20
 	00193e30 mov ax,mar
 	00193e3c mov op,ax
 	00193e44 setfuncargs 0x1
 	00193e4c mov ax,0x6f6f20
 	00193e58 farcall ax
 	00193e60 farsubsp 0x1
 	00193e68 pop op
 	00193e70 jmp 0x00194070
		00194070: UNCONDITIONAL_JUMP

	[00193e78]
		00193d54: CONDITIONAL_JUMP
 	00193e78 sourceline 0x1bc9
 	00193e80 stackptr 0x4
 	00193e88 memread4 ax
 	00193e90 push ax
 	00193e98 mov ax,0x1
 	00193ea4 pop bx
 	00193eac cmpeq bx,ax
 	00193eb8 mov ax,bx
 	00193ec4 jz 0x00193f3c
		00193f3c: CONDITIONAL_JUMP
		00193ecc: FALL_THROUGH

	[00193ecc]
		00193e78: FALL_THROUGH
 	00193ecc push op
 	00193ed4 mov ax,0x2c4936
 	00193ee0 farpush ax
 	00193ee8 mov mar,0x3cef20
 	00193ef4 mov ax,mar
 	00193f00 mov op,ax
 	00193f08 setfuncargs 0x1
 	00193f10 mov ax,0x6f6f20
 	00193f1c farcall ax
 	00193f24 farsubsp 0x1
 	00193f2c pop op
 	00193f34 jmp 0x00194070
		00194070: UNCONDITIONAL_JUMP

	[00193f3c]
		00193e78: CONDITIONAL_JUMP
 	00193f3c sourceline 0x1bca
 	00193f44 stackptr 0x4
 	00193f4c memread4 ax
 	00193f54 push ax
 	00193f5c mov ax,0x2
 	00193f68 pop bx
 	00193f70 cmpeq bx,ax
 	00193f7c mov ax,bx
 	00193f88 jz 0x00194000
		00194000: CONDITIONAL_JUMP
		00193f90: FALL_THROUGH

	[00193f90]
		00193f3c: FALL_THROUGH
 	00193f90 push op
 	00193f98 mov ax,0x2c4949
 	00193fa4 farpush ax
 	00193fac mov mar,0x3cef20
 	00193fb8 mov ax,mar
 	00193fc4 mov op,ax
 	00193fcc setfuncargs 0x1
 	00193fd4 mov ax,0x6f6f20
 	00193fe0 farcall ax
 	00193fe8 farsubsp 0x1
 	00193ff0 pop op
 	00193ff8 jmp 0x00194070
		00194070: UNCONDITIONAL_JUMP

	[00194000]
		00193f3c: CONDITIONAL_JUMP
 	00194000 sourceline 0x1bcb
 	00194008 push op
 	00194010 mov ax,0x2c495c
 	0019401c farpush ax
 	00194024 mov mar,0x3cef20
 	00194030 mov ax,mar
 	0019403c mov op,ax
 	00194044 setfuncargs 0x1
 	0019404c mov ax,0x6f6f20
 	00194058 farcall ax
 	00194060 farsubsp 0x1
 	00194068 pop op
		00194070: FALL_THROUGH

	[00194070]
		00193e08: UNCONDITIONAL_JUMP
		00193ecc: UNCONDITIONAL_JUMP
		00193f90: UNCONDITIONAL_JUMP
		00194000: FALL_THROUGH
 	00194070 sourceline 0x1bcd
 	00194078 push op
 	00194080 mov ax,0x2c20ac
 	0019408c farpush ax
 	00194094 mov mar,0xb76f20
 	001940a0 mov ax,mar
 	001940ac mov op,ax
 	001940b4 setfuncargs 0x1
 	001940bc mov ax,0x6f6f20
 	001940c8 farcall ax
 	001940d0 farsubsp 0x1
 	001940d8 pop op
 	001940e0 sourceline 0x1bce
 	001940e8 push op
 	001940f0 mov ax,0x2c20f2
 	001940fc farpush ax
 	00194104 mov mar,0x3cef20
 	00194110 mov ax,mar
 	0019411c mov op,ax
 	00194124 setfuncargs 0x1
 	0019412c mov ax,0x6f6f20
 	00194138 farcall ax
 	00194140 farsubsp 0x1
 	00194148 pop op
 	00194150 sourceline 0x1bcf
 	00194158 mov ax,0x0
 	00194164 mov bx,ax
 	00194170 mov mar,0x3cef20
 	0019417c mov ax,mar
 	00194188 push op
 	00194190 mov op,ax
 	00194198 farpush bx
 	001941a0 setfuncargs 0x1
 	001941a8 mov ax,0x436f20
 	001941b4 farcall ax
 	001941bc farsubsp 0x1
 	001941c4 pop op
 	001941cc sourceline 0x1bd0
 	001941d4 sub sp,0x4
 	001941e0 jmp 0x0019449c
		0019449c: UNCONDITIONAL_JUMP

	[001941e8]
		00193cb8: CONDITIONAL_JUMP
 	001941e8 sourceline 0x1bd2
 	001941f0 mov mar,0x3cef20
 	001941fc mov ax,mar
 	00194208 push op
 	00194210 mov op,ax
 	00194218 setfuncargs 0x0
 	00194220 mov ax,0x89ef20
 	0019422c farcall ax
 	00194234 pop op
 	0019423c push ax
 	00194244 mov mar,0x9bef20
 	00194250 mov ax,mar
 	0019425c pop bx
 	00194264 cmpeq bx,ax
 	00194270 mov ax,bx
 	0019427c jnz 0x00194338
		00194338: CONDITIONAL_JUMP
		00194284: FALL_THROUGH

	[00194284]
		001941e8: FALL_THROUGH
 	00194284 push ax
 	0019428c mov mar,0x3cef20
 	00194298 mov ax,mar
 	001942a4 push op
 	001942ac mov op,ax
 	001942b4 setfuncargs 0x0
 	001942bc mov ax,0x89ef20
 	001942c8 farcall ax
 	001942d0 pop op
 	001942d8 push ax
 	001942e0 mov mar,0x986f20
 	001942ec mov ax,mar
 	001942f8 pop bx
 	00194300 cmpeq bx,ax
 	0019430c mov ax,bx
 	00194318 pop bx
 	00194320 lor bx,ax
 	0019432c mov ax,bx
		00194338: FALL_THROUGH

	[00194338]
		001941e8: CONDITIONAL_JUMP
		00194284: FALL_THROUGH
 	00194338 jz 0x0019449c
		0019449c: CONDITIONAL_JUMP
		00194340: FALL_THROUGH

	[00194340]
		00194338: FALL_THROUGH
 	00194340 sourceline 0x1bd4
 	00194348 push op
 	00194350 mov ax,0x2c2137
 	0019435c farpush ax
 	00194364 mov mar,0x3cef20
 	00194370 mov ax,mar
 	0019437c mov op,ax
 	00194384 setfuncargs 0x1
 	0019438c mov ax,0x6f6f20
 	00194398 farcall ax
 	001943a0 farsubsp 0x1
 	001943a8 pop op
 	001943b0 sourceline 0x1bd5
 	001943b8 push op
 	001943c0 mov ax,0x2c2156
 	001943cc farpush ax
 	001943d4 mov mar,0xb76f20
 	001943e0 mov ax,mar
 	001943ec mov op,ax
 	001943f4 setfuncargs 0x1
 	001943fc mov ax,0x6f6f20
 	00194408 farcall ax
 	00194410 farsubsp 0x1
 	00194418 pop op
 	00194420 sourceline 0x1bd6
 	00194428 mov ax,0x0
 	00194434 mov bx,ax
 	00194440 mov mar,0x3cef20
 	0019444c mov ax,mar
 	00194458 push op
 	00194460 mov op,ax
 	00194468 farpush bx
 	00194470 setfuncargs 0x1
 	00194478 mov ax,0x436f20
 	00194484 farcall ax
 	0019448c farsubsp 0x1
 	00194494 pop op
		0019449c: FALL_THROUGH

	[0019449c]
		00190fdc: UNCONDITIONAL_JUMP
		001911e4: UNCONDITIONAL_JUMP
		001913ec: UNCONDITIONAL_JUMP
		001915f4: UNCONDITIONAL_JUMP
		001918dc: UNCONDITIONAL_JUMP
		00191ae4: UNCONDITIONAL_JUMP
		00191cec: UNCONDITIONAL_JUMP
		00191fd4: UNCONDITIONAL_JUMP
		001921dc: UNCONDITIONAL_JUMP
		001927e0: UNCONDITIONAL_JUMP
		00192984: UNCONDITIONAL_JUMP
		00192b8c: UNCONDITIONAL_JUMP
		00192d94: UNCONDITIONAL_JUMP
		00193328: UNCONDITIONAL_JUMP
		0019353c: UNCONDITIONAL_JUMP
		00193b40: UNCONDITIONAL_JUMP
		00194070: UNCONDITIONAL_JUMP
		00194338: CONDITIONAL_JUMP
		00194340: FALL_THROUGH
 	0019449c sourceline 0x1bda
 	001944a4 push op
 	001944ac mov ax,0x427
 	001944b8 farpush ax
 	001944c0 mov ax,0x397
 	001944cc farpush ax
 	001944d4 mov ax,0x0
 	001944e0 farpush ax
 	001944e8 mov ax,0x3
 	001944f4 farpush ax
 	001944fc mov ax,0x0
 	00194508 farpush ax
 	00194510 mov mar,0x3cef20
 	0019451c mov ax,mar
 	00194528 mov op,ax
 	00194530 setfuncargs 0x5
 	00194538 mov ax,0x536f20
 	00194544 farcall ax
 	0019454c farsubsp 0x5
 	00194554 pop op
 	0019455c sourceline 0x1bdb
 	00194564 push op
 	0019456c mov ax,0x2
 	00194578 farpush ax
 	00194580 mov mar,0x3cef20
 	0019458c mov ax,mar
 	00194598 mov op,ax
 	001945a0 setfuncargs 0x1
 	001945a8 mov ax,0x51ef20
 	001945b4 farcall ax
 	001945bc farsubsp 0x1
 	001945c4 pop op
 	001945cc sourceline 0x1bdc
 	001945d4 mov mar,0x3cef20
 	001945e0 mov ax,mar
 	001945ec push op
 	001945f4 mov op,ax
 	001945fc setfuncargs 0x0
 	00194604 mov ax,0x78ef20
 	00194610 farcall ax
 	00194618 pop op
 	00194620 mov mar,sp
 	0019462c memwrite4 ax
 	00194634 add sp,0x4
 	00194640 stackptr 0x4
 	00194648 memread4 ax
 	00194650 push ax
 	00194658 mov ax,0x8
 	00194664 pop bx
 	0019466c add bx,ax
 	00194678 mov ax,bx
 	00194684 mov bx,ax
 	00194690 mov mar,0x3cef20
 	0019469c mov ax,mar
 	001946a8 push op
 	001946b0 mov op,ax
 	001946b8 farpush bx
 	001946c0 setfuncargs 0x1
 	001946c8 mov ax,0x526f20
 	001946d4 farcall ax
 	001946dc farsubsp 0x1
 	001946e4 pop op
 	001946ec sourceline 0x1bdd
 	001946f4 mov mar,0x3cef20
 	00194700 mov ax,mar
 	0019470c push op
 	00194714 mov op,ax
 	0019471c setfuncargs 0x0
 	00194724 mov ax,0xb36f20
 	00194730 farcall ax
 	00194738 pop op
 	00194740 mov mar,sp
 	0019474c memwrite4 ax
 	00194754 add sp,0x4
 	00194760 stackptr 0x4
 	00194768 memread4 ax
 	00194770 push ax
 	00194778 mov ax,0x8
 	00194784 pop bx
 	0019478c add bx,ax
 	00194798 mov ax,bx
 	001947a4 mov bx,ax
 	001947b0 mov mar,0x3cef20
 	001947bc mov ax,mar
 	001947c8 push op
 	001947d0 mov op,ax
 	001947d8 farpush bx
 	001947e0 setfuncargs 0x1
 	001947e8 mov ax,0x70ef20
 	001947f4 farcall ax
 	001947fc farsubsp 0x1
 	00194804 pop op
 	0019480c sourceline 0x1bde
 	00194814 mov ax,0x1
 	00194820 mov bx,ax
 	0019482c mov mar,0x3cef20
 	00194838 mov ax,mar
 	00194844 push op
 	0019484c mov op,ax
 	00194854 farpush bx
 	0019485c setfuncargs 0x1
 	00194864 mov ax,0x766f20
 	00194870 farcall ax
 	00194878 farsubsp 0x1
 	00194880 pop op
 	00194888 sourceline 0x1bdf
 	00194890 push op
 	00194898 mov ax,0x427
 	001948a4 farpush ax
 	001948ac mov ax,0x397
 	001948b8 farpush ax
 	001948c0 mov ax,0x0
 	001948cc farpush ax
 	001948d4 mov ax,0x3
 	001948e0 farpush ax
 	001948e8 mov ax,0x0
 	001948f4 farpush ax
 	001948fc mov mar,0xb76f20
 	00194908 mov ax,mar
 	00194914 mov op,ax
 	0019491c setfuncargs 0x5
 	00194924 mov ax,0x536f20
 	00194930 farcall ax
 	00194938 farsubsp 0x5
 	00194940 pop op
 	00194948 sourceline 0x1be0
 	00194950 push op
 	00194958 mov ax,0x63
 	00194964 farpush ax
 	0019496c mov mar,0xb76f20
 	00194978 mov ax,mar
 	00194984 mov op,ax
 	0019498c setfuncargs 0x1
 	00194994 mov ax,0x51ef20
 	001949a0 farcall ax
 	001949a8 farsubsp 0x1
 	001949b0 pop op
 	001949b8 sourceline 0x1be1
 	001949c0 mov mar,0xb76f20
 	001949cc mov ax,mar
 	001949d8 push op
 	001949e0 mov op,ax
 	001949e8 setfuncargs 0x0
 	001949f0 mov ax,0x78ef20
 	001949fc farcall ax
 	00194a04 pop op
 	00194a0c push ax
 	00194a14 mov ax,0x3
 	00194a20 pop bx
 	00194a28 sub bx,ax
 	00194a34 mov ax,bx
 	00194a40 mov bx,ax
 	00194a4c mov mar,0xb76f20
 	00194a58 mov ax,mar
 	00194a64 push op
 	00194a6c mov op,ax
 	00194a74 farpush bx
 	00194a7c setfuncargs 0x1
 	00194a84 mov ax,0x526f20
 	00194a90 farcall ax
 	00194a98 farsubsp 0x1
 	00194aa0 pop op
 	00194aa8 sourceline 0x1be2
 	00194ab0 mov mar,0xb76f20
 	00194abc mov ax,mar
 	00194ac8 push op
 	00194ad0 mov op,ax
 	00194ad8 setfuncargs 0x0
 	00194ae0 mov ax,0xb36f20
 	00194aec farcall ax
 	00194af4 pop op
 	00194afc push ax
 	00194b04 mov ax,0x4
 	00194b10 pop bx
 	00194b18 sub bx,ax
 	00194b24 mov ax,bx
 	00194b30 mov bx,ax
 	00194b3c mov mar,0xb76f20
 	00194b48 mov ax,mar
 	00194b54 push op
 	00194b5c mov op,ax
 	00194b64 farpush bx
 	00194b6c setfuncargs 0x1
 	00194b74 mov ax,0x70ef20
 	00194b80 farcall ax
 	00194b88 farsubsp 0x1
 	00194b90 pop op
 	00194b98 sourceline 0x1be3
 	00194ba0 push op
 	00194ba8 mov ax,0x426
 	00194bb4 farpush ax
 	00194bbc mov ax,0x398
 	00194bc8 farpush ax
 	00194bd0 mov ax,0x1
 	00194bdc farpush ax
 	00194be4 mov ax,0x3
 	00194bf0 farpush ax
 	00194bf8 mov ax,0x0
 	00194c04 farpush ax
 	00194c0c mov mar,0xb76f20
 	00194c18 mov ax,mar
 	00194c24 mov op,ax
 	00194c2c setfuncargs 0x5
 	00194c34 mov ax,0x536f20
 	00194c40 farcall ax
 	00194c48 farsubsp 0x5
 	00194c50 pop op
 	00194c58 sourceline 0x1be4
 	00194c60 sub sp,0x10
 	00194c6c jmp 0x00199214
		00199214: UNCONDITIONAL_JUMP

	[00194c74]
		0018ea68: CONDITIONAL_JUMP
 	00194c74 sourceline 0x1be8
 	00194c7c push op
 	00194c84 mov ax,0x68
 	00194c90 farpush ax
 	00194c98 mov mar,0xb76f20
 	00194ca4 mov ax,mar
 	00194cb0 mov op,ax
 	00194cb8 setfuncargs 0x1
 	00194cc0 mov ax,0x51ef20
 	00194ccc farcall ax
 	00194cd4 farsubsp 0x1
 	00194cdc pop op
 	00194ce4 sourceline 0x1be9
 	00194cec mov mar,0xb76f20
 	00194cf8 mov ax,mar
 	00194d04 push op
 	00194d0c mov op,ax
 	00194d14 setfuncargs 0x0
 	00194d1c mov ax,0x78ef20
 	00194d28 farcall ax
 	00194d30 pop op
 	00194d38 push ax
 	00194d40 mov ax,0x3
 	00194d4c pop bx
 	00194d54 add bx,ax
 	00194d60 mov ax,bx
 	00194d6c mov bx,ax
 	00194d78 mov mar,0xb76f20
 	00194d84 mov ax,mar
 	00194d90 push op
 	00194d98 mov op,ax
 	00194da0 farpush bx
 	00194da8 setfuncargs 0x1
 	00194db0 mov ax,0x526f20
 	00194dbc farcall ax
 	00194dc4 farsubsp 0x1
 	00194dcc pop op
 	00194dd4 sourceline 0x1bea
 	00194ddc mov mar,0xb76f20
 	00194de8 mov ax,mar
 	00194df4 push op
 	00194dfc mov op,ax
 	00194e04 setfuncargs 0x0
 	00194e0c mov ax,0xb36f20
 	00194e18 farcall ax
 	00194e20 pop op
 	00194e28 push ax
 	00194e30 mov ax,0x4
 	00194e3c pop bx
 	00194e44 add bx,ax
 	00194e50 mov ax,bx
 	00194e5c mov bx,ax
 	00194e68 mov mar,0xb76f20
 	00194e74 mov ax,mar
 	00194e80 push op
 	00194e88 mov op,ax
 	00194e90 farpush bx
 	00194e98 setfuncargs 0x1
 	00194ea0 mov ax,0x70ef20
 	00194eac farcall ax
 	00194eb4 farsubsp 0x1
 	00194ebc pop op
 	00194ec4 sourceline 0x1beb
 	00194ecc push op
 	00194ed4 mov ax,0x426
 	00194ee0 farpush ax
 	00194ee8 mov ax,0x398
 	00194ef4 farpush ax
 	00194efc mov ax,0x0
 	00194f08 farpush ax
 	00194f10 mov ax,0x3
 	00194f1c farpush ax
 	00194f24 mov ax,0x0
 	00194f30 farpush ax
 	00194f38 mov mar,0xb76f20
 	00194f44 mov ax,mar
 	00194f50 mov op,ax
 	00194f58 setfuncargs 0x5
 	00194f60 mov ax,0x536f20
 	00194f6c farcall ax
 	00194f74 farsubsp 0x5
 	00194f7c pop op
 	00194f84 sourceline 0x1bec
 	00194f8c mov ax,0x3
 	00194f98 mov bx,ax
 	00194fa4 mov mar,0x3cef20
 	00194fb0 mov ax,mar
 	00194fbc push op
 	00194fc4 mov op,ax
 	00194fcc farpush bx
 	00194fd4 setfuncargs 0x1
 	00194fdc mov ax,0x69ef20
 	00194fe8 farcall ax
 	00194ff0 farsubsp 0x1
 	00194ff8 pop op
 	00195000 sourceline 0x1bed
 	00195008 push op
 	00195010 mov ax,0xda
 	0019501c farpush ax
 	00195024 mov mar,0x3cef20
 	00195030 mov ax,mar
 	0019503c mov op,ax
 	00195044 setfuncargs 0x1
 	0019504c mov ax,0x51ef20
 	00195058 farcall ax
 	00195060 farsubsp 0x1
 	00195068 pop op
 	00195070 sourceline 0x1bee
 	00195078 mov mar,0x3cef20
 	00195084 mov ax,mar
 	00195090 push op
 	00195098 mov op,ax
 	001950a0 setfuncargs 0x0
 	001950a8 mov ax,0x78ef20
 	001950b4 farcall ax
 	001950bc pop op
 	001950c4 mov mar,sp
 	001950d0 memwrite4 ax
 	001950d8 add sp,0x4
 	001950e4 stackptr 0x4
 	001950ec memread4 ax
 	001950f4 push ax
 	001950fc mov ax,0x8
 	00195108 pop bx
 	00195110 sub bx,ax
 	0019511c mov ax,bx
 	00195128 mov bx,ax
 	00195134 mov mar,0x3cef20
 	00195140 mov ax,mar
 	0019514c push op
 	00195154 mov op,ax
 	0019515c farpush bx
 	00195164 setfuncargs 0x1
 	0019516c mov ax,0x526f20
 	00195178 farcall ax
 	00195180 farsubsp 0x1
 	00195188 pop op
 	00195190 sourceline 0x1bef
 	00195198 mov mar,0x3cef20
 	001951a4 mov ax,mar
 	001951b0 push op
 	001951b8 mov op,ax
 	001951c0 setfuncargs 0x0
 	001951c8 mov ax,0xb36f20
 	001951d4 farcall ax
 	001951dc pop op
 	001951e4 mov mar,sp
 	001951f0 memwrite4 ax
 	001951f8 add sp,0x4
 	00195204 stackptr 0x4
 	0019520c memread4 ax
 	00195214 push ax
 	0019521c mov ax,0x8
 	00195228 pop bx
 	00195230 sub bx,ax
 	0019523c mov ax,bx
 	00195248 mov bx,ax
 	00195254 mov mar,0x3cef20
 	00195260 mov ax,mar
 	0019526c push op
 	00195274 mov op,ax
 	0019527c farpush bx
 	00195284 setfuncargs 0x1
 	0019528c mov ax,0x70ef20
 	00195298 farcall ax
 	001952a0 farsubsp 0x1
 	001952a8 pop op
 	001952b0 sourceline 0x1bf0
 	001952b8 push op
 	001952c0 mov ax,0x426
 	001952cc farpush ax
 	001952d4 mov ax,0x397
 	001952e0 farpush ax
 	001952e8 mov ax,0x0
 	001952f4 farpush ax
 	001952fc mov ax,0x3
 	00195308 farpush ax
 	00195310 mov ax,0x0
 	0019531c farpush ax
 	00195324 mov mar,0x3cef20
 	00195330 mov ax,mar
 	0019533c mov op,ax
 	00195344 setfuncargs 0x5
 	0019534c mov ax,0x536f20
 	00195358 farcall ax
 	00195360 farsubsp 0x5
 	00195368 pop op
 	00195370 sourceline 0x1bf1
 	00195378 mov mar,0x3cef20
 	00195384 mov ax,mar
 	00195390 push op
 	00195398 mov op,ax
 	001953a0 setfuncargs 0x0
 	001953a8 mov ax,0x89ef20
 	001953b4 farcall ax
 	001953bc pop op
 	001953c4 push ax
 	001953cc mov mar,0x9def20
 	001953d8 mov ax,mar
 	001953e4 pop bx
 	001953ec cmpeq bx,ax
 	001953f8 mov ax,bx
 	00195404 jnz 0x001954c0
		001954c0: CONDITIONAL_JUMP
		0019540c: FALL_THROUGH

	[0019540c]
		00194c74: FALL_THROUGH
 	0019540c push ax
 	00195414 mov mar,0x3cef20
 	00195420 mov ax,mar
 	0019542c push op
 	00195434 mov op,ax
 	0019543c setfuncargs 0x0
 	00195444 mov ax,0x89ef20
 	00195450 farcall ax
 	00195458 pop op
 	00195460 push ax
 	00195468 mov mar,0x8fef20
 	00195474 mov ax,mar
 	00195480 pop bx
 	00195488 cmpeq bx,ax
 	00195494 mov ax,bx
 	001954a0 pop bx
 	001954a8 lor bx,ax
 	001954b4 mov ax,bx
		001954c0: FALL_THROUGH

	[001954c0]
		00194c74: CONDITIONAL_JUMP
		0019540c: FALL_THROUGH
 	001954c0 jnz 0x0019557c
		0019557c: CONDITIONAL_JUMP
		001954c8: FALL_THROUGH

	[001954c8]
		001954c0: FALL_THROUGH
 	001954c8 push ax
 	001954d0 mov mar,0x3cef20
 	001954dc mov ax,mar
 	001954e8 push op
 	001954f0 mov op,ax
 	001954f8 setfuncargs 0x0
 	00195500 mov ax,0x89ef20
 	0019550c farcall ax
 	00195514 pop op
 	0019551c push ax
 	00195524 mov mar,0x846f20
 	00195530 mov ax,mar
 	0019553c pop bx
 	00195544 cmpeq bx,ax
 	00195550 mov ax,bx
 	0019555c pop bx
 	00195564 lor bx,ax
 	00195570 mov ax,bx
		0019557c: FALL_THROUGH

	[0019557c]
		001954c0: CONDITIONAL_JUMP
		001954c8: FALL_THROUGH
 	0019557c jz 0x001956f0
		001956f0: CONDITIONAL_JUMP
		00195584: FALL_THROUGH

	[00195584]
		0019557c: FALL_THROUGH
 	00195584 sourceline 0x1bf3
 	0019558c push op
 	00195594 mov ax,0x2c19c2
 	001955a0 farpush ax
 	001955a8 mov mar,0x3cef20
 	001955b4 mov ax,mar
 	001955c0 mov op,ax
 	001955c8 setfuncargs 0x1
 	001955d0 mov ax,0x6f6f20
 	001955dc farcall ax
 	001955e4 farsubsp 0x1
 	001955ec pop op
 	001955f4 sourceline 0x1bf4
 	001955fc push op
 	00195604 mov ax,0x2c17cd
 	00195610 farpush ax
 	00195618 mov mar,0xb76f20
 	00195624 mov ax,mar
 	00195630 mov op,ax
 	00195638 setfuncargs 0x1
 	00195640 mov ax,0x6f6f20
 	0019564c farcall ax
 	00195654 farsubsp 0x1
 	0019565c pop op
 	00195664 sourceline 0x1bf5
 	0019566c mov ax,0x0
 	00195678 mov bx,ax
 	00195684 mov mar,0x3cef20
 	00195690 mov ax,mar
 	0019569c push op
 	001956a4 mov op,ax
 	001956ac farpush bx
 	001956b4 setfuncargs 0x1
 	001956bc mov ax,0x436f20
 	001956c8 farcall ax
 	001956d0 farsubsp 0x1
 	001956d8 pop op
 	001956e0 sourceline 0x1bf6
 	001956e8 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[001956f0]
		0019557c: CONDITIONAL_JUMP
 	001956f0 sourceline 0x1bf8
 	001956f8 mov mar,0x3cef20
 	00195704 mov ax,mar
 	00195710 push op
 	00195718 mov op,ax
 	00195720 setfuncargs 0x0
 	00195728 mov ax,0x89ef20
 	00195734 farcall ax
 	0019573c pop op
 	00195744 push ax
 	0019574c mov mar,0x8cef20
 	00195758 mov ax,mar
 	00195764 pop bx
 	0019576c cmpeq bx,ax
 	00195778 mov ax,bx
 	00195784 jz 0x001958f8
		001958f8: CONDITIONAL_JUMP
		0019578c: FALL_THROUGH

	[0019578c]
		001956f0: FALL_THROUGH
 	0019578c sourceline 0x1bfa
 	00195794 push op
 	0019579c mov ax,0x2c17d7
 	001957a8 farpush ax
 	001957b0 mov mar,0x3cef20
 	001957bc mov ax,mar
 	001957c8 mov op,ax
 	001957d0 setfuncargs 0x1
 	001957d8 mov ax,0x6f6f20
 	001957e4 farcall ax
 	001957ec farsubsp 0x1
 	001957f4 pop op
 	001957fc sourceline 0x1bfb
 	00195804 push op
 	0019580c mov ax,0x2c1818
 	00195818 farpush ax
 	00195820 mov mar,0xb76f20
 	0019582c mov ax,mar
 	00195838 mov op,ax
 	00195840 setfuncargs 0x1
 	00195848 mov ax,0x6f6f20
 	00195854 farcall ax
 	0019585c farsubsp 0x1
 	00195864 pop op
 	0019586c sourceline 0x1bfc
 	00195874 mov ax,0x0
 	00195880 mov bx,ax
 	0019588c mov mar,0x3cef20
 	00195898 mov ax,mar
 	001958a4 push op
 	001958ac mov op,ax
 	001958b4 farpush bx
 	001958bc setfuncargs 0x1
 	001958c4 mov ax,0x436f20
 	001958d0 farcall ax
 	001958d8 farsubsp 0x1
 	001958e0 pop op
 	001958e8 sourceline 0x1bfd
 	001958f0 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[001958f8]
		001956f0: CONDITIONAL_JUMP
 	001958f8 sourceline 0x1bff
 	00195900 mov mar,0x3cef20
 	0019590c mov ax,mar
 	00195918 push op
 	00195920 mov op,ax
 	00195928 setfuncargs 0x0
 	00195930 mov ax,0x89ef20
 	0019593c farcall ax
 	00195944 pop op
 	0019594c push ax
 	00195954 mov mar,0x8d6f20
 	00195960 mov ax,mar
 	0019596c pop bx
 	00195974 cmpeq bx,ax
 	00195980 mov ax,bx
 	0019598c jz 0x00195b00
		00195b00: CONDITIONAL_JUMP
		00195994: FALL_THROUGH

	[00195994]
		001958f8: FALL_THROUGH
 	00195994 sourceline 0x1c01
 	0019599c push op
 	001959a4 mov ax,0x2c1844
 	001959b0 farpush ax
 	001959b8 mov mar,0x3cef20
 	001959c4 mov ax,mar
 	001959d0 mov op,ax
 	001959d8 setfuncargs 0x1
 	001959e0 mov ax,0x6f6f20
 	001959ec farcall ax
 	001959f4 farsubsp 0x1
 	001959fc pop op
 	00195a04 sourceline 0x1c02
 	00195a0c push op
 	00195a14 mov ax,0x2c187d
 	00195a20 farpush ax
 	00195a28 mov mar,0xb76f20
 	00195a34 mov ax,mar
 	00195a40 mov op,ax
 	00195a48 setfuncargs 0x1
 	00195a50 mov ax,0x6f6f20
 	00195a5c farcall ax
 	00195a64 farsubsp 0x1
 	00195a6c pop op
 	00195a74 sourceline 0x1c03
 	00195a7c mov ax,0x0
 	00195a88 mov bx,ax
 	00195a94 mov mar,0x3cef20
 	00195aa0 mov ax,mar
 	00195aac push op
 	00195ab4 mov op,ax
 	00195abc farpush bx
 	00195ac4 setfuncargs 0x1
 	00195acc mov ax,0x436f20
 	00195ad8 farcall ax
 	00195ae0 farsubsp 0x1
 	00195ae8 pop op
 	00195af0 sourceline 0x1c04
 	00195af8 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[00195b00]
		001958f8: CONDITIONAL_JUMP
 	00195b00 sourceline 0x1c06
 	00195b08 mov mar,0x3cef20
 	00195b14 mov ax,mar
 	00195b20 push op
 	00195b28 mov op,ax
 	00195b30 setfuncargs 0x0
 	00195b38 mov ax,0x89ef20
 	00195b44 farcall ax
 	00195b4c pop op
 	00195b54 push ax
 	00195b5c mov mar,0x8b6f20
 	00195b68 mov ax,mar
 	00195b74 pop bx
 	00195b7c cmpeq bx,ax
 	00195b88 mov ax,bx
 	00195b94 jz 0x00195de8
		00195de8: CONDITIONAL_JUMP
		00195b9c: FALL_THROUGH

	[00195b9c]
		00195b00: FALL_THROUGH
 	00195b9c sourceline 0x1c08
 	00195ba4 push op
 	00195bac mov ax,0x2c19c2
 	00195bb8 farpush ax
 	00195bc0 mov mar,0x3cef20
 	00195bcc mov ax,mar
 	00195bd8 mov op,ax
 	00195be0 setfuncargs 0x1
 	00195be8 mov ax,0x6f6f20
 	00195bf4 farcall ax
 	00195bfc farsubsp 0x1
 	00195c04 pop op
 	00195c0c sourceline 0x1c09
 	00195c14 push op
 	00195c1c mov ax,0x2c18eb
 	00195c28 farpush ax
 	00195c30 mov mar,0xb76f20
 	00195c3c mov ax,mar
 	00195c48 mov op,ax
 	00195c50 setfuncargs 0x1
 	00195c58 mov ax,0x6f6f20
 	00195c64 farcall ax
 	00195c6c farsubsp 0x1
 	00195c74 pop op
 	00195c7c sourceline 0x1c0a
 	00195c84 push op
 	00195c8c mov ax,0x2c192c
 	00195c98 farpush ax
 	00195ca0 mov mar,0x3cef20
 	00195cac mov ax,mar
 	00195cb8 mov op,ax
 	00195cc0 setfuncargs 0x1
 	00195cc8 mov ax,0x6f6f20
 	00195cd4 farcall ax
 	00195cdc farsubsp 0x1
 	00195ce4 pop op
 	00195cec sourceline 0x1c0b
 	00195cf4 push op
 	00195cfc mov ax,0x2c1949
 	00195d08 farpush ax
 	00195d10 mov mar,0xb76f20
 	00195d1c mov ax,mar
 	00195d28 mov op,ax
 	00195d30 setfuncargs 0x1
 	00195d38 mov ax,0x6f6f20
 	00195d44 farcall ax
 	00195d4c farsubsp 0x1
 	00195d54 pop op
 	00195d5c sourceline 0x1c0c
 	00195d64 mov ax,0x0
 	00195d70 mov bx,ax
 	00195d7c mov mar,0x3cef20
 	00195d88 mov ax,mar
 	00195d94 push op
 	00195d9c mov op,ax
 	00195da4 farpush bx
 	00195dac setfuncargs 0x1
 	00195db4 mov ax,0x436f20
 	00195dc0 farcall ax
 	00195dc8 farsubsp 0x1
 	00195dd0 pop op
 	00195dd8 sourceline 0x1c0d
 	00195de0 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[00195de8]
		00195b00: CONDITIONAL_JUMP
 	00195de8 sourceline 0x1c0f
 	00195df0 mov mar,0x3cef20
 	00195dfc mov ax,mar
 	00195e08 push op
 	00195e10 mov op,ax
 	00195e18 setfuncargs 0x0
 	00195e20 mov ax,0x89ef20
 	00195e2c farcall ax
 	00195e34 pop op
 	00195e3c push ax
 	00195e44 mov mar,0x98ef20
 	00195e50 mov ax,mar
 	00195e5c pop bx
 	00195e64 cmpeq bx,ax
 	00195e70 mov ax,bx
 	00195e7c jz 0x00195ff0
		00195ff0: CONDITIONAL_JUMP
		00195e84: FALL_THROUGH

	[00195e84]
		00195de8: FALL_THROUGH
 	00195e84 sourceline 0x1c11
 	00195e8c push op
 	00195e94 mov ax,0x2c1966
 	00195ea0 farpush ax
 	00195ea8 mov mar,0x3cef20
 	00195eb4 mov ax,mar
 	00195ec0 mov op,ax
 	00195ec8 setfuncargs 0x1
 	00195ed0 mov ax,0x6f6f20
 	00195edc farcall ax
 	00195ee4 farsubsp 0x1
 	00195eec pop op
 	00195ef4 sourceline 0x1c12
 	00195efc push op
 	00195f04 mov ax,0x2c1991
 	00195f10 farpush ax
 	00195f18 mov mar,0xb76f20
 	00195f24 mov ax,mar
 	00195f30 mov op,ax
 	00195f38 setfuncargs 0x1
 	00195f40 mov ax,0x6f6f20
 	00195f4c farcall ax
 	00195f54 farsubsp 0x1
 	00195f5c pop op
 	00195f64 sourceline 0x1c13
 	00195f6c mov ax,0x0
 	00195f78 mov bx,ax
 	00195f84 mov mar,0x3cef20
 	00195f90 mov ax,mar
 	00195f9c push op
 	00195fa4 mov op,ax
 	00195fac farpush bx
 	00195fb4 setfuncargs 0x1
 	00195fbc mov ax,0x436f20
 	00195fc8 farcall ax
 	00195fd0 farsubsp 0x1
 	00195fd8 pop op
 	00195fe0 sourceline 0x1c14
 	00195fe8 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[00195ff0]
		00195de8: CONDITIONAL_JUMP
 	00195ff0 sourceline 0x1c16
 	00195ff8 mov mar,0x3cef20
 	00196004 mov ax,mar
 	00196010 push op
 	00196018 mov op,ax
 	00196020 setfuncargs 0x0
 	00196028 mov ax,0x89ef20
 	00196034 farcall ax
 	0019603c pop op
 	00196044 push ax
 	0019604c mov mar,0x8bef20
 	00196058 mov ax,mar
 	00196064 pop bx
 	0019606c cmpeq bx,ax
 	00196078 mov ax,bx
 	00196084 jz 0x001961f8
		001961f8: CONDITIONAL_JUMP
		0019608c: FALL_THROUGH

	[0019608c]
		00195ff0: FALL_THROUGH
 	0019608c sourceline 0x1c18
 	00196094 push op
 	0019609c mov ax,0x2c19c2
 	001960a8 farpush ax
 	001960b0 mov mar,0x3cef20
 	001960bc mov ax,mar
 	001960c8 mov op,ax
 	001960d0 setfuncargs 0x1
 	001960d8 mov ax,0x6f6f20
 	001960e4 farcall ax
 	001960ec farsubsp 0x1
 	001960f4 pop op
 	001960fc sourceline 0x1c19
 	00196104 push op
 	0019610c mov ax,0x2c19ed
 	00196118 farpush ax
 	00196120 mov mar,0xb76f20
 	0019612c mov ax,mar
 	00196138 mov op,ax
 	00196140 setfuncargs 0x1
 	00196148 mov ax,0x6f6f20
 	00196154 farcall ax
 	0019615c farsubsp 0x1
 	00196164 pop op
 	0019616c sourceline 0x1c1a
 	00196174 mov ax,0x0
 	00196180 mov bx,ax
 	0019618c mov mar,0x3cef20
 	00196198 mov ax,mar
 	001961a4 push op
 	001961ac mov op,ax
 	001961b4 farpush bx
 	001961bc setfuncargs 0x1
 	001961c4 mov ax,0x436f20
 	001961d0 farcall ax
 	001961d8 farsubsp 0x1
 	001961e0 pop op
 	001961e8 sourceline 0x1c1b
 	001961f0 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[001961f8]
		00195ff0: CONDITIONAL_JUMP
 	001961f8 sourceline 0x1c1d
 	00196200 mov mar,0x3cef20
 	0019620c mov ax,mar
 	00196218 push op
 	00196220 mov op,ax
 	00196228 setfuncargs 0x0
 	00196230 mov ax,0x89ef20
 	0019623c farcall ax
 	00196244 pop op
 	0019624c push ax
 	00196254 mov mar,0x8c6f20
 	00196260 mov ax,mar
 	0019626c pop bx
 	00196274 cmpeq bx,ax
 	00196280 mov ax,bx
 	0019628c jz 0x001964e0
		001964e0: CONDITIONAL_JUMP
		00196294: FALL_THROUGH

	[00196294]
		001961f8: FALL_THROUGH
 	00196294 sourceline 0x1c1f
 	0019629c push op
 	001962a4 mov ax,0x2c1a3c
 	001962b0 farpush ax
 	001962b8 mov mar,0x3cef20
 	001962c4 mov ax,mar
 	001962d0 mov op,ax
 	001962d8 setfuncargs 0x1
 	001962e0 mov ax,0x6f6f20
 	001962ec farcall ax
 	001962f4 farsubsp 0x1
 	001962fc pop op
 	00196304 sourceline 0x1c20
 	0019630c push op
 	00196314 mov ax,0x2c1a68
 	00196320 farpush ax
 	00196328 mov mar,0xb76f20
 	00196334 mov ax,mar
 	00196340 mov op,ax
 	00196348 setfuncargs 0x1
 	00196350 mov ax,0x6f6f20
 	0019635c farcall ax
 	00196364 farsubsp 0x1
 	0019636c pop op
 	00196374 sourceline 0x1c21
 	0019637c push op
 	00196384 mov ax,0x2c1af0
 	00196390 farpush ax
 	00196398 mov mar,0x3cef20
 	001963a4 mov ax,mar
 	001963b0 mov op,ax
 	001963b8 setfuncargs 0x1
 	001963c0 mov ax,0x6f6f20
 	001963cc farcall ax
 	001963d4 farsubsp 0x1
 	001963dc pop op
 	001963e4 sourceline 0x1c22
 	001963ec push op
 	001963f4 mov ax,0x2c1b15
 	00196400 farpush ax
 	00196408 mov mar,0xb76f20
 	00196414 mov ax,mar
 	00196420 mov op,ax
 	00196428 setfuncargs 0x1
 	00196430 mov ax,0x6f6f20
 	0019643c farcall ax
 	00196444 farsubsp 0x1
 	0019644c pop op
 	00196454 sourceline 0x1c23
 	0019645c mov ax,0x0
 	00196468 mov bx,ax
 	00196474 mov mar,0x3cef20
 	00196480 mov ax,mar
 	0019648c push op
 	00196494 mov op,ax
 	0019649c farpush bx
 	001964a4 setfuncargs 0x1
 	001964ac mov ax,0x436f20
 	001964b8 farcall ax
 	001964c0 farsubsp 0x1
 	001964c8 pop op
 	001964d0 sourceline 0x1c24
 	001964d8 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[001964e0]
		001961f8: CONDITIONAL_JUMP
 	001964e0 sourceline 0x1c26
 	001964e8 mov mar,0x3cef20
 	001964f4 mov ax,mar
 	00196500 push op
 	00196508 mov op,ax
 	00196510 setfuncargs 0x0
 	00196518 mov ax,0x89ef20
 	00196524 farcall ax
 	0019652c pop op
 	00196534 push ax
 	0019653c mov mar,0x8a6f20
 	00196548 mov ax,mar
 	00196554 pop bx
 	0019655c cmpeq bx,ax
 	00196568 mov ax,bx
 	00196574 jz 0x001966e8
		001966e8: CONDITIONAL_JUMP
		0019657c: FALL_THROUGH

	[0019657c]
		001964e0: FALL_THROUGH
 	0019657c sourceline 0x1c28
 	00196584 push op
 	0019658c mov ax,0x2c1b48
 	00196598 farpush ax
 	001965a0 mov mar,0x3cef20
 	001965ac mov ax,mar
 	001965b8 mov op,ax
 	001965c0 setfuncargs 0x1
 	001965c8 mov ax,0x6f6f20
 	001965d4 farcall ax
 	001965dc farsubsp 0x1
 	001965e4 pop op
 	001965ec sourceline 0x1c29
 	001965f4 push op
 	001965fc mov ax,0x2c1b9c
 	00196608 farpush ax
 	00196610 mov mar,0xb76f20
 	0019661c mov ax,mar
 	00196628 mov op,ax
 	00196630 setfuncargs 0x1
 	00196638 mov ax,0x6f6f20
 	00196644 farcall ax
 	0019664c farsubsp 0x1
 	00196654 pop op
 	0019665c sourceline 0x1c2a
 	00196664 mov ax,0x0
 	00196670 mov bx,ax
 	0019667c mov mar,0x3cef20
 	00196688 mov ax,mar
 	00196694 push op
 	0019669c mov op,ax
 	001966a4 farpush bx
 	001966ac setfuncargs 0x1
 	001966b4 mov ax,0x436f20
 	001966c0 farcall ax
 	001966c8 farsubsp 0x1
 	001966d0 pop op
 	001966d8 sourceline 0x1c2b
 	001966e0 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[001966e8]
		001964e0: CONDITIONAL_JUMP
 	001966e8 sourceline 0x1c2d
 	001966f0 mov mar,0x3cef20
 	001966fc mov ax,mar
 	00196708 push op
 	00196710 mov op,ax
 	00196718 setfuncargs 0x0
 	00196720 mov ax,0x89ef20
 	0019672c farcall ax
 	00196734 pop op
 	0019673c push ax
 	00196744 mov mar,0x9f6f20
 	00196750 mov ax,mar
 	0019675c pop bx
 	00196764 cmpeq bx,ax
 	00196770 mov ax,bx
 	0019677c jz 0x001969d0
		001969d0: CONDITIONAL_JUMP
		00196784: FALL_THROUGH

	[00196784]
		001966e8: FALL_THROUGH
 	00196784 sourceline 0x1c2f
 	0019678c push op
 	00196794 mov ax,0x2c1bad
 	001967a0 farpush ax
 	001967a8 mov mar,0x3cef20
 	001967b4 mov ax,mar
 	001967c0 mov op,ax
 	001967c8 setfuncargs 0x1
 	001967d0 mov ax,0x6f6f20
 	001967dc farcall ax
 	001967e4 farsubsp 0x1
 	001967ec pop op
 	001967f4 sourceline 0x1c30
 	001967fc push op
 	00196804 mov ax,0x2c1bc4
 	00196810 farpush ax
 	00196818 mov mar,0xb76f20
 	00196824 mov ax,mar
 	00196830 mov op,ax
 	00196838 setfuncargs 0x1
 	00196840 mov ax,0x6f6f20
 	0019684c farcall ax
 	00196854 farsubsp 0x1
 	0019685c pop op
 	00196864 sourceline 0x1c31
 	0019686c push op
 	00196874 mov ax,0x2c1c1c
 	00196880 farpush ax
 	00196888 mov mar,0x3cef20
 	00196894 mov ax,mar
 	001968a0 mov op,ax
 	001968a8 setfuncargs 0x1
 	001968b0 mov ax,0x6f6f20
 	001968bc farcall ax
 	001968c4 farsubsp 0x1
 	001968cc pop op
 	001968d4 sourceline 0x1c32
 	001968dc push op
 	001968e4 mov ax,0x2c1c4f
 	001968f0 farpush ax
 	001968f8 mov mar,0xb76f20
 	00196904 mov ax,mar
 	00196910 mov op,ax
 	00196918 setfuncargs 0x1
 	00196920 mov ax,0x6f6f20
 	0019692c farcall ax
 	00196934 farsubsp 0x1
 	0019693c pop op
 	00196944 sourceline 0x1c33
 	0019694c mov ax,0x0
 	00196958 mov bx,ax
 	00196964 mov mar,0x3cef20
 	00196970 mov ax,mar
 	0019697c push op
 	00196984 mov op,ax
 	0019698c farpush bx
 	00196994 setfuncargs 0x1
 	0019699c mov ax,0x436f20
 	001969a8 farcall ax
 	001969b0 farsubsp 0x1
 	001969b8 pop op
 	001969c0 sourceline 0x1c34
 	001969c8 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[001969d0]
		001966e8: CONDITIONAL_JUMP
 	001969d0 sourceline 0x1c36
 	001969d8 mov mar,0x3cef20
 	001969e4 mov ax,mar
 	001969f0 push op
 	001969f8 mov op,ax
 	00196a00 setfuncargs 0x0
 	00196a08 mov ax,0x89ef20
 	00196a14 farcall ax
 	00196a1c pop op
 	00196a24 push ax
 	00196a2c mov mar,0x9eef20
 	00196a38 mov ax,mar
 	00196a44 pop bx
 	00196a4c cmpeq bx,ax
 	00196a58 mov ax,bx
 	00196a64 jz 0x00196e90
		00196e90: CONDITIONAL_JUMP
		00196a6c: FALL_THROUGH

	[00196a6c]
		001969d0: FALL_THROUGH
 	00196a6c sourceline 0x1c38
 	00196a74 mov ax,0x3
 	00196a80 farpush ax
 	00196a88 setfuncargs 0x1
 	00196a90 mov ax,0x4a6f20
 	00196a9c farcall ax
 	00196aa4 farsubsp 0x1
 	00196aac mov mar,sp
 	00196ab8 memwrite4 ax
 	00196ac0 add sp,0x4
 	00196acc sourceline 0x1c39
 	00196ad4 stackptr 0x4
 	00196adc memread4 ax
 	00196ae4 push ax
 	00196aec mov ax,0x0
 	00196af8 pop bx
 	00196b00 cmpeq bx,ax
 	00196b0c mov ax,bx
 	00196b18 jz 0x00196b90
		00196b90: CONDITIONAL_JUMP
		00196b20: FALL_THROUGH

	[00196b20]
		00196a6c: FALL_THROUGH
 	00196b20 push op
 	00196b28 mov ax,0x2c4923
 	00196b34 farpush ax
 	00196b3c mov mar,0x3cef20
 	00196b48 mov ax,mar
 	00196b54 mov op,ax
 	00196b5c setfuncargs 0x1
 	00196b64 mov ax,0x6f6f20
 	00196b70 farcall ax
 	00196b78 farsubsp 0x1
 	00196b80 pop op
 	00196b88 jmp 0x00196d88
		00196d88: UNCONDITIONAL_JUMP

	[00196b90]
		00196a6c: CONDITIONAL_JUMP
 	00196b90 sourceline 0x1c3a
 	00196b98 stackptr 0x4
 	00196ba0 memread4 ax
 	00196ba8 push ax
 	00196bb0 mov ax,0x1
 	00196bbc pop bx
 	00196bc4 cmpeq bx,ax
 	00196bd0 mov ax,bx
 	00196bdc jz 0x00196c54
		00196c54: CONDITIONAL_JUMP
		00196be4: FALL_THROUGH

	[00196be4]
		00196b90: FALL_THROUGH
 	00196be4 push op
 	00196bec mov ax,0x2c4936
 	00196bf8 farpush ax
 	00196c00 mov mar,0x3cef20
 	00196c0c mov ax,mar
 	00196c18 mov op,ax
 	00196c20 setfuncargs 0x1
 	00196c28 mov ax,0x6f6f20
 	00196c34 farcall ax
 	00196c3c farsubsp 0x1
 	00196c44 pop op
 	00196c4c jmp 0x00196d88
		00196d88: UNCONDITIONAL_JUMP

	[00196c54]
		00196b90: CONDITIONAL_JUMP
 	00196c54 sourceline 0x1c3b
 	00196c5c stackptr 0x4
 	00196c64 memread4 ax
 	00196c6c push ax
 	00196c74 mov ax,0x2
 	00196c80 pop bx
 	00196c88 cmpeq bx,ax
 	00196c94 mov ax,bx
 	00196ca0 jz 0x00196d18
		00196d18: CONDITIONAL_JUMP
		00196ca8: FALL_THROUGH

	[00196ca8]
		00196c54: FALL_THROUGH
 	00196ca8 push op
 	00196cb0 mov ax,0x2c4949
 	00196cbc farpush ax
 	00196cc4 mov mar,0x3cef20
 	00196cd0 mov ax,mar
 	00196cdc mov op,ax
 	00196ce4 setfuncargs 0x1
 	00196cec mov ax,0x6f6f20
 	00196cf8 farcall ax
 	00196d00 farsubsp 0x1
 	00196d08 pop op
 	00196d10 jmp 0x00196d88
		00196d88: UNCONDITIONAL_JUMP

	[00196d18]
		00196c54: CONDITIONAL_JUMP
 	00196d18 sourceline 0x1c3c
 	00196d20 push op
 	00196d28 mov ax,0x2c495c
 	00196d34 farpush ax
 	00196d3c mov mar,0x3cef20
 	00196d48 mov ax,mar
 	00196d54 mov op,ax
 	00196d5c setfuncargs 0x1
 	00196d64 mov ax,0x6f6f20
 	00196d70 farcall ax
 	00196d78 farsubsp 0x1
 	00196d80 pop op
		00196d88: FALL_THROUGH

	[00196d88]
		00196b20: UNCONDITIONAL_JUMP
		00196be4: UNCONDITIONAL_JUMP
		00196ca8: UNCONDITIONAL_JUMP
		00196d18: FALL_THROUGH
 	00196d88 sourceline 0x1c3e
 	00196d90 push op
 	00196d98 mov ax,0x2c1cb6
 	00196da4 farpush ax
 	00196dac mov mar,0xb76f20
 	00196db8 mov ax,mar
 	00196dc4 mov op,ax
 	00196dcc setfuncargs 0x1
 	00196dd4 mov ax,0x6f6f20
 	00196de0 farcall ax
 	00196de8 farsubsp 0x1
 	00196df0 pop op
 	00196df8 sourceline 0x1c3f
 	00196e00 mov ax,0x0
 	00196e0c mov bx,ax
 	00196e18 mov mar,0x3cef20
 	00196e24 mov ax,mar
 	00196e30 push op
 	00196e38 mov op,ax
 	00196e40 farpush bx
 	00196e48 setfuncargs 0x1
 	00196e50 mov ax,0x436f20
 	00196e5c farcall ax
 	00196e64 farsubsp 0x1
 	00196e6c pop op
 	00196e74 sourceline 0x1c40
 	00196e7c sub sp,0x4
 	00196e88 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[00196e90]
		001969d0: CONDITIONAL_JUMP
 	00196e90 sourceline 0x1c42
 	00196e98 mov mar,0x3cef20
 	00196ea4 mov ax,mar
 	00196eb0 push op
 	00196eb8 mov op,ax
 	00196ec0 setfuncargs 0x0
 	00196ec8 mov ax,0x89ef20
 	00196ed4 farcall ax
 	00196edc pop op
 	00196ee4 push ax
 	00196eec mov mar,0x99ef20
 	00196ef8 mov ax,mar
 	00196f04 pop bx
 	00196f0c cmpeq bx,ax
 	00196f18 mov ax,bx
 	00196f24 jz 0x00197098
		00197098: CONDITIONAL_JUMP
		00196f2c: FALL_THROUGH

	[00196f2c]
		00196e90: FALL_THROUGH
 	00196f2c sourceline 0x1c44
 	00196f34 push op
 	00196f3c mov ax,0x2c1cf1
 	00196f48 farpush ax
 	00196f50 mov mar,0x3cef20
 	00196f5c mov ax,mar
 	00196f68 mov op,ax
 	00196f70 setfuncargs 0x1
 	00196f78 mov ax,0x6f6f20
 	00196f84 farcall ax
 	00196f8c farsubsp 0x1
 	00196f94 pop op
 	00196f9c sourceline 0x1c45
 	00196fa4 push op
 	00196fac mov ax,0x2c1d12
 	00196fb8 farpush ax
 	00196fc0 mov mar,0xb76f20
 	00196fcc mov ax,mar
 	00196fd8 mov op,ax
 	00196fe0 setfuncargs 0x1
 	00196fe8 mov ax,0x6f6f20
 	00196ff4 farcall ax
 	00196ffc farsubsp 0x1
 	00197004 pop op
 	0019700c sourceline 0x1c46
 	00197014 mov ax,0x0
 	00197020 mov bx,ax
 	0019702c mov mar,0x3cef20
 	00197038 mov ax,mar
 	00197044 push op
 	0019704c mov op,ax
 	00197054 farpush bx
 	0019705c setfuncargs 0x1
 	00197064 mov ax,0x436f20
 	00197070 farcall ax
 	00197078 farsubsp 0x1
 	00197080 pop op
 	00197088 sourceline 0x1c47
 	00197090 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[00197098]
		00196e90: CONDITIONAL_JUMP
 	00197098 sourceline 0x1c49
 	001970a0 mov mar,0x3cef20
 	001970ac mov ax,mar
 	001970b8 push op
 	001970c0 mov op,ax
 	001970c8 setfuncargs 0x0
 	001970d0 mov ax,0x89ef20
 	001970dc farcall ax
 	001970e4 pop op
 	001970ec push ax
 	001970f4 mov mar,0x9e6f20
 	00197100 mov ax,mar
 	0019710c pop bx
 	00197114 cmpeq bx,ax
 	00197120 mov ax,bx
 	0019712c jz 0x001972a0
		001972a0: CONDITIONAL_JUMP
		00197134: FALL_THROUGH

	[00197134]
		00197098: FALL_THROUGH
 	00197134 sourceline 0x1c4b
 	0019713c push op
 	00197144 mov ax,0x2c1d54
 	00197150 farpush ax
 	00197158 mov mar,0x3cef20
 	00197164 mov ax,mar
 	00197170 mov op,ax
 	00197178 setfuncargs 0x1
 	00197180 mov ax,0x6f6f20
 	0019718c farcall ax
 	00197194 farsubsp 0x1
 	0019719c pop op
 	001971a4 sourceline 0x1c4c
 	001971ac push op
 	001971b4 mov ax,0x2c1d69
 	001971c0 farpush ax
 	001971c8 mov mar,0xb76f20
 	001971d4 mov ax,mar
 	001971e0 mov op,ax
 	001971e8 setfuncargs 0x1
 	001971f0 mov ax,0x6f6f20
 	001971fc farcall ax
 	00197204 farsubsp 0x1
 	0019720c pop op
 	00197214 sourceline 0x1c4d
 	0019721c mov ax,0x0
 	00197228 mov bx,ax
 	00197234 mov mar,0x3cef20
 	00197240 mov ax,mar
 	0019724c push op
 	00197254 mov op,ax
 	0019725c farpush bx
 	00197264 setfuncargs 0x1
 	0019726c mov ax,0x436f20
 	00197278 farcall ax
 	00197280 farsubsp 0x1
 	00197288 pop op
 	00197290 sourceline 0x1c4e
 	00197298 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[001972a0]
		00197098: CONDITIONAL_JUMP
 	001972a0 sourceline 0x1c50
 	001972a8 mov mar,0x3cef20
 	001972b4 mov ax,mar
 	001972c0 push op
 	001972c8 mov op,ax
 	001972d0 setfuncargs 0x0
 	001972d8 mov ax,0x89ef20
 	001972e4 farcall ax
 	001972ec pop op
 	001972f4 push ax
 	001972fc mov mar,0xa0ef20
 	00197308 mov ax,mar
 	00197314 pop bx
 	0019731c cmpeq bx,ax
 	00197328 mov ax,bx
 	00197334 jz 0x00197518
		00197518: CONDITIONAL_JUMP
		0019733c: FALL_THROUGH

	[0019733c]
		001972a0: FALL_THROUGH
 	0019733c sourceline 0x1c52
 	00197344 push op
 	0019734c mov ax,0x2c1d95
 	00197358 farpush ax
 	00197360 mov mar,0x3cef20
 	0019736c mov ax,mar
 	00197378 mov op,ax
 	00197380 setfuncargs 0x1
 	00197388 mov ax,0x6f6f20
 	00197394 farcall ax
 	0019739c farsubsp 0x1
 	001973a4 pop op
 	001973ac sourceline 0x1c53
 	001973b4 push op
 	001973bc mov ax,0x2c1db3
 	001973c8 farpush ax
 	001973d0 mov mar,0xb76f20
 	001973dc mov ax,mar
 	001973e8 mov op,ax
 	001973f0 setfuncargs 0x1
 	001973f8 mov ax,0x6f6f20
 	00197404 farcall ax
 	0019740c farsubsp 0x1
 	00197414 pop op
 	0019741c sourceline 0x1c54
 	00197424 push op
 	0019742c mov ax,0x2c1df1
 	00197438 farpush ax
 	00197440 mov mar,0x3cef20
 	0019744c mov ax,mar
 	00197458 mov op,ax
 	00197460 setfuncargs 0x1
 	00197468 mov ax,0x6f6f20
 	00197474 farcall ax
 	0019747c farsubsp 0x1
 	00197484 pop op
 	0019748c sourceline 0x1c55
 	00197494 mov ax,0x0
 	001974a0 mov bx,ax
 	001974ac mov mar,0x3cef20
 	001974b8 mov ax,mar
 	001974c4 push op
 	001974cc mov op,ax
 	001974d4 farpush bx
 	001974dc setfuncargs 0x1
 	001974e4 mov ax,0x436f20
 	001974f0 farcall ax
 	001974f8 farsubsp 0x1
 	00197500 pop op
 	00197508 sourceline 0x1c56
 	00197510 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[00197518]
		001972a0: CONDITIONAL_JUMP
 	00197518 sourceline 0x1c58
 	00197520 mov mar,0x3cef20
 	0019752c mov ax,mar
 	00197538 push op
 	00197540 mov op,ax
 	00197548 setfuncargs 0x0
 	00197550 mov ax,0x89ef20
 	0019755c farcall ax
 	00197564 pop op
 	0019756c push ax
 	00197574 mov mar,0x9aef20
 	00197580 mov ax,mar
 	0019758c pop bx
 	00197594 cmpeq bx,ax
 	001975a0 mov ax,bx
 	001975ac jz 0x00197a48
		00197a48: CONDITIONAL_JUMP
		001975b4: FALL_THROUGH

	[001975b4]
		00197518: FALL_THROUGH
 	001975b4 sourceline 0x1c5a
 	001975bc mov ax,0x3
 	001975c8 farpush ax
 	001975d0 setfuncargs 0x1
 	001975d8 mov ax,0x4a6f20
 	001975e4 farcall ax
 	001975ec farsubsp 0x1
 	001975f4 mov mar,sp
 	00197600 memwrite4 ax
 	00197608 add sp,0x4
 	00197614 sourceline 0x1c5b
 	0019761c stackptr 0x4
 	00197624 memread4 ax
 	0019762c push ax
 	00197634 mov ax,0x0
 	00197640 pop bx
 	00197648 cmpeq bx,ax
 	00197654 mov ax,bx
 	00197660 jz 0x001976d8
		001976d8: CONDITIONAL_JUMP
		00197668: FALL_THROUGH

	[00197668]
		001975b4: FALL_THROUGH
 	00197668 push op
 	00197670 mov ax,0x2c4923
 	0019767c farpush ax
 	00197684 mov mar,0x3cef20
 	00197690 mov ax,mar
 	0019769c mov op,ax
 	001976a4 setfuncargs 0x1
 	001976ac mov ax,0x6f6f20
 	001976b8 farcall ax
 	001976c0 farsubsp 0x1
 	001976c8 pop op
 	001976d0 jmp 0x001978d0
		001978d0: UNCONDITIONAL_JUMP

	[001976d8]
		001975b4: CONDITIONAL_JUMP
 	001976d8 sourceline 0x1c5c
 	001976e0 stackptr 0x4
 	001976e8 memread4 ax
 	001976f0 push ax
 	001976f8 mov ax,0x1
 	00197704 pop bx
 	0019770c cmpeq bx,ax
 	00197718 mov ax,bx
 	00197724 jz 0x0019779c
		0019779c: CONDITIONAL_JUMP
		0019772c: FALL_THROUGH

	[0019772c]
		001976d8: FALL_THROUGH
 	0019772c push op
 	00197734 mov ax,0x2c4936
 	00197740 farpush ax
 	00197748 mov mar,0x3cef20
 	00197754 mov ax,mar
 	00197760 mov op,ax
 	00197768 setfuncargs 0x1
 	00197770 mov ax,0x6f6f20
 	0019777c farcall ax
 	00197784 farsubsp 0x1
 	0019778c pop op
 	00197794 jmp 0x001978d0
		001978d0: UNCONDITIONAL_JUMP

	[0019779c]
		001976d8: CONDITIONAL_JUMP
 	0019779c sourceline 0x1c5d
 	001977a4 stackptr 0x4
 	001977ac memread4 ax
 	001977b4 push ax
 	001977bc mov ax,0x2
 	001977c8 pop bx
 	001977d0 cmpeq bx,ax
 	001977dc mov ax,bx
 	001977e8 jz 0x00197860
		00197860: CONDITIONAL_JUMP
		001977f0: FALL_THROUGH

	[001977f0]
		0019779c: FALL_THROUGH
 	001977f0 push op
 	001977f8 mov ax,0x2c4949
 	00197804 farpush ax
 	0019780c mov mar,0x3cef20
 	00197818 mov ax,mar
 	00197824 mov op,ax
 	0019782c setfuncargs 0x1
 	00197834 mov ax,0x6f6f20
 	00197840 farcall ax
 	00197848 farsubsp 0x1
 	00197850 pop op
 	00197858 jmp 0x001978d0
		001978d0: UNCONDITIONAL_JUMP

	[00197860]
		0019779c: CONDITIONAL_JUMP
 	00197860 sourceline 0x1c5e
 	00197868 push op
 	00197870 mov ax,0x2c495c
 	0019787c farpush ax
 	00197884 mov mar,0x3cef20
 	00197890 mov ax,mar
 	0019789c mov op,ax
 	001978a4 setfuncargs 0x1
 	001978ac mov ax,0x6f6f20
 	001978b8 farcall ax
 	001978c0 farsubsp 0x1
 	001978c8 pop op
		001978d0: FALL_THROUGH

	[001978d0]
		00197668: UNCONDITIONAL_JUMP
		0019772c: UNCONDITIONAL_JUMP
		001977f0: UNCONDITIONAL_JUMP
		00197860: FALL_THROUGH
 	001978d0 sourceline 0x1c60
 	001978d8 push op
 	001978e0 mov ax,0x2c20ac
 	001978ec farpush ax
 	001978f4 mov mar,0xb76f20
 	00197900 mov ax,mar
 	0019790c mov op,ax
 	00197914 setfuncargs 0x1
 	0019791c mov ax,0x6f6f20
 	00197928 farcall ax
 	00197930 farsubsp 0x1
 	00197938 pop op
 	00197940 sourceline 0x1c61
 	00197948 push op
 	00197950 mov ax,0x2c20f2
 	0019795c farpush ax
 	00197964 mov mar,0x3cef20
 	00197970 mov ax,mar
 	0019797c mov op,ax
 	00197984 setfuncargs 0x1
 	0019798c mov ax,0x6f6f20
 	00197998 farcall ax
 	001979a0 farsubsp 0x1
 	001979a8 pop op
 	001979b0 sourceline 0x1c62
 	001979b8 mov ax,0x0
 	001979c4 mov bx,ax
 	001979d0 mov mar,0x3cef20
 	001979dc mov ax,mar
 	001979e8 push op
 	001979f0 mov op,ax
 	001979f8 farpush bx
 	00197a00 setfuncargs 0x1
 	00197a08 mov ax,0x436f20
 	00197a14 farcall ax
 	00197a1c farsubsp 0x1
 	00197a24 pop op
 	00197a2c sourceline 0x1c63
 	00197a34 sub sp,0x4
 	00197a40 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[00197a48]
		00197518: CONDITIONAL_JUMP
 	00197a48 sourceline 0x1c65
 	00197a50 mov mar,0x3cef20
 	00197a5c mov ax,mar
 	00197a68 push op
 	00197a70 mov op,ax
 	00197a78 setfuncargs 0x0
 	00197a80 mov ax,0x89ef20
 	00197a8c farcall ax
 	00197a94 pop op
 	00197a9c push ax
 	00197aa4 mov mar,0xa06f20
 	00197ab0 mov ax,mar
 	00197abc pop bx
 	00197ac4 cmpeq bx,ax
 	00197ad0 mov ax,bx
 	00197adc jz 0x00197d30
		00197d30: CONDITIONAL_JUMP
		00197ae4: FALL_THROUGH

	[00197ae4]
		00197a48: FALL_THROUGH
 	00197ae4 sourceline 0x1c67
 	00197aec push op
 	00197af4 mov ax,0x2c1ee0
 	00197b00 farpush ax
 	00197b08 mov mar,0x3cef20
 	00197b14 mov ax,mar
 	00197b20 mov op,ax
 	00197b28 setfuncargs 0x1
 	00197b30 mov ax,0x6f6f20
 	00197b3c farcall ax
 	00197b44 farsubsp 0x1
 	00197b4c pop op
 	00197b54 sourceline 0x1c68
 	00197b5c push op
 	00197b64 mov ax,0x2c1ef4
 	00197b70 farpush ax
 	00197b78 mov mar,0xb76f20
 	00197b84 mov ax,mar
 	00197b90 mov op,ax
 	00197b98 setfuncargs 0x1
 	00197ba0 mov ax,0x6f6f20
 	00197bac farcall ax
 	00197bb4 farsubsp 0x1
 	00197bbc pop op
 	00197bc4 sourceline 0x1c69
 	00197bcc push op
 	00197bd4 mov ax,0x2c1f2c
 	00197be0 farpush ax
 	00197be8 mov mar,0x3cef20
 	00197bf4 mov ax,mar
 	00197c00 mov op,ax
 	00197c08 setfuncargs 0x1
 	00197c10 mov ax,0x6f6f20
 	00197c1c farcall ax
 	00197c24 farsubsp 0x1
 	00197c2c pop op
 	00197c34 sourceline 0x1c6a
 	00197c3c push op
 	00197c44 mov ax,0x2c1f6d
 	00197c50 farpush ax
 	00197c58 mov mar,0xb76f20
 	00197c64 mov ax,mar
 	00197c70 mov op,ax
 	00197c78 setfuncargs 0x1
 	00197c80 mov ax,0x6f6f20
 	00197c8c farcall ax
 	00197c94 farsubsp 0x1
 	00197c9c pop op
 	00197ca4 sourceline 0x1c6b
 	00197cac mov ax,0x0
 	00197cb8 mov bx,ax
 	00197cc4 mov mar,0x3cef20
 	00197cd0 mov ax,mar
 	00197cdc push op
 	00197ce4 mov op,ax
 	00197cec farpush bx
 	00197cf4 setfuncargs 0x1
 	00197cfc mov ax,0x436f20
 	00197d08 farcall ax
 	00197d10 farsubsp 0x1
 	00197d18 pop op
 	00197d20 sourceline 0x1c6c
 	00197d28 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[00197d30]
		00197a48: CONDITIONAL_JUMP
 	00197d30 sourceline 0x1c6e
 	00197d38 mov mar,0x3cef20
 	00197d44 mov ax,mar
 	00197d50 push op
 	00197d58 mov op,ax
 	00197d60 setfuncargs 0x0
 	00197d68 mov ax,0x89ef20
 	00197d74 farcall ax
 	00197d7c pop op
 	00197d84 push ax
 	00197d8c mov mar,0x9fef20
 	00197d98 mov ax,mar
 	00197da4 pop bx
 	00197dac cmpeq bx,ax
 	00197db8 mov ax,bx
 	00197dc4 jz 0x00198260
		00198260: CONDITIONAL_JUMP
		00197dcc: FALL_THROUGH

	[00197dcc]
		00197d30: FALL_THROUGH
 	00197dcc sourceline 0x1c70
 	00197dd4 mov ax,0x3
 	00197de0 farpush ax
 	00197de8 setfuncargs 0x1
 	00197df0 mov ax,0x4a6f20
 	00197dfc farcall ax
 	00197e04 farsubsp 0x1
 	00197e0c mov mar,sp
 	00197e18 memwrite4 ax
 	00197e20 add sp,0x4
 	00197e2c sourceline 0x1c71
 	00197e34 stackptr 0x4
 	00197e3c memread4 ax
 	00197e44 push ax
 	00197e4c mov ax,0x0
 	00197e58 pop bx
 	00197e60 cmpeq bx,ax
 	00197e6c mov ax,bx
 	00197e78 jz 0x00197ef0
		00197ef0: CONDITIONAL_JUMP
		00197e80: FALL_THROUGH

	[00197e80]
		00197dcc: FALL_THROUGH
 	00197e80 push op
 	00197e88 mov ax,0x2c4923
 	00197e94 farpush ax
 	00197e9c mov mar,0x3cef20
 	00197ea8 mov ax,mar
 	00197eb4 mov op,ax
 	00197ebc setfuncargs 0x1
 	00197ec4 mov ax,0x6f6f20
 	00197ed0 farcall ax
 	00197ed8 farsubsp 0x1
 	00197ee0 pop op
 	00197ee8 jmp 0x001980e8
		001980e8: UNCONDITIONAL_JUMP

	[00197ef0]
		00197dcc: CONDITIONAL_JUMP
 	00197ef0 sourceline 0x1c72
 	00197ef8 stackptr 0x4
 	00197f00 memread4 ax
 	00197f08 push ax
 	00197f10 mov ax,0x1
 	00197f1c pop bx
 	00197f24 cmpeq bx,ax
 	00197f30 mov ax,bx
 	00197f3c jz 0x00197fb4
		00197fb4: CONDITIONAL_JUMP
		00197f44: FALL_THROUGH

	[00197f44]
		00197ef0: FALL_THROUGH
 	00197f44 push op
 	00197f4c mov ax,0x2c4936
 	00197f58 farpush ax
 	00197f60 mov mar,0x3cef20
 	00197f6c mov ax,mar
 	00197f78 mov op,ax
 	00197f80 setfuncargs 0x1
 	00197f88 mov ax,0x6f6f20
 	00197f94 farcall ax
 	00197f9c farsubsp 0x1
 	00197fa4 pop op
 	00197fac jmp 0x001980e8
		001980e8: UNCONDITIONAL_JUMP

	[00197fb4]
		00197ef0: CONDITIONAL_JUMP
 	00197fb4 sourceline 0x1c73
 	00197fbc stackptr 0x4
 	00197fc4 memread4 ax
 	00197fcc push ax
 	00197fd4 mov ax,0x2
 	00197fe0 pop bx
 	00197fe8 cmpeq bx,ax
 	00197ff4 mov ax,bx
 	00198000 jz 0x00198078
		00198078: CONDITIONAL_JUMP
		00198008: FALL_THROUGH

	[00198008]
		00197fb4: FALL_THROUGH
 	00198008 push op
 	00198010 mov ax,0x2c4949
 	0019801c farpush ax
 	00198024 mov mar,0x3cef20
 	00198030 mov ax,mar
 	0019803c mov op,ax
 	00198044 setfuncargs 0x1
 	0019804c mov ax,0x6f6f20
 	00198058 farcall ax
 	00198060 farsubsp 0x1
 	00198068 pop op
 	00198070 jmp 0x001980e8
		001980e8: UNCONDITIONAL_JUMP

	[00198078]
		00197fb4: CONDITIONAL_JUMP
 	00198078 sourceline 0x1c74
 	00198080 push op
 	00198088 mov ax,0x2c495c
 	00198094 farpush ax
 	0019809c mov mar,0x3cef20
 	001980a8 mov ax,mar
 	001980b4 mov op,ax
 	001980bc setfuncargs 0x1
 	001980c4 mov ax,0x6f6f20
 	001980d0 farcall ax
 	001980d8 farsubsp 0x1
 	001980e0 pop op
		001980e8: FALL_THROUGH

	[001980e8]
		00197e80: UNCONDITIONAL_JUMP
		00197f44: UNCONDITIONAL_JUMP
		00198008: UNCONDITIONAL_JUMP
		00198078: FALL_THROUGH
 	001980e8 sourceline 0x1c76
 	001980f0 push op
 	001980f8 mov ax,0x2c1fd9
 	00198104 farpush ax
 	0019810c mov mar,0xb76f20
 	00198118 mov ax,mar
 	00198124 mov op,ax
 	0019812c setfuncargs 0x1
 	00198134 mov ax,0x6f6f20
 	00198140 farcall ax
 	00198148 farsubsp 0x1
 	00198150 pop op
 	00198158 sourceline 0x1c77
 	00198160 push op
 	00198168 mov ax,0x2c2018
 	00198174 farpush ax
 	0019817c mov mar,0x3cef20
 	00198188 mov ax,mar
 	00198194 mov op,ax
 	0019819c setfuncargs 0x1
 	001981a4 mov ax,0x6f6f20
 	001981b0 farcall ax
 	001981b8 farsubsp 0x1
 	001981c0 pop op
 	001981c8 sourceline 0x1c78
 	001981d0 mov ax,0x0
 	001981dc mov bx,ax
 	001981e8 mov mar,0x3cef20
 	001981f4 mov ax,mar
 	00198200 push op
 	00198208 mov op,ax
 	00198210 farpush bx
 	00198218 setfuncargs 0x1
 	00198220 mov ax,0x436f20
 	0019822c farcall ax
 	00198234 farsubsp 0x1
 	0019823c pop op
 	00198244 sourceline 0x1c79
 	0019824c sub sp,0x4
 	00198258 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[00198260]
		00197d30: CONDITIONAL_JUMP
 	00198260 sourceline 0x1c7b
 	00198268 mov mar,0x3cef20
 	00198274 mov ax,mar
 	00198280 push op
 	00198288 mov op,ax
 	00198290 setfuncargs 0x0
 	00198298 mov ax,0x89ef20
 	001982a4 farcall ax
 	001982ac pop op
 	001982b4 push ax
 	001982bc mov mar,0x9b6f20
 	001982c8 mov ax,mar
 	001982d4 pop bx
 	001982dc cmpeq bx,ax
 	001982e8 mov ax,bx
 	001982f4 jz 0x00198790
		00198790: CONDITIONAL_JUMP
		001982fc: FALL_THROUGH

	[001982fc]
		00198260: FALL_THROUGH
 	001982fc sourceline 0x1c7d
 	00198304 mov ax,0x3
 	00198310 farpush ax
 	00198318 setfuncargs 0x1
 	00198320 mov ax,0x4a6f20
 	0019832c farcall ax
 	00198334 farsubsp 0x1
 	0019833c mov mar,sp
 	00198348 memwrite4 ax
 	00198350 add sp,0x4
 	0019835c sourceline 0x1c7e
 	00198364 stackptr 0x4
 	0019836c memread4 ax
 	00198374 push ax
 	0019837c mov ax,0x0
 	00198388 pop bx
 	00198390 cmpeq bx,ax
 	0019839c mov ax,bx
 	001983a8 jz 0x00198420
		00198420: CONDITIONAL_JUMP
		001983b0: FALL_THROUGH

	[001983b0]
		001982fc: FALL_THROUGH
 	001983b0 push op
 	001983b8 mov ax,0x2c4923
 	001983c4 farpush ax
 	001983cc mov mar,0x3cef20
 	001983d8 mov ax,mar
 	001983e4 mov op,ax
 	001983ec setfuncargs 0x1
 	001983f4 mov ax,0x6f6f20
 	00198400 farcall ax
 	00198408 farsubsp 0x1
 	00198410 pop op
 	00198418 jmp 0x00198618
		00198618: UNCONDITIONAL_JUMP

	[00198420]
		001982fc: CONDITIONAL_JUMP
 	00198420 sourceline 0x1c7f
 	00198428 stackptr 0x4
 	00198430 memread4 ax
 	00198438 push ax
 	00198440 mov ax,0x1
 	0019844c pop bx
 	00198454 cmpeq bx,ax
 	00198460 mov ax,bx
 	0019846c jz 0x001984e4
		001984e4: CONDITIONAL_JUMP
		00198474: FALL_THROUGH

	[00198474]
		00198420: FALL_THROUGH
 	00198474 push op
 	0019847c mov ax,0x2c4936
 	00198488 farpush ax
 	00198490 mov mar,0x3cef20
 	0019849c mov ax,mar
 	001984a8 mov op,ax
 	001984b0 setfuncargs 0x1
 	001984b8 mov ax,0x6f6f20
 	001984c4 farcall ax
 	001984cc farsubsp 0x1
 	001984d4 pop op
 	001984dc jmp 0x00198618
		00198618: UNCONDITIONAL_JUMP

	[001984e4]
		00198420: CONDITIONAL_JUMP
 	001984e4 sourceline 0x1c80
 	001984ec stackptr 0x4
 	001984f4 memread4 ax
 	001984fc push ax
 	00198504 mov ax,0x2
 	00198510 pop bx
 	00198518 cmpeq bx,ax
 	00198524 mov ax,bx
 	00198530 jz 0x001985a8
		001985a8: CONDITIONAL_JUMP
		00198538: FALL_THROUGH

	[00198538]
		001984e4: FALL_THROUGH
 	00198538 push op
 	00198540 mov ax,0x2c4949
 	0019854c farpush ax
 	00198554 mov mar,0x3cef20
 	00198560 mov ax,mar
 	0019856c mov op,ax
 	00198574 setfuncargs 0x1
 	0019857c mov ax,0x6f6f20
 	00198588 farcall ax
 	00198590 farsubsp 0x1
 	00198598 pop op
 	001985a0 jmp 0x00198618
		00198618: UNCONDITIONAL_JUMP

	[001985a8]
		001984e4: CONDITIONAL_JUMP
 	001985a8 sourceline 0x1c81
 	001985b0 push op
 	001985b8 mov ax,0x2c495c
 	001985c4 farpush ax
 	001985cc mov mar,0x3cef20
 	001985d8 mov ax,mar
 	001985e4 mov op,ax
 	001985ec setfuncargs 0x1
 	001985f4 mov ax,0x6f6f20
 	00198600 farcall ax
 	00198608 farsubsp 0x1
 	00198610 pop op
		00198618: FALL_THROUGH

	[00198618]
		001983b0: UNCONDITIONAL_JUMP
		00198474: UNCONDITIONAL_JUMP
		00198538: UNCONDITIONAL_JUMP
		001985a8: FALL_THROUGH
 	00198618 sourceline 0x1c83
 	00198620 push op
 	00198628 mov ax,0x2c20ac
 	00198634 farpush ax
 	0019863c mov mar,0xb76f20
 	00198648 mov ax,mar
 	00198654 mov op,ax
 	0019865c setfuncargs 0x1
 	00198664 mov ax,0x6f6f20
 	00198670 farcall ax
 	00198678 farsubsp 0x1
 	00198680 pop op
 	00198688 sourceline 0x1c84
 	00198690 push op
 	00198698 mov ax,0x2c20f2
 	001986a4 farpush ax
 	001986ac mov mar,0x3cef20
 	001986b8 mov ax,mar
 	001986c4 mov op,ax
 	001986cc setfuncargs 0x1
 	001986d4 mov ax,0x6f6f20
 	001986e0 farcall ax
 	001986e8 farsubsp 0x1
 	001986f0 pop op
 	001986f8 sourceline 0x1c85
 	00198700 mov ax,0x0
 	0019870c mov bx,ax
 	00198718 mov mar,0x3cef20
 	00198724 mov ax,mar
 	00198730 push op
 	00198738 mov op,ax
 	00198740 farpush bx
 	00198748 setfuncargs 0x1
 	00198750 mov ax,0x436f20
 	0019875c farcall ax
 	00198764 farsubsp 0x1
 	0019876c pop op
 	00198774 sourceline 0x1c86
 	0019877c sub sp,0x4
 	00198788 jmp 0x00198a44
		00198a44: UNCONDITIONAL_JUMP

	[00198790]
		00198260: CONDITIONAL_JUMP
 	00198790 sourceline 0x1c88
 	00198798 mov mar,0x3cef20
 	001987a4 mov ax,mar
 	001987b0 push op
 	001987b8 mov op,ax
 	001987c0 setfuncargs 0x0
 	001987c8 mov ax,0x89ef20
 	001987d4 farcall ax
 	001987dc pop op
 	001987e4 push ax
 	001987ec mov mar,0x9bef20
 	001987f8 mov ax,mar
 	00198804 pop bx
 	0019880c cmpeq bx,ax
 	00198818 mov ax,bx
 	00198824 jnz 0x001988e0
		001988e0: CONDITIONAL_JUMP
		0019882c: FALL_THROUGH

	[0019882c]
		00198790: FALL_THROUGH
 	0019882c push ax
 	00198834 mov mar,0x3cef20
 	00198840 mov ax,mar
 	0019884c push op
 	00198854 mov op,ax
 	0019885c setfuncargs 0x0
 	00198864 mov ax,0x89ef20
 	00198870 farcall ax
 	00198878 pop op
 	00198880 push ax
 	00198888 mov mar,0x986f20
 	00198894 mov ax,mar
 	001988a0 pop bx
 	001988a8 cmpeq bx,ax
 	001988b4 mov ax,bx
 	001988c0 pop bx
 	001988c8 lor bx,ax
 	001988d4 mov ax,bx
		001988e0: FALL_THROUGH

	[001988e0]
		00198790: CONDITIONAL_JUMP
		0019882c: FALL_THROUGH
 	001988e0 jz 0x00198a44
		00198a44: CONDITIONAL_JUMP
		001988e8: FALL_THROUGH

	[001988e8]
		001988e0: FALL_THROUGH
 	001988e8 sourceline 0x1c8a
 	001988f0 push op
 	001988f8 mov ax,0x2c2137
 	00198904 farpush ax
 	0019890c mov mar,0x3cef20
 	00198918 mov ax,mar
 	00198924 mov op,ax
 	0019892c setfuncargs 0x1
 	00198934 mov ax,0x6f6f20
 	00198940 farcall ax
 	00198948 farsubsp 0x1
 	00198950 pop op
 	00198958 sourceline 0x1c8b
 	00198960 push op
 	00198968 mov ax,0x2c2156
 	00198974 farpush ax
 	0019897c mov mar,0xb76f20
 	00198988 mov ax,mar
 	00198994 mov op,ax
 	0019899c setfuncargs 0x1
 	001989a4 mov ax,0x6f6f20
 	001989b0 farcall ax
 	001989b8 farsubsp 0x1
 	001989c0 pop op
 	001989c8 sourceline 0x1c8c
 	001989d0 mov ax,0x0
 	001989dc mov bx,ax
 	001989e8 mov mar,0x3cef20
 	001989f4 mov ax,mar
 	00198a00 push op
 	00198a08 mov op,ax
 	00198a10 farpush bx
 	00198a18 setfuncargs 0x1
 	00198a20 mov ax,0x436f20
 	00198a2c farcall ax
 	00198a34 farsubsp 0x1
 	00198a3c pop op
		00198a44: FALL_THROUGH

	[00198a44]
		00195584: UNCONDITIONAL_JUMP
		0019578c: UNCONDITIONAL_JUMP
		00195994: UNCONDITIONAL_JUMP
		00195b9c: UNCONDITIONAL_JUMP
		00195e84: UNCONDITIONAL_JUMP
		0019608c: UNCONDITIONAL_JUMP
		00196294: UNCONDITIONAL_JUMP
		0019657c: UNCONDITIONAL_JUMP
		00196784: UNCONDITIONAL_JUMP
		00196d88: UNCONDITIONAL_JUMP
		00196f2c: UNCONDITIONAL_JUMP
		00197134: UNCONDITIONAL_JUMP
		0019733c: UNCONDITIONAL_JUMP
		001978d0: UNCONDITIONAL_JUMP
		00197ae4: UNCONDITIONAL_JUMP
		001980e8: UNCONDITIONAL_JUMP
		00198618: UNCONDITIONAL_JUMP
		001988e0: CONDITIONAL_JUMP
		001988e8: FALL_THROUGH
 	00198a44 sourceline 0x1c8f
 	00198a4c push op
 	00198a54 mov ax,0x427
 	00198a60 farpush ax
 	00198a68 mov ax,0x397
 	00198a74 farpush ax
 	00198a7c mov ax,0x0
 	00198a88 farpush ax
 	00198a90 mov ax,0x3
 	00198a9c farpush ax
 	00198aa4 mov ax,0x0
 	00198ab0 farpush ax
 	00198ab8 mov mar,0x3cef20
 	00198ac4 mov ax,mar
 	00198ad0 mov op,ax
 	00198ad8 setfuncargs 0x5
 	00198ae0 mov ax,0x536f20
 	00198aec farcall ax
 	00198af4 farsubsp 0x5
 	00198afc pop op
 	00198b04 sourceline 0x1c90
 	00198b0c push op
 	00198b14 mov ax,0x2
 	00198b20 farpush ax
 	00198b28 mov mar,0x3cef20
 	00198b34 mov ax,mar
 	00198b40 mov op,ax
 	00198b48 setfuncargs 0x1
 	00198b50 mov ax,0x51ef20
 	00198b5c farcall ax
 	00198b64 farsubsp 0x1
 	00198b6c pop op
 	00198b74 sourceline 0x1c91
 	00198b7c mov mar,0x3cef20
 	00198b88 mov ax,mar
 	00198b94 push op
 	00198b9c mov op,ax
 	00198ba4 setfuncargs 0x0
 	00198bac mov ax,0x78ef20
 	00198bb8 farcall ax
 	00198bc0 pop op
 	00198bc8 mov mar,sp
 	00198bd4 memwrite4 ax
 	00198bdc add sp,0x4
 	00198be8 stackptr 0x4
 	00198bf0 memread4 ax
 	00198bf8 push ax
 	00198c00 mov ax,0x8
 	00198c0c pop bx
 	00198c14 add bx,ax
 	00198c20 mov ax,bx
 	00198c2c mov bx,ax
 	00198c38 mov mar,0x3cef20
 	00198c44 mov ax,mar
 	00198c50 push op
 	00198c58 mov op,ax
 	00198c60 farpush bx
 	00198c68 setfuncargs 0x1
 	00198c70 mov ax,0x526f20
 	00198c7c farcall ax
 	00198c84 farsubsp 0x1
 	00198c8c pop op
 	00198c94 sourceline 0x1c92
 	00198c9c mov mar,0x3cef20
 	00198ca8 mov ax,mar
 	00198cb4 push op
 	00198cbc mov op,ax
 	00198cc4 setfuncargs 0x0
 	00198ccc mov ax,0xb36f20
 	00198cd8 farcall ax
 	00198ce0 pop op
 	00198ce8 mov mar,sp
 	00198cf4 memwrite4 ax
 	00198cfc add sp,0x4
 	00198d08 stackptr 0x4
 	00198d10 memread4 ax
 	00198d18 push ax
 	00198d20 mov ax,0x8
 	00198d2c pop bx
 	00198d34 add bx,ax
 	00198d40 mov ax,bx
 	00198d4c mov bx,ax
 	00198d58 mov mar,0x3cef20
 	00198d64 mov ax,mar
 	00198d70 push op
 	00198d78 mov op,ax
 	00198d80 farpush bx
 	00198d88 setfuncargs 0x1
 	00198d90 mov ax,0x70ef20
 	00198d9c farcall ax
 	00198da4 farsubsp 0x1
 	00198dac pop op
 	00198db4 sourceline 0x1c93
 	00198dbc mov ax,0x1
 	00198dc8 mov bx,ax
 	00198dd4 mov mar,0x3cef20
 	00198de0 mov ax,mar
 	00198dec push op
 	00198df4 mov op,ax
 	00198dfc farpush bx
 	00198e04 setfuncargs 0x1
 	00198e0c mov ax,0x766f20
 	00198e18 farcall ax
 	00198e20 farsubsp 0x1
 	00198e28 pop op
 	00198e30 sourceline 0x1c94
 	00198e38 push op
 	00198e40 mov ax,0x427
 	00198e4c farpush ax
 	00198e54 mov ax,0x397
 	00198e60 farpush ax
 	00198e68 mov ax,0x0
 	00198e74 farpush ax
 	00198e7c mov ax,0x3
 	00198e88 farpush ax
 	00198e90 mov ax,0x0
 	00198e9c farpush ax
 	00198ea4 mov mar,0xb76f20
 	00198eb0 mov ax,mar
 	00198ebc mov op,ax
 	00198ec4 setfuncargs 0x5
 	00198ecc mov ax,0x536f20
 	00198ed8 farcall ax
 	00198ee0 farsubsp 0x5
 	00198ee8 pop op
 	00198ef0 sourceline 0x1c95
 	00198ef8 push op
 	00198f00 mov ax,0x63
 	00198f0c farpush ax
 	00198f14 mov mar,0xb76f20
 	00198f20 mov ax,mar
 	00198f2c mov op,ax
 	00198f34 setfuncargs 0x1
 	00198f3c mov ax,0x51ef20
 	00198f48 farcall ax
 	00198f50 farsubsp 0x1
 	00198f58 pop op
 	00198f60 sourceline 0x1c96
 	00198f68 mov mar,0xb76f20
 	00198f74 mov ax,mar
 	00198f80 push op
 	00198f88 mov op,ax
 	00198f90 setfuncargs 0x0
 	00198f98 mov ax,0x78ef20
 	00198fa4 farcall ax
 	00198fac pop op
 	00198fb4 push ax
 	00198fbc mov ax,0x3
 	00198fc8 pop bx
 	00198fd0 sub bx,ax
 	00198fdc mov ax,bx
 	00198fe8 mov bx,ax
 	00198ff4 mov mar,0xb76f20
 	00199000 mov ax,mar
 	0019900c push op
 	00199014 mov op,ax
 	0019901c farpush bx
 	00199024 setfuncargs 0x1
 	0019902c mov ax,0x526f20
 	00199038 farcall ax
 	00199040 farsubsp 0x1
 	00199048 pop op
 	00199050 sourceline 0x1c97
 	00199058 mov mar,0xb76f20
 	00199064 mov ax,mar
 	00199070 push op
 	00199078 mov op,ax
 	00199080 setfuncargs 0x0
 	00199088 mov ax,0xb36f20
 	00199094 farcall ax
 	0019909c pop op
 	001990a4 push ax
 	001990ac mov ax,0x4
 	001990b8 pop bx
 	001990c0 sub bx,ax
 	001990cc mov ax,bx
 	001990d8 mov bx,ax
 	001990e4 mov mar,0xb76f20
 	001990f0 mov ax,mar
 	001990fc push op
 	00199104 mov op,ax
 	0019910c farpush bx
 	00199114 setfuncargs 0x1
 	0019911c mov ax,0x70ef20
 	00199128 farcall ax
 	00199130 farsubsp 0x1
 	00199138 pop op
 	00199140 sourceline 0x1c98
 	00199148 push op
 	00199150 mov ax,0x426
 	0019915c farpush ax
 	00199164 mov ax,0x398
 	00199170 farpush ax
 	00199178 mov ax,0x1
 	00199184 farpush ax
 	0019918c mov ax,0x3
 	00199198 farpush ax
 	001991a0 mov ax,0x0
 	001991ac farpush ax
 	001991b4 mov mar,0xb76f20
 	001991c0 mov ax,mar
 	001991cc mov op,ax
 	001991d4 setfuncargs 0x5
 	001991dc mov ax,0x536f20
 	001991e8 farcall ax
 	001991f0 farsubsp 0x5
 	001991f8 pop op
 	00199200 sourceline 0x1c99
 	00199208 sub sp,0x10
		00199214: FALL_THROUGH

	[00199214]
		0018d654: UNCONDITIONAL_JUMP
		0018dde4: UNCONDITIONAL_JUMP
		0018e10c: UNCONDITIONAL_JUMP
		0018e378: UNCONDITIONAL_JUMP
		0018e5e4: UNCONDITIONAL_JUMP
		0018e7e8: UNCONDITIONAL_JUMP
		0019449c: UNCONDITIONAL_JUMP
		00198a44: FALL_THROUGH
 	00199214 sourceline 0x1c9c
 	0019921c mov ax,0x0
 	00199228 ret

cBlake_UseInv$0:
	[0019922c]
 	0019922c sourceline 0x1ca3
 	00199234 thisaddr
 	0019923c sourceline 0x1ca4
*	00199244 mov mar,0xb9ef20
 	00199250 mov ax,mar
 	0019925c push op
 	00199264 mov op,ax
 	0019926c setfuncargs 0x0
 	00199274 mov ax,0x516f20
 	00199280 farcall ax
 	00199288 pop op
 	00199290 push ax
 	00199298 mov ax,0x72
 	001992a4 pop bx
 	001992ac cmpeq bx,ax
 	001992b8 mov ax,bx
 	001992c4 jz 0x0019db34
		0019db34: CONDITIONAL_JUMP
		001992cc: FALL_THROUGH

	[001992cc]
		0019922c: FALL_THROUGH
 	001992cc sourceline 0x1ca6
 	001992d4 mov mar,0x3cef20
 	001992e0 mov ax,mar
 	001992ec push op
 	001992f4 mov op,ax
 	001992fc setfuncargs 0x0
 	00199304 mov ax,0x89ef20
 	00199310 farcall ax
 	00199318 pop op
 	00199320 push ax
 	00199328 mov mar,0x8cef20
 	00199334 mov ax,mar
 	00199340 pop bx
 	00199348 cmpeq bx,ax
 	00199354 mov ax,bx
 	00199360 jnz 0x0019941c
		0019941c: CONDITIONAL_JUMP
		00199368: FALL_THROUGH

	[00199368]
		001992cc: FALL_THROUGH
 	00199368 push ax
 	00199370 mov mar,0x3cef20
 	0019937c mov ax,mar
 	00199388 push op
 	00199390 mov op,ax
 	00199398 setfuncargs 0x0
 	001993a0 mov ax,0x89ef20
 	001993ac farcall ax
 	001993b4 pop op
 	001993bc push ax
 	001993c4 mov mar,0x8d6f20
 	001993d0 mov ax,mar
 	001993dc pop bx
 	001993e4 cmpeq bx,ax
 	001993f0 mov ax,bx
 	001993fc pop bx
 	00199404 lor bx,ax
 	00199410 mov ax,bx
		0019941c: FALL_THROUGH

	[0019941c]
		001992cc: CONDITIONAL_JUMP
		00199368: FALL_THROUGH
 	0019941c jnz 0x001994d8
		001994d8: CONDITIONAL_JUMP
		00199424: FALL_THROUGH

	[00199424]
		0019941c: FALL_THROUGH
 	00199424 push ax
 	0019942c mov mar,0x3cef20
 	00199438 mov ax,mar
 	00199444 push op
 	0019944c mov op,ax
 	00199454 setfuncargs 0x0
 	0019945c mov ax,0x89ef20
 	00199468 farcall ax
 	00199470 pop op
 	00199478 push ax
 	00199480 mov mar,0x8b6f20
 	0019948c mov ax,mar
 	00199498 pop bx
 	001994a0 cmpeq bx,ax
 	001994ac mov ax,bx
 	001994b8 pop bx
 	001994c0 lor bx,ax
 	001994cc mov ax,bx
		001994d8: FALL_THROUGH

	[001994d8]
		0019941c: CONDITIONAL_JUMP
		00199424: FALL_THROUGH
 	001994d8 jnz 0x00199594
		00199594: CONDITIONAL_JUMP
		001994e0: FALL_THROUGH

	[001994e0]
		001994d8: FALL_THROUGH
 	001994e0 push ax
 	001994e8 mov mar,0x3cef20
 	001994f4 mov ax,mar
 	00199500 push op
 	00199508 mov op,ax
 	00199510 setfuncargs 0x0
 	00199518 mov ax,0x89ef20
 	00199524 farcall ax
 	0019952c pop op
 	00199534 push ax
 	0019953c mov mar,0x8bef20
 	00199548 mov ax,mar
 	00199554 pop bx
 	0019955c cmpeq bx,ax
 	00199568 mov ax,bx
 	00199574 pop bx
 	0019957c lor bx,ax
 	00199588 mov ax,bx
		00199594: FALL_THROUGH

	[00199594]
		001994d8: CONDITIONAL_JUMP
		001994e0: FALL_THROUGH
 	00199594 jnz 0x00199650
		00199650: CONDITIONAL_JUMP
		0019959c: FALL_THROUGH

	[0019959c]
		00199594: FALL_THROUGH
 	0019959c push ax
 	001995a4 mov mar,0x3cef20
 	001995b0 mov ax,mar
 	001995bc push op
 	001995c4 mov op,ax
 	001995cc setfuncargs 0x0
 	001995d4 mov ax,0x89ef20
 	001995e0 farcall ax
 	001995e8 pop op
 	001995f0 push ax
 	001995f8 mov mar,0x8c6f20
 	00199604 mov ax,mar
 	00199610 pop bx
 	00199618 cmpeq bx,ax
 	00199624 mov ax,bx
 	00199630 pop bx
 	00199638 lor bx,ax
 	00199644 mov ax,bx
		00199650: FALL_THROUGH

	[00199650]
		00199594: CONDITIONAL_JUMP
		0019959c: FALL_THROUGH
 	00199650 jnz 0x0019970c
		0019970c: CONDITIONAL_JUMP
		00199658: FALL_THROUGH

	[00199658]
		00199650: FALL_THROUGH
 	00199658 push ax
 	00199660 mov mar,0x3cef20
 	0019966c mov ax,mar
 	00199678 push op
 	00199680 mov op,ax
 	00199688 setfuncargs 0x0
 	00199690 mov ax,0x89ef20
 	0019969c farcall ax
 	001996a4 pop op
 	001996ac push ax
 	001996b4 mov mar,0x8def20
 	001996c0 mov ax,mar
 	001996cc pop bx
 	001996d4 cmpeq bx,ax
 	001996e0 mov ax,bx
 	001996ec pop bx
 	001996f4 lor bx,ax
 	00199700 mov ax,bx
		0019970c: FALL_THROUGH

	[0019970c]
		00199650: CONDITIONAL_JUMP
		00199658: FALL_THROUGH
 	0019970c jnz 0x001997c8
		001997c8: CONDITIONAL_JUMP
		00199714: FALL_THROUGH

	[00199714]
		0019970c: FALL_THROUGH
 	00199714 push ax
 	0019971c mov mar,0x3cef20
 	00199728 mov ax,mar
 	00199734 push op
 	0019973c mov op,ax
 	00199744 setfuncargs 0x0
 	0019974c mov ax,0x89ef20
 	00199758 farcall ax
 	00199760 pop op
 	00199768 push ax
 	00199770 mov mar,0x8aef20
 	0019977c mov ax,mar
 	00199788 pop bx
 	00199790 cmpeq bx,ax
 	0019979c mov ax,bx
 	001997a8 pop bx
 	001997b0 lor bx,ax
 	001997bc mov ax,bx
		001997c8: FALL_THROUGH

	[001997c8]
		0019970c: CONDITIONAL_JUMP
		00199714: FALL_THROUGH
 	001997c8 jnz 0x00199884
		00199884: CONDITIONAL_JUMP
		001997d0: FALL_THROUGH

	[001997d0]
		001997c8: FALL_THROUGH
 	001997d0 push ax
 	001997d8 mov mar,0x3cef20
 	001997e4 mov ax,mar
 	001997f0 push op
 	001997f8 mov op,ax
 	00199800 setfuncargs 0x0
 	00199808 mov ax,0x89ef20
 	00199814 farcall ax
 	0019981c pop op
 	00199824 push ax
 	0019982c mov mar,0x8e6f20
 	00199838 mov ax,mar
 	00199844 pop bx
 	0019984c cmpeq bx,ax
 	00199858 mov ax,bx
 	00199864 pop bx
 	0019986c lor bx,ax
 	00199878 mov ax,bx
		00199884: FALL_THROUGH

	[00199884]
		001997c8: CONDITIONAL_JUMP
		001997d0: FALL_THROUGH
 	00199884 jnz 0x00199940
		00199940: CONDITIONAL_JUMP
		0019988c: FALL_THROUGH

	[0019988c]
		00199884: FALL_THROUGH
 	0019988c push ax
 	00199894 mov mar,0x3cef20
 	001998a0 mov ax,mar
 	001998ac push op
 	001998b4 mov op,ax
 	001998bc setfuncargs 0x0
 	001998c4 mov ax,0x89ef20
 	001998d0 farcall ax
 	001998d8 pop op
 	001998e0 push ax
 	001998e8 mov mar,0x8eef20
 	001998f4 mov ax,mar
 	00199900 pop bx
 	00199908 cmpeq bx,ax
 	00199914 mov ax,bx
 	00199920 pop bx
 	00199928 lor bx,ax
 	00199934 mov ax,bx
		00199940: FALL_THROUGH

	[00199940]
		00199884: CONDITIONAL_JUMP
		0019988c: FALL_THROUGH
 	00199940 jnz 0x001999fc
		001999fc: CONDITIONAL_JUMP
		00199948: FALL_THROUGH

	[00199948]
		00199940: FALL_THROUGH
 	00199948 push ax
 	00199950 mov mar,0x3cef20
 	0019995c mov ax,mar
 	00199968 push op
 	00199970 mov op,ax
 	00199978 setfuncargs 0x0
 	00199980 mov ax,0x89ef20
 	0019998c farcall ax
 	00199994 pop op
 	0019999c push ax
 	001999a4 mov mar,0x8fef20
 	001999b0 mov ax,mar
 	001999bc pop bx
 	001999c4 cmpeq bx,ax
 	001999d0 mov ax,bx
 	001999dc pop bx
 	001999e4 lor bx,ax
 	001999f0 mov ax,bx
		001999fc: FALL_THROUGH

	[001999fc]
		00199940: CONDITIONAL_JUMP
		00199948: FALL_THROUGH
 	001999fc jz 0x0019af04
		0019af04: CONDITIONAL_JUMP
		00199a04: FALL_THROUGH

	[00199a04]
		001999fc: FALL_THROUGH
 	00199a04 sourceline 0x1cab
 	00199a0c setfuncargs 0x0
 	00199a14 mov ax,0x6def20
 	00199a20 farcall ax
 	00199a28 lnot ax
 	00199a30 jz 0x00199a8c
		00199a8c: CONDITIONAL_JUMP
		00199a38: FALL_THROUGH

	[00199a38]
		00199a04: FALL_THROUGH
 	00199a38 mov ax,0x83
 	00199a44 farpush ax
 	00199a4c mov ax,0x9e
 	00199a58 farpush ax
 	00199a60 setfuncargs 0x2
 	00199a68 mov ax,0x6e6f20
 	00199a74 farcall ax
 	00199a7c farsubsp 0x2
 	00199a84 jmp 0x0019aef4
		0019aef4: UNCONDITIONAL_JUMP

	[00199a8c]
		00199a04: CONDITIONAL_JUMP
 	00199a8c sourceline 0x1cae
 	00199a94 push op
 	00199a9c mov ax,0x397
 	00199aa8 farpush ax
 	00199ab0 mov ax,0x3
 	00199abc farpush ax
 	00199ac4 mov mar,0x3cef20
 	00199ad0 mov ax,mar
 	00199adc mov op,ax
 	00199ae4 setfuncargs 0x2
 	00199aec mov ax,0x6eef20
 	00199af8 farcall ax
 	00199b00 farsubsp 0x2
 	00199b08 pop op
 	00199b10 sourceline 0x1caf
 	00199b18 mov ax,0x3
 	00199b24 mov bx,ax
 	00199b30 mov mar,0x3cef20
 	00199b3c mov ax,mar
 	00199b48 push op
 	00199b50 mov op,ax
 	00199b58 farpush bx
 	00199b60 setfuncargs 0x1
 	00199b68 mov ax,0x69ef20
 	00199b74 farcall ax
 	00199b7c farsubsp 0x1
 	00199b84 pop op
 	00199b8c sourceline 0x1cb0
 	00199b94 mov ax,0x0
 	00199ba0 mov bx,ax
 	00199bac mov mar,0x3cef20
 	00199bb8 mov ax,mar
 	00199bc4 push op
 	00199bcc mov op,ax
 	00199bd4 farpush bx
 	00199bdc setfuncargs 0x1
 	00199be4 mov ax,0x436f20
 	00199bf0 farcall ax
 	00199bf8 farsubsp 0x1
 	00199c00 pop op
 	00199c08 sourceline 0x1cb1
 	00199c10 mov mar,0xcdef20
 	00199c1c memread4 ax
 	00199c24 jz 0x0019a688
		0019a688: CONDITIONAL_JUMP
		00199c2c: FALL_THROUGH

	[00199c2c]
		00199a8c: FALL_THROUGH
 	00199c2c sourceline 0x1cb3
 	00199c34 push op
 	00199c3c mov ax,0x2c2692
 	00199c48 farpush ax
 	00199c50 mov mar,0x3cef20
 	00199c5c mov ax,mar
 	00199c68 mov op,ax
 	00199c70 setfuncargs 0x1
 	00199c78 mov ax,0x6f6f20
 	00199c84 farcall ax
 	00199c8c farsubsp 0x1
 	00199c94 pop op
 	00199c9c sourceline 0x1cb4
 	00199ca4 push op
 	00199cac mov ax,0x2c26a7
 	00199cb8 farpush ax
 	00199cc0 mov mar,0xb9ef20
 	00199ccc mov ax,mar
 	00199cd8 mov op,ax
 	00199ce0 setfuncargs 0x1
 	00199ce8 mov ax,0x6f6f20
 	00199cf4 farcall ax
 	00199cfc farsubsp 0x1
 	00199d04 pop op
 	00199d0c sourceline 0x1cb5
 	00199d14 push op
 	00199d1c mov ax,0x2c26ba
 	00199d28 farpush ax
 	00199d30 mov mar,0x3cef20
 	00199d3c mov ax,mar
 	00199d48 mov op,ax
 	00199d50 setfuncargs 0x1
 	00199d58 mov ax,0x6f6f20
 	00199d64 farcall ax
 	00199d6c farsubsp 0x1
 	00199d74 pop op
 	00199d7c sourceline 0x1cb6
 	00199d84 push op
 	00199d8c mov ax,0x2c26fb
 	00199d98 farpush ax
 	00199da0 mov mar,0xb9ef20
 	00199dac mov ax,mar
 	00199db8 mov op,ax
 	00199dc0 setfuncargs 0x1
 	00199dc8 mov ax,0x6f6f20
 	00199dd4 farcall ax
 	00199ddc farsubsp 0x1
 	00199de4 pop op
 	00199dec sourceline 0x1cb7
 	00199df4 push op
 	00199dfc mov ax,0x14
 	00199e08 farpush ax
 	00199e10 mov mar,0x3cef20
 	00199e1c mov ax,mar
 	00199e28 mov op,ax
 	00199e30 setfuncargs 0x1
 	00199e38 mov ax,0x51ef20
 	00199e44 farcall ax
 	00199e4c farsubsp 0x1
 	00199e54 pop op
 	00199e5c sourceline 0x1cb8
 	00199e64 mov ax,0x7c
 	00199e70 mov bx,ax
 	00199e7c mov mar,0x3cef20
 	00199e88 mov ax,mar
 	00199e94 push op
 	00199e9c mov op,ax
 	00199ea4 farpush bx
 	00199eac setfuncargs 0x1
 	00199eb4 mov ax,0x526f20
 	00199ec0 farcall ax
 	00199ec8 farsubsp 0x1
 	00199ed0 pop op
 	00199ed8 sourceline 0x1cb9
 	00199ee0 mov ax,0x9f
 	00199eec mov bx,ax
 	00199ef8 mov mar,0x3cef20
 	00199f04 mov ax,mar
 	00199f10 push op
 	00199f18 mov op,ax
 	00199f20 farpush bx
 	00199f28 setfuncargs 0x1
 	00199f30 mov ax,0x70ef20
 	00199f3c farcall ax
 	00199f44 farsubsp 0x1
 	00199f4c pop op
 	00199f54 sourceline 0x1cba
 	00199f5c push op
 	00199f64 mov ax,0x426
 	00199f70 farpush ax
 	00199f78 mov ax,0x397
 	00199f84 farpush ax
 	00199f8c mov ax,0x0
 	00199f98 farpush ax
 	00199fa0 mov ax,0x3
 	00199fac farpush ax
 	00199fb4 mov ax,0x0
 	00199fc0 farpush ax
 	00199fc8 mov mar,0x3cef20
 	00199fd4 mov ax,mar
 	00199fe0 mov op,ax
 	00199fe8 setfuncargs 0x5
 	00199ff0 mov ax,0x536f20
 	00199ffc farcall ax
 	0019a004 farsubsp 0x5
 	0019a00c pop op
 	0019a014 sourceline 0x1cbc
 	0019a01c mov ax,0x3
 	0019a028 farpush ax
 	0019a030 setfuncargs 0x1
 	0019a038 mov ax,0x4a6f20
 	0019a044 farcall ax
 	0019a04c farsubsp 0x1
 	0019a054 mov mar,sp
 	0019a060 memwrite4 ax
 	0019a068 add sp,0x4
 	0019a074 sourceline 0x1cbd
 	0019a07c stackptr 0x4
 	0019a084 memread4 ax
 	0019a08c push ax
 	0019a094 mov ax,0x0
 	0019a0a0 pop bx
 	0019a0a8 cmpeq bx,ax
 	0019a0b4 mov ax,bx
 	0019a0c0 jz 0x0019a138
		0019a138: CONDITIONAL_JUMP
		0019a0c8: FALL_THROUGH

	[0019a0c8]
		00199c2c: FALL_THROUGH
 	0019a0c8 push op
 	0019a0d0 mov ax,0x2c8717
 	0019a0dc farpush ax
 	0019a0e4 mov mar,0x3cef20
 	0019a0f0 mov ax,mar
 	0019a0fc mov op,ax
 	0019a104 setfuncargs 0x1
 	0019a10c mov ax,0x6f6f20
 	0019a118 farcall ax
 	0019a120 farsubsp 0x1
 	0019a128 pop op
 	0019a130 jmp 0x0019a330
		0019a330: UNCONDITIONAL_JUMP

	[0019a138]
		00199c2c: CONDITIONAL_JUMP
 	0019a138 sourceline 0x1cbe
 	0019a140 stackptr 0x4
 	0019a148 memread4 ax
 	0019a150 push ax
 	0019a158 mov ax,0x1
 	0019a164 pop bx
 	0019a16c cmpeq bx,ax
 	0019a178 mov ax,bx
 	0019a184 jz 0x0019a1fc
		0019a1fc: CONDITIONAL_JUMP
		0019a18c: FALL_THROUGH

	[0019a18c]
		0019a138: FALL_THROUGH
 	0019a18c push op
 	0019a194 mov ax,0x2c8740
 	0019a1a0 farpush ax
 	0019a1a8 mov mar,0x3cef20
 	0019a1b4 mov ax,mar
 	0019a1c0 mov op,ax
 	0019a1c8 setfuncargs 0x1
 	0019a1d0 mov ax,0x6f6f20
 	0019a1dc farcall ax
 	0019a1e4 farsubsp 0x1
 	0019a1ec pop op
 	0019a1f4 jmp 0x0019a330
		0019a330: UNCONDITIONAL_JUMP

	[0019a1fc]
		0019a138: CONDITIONAL_JUMP
 	0019a1fc sourceline 0x1cbf
 	0019a204 stackptr 0x4
 	0019a20c memread4 ax
 	0019a214 push ax
 	0019a21c mov ax,0x2
 	0019a228 pop bx
 	0019a230 cmpeq bx,ax
 	0019a23c mov ax,bx
 	0019a248 jz 0x0019a2c0
		0019a2c0: CONDITIONAL_JUMP
		0019a250: FALL_THROUGH

	[0019a250]
		0019a1fc: FALL_THROUGH
 	0019a250 push op
 	0019a258 mov ax,0x2c8769
 	0019a264 farpush ax
 	0019a26c mov mar,0x3cef20
 	0019a278 mov ax,mar
 	0019a284 mov op,ax
 	0019a28c setfuncargs 0x1
 	0019a294 mov ax,0x6f6f20
 	0019a2a0 farcall ax
 	0019a2a8 farsubsp 0x1
 	0019a2b0 pop op
 	0019a2b8 jmp 0x0019a330
		0019a330: UNCONDITIONAL_JUMP

	[0019a2c0]
		0019a1fc: CONDITIONAL_JUMP
 	0019a2c0 sourceline 0x1cc0
 	0019a2c8 push op
 	0019a2d0 mov ax,0x2c8792
 	0019a2dc farpush ax
 	0019a2e4 mov mar,0x3cef20
 	0019a2f0 mov ax,mar
 	0019a2fc mov op,ax
 	0019a304 setfuncargs 0x1
 	0019a30c mov ax,0x6f6f20
 	0019a318 farcall ax
 	0019a320 farsubsp 0x1
 	0019a328 pop op
		0019a330: FALL_THROUGH

	[0019a330]
		0019a0c8: UNCONDITIONAL_JUMP
		0019a18c: UNCONDITIONAL_JUMP
		0019a250: UNCONDITIONAL_JUMP
		0019a2c0: FALL_THROUGH
 	0019a330 sourceline 0x1cc2
 	0019a338 push op
 	0019a340 mov ax,0x2c2f42
 	0019a34c farpush ax
 	0019a354 mov mar,0xb9ef20
 	0019a360 mov ax,mar
 	0019a36c mov op,ax
 	0019a374 setfuncargs 0x1
 	0019a37c mov ax,0x6f6f20
 	0019a388 farcall ax
 	0019a390 farsubsp 0x1
 	0019a398 pop op
 	0019a3a0 sourceline 0x1cc3
 	0019a3a8 push op
 	0019a3b0 mov ax,0x427
 	0019a3bc farpush ax
 	0019a3c4 mov ax,0x397
 	0019a3d0 farpush ax
 	0019a3d8 mov ax,0x0
 	0019a3e4 farpush ax
 	0019a3ec mov ax,0x3
 	0019a3f8 farpush ax
 	0019a400 mov ax,0x0
 	0019a40c farpush ax
 	0019a414 mov mar,0x3cef20
 	0019a420 mov ax,mar
 	0019a42c mov op,ax
 	0019a434 setfuncargs 0x5
 	0019a43c mov ax,0x536f20
 	0019a448 farcall ax
 	0019a450 farsubsp 0x5
 	0019a458 pop op
 	0019a460 sourceline 0x1cc4
 	0019a468 push op
 	0019a470 mov ax,0x2
 	0019a47c farpush ax
 	0019a484 mov mar,0x3cef20
 	0019a490 mov ax,mar
 	0019a49c mov op,ax
 	0019a4a4 setfuncargs 0x1
 	0019a4ac mov ax,0x51ef20
 	0019a4b8 farcall ax
 	0019a4c0 farsubsp 0x1
 	0019a4c8 pop op
 	0019a4d0 sourceline 0x1cc5
 	0019a4d8 mov ax,0x3
 	0019a4e4 mov bx,ax
 	0019a4f0 mov mar,0x3cef20
 	0019a4fc mov ax,mar
 	0019a508 push op
 	0019a510 mov op,ax
 	0019a518 farpush bx
 	0019a520 setfuncargs 0x1
 	0019a528 mov ax,0x766f20
 	0019a534 farcall ax
 	0019a53c farsubsp 0x1
 	0019a544 pop op
 	0019a54c sourceline 0x1cc6
 	0019a554 mov ax,0x83
 	0019a560 mov bx,ax
 	0019a56c mov mar,0x3cef20
 	0019a578 mov ax,mar
 	0019a584 push op
 	0019a58c mov op,ax
 	0019a594 farpush bx
 	0019a59c setfuncargs 0x1
 	0019a5a4 mov ax,0x526f20
 	0019a5b0 farcall ax
 	0019a5b8 farsubsp 0x1
 	0019a5c0 pop op
 	0019a5c8 sourceline 0x1cc7
 	0019a5d0 mov ax,0x9e
 	0019a5dc mov bx,ax
 	0019a5e8 mov mar,0x3cef20
 	0019a5f4 mov ax,mar
 	0019a600 push op
 	0019a608 mov op,ax
 	0019a610 farpush bx
 	0019a618 setfuncargs 0x1
 	0019a620 mov ax,0x70ef20
 	0019a62c farcall ax
 	0019a634 farsubsp 0x1
 	0019a63c pop op
 	0019a644 sourceline 0x1cc8
 	0019a64c mov ax,0x0
 	0019a658 mov mar,0xcdef20
 	0019a664 memwrite4 ax
 	0019a66c sourceline 0x1cc9
 	0019a674 sub sp,0x4
 	0019a680 jmp 0x0019aef4
		0019aef4: UNCONDITIONAL_JUMP

	[0019a688]
		00199a8c: CONDITIONAL_JUMP
 	0019a688 sourceline 0x1ccc
 	0019a690 push op
 	0019a698 mov ax,0x14
 	0019a6a4 farpush ax
 	0019a6ac mov mar,0x3cef20
 	0019a6b8 mov ax,mar
 	0019a6c4 mov op,ax
 	0019a6cc setfuncargs 0x1
 	0019a6d4 mov ax,0x51ef20
 	0019a6e0 farcall ax
 	0019a6e8 farsubsp 0x1
 	0019a6f0 pop op
 	0019a6f8 sourceline 0x1ccd
 	0019a700 mov ax,0x7c
 	0019a70c mov bx,ax
 	0019a718 mov mar,0x3cef20
 	0019a724 mov ax,mar
 	0019a730 push op
 	0019a738 mov op,ax
 	0019a740 farpush bx
 	0019a748 setfuncargs 0x1
 	0019a750 mov ax,0x526f20
 	0019a75c farcall ax
 	0019a764 farsubsp 0x1
 	0019a76c pop op
 	0019a774 sourceline 0x1cce
 	0019a77c mov ax,0x9f
 	0019a788 mov bx,ax
 	0019a794 mov mar,0x3cef20
 	0019a7a0 mov ax,mar
 	0019a7ac push op
 	0019a7b4 mov op,ax
 	0019a7bc farpush bx
 	0019a7c4 setfuncargs 0x1
 	0019a7cc mov ax,0x70ef20
 	0019a7d8 farcall ax
 	0019a7e0 farsubsp 0x1
 	0019a7e8 pop op
 	0019a7f0 sourceline 0x1ccf
 	0019a7f8 push op
 	0019a800 mov ax,0x426
 	0019a80c farpush ax
 	0019a814 mov ax,0x397
 	0019a820 farpush ax
 	0019a828 mov ax,0x0
 	0019a834 farpush ax
 	0019a83c mov ax,0x3
 	0019a848 farpush ax
 	0019a850 mov ax,0x0
 	0019a85c farpush ax
 	0019a864 mov mar,0x3cef20
 	0019a870 mov ax,mar
 	0019a87c mov op,ax
 	0019a884 setfuncargs 0x5
 	0019a88c mov ax,0x536f20
 	0019a898 farcall ax
 	0019a8a0 farsubsp 0x5
 	0019a8a8 pop op
 	0019a8b0 sourceline 0x1cd1
 	0019a8b8 mov ax,0x3
 	0019a8c4 farpush ax
 	0019a8cc setfuncargs 0x1
 	0019a8d4 mov ax,0x4a6f20
 	0019a8e0 farcall ax
 	0019a8e8 farsubsp 0x1
 	0019a8f0 mov mar,sp
 	0019a8fc memwrite4 ax
 	0019a904 add sp,0x4
 	0019a910 sourceline 0x1cd2
 	0019a918 stackptr 0x4
 	0019a920 memread4 ax
 	0019a928 push ax
 	0019a930 mov ax,0x0
 	0019a93c pop bx
 	0019a944 cmpeq bx,ax
 	0019a950 mov ax,bx
 	0019a95c jz 0x0019a9d4
		0019a9d4: CONDITIONAL_JUMP
		0019a964: FALL_THROUGH

	[0019a964]
		0019a688: FALL_THROUGH
 	0019a964 push op
 	0019a96c mov ax,0x2c8717
 	0019a978 farpush ax
 	0019a980 mov mar,0x3cef20
 	0019a98c mov ax,mar
 	0019a998 mov op,ax
 	0019a9a0 setfuncargs 0x1
 	0019a9a8 mov ax,0x6f6f20
 	0019a9b4 farcall ax
 	0019a9bc farsubsp 0x1
 	0019a9c4 pop op
 	0019a9cc jmp 0x0019abcc
		0019abcc: UNCONDITIONAL_JUMP

	[0019a9d4]
		0019a688: CONDITIONAL_JUMP
 	0019a9d4 sourceline 0x1cd3
 	0019a9dc stackptr 0x4
 	0019a9e4 memread4 ax
 	0019a9ec push ax
 	0019a9f4 mov ax,0x1
 	0019aa00 pop bx
 	0019aa08 cmpeq bx,ax
 	0019aa14 mov ax,bx
 	0019aa20 jz 0x0019aa98
		0019aa98: CONDITIONAL_JUMP
		0019aa28: FALL_THROUGH

	[0019aa28]
		0019a9d4: FALL_THROUGH
 	0019aa28 push op
 	0019aa30 mov ax,0x2c8740
 	0019aa3c farpush ax
 	0019aa44 mov mar,0x3cef20
 	0019aa50 mov ax,mar
 	0019aa5c mov op,ax
 	0019aa64 setfuncargs 0x1
 	0019aa6c mov ax,0x6f6f20
 	0019aa78 farcall ax
 	0019aa80 farsubsp 0x1
 	0019aa88 pop op
 	0019aa90 jmp 0x0019abcc
		0019abcc: UNCONDITIONAL_JUMP

	[0019aa98]
		0019a9d4: CONDITIONAL_JUMP
 	0019aa98 sourceline 0x1cd4
 	0019aaa0 stackptr 0x4
 	0019aaa8 memread4 ax
 	0019aab0 push ax
 	0019aab8 mov ax,0x2
 	0019aac4 pop bx
 	0019aacc cmpeq bx,ax
 	0019aad8 mov ax,bx
 	0019aae4 jz 0x0019ab5c
		0019ab5c: CONDITIONAL_JUMP
		0019aaec: FALL_THROUGH

	[0019aaec]
		0019aa98: FALL_THROUGH
 	0019aaec push op
 	0019aaf4 mov ax,0x2c8769
 	0019ab00 farpush ax
 	0019ab08 mov mar,0x3cef20
 	0019ab14 mov ax,mar
 	0019ab20 mov op,ax
 	0019ab28 setfuncargs 0x1
 	0019ab30 mov ax,0x6f6f20
 	0019ab3c farcall ax
 	0019ab44 farsubsp 0x1
 	0019ab4c pop op
 	0019ab54 jmp 0x0019abcc
		0019abcc: UNCONDITIONAL_JUMP

	[0019ab5c]
		0019aa98: CONDITIONAL_JUMP
 	0019ab5c sourceline 0x1cd5
 	0019ab64 push op
 	0019ab6c mov ax,0x2c8792
 	0019ab78 farpush ax
 	0019ab80 mov mar,0x3cef20
 	0019ab8c mov ax,mar
 	0019ab98 mov op,ax
 	0019aba0 setfuncargs 0x1
 	0019aba8 mov ax,0x6f6f20
 	0019abb4 farcall ax
 	0019abbc farsubsp 0x1
 	0019abc4 pop op
		0019abcc: FALL_THROUGH

	[0019abcc]
		0019a964: UNCONDITIONAL_JUMP
		0019aa28: UNCONDITIONAL_JUMP
		0019aaec: UNCONDITIONAL_JUMP
		0019ab5c: FALL_THROUGH
 	0019abcc sourceline 0x1cd7
 	0019abd4 push op
 	0019abdc mov ax,0x2c2f42
 	0019abe8 farpush ax
 	0019abf0 mov mar,0xb9ef20
 	0019abfc mov ax,mar
 	0019ac08 mov op,ax
 	0019ac10 setfuncargs 0x1
 	0019ac18 mov ax,0x6f6f20
 	0019ac24 farcall ax
 	0019ac2c farsubsp 0x1
 	0019ac34 pop op
 	0019ac3c sourceline 0x1cd8
 	0019ac44 push op
 	0019ac4c mov ax,0x427
 	0019ac58 farpush ax
 	0019ac60 mov ax,0x397
 	0019ac6c farpush ax
 	0019ac74 mov ax,0x0
 	0019ac80 farpush ax
 	0019ac88 mov ax,0x3
 	0019ac94 farpush ax
 	0019ac9c mov ax,0x0
 	0019aca8 farpush ax
 	0019acb0 mov mar,0x3cef20
 	0019acbc mov ax,mar
 	0019acc8 mov op,ax
 	0019acd0 setfuncargs 0x5
 	0019acd8 mov ax,0x536f20
 	0019ace4 farcall ax
 	0019acec farsubsp 0x5
 	0019acf4 pop op
 	0019acfc sourceline 0x1cd9
 	0019ad04 push op
 	0019ad0c mov ax,0x2
 	0019ad18 farpush ax
 	0019ad20 mov mar,0x3cef20
 	0019ad2c mov ax,mar
 	0019ad38 mov op,ax
 	0019ad40 setfuncargs 0x1
 	0019ad48 mov ax,0x51ef20
 	0019ad54 farcall ax
 	0019ad5c farsubsp 0x1
 	0019ad64 pop op
 	0019ad6c sourceline 0x1cda
 	0019ad74 mov ax,0x3
 	0019ad80 mov bx,ax
 	0019ad8c mov mar,0x3cef20
 	0019ad98 mov ax,mar
 	0019ada4 push op
 	0019adac mov op,ax
 	0019adb4 farpush bx
 	0019adbc setfuncargs 0x1
 	0019adc4 mov ax,0x766f20
 	0019add0 farcall ax
 	0019add8 farsubsp 0x1
 	0019ade0 pop op
 	0019ade8 sourceline 0x1cdb
 	0019adf0 mov ax,0x83
 	0019adfc mov bx,ax
 	0019ae08 mov mar,0x3cef20
 	0019ae14 mov ax,mar
 	0019ae20 push op
 	0019ae28 mov op,ax
 	0019ae30 farpush bx
 	0019ae38 setfuncargs 0x1
 	0019ae40 mov ax,0x526f20
 	0019ae4c farcall ax
 	0019ae54 farsubsp 0x1
 	0019ae5c pop op
 	0019ae64 sourceline 0x1cdc
 	0019ae6c mov ax,0x9e
 	0019ae78 mov bx,ax
 	0019ae84 mov mar,0x3cef20
 	0019ae90 mov ax,mar
 	0019ae9c push op
 	0019aea4 mov op,ax
 	0019aeac farpush bx
 	0019aeb4 setfuncargs 0x1
 	0019aebc mov ax,0x70ef20
 	0019aec8 farcall ax
 	0019aed0 farsubsp 0x1
 	0019aed8 pop op
 	0019aee0 sourceline 0x1cdd
 	0019aee8 sub sp,0x4
		0019aef4: FALL_THROUGH

	[0019aef4]
		00199a38: UNCONDITIONAL_JUMP
		0019a330: UNCONDITIONAL_JUMP
		0019abcc: FALL_THROUGH
 	0019aef4 sourceline 0x1cdf
 	0019aefc jmp 0x0019db24
		0019db24: UNCONDITIONAL_JUMP

	[0019af04]
		001999fc: CONDITIONAL_JUMP
 	0019af04 sourceline 0x1ce1
 	0019af0c mov mar,0x3cef20
 	0019af18 mov ax,mar
 	0019af24 push op
 	0019af2c mov op,ax
 	0019af34 setfuncargs 0x0
 	0019af3c mov ax,0x89ef20
 	0019af48 farcall ax
 	0019af50 pop op
 	0019af58 push ax
 	0019af60 mov mar,0x7def20
 	0019af6c mov ax,mar
 	0019af78 pop bx
 	0019af80 cmpeq bx,ax
 	0019af8c mov ax,bx
 	0019af98 jz 0x0019b298
		0019b298: CONDITIONAL_JUMP
		0019afa0: FALL_THROUGH

	[0019afa0]
		0019af04: FALL_THROUGH
 	0019afa0 sourceline 0x1ce3
 	0019afa8 mov mar,0xb9ef20
 	0019afb4 mov ax,mar
 	0019afc0 push op
 	0019afc8 mov op,ax
 	0019afd0 setfuncargs 0x0
 	0019afd8 mov ax,0x516f20
 	0019afe4 farcall ax
 	0019afec pop op
 	0019aff4 push ax
 	0019affc mov ax,0x72
 	0019b008 pop bx
 	0019b010 cmpeq bx,ax
 	0019b01c mov ax,bx
 	0019b028 jz 0x0019b0c8
		0019b0c8: CONDITIONAL_JUMP
		0019b030: FALL_THROUGH

	[0019b030]
		0019afa0: FALL_THROUGH
 	0019b030 push op
 	0019b038 mov ax,0x397
 	0019b044 farpush ax
 	0019b04c mov ax,0x4e
 	0019b058 farpush ax
 	0019b060 mov ax,0xae
 	0019b06c farpush ax
 	0019b074 mov mar,0x3cef20
 	0019b080 mov ax,mar
 	0019b08c mov op,ax
 	0019b094 setfuncargs 0x3
 	0019b09c mov ax,0x726f20
 	0019b0a8 farcall ax
 	0019b0b0 farsubsp 0x3
 	0019b0b8 pop op
 	0019b0c0 jmp 0x0019b160
		0019b160: UNCONDITIONAL_JUMP

	[0019b0c8]
		0019afa0: CONDITIONAL_JUMP
 	0019b0c8 sourceline 0x1ce4
 	0019b0d0 push op
 	0019b0d8 mov ax,0x397
 	0019b0e4 farpush ax
 	0019b0ec mov ax,0x49
 	0019b0f8 farpush ax
 	0019b100 mov ax,0x4f
 	0019b10c farpush ax
 	0019b114 mov mar,0x3cef20
 	0019b120 mov ax,mar
 	0019b12c mov op,ax
 	0019b134 setfuncargs 0x3
 	0019b13c mov ax,0x726f20
 	0019b148 farcall ax
 	0019b150 farsubsp 0x3
 	0019b158 pop op
		0019b160: FALL_THROUGH

	[0019b160]
		0019b030: UNCONDITIONAL_JUMP
		0019b0c8: FALL_THROUGH
 	0019b160 sourceline 0x1ce5
 	0019b168 mov ax,0x1
 	0019b174 mov bx,ax
 	0019b180 mov mar,0x3cef20
 	0019b18c mov ax,mar
 	0019b198 push op
 	0019b1a0 mov op,ax
 	0019b1a8 farpush bx
 	0019b1b0 setfuncargs 0x1
 	0019b1b8 mov ax,0x69ef20
 	0019b1c4 farcall ax
 	0019b1cc farsubsp 0x1
 	0019b1d4 pop op
 	0019b1dc sourceline 0x1ce7
 	0019b1e4 push op
 	0019b1ec mov ax,0x2c2e3b
 	0019b1f8 farpush ax
 	0019b200 mov ax,0x138
 	0019b20c farpush ax
 	0019b214 mov ax,0x92
 	0019b220 farpush ax
 	0019b228 mov ax,0x0
 	0019b234 farpush ax
 	0019b23c mov mar,0x3cef20
 	0019b248 mov ax,mar
 	0019b254 mov op,ax
 	0019b25c setfuncargs 0x4
 	0019b264 mov ax,0x6aef20
 	0019b270 farcall ax
 	0019b278 farsubsp 0x4
 	0019b280 pop op
 	0019b288 sourceline 0x1ce8
 	0019b290 jmp 0x0019db24
		0019db24: UNCONDITIONAL_JUMP

	[0019b298]
		0019af04: CONDITIONAL_JUMP
 	0019b298 sourceline 0x1cea
 	0019b2a0 mov mar,0x3cef20
 	0019b2ac mov ax,mar
 	0019b2b8 push op
 	0019b2c0 mov op,ax
 	0019b2c8 setfuncargs 0x0
 	0019b2d0 mov ax,0x89ef20
 	0019b2dc farcall ax
 	0019b2e4 pop op
 	0019b2ec push ax
 	0019b2f4 mov mar,0x8f6f20
 	0019b300 mov ax,mar
 	0019b30c pop bx
 	0019b314 cmpeq bx,ax
 	0019b320 mov ax,bx
 	0019b32c jz 0x0019c39c
		0019c39c: CONDITIONAL_JUMP
		0019b334: FALL_THROUGH

	[0019b334]
		0019b298: FALL_THROUGH
 	0019b334 sourceline 0x1cec
 	0019b33c setfuncargs 0x0
 	0019b344 mov ax,0x6def20
 	0019b350 farcall ax
 	0019b358 lnot ax
 	0019b360 jz 0x0019b3bc
		0019b3bc: CONDITIONAL_JUMP
		0019b368: FALL_THROUGH

	[0019b368]
		0019b334: FALL_THROUGH
 	0019b368 mov ax,0x83
 	0019b374 farpush ax
 	0019b37c mov ax,0x9e
 	0019b388 farpush ax
 	0019b390 setfuncargs 0x2
 	0019b398 mov ax,0x6e6f20
 	0019b3a4 farcall ax
 	0019b3ac farsubsp 0x2
 	0019b3b4 jmp 0x0019c38c
		0019c38c: UNCONDITIONAL_JUMP

	[0019b3bc]
		0019b334: CONDITIONAL_JUMP
 	0019b3bc sourceline 0x1cef
 	0019b3c4 push op
 	0019b3cc mov ax,0x397
 	0019b3d8 farpush ax
 	0019b3e0 mov ax,0x3
 	0019b3ec farpush ax
 	0019b3f4 mov mar,0x3cef20
 	0019b400 mov ax,mar
 	0019b40c mov op,ax
 	0019b414 setfuncargs 0x2
 	0019b41c mov ax,0x6eef20
 	0019b428 farcall ax
 	0019b430 farsubsp 0x2
 	0019b438 pop op
 	0019b440 sourceline 0x1cf0
 	0019b448 mov ax,0x3
 	0019b454 mov bx,ax
 	0019b460 mov mar,0x3cef20
 	0019b46c mov ax,mar
 	0019b478 push op
 	0019b480 mov op,ax
 	0019b488 farpush bx
 	0019b490 setfuncargs 0x1
 	0019b498 mov ax,0x69ef20
 	0019b4a4 farcall ax
 	0019b4ac farsubsp 0x1
 	0019b4b4 pop op
 	0019b4bc sourceline 0x1cf1
 	0019b4c4 mov ax,0x0
 	0019b4d0 mov bx,ax
 	0019b4dc mov mar,0x3cef20
 	0019b4e8 mov ax,mar
 	0019b4f4 push op
 	0019b4fc mov op,ax
 	0019b504 farpush bx
 	0019b50c setfuncargs 0x1
 	0019b514 mov ax,0x436f20
 	0019b520 farcall ax
 	0019b528 farsubsp 0x1
 	0019b530 pop op
 	0019b538 sourceline 0x1cf2
 	0019b540 mov mar,0xcdef20
 	0019b54c memread4 ax
 	0019b554 jz 0x0019bd70
		0019bd70: CONDITIONAL_JUMP
		0019b55c: FALL_THROUGH

	[0019b55c]
		0019b3bc: FALL_THROUGH
 	0019b55c sourceline 0x1cf4
 	0019b564 push op
 	0019b56c mov ax,0x2c2692
 	0019b578 farpush ax
 	0019b580 mov mar,0x3cef20
 	0019b58c mov ax,mar
 	0019b598 mov op,ax
 	0019b5a0 setfuncargs 0x1
 	0019b5a8 mov ax,0x6f6f20
 	0019b5b4 farcall ax
 	0019b5bc farsubsp 0x1
 	0019b5c4 pop op
 	0019b5cc sourceline 0x1cf5
 	0019b5d4 push op
 	0019b5dc mov ax,0x2c26a7
 	0019b5e8 farpush ax
 	0019b5f0 mov mar,0xb9ef20
 	0019b5fc mov ax,mar
 	0019b608 mov op,ax
 	0019b610 setfuncargs 0x1
 	0019b618 mov ax,0x6f6f20
 	0019b624 farcall ax
 	0019b62c farsubsp 0x1
 	0019b634 pop op
 	0019b63c sourceline 0x1cf6
 	0019b644 push op
 	0019b64c mov ax,0x2c26ba
 	0019b658 farpush ax
 	0019b660 mov mar,0x3cef20
 	0019b66c mov ax,mar
 	0019b678 mov op,ax
 	0019b680 setfuncargs 0x1
 	0019b688 mov ax,0x6f6f20
 	0019b694 farcall ax
 	0019b69c farsubsp 0x1
 	0019b6a4 pop op
 	0019b6ac sourceline 0x1cf7
 	0019b6b4 push op
 	0019b6bc mov ax,0x2c26fb
 	0019b6c8 farpush ax
 	0019b6d0 mov mar,0xb9ef20
 	0019b6dc mov ax,mar
 	0019b6e8 mov op,ax
 	0019b6f0 setfuncargs 0x1
 	0019b6f8 mov ax,0x6f6f20
 	0019b704 farcall ax
 	0019b70c farsubsp 0x1
 	0019b714 pop op
 	0019b71c sourceline 0x1cf8
 	0019b724 push op
 	0019b72c mov ax,0x14
 	0019b738 farpush ax
 	0019b740 mov mar,0x3cef20
 	0019b74c mov ax,mar
 	0019b758 mov op,ax
 	0019b760 setfuncargs 0x1
 	0019b768 mov ax,0x51ef20
 	0019b774 farcall ax
 	0019b77c farsubsp 0x1
 	0019b784 pop op
 	0019b78c sourceline 0x1cf9
 	0019b794 mov ax,0x7c
 	0019b7a0 mov bx,ax
 	0019b7ac mov mar,0x3cef20
 	0019b7b8 mov ax,mar
 	0019b7c4 push op
 	0019b7cc mov op,ax
 	0019b7d4 farpush bx
 	0019b7dc setfuncargs 0x1
 	0019b7e4 mov ax,0x526f20
 	0019b7f0 farcall ax
 	0019b7f8 farsubsp 0x1
 	0019b800 pop op
 	0019b808 sourceline 0x1cfa
 	0019b810 mov ax,0x9f
 	0019b81c mov bx,ax
 	0019b828 mov mar,0x3cef20
 	0019b834 mov ax,mar
 	0019b840 push op
 	0019b848 mov op,ax
 	0019b850 farpush bx
 	0019b858 setfuncargs 0x1
 	0019b860 mov ax,0x70ef20
 	0019b86c farcall ax
 	0019b874 farsubsp 0x1
 	0019b87c pop op
 	0019b884 sourceline 0x1cfb
 	0019b88c push op
 	0019b894 mov ax,0x426
 	0019b8a0 farpush ax
 	0019b8a8 mov ax,0x397
 	0019b8b4 farpush ax
 	0019b8bc mov ax,0x0
 	0019b8c8 farpush ax
 	0019b8d0 mov ax,0x3
 	0019b8dc farpush ax
 	0019b8e4 mov ax,0x0
 	0019b8f0 farpush ax
 	0019b8f8 mov mar,0x3cef20
 	0019b904 mov ax,mar
 	0019b910 mov op,ax
 	0019b918 setfuncargs 0x5
 	0019b920 mov ax,0x536f20
 	0019b92c farcall ax
 	0019b934 farsubsp 0x5
 	0019b93c pop op
 	0019b944 sourceline 0x1cfc
 	0019b94c push op
 	0019b954 mov ax,0x2c25fb
 	0019b960 farpush ax
 	0019b968 mov mar,0x3cef20
 	0019b974 mov ax,mar
 	0019b980 mov op,ax
 	0019b988 setfuncargs 0x1
 	0019b990 mov ax,0x6f6f20
 	0019b99c farcall ax
 	0019b9a4 farsubsp 0x1
 	0019b9ac pop op
 	0019b9b4 sourceline 0x1cfd
 	0019b9bc push op
 	0019b9c4 mov ax,0x2c262d
 	0019b9d0 farpush ax
 	0019b9d8 mov mar,0xb9ef20
 	0019b9e4 mov ax,mar
 	0019b9f0 mov op,ax
 	0019b9f8 setfuncargs 0x1
 	0019ba00 mov ax,0x6f6f20
 	0019ba0c farcall ax
 	0019ba14 farsubsp 0x1
 	0019ba1c pop op
 	0019ba24 sourceline 0x1cfe
 	0019ba2c push op
 	0019ba34 mov ax,0x2c267d
 	0019ba40 farpush ax
 	0019ba48 mov mar,0x3cef20
 	0019ba54 mov ax,mar
 	0019ba60 mov op,ax
 	0019ba68 setfuncargs 0x1
 	0019ba70 mov ax,0x6f6f20
 	0019ba7c farcall ax
 	0019ba84 farsubsp 0x1
 	0019ba8c pop op
 	0019ba94 sourceline 0x1cff
 	0019ba9c push op
 	0019baa4 mov ax,0x427
 	0019bab0 farpush ax
 	0019bab8 mov ax,0x397
 	0019bac4 farpush ax
 	0019bacc mov ax,0x0
 	0019bad8 farpush ax
 	0019bae0 mov ax,0x3
 	0019baec farpush ax
 	0019baf4 mov ax,0x0
 	0019bb00 farpush ax
 	0019bb08 mov mar,0x3cef20
 	0019bb14 mov ax,mar
 	0019bb20 mov op,ax
 	0019bb28 setfuncargs 0x5
 	0019bb30 mov ax,0x536f20
 	0019bb3c farcall ax
 	0019bb44 farsubsp 0x5
 	0019bb4c pop op
 	0019bb54 sourceline 0x1d00
 	0019bb5c push op
 	0019bb64 mov ax,0x2
 	0019bb70 farpush ax
 	0019bb78 mov mar,0x3cef20
 	0019bb84 mov ax,mar
 	0019bb90 mov op,ax
 	0019bb98 setfuncargs 0x1
 	0019bba0 mov ax,0x51ef20
 	0019bbac farcall ax
 	0019bbb4 farsubsp 0x1
 	0019bbbc pop op
 	0019bbc4 sourceline 0x1d01
 	0019bbcc mov ax,0x3
 	0019bbd8 mov bx,ax
 	0019bbe4 mov mar,0x3cef20
 	0019bbf0 mov ax,mar
 	0019bbfc push op
 	0019bc04 mov op,ax
 	0019bc0c farpush bx
 	0019bc14 setfuncargs 0x1
 	0019bc1c mov ax,0x766f20
 	0019bc28 farcall ax
 	0019bc30 farsubsp 0x1
 	0019bc38 pop op
 	0019bc40 sourceline 0x1d02
 	0019bc48 mov ax,0x83
 	0019bc54 mov bx,ax
 	0019bc60 mov mar,0x3cef20
 	0019bc6c mov ax,mar
 	0019bc78 push op
 	0019bc80 mov op,ax
 	0019bc88 farpush bx
 	0019bc90 setfuncargs 0x1
 	0019bc98 mov ax,0x526f20
 	0019bca4 farcall ax
 	0019bcac farsubsp 0x1
 	0019bcb4 pop op
 	0019bcbc sourceline 0x1d03
 	0019bcc4 mov ax,0x9e
 	0019bcd0 mov bx,ax
 	0019bcdc mov mar,0x3cef20
 	0019bce8 mov ax,mar
 	0019bcf4 push op
 	0019bcfc mov op,ax
 	0019bd04 farpush bx
 	0019bd0c setfuncargs 0x1
 	0019bd14 mov ax,0x70ef20
 	0019bd20 farcall ax
 	0019bd28 farsubsp 0x1
 	0019bd30 pop op
 	0019bd38 sourceline 0x1d04
 	0019bd40 mov ax,0x0
 	0019bd4c mov mar,0xcdef20
 	0019bd58 memwrite4 ax
 	0019bd60 sourceline 0x1d05
 	0019bd68 jmp 0x0019c38c
		0019c38c: UNCONDITIONAL_JUMP

	[0019bd70]
		0019b3bc: CONDITIONAL_JUMP
 	0019bd70 sourceline 0x1d08
 	0019bd78 push op
 	0019bd80 mov ax,0x14
 	0019bd8c farpush ax
 	0019bd94 mov mar,0x3cef20
 	0019bda0 mov ax,mar
 	0019bdac mov op,ax
 	0019bdb4 setfuncargs 0x1
 	0019bdbc mov ax,0x51ef20
 	0019bdc8 farcall ax
 	0019bdd0 farsubsp 0x1
 	0019bdd8 pop op
 	0019bde0 sourceline 0x1d09
 	0019bde8 mov ax,0x7c
 	0019bdf4 mov bx,ax
 	0019be00 mov mar,0x3cef20
 	0019be0c mov ax,mar
 	0019be18 push op
 	0019be20 mov op,ax
 	0019be28 farpush bx
 	0019be30 setfuncargs 0x1
 	0019be38 mov ax,0x526f20
 	0019be44 farcall ax
 	0019be4c farsubsp 0x1
 	0019be54 pop op
 	0019be5c sourceline 0x1d0a
 	0019be64 mov ax,0x9f
 	0019be70 mov bx,ax
 	0019be7c mov mar,0x3cef20
 	0019be88 mov ax,mar
 	0019be94 push op
 	0019be9c mov op,ax
 	0019bea4 farpush bx
 	0019beac setfuncargs 0x1
 	0019beb4 mov ax,0x70ef20
 	0019bec0 farcall ax
 	0019bec8 farsubsp 0x1
 	0019bed0 pop op
 	0019bed8 sourceline 0x1d0b
 	0019bee0 push op
 	0019bee8 mov ax,0x426
 	0019bef4 farpush ax
 	0019befc mov ax,0x397
 	0019bf08 farpush ax
 	0019bf10 mov ax,0x0
 	0019bf1c farpush ax
 	0019bf24 mov ax,0x3
 	0019bf30 farpush ax
 	0019bf38 mov ax,0x0
 	0019bf44 farpush ax
 	0019bf4c mov mar,0x3cef20
 	0019bf58 mov ax,mar
 	0019bf64 mov op,ax
 	0019bf6c setfuncargs 0x5
 	0019bf74 mov ax,0x536f20
 	0019bf80 farcall ax
 	0019bf88 farsubsp 0x5
 	0019bf90 pop op
 	0019bf98 sourceline 0x1d0c
 	0019bfa0 push op
 	0019bfa8 mov ax,0x2c25fb
 	0019bfb4 farpush ax
 	0019bfbc mov mar,0x3cef20
 	0019bfc8 mov ax,mar
 	0019bfd4 mov op,ax
 	0019bfdc setfuncargs 0x1
 	0019bfe4 mov ax,0x6f6f20
 	0019bff0 farcall ax
 	0019bff8 farsubsp 0x1
 	0019c000 pop op
 	0019c008 sourceline 0x1d0d
 	0019c010 push op
 	0019c018 mov ax,0x2c262d
 	0019c024 farpush ax
 	0019c02c mov mar,0xb9ef20
 	0019c038 mov ax,mar
 	0019c044 mov op,ax
 	0019c04c setfuncargs 0x1
 	0019c054 mov ax,0x6f6f20
 	0019c060 farcall ax
 	0019c068 farsubsp 0x1
 	0019c070 pop op
 	0019c078 sourceline 0x1d0e
 	0019c080 push op
 	0019c088 mov ax,0x2c267d
 	0019c094 farpush ax
 	0019c09c mov mar,0x3cef20
 	0019c0a8 mov ax,mar
 	0019c0b4 mov op,ax
 	0019c0bc setfuncargs 0x1
 	0019c0c4 mov ax,0x6f6f20
 	0019c0d0 farcall ax
 	0019c0d8 farsubsp 0x1
 	0019c0e0 pop op
 	0019c0e8 sourceline 0x1d0f
 	0019c0f0 push op
 	0019c0f8 mov ax,0x427
 	0019c104 farpush ax
 	0019c10c mov ax,0x397
 	0019c118 farpush ax
 	0019c120 mov ax,0x0
 	0019c12c farpush ax
 	0019c134 mov ax,0x3
 	0019c140 farpush ax
 	0019c148 mov ax,0x0
 	0019c154 farpush ax
 	0019c15c mov mar,0x3cef20
 	0019c168 mov ax,mar
 	0019c174 mov op,ax
 	0019c17c setfuncargs 0x5
 	0019c184 mov ax,0x536f20
 	0019c190 farcall ax
 	0019c198 farsubsp 0x5
 	0019c1a0 pop op
 	0019c1a8 sourceline 0x1d10
 	0019c1b0 push op
 	0019c1b8 mov ax,0x2
 	0019c1c4 farpush ax
 	0019c1cc mov mar,0x3cef20
 	0019c1d8 mov ax,mar
 	0019c1e4 mov op,ax
 	0019c1ec setfuncargs 0x1
 	0019c1f4 mov ax,0x51ef20
 	0019c200 farcall ax
 	0019c208 farsubsp 0x1
 	0019c210 pop op
 	0019c218 sourceline 0x1d11
 	0019c220 mov ax,0x3
 	0019c22c mov bx,ax
 	0019c238 mov mar,0x3cef20
 	0019c244 mov ax,mar
 	0019c250 push op
 	0019c258 mov op,ax
 	0019c260 farpush bx
 	0019c268 setfuncargs 0x1
 	0019c270 mov ax,0x766f20
 	0019c27c farcall ax
 	0019c284 farsubsp 0x1
 	0019c28c pop op
 	0019c294 sourceline 0x1d12
 	0019c29c mov ax,0x83
 	0019c2a8 mov bx,ax
 	0019c2b4 mov mar,0x3cef20
 	0019c2c0 mov ax,mar
 	0019c2cc push op
 	0019c2d4 mov op,ax
 	0019c2dc farpush bx
 	0019c2e4 setfuncargs 0x1
 	0019c2ec mov ax,0x526f20
 	0019c2f8 farcall ax
 	0019c300 farsubsp 0x1
 	0019c308 pop op
 	0019c310 sourceline 0x1d13
 	0019c318 mov ax,0x9e
 	0019c324 mov bx,ax
 	0019c330 mov mar,0x3cef20
 	0019c33c mov ax,mar
 	0019c348 push op
 	0019c350 mov op,ax
 	0019c358 farpush bx
 	0019c360 setfuncargs 0x1
 	0019c368 mov ax,0x70ef20
 	0019c374 farcall ax
 	0019c37c farsubsp 0x1
 	0019c384 pop op
		0019c38c: FALL_THROUGH

	[0019c38c]
		0019b368: UNCONDITIONAL_JUMP
		0019b55c: UNCONDITIONAL_JUMP
		0019bd70: FALL_THROUGH
 	0019c38c sourceline 0x1d16
 	0019c394 jmp 0x0019db24
		0019db24: UNCONDITIONAL_JUMP

	[0019c39c]
		0019b298: CONDITIONAL_JUMP
 	0019c39c sourceline 0x1d18
 	0019c3a4 mov mar,0x3cef20
 	0019c3b0 mov ax,mar
 	0019c3bc push op
 	0019c3c4 mov op,ax
 	0019c3cc setfuncargs 0x0
 	0019c3d4 mov ax,0x89ef20
 	0019c3e0 farcall ax
 	0019c3e8 pop op
 	0019c3f0 push ax
 	0019c3f8 mov mar,0x97ef20
 	0019c404 mov ax,mar
 	0019c410 pop bx
 	0019c418 cmpeq bx,ax
 	0019c424 mov ax,bx
 	0019c430 jz 0x0019db24
		0019db24: CONDITIONAL_JUMP
		0019c438: FALL_THROUGH

	[0019c438]
		0019c39c: FALL_THROUGH
 	0019c438 sourceline 0x1d1a
 	0019c440 setfuncargs 0x0
 	0019c448 mov ax,0x6def20
 	0019c454 farcall ax
 	0019c45c lnot ax
 	0019c464 jz 0x0019c4c0
		0019c4c0: CONDITIONAL_JUMP
		0019c46c: FALL_THROUGH

	[0019c46c]
		0019c438: FALL_THROUGH
 	0019c46c mov ax,0x83
 	0019c478 farpush ax
 	0019c480 mov ax,0x9e
 	0019c48c farpush ax
 	0019c494 setfuncargs 0x2
 	0019c49c mov ax,0x6e6f20
 	0019c4a8 farcall ax
 	0019c4b0 farsubsp 0x2
 	0019c4b8 jmp 0x0019db24
		0019db24: UNCONDITIONAL_JUMP

	[0019c4c0]
		0019c438: CONDITIONAL_JUMP
 	0019c4c0 sourceline 0x1d1d
 	0019c4c8 push op
 	0019c4d0 mov ax,0x397
 	0019c4dc farpush ax
 	0019c4e4 mov ax,0x3
 	0019c4f0 farpush ax
 	0019c4f8 mov mar,0x3cef20
 	0019c504 mov ax,mar
 	0019c510 mov op,ax
 	0019c518 setfuncargs 0x2
 	0019c520 mov ax,0x6eef20
 	0019c52c farcall ax
 	0019c534 farsubsp 0x2
 	0019c53c pop op
 	0019c544 sourceline 0x1d1e
 	0019c54c mov ax,0x3
 	0019c558 mov bx,ax
 	0019c564 mov mar,0x3cef20
 	0019c570 mov ax,mar
 	0019c57c push op
 	0019c584 mov op,ax
 	0019c58c farpush bx
 	0019c594 setfuncargs 0x1
 	0019c59c mov ax,0x69ef20
 	0019c5a8 farcall ax
 	0019c5b0 farsubsp 0x1
 	0019c5b8 pop op
 	0019c5c0 sourceline 0x1d1f
 	0019c5c8 mov ax,0x0
 	0019c5d4 mov bx,ax
 	0019c5e0 mov mar,0x3cef20
 	0019c5ec mov ax,mar
 	0019c5f8 push op
 	0019c600 mov op,ax
 	0019c608 farpush bx
 	0019c610 setfuncargs 0x1
 	0019c618 mov ax,0x436f20
 	0019c624 farcall ax
 	0019c62c farsubsp 0x1
 	0019c634 pop op
 	0019c63c sourceline 0x1d20
 	0019c644 mov mar,0xcdef20
 	0019c650 memread4 ax
 	0019c658 jz 0x0019c8c8
		0019c8c8: CONDITIONAL_JUMP
		0019c660: FALL_THROUGH

	[0019c660]
		0019c4c0: FALL_THROUGH
 	0019c660 sourceline 0x1d22
 	0019c668 push op
 	0019c670 mov ax,0x2c2692
 	0019c67c farpush ax
 	0019c684 mov mar,0x3cef20
 	0019c690 mov ax,mar
 	0019c69c mov op,ax
 	0019c6a4 setfuncargs 0x1
 	0019c6ac mov ax,0x6f6f20
 	0019c6b8 farcall ax
 	0019c6c0 farsubsp 0x1
 	0019c6c8 pop op
 	0019c6d0 sourceline 0x1d23
 	0019c6d8 push op
 	0019c6e0 mov ax,0x2c26a7
 	0019c6ec farpush ax
 	0019c6f4 mov mar,0xb9ef20
 	0019c700 mov ax,mar
 	0019c70c mov op,ax
 	0019c714 setfuncargs 0x1
 	0019c71c mov ax,0x6f6f20
 	0019c728 farcall ax
 	0019c730 farsubsp 0x1
 	0019c738 pop op
 	0019c740 sourceline 0x1d24
 	0019c748 push op
 	0019c750 mov ax,0x2c26ba
 	0019c75c farpush ax
 	0019c764 mov mar,0x3cef20
 	0019c770 mov ax,mar
 	0019c77c mov op,ax
 	0019c784 setfuncargs 0x1
 	0019c78c mov ax,0x6f6f20
 	0019c798 farcall ax
 	0019c7a0 farsubsp 0x1
 	0019c7a8 pop op
 	0019c7b0 sourceline 0x1d25
 	0019c7b8 push op
 	0019c7c0 mov ax,0x2c26fb
 	0019c7cc farpush ax
 	0019c7d4 mov mar,0xb9ef20
 	0019c7e0 mov ax,mar
 	0019c7ec mov op,ax
 	0019c7f4 setfuncargs 0x1
 	0019c7fc mov ax,0x6f6f20
 	0019c808 farcall ax
 	0019c810 farsubsp 0x1
 	0019c818 pop op
 	0019c820 sourceline 0x1d26
 	0019c828 push op
 	0019c830 mov ax,0x2c278a
 	0019c83c farpush ax
 	0019c844 mov mar,0x3cef20
 	0019c850 mov ax,mar
 	0019c85c mov op,ax
 	0019c864 setfuncargs 0x1
 	0019c86c mov ax,0x6f6f20
 	0019c878 farcall ax
 	0019c880 farsubsp 0x1
 	0019c888 pop op
 	0019c890 sourceline 0x1d27
 	0019c898 mov ax,0x0
 	0019c8a4 mov mar,0xcdef20
 	0019c8b0 memwrite4 ax
 	0019c8b8 sourceline 0x1d28
 	0019c8c0 jmp 0x0019c938
		0019c938: UNCONDITIONAL_JUMP

	[0019c8c8]
		0019c4c0: CONDITIONAL_JUMP
 	0019c8c8 sourceline 0x1d2b
 	0019c8d0 push op
 	0019c8d8 mov ax,0x2c278a
 	0019c8e4 farpush ax
 	0019c8ec mov mar,0x3cef20
 	0019c8f8 mov ax,mar
 	0019c904 mov op,ax
 	0019c90c setfuncargs 0x1
 	0019c914 mov ax,0x6f6f20
 	0019c920 farcall ax
 	0019c928 farsubsp 0x1
 	0019c930 pop op
		0019c938: FALL_THROUGH

	[0019c938]
		0019c660: UNCONDITIONAL_JUMP
		0019c8c8: FALL_THROUGH
 	0019c938 sourceline 0x1d2d
 	0019c940 push op
 	0019c948 mov ax,0x2c27b1
 	0019c954 farpush ax
 	0019c95c mov mar,0xb9ef20
 	0019c968 mov ax,mar
 	0019c974 mov op,ax
 	0019c97c setfuncargs 0x1
 	0019c984 mov ax,0x6f6f20
 	0019c990 farcall ax
 	0019c998 farsubsp 0x1
 	0019c9a0 pop op
 	0019c9a8 sourceline 0x1d2e
 	0019c9b0 push op
 	0019c9b8 mov ax,0x2c2803
 	0019c9c4 farpush ax
 	0019c9cc mov mar,0x3cef20
 	0019c9d8 mov ax,mar
 	0019c9e4 mov op,ax
 	0019c9ec setfuncargs 0x1
 	0019c9f4 mov ax,0x6f6f20
 	0019ca00 farcall ax
 	0019ca08 farsubsp 0x1
 	0019ca10 pop op
 	0019ca18 sourceline 0x1d2f
 	0019ca20 push op
 	0019ca28 mov ax,0x2c2848
 	0019ca34 farpush ax
 	0019ca3c mov mar,0xb9ef20
 	0019ca48 mov ax,mar
 	0019ca54 mov op,ax
 	0019ca5c setfuncargs 0x1
 	0019ca64 mov ax,0x6f6f20
 	0019ca70 farcall ax
 	0019ca78 farsubsp 0x1
 	0019ca80 pop op
 	0019ca88 sourceline 0x1d30
 	0019ca90 push op
 	0019ca98 mov ax,0x2c28e5
 	0019caa4 farpush ax
 	0019caac mov mar,0xb9ef20
 	0019cab8 mov ax,mar
 	0019cac4 mov op,ax
 	0019cacc setfuncargs 0x1
 	0019cad4 mov ax,0x6f6f20
 	0019cae0 farcall ax
 	0019cae8 farsubsp 0x1
 	0019caf0 pop op
 	0019caf8 sourceline 0x1d31
 	0019cb00 push op
 	0019cb08 mov ax,0x2c2983
 	0019cb14 farpush ax
 	0019cb1c mov mar,0x3cef20
 	0019cb28 mov ax,mar
 	0019cb34 mov op,ax
 	0019cb3c setfuncargs 0x1
 	0019cb44 mov ax,0x6f6f20
 	0019cb50 farcall ax
 	0019cb58 farsubsp 0x1
 	0019cb60 pop op
 	0019cb68 sourceline 0x1d32
 	0019cb70 push op
 	0019cb78 mov ax,0x2c29cd
 	0019cb84 farpush ax
 	0019cb8c mov mar,0xb9ef20
 	0019cb98 mov ax,mar
 	0019cba4 mov op,ax
 	0019cbac setfuncargs 0x1
 	0019cbb4 mov ax,0x6f6f20
 	0019cbc0 farcall ax
 	0019cbc8 farsubsp 0x1
 	0019cbd0 pop op
 	0019cbd8 sourceline 0x1d33
 	0019cbe0 push op
 	0019cbe8 mov ax,0x2c29df
 	0019cbf4 farpush ax
 	0019cbfc mov mar,0x3cef20
 	0019cc08 mov ax,mar
 	0019cc14 mov op,ax
 	0019cc1c setfuncargs 0x1
 	0019cc24 mov ax,0x6f6f20
 	0019cc30 farcall ax
 	0019cc38 farsubsp 0x1
 	0019cc40 pop op
 	0019cc48 sourceline 0x1d34
 	0019cc50 push op
 	0019cc58 mov ax,0x14
 	0019cc64 farpush ax
 	0019cc6c mov mar,0x3cef20
 	0019cc78 mov ax,mar
 	0019cc84 mov op,ax
 	0019cc8c setfuncargs 0x1
 	0019cc94 mov ax,0x51ef20
 	0019cca0 farcall ax
 	0019cca8 farsubsp 0x1
 	0019ccb0 pop op
 	0019ccb8 sourceline 0x1d35
 	0019ccc0 mov ax,0x7c
 	0019cccc mov bx,ax
 	0019ccd8 mov mar,0x3cef20
 	0019cce4 mov ax,mar
 	0019ccf0 push op
 	0019ccf8 mov op,ax
 	0019cd00 farpush bx
 	0019cd08 setfuncargs 0x1
 	0019cd10 mov ax,0x526f20
 	0019cd1c farcall ax
 	0019cd24 farsubsp 0x1
 	0019cd2c pop op
 	0019cd34 sourceline 0x1d36
 	0019cd3c mov ax,0x9f
 	0019cd48 mov bx,ax
 	0019cd54 mov mar,0x3cef20
 	0019cd60 mov ax,mar
 	0019cd6c push op
 	0019cd74 mov op,ax
 	0019cd7c farpush bx
 	0019cd84 setfuncargs 0x1
 	0019cd8c mov ax,0x70ef20
 	0019cd98 farcall ax
 	0019cda0 farsubsp 0x1
 	0019cda8 pop op
 	0019cdb0 sourceline 0x1d37
 	0019cdb8 push op
 	0019cdc0 mov ax,0x426
 	0019cdcc farpush ax
 	0019cdd4 mov ax,0x398
 	0019cde0 farpush ax
 	0019cde8 mov ax,0x0
 	0019cdf4 farpush ax
 	0019cdfc mov ax,0x3
 	0019ce08 farpush ax
 	0019ce10 mov ax,0x0
 	0019ce1c farpush ax
 	0019ce24 mov mar,0x3cef20
 	0019ce30 mov ax,mar
 	0019ce3c mov op,ax
 	0019ce44 setfuncargs 0x5
 	0019ce4c mov ax,0x536f20
 	0019ce58 farcall ax
 	0019ce60 farsubsp 0x5
 	0019ce68 pop op
 	0019ce70 sourceline 0x1d38
 	0019ce78 push op
 	0019ce80 mov mar,0x97ef20
 	0019ce8c mov ax,mar
 	0019ce98 farpush ax
 	0019cea0 mov mar,0x3cef20
 	0019ceac mov ax,mar
 	0019ceb8 mov op,ax
 	0019cec0 setfuncargs 0x1
 	0019cec8 mov ax,0x7d6f20
 	0019ced4 farcall ax
 	0019cedc farsubsp 0x1
 	0019cee4 pop op
 	0019ceec sourceline 0x1d39
 	0019cef4 mov ax,0xe
 	0019cf00 farpush ax
 	0019cf08 setfuncargs 0x1
 	0019cf10 mov ax,0x426f20
 	0019cf1c farcall ax
 	0019cf24 farsubsp 0x1
 	0019cf2c sourceline 0x1d3a
 	0019cf34 push op
 	0019cf3c mov ax,0x426
 	0019cf48 farpush ax
 	0019cf50 mov ax,0x397
 	0019cf5c farpush ax
 	0019cf64 mov ax,0x0
 	0019cf70 farpush ax
 	0019cf78 mov ax,0x3
 	0019cf84 farpush ax
 	0019cf8c mov ax,0x0
 	0019cf98 farpush ax
 	0019cfa0 mov mar,0xb9ef20
 	0019cfac mov ax,mar
 	0019cfb8 mov op,ax
 	0019cfc0 setfuncargs 0x5
 	0019cfc8 mov ax,0x536f20
 	0019cfd4 farcall ax
 	0019cfdc farsubsp 0x5
 	0019cfe4 pop op
 	0019cfec sourceline 0x1d3b
 	0019cff4 push op
 	0019cffc mov ax,0x427
 	0019d008 farpush ax
 	0019d010 mov ax,0x397
 	0019d01c farpush ax
 	0019d024 mov ax,0x0
 	0019d030 farpush ax
 	0019d038 mov ax,0x3
 	0019d044 farpush ax
 	0019d04c mov ax,0x0
 	0019d058 farpush ax
 	0019d060 mov mar,0x3cef20
 	0019d06c mov ax,mar
 	0019d078 mov op,ax
 	0019d080 setfuncargs 0x5
 	0019d088 mov ax,0x536f20
 	0019d094 farcall ax
 	0019d09c farsubsp 0x5
 	0019d0a4 pop op
 	0019d0ac sourceline 0x1d3c
 	0019d0b4 push op
 	0019d0bc mov ax,0x2
 	0019d0c8 farpush ax
 	0019d0d0 mov mar,0x3cef20
 	0019d0dc mov ax,mar
 	0019d0e8 mov op,ax
 	0019d0f0 setfuncargs 0x1
 	0019d0f8 mov ax,0x51ef20
 	0019d104 farcall ax
 	0019d10c farsubsp 0x1
 	0019d114 pop op
 	0019d11c sourceline 0x1d3d
 	0019d124 mov ax,0x3
 	0019d130 mov bx,ax
 	0019d13c mov mar,0x3cef20
 	0019d148 mov ax,mar
 	0019d154 push op
 	0019d15c mov op,ax
 	0019d164 farpush bx
 	0019d16c setfuncargs 0x1
 	0019d174 mov ax,0x766f20
 	0019d180 farcall ax
 	0019d188 farsubsp 0x1
 	0019d190 pop op
 	0019d198 sourceline 0x1d3e
 	0019d1a0 mov ax,0x83
 	0019d1ac mov bx,ax
 	0019d1b8 mov mar,0x3cef20
 	0019d1c4 mov ax,mar
 	0019d1d0 push op
 	0019d1d8 mov op,ax
 	0019d1e0 farpush bx
 	0019d1e8 setfuncargs 0x1
 	0019d1f0 mov ax,0x526f20
 	0019d1fc farcall ax
 	0019d204 farsubsp 0x1
 	0019d20c pop op
 	0019d214 sourceline 0x1d3f
 	0019d21c mov ax,0x9e
 	0019d228 mov bx,ax
 	0019d234 mov mar,0x3cef20
 	0019d240 mov ax,mar
 	0019d24c push op
 	0019d254 mov op,ax
 	0019d25c farpush bx
 	0019d264 setfuncargs 0x1
 	0019d26c mov ax,0x70ef20
 	0019d278 farcall ax
 	0019d280 farsubsp 0x1
 	0019d288 pop op
 	0019d290 sourceline 0x1d40
 	0019d298 mov ax,0x1
 	0019d2a4 mov mar,0xb8ef20
 	0019d2b0 memwrite4 ax
 	0019d2b8 sourceline 0x1d41
 	0019d2c0 push op
 	0019d2c8 mov ax,0x2c29e9
 	0019d2d4 farpush ax
 	0019d2dc mov mar,0xb9ef20
 	0019d2e8 mov ax,mar
 	0019d2f4 mov op,ax
 	0019d2fc setfuncargs 0x1
 	0019d304 mov ax,0x6f6f20
 	0019d310 farcall ax
 	0019d318 farsubsp 0x1
 	0019d320 pop op
 	0019d328 sourceline 0x1d42
 	0019d330 push op
 	0019d338 mov ax,0x2c2a9a
 	0019d344 farpush ax
 	0019d34c mov mar,0x3cef20
 	0019d358 mov ax,mar
 	0019d364 mov op,ax
 	0019d36c setfuncargs 0x1
 	0019d374 mov ax,0x6f6f20
 	0019d380 farcall ax
 	0019d388 farsubsp 0x1
 	0019d390 pop op
 	0019d398 sourceline 0x1d43
 	0019d3a0 push op
 	0019d3a8 mov ax,0x2c2b02
 	0019d3b4 farpush ax
 	0019d3bc mov mar,0xb9ef20
 	0019d3c8 mov ax,mar
 	0019d3d4 mov op,ax
 	0019d3dc setfuncargs 0x1
 	0019d3e4 mov ax,0x6f6f20
 	0019d3f0 farcall ax
 	0019d3f8 farsubsp 0x1
 	0019d400 pop op
 	0019d408 sourceline 0x1d44
 	0019d410 push op
 	0019d418 mov ax,0x2c2b81
 	0019d424 farpush ax
 	0019d42c mov mar,0x3cef20
 	0019d438 mov ax,mar
 	0019d444 mov op,ax
 	0019d44c setfuncargs 0x1
 	0019d454 mov ax,0x6f6f20
 	0019d460 farcall ax
 	0019d468 farsubsp 0x1
 	0019d470 pop op
 	0019d478 sourceline 0x1d45
 	0019d480 push op
 	0019d488 mov ax,0x2c2b91
 	0019d494 farpush ax
 	0019d49c mov mar,0xb9ef20
 	0019d4a8 mov ax,mar
 	0019d4b4 mov op,ax
 	0019d4bc setfuncargs 0x1
 	0019d4c4 mov ax,0x6f6f20
 	0019d4d0 farcall ax
 	0019d4d8 farsubsp 0x1
 	0019d4e0 pop op
 	0019d4e8 sourceline 0x1d46
 	0019d4f0 push op
 	0019d4f8 mov ax,0x2c2bbf
 	0019d504 farpush ax
 	0019d50c mov mar,0x3cef20
 	0019d518 mov ax,mar
 	0019d524 mov op,ax
 	0019d52c setfuncargs 0x1
 	0019d534 mov ax,0x6f6f20
 	0019d540 farcall ax
 	0019d548 farsubsp 0x1
 	0019d550 pop op
 	0019d558 sourceline 0x1d47
 	0019d560 push op
 	0019d568 mov ax,0x2c2bde
 	0019d574 farpush ax
 	0019d57c mov mar,0xb9ef20
 	0019d588 mov ax,mar
 	0019d594 mov op,ax
 	0019d59c setfuncargs 0x1
 	0019d5a4 mov ax,0x6f6f20
 	0019d5b0 farcall ax
 	0019d5b8 farsubsp 0x1
 	0019d5c0 pop op
 	0019d5c8 sourceline 0x1d48
 	0019d5d0 push op
 	0019d5d8 mov ax,0x427
 	0019d5e4 farpush ax
 	0019d5ec mov ax,0x397
 	0019d5f8 farpush ax
 	0019d600 mov ax,0x0
 	0019d60c farpush ax
 	0019d614 mov ax,0x3
 	0019d620 farpush ax
 	0019d628 mov ax,0x0
 	0019d634 farpush ax
 	0019d63c mov mar,0xb9ef20
 	0019d648 mov ax,mar
 	0019d654 mov op,ax
 	0019d65c setfuncargs 0x5
 	0019d664 mov ax,0x536f20
 	0019d670 farcall ax
 	0019d678 farsubsp 0x5
 	0019d680 pop op
 	0019d688 sourceline 0x1d49
 	0019d690 push op
 	0019d698 mov ax,0x2c2c0e
 	0019d6a4 farpush ax
 	0019d6ac mov mar,0x3cef20
 	0019d6b8 mov ax,mar
 	0019d6c4 mov op,ax
 	0019d6cc setfuncargs 0x1
 	0019d6d4 mov ax,0x6f6f20
 	0019d6e0 farcall ax
 	0019d6e8 farsubsp 0x1
 	0019d6f0 pop op
 	0019d6f8 sourceline 0x1d4a
 	0019d700 push op
 	0019d708 mov ax,0x2c2c37
 	0019d714 farpush ax
 	0019d71c mov mar,0xb9ef20
 	0019d728 mov ax,mar
 	0019d734 mov op,ax
 	0019d73c setfuncargs 0x1
 	0019d744 mov ax,0x6f6f20
 	0019d750 farcall ax
 	0019d758 farsubsp 0x1
 	0019d760 pop op
 	0019d768 sourceline 0x1d4b
 	0019d770 push op
 	0019d778 mov ax,0x2c2c70
 	0019d784 farpush ax
 	0019d78c mov mar,0x3cef20
 	0019d798 mov ax,mar
 	0019d7a4 mov op,ax
 	0019d7ac setfuncargs 0x1
 	0019d7b4 mov ax,0x6f6f20
 	0019d7c0 farcall ax
 	0019d7c8 farsubsp 0x1
 	0019d7d0 pop op
 	0019d7d8 sourceline 0x1d4c
 	0019d7e0 push op
 	0019d7e8 mov ax,0x2c2c99
 	0019d7f4 farpush ax
 	0019d7fc mov mar,0xb9ef20
 	0019d808 mov ax,mar
 	0019d814 mov op,ax
 	0019d81c setfuncargs 0x1
 	0019d824 mov ax,0x6f6f20
 	0019d830 farcall ax
 	0019d838 farsubsp 0x1
 	0019d840 pop op
 	0019d848 sourceline 0x1d4d
 	0019d850 push op
 	0019d858 mov ax,0x2c2cc6
 	0019d864 farpush ax
 	0019d86c mov mar,0x3cef20
 	0019d878 mov ax,mar
 	0019d884 mov op,ax
 	0019d88c setfuncargs 0x1
 	0019d894 mov ax,0x6f6f20
 	0019d8a0 farcall ax
 	0019d8a8 farsubsp 0x1
 	0019d8b0 pop op
 	0019d8b8 sourceline 0x1d4e
 	0019d8c0 push op
 	0019d8c8 mov ax,0x2c2cea
 	0019d8d4 farpush ax
 	0019d8dc mov mar,0xb9ef20
 	0019d8e8 mov ax,mar
 	0019d8f4 mov op,ax
 	0019d8fc setfuncargs 0x1
 	0019d904 mov ax,0x6f6f20
 	0019d910 farcall ax
 	0019d918 farsubsp 0x1
 	0019d920 pop op
 	0019d928 sourceline 0x1d4f
 	0019d930 push op
 	0019d938 mov ax,0x397
 	0019d944 farpush ax
 	0019d94c mov ax,0x0
 	0019d958 farpush ax
 	0019d960 mov mar,0x3cef20
 	0019d96c mov ax,mar
 	0019d978 mov op,ax
 	0019d980 setfuncargs 0x2
 	0019d988 mov ax,0x6eef20
 	0019d994 farcall ax
 	0019d99c farsubsp 0x2
 	0019d9a4 pop op
 	0019d9ac sourceline 0x1d50
 	0019d9b4 mov ax,0x1
 	0019d9c0 mov bx,ax
 	0019d9cc mov mar,0x3cef20
 	0019d9d8 mov ax,mar
 	0019d9e4 push op
 	0019d9ec mov op,ax
 	0019d9f4 farpush bx
 	0019d9fc setfuncargs 0x1
 	0019da04 mov ax,0x69ef20
 	0019da10 farcall ax
 	0019da18 farsubsp 0x1
 	0019da20 pop op
 	0019da28 sourceline 0x1d51
 	0019da30 push op
 	0019da38 mov ax,0x2c2d06
 	0019da44 farpush ax
 	0019da4c mov ax,0x138
 	0019da58 farpush ax
 	0019da60 mov ax,0x92
 	0019da6c farpush ax
 	0019da74 mov ax,0x0
 	0019da80 farpush ax
 	0019da88 mov mar,0x3cef20
 	0019da94 mov ax,mar
 	0019daa0 mov op,ax
 	0019daa8 setfuncargs 0x4
 	0019dab0 mov ax,0x6aef20
 	0019dabc farcall ax
 	0019dac4 farsubsp 0x4
 	0019dacc pop op
 	0019dad4 sourceline 0x1d52
 	0019dadc mov ax,0x1
 	0019dae8 mov mar,0xce6f20
 	0019daf4 memwrite4 ax
 	0019dafc sourceline 0x1d53
 	0019db04 mov ax,0x1
 	0019db10 mov mar,0xceef20
 	0019db1c memwrite4 ax
		0019db24: FALL_THROUGH

	[0019db24]
		0019aef4: UNCONDITIONAL_JUMP
		0019b160: UNCONDITIONAL_JUMP
		0019c38c: UNCONDITIONAL_JUMP
		0019c39c: CONDITIONAL_JUMP
		0019c46c: UNCONDITIONAL_JUMP
		0019c938: FALL_THROUGH
 	0019db24 sourceline 0x1d57
 	0019db2c jmp 0x001a00ac
		001a00ac: UNCONDITIONAL_JUMP

	[0019db34]
		0019922c: CONDITIONAL_JUMP
 	0019db34 sourceline 0x1d5b
 	0019db3c mov mar,0x3cef20
 	0019db48 mov ax,mar
 	0019db54 push op
 	0019db5c mov op,ax
 	0019db64 setfuncargs 0x0
 	0019db6c mov ax,0x89ef20
 	0019db78 farcall ax
 	0019db80 pop op
 	0019db88 push ax
 	0019db90 mov mar,0x8cef20
 	0019db9c mov ax,mar
 	0019dba8 pop bx
 	0019dbb0 cmpeq bx,ax
 	0019dbbc mov ax,bx
 	0019dbc8 jnz 0x0019dc84
		0019dc84: CONDITIONAL_JUMP
		0019dbd0: FALL_THROUGH

	[0019dbd0]
		0019db34: FALL_THROUGH
 	0019dbd0 push ax
 	0019dbd8 mov mar,0x3cef20
 	0019dbe4 mov ax,mar
 	0019dbf0 push op
 	0019dbf8 mov op,ax
 	0019dc00 setfuncargs 0x0
 	0019dc08 mov ax,0x89ef20
 	0019dc14 farcall ax
 	0019dc1c pop op
 	0019dc24 push ax
 	0019dc2c mov mar,0x8d6f20
 	0019dc38 mov ax,mar
 	0019dc44 pop bx
 	0019dc4c cmpeq bx,ax
 	0019dc58 mov ax,bx
 	0019dc64 pop bx
 	0019dc6c lor bx,ax
 	0019dc78 mov ax,bx
		0019dc84: FALL_THROUGH

	[0019dc84]
		0019db34: CONDITIONAL_JUMP
		0019dbd0: FALL_THROUGH
 	0019dc84 jnz 0x0019dd40
		0019dd40: CONDITIONAL_JUMP
		0019dc8c: FALL_THROUGH

	[0019dc8c]
		0019dc84: FALL_THROUGH
 	0019dc8c push ax
 	0019dc94 mov mar,0x3cef20
 	0019dca0 mov ax,mar
 	0019dcac push op
 	0019dcb4 mov op,ax
 	0019dcbc setfuncargs 0x0
 	0019dcc4 mov ax,0x89ef20
 	0019dcd0 farcall ax
 	0019dcd8 pop op
 	0019dce0 push ax
 	0019dce8 mov mar,0x8b6f20
 	0019dcf4 mov ax,mar
 	0019dd00 pop bx
 	0019dd08 cmpeq bx,ax
 	0019dd14 mov ax,bx
 	0019dd20 pop bx
 	0019dd28 lor bx,ax
 	0019dd34 mov ax,bx
		0019dd40: FALL_THROUGH

	[0019dd40]
		0019dc84: CONDITIONAL_JUMP
		0019dc8c: FALL_THROUGH
 	0019dd40 jnz 0x0019ddfc
		0019ddfc: CONDITIONAL_JUMP
		0019dd48: FALL_THROUGH

	[0019dd48]
		0019dd40: FALL_THROUGH
 	0019dd48 push ax
 	0019dd50 mov mar,0x3cef20
 	0019dd5c mov ax,mar
 	0019dd68 push op
 	0019dd70 mov op,ax
 	0019dd78 setfuncargs 0x0
 	0019dd80 mov ax,0x89ef20
 	0019dd8c farcall ax
 	0019dd94 pop op
 	0019dd9c push ax
 	0019dda4 mov mar,0x8bef20
 	0019ddb0 mov ax,mar
 	0019ddbc pop bx
 	0019ddc4 cmpeq bx,ax
 	0019ddd0 mov ax,bx
 	0019dddc pop bx
 	0019dde4 lor bx,ax
 	0019ddf0 mov ax,bx
		0019ddfc: FALL_THROUGH

	[0019ddfc]
		0019dd40: CONDITIONAL_JUMP
		0019dd48: FALL_THROUGH
 	0019ddfc jnz 0x0019deb8
		0019deb8: CONDITIONAL_JUMP
		0019de04: FALL_THROUGH

	[0019de04]
		0019ddfc: FALL_THROUGH
 	0019de04 push ax
 	0019de0c mov mar,0x3cef20
 	0019de18 mov ax,mar
 	0019de24 push op
 	0019de2c mov op,ax
 	0019de34 setfuncargs 0x0
 	0019de3c mov ax,0x89ef20
 	0019de48 farcall ax
 	0019de50 pop op
 	0019de58 push ax
 	0019de60 mov mar,0x8c6f20
 	0019de6c mov ax,mar
 	0019de78 pop bx
 	0019de80 cmpeq bx,ax
 	0019de8c mov ax,bx
 	0019de98 pop bx
 	0019dea0 lor bx,ax
 	0019deac mov ax,bx
		0019deb8: FALL_THROUGH

	[0019deb8]
		0019ddfc: CONDITIONAL_JUMP
		0019de04: FALL_THROUGH
 	0019deb8 jnz 0x0019df74
		0019df74: CONDITIONAL_JUMP
		0019dec0: FALL_THROUGH

	[0019dec0]
		0019deb8: FALL_THROUGH
 	0019dec0 push ax
 	0019dec8 mov mar,0x3cef20
 	0019ded4 mov ax,mar
 	0019dee0 push op
 	0019dee8 mov op,ax
 	0019def0 setfuncargs 0x0
 	0019def8 mov ax,0x89ef20
 	0019df04 farcall ax
 	0019df0c pop op
 	0019df14 push ax
 	0019df1c mov mar,0x8def20
 	0019df28 mov ax,mar
 	0019df34 pop bx
 	0019df3c cmpeq bx,ax
 	0019df48 mov ax,bx
 	0019df54 pop bx
 	0019df5c lor bx,ax
 	0019df68 mov ax,bx
		0019df74: FALL_THROUGH

	[0019df74]
		0019deb8: CONDITIONAL_JUMP
		0019dec0: FALL_THROUGH
 	0019df74 jnz 0x0019e030
		0019e030: CONDITIONAL_JUMP
		0019df7c: FALL_THROUGH

	[0019df7c]
		0019df74: FALL_THROUGH
 	0019df7c push ax
 	0019df84 mov mar,0x3cef20
 	0019df90 mov ax,mar
 	0019df9c push op
 	0019dfa4 mov op,ax
 	0019dfac setfuncargs 0x0
 	0019dfb4 mov ax,0x89ef20
 	0019dfc0 farcall ax
 	0019dfc8 pop op
 	0019dfd0 push ax
 	0019dfd8 mov mar,0x8aef20
 	0019dfe4 mov ax,mar
 	0019dff0 pop bx
 	0019dff8 cmpeq bx,ax
 	0019e004 mov ax,bx
 	0019e010 pop bx
 	0019e018 lor bx,ax
 	0019e024 mov ax,bx
		0019e030: FALL_THROUGH

	[0019e030]
		0019df74: CONDITIONAL_JUMP
		0019df7c: FALL_THROUGH
 	0019e030 jnz 0x0019e0ec
		0019e0ec: CONDITIONAL_JUMP
		0019e038: FALL_THROUGH

	[0019e038]
		0019e030: FALL_THROUGH
 	0019e038 push ax
 	0019e040 mov mar,0x3cef20
 	0019e04c mov ax,mar
 	0019e058 push op
 	0019e060 mov op,ax
 	0019e068 setfuncargs 0x0
 	0019e070 mov ax,0x89ef20
 	0019e07c farcall ax
 	0019e084 pop op
 	0019e08c push ax
 	0019e094 mov mar,0x8e6f20
 	0019e0a0 mov ax,mar
 	0019e0ac pop bx
 	0019e0b4 cmpeq bx,ax
 	0019e0c0 mov ax,bx
 	0019e0cc pop bx
 	0019e0d4 lor bx,ax
 	0019e0e0 mov ax,bx
		0019e0ec: FALL_THROUGH

	[0019e0ec]
		0019e030: CONDITIONAL_JUMP
		0019e038: FALL_THROUGH
 	0019e0ec jnz 0x0019e1a8
		0019e1a8: CONDITIONAL_JUMP
		0019e0f4: FALL_THROUGH

	[0019e0f4]
		0019e0ec: FALL_THROUGH
 	0019e0f4 push ax
 	0019e0fc mov mar,0x3cef20
 	0019e108 mov ax,mar
 	0019e114 push op
 	0019e11c mov op,ax
 	0019e124 setfuncargs 0x0
 	0019e12c mov ax,0x89ef20
 	0019e138 farcall ax
 	0019e140 pop op
 	0019e148 push ax
 	0019e150 mov mar,0x8eef20
 	0019e15c mov ax,mar
 	0019e168 pop bx
 	0019e170 cmpeq bx,ax
 	0019e17c mov ax,bx
 	0019e188 pop bx
 	0019e190 lor bx,ax
 	0019e19c mov ax,bx
		0019e1a8: FALL_THROUGH

	[0019e1a8]
		0019e0ec: CONDITIONAL_JUMP
		0019e0f4: FALL_THROUGH
 	0019e1a8 jnz 0x0019e264
		0019e264: CONDITIONAL_JUMP
		0019e1b0: FALL_THROUGH

	[0019e1b0]
		0019e1a8: FALL_THROUGH
 	0019e1b0 push ax
 	0019e1b8 mov mar,0x3cef20
 	0019e1c4 mov ax,mar
 	0019e1d0 push op
 	0019e1d8 mov op,ax
 	0019e1e0 setfuncargs 0x0
 	0019e1e8 mov ax,0x89ef20
 	0019e1f4 farcall ax
 	0019e1fc pop op
 	0019e204 push ax
 	0019e20c mov mar,0x8fef20
 	0019e218 mov ax,mar
 	0019e224 pop bx
 	0019e22c cmpeq bx,ax
 	0019e238 mov ax,bx
 	0019e244 pop bx
 	0019e24c lor bx,ax
 	0019e258 mov ax,bx
		0019e264: FALL_THROUGH

	[0019e264]
		0019e1a8: CONDITIONAL_JUMP
		0019e1b0: FALL_THROUGH
 	0019e264 jz 0x0019ef7c
		0019ef7c: CONDITIONAL_JUMP
		0019e26c: FALL_THROUGH

	[0019e26c]
		0019e264: FALL_THROUGH
 	0019e26c sourceline 0x1d60
 	0019e274 setfuncargs 0x0
 	0019e27c mov ax,0x6def20
 	0019e288 farcall ax
 	0019e290 lnot ax
 	0019e298 jz 0x0019e2f4
		0019e2f4: CONDITIONAL_JUMP
		0019e2a0: FALL_THROUGH

	[0019e2a0]
		0019e26c: FALL_THROUGH
 	0019e2a0 mov ax,0x7c
 	0019e2ac farpush ax
 	0019e2b4 mov ax,0x79
 	0019e2c0 farpush ax
 	0019e2c8 setfuncargs 0x2
 	0019e2d0 mov ax,0x6e6f20
 	0019e2dc farcall ax
 	0019e2e4 farsubsp 0x2
 	0019e2ec jmp 0x0019ef6c
		0019ef6c: UNCONDITIONAL_JUMP

	[0019e2f4]
		0019e26c: CONDITIONAL_JUMP
 	0019e2f4 sourceline 0x1d63
 	0019e2fc push op
 	0019e304 mov ax,0x397
 	0019e310 farpush ax
 	0019e318 mov ax,0x7
 	0019e324 farpush ax
 	0019e32c mov mar,0x3cef20
 	0019e338 mov ax,mar
 	0019e344 mov op,ax
 	0019e34c setfuncargs 0x2
 	0019e354 mov ax,0x6eef20
 	0019e360 farcall ax
 	0019e368 farsubsp 0x2
 	0019e370 pop op
 	0019e378 sourceline 0x1d64
 	0019e380 mov ax,0x3
 	0019e38c mov bx,ax
 	0019e398 mov mar,0x3cef20
 	0019e3a4 mov ax,mar
 	0019e3b0 push op
 	0019e3b8 mov op,ax
 	0019e3c0 farpush bx
 	0019e3c8 setfuncargs 0x1
 	0019e3d0 mov ax,0x69ef20
 	0019e3dc farcall ax
 	0019e3e4 farsubsp 0x1
 	0019e3ec pop op
 	0019e3f4 sourceline 0x1d65
 	0019e3fc mov ax,0x0
 	0019e408 mov bx,ax
 	0019e414 mov mar,0x3cef20
 	0019e420 mov ax,mar
 	0019e42c push op
 	0019e434 mov op,ax
 	0019e43c farpush bx
 	0019e444 setfuncargs 0x1
 	0019e44c mov ax,0x436f20
 	0019e458 farcall ax
 	0019e460 farsubsp 0x1
 	0019e468 pop op
 	0019e470 sourceline 0x1d66
 	0019e478 push op
 	0019e480 mov ax,0xc
 	0019e48c farpush ax
 	0019e494 mov mar,0x3cef20
 	0019e4a0 mov ax,mar
 	0019e4ac mov op,ax
 	0019e4b4 setfuncargs 0x1
 	0019e4bc mov ax,0x51ef20
 	0019e4c8 farcall ax
 	0019e4d0 farsubsp 0x1
 	0019e4d8 pop op
 	0019e4e0 sourceline 0x1d67
 	0019e4e8 mov mar,0x3cef20
 	0019e4f4 mov ax,mar
 	0019e500 push op
 	0019e508 mov op,ax
 	0019e510 setfuncargs 0x0
 	0019e518 mov ax,0x78ef20
 	0019e524 farcall ax
 	0019e52c pop op
 	0019e534 mov mar,sp
 	0019e540 memwrite4 ax
 	0019e548 add sp,0x4
 	0019e554 stackptr 0x4
 	0019e55c memread4 ax
 	0019e564 push ax
 	0019e56c mov ax,0x7
 	0019e578 pop bx
 	0019e580 sub bx,ax
 	0019e58c mov ax,bx
 	0019e598 mov bx,ax
 	0019e5a4 mov mar,0x3cef20
 	0019e5b0 mov ax,mar
 	0019e5bc push op
 	0019e5c4 mov op,ax
 	0019e5cc farpush bx
 	0019e5d4 setfuncargs 0x1
 	0019e5dc mov ax,0x526f20
 	0019e5e8 farcall ax
 	0019e5f0 farsubsp 0x1
 	0019e5f8 pop op
 	0019e600 sourceline 0x1d68
 	0019e608 mov mar,0x3cef20
 	0019e614 mov ax,mar
 	0019e620 push op
 	0019e628 mov op,ax
 	0019e630 setfuncargs 0x0
 	0019e638 mov ax,0xb36f20
 	0019e644 farcall ax
 	0019e64c pop op
 	0019e654 mov mar,sp
 	0019e660 memwrite4 ax
 	0019e668 add sp,0x4
 	0019e674 stackptr 0x4
 	0019e67c memread4 ax
 	0019e684 push ax
 	0019e68c mov ax,0x4
 	0019e698 pop bx
 	0019e6a0 sub bx,ax
 	0019e6ac mov ax,bx
 	0019e6b8 mov bx,ax
 	0019e6c4 mov mar,0x3cef20
 	0019e6d0 mov ax,mar
 	0019e6dc push op
 	0019e6e4 mov op,ax
 	0019e6ec farpush bx
 	0019e6f4 setfuncargs 0x1
 	0019e6fc mov ax,0x70ef20
 	0019e708 farcall ax
 	0019e710 farsubsp 0x1
 	0019e718 pop op
 	0019e720 sourceline 0x1d69
 	0019e728 push op
 	0019e730 mov ax,0x426
 	0019e73c farpush ax
 	0019e744 mov ax,0x397
 	0019e750 farpush ax
 	0019e758 mov ax,0x0
 	0019e764 farpush ax
 	0019e76c mov ax,0x3
 	0019e778 farpush ax
 	0019e780 mov ax,0x0
 	0019e78c farpush ax
 	0019e794 mov mar,0x3cef20
 	0019e7a0 mov ax,mar
 	0019e7ac mov op,ax
 	0019e7b4 setfuncargs 0x5
 	0019e7bc mov ax,0x536f20
 	0019e7c8 farcall ax
 	0019e7d0 farsubsp 0x5
 	0019e7d8 pop op
 	0019e7e0 sourceline 0x1d6b
 	0019e7e8 mov ax,0x3
 	0019e7f4 farpush ax
 	0019e7fc setfuncargs 0x1
 	0019e804 mov ax,0x4a6f20
 	0019e810 farcall ax
 	0019e818 farsubsp 0x1
 	0019e820 mov mar,sp
 	0019e82c memwrite4 ax
 	0019e834 add sp,0x4
 	0019e840 sourceline 0x1d6c
 	0019e848 stackptr 0x4
 	0019e850 memread4 ax
 	0019e858 push ax
 	0019e860 mov ax,0x0
 	0019e86c pop bx
 	0019e874 cmpeq bx,ax
 	0019e880 mov ax,bx
 	0019e88c jz 0x0019e904
		0019e904: CONDITIONAL_JUMP
		0019e894: FALL_THROUGH

	[0019e894]
		0019e2f4: FALL_THROUGH
 	0019e894 push op
 	0019e89c mov ax,0x2c8717
 	0019e8a8 farpush ax
 	0019e8b0 mov mar,0x3cef20
 	0019e8bc mov ax,mar
 	0019e8c8 mov op,ax
 	0019e8d0 setfuncargs 0x1
 	0019e8d8 mov ax,0x6f6f20
 	0019e8e4 farcall ax
 	0019e8ec farsubsp 0x1
 	0019e8f4 pop op
 	0019e8fc jmp 0x0019eafc
		0019eafc: UNCONDITIONAL_JUMP

	[0019e904]
		0019e2f4: CONDITIONAL_JUMP
 	0019e904 sourceline 0x1d6d
 	0019e90c stackptr 0x4
 	0019e914 memread4 ax
 	0019e91c push ax
 	0019e924 mov ax,0x1
 	0019e930 pop bx
 	0019e938 cmpeq bx,ax
 	0019e944 mov ax,bx
 	0019e950 jz 0x0019e9c8
		0019e9c8: CONDITIONAL_JUMP
		0019e958: FALL_THROUGH

	[0019e958]
		0019e904: FALL_THROUGH
 	0019e958 push op
 	0019e960 mov ax,0x2c8740
 	0019e96c farpush ax
 	0019e974 mov mar,0x3cef20
 	0019e980 mov ax,mar
 	0019e98c mov op,ax
 	0019e994 setfuncargs 0x1
 	0019e99c mov ax,0x6f6f20
 	0019e9a8 farcall ax
 	0019e9b0 farsubsp 0x1
 	0019e9b8 pop op
 	0019e9c0 jmp 0x0019eafc
		0019eafc: UNCONDITIONAL_JUMP

	[0019e9c8]
		0019e904: CONDITIONAL_JUMP
 	0019e9c8 sourceline 0x1d6e
 	0019e9d0 stackptr 0x4
 	0019e9d8 memread4 ax
 	0019e9e0 push ax
 	0019e9e8 mov ax,0x2
 	0019e9f4 pop bx
 	0019e9fc cmpeq bx,ax
 	0019ea08 mov ax,bx
 	0019ea14 jz 0x0019ea8c
		0019ea8c: CONDITIONAL_JUMP
		0019ea1c: FALL_THROUGH

	[0019ea1c]
		0019e9c8: FALL_THROUGH
 	0019ea1c push op
 	0019ea24 mov ax,0x2c8769
 	0019ea30 farpush ax
 	0019ea38 mov mar,0x3cef20
 	0019ea44 mov ax,mar
 	0019ea50 mov op,ax
 	0019ea58 setfuncargs 0x1
 	0019ea60 mov ax,0x6f6f20
 	0019ea6c farcall ax
 	0019ea74 farsubsp 0x1
 	0019ea7c pop op
 	0019ea84 jmp 0x0019eafc
		0019eafc: UNCONDITIONAL_JUMP

	[0019ea8c]
		0019e9c8: CONDITIONAL_JUMP
 	0019ea8c sourceline 0x1d6f
 	0019ea94 push op
 	0019ea9c mov ax,0x2c8792
 	0019eaa8 farpush ax
 	0019eab0 mov mar,0x3cef20
 	0019eabc mov ax,mar
 	0019eac8 mov op,ax
 	0019ead0 setfuncargs 0x1
 	0019ead8 mov ax,0x6f6f20
 	0019eae4 farcall ax
 	0019eaec farsubsp 0x1
 	0019eaf4 pop op
		0019eafc: FALL_THROUGH

	[0019eafc]
		0019e894: UNCONDITIONAL_JUMP
		0019e958: UNCONDITIONAL_JUMP
		0019ea1c: UNCONDITIONAL_JUMP
		0019ea8c: FALL_THROUGH
 	0019eafc sourceline 0x1d71
 	0019eb04 push op
 	0019eb0c mov ax,0x2c2f42
 	0019eb18 farpush ax
 	0019eb20 mov mar,0xb9ef20
 	0019eb2c mov ax,mar
 	0019eb38 mov op,ax
 	0019eb40 setfuncargs 0x1
 	0019eb48 mov ax,0x6f6f20
 	0019eb54 farcall ax
 	0019eb5c farsubsp 0x1
 	0019eb64 pop op
 	0019eb6c sourceline 0x1d72
 	0019eb74 push op
 	0019eb7c mov ax,0x427
 	0019eb88 farpush ax
 	0019eb90 mov ax,0x397
 	0019eb9c farpush ax
 	0019eba4 mov ax,0x0
 	0019ebb0 farpush ax
 	0019ebb8 mov ax,0x3
 	0019ebc4 farpush ax
 	0019ebcc mov ax,0x0
 	0019ebd8 farpush ax
 	0019ebe0 mov mar,0x3cef20
 	0019ebec mov ax,mar
 	0019ebf8 mov op,ax
 	0019ec00 setfuncargs 0x5
 	0019ec08 mov ax,0x536f20
 	0019ec14 farcall ax
 	0019ec1c farsubsp 0x5
 	0019ec24 pop op
 	0019ec2c sourceline 0x1d73
 	0019ec34 push op
 	0019ec3c mov ax,0x2
 	0019ec48 farpush ax
 	0019ec50 mov mar,0x3cef20
 	0019ec5c mov ax,mar
 	0019ec68 mov op,ax
 	0019ec70 setfuncargs 0x1
 	0019ec78 mov ax,0x51ef20
 	0019ec84 farcall ax
 	0019ec8c farsubsp 0x1
 	0019ec94 pop op
 	0019ec9c sourceline 0x1d74
 	0019eca4 mov mar,0x3cef20
 	0019ecb0 mov ax,mar
 	0019ecbc push op
 	0019ecc4 mov op,ax
 	0019eccc setfuncargs 0x0
 	0019ecd4 mov ax,0x78ef20
 	0019ece0 farcall ax
 	0019ece8 pop op
 	0019ecf0 mov mar,sp
 	0019ecfc memwrite4 ax
 	0019ed04 add sp,0x4
 	0019ed10 stackptr 0x4
 	0019ed18 memread4 ax
 	0019ed20 push ax
 	0019ed28 mov ax,0x7
 	0019ed34 pop bx
 	0019ed3c add bx,ax
 	0019ed48 mov ax,bx
 	0019ed54 mov bx,ax
 	0019ed60 mov mar,0x3cef20
 	0019ed6c mov ax,mar
 	0019ed78 push op
 	0019ed80 mov op,ax
 	0019ed88 farpush bx
 	0019ed90 setfuncargs 0x1
 	0019ed98 mov ax,0x526f20
 	0019eda4 farcall ax
 	0019edac farsubsp 0x1
 	0019edb4 pop op
 	0019edbc sourceline 0x1d75
 	0019edc4 mov mar,0x3cef20
 	0019edd0 mov ax,mar
 	0019eddc push op
 	0019ede4 mov op,ax
 	0019edec setfuncargs 0x0
 	0019edf4 mov ax,0xb36f20
 	0019ee00 farcall ax
 	0019ee08 pop op
 	0019ee10 mov mar,sp
 	0019ee1c memwrite4 ax
 	0019ee24 add sp,0x4
 	0019ee30 stackptr 0x4
 	0019ee38 memread4 ax
 	0019ee40 push ax
 	0019ee48 mov ax,0x4
 	0019ee54 pop bx
 	0019ee5c add bx,ax
 	0019ee68 mov ax,bx
 	0019ee74 mov bx,ax
 	0019ee80 mov mar,0x3cef20
 	0019ee8c mov ax,mar
 	0019ee98 push op
 	0019eea0 mov op,ax
 	0019eea8 farpush bx
 	0019eeb0 setfuncargs 0x1
 	0019eeb8 mov ax,0x70ef20
 	0019eec4 farcall ax
 	0019eecc farsubsp 0x1
 	0019eed4 pop op
 	0019eedc sourceline 0x1d76
 	0019eee4 mov ax,0x7
 	0019eef0 mov bx,ax
 	0019eefc mov mar,0x3cef20
 	0019ef08 mov ax,mar
 	0019ef14 push op
 	0019ef1c mov op,ax
 	0019ef24 farpush bx
 	0019ef2c setfuncargs 0x1
 	0019ef34 mov ax,0x766f20
 	0019ef40 farcall ax
 	0019ef48 farsubsp 0x1
 	0019ef50 pop op
 	0019ef58 sourceline 0x1d77
 	0019ef60 sub sp,0x14
		0019ef6c: FALL_THROUGH

	[0019ef6c]
		0019e2a0: UNCONDITIONAL_JUMP
		0019eafc: FALL_THROUGH
 	0019ef6c sourceline 0x1d78
 	0019ef74 jmp 0x001a00ac
		001a00ac: UNCONDITIONAL_JUMP

	[0019ef7c]
		0019e264: CONDITIONAL_JUMP
 	0019ef7c sourceline 0x1d7a
 	0019ef84 mov mar,0x3cef20
 	0019ef90 mov ax,mar
 	0019ef9c push op
 	0019efa4 mov op,ax
 	0019efac setfuncargs 0x0
 	0019efb4 mov ax,0x89ef20
 	0019efc0 farcall ax
 	0019efc8 pop op
 	0019efd0 push ax
 	0019efd8 mov mar,0x7def20
 	0019efe4 mov ax,mar
 	0019eff0 pop bx
 	0019eff8 cmpeq bx,ax
 	0019f004 mov ax,bx
 	0019f010 jz 0x0019f310
		0019f310: CONDITIONAL_JUMP
		0019f018: FALL_THROUGH

	[0019f018]
		0019ef7c: FALL_THROUGH
 	0019f018 sourceline 0x1d7c
 	0019f020 mov mar,0xb9ef20
 	0019f02c mov ax,mar
 	0019f038 push op
 	0019f040 mov op,ax
 	0019f048 setfuncargs 0x0
 	0019f050 mov ax,0x516f20
 	0019f05c farcall ax
 	0019f064 pop op
 	0019f06c push ax
 	0019f074 mov ax,0x72
 	0019f080 pop bx
 	0019f088 cmpeq bx,ax
 	0019f094 mov ax,bx
 	0019f0a0 jz 0x0019f140
		0019f140: CONDITIONAL_JUMP
		0019f0a8: FALL_THROUGH

	[0019f0a8]
		0019f018: FALL_THROUGH
 	0019f0a8 push op
 	0019f0b0 mov ax,0x397
 	0019f0bc farpush ax
 	0019f0c4 mov ax,0x4e
 	0019f0d0 farpush ax
 	0019f0d8 mov ax,0xae
 	0019f0e4 farpush ax
 	0019f0ec mov mar,0x3cef20
 	0019f0f8 mov ax,mar
 	0019f104 mov op,ax
 	0019f10c setfuncargs 0x3
 	0019f114 mov ax,0x726f20
 	0019f120 farcall ax
 	0019f128 farsubsp 0x3
 	0019f130 pop op
 	0019f138 jmp 0x0019f1d8
		0019f1d8: UNCONDITIONAL_JUMP

	[0019f140]
		0019f018: CONDITIONAL_JUMP
 	0019f140 sourceline 0x1d7d
 	0019f148 push op
 	0019f150 mov ax,0x397
 	0019f15c farpush ax
 	0019f164 mov ax,0x49
 	0019f170 farpush ax
 	0019f178 mov ax,0x4f
 	0019f184 farpush ax
 	0019f18c mov mar,0x3cef20
 	0019f198 mov ax,mar
 	0019f1a4 mov op,ax
 	0019f1ac setfuncargs 0x3
 	0019f1b4 mov ax,0x726f20
 	0019f1c0 farcall ax
 	0019f1c8 farsubsp 0x3
 	0019f1d0 pop op
		0019f1d8: FALL_THROUGH

	[0019f1d8]
		0019f0a8: UNCONDITIONAL_JUMP
		0019f140: FALL_THROUGH
 	0019f1d8 sourceline 0x1d7e
 	0019f1e0 mov ax,0x1
 	0019f1ec mov bx,ax
 	0019f1f8 mov mar,0x3cef20
 	0019f204 mov ax,mar
 	0019f210 push op
 	0019f218 mov op,ax
 	0019f220 farpush bx
 	0019f228 setfuncargs 0x1
 	0019f230 mov ax,0x69ef20
 	0019f23c farcall ax
 	0019f244 farsubsp 0x1
 	0019f24c pop op
 	0019f254 sourceline 0x1d80
 	0019f25c push op
 	0019f264 mov ax,0x2c2e3b
 	0019f270 farpush ax
 	0019f278 mov ax,0x138
 	0019f284 farpush ax
 	0019f28c mov ax,0x92
 	0019f298 farpush ax
 	0019f2a0 mov ax,0x0
 	0019f2ac farpush ax
 	0019f2b4 mov mar,0x3cef20
 	0019f2c0 mov ax,mar
 	0019f2cc mov op,ax
 	0019f2d4 setfuncargs 0x4
 	0019f2dc mov ax,0x6aef20
 	0019f2e8 farcall ax
 	0019f2f0 farsubsp 0x4
 	0019f2f8 pop op
 	0019f300 sourceline 0x1d81
 	0019f308 jmp 0x001a00ac
		001a00ac: UNCONDITIONAL_JUMP

	[0019f310]
		0019ef7c: CONDITIONAL_JUMP
 	0019f310 sourceline 0x1d83
 	0019f318 mov mar,0x3cef20
 	0019f324 mov ax,mar
 	0019f330 push op
 	0019f338 mov op,ax
 	0019f340 setfuncargs 0x0
 	0019f348 mov ax,0x89ef20
 	0019f354 farcall ax
 	0019f35c pop op
 	0019f364 push ax
 	0019f36c mov mar,0x8f6f20
 	0019f378 mov ax,mar
 	0019f384 pop bx
 	0019f38c cmpeq bx,ax
 	0019f398 mov ax,bx
 	0019f3a4 jz 0x001a00ac
		001a00ac: CONDITIONAL_JUMP
		0019f3ac: FALL_THROUGH

	[0019f3ac]
		0019f310: FALL_THROUGH
 	0019f3ac sourceline 0x1d85
 	0019f3b4 setfuncargs 0x0
 	0019f3bc mov ax,0x6def20
 	0019f3c8 farcall ax
 	0019f3d0 lnot ax
 	0019f3d8 jz 0x0019f434
		0019f434: CONDITIONAL_JUMP
		0019f3e0: FALL_THROUGH

	[0019f3e0]
		0019f3ac: FALL_THROUGH
 	0019f3e0 mov ax,0x7c
 	0019f3ec farpush ax
 	0019f3f4 mov ax,0x79
 	0019f400 farpush ax
 	0019f408 setfuncargs 0x2
 	0019f410 mov ax,0x6e6f20
 	0019f41c farcall ax
 	0019f424 farsubsp 0x2
 	0019f42c jmp 0x001a00ac
		001a00ac: UNCONDITIONAL_JUMP

	[0019f434]
		0019f3ac: CONDITIONAL_JUMP
 	0019f434 sourceline 0x1d88
 	0019f43c push op
 	0019f444 mov ax,0x397
 	0019f450 farpush ax
 	0019f458 mov ax,0x7
 	0019f464 farpush ax
 	0019f46c mov mar,0x3cef20
 	0019f478 mov ax,mar
 	0019f484 mov op,ax
 	0019f48c setfuncargs 0x2
 	0019f494 mov ax,0x6eef20
 	0019f4a0 farcall ax
 	0019f4a8 farsubsp 0x2
 	0019f4b0 pop op
 	0019f4b8 sourceline 0x1d89
 	0019f4c0 mov ax,0x3
 	0019f4cc mov bx,ax
 	0019f4d8 mov mar,0x3cef20
 	0019f4e4 mov ax,mar
 	0019f4f0 push op
 	0019f4f8 mov op,ax
 	0019f500 farpush bx
 	0019f508 setfuncargs 0x1
 	0019f510 mov ax,0x69ef20
 	0019f51c farcall ax
 	0019f524 farsubsp 0x1
 	0019f52c pop op
 	0019f534 sourceline 0x1d8a
 	0019f53c mov ax,0x0
 	0019f548 mov bx,ax
 	0019f554 mov mar,0x3cef20
 	0019f560 mov ax,mar
 	0019f56c push op
 	0019f574 mov op,ax
 	0019f57c farpush bx
 	0019f584 setfuncargs 0x1
 	0019f58c mov ax,0x436f20
 	0019f598 farcall ax
 	0019f5a0 farsubsp 0x1
 	0019f5a8 pop op
 	0019f5b0 sourceline 0x1d8b
 	0019f5b8 push op
 	0019f5c0 mov ax,0xc
 	0019f5cc farpush ax
 	0019f5d4 mov mar,0x3cef20
 	0019f5e0 mov ax,mar
 	0019f5ec mov op,ax
 	0019f5f4 setfuncargs 0x1
 	0019f5fc mov ax,0x51ef20
 	0019f608 farcall ax
 	0019f610 farsubsp 0x1
 	0019f618 pop op
 	0019f620 sourceline 0x1d8c
 	0019f628 mov mar,0x3cef20
 	0019f634 mov ax,mar
 	0019f640 push op
 	0019f648 mov op,ax
 	0019f650 setfuncargs 0x0
 	0019f658 mov ax,0x78ef20
 	0019f664 farcall ax
 	0019f66c pop op
 	0019f674 mov mar,sp
 	0019f680 memwrite4 ax
 	0019f688 add sp,0x4
 	0019f694 stackptr 0x4
 	0019f69c memread4 ax
 	0019f6a4 push ax
 	0019f6ac mov ax,0x7
 	0019f6b8 pop bx
 	0019f6c0 sub bx,ax
 	0019f6cc mov ax,bx
 	0019f6d8 mov bx,ax
 	0019f6e4 mov mar,0x3cef20
 	0019f6f0 mov ax,mar
 	0019f6fc push op
 	0019f704 mov op,ax
 	0019f70c farpush bx
 	0019f714 setfuncargs 0x1
 	0019f71c mov ax,0x526f20
 	0019f728 farcall ax
 	0019f730 farsubsp 0x1
 	0019f738 pop op
 	0019f740 sourceline 0x1d8d
 	0019f748 mov mar,0x3cef20
 	0019f754 mov ax,mar
 	0019f760 push op
 	0019f768 mov op,ax
 	0019f770 setfuncargs 0x0
 	0019f778 mov ax,0xb36f20
 	0019f784 farcall ax
 	0019f78c pop op
 	0019f794 mov mar,sp
 	0019f7a0 memwrite4 ax
 	0019f7a8 add sp,0x4
 	0019f7b4 stackptr 0x4
 	0019f7bc memread4 ax
 	0019f7c4 push ax
 	0019f7cc mov ax,0x4
 	0019f7d8 pop bx
 	0019f7e0 sub bx,ax
 	0019f7ec mov ax,bx
 	0019f7f8 mov bx,ax
 	0019f804 mov mar,0x3cef20
 	0019f810 mov ax,mar
 	0019f81c push op
 	0019f824 mov op,ax
 	0019f82c farpush bx
 	0019f834 setfuncargs 0x1
 	0019f83c mov ax,0x70ef20
 	0019f848 farcall ax
 	0019f850 farsubsp 0x1
 	0019f858 pop op
 	0019f860 sourceline 0x1d8e
 	0019f868 push op
 	0019f870 mov ax,0x426
 	0019f87c farpush ax
 	0019f884 mov ax,0x397
 	0019f890 farpush ax
 	0019f898 mov ax,0x0
 	0019f8a4 farpush ax
 	0019f8ac mov ax,0x3
 	0019f8b8 farpush ax
 	0019f8c0 mov ax,0x0
 	0019f8cc farpush ax
 	0019f8d4 mov mar,0x3cef20
 	0019f8e0 mov ax,mar
 	0019f8ec mov op,ax
 	0019f8f4 setfuncargs 0x5
 	0019f8fc mov ax,0x536f20
 	0019f908 farcall ax
 	0019f910 farsubsp 0x5
 	0019f918 pop op
 	0019f920 sourceline 0x1d90
 	0019f928 mov ax,0x3
 	0019f934 farpush ax
 	0019f93c setfuncargs 0x1
 	0019f944 mov ax,0x4a6f20
 	0019f950 farcall ax
 	0019f958 farsubsp 0x1
 	0019f960 mov mar,sp
 	0019f96c memwrite4 ax
 	0019f974 add sp,0x4
 	0019f980 sourceline 0x1d91
 	0019f988 stackptr 0x4
 	0019f990 memread4 ax
 	0019f998 push ax
 	0019f9a0 mov ax,0x0
 	0019f9ac pop bx
 	0019f9b4 cmpeq bx,ax
 	0019f9c0 mov ax,bx
 	0019f9cc jz 0x0019fa44
		0019fa44: CONDITIONAL_JUMP
		0019f9d4: FALL_THROUGH

	[0019f9d4]
		0019f434: FALL_THROUGH
 	0019f9d4 push op
 	0019f9dc mov ax,0x2c8717
 	0019f9e8 farpush ax
 	0019f9f0 mov mar,0x3cef20
 	0019f9fc mov ax,mar
 	0019fa08 mov op,ax
 	0019fa10 setfuncargs 0x1
 	0019fa18 mov ax,0x6f6f20
 	0019fa24 farcall ax
 	0019fa2c farsubsp 0x1
 	0019fa34 pop op
 	0019fa3c jmp 0x0019fc3c
		0019fc3c: UNCONDITIONAL_JUMP

	[0019fa44]
		0019f434: CONDITIONAL_JUMP
 	0019fa44 sourceline 0x1d92
 	0019fa4c stackptr 0x4
 	0019fa54 memread4 ax
 	0019fa5c push ax
 	0019fa64 mov ax,0x1
 	0019fa70 pop bx
 	0019fa78 cmpeq bx,ax
 	0019fa84 mov ax,bx
 	0019fa90 jz 0x0019fb08
		0019fb08: CONDITIONAL_JUMP
		0019fa98: FALL_THROUGH

	[0019fa98]
		0019fa44: FALL_THROUGH
 	0019fa98 push op
 	0019faa0 mov ax,0x2c8740
 	0019faac farpush ax
 	0019fab4 mov mar,0x3cef20
 	0019fac0 mov ax,mar
 	0019facc mov op,ax
 	0019fad4 setfuncargs 0x1
 	0019fadc mov ax,0x6f6f20
 	0019fae8 farcall ax
 	0019faf0 farsubsp 0x1
 	0019faf8 pop op
 	0019fb00 jmp 0x0019fc3c
		0019fc3c: UNCONDITIONAL_JUMP

	[0019fb08]
		0019fa44: CONDITIONAL_JUMP
 	0019fb08 sourceline 0x1d93
 	0019fb10 stackptr 0x4
 	0019fb18 memread4 ax
 	0019fb20 push ax
 	0019fb28 mov ax,0x2
 	0019fb34 pop bx
 	0019fb3c cmpeq bx,ax
 	0019fb48 mov ax,bx
 	0019fb54 jz 0x0019fbcc
		0019fbcc: CONDITIONAL_JUMP
		0019fb5c: FALL_THROUGH

	[0019fb5c]
		0019fb08: FALL_THROUGH
 	0019fb5c push op
 	0019fb64 mov ax,0x2c8769
 	0019fb70 farpush ax
 	0019fb78 mov mar,0x3cef20
 	0019fb84 mov ax,mar
 	0019fb90 mov op,ax
 	0019fb98 setfuncargs 0x1
 	0019fba0 mov ax,0x6f6f20
 	0019fbac farcall ax
 	0019fbb4 farsubsp 0x1
 	0019fbbc pop op
 	0019fbc4 jmp 0x0019fc3c
		0019fc3c: UNCONDITIONAL_JUMP

	[0019fbcc]
		0019fb08: CONDITIONAL_JUMP
 	0019fbcc sourceline 0x1d94
 	0019fbd4 push op
 	0019fbdc mov ax,0x2c8792
 	0019fbe8 farpush ax
 	0019fbf0 mov mar,0x3cef20
 	0019fbfc mov ax,mar
 	0019fc08 mov op,ax
 	0019fc10 setfuncargs 0x1
 	0019fc18 mov ax,0x6f6f20
 	0019fc24 farcall ax
 	0019fc2c farsubsp 0x1
 	0019fc34 pop op
		0019fc3c: FALL_THROUGH

	[0019fc3c]
		0019f9d4: UNCONDITIONAL_JUMP
		0019fa98: UNCONDITIONAL_JUMP
		0019fb5c: UNCONDITIONAL_JUMP
		0019fbcc: FALL_THROUGH
 	0019fc3c sourceline 0x1d96
 	0019fc44 push op
 	0019fc4c mov ax,0x2c2f42
 	0019fc58 farpush ax
 	0019fc60 mov mar,0xb9ef20
 	0019fc6c mov ax,mar
 	0019fc78 mov op,ax
 	0019fc80 setfuncargs 0x1
 	0019fc88 mov ax,0x6f6f20
 	0019fc94 farcall ax
 	0019fc9c farsubsp 0x1
 	0019fca4 pop op
 	0019fcac sourceline 0x1d97
 	0019fcb4 push op
 	0019fcbc mov ax,0x427
 	0019fcc8 farpush ax
 	0019fcd0 mov ax,0x397
 	0019fcdc farpush ax
 	0019fce4 mov ax,0x0
 	0019fcf0 farpush ax
 	0019fcf8 mov ax,0x3
 	0019fd04 farpush ax
 	0019fd0c mov ax,0x0
 	0019fd18 farpush ax
 	0019fd20 mov mar,0x3cef20
 	0019fd2c mov ax,mar
 	0019fd38 mov op,ax
 	0019fd40 setfuncargs 0x5
 	0019fd48 mov ax,0x536f20
 	0019fd54 farcall ax
 	0019fd5c farsubsp 0x5
 	0019fd64 pop op
 	0019fd6c sourceline 0x1d98
 	0019fd74 push op
 	0019fd7c mov ax,0x2
 	0019fd88 farpush ax
 	0019fd90 mov mar,0x3cef20
 	0019fd9c mov ax,mar
 	0019fda8 mov op,ax
 	0019fdb0 setfuncargs 0x1
 	0019fdb8 mov ax,0x51ef20
 	0019fdc4 farcall ax
 	0019fdcc farsubsp 0x1
 	0019fdd4 pop op
 	0019fddc sourceline 0x1d99
 	0019fde4 mov mar,0x3cef20
 	0019fdf0 mov ax,mar
 	0019fdfc push op
 	0019fe04 mov op,ax
 	0019fe0c setfuncargs 0x0
 	0019fe14 mov ax,0x78ef20
 	0019fe20 farcall ax
 	0019fe28 pop op
 	0019fe30 mov mar,sp
 	0019fe3c memwrite4 ax
 	0019fe44 add sp,0x4
 	0019fe50 stackptr 0x4
 	0019fe58 memread4 ax
 	0019fe60 push ax
 	0019fe68 mov ax,0x7
 	0019fe74 pop bx
 	0019fe7c add bx,ax
 	0019fe88 mov ax,bx
 	0019fe94 mov bx,ax
 	0019fea0 mov mar,0x3cef20
 	0019feac mov ax,mar
 	0019feb8 push op
 	0019fec0 mov op,ax
 	0019fec8 farpush bx
 	0019fed0 setfuncargs 0x1
 	0019fed8 mov ax,0x526f20
 	0019fee4 farcall ax
 	0019feec farsubsp 0x1
 	0019fef4 pop op
 	0019fefc sourceline 0x1d9a
 	0019ff04 mov mar,0x3cef20
 	0019ff10 mov ax,mar
 	0019ff1c push op
 	0019ff24 mov op,ax
 	0019ff2c setfuncargs 0x0
 	0019ff34 mov ax,0xb36f20
 	0019ff40 farcall ax
 	0019ff48 pop op
 	0019ff50 mov mar,sp
 	0019ff5c memwrite4 ax
 	0019ff64 add sp,0x4
 	0019ff70 stackptr 0x4
 	0019ff78 memread4 ax
 	0019ff80 push ax
 	0019ff88 mov ax,0x4
 	0019ff94 pop bx
 	0019ff9c add bx,ax
 	0019ffa8 mov ax,bx
 	0019ffb4 mov bx,ax
 	0019ffc0 mov mar,0x3cef20
 	0019ffcc mov ax,mar
 	0019ffd8 push op
 	0019ffe0 mov op,ax
 	0019ffe8 farpush bx
 	0019fff0 setfuncargs 0x1
 	0019fff8 mov ax,0x70ef20
 	001a0004 farcall ax
 	001a000c farsubsp 0x1
 	001a0014 pop op
 	001a001c sourceline 0x1d9b
 	001a0024 mov ax,0x7
 	001a0030 mov bx,ax
 	001a003c mov mar,0x3cef20
 	001a0048 mov ax,mar
 	001a0054 push op
 	001a005c mov op,ax
 	001a0064 farpush bx
 	001a006c setfuncargs 0x1
 	001a0074 mov ax,0x766f20
 	001a0080 farcall ax
 	001a0088 farsubsp 0x1
 	001a0090 pop op
 	001a0098 sourceline 0x1d9c
 	001a00a0 sub sp,0x14
		001a00ac: FALL_THROUGH

	[001a00ac]
		0019db24: UNCONDITIONAL_JUMP
		0019ef6c: UNCONDITIONAL_JUMP
		0019f1d8: UNCONDITIONAL_JUMP
		0019f310: CONDITIONAL_JUMP
		0019f3e0: UNCONDITIONAL_JUMP
		0019fc3c: FALL_THROUGH
 	001a00ac sourceline 0x1d9f
 	001a00b4 mov ax,0x0
 	001a00c0 ret

cKosloff_UseInv$0:
	[001a00c4]
 	001a00c4 sourceline 0x1da6
 	001a00cc thisaddr
 	001a00d4 sourceline 0x1da7
*	001a00dc mov mar,0x3cef20
 	001a00e8 mov ax,mar
 	001a00f4 push op
 	001a00fc mov op,ax
 	001a0104 setfuncargs 0x0
 	001a010c mov ax,0x89ef20
 	001a0118 farcall ax
 	001a0120 pop op
 	001a0128 push ax
 	001a0130 mov mar,0x906f20
 	001a013c mov ax,mar
 	001a0148 pop bx
 	001a0150 cmpeq bx,ax
 	001a015c mov ax,bx
 	001a0168 jz 0x001a1380
		001a1380: CONDITIONAL_JUMP
		001a0170: FALL_THROUGH

	[001a0170]
		001a00c4: FALL_THROUGH
 	001a0170 sourceline 0x1da9
 	001a0178 setfuncargs 0x0
 	001a0180 mov ax,0x6def20
 	001a018c farcall ax
 	001a0194 lnot ax
 	001a019c jz 0x001a01f8
		001a01f8: CONDITIONAL_JUMP
		001a01a4: FALL_THROUGH

	[001a01a4]
		001a0170: FALL_THROUGH
 	001a01a4 mov ax,0x89
 	001a01b0 farpush ax
 	001a01b8 mov ax,0xbc
 	001a01c4 farpush ax
 	001a01cc setfuncargs 0x2
 	001a01d4 mov ax,0x6e6f20
 	001a01e0 farcall ax
 	001a01e8 farsubsp 0x2
 	001a01f0 jmp 0x001a1370
		001a1370: UNCONDITIONAL_JUMP

	[001a01f8]
		001a0170: CONDITIONAL_JUMP
 	001a01f8 sourceline 0x1dac
 	001a0200 mov ax,0x1
 	001a020c mov mar,0x5eef20
 	001a0218 memwrite4 ax
 	001a0220 sourceline 0x1dad
 	001a0228 push op
 	001a0230 mov ax,0x131
 	001a023c farpush ax
 	001a0244 mov ax,0x397
 	001a0250 farpush ax
 	001a0258 mov ax,0x89
 	001a0264 farpush ax
 	001a026c mov ax,0xbc
 	001a0278 farpush ax
 	001a0280 mov mar,0x3cef20
 	001a028c mov ax,mar
 	001a0298 mov op,ax
 	001a02a0 setfuncargs 0x4
 	001a02a8 mov ax,0xb2ef20
 	001a02b4 farcall ax
 	001a02bc farsubsp 0x4
 	001a02c4 pop op
 	001a02cc sourceline 0x1dae
 	001a02d4 push op
 	001a02dc mov ax,0x397
 	001a02e8 farpush ax
 	001a02f0 mov ax,0x2
 	001a02fc farpush ax
 	001a0304 mov mar,0x3cef20
 	001a0310 mov ax,mar
 	001a031c mov op,ax
 	001a0324 setfuncargs 0x2
 	001a032c mov ax,0x6eef20
 	001a0338 farcall ax
 	001a0340 farsubsp 0x2
 	001a0348 pop op
 	001a0350 sourceline 0x1daf
 	001a0358 mov ax,0x3
 	001a0364 mov bx,ax
 	001a0370 mov mar,0x3cef20
 	001a037c mov ax,mar
 	001a0388 push op
 	001a0390 mov op,ax
 	001a0398 farpush bx
 	001a03a0 setfuncargs 0x1
 	001a03a8 mov ax,0x69ef20
 	001a03b4 farcall ax
 	001a03bc farsubsp 0x1
 	001a03c4 pop op
 	001a03cc sourceline 0x1db0
 	001a03d4 mov ax,0x0
 	001a03e0 mov bx,ax
 	001a03ec mov mar,0x3cef20
 	001a03f8 mov ax,mar
 	001a0404 push op
 	001a040c mov op,ax
 	001a0414 farpush bx
 	001a041c setfuncargs 0x1
 	001a0424 mov ax,0x436f20
 	001a0430 farcall ax
 	001a0438 farsubsp 0x1
 	001a0440 pop op
 	001a0448 sourceline 0x1db1
 	001a0450 mov mar,0xba6f20
 	001a045c memread4 ax
 	001a0464 lnot ax
 	001a046c jz 0x001a0684
		001a0684: CONDITIONAL_JUMP
		001a0474: FALL_THROUGH

	[001a0474]
		001a01f8: FALL_THROUGH
 	001a0474 sourceline 0x1db3
 	001a047c push op
 	001a0484 mov ax,0x2c3881
 	001a0490 farpush ax
 	001a0498 mov mar,0x3cef20
 	001a04a4 mov ax,mar
 	001a04b0 mov op,ax
 	001a04b8 setfuncargs 0x1
 	001a04c0 mov ax,0x6f6f20
 	001a04cc farcall ax
 	001a04d4 farsubsp 0x1
 	001a04dc pop op
 	001a04e4 sourceline 0x1db4
 	001a04ec push op
 	001a04f4 mov ax,0x2c38a0
 	001a0500 farpush ax
 	001a0508 mov mar,0xbaef20
 	001a0514 mov ax,mar
 	001a0520 mov op,ax
 	001a0528 setfuncargs 0x1
 	001a0530 mov ax,0x6f6f20
 	001a053c farcall ax
 	001a0544 farsubsp 0x1
 	001a054c pop op
 	001a0554 sourceline 0x1db5
 	001a055c push op
 	001a0564 mov ax,0x2c38d4
 	001a0570 farpush ax
 	001a0578 mov mar,0x3cef20
 	001a0584 mov ax,mar
 	001a0590 mov op,ax
 	001a0598 setfuncargs 0x1
 	001a05a0 mov ax,0x6f6f20
 	001a05ac farcall ax
 	001a05b4 farsubsp 0x1
 	001a05bc pop op
 	001a05c4 sourceline 0x1db6
 	001a05cc push op
 	001a05d4 mov ax,0x2c38de
 	001a05e0 farpush ax
 	001a05e8 mov mar,0xbaef20
 	001a05f4 mov ax,mar
 	001a0600 mov op,ax
 	001a0608 setfuncargs 0x1
 	001a0610 mov ax,0x6f6f20
 	001a061c farcall ax
 	001a0624 farsubsp 0x1
 	001a062c pop op
 	001a0634 sourceline 0x1db7
 	001a063c mov ax,0x1
 	001a0648 mov mar,0xba6f20
 	001a0654 memwrite4 ax
 	001a065c sourceline 0x1db8
 	001a0664 mov ax,0x1
 	001a0670 mov mar,0xbb6f20
 	001a067c memwrite4 ax
		001a0684: FALL_THROUGH

	[001a0684]
		001a01f8: CONDITIONAL_JUMP
		001a0474: FALL_THROUGH
 	001a0684 sourceline 0x1dba
 	001a068c push op
 	001a0694 mov ax,0x2c2ff6
 	001a06a0 farpush ax
 	001a06a8 mov mar,0x3cef20
 	001a06b4 mov ax,mar
 	001a06c0 mov op,ax
 	001a06c8 setfuncargs 0x1
 	001a06d0 mov ax,0x6f6f20
 	001a06dc farcall ax
 	001a06e4 farsubsp 0x1
 	001a06ec pop op
 	001a06f4 sourceline 0x1dbb
 	001a06fc push op
 	001a0704 mov ax,0x2c3098
 	001a0710 farpush ax
 	001a0718 mov mar,0x3cef20
 	001a0724 mov ax,mar
 	001a0730 mov op,ax
 	001a0738 setfuncargs 0x1
 	001a0740 mov ax,0x6f6f20
 	001a074c farcall ax
 	001a0754 farsubsp 0x1
 	001a075c pop op
 	001a0764 sourceline 0x1dbc
 	001a076c mov ax,0x0
 	001a0778 mov bx,ax
 	001a0784 mov mar,0xbaef20
 	001a0790 mov ax,mar
 	001a079c push op
 	001a07a4 mov op,ax
 	001a07ac farpush bx
 	001a07b4 setfuncargs 0x1
 	001a07bc mov ax,0xcaef20
 	001a07c8 farcall ax
 	001a07d0 farsubsp 0x1
 	001a07d8 pop op
 	001a07e0 sourceline 0x1dbd
 	001a07e8 mov ax,0x270f
 	001a07f4 mov bx,ax
 	001a0800 mov mar,0x3cef20
 	001a080c mov ax,mar
 	001a0818 push op
 	001a0820 mov op,ax
 	001a0828 farpush bx
 	001a0830 setfuncargs 0x1
 	001a0838 mov ax,0xcaef20
 	001a0844 farcall ax
 	001a084c farsubsp 0x1
 	001a0854 pop op
 	001a085c sourceline 0x1dbe
 	001a0864 push op
 	001a086c mov ax,0x7
 	001a0878 farpush ax
 	001a0880 mov mar,0x3cef20
 	001a088c mov ax,mar
 	001a0898 mov op,ax
 	001a08a0 setfuncargs 0x1
 	001a08a8 mov ax,0x51ef20
 	001a08b4 farcall ax
 	001a08bc farsubsp 0x1
 	001a08c4 pop op
 	001a08cc sourceline 0x1dbf
 	001a08d4 mov ax,0x81
 	001a08e0 mov bx,ax
 	001a08ec mov mar,0x3cef20
 	001a08f8 mov ax,mar
 	001a0904 push op
 	001a090c mov op,ax
 	001a0914 farpush bx
 	001a091c setfuncargs 0x1
 	001a0924 mov ax,0x526f20
 	001a0930 farcall ax
 	001a0938 farsubsp 0x1
 	001a0940 pop op
 	001a0948 sourceline 0x1dc0
 	001a0950 mov ax,0xc5
 	001a095c mov bx,ax
 	001a0968 mov mar,0x3cef20
 	001a0974 mov ax,mar
 	001a0980 push op
 	001a0988 mov op,ax
 	001a0990 farpush bx
 	001a0998 setfuncargs 0x1
 	001a09a0 mov ax,0x70ef20
 	001a09ac farcall ax
 	001a09b4 farsubsp 0x1
 	001a09bc pop op
 	001a09c4 sourceline 0x1dc1
 	001a09cc push op
 	001a09d4 mov ax,0x7a
 	001a09e0 farpush ax
 	001a09e8 mov mar,0xbaef20
 	001a09f4 mov ax,mar
 	001a0a00 mov op,ax
 	001a0a08 setfuncargs 0x1
 	001a0a10 mov ax,0x51ef20
 	001a0a1c farcall ax
 	001a0a24 farsubsp 0x1
 	001a0a2c pop op
 	001a0a34 sourceline 0x1dc2
 	001a0a3c mov ax,0x83
 	001a0a48 mov bx,ax
 	001a0a54 mov mar,0xbaef20
 	001a0a60 mov ax,mar
 	001a0a6c push op
 	001a0a74 mov op,ax
 	001a0a7c farpush bx
 	001a0a84 setfuncargs 0x1
 	001a0a8c mov ax,0x526f20
 	001a0a98 farcall ax
 	001a0aa0 farsubsp 0x1
 	001a0aa8 pop op
 	001a0ab0 sourceline 0x1dc3
 	001a0ab8 mov ax,0xd7
 	001a0ac4 mov bx,ax
 	001a0ad0 mov mar,0xbaef20
 	001a0adc mov ax,mar
 	001a0ae8 push op
 	001a0af0 mov op,ax
 	001a0af8 farpush bx
 	001a0b00 setfuncargs 0x1
 	001a0b08 mov ax,0x70ef20
 	001a0b14 farcall ax
 	001a0b1c farsubsp 0x1
 	001a0b24 pop op
 	001a0b2c sourceline 0x1dc4
 	001a0b34 push op
 	001a0b3c mov ax,0x426
 	001a0b48 farpush ax
 	001a0b50 mov ax,0x398
 	001a0b5c farpush ax
 	001a0b64 mov ax,0x0
 	001a0b70 farpush ax
 	001a0b78 mov ax,0x3
 	001a0b84 farpush ax
 	001a0b8c mov ax,0x0
 	001a0b98 farpush ax
 	001a0ba0 mov mar,0xbaef20
 	001a0bac mov ax,mar
 	001a0bb8 mov op,ax
 	001a0bc0 setfuncargs 0x5
 	001a0bc8 mov ax,0x536f20
 	001a0bd4 farcall ax
 	001a0bdc farsubsp 0x5
 	001a0be4 pop op
 	001a0bec sourceline 0x1dc5
 	001a0bf4 push op
 	001a0bfc mov ax,0x426
 	001a0c08 farpush ax
 	001a0c10 mov ax,0x398
 	001a0c1c farpush ax
 	001a0c24 mov ax,0x0
 	001a0c30 farpush ax
 	001a0c38 mov ax,0x3
 	001a0c44 farpush ax
 	001a0c4c mov ax,0x5
 	001a0c58 farpush ax
 	001a0c60 mov mar,0x3cef20
 	001a0c6c mov ax,mar
 	001a0c78 mov op,ax
 	001a0c80 setfuncargs 0x5
 	001a0c88 mov ax,0x536f20
 	001a0c94 farcall ax
 	001a0c9c farsubsp 0x5
 	001a0ca4 pop op
 	001a0cac sourceline 0x1dc6
 	001a0cb4 mov ax,0x1a
 	001a0cc0 farpush ax
 	001a0cc8 setfuncargs 0x1
 	001a0cd0 mov ax,0x426f20
 	001a0cdc farcall ax
 	001a0ce4 farsubsp 0x1
 	001a0cec sourceline 0x1dc7
 	001a0cf4 push op
 	001a0cfc mov mar,0x906f20
 	001a0d08 mov ax,mar
 	001a0d14 farpush ax
 	001a0d1c mov mar,0x3cef20
 	001a0d28 mov ax,mar
 	001a0d34 mov op,ax
 	001a0d3c setfuncargs 0x1
 	001a0d44 mov ax,0x7d6f20
 	001a0d50 farcall ax
 	001a0d58 farsubsp 0x1
 	001a0d60 pop op
 	001a0d68 sourceline 0x1dc8
 	001a0d70 push op
 	001a0d78 mov ax,0x427
 	001a0d84 farpush ax
 	001a0d8c mov ax,0x398
 	001a0d98 farpush ax
 	001a0da0 mov ax,0x0
 	001a0dac farpush ax
 	001a0db4 mov ax,0x3
 	001a0dc0 farpush ax
 	001a0dc8 mov ax,0x5
 	001a0dd4 farpush ax
 	001a0ddc mov mar,0x3cef20
 	001a0de8 mov ax,mar
 	001a0df4 mov op,ax
 	001a0dfc setfuncargs 0x5
 	001a0e04 mov ax,0x536f20
 	001a0e10 farcall ax
 	001a0e18 farsubsp 0x5
 	001a0e20 pop op
 	001a0e28 sourceline 0x1dc9
 	001a0e30 push op
 	001a0e38 mov ax,0x427
 	001a0e44 farpush ax
 	001a0e4c mov ax,0x397
 	001a0e58 farpush ax
 	001a0e60 mov ax,0x0
 	001a0e6c farpush ax
 	001a0e74 mov ax,0x3
 	001a0e80 farpush ax
 	001a0e88 mov ax,0x0
 	001a0e94 farpush ax
 	001a0e9c mov mar,0xbaef20
 	001a0ea8 mov ax,mar
 	001a0eb4 mov op,ax
 	001a0ebc setfuncargs 0x5
 	001a0ec4 mov ax,0x536f20
 	001a0ed0 farcall ax
 	001a0ed8 farsubsp 0x5
 	001a0ee0 pop op
 	001a0ee8 sourceline 0x1dca
 	001a0ef0 push op
 	001a0ef8 mov ax,0x2
 	001a0f04 farpush ax
 	001a0f0c mov mar,0x3cef20
 	001a0f18 mov ax,mar
 	001a0f24 mov op,ax
 	001a0f2c setfuncargs 0x1
 	001a0f34 mov ax,0x51ef20
 	001a0f40 farcall ax
 	001a0f48 farsubsp 0x1
 	001a0f50 pop op
 	001a0f58 sourceline 0x1dcb
 	001a0f60 mov ax,0x2
 	001a0f6c mov bx,ax
 	001a0f78 mov mar,0x3cef20
 	001a0f84 mov ax,mar
 	001a0f90 push op
 	001a0f98 mov op,ax
 	001a0fa0 farpush bx
 	001a0fa8 setfuncargs 0x1
 	001a0fb0 mov ax,0x766f20
 	001a0fbc farcall ax
 	001a0fc4 farsubsp 0x1
 	001a0fcc pop op
 	001a0fd4 sourceline 0x1dcc
 	001a0fdc mov ax,0x89
 	001a0fe8 mov bx,ax
 	001a0ff4 mov mar,0x3cef20
 	001a1000 mov ax,mar
 	001a100c push op
 	001a1014 mov op,ax
 	001a101c farpush bx
 	001a1024 setfuncargs 0x1
 	001a102c mov ax,0x526f20
 	001a1038 farcall ax
 	001a1040 farsubsp 0x1
 	001a1048 pop op
 	001a1050 sourceline 0x1dcd
 	001a1058 mov ax,0xbc
 	001a1064 mov bx,ax
 	001a1070 mov mar,0x3cef20
 	001a107c mov ax,mar
 	001a1088 push op
 	001a1090 mov op,ax
 	001a1098 farpush bx
 	001a10a0 setfuncargs 0x1
 	001a10a8 mov ax,0x70ef20
 	001a10b4 farcall ax
 	001a10bc farsubsp 0x1
 	001a10c4 pop op
 	001a10cc sourceline 0x1dce
 	001a10d4 push op
 	001a10dc mov ax,0x79
 	001a10e8 farpush ax
 	001a10f0 mov mar,0xbaef20
 	001a10fc mov ax,mar
 	001a1108 mov op,ax
 	001a1110 setfuncargs 0x1
 	001a1118 mov ax,0x51ef20
 	001a1124 farcall ax
 	001a112c farsubsp 0x1
 	001a1134 pop op
 	001a113c sourceline 0x1dcf
 	001a1144 mov ax,0xdb
 	001a1150 mov bx,ax
 	001a115c mov mar,0xbaef20
 	001a1168 mov ax,mar
 	001a1174 push op
 	001a117c mov op,ax
 	001a1184 farpush bx
 	001a118c setfuncargs 0x1
 	001a1194 mov ax,0x70ef20
 	001a11a0 farcall ax
 	001a11a8 farsubsp 0x1
 	001a11b0 pop op
 	001a11b8 sourceline 0x1dd0
 	001a11c0 mov ax,0x85
 	001a11cc mov bx,ax
 	001a11d8 mov mar,0xbaef20
 	001a11e4 mov ax,mar
 	001a11f0 push op
 	001a11f8 mov op,ax
 	001a1200 farpush bx
 	001a1208 setfuncargs 0x1
 	001a1210 mov ax,0x526f20
 	001a121c farcall ax
 	001a1224 farsubsp 0x1
 	001a122c pop op
 	001a1234 sourceline 0x1dd1
 	001a123c push op
 	001a1244 mov ax,0x2c3101
 	001a1250 farpush ax
 	001a1258 mov mar,0xbaef20
 	001a1264 mov ax,mar
 	001a1270 mov op,ax
 	001a1278 setfuncargs 0x1
 	001a1280 mov ax,0x6f6f20
 	001a128c farcall ax
 	001a1294 farsubsp 0x1
 	001a129c pop op
 	001a12a4 sourceline 0x1dd2
 	001a12ac mov ax,0x0
 	001a12b8 mov mar,0x5eef20
 	001a12c4 memwrite4 ax
 	001a12cc sourceline 0x1dd3
 	001a12d4 mov ax,0x1
 	001a12e0 mov mar,0xcf6f20
 	001a12ec memwrite4 ax
 	001a12f4 sourceline 0x1dd4
 	001a12fc mov ax,0x0
 	001a1308 mov bx,ax
 	001a1314 mov mar,0x3cef20
 	001a1320 mov ax,mar
 	001a132c push op
 	001a1334 mov op,ax
 	001a133c farpush bx
 	001a1344 setfuncargs 0x1
 	001a134c mov ax,0xcaef20
 	001a1358 farcall ax
 	001a1360 farsubsp 0x1
 	001a1368 pop op
		001a1370: FALL_THROUGH

	[001a1370]
		001a01a4: UNCONDITIONAL_JUMP
		001a0684: FALL_THROUGH
 	001a1370 sourceline 0x1dd6
 	001a1378 jmp 0x001a93a0
		001a93a0: UNCONDITIONAL_JUMP

	[001a1380]
		001a00c4: CONDITIONAL_JUMP
 	001a1380 sourceline 0x1dd8
 	001a1388 mov mar,0x3cef20
 	001a1394 mov ax,mar
 	001a13a0 push op
 	001a13a8 mov op,ax
 	001a13b0 setfuncargs 0x0
 	001a13b8 mov ax,0x89ef20
 	001a13c4 farcall ax
 	001a13cc pop op
 	001a13d4 push ax
 	001a13dc mov mar,0x8d6f20
 	001a13e8 mov ax,mar
 	001a13f4 pop bx
 	001a13fc cmpeq bx,ax
 	001a1408 mov ax,bx
 	001a1414 jz 0x001a43a0
		001a43a0: CONDITIONAL_JUMP
		001a141c: FALL_THROUGH

	[001a141c]
		001a1380: FALL_THROUGH
 	001a141c sourceline 0x1dda
 	001a1424 push op
 	001a142c mov mar,0x906f20
 	001a1438 mov ax,mar
 	001a1444 farpush ax
 	001a144c mov mar,0x3cef20
 	001a1458 mov ax,mar
 	001a1464 mov op,ax
 	001a146c setfuncargs 0x1
 	001a1474 mov ax,0x996f20
 	001a1480 farcall ax
 	001a1488 farsubsp 0x1
 	001a1490 pop op
 	001a1498 jz 0x001a1e9c
		001a1e9c: CONDITIONAL_JUMP
		001a14a0: FALL_THROUGH

	[001a14a0]
		001a141c: FALL_THROUGH
 	001a14a0 sourceline 0x1ddc
 	001a14a8 setfuncargs 0x0
 	001a14b0 mov ax,0x6def20
 	001a14bc farcall ax
 	001a14c4 lnot ax
 	001a14cc jz 0x001a1528
		001a1528: CONDITIONAL_JUMP
		001a14d4: FALL_THROUGH

	[001a14d4]
		001a14a0: FALL_THROUGH
 	001a14d4 mov ax,0x89
 	001a14e0 farpush ax
 	001a14e8 mov ax,0xbc
 	001a14f4 farpush ax
 	001a14fc setfuncargs 0x2
 	001a1504 mov ax,0x6e6f20
 	001a1510 farcall ax
 	001a1518 farsubsp 0x2
 	001a1520 jmp 0x001a1e8c
		001a1e8c: UNCONDITIONAL_JUMP

	[001a1528]
		001a14a0: CONDITIONAL_JUMP
 	001a1528 sourceline 0x1ddf
 	001a1530 push op
 	001a1538 mov ax,0x397
 	001a1544 farpush ax
 	001a154c mov ax,0x2
 	001a1558 farpush ax
 	001a1560 mov mar,0x3cef20
 	001a156c mov ax,mar
 	001a1578 mov op,ax
 	001a1580 setfuncargs 0x2
 	001a1588 mov ax,0x6eef20
 	001a1594 farcall ax
 	001a159c farsubsp 0x2
 	001a15a4 pop op
 	001a15ac sourceline 0x1de0
 	001a15b4 mov ax,0x3
 	001a15c0 mov bx,ax
 	001a15cc mov mar,0x3cef20
 	001a15d8 mov ax,mar
 	001a15e4 push op
 	001a15ec mov op,ax
 	001a15f4 farpush bx
 	001a15fc setfuncargs 0x1
 	001a1604 mov ax,0x69ef20
 	001a1610 farcall ax
 	001a1618 farsubsp 0x1
 	001a1620 pop op
 	001a1628 sourceline 0x1de1
 	001a1630 mov mar,0xba6f20
 	001a163c memread4 ax
 	001a1644 lnot ax
 	001a164c jz 0x001a1864
		001a1864: CONDITIONAL_JUMP
		001a1654: FALL_THROUGH

	[001a1654]
		001a1528: FALL_THROUGH
 	001a1654 sourceline 0x1de3
 	001a165c push op
 	001a1664 mov ax,0x2c3881
 	001a1670 farpush ax
 	001a1678 mov mar,0x3cef20
 	001a1684 mov ax,mar
 	001a1690 mov op,ax
 	001a1698 setfuncargs 0x1
 	001a16a0 mov ax,0x6f6f20
 	001a16ac farcall ax
 	001a16b4 farsubsp 0x1
 	001a16bc pop op
 	001a16c4 sourceline 0x1de4
 	001a16cc push op
 	001a16d4 mov ax,0x2c38a0
 	001a16e0 farpush ax
 	001a16e8 mov mar,0xbaef20
 	001a16f4 mov ax,mar
 	001a1700 mov op,ax
 	001a1708 setfuncargs 0x1
 	001a1710 mov ax,0x6f6f20
 	001a171c farcall ax
 	001a1724 farsubsp 0x1
 	001a172c pop op
 	001a1734 sourceline 0x1de5
 	001a173c push op
 	001a1744 mov ax,0x2c38d4
 	001a1750 farpush ax
 	001a1758 mov mar,0x3cef20
 	001a1764 mov ax,mar
 	001a1770 mov op,ax
 	001a1778 setfuncargs 0x1
 	001a1780 mov ax,0x6f6f20
 	001a178c farcall ax
 	001a1794 farsubsp 0x1
 	001a179c pop op
 	001a17a4 sourceline 0x1de6
 	001a17ac push op
 	001a17b4 mov ax,0x2c38de
 	001a17c0 farpush ax
 	001a17c8 mov mar,0xbaef20
 	001a17d4 mov ax,mar
 	001a17e0 mov op,ax
 	001a17e8 setfuncargs 0x1
 	001a17f0 mov ax,0x6f6f20
 	001a17fc farcall ax
 	001a1804 farsubsp 0x1
 	001a180c pop op
 	001a1814 sourceline 0x1de7
 	001a181c mov ax,0x1
 	001a1828 mov mar,0xba6f20
 	001a1834 memwrite4 ax
 	001a183c sourceline 0x1de8
 	001a1844 mov ax,0x1
 	001a1850 mov mar,0xbb6f20
 	001a185c memwrite4 ax
		001a1864: FALL_THROUGH

	[001a1864]
		001a1528: CONDITIONAL_JUMP
		001a1654: FALL_THROUGH
 	001a1864 sourceline 0x1dea
 	001a186c mov ax,0x0
 	001a1878 mov bx,ax
 	001a1884 mov mar,0x3cef20
 	001a1890 mov ax,mar
 	001a189c push op
 	001a18a4 mov op,ax
 	001a18ac farpush bx
 	001a18b4 setfuncargs 0x1
 	001a18bc mov ax,0x436f20
 	001a18c8 farcall ax
 	001a18d0 farsubsp 0x1
 	001a18d8 pop op
 	001a18e0 sourceline 0x1deb
 	001a18e8 push op
 	001a18f0 mov ax,0x7
 	001a18fc farpush ax
 	001a1904 mov mar,0x3cef20
 	001a1910 mov ax,mar
 	001a191c mov op,ax
 	001a1924 setfuncargs 0x1
 	001a192c mov ax,0x51ef20
 	001a1938 farcall ax
 	001a1940 farsubsp 0x1
 	001a1948 pop op
 	001a1950 sourceline 0x1dec
 	001a1958 mov ax,0x81
 	001a1964 mov bx,ax
 	001a1970 mov mar,0x3cef20
 	001a197c mov ax,mar
 	001a1988 push op
 	001a1990 mov op,ax
 	001a1998 farpush bx
 	001a19a0 setfuncargs 0x1
 	001a19a8 mov ax,0x526f20
 	001a19b4 farcall ax
 	001a19bc farsubsp 0x1
 	001a19c4 pop op
 	001a19cc sourceline 0x1ded
 	001a19d4 mov ax,0xc5
 	001a19e0 mov bx,ax
 	001a19ec mov mar,0x3cef20
 	001a19f8 mov ax,mar
 	001a1a04 push op
 	001a1a0c mov op,ax
 	001a1a14 farpush bx
 	001a1a1c setfuncargs 0x1
 	001a1a24 mov ax,0x70ef20
 	001a1a30 farcall ax
 	001a1a38 farsubsp 0x1
 	001a1a40 pop op
 	001a1a48 sourceline 0x1dee
 	001a1a50 push op
 	001a1a58 mov ax,0x426
 	001a1a64 farpush ax
 	001a1a6c mov ax,0x397
 	001a1a78 farpush ax
 	001a1a80 mov ax,0x0
 	001a1a8c farpush ax
 	001a1a94 mov ax,0x3
 	001a1aa0 farpush ax
 	001a1aa8 mov ax,0x5
 	001a1ab4 farpush ax
 	001a1abc mov mar,0x3cef20
 	001a1ac8 mov ax,mar
 	001a1ad4 mov op,ax
 	001a1adc setfuncargs 0x5
 	001a1ae4 mov ax,0x536f20
 	001a1af0 farcall ax
 	001a1af8 farsubsp 0x5
 	001a1b00 pop op
 	001a1b08 sourceline 0x1def
 	001a1b10 push op
 	001a1b18 mov ax,0x2c39b4
 	001a1b24 farpush ax
 	001a1b2c mov mar,0x3cef20
 	001a1b38 mov ax,mar
 	001a1b44 mov op,ax
 	001a1b4c setfuncargs 0x1
 	001a1b54 mov ax,0x6f6f20
 	001a1b60 farcall ax
 	001a1b68 farsubsp 0x1
 	001a1b70 pop op
 	001a1b78 sourceline 0x1df0
 	001a1b80 push op
 	001a1b88 mov ax,0x2c31c7
 	001a1b94 farpush ax
 	001a1b9c mov mar,0xbaef20
 	001a1ba8 mov ax,mar
 	001a1bb4 mov op,ax
 	001a1bbc setfuncargs 0x1
 	001a1bc4 mov ax,0x6f6f20
 	001a1bd0 farcall ax
 	001a1bd8 farsubsp 0x1
 	001a1be0 pop op
 	001a1be8 sourceline 0x1df1
 	001a1bf0 push op
 	001a1bf8 mov ax,0x427
 	001a1c04 farpush ax
 	001a1c0c mov ax,0x397
 	001a1c18 farpush ax
 	001a1c20 mov ax,0x0
 	001a1c2c farpush ax
 	001a1c34 mov ax,0x3
 	001a1c40 farpush ax
 	001a1c48 mov ax,0x5
 	001a1c54 farpush ax
 	001a1c5c mov mar,0x3cef20
 	001a1c68 mov ax,mar
 	001a1c74 mov op,ax
 	001a1c7c setfuncargs 0x5
 	001a1c84 mov ax,0x536f20
 	001a1c90 farcall ax
 	001a1c98 farsubsp 0x5
 	001a1ca0 pop op
 	001a1ca8 sourceline 0x1df2
 	001a1cb0 push op
 	001a1cb8 mov ax,0x2
 	001a1cc4 farpush ax
 	001a1ccc mov mar,0x3cef20
 	001a1cd8 mov ax,mar
 	001a1ce4 mov op,ax
 	001a1cec setfuncargs 0x1
 	001a1cf4 mov ax,0x51ef20
 	001a1d00 farcall ax
 	001a1d08 farsubsp 0x1
 	001a1d10 pop op
 	001a1d18 sourceline 0x1df3
 	001a1d20 mov ax,0x2
 	001a1d2c mov bx,ax
 	001a1d38 mov mar,0x3cef20
 	001a1d44 mov ax,mar
 	001a1d50 push op
 	001a1d58 mov op,ax
 	001a1d60 farpush bx
 	001a1d68 setfuncargs 0x1
 	001a1d70 mov ax,0x766f20
 	001a1d7c farcall ax
 	001a1d84 farsubsp 0x1
 	001a1d8c pop op
 	001a1d94 sourceline 0x1df4
 	001a1d9c mov ax,0x89
 	001a1da8 mov bx,ax
 	001a1db4 mov mar,0x3cef20
 	001a1dc0 mov ax,mar
 	001a1dcc push op
 	001a1dd4 mov op,ax
 	001a1ddc farpush bx
 	001a1de4 setfuncargs 0x1
 	001a1dec mov ax,0x526f20
 	001a1df8 farcall ax
 	001a1e00 farsubsp 0x1
 	001a1e08 pop op
 	001a1e10 sourceline 0x1df5
 	001a1e18 mov ax,0xbc
 	001a1e24 mov bx,ax
 	001a1e30 mov mar,0x3cef20
 	001a1e3c mov ax,mar
 	001a1e48 push op
 	001a1e50 mov op,ax
 	001a1e58 farpush bx
 	001a1e60 setfuncargs 0x1
 	001a1e68 mov ax,0x70ef20
 	001a1e74 farcall ax
 	001a1e7c farsubsp 0x1
 	001a1e84 pop op
		001a1e8c: FALL_THROUGH

	[001a1e8c]
		001a14d4: UNCONDITIONAL_JUMP
		001a1864: FALL_THROUGH
 	001a1e8c sourceline 0x1df7
 	001a1e94 jmp 0x001a4390
		001a4390: UNCONDITIONAL_JUMP

	[001a1e9c]
		001a141c: CONDITIONAL_JUMP
 	001a1e9c sourceline 0x1dfa
 	001a1ea4 mov mar,0xbbef20
 	001a1eb0 memread4 ax
 	001a1eb8 lnot ax
 	001a1ec0 jz 0x001a41d0
		001a41d0: CONDITIONAL_JUMP
		001a1ec8: FALL_THROUGH

	[001a1ec8]
		001a1e9c: FALL_THROUGH
 	001a1ec8 sourceline 0x1dfc
 	001a1ed0 setfuncargs 0x0
 	001a1ed8 mov ax,0x6def20
 	001a1ee4 farcall ax
 	001a1eec lnot ax
 	001a1ef4 jz 0x001a1f50
		001a1f50: CONDITIONAL_JUMP
		001a1efc: FALL_THROUGH

	[001a1efc]
		001a1ec8: FALL_THROUGH
 	001a1efc mov ax,0x89
 	001a1f08 farpush ax
 	001a1f10 mov ax,0xbc
 	001a1f1c farpush ax
 	001a1f24 setfuncargs 0x2
 	001a1f2c mov ax,0x6e6f20
 	001a1f38 farcall ax
 	001a1f40 farsubsp 0x2
 	001a1f48 jmp 0x001a41c0
		001a41c0: UNCONDITIONAL_JUMP

	[001a1f50]
		001a1ec8: CONDITIONAL_JUMP
 	001a1f50 sourceline 0x1dff
 	001a1f58 mov ax,0x1
 	001a1f64 mov mar,0x5eef20
 	001a1f70 memwrite4 ax
 	001a1f78 sourceline 0x1e00
 	001a1f80 mov ax,0x0
 	001a1f8c mov bx,ax
 	001a1f98 mov mar,0x3cef20
 	001a1fa4 mov ax,mar
 	001a1fb0 push op
 	001a1fb8 mov op,ax
 	001a1fc0 farpush bx
 	001a1fc8 setfuncargs 0x1
 	001a1fd0 mov ax,0x436f20
 	001a1fdc farcall ax
 	001a1fe4 farsubsp 0x1
 	001a1fec pop op
 	001a1ff4 sourceline 0x1e01
 	001a1ffc push op
 	001a2004 mov ax,0x397
 	001a2010 farpush ax
 	001a2018 mov ax,0x2
 	001a2024 farpush ax
 	001a202c mov mar,0x3cef20
 	001a2038 mov ax,mar
 	001a2044 mov op,ax
 	001a204c setfuncargs 0x2
 	001a2054 mov ax,0x6eef20
 	001a2060 farcall ax
 	001a2068 farsubsp 0x2
 	001a2070 pop op
 	001a2078 sourceline 0x1e02
 	001a2080 mov ax,0x3
 	001a208c mov bx,ax
 	001a2098 mov mar,0x3cef20
 	001a20a4 mov ax,mar
 	001a20b0 push op
 	001a20b8 mov op,ax
 	001a20c0 farpush bx
 	001a20c8 setfuncargs 0x1
 	001a20d0 mov ax,0x69ef20
 	001a20dc farcall ax
 	001a20e4 farsubsp 0x1
 	001a20ec pop op
 	001a20f4 sourceline 0x1e03
 	001a20fc mov ax,0x0
 	001a2108 mov bx,ax
 	001a2114 mov mar,0xbaef20
 	001a2120 mov ax,mar
 	001a212c push op
 	001a2134 mov op,ax
 	001a213c farpush bx
 	001a2144 setfuncargs 0x1
 	001a214c mov ax,0xcaef20
 	001a2158 farcall ax
 	001a2160 farsubsp 0x1
 	001a2168 pop op
 	001a2170 sourceline 0x1e04
 	001a2178 mov ax,0x270f
 	001a2184 mov bx,ax
 	001a2190 mov mar,0x3cef20
 	001a219c mov ax,mar
 	001a21a8 push op
 	001a21b0 mov op,ax
 	001a21b8 farpush bx
 	001a21c0 setfuncargs 0x1
 	001a21c8 mov ax,0xcaef20
 	001a21d4 farcall ax
 	001a21dc farsubsp 0x1
 	001a21e4 pop op
 	001a21ec sourceline 0x1e05
 	001a21f4 push op
 	001a21fc mov ax,0x7
 	001a2208 farpush ax
 	001a2210 mov mar,0x3cef20
 	001a221c mov ax,mar
 	001a2228 mov op,ax
 	001a2230 setfuncargs 0x1
 	001a2238 mov ax,0x51ef20
 	001a2244 farcall ax
 	001a224c farsubsp 0x1
 	001a2254 pop op
 	001a225c sourceline 0x1e06
 	001a2264 mov ax,0x81
 	001a2270 mov bx,ax
 	001a227c mov mar,0x3cef20
 	001a2288 mov ax,mar
 	001a2294 push op
 	001a229c mov op,ax
 	001a22a4 farpush bx
 	001a22ac setfuncargs 0x1
 	001a22b4 mov ax,0x526f20
 	001a22c0 farcall ax
 	001a22c8 farsubsp 0x1
 	001a22d0 pop op
 	001a22d8 sourceline 0x1e07
 	001a22e0 mov ax,0xc5
 	001a22ec mov bx,ax
 	001a22f8 mov mar,0x3cef20
 	001a2304 mov ax,mar
 	001a2310 push op
 	001a2318 mov op,ax
 	001a2320 farpush bx
 	001a2328 setfuncargs 0x1
 	001a2330 mov ax,0x70ef20
 	001a233c farcall ax
 	001a2344 farsubsp 0x1
 	001a234c pop op
 	001a2354 sourceline 0x1e08
 	001a235c push op
 	001a2364 mov ax,0x7a
 	001a2370 farpush ax
 	001a2378 mov mar,0xbaef20
 	001a2384 mov ax,mar
 	001a2390 mov op,ax
 	001a2398 setfuncargs 0x1
 	001a23a0 mov ax,0x51ef20
 	001a23ac farcall ax
 	001a23b4 farsubsp 0x1
 	001a23bc pop op
 	001a23c4 sourceline 0x1e09
 	001a23cc mov ax,0x83
 	001a23d8 mov bx,ax
 	001a23e4 mov mar,0xbaef20
 	001a23f0 mov ax,mar
 	001a23fc push op
 	001a2404 mov op,ax
 	001a240c farpush bx
 	001a2414 setfuncargs 0x1
 	001a241c mov ax,0x526f20
 	001a2428 farcall ax
 	001a2430 farsubsp 0x1
 	001a2438 pop op
 	001a2440 sourceline 0x1e0a
 	001a2448 mov ax,0xd7
 	001a2454 mov bx,ax
 	001a2460 mov mar,0xbaef20
 	001a246c mov ax,mar
 	001a2478 push op
 	001a2480 mov op,ax
 	001a2488 farpush bx
 	001a2490 setfuncargs 0x1
 	001a2498 mov ax,0x70ef20
 	001a24a4 farcall ax
 	001a24ac farsubsp 0x1
 	001a24b4 pop op
 	001a24bc sourceline 0x1e0b
 	001a24c4 push op
 	001a24cc mov ax,0x426
 	001a24d8 farpush ax
 	001a24e0 mov ax,0x398
 	001a24ec farpush ax
 	001a24f4 mov ax,0x0
 	001a2500 farpush ax
 	001a2508 mov ax,0x3
 	001a2514 farpush ax
 	001a251c mov ax,0x0
 	001a2528 farpush ax
 	001a2530 mov mar,0xbaef20
 	001a253c mov ax,mar
 	001a2548 mov op,ax
 	001a2550 setfuncargs 0x5
 	001a2558 mov ax,0x536f20
 	001a2564 farcall ax
 	001a256c farsubsp 0x5
 	001a2574 pop op
 	001a257c sourceline 0x1e0c
 	001a2584 push op
 	001a258c mov ax,0x426
 	001a2598 farpush ax
 	001a25a0 mov ax,0x398
 	001a25ac farpush ax
 	001a25b4 mov ax,0x0
 	001a25c0 farpush ax
 	001a25c8 mov ax,0x3
 	001a25d4 farpush ax
 	001a25dc mov ax,0x5
 	001a25e8 farpush ax
 	001a25f0 mov mar,0x3cef20
 	001a25fc mov ax,mar
 	001a2608 mov op,ax
 	001a2610 setfuncargs 0x5
 	001a2618 mov ax,0x536f20
 	001a2624 farcall ax
 	001a262c farsubsp 0x5
 	001a2634 pop op
 	001a263c sourceline 0x1e0d
 	001a2644 mov ax,0x19
 	001a2650 farpush ax
 	001a2658 setfuncargs 0x1
 	001a2660 mov ax,0x426f20
 	001a266c farcall ax
 	001a2674 farsubsp 0x1
 	001a267c sourceline 0x1e0e
 	001a2684 push op
 	001a268c mov ax,0x427
 	001a2698 farpush ax
 	001a26a0 mov ax,0x398
 	001a26ac farpush ax
 	001a26b4 mov ax,0x0
 	001a26c0 farpush ax
 	001a26c8 mov ax,0x3
 	001a26d4 farpush ax
 	001a26dc mov ax,0x5
 	001a26e8 farpush ax
 	001a26f0 mov mar,0x3cef20
 	001a26fc mov ax,mar
 	001a2708 mov op,ax
 	001a2710 setfuncargs 0x5
 	001a2718 mov ax,0x536f20
 	001a2724 farcall ax
 	001a272c farsubsp 0x5
 	001a2734 pop op
 	001a273c sourceline 0x1e0f
 	001a2744 push op
 	001a274c mov ax,0x427
 	001a2758 farpush ax
 	001a2760 mov ax,0x397
 	001a276c farpush ax
 	001a2774 mov ax,0x0
 	001a2780 farpush ax
 	001a2788 mov ax,0x3
 	001a2794 farpush ax
 	001a279c mov ax,0x0
 	001a27a8 farpush ax
 	001a27b0 mov mar,0xbaef20
 	001a27bc mov ax,mar
 	001a27c8 mov op,ax
 	001a27d0 setfuncargs 0x5
 	001a27d8 mov ax,0x536f20
 	001a27e4 farcall ax
 	001a27ec farsubsp 0x5
 	001a27f4 pop op
 	001a27fc sourceline 0x1e10
 	001a2804 push op
 	001a280c mov ax,0x2
 	001a2818 farpush ax
 	001a2820 mov mar,0x3cef20
 	001a282c mov ax,mar
 	001a2838 mov op,ax
 	001a2840 setfuncargs 0x1
 	001a2848 mov ax,0x51ef20
 	001a2854 farcall ax
 	001a285c farsubsp 0x1
 	001a2864 pop op
 	001a286c sourceline 0x1e11
 	001a2874 mov ax,0x2
 	001a2880 mov bx,ax
 	001a288c mov mar,0x3cef20
 	001a2898 mov ax,mar
 	001a28a4 push op
 	001a28ac mov op,ax
 	001a28b4 farpush bx
 	001a28bc setfuncargs 0x1
 	001a28c4 mov ax,0x766f20
 	001a28d0 farcall ax
 	001a28d8 farsubsp 0x1
 	001a28e0 pop op
 	001a28e8 sourceline 0x1e12
 	001a28f0 mov ax,0x89
 	001a28fc mov bx,ax
 	001a2908 mov mar,0x3cef20
 	001a2914 mov ax,mar
 	001a2920 push op
 	001a2928 mov op,ax
 	001a2930 farpush bx
 	001a2938 setfuncargs 0x1
 	001a2940 mov ax,0x526f20
 	001a294c farcall ax
 	001a2954 farsubsp 0x1
 	001a295c pop op
 	001a2964 sourceline 0x1e13
 	001a296c mov ax,0xbc
 	001a2978 mov bx,ax
 	001a2984 mov mar,0x3cef20
 	001a2990 mov ax,mar
 	001a299c push op
 	001a29a4 mov op,ax
 	001a29ac farpush bx
 	001a29b4 setfuncargs 0x1
 	001a29bc mov ax,0x70ef20
 	001a29c8 farcall ax
 	001a29d0 farsubsp 0x1
 	001a29d8 pop op
 	001a29e0 sourceline 0x1e14
 	001a29e8 push op
 	001a29f0 mov ax,0x79
 	001a29fc farpush ax
 	001a2a04 mov mar,0xbaef20
 	001a2a10 mov ax,mar
 	001a2a1c mov op,ax
 	001a2a24 setfuncargs 0x1
 	001a2a2c mov ax,0x51ef20
 	001a2a38 farcall ax
 	001a2a40 farsubsp 0x1
 	001a2a48 pop op
 	001a2a50 sourceline 0x1e15
 	001a2a58 mov ax,0xdb
 	001a2a64 mov bx,ax
 	001a2a70 mov mar,0xbaef20
 	001a2a7c mov ax,mar
 	001a2a88 push op
 	001a2a90 mov op,ax
 	001a2a98 farpush bx
 	001a2aa0 setfuncargs 0x1
 	001a2aa8 mov ax,0x70ef20
 	001a2ab4 farcall ax
 	001a2abc farsubsp 0x1
 	001a2ac4 pop op
 	001a2acc sourceline 0x1e16
 	001a2ad4 mov ax,0x85
 	001a2ae0 mov bx,ax
 	001a2aec mov mar,0xbaef20
 	001a2af8 mov ax,mar
 	001a2b04 push op
 	001a2b0c mov op,ax
 	001a2b14 farpush bx
 	001a2b1c setfuncargs 0x1
 	001a2b24 mov ax,0x526f20
 	001a2b30 farcall ax
 	001a2b38 farsubsp 0x1
 	001a2b40 pop op
 	001a2b48 sourceline 0x1e17
 	001a2b50 push op
 	001a2b58 mov ax,0x2c3206
 	001a2b64 farpush ax
 	001a2b6c mov mar,0xbaef20
 	001a2b78 mov ax,mar
 	001a2b84 mov op,ax
 	001a2b8c setfuncargs 0x1
 	001a2b94 mov ax,0x6f6f20
 	001a2ba0 farcall ax
 	001a2ba8 farsubsp 0x1
 	001a2bb0 pop op
 	001a2bb8 sourceline 0x1e18
 	001a2bc0 push op
 	001a2bc8 mov ax,0x2c3244
 	001a2bd4 farpush ax
 	001a2bdc mov mar,0x3cef20
 	001a2be8 mov ax,mar
 	001a2bf4 mov op,ax
 	001a2bfc setfuncargs 0x1
 	001a2c04 mov ax,0x6f6f20
 	001a2c10 farcall ax
 	001a2c18 farsubsp 0x1
 	001a2c20 pop op
 	001a2c28 sourceline 0x1e19
 	001a2c30 push op
 	001a2c38 mov ax,0x2c325d
 	001a2c44 farpush ax
 	001a2c4c mov mar,0xbaef20
 	001a2c58 mov ax,mar
 	001a2c64 mov op,ax
 	001a2c6c setfuncargs 0x1
 	001a2c74 mov ax,0x6f6f20
 	001a2c80 farcall ax
 	001a2c88 farsubsp 0x1
 	001a2c90 pop op
 	001a2c98 sourceline 0x1e1a
 	001a2ca0 mov ax,0x0
 	001a2cac mov bx,ax
 	001a2cb8 mov mar,0x3cef20
 	001a2cc4 mov ax,mar
 	001a2cd0 push op
 	001a2cd8 mov op,ax
 	001a2ce0 farpush bx
 	001a2ce8 setfuncargs 0x1
 	001a2cf0 mov ax,0xcaef20
 	001a2cfc farcall ax
 	001a2d04 farsubsp 0x1
 	001a2d0c pop op
 	001a2d14 sourceline 0x1e1b
 	001a2d1c mov ax,0x2
 	001a2d28 farpush ax
 	001a2d30 setfuncargs 0x1
 	001a2d38 mov ax,0xbd6f20
 	001a2d44 farcall ax
 	001a2d4c farsubsp 0x1
 	001a2d54 sourceline 0x1e1d
 	001a2d5c push op
 	001a2d64 mov ax,0x130
 	001a2d70 farpush ax
 	001a2d78 mov ax,0x398
 	001a2d84 farpush ax
 	001a2d8c mov ax,0x7f
 	001a2d98 farpush ax
 	001a2da0 mov ax,0x2c
 	001a2dac farpush ax
 	001a2db4 mov mar,0xbaef20
 	001a2dc0 mov ax,mar
 	001a2dcc mov op,ax
 	001a2dd4 setfuncargs 0x4
 	001a2ddc mov ax,0xb2ef20
 	001a2de8 farcall ax
 	001a2df0 farsubsp 0x4
 	001a2df8 pop op
 	001a2e00 sourceline 0x1e1e
 	001a2e08 mov ax,0x1a
 	001a2e14 farpush ax
 	001a2e1c setfuncargs 0x1
 	001a2e24 mov ax,0x426f20
 	001a2e30 farcall ax
 	001a2e38 farsubsp 0x1
 	001a2e40 sourceline 0x1e20
 	001a2e48 mov ax,0x1
 	001a2e54 mov bx,ax
 	001a2e60 mov mar,0x3cef20
 	001a2e6c mov ax,mar
 	001a2e78 push op
 	001a2e80 mov op,ax
 	001a2e88 farpush bx
 	001a2e90 setfuncargs 0x1
 	001a2e98 mov ax,0x69ef20
 	001a2ea4 farcall ax
 	001a2eac farsubsp 0x1
 	001a2eb4 pop op
 	001a2ebc sourceline 0x1e21
 	001a2ec4 push op
 	001a2ecc mov ax,0x1
 	001a2ed8 farpush ax
 	001a2ee0 mov ax,0x32
 	001a2eec farpush ax
 	001a2ef4 mov mar,0xcfef20
 	001a2f00 mov ax,mar
 	001a2f0c mov op,ax
 	001a2f14 setfuncargs 0x2
 	001a2f1c mov ax,0x2fef20
 	001a2f28 farcall ax
 	001a2f30 farsubsp 0x2
 	001a2f38 pop op
 	001a2f40 sourceline 0x1e22
 	001a2f48 mov ax,0x1a
 	001a2f54 farpush ax
 	001a2f5c setfuncargs 0x1
 	001a2f64 mov ax,0x426f20
 	001a2f70 farcall ax
 	001a2f78 farsubsp 0x1
 	001a2f80 sourceline 0x1e23
 	001a2f88 push op
 	001a2f90 mov ax,0x2c3272
 	001a2f9c farpush ax
 	001a2fa4 mov ax,0x138
 	001a2fb0 farpush ax
 	001a2fb8 mov ax,0x92
 	001a2fc4 farpush ax
 	001a2fcc mov ax,0x0
 	001a2fd8 farpush ax
 	001a2fe0 mov mar,0x3cef20
 	001a2fec mov ax,mar
 	001a2ff8 mov op,ax
 	001a3000 setfuncargs 0x4
 	001a3008 mov ax,0x6aef20
 	001a3014 farcall ax
 	001a301c farsubsp 0x4
 	001a3024 pop op
 	001a302c sourceline 0x1e24
 	001a3034 push op
 	001a303c mov ax,0x10
 	001a3048 farpush ax
 	001a3050 mov mar,0x3cef20
 	001a305c mov ax,mar
 	001a3068 mov op,ax
 	001a3070 setfuncargs 0x1
 	001a3078 mov ax,0x51ef20
 	001a3084 farcall ax
 	001a308c farsubsp 0x1
 	001a3094 pop op
 	001a309c sourceline 0x1e25
 	001a30a4 push op
 	001a30ac mov ax,0x0
 	001a30b8 farpush ax
 	001a30c0 mov ax,0x32
 	001a30cc farpush ax
 	001a30d4 mov mar,0x79ef20
 	001a30e0 mov ax,mar
 	001a30ec mov op,ax
 	001a30f4 setfuncargs 0x2
 	001a30fc mov ax,0x2fef20
 	001a3108 farcall ax
 	001a3110 farsubsp 0x2
 	001a3118 pop op
 	001a3120 sourceline 0x1e26
 	001a3128 push op
 	001a3130 mov ax,0x426
 	001a313c farpush ax
 	001a3144 mov ax,0x398
 	001a3150 farpush ax
 	001a3158 mov ax,0x0
 	001a3164 farpush ax
 	001a316c mov ax,0x3
 	001a3178 farpush ax
 	001a3180 mov ax,0x0
 	001a318c farpush ax
 	001a3194 mov mar,0x3cef20
 	001a31a0 mov ax,mar
 	001a31ac mov op,ax
 	001a31b4 setfuncargs 0x5
 	001a31bc mov ax,0x536f20
 	001a31c8 farcall ax
 	001a31d0 farsubsp 0x5
 	001a31d8 pop op
 	001a31e0 sourceline 0x1e27
 	001a31e8 mov mar,0x3cef20
 	001a31f4 mov ax,mar
 	001a3200 push op
 	001a3208 mov op,ax
 	001a3210 setfuncargs 0x0
 	001a3218 mov ax,0x78ef20
 	001a3224 farcall ax
 	001a322c pop op
 	001a3234 mov mar,sp
 	001a3240 memwrite4 ax
 	001a3248 add sp,0x4
 	001a3254 stackptr 0x4
 	001a325c memread4 ax
 	001a3264 push ax
 	001a326c mov ax,0x7
 	001a3278 pop bx
 	001a3280 sub bx,ax
 	001a328c mov ax,bx
 	001a3298 mov bx,ax
 	001a32a4 mov mar,0x3cef20
 	001a32b0 mov ax,mar
 	001a32bc push op
 	001a32c4 mov op,ax
 	001a32cc farpush bx
 	001a32d4 setfuncargs 0x1
 	001a32dc mov ax,0x526f20
 	001a32e8 farcall ax
 	001a32f0 farsubsp 0x1
 	001a32f8 pop op
 	001a3300 sourceline 0x1e28
 	001a3308 mov ax,0x38
 	001a3314 farpush ax
 	001a331c setfuncargs 0x1
 	001a3324 mov ax,0x426f20
 	001a3330 farcall ax
 	001a3338 farsubsp 0x1
 	001a3340 sourceline 0x1e29
 	001a3348 push op
 	001a3350 mov mar,0xcfef20
 	001a335c mov ax,mar
 	001a3368 mov op,ax
 	001a3370 setfuncargs 0x0
 	001a3378 mov ax,0x306f20
 	001a3384 farcall ax
 	001a338c pop op
 	001a3394 sourceline 0x1e2a
 	001a339c push op
 	001a33a4 mov ax,0x0
 	001a33b0 farpush ax
 	001a33b8 mov ax,0x32
 	001a33c4 farpush ax
 	001a33cc mov mar,0xd06f20
 	001a33d8 mov ax,mar
 	001a33e4 mov op,ax
 	001a33ec setfuncargs 0x2
 	001a33f4 mov ax,0x2fef20
 	001a3400 farcall ax
 	001a3408 farsubsp 0x2
 	001a3410 pop op
 	001a3418 sourceline 0x1e2b
 	001a3420 mov ax,0x3
 	001a342c mov bx,ax
 	001a3438 mov mar,0x3cef20
 	001a3444 mov ax,mar
 	001a3450 push op
 	001a3458 mov op,ax
 	001a3460 farpush bx
 	001a3468 setfuncargs 0x1
 	001a3470 mov ax,0x69ef20
 	001a347c farcall ax
 	001a3484 farsubsp 0x1
 	001a348c pop op
 	001a3494 sourceline 0x1e2c
 	001a349c mov ax,0x17
 	001a34a8 mov bx,ax
 	001a34b4 mov mar,0x506f20
 	001a34c0 mov ax,mar
 	001a34cc push op
 	001a34d4 mov op,ax
 	001a34dc farpush bx
 	001a34e4 setfuncargs 0x1
 	001a34ec mov ax,0x69ef20
 	001a34f8 farcall ax
 	001a3500 farsubsp 0x1
 	001a3508 pop op
 	001a3510 sourceline 0x1e2d
 	001a3518 push op
 	001a3520 mov ax,0x426
 	001a352c farpush ax
 	001a3534 mov ax,0x397
 	001a3540 farpush ax
 	001a3548 mov ax,0x0
 	001a3554 farpush ax
 	001a355c mov ax,0x3
 	001a3568 farpush ax
 	001a3570 mov ax,0x1
 	001a357c farpush ax
 	001a3584 mov mar,0x3cef20
 	001a3590 mov ax,mar
 	001a359c mov op,ax
 	001a35a4 setfuncargs 0x5
 	001a35ac mov ax,0x536f20
 	001a35b8 farcall ax
 	001a35c0 farsubsp 0x5
 	001a35c8 pop op
 	001a35d0 sourceline 0x1e2e
 	001a35d8 push op
 	001a35e0 mov ax,0x7cfe
 	001a35ec farpush ax
 	001a35f4 mov ax,0x7cfe
 	001a3600 farpush ax
 	001a3608 mov ax,0x7cfe
 	001a3614 farpush ax
 	001a361c mov mar,0x42ef20
 	001a3628 push mar
 	001a3630 pop mar
 	001a3638 memread.ptr ax
 	001a3640 push ax
 	001a3648 pop mar
 	001a3650 mov ax,mar
 	001a365c push op
 	001a3664 mov op,ax
 	001a366c setfuncargs 0x0
 	001a3674 mov ax,0x3d6f20
 	001a3680 farcall ax
 	001a3688 pop op
 	001a3690 farpush ax
 	001a3698 mov mar,0x506f20
 	001a36a4 mov ax,mar
 	001a36b0 mov op,ax
 	001a36b8 setfuncargs 0x4
 	001a36c0 mov ax,0xc16f20
 	001a36cc farcall ax
 	001a36d4 farsubsp 0x4
 	001a36dc pop op
 	001a36e4 sourceline 0x1e2f
 	001a36ec mov ax,0x64
 	001a36f8 mov bx,ax
 	001a3704 mov mar,0x506f20
 	001a3710 mov ax,mar
 	001a371c push op
 	001a3724 mov op,ax
 	001a372c farpush bx
 	001a3734 setfuncargs 0x1
 	001a373c mov ax,0xd0ef20
 	001a3748 farcall ax
 	001a3750 farsubsp 0x1
 	001a3758 pop op
 	001a3760 sourceline 0x1e30
 	001a3768 mov ax,0x6
 	001a3774 farpush ax
 	001a377c setfuncargs 0x1
 	001a3784 mov ax,0x426f20
 	001a3790 farcall ax
 	001a3798 farsubsp 0x1
 	001a37a0 sourceline 0x1e31
 	001a37a8 push op
 	001a37b0 mov ax,0x2c328e
 	001a37bc farpush ax
 	001a37c4 mov mar,0x3cef20
 	001a37d0 mov ax,mar
 	001a37dc mov op,ax
 	001a37e4 setfuncargs 0x1
 	001a37ec mov ax,0x6f6f20
 	001a37f8 farcall ax
 	001a3800 farsubsp 0x1
 	001a3808 pop op
 	001a3810 sourceline 0x1e32
 	001a3818 push op
 	001a3820 mov ax,0x2c329e
 	001a382c farpush ax
 	001a3834 mov mar,0x506f20
 	001a3840 mov ax,mar
 	001a384c mov op,ax
 	001a3854 setfuncargs 0x1
 	001a385c mov ax,0x6f6f20
 	001a3868 farcall ax
 	001a3870 farsubsp 0x1
 	001a3878 pop op
 	001a3880 sourceline 0x1e33
 	001a3888 push op
 	001a3890 mov ax,0x2c32d2
 	001a389c farpush ax
 	001a38a4 mov mar,0x3cef20
 	001a38b0 mov ax,mar
 	001a38bc mov op,ax
 	001a38c4 setfuncargs 0x1
 	001a38cc mov ax,0x6f6f20
 	001a38d8 farcall ax
 	001a38e0 farsubsp 0x1
 	001a38e8 pop op
 	001a38f0 sourceline 0x1e34
 	001a38f8 push op
 	001a3900 mov ax,0x2c32f3
 	001a390c farpush ax
 	001a3914 mov mar,0x506f20
 	001a3920 mov ax,mar
 	001a392c mov op,ax
 	001a3934 setfuncargs 0x1
 	001a393c mov ax,0x6f6f20
 	001a3948 farcall ax
 	001a3950 farsubsp 0x1
 	001a3958 pop op
 	001a3960 sourceline 0x1e35
 	001a3968 push op
 	001a3970 mov ax,0x2c3349
 	001a397c farpush ax
 	001a3984 mov mar,0x3cef20
 	001a3990 mov ax,mar
 	001a399c mov op,ax
 	001a39a4 setfuncargs 0x1
 	001a39ac mov ax,0x6f6f20
 	001a39b8 farcall ax
 	001a39c0 farsubsp 0x1
 	001a39c8 pop op
 	001a39d0 sourceline 0x1e36
 	001a39d8 push op
 	001a39e0 mov ax,0x2c3363
 	001a39ec farpush ax
 	001a39f4 mov mar,0x506f20
 	001a3a00 mov ax,mar
 	001a3a0c mov op,ax
 	001a3a14 setfuncargs 0x1
 	001a3a1c mov ax,0x6f6f20
 	001a3a28 farcall ax
 	001a3a30 farsubsp 0x1
 	001a3a38 pop op
 	001a3a40 sourceline 0x1e37
 	001a3a48 push op
 	001a3a50 mov ax,0x2c337f
 	001a3a5c farpush ax
 	001a3a64 mov mar,0x3cef20
 	001a3a70 mov ax,mar
 	001a3a7c mov op,ax
 	001a3a84 setfuncargs 0x1
 	001a3a8c mov ax,0x6f6f20
 	001a3a98 farcall ax
 	001a3aa0 farsubsp 0x1
 	001a3aa8 pop op
 	001a3ab0 sourceline 0x1e38
 	001a3ab8 push op
 	001a3ac0 mov ax,0x2c33ae
 	001a3acc farpush ax
 	001a3ad4 mov mar,0x506f20
 	001a3ae0 mov ax,mar
 	001a3aec mov op,ax
 	001a3af4 setfuncargs 0x1
 	001a3afc mov ax,0x6f6f20
 	001a3b08 farcall ax
 	001a3b10 farsubsp 0x1
 	001a3b18 pop op
 	001a3b20 sourceline 0x1e39
 	001a3b28 push op
 	001a3b30 mov ax,0x2c33ee
 	001a3b3c farpush ax
 	001a3b44 mov mar,0x3cef20
 	001a3b50 mov ax,mar
 	001a3b5c mov op,ax
 	001a3b64 setfuncargs 0x1
 	001a3b6c mov ax,0x6f6f20
 	001a3b78 farcall ax
 	001a3b80 farsubsp 0x1
 	001a3b88 pop op
 	001a3b90 sourceline 0x1e3a
 	001a3b98 push op
 	001a3ba0 mov ax,0x2c3432
 	001a3bac farpush ax
 	001a3bb4 mov mar,0x506f20
 	001a3bc0 mov ax,mar
 	001a3bcc mov op,ax
 	001a3bd4 setfuncargs 0x1
 	001a3bdc mov ax,0x6f6f20
 	001a3be8 farcall ax
 	001a3bf0 farsubsp 0x1
 	001a3bf8 pop op
 	001a3c00 sourceline 0x1e3b
 	001a3c08 mov ax,0xd
 	001a3c14 farpush ax
 	001a3c1c setfuncargs 0x1
 	001a3c24 mov ax,0x426f20
 	001a3c30 farcall ax
 	001a3c38 farsubsp 0x1
 	001a3c40 sourceline 0x1e3c
 	001a3c48 push op
 	001a3c50 mov ax,0x0
 	001a3c5c farpush ax
 	001a3c64 mov ax,0x32
 	001a3c70 farpush ax
 	001a3c78 mov mar,0xd16f20
 	001a3c84 mov ax,mar
 	001a3c90 mov op,ax
 	001a3c98 setfuncargs 0x2
 	001a3ca0 mov ax,0x2fef20
 	001a3cac farcall ax
 	001a3cb4 farsubsp 0x2
 	001a3cbc pop op
 	001a3cc4 sourceline 0x1e3d
 	001a3ccc push op
 	001a3cd4 mov ax,0x426
 	001a3ce0 farpush ax
 	001a3ce8 mov ax,0x397
 	001a3cf4 farpush ax
 	001a3cfc mov ax,0x0
 	001a3d08 farpush ax
 	001a3d10 mov ax,0x3
 	001a3d1c farpush ax
 	001a3d24 mov ax,0x2
 	001a3d30 farpush ax
 	001a3d38 mov mar,0x3cef20
 	001a3d44 mov ax,mar
 	001a3d50 mov op,ax
 	001a3d58 setfuncargs 0x5
 	001a3d60 mov ax,0x536f20
 	001a3d6c farcall ax
 	001a3d74 farsubsp 0x5
 	001a3d7c pop op
 	001a3d84 sourceline 0x1e3e
 	001a3d8c push op
 	001a3d94 mov ax,0x2
 	001a3da0 farpush ax
 	001a3da8 mov mar,0x3cef20
 	001a3db4 mov ax,mar
 	001a3dc0 mov op,ax
 	001a3dc8 setfuncargs 0x1
 	001a3dd0 mov ax,0x51ef20
 	001a3ddc farcall ax
 	001a3de4 farsubsp 0x1
 	001a3dec pop op
 	001a3df4 sourceline 0x1e3f
 	001a3dfc mov ax,0x0
 	001a3e08 mov bx,ax
 	001a3e14 mov mar,0x3cef20
 	001a3e20 mov ax,mar
 	001a3e2c push op
 	001a3e34 mov op,ax
 	001a3e3c farpush bx
 	001a3e44 setfuncargs 0x1
 	001a3e4c mov ax,0x766f20
 	001a3e58 farcall ax
 	001a3e60 farsubsp 0x1
 	001a3e68 pop op
 	001a3e70 sourceline 0x1e40
 	001a3e78 mov mar,0x3cef20
 	001a3e84 mov ax,mar
 	001a3e90 push op
 	001a3e98 mov op,ax
 	001a3ea0 setfuncargs 0x0
 	001a3ea8 mov ax,0x78ef20
 	001a3eb4 farcall ax
 	001a3ebc pop op
 	001a3ec4 push ax
 	001a3ecc mov ax,0x7
 	001a3ed8 pop bx
 	001a3ee0 add bx,ax
 	001a3eec mov ax,bx
 	001a3ef8 mov bx,ax
 	001a3f04 mov mar,0x3cef20
 	001a3f10 mov ax,mar
 	001a3f1c push op
 	001a3f24 mov op,ax
 	001a3f2c farpush bx
 	001a3f34 setfuncargs 0x1
 	001a3f3c mov ax,0x526f20
 	001a3f48 farcall ax
 	001a3f50 farsubsp 0x1
 	001a3f58 pop op
 	001a3f60 sourceline 0x1e41
 	001a3f68 mov ax,0x1
 	001a3f74 mov bx,ax
 	001a3f80 mov mar,0x3cef20
 	001a3f8c mov ax,mar
 	001a3f98 push op
 	001a3fa0 mov op,ax
 	001a3fa8 farpush bx
 	001a3fb0 setfuncargs 0x1
 	001a3fb8 mov ax,0x69ef20
 	001a3fc4 farcall ax
 	001a3fcc farsubsp 0x1
 	001a3fd4 pop op
 	001a3fdc sourceline 0x1e42
 	001a3fe4 push op
 	001a3fec mov ax,0x2c343f
 	001a3ff8 farpush ax
 	001a4000 mov ax,0x138
 	001a400c farpush ax
 	001a4014 mov ax,0x92
 	001a4020 farpush ax
 	001a4028 mov ax,0x0
 	001a4034 farpush ax
 	001a403c mov mar,0x3cef20
 	001a4048 mov ax,mar
 	001a4054 mov op,ax
 	001a405c setfuncargs 0x4
 	001a4064 mov ax,0x6aef20
 	001a4070 farcall ax
 	001a4078 farsubsp 0x4
 	001a4080 pop op
 	001a4088 sourceline 0x1e43
 	001a4090 mov ax,0x1
 	001a409c mov mar,0xd1ef20
 	001a40a8 memwrite4 ax
 	001a40b0 sourceline 0x1e44
 	001a40b8 push op
 	001a40c0 mov ax,0x0
 	001a40cc farpush ax
 	001a40d4 mov ax,0x7e
 	001a40e0 farpush ax
 	001a40e8 mov ax,0x5b
 	001a40f4 farpush ax
 	001a40fc mov ax,0x5
 	001a4108 farpush ax
 	001a4110 mov mar,0x506f20
 	001a411c mov ax,mar
 	001a4128 mov op,ax
 	001a4130 setfuncargs 0x4
 	001a4138 mov ax,0xc16f20
 	001a4144 farcall ax
 	001a414c farsubsp 0x4
 	001a4154 pop op
 	001a415c sourceline 0x1e45
 	001a4164 mov ax,0x0
 	001a4170 mov mar,0x5eef20
 	001a417c memwrite4 ax
 	001a4184 sourceline 0x1e47
 	001a418c mov ax,0x1
 	001a4198 mov mar,0xbbef20
 	001a41a4 memwrite4 ax
 	001a41ac sourceline 0x1e48
 	001a41b4 sub sp,0x4
		001a41c0: FALL_THROUGH

	[001a41c0]
		001a1efc: UNCONDITIONAL_JUMP
		001a1f50: FALL_THROUGH
 	001a41c0 sourceline 0x1e49
 	001a41c8 jmp 0x001a4390
		001a4390: UNCONDITIONAL_JUMP

	[001a41d0]
		001a1e9c: CONDITIONAL_JUMP
 	001a41d0 sourceline 0x1e4c
 	001a41d8 push op
 	001a41e0 mov ax,0x397
 	001a41ec farpush ax
 	001a41f4 mov ax,0x8c
 	001a4200 farpush ax
 	001a4208 mov ax,0xdf
 	001a4214 farpush ax
 	001a421c mov mar,0x3cef20
 	001a4228 mov ax,mar
 	001a4234 mov op,ax
 	001a423c setfuncargs 0x3
 	001a4244 mov ax,0x726f20
 	001a4250 farcall ax
 	001a4258 farsubsp 0x3
 	001a4260 pop op
 	001a4268 sourceline 0x1e4d
 	001a4270 mov ax,0x1
 	001a427c mov bx,ax
 	001a4288 mov mar,0x3cef20
 	001a4294 mov ax,mar
 	001a42a0 push op
 	001a42a8 mov op,ax
 	001a42b0 farpush bx
 	001a42b8 setfuncargs 0x1
 	001a42c0 mov ax,0x69ef20
 	001a42cc farcall ax
 	001a42d4 farsubsp 0x1
 	001a42dc pop op
 	001a42e4 sourceline 0x1e4e
 	001a42ec push op
 	001a42f4 mov ax,0x2c3538
 	001a4300 farpush ax
 	001a4308 mov ax,0x138
 	001a4314 farpush ax
 	001a431c mov ax,0x92
 	001a4328 farpush ax
 	001a4330 mov ax,0x0
 	001a433c farpush ax
 	001a4344 mov mar,0x3cef20
 	001a4350 mov ax,mar
 	001a435c mov op,ax
 	001a4364 setfuncargs 0x4
 	001a436c mov ax,0x6aef20
 	001a4378 farcall ax
 	001a4380 farsubsp 0x4
 	001a4388 pop op
		001a4390: FALL_THROUGH

	[001a4390]
		001a1e8c: UNCONDITIONAL_JUMP
		001a41c0: UNCONDITIONAL_JUMP
		001a41d0: FALL_THROUGH
 	001a4390 sourceline 0x1e51
 	001a4398 jmp 0x001a93a0
		001a93a0: UNCONDITIONAL_JUMP

	[001a43a0]
		001a1380: CONDITIONAL_JUMP
 	001a43a0 sourceline 0x1e53
 	001a43a8 mov mar,0x3cef20
 	001a43b4 mov ax,mar
 	001a43c0 push op
 	001a43c8 mov op,ax
 	001a43d0 setfuncargs 0x0
 	001a43d8 mov ax,0x89ef20
 	001a43e4 farcall ax
 	001a43ec pop op
 	001a43f4 push ax
 	001a43fc mov mar,0x8cef20
 	001a4408 mov ax,mar
 	001a4414 pop bx
 	001a441c cmpeq bx,ax
 	001a4428 mov ax,bx
 	001a4434 jnz 0x001a44f0
		001a44f0: CONDITIONAL_JUMP
		001a443c: FALL_THROUGH

	[001a443c]
		001a43a0: FALL_THROUGH
 	001a443c push ax
 	001a4444 mov mar,0x3cef20
 	001a4450 mov ax,mar
 	001a445c push op
 	001a4464 mov op,ax
 	001a446c setfuncargs 0x0
 	001a4474 mov ax,0x89ef20
 	001a4480 farcall ax
 	001a4488 pop op
 	001a4490 push ax
 	001a4498 mov mar,0x8b6f20
 	001a44a4 mov ax,mar
 	001a44b0 pop bx
 	001a44b8 cmpeq bx,ax
 	001a44c4 mov ax,bx
 	001a44d0 pop bx
 	001a44d8 lor bx,ax
 	001a44e4 mov ax,bx
		001a44f0: FALL_THROUGH

	[001a44f0]
		001a43a0: CONDITIONAL_JUMP
		001a443c: FALL_THROUGH
 	001a44f0 jnz 0x001a45ac
		001a45ac: CONDITIONAL_JUMP
		001a44f8: FALL_THROUGH

	[001a44f8]
		001a44f0: FALL_THROUGH
 	001a44f8 push ax
 	001a4500 mov mar,0x3cef20
 	001a450c mov ax,mar
 	001a4518 push op
 	001a4520 mov op,ax
 	001a4528 setfuncargs 0x0
 	001a4530 mov ax,0x89ef20
 	001a453c farcall ax
 	001a4544 pop op
 	001a454c push ax
 	001a4554 mov mar,0x8bef20
 	001a4560 mov ax,mar
 	001a456c pop bx
 	001a4574 cmpeq bx,ax
 	001a4580 mov ax,bx
 	001a458c pop bx
 	001a4594 lor bx,ax
 	001a45a0 mov ax,bx
		001a45ac: FALL_THROUGH

	[001a45ac]
		001a44f0: CONDITIONAL_JUMP
		001a44f8: FALL_THROUGH
 	001a45ac jnz 0x001a4668
		001a4668: CONDITIONAL_JUMP
		001a45b4: FALL_THROUGH

	[001a45b4]
		001a45ac: FALL_THROUGH
 	001a45b4 push ax
 	001a45bc mov mar,0x3cef20
 	001a45c8 mov ax,mar
 	001a45d4 push op
 	001a45dc mov op,ax
 	001a45e4 setfuncargs 0x0
 	001a45ec mov ax,0x89ef20
 	001a45f8 farcall ax
 	001a4600 pop op
 	001a4608 push ax
 	001a4610 mov mar,0x7def20
 	001a461c mov ax,mar
 	001a4628 pop bx
 	001a4630 cmpeq bx,ax
 	001a463c mov ax,bx
 	001a4648 pop bx
 	001a4650 lor bx,ax
 	001a465c mov ax,bx
		001a4668: FALL_THROUGH

	[001a4668]
		001a45ac: CONDITIONAL_JUMP
		001a45b4: FALL_THROUGH
 	001a4668 jnz 0x001a4724
		001a4724: CONDITIONAL_JUMP
		001a4670: FALL_THROUGH

	[001a4670]
		001a4668: FALL_THROUGH
 	001a4670 push ax
 	001a4678 mov mar,0x3cef20
 	001a4684 mov ax,mar
 	001a4690 push op
 	001a4698 mov op,ax
 	001a46a0 setfuncargs 0x0
 	001a46a8 mov ax,0x89ef20
 	001a46b4 farcall ax
 	001a46bc pop op
 	001a46c4 push ax
 	001a46cc mov mar,0x8def20
 	001a46d8 mov ax,mar
 	001a46e4 pop bx
 	001a46ec cmpeq bx,ax
 	001a46f8 mov ax,bx
 	001a4704 pop bx
 	001a470c lor bx,ax
 	001a4718 mov ax,bx
		001a4724: FALL_THROUGH

	[001a4724]
		001a4668: CONDITIONAL_JUMP
		001a4670: FALL_THROUGH
 	001a4724 jnz 0x001a47e0
		001a47e0: CONDITIONAL_JUMP
		001a472c: FALL_THROUGH

	[001a472c]
		001a4724: FALL_THROUGH
 	001a472c push ax
 	001a4734 mov mar,0x3cef20
 	001a4740 mov ax,mar
 	001a474c push op
 	001a4754 mov op,ax
 	001a475c setfuncargs 0x0
 	001a4764 mov ax,0x89ef20
 	001a4770 farcall ax
 	001a4778 pop op
 	001a4780 push ax
 	001a4788 mov mar,0x8aef20
 	001a4794 mov ax,mar
 	001a47a0 pop bx
 	001a47a8 cmpeq bx,ax
 	001a47b4 mov ax,bx
 	001a47c0 pop bx
 	001a47c8 lor bx,ax
 	001a47d4 mov ax,bx
		001a47e0: FALL_THROUGH

	[001a47e0]
		001a4724: CONDITIONAL_JUMP
		001a472c: FALL_THROUGH
 	001a47e0 jnz 0x001a489c
		001a489c: CONDITIONAL_JUMP
		001a47e8: FALL_THROUGH

	[001a47e8]
		001a47e0: FALL_THROUGH
 	001a47e8 push ax
 	001a47f0 mov mar,0x3cef20
 	001a47fc mov ax,mar
 	001a4808 push op
 	001a4810 mov op,ax
 	001a4818 setfuncargs 0x0
 	001a4820 mov ax,0x89ef20
 	001a482c farcall ax
 	001a4834 pop op
 	001a483c push ax
 	001a4844 mov mar,0x8eef20
 	001a4850 mov ax,mar
 	001a485c pop bx
 	001a4864 cmpeq bx,ax
 	001a4870 mov ax,bx
 	001a487c pop bx
 	001a4884 lor bx,ax
 	001a4890 mov ax,bx
		001a489c: FALL_THROUGH

	[001a489c]
		001a47e0: CONDITIONAL_JUMP
		001a47e8: FALL_THROUGH
 	001a489c jnz 0x001a4958
		001a4958: CONDITIONAL_JUMP
		001a48a4: FALL_THROUGH

	[001a48a4]
		001a489c: FALL_THROUGH
 	001a48a4 push ax
 	001a48ac mov mar,0x3cef20
 	001a48b8 mov ax,mar
 	001a48c4 push op
 	001a48cc mov op,ax
 	001a48d4 setfuncargs 0x0
 	001a48dc mov ax,0x89ef20
 	001a48e8 farcall ax
 	001a48f0 pop op
 	001a48f8 push ax
 	001a4900 mov mar,0x8f6f20
 	001a490c mov ax,mar
 	001a4918 pop bx
 	001a4920 cmpeq bx,ax
 	001a492c mov ax,bx
 	001a4938 pop bx
 	001a4940 lor bx,ax
 	001a494c mov ax,bx
		001a4958: FALL_THROUGH

	[001a4958]
		001a489c: CONDITIONAL_JUMP
		001a48a4: FALL_THROUGH
 	001a4958 jnz 0x001a4a14
		001a4a14: CONDITIONAL_JUMP
		001a4960: FALL_THROUGH

	[001a4960]
		001a4958: FALL_THROUGH
 	001a4960 push ax
 	001a4968 mov mar,0x3cef20
 	001a4974 mov ax,mar
 	001a4980 push op
 	001a4988 mov op,ax
 	001a4990 setfuncargs 0x0
 	001a4998 mov ax,0x89ef20
 	001a49a4 farcall ax
 	001a49ac pop op
 	001a49b4 push ax
 	001a49bc mov mar,0x8fef20
 	001a49c8 mov ax,mar
 	001a49d4 pop bx
 	001a49dc cmpeq bx,ax
 	001a49e8 mov ax,bx
 	001a49f4 pop bx
 	001a49fc lor bx,ax
 	001a4a08 mov ax,bx
		001a4a14: FALL_THROUGH

	[001a4a14]
		001a4958: CONDITIONAL_JUMP
		001a4960: FALL_THROUGH
 	001a4a14 jnz 0x001a4ad0
		001a4ad0: CONDITIONAL_JUMP
		001a4a1c: FALL_THROUGH

	[001a4a1c]
		001a4a14: FALL_THROUGH
 	001a4a1c push ax
 	001a4a24 mov mar,0x3cef20
 	001a4a30 mov ax,mar
 	001a4a3c push op
 	001a4a44 mov op,ax
 	001a4a4c setfuncargs 0x0
 	001a4a54 mov ax,0x89ef20
 	001a4a60 farcall ax
 	001a4a68 pop op
 	001a4a70 push ax
 	001a4a78 mov mar,0x976f20
 	001a4a84 mov ax,mar
 	001a4a90 pop bx
 	001a4a98 cmpeq bx,ax
 	001a4aa4 mov ax,bx
 	001a4ab0 pop bx
 	001a4ab8 lor bx,ax
 	001a4ac4 mov ax,bx
		001a4ad0: FALL_THROUGH

	[001a4ad0]
		001a4a14: CONDITIONAL_JUMP
		001a4a1c: FALL_THROUGH
 	001a4ad0 jnz 0x001a4b8c
		001a4b8c: CONDITIONAL_JUMP
		001a4ad8: FALL_THROUGH

	[001a4ad8]
		001a4ad0: FALL_THROUGH
 	001a4ad8 push ax
 	001a4ae0 mov mar,0x3cef20
 	001a4aec mov ax,mar
 	001a4af8 push op
 	001a4b00 mov op,ax
 	001a4b08 setfuncargs 0x0
 	001a4b10 mov ax,0x89ef20
 	001a4b1c farcall ax
 	001a4b24 pop op
 	001a4b2c push ax
 	001a4b34 mov mar,0x846f20
 	001a4b40 mov ax,mar
 	001a4b4c pop bx
 	001a4b54 cmpeq bx,ax
 	001a4b60 mov ax,bx
 	001a4b6c pop bx
 	001a4b74 lor bx,ax
 	001a4b80 mov ax,bx
		001a4b8c: FALL_THROUGH

	[001a4b8c]
		001a4ad0: CONDITIONAL_JUMP
		001a4ad8: FALL_THROUGH
 	001a4b8c jnz 0x001a4c48
		001a4c48: CONDITIONAL_JUMP
		001a4b94: FALL_THROUGH

	[001a4b94]
		001a4b8c: FALL_THROUGH
 	001a4b94 push ax
 	001a4b9c mov mar,0x3cef20
 	001a4ba8 mov ax,mar
 	001a4bb4 push op
 	001a4bbc mov op,ax
 	001a4bc4 setfuncargs 0x0
 	001a4bcc mov ax,0x89ef20
 	001a4bd8 farcall ax
 	001a4be0 pop op
 	001a4be8 push ax
 	001a4bf0 mov mar,0x916f20
 	001a4bfc mov ax,mar
 	001a4c08 pop bx
 	001a4c10 cmpeq bx,ax
 	001a4c1c mov ax,bx
 	001a4c28 pop bx
 	001a4c30 lor bx,ax
 	001a4c3c mov ax,bx
		001a4c48: FALL_THROUGH

	[001a4c48]
		001a4b8c: CONDITIONAL_JUMP
		001a4b94: FALL_THROUGH
 	001a4c48 jnz 0x001a4d04
		001a4d04: CONDITIONAL_JUMP
		001a4c50: FALL_THROUGH

	[001a4c50]
		001a4c48: FALL_THROUGH
 	001a4c50 push ax
 	001a4c58 mov mar,0x3cef20
 	001a4c64 mov ax,mar
 	001a4c70 push op
 	001a4c78 mov op,ax
 	001a4c80 setfuncargs 0x0
 	001a4c88 mov ax,0x89ef20
 	001a4c94 farcall ax
 	001a4c9c pop op
 	001a4ca4 push ax
 	001a4cac mov mar,0x90ef20
 	001a4cb8 mov ax,mar
 	001a4cc4 pop bx
 	001a4ccc cmpeq bx,ax
 	001a4cd8 mov ax,bx
 	001a4ce4 pop bx
 	001a4cec lor bx,ax
 	001a4cf8 mov ax,bx
		001a4d04: FALL_THROUGH

	[001a4d04]
		001a4c48: CONDITIONAL_JUMP
		001a4c50: FALL_THROUGH
 	001a4d04 jz 0x001a60f0
		001a60f0: CONDITIONAL_JUMP
		001a4d0c: FALL_THROUGH

	[001a4d0c]
		001a4d04: FALL_THROUGH
 	001a4d0c sourceline 0x1e58
 	001a4d14 mov mar,0xcf6f20
 	001a4d20 memread4 ax
 	001a4d28 lnot ax
 	001a4d30 jz 0x001a5734
		001a5734: CONDITIONAL_JUMP
		001a4d38: FALL_THROUGH

	[001a4d38]
		001a4d0c: FALL_THROUGH
 	001a4d38 sourceline 0x1e5a
 	001a4d40 setfuncargs 0x0
 	001a4d48 mov ax,0x6def20
 	001a4d54 farcall ax
 	001a4d5c lnot ax
 	001a4d64 jz 0x001a4dc0
		001a4dc0: CONDITIONAL_JUMP
		001a4d6c: FALL_THROUGH

	[001a4d6c]
		001a4d38: FALL_THROUGH
 	001a4d6c mov ax,0x89
 	001a4d78 farpush ax
 	001a4d80 mov ax,0xbc
 	001a4d8c farpush ax
 	001a4d94 setfuncargs 0x2
 	001a4d9c mov ax,0x6e6f20
 	001a4da8 farcall ax
 	001a4db0 farsubsp 0x2
 	001a4db8 jmp 0x001a5724
		001a5724: UNCONDITIONAL_JUMP

	[001a4dc0]
		001a4d38: CONDITIONAL_JUMP
 	001a4dc0 sourceline 0x1e5d
 	001a4dc8 push op
 	001a4dd0 mov ax,0x397
 	001a4ddc farpush ax
 	001a4de4 mov ax,0x2
 	001a4df0 farpush ax
 	001a4df8 mov mar,0x3cef20
 	001a4e04 mov ax,mar
 	001a4e10 mov op,ax
 	001a4e18 setfuncargs 0x2
 	001a4e20 mov ax,0x6eef20
 	001a4e2c farcall ax
 	001a4e34 farsubsp 0x2
 	001a4e3c pop op
 	001a4e44 sourceline 0x1e5e
 	001a4e4c mov ax,0x3
 	001a4e58 mov bx,ax
 	001a4e64 mov mar,0x3cef20
 	001a4e70 mov ax,mar
 	001a4e7c push op
 	001a4e84 mov op,ax
 	001a4e8c farpush bx
 	001a4e94 setfuncargs 0x1
 	001a4e9c mov ax,0x69ef20
 	001a4ea8 farcall ax
 	001a4eb0 farsubsp 0x1
 	001a4eb8 pop op
 	001a4ec0 sourceline 0x1e5f
 	001a4ec8 mov ax,0x0
 	001a4ed4 mov bx,ax
 	001a4ee0 mov mar,0x3cef20
 	001a4eec mov ax,mar
 	001a4ef8 push op
 	001a4f00 mov op,ax
 	001a4f08 farpush bx
 	001a4f10 setfuncargs 0x1
 	001a4f18 mov ax,0x436f20
 	001a4f24 farcall ax
 	001a4f2c farsubsp 0x1
 	001a4f34 pop op
 	001a4f3c sourceline 0x1e60
 	001a4f44 mov mar,0xba6f20
 	001a4f50 memread4 ax
 	001a4f58 lnot ax
 	001a4f60 jz 0x001a5178
		001a5178: CONDITIONAL_JUMP
		001a4f68: FALL_THROUGH

	[001a4f68]
		001a4dc0: FALL_THROUGH
 	001a4f68 sourceline 0x1e62
 	001a4f70 push op
 	001a4f78 mov ax,0x2c3881
 	001a4f84 farpush ax
 	001a4f8c mov mar,0x3cef20
 	001a4f98 mov ax,mar
 	001a4fa4 mov op,ax
 	001a4fac setfuncargs 0x1
 	001a4fb4 mov ax,0x6f6f20
 	001a4fc0 farcall ax
 	001a4fc8 farsubsp 0x1
 	001a4fd0 pop op
 	001a4fd8 sourceline 0x1e63
 	001a4fe0 push op
 	001a4fe8 mov ax,0x2c38a0
 	001a4ff4 farpush ax
 	001a4ffc mov mar,0xbaef20
 	001a5008 mov ax,mar
 	001a5014 mov op,ax
 	001a501c setfuncargs 0x1
 	001a5024 mov ax,0x6f6f20
 	001a5030 farcall ax
 	001a5038 farsubsp 0x1
 	001a5040 pop op
 	001a5048 sourceline 0x1e64
 	001a5050 push op
 	001a5058 mov ax,0x2c38d4
 	001a5064 farpush ax
 	001a506c mov mar,0x3cef20
 	001a5078 mov ax,mar
 	001a5084 mov op,ax
 	001a508c setfuncargs 0x1
 	001a5094 mov ax,0x6f6f20
 	001a50a0 farcall ax
 	001a50a8 farsubsp 0x1
 	001a50b0 pop op
 	001a50b8 sourceline 0x1e65
 	001a50c0 push op
 	001a50c8 mov ax,0x2c38de
 	001a50d4 farpush ax
 	001a50dc mov mar,0xbaef20
 	001a50e8 mov ax,mar
 	001a50f4 mov op,ax
 	001a50fc setfuncargs 0x1
 	001a5104 mov ax,0x6f6f20
 	001a5110 farcall ax
 	001a5118 farsubsp 0x1
 	001a5120 pop op
 	001a5128 sourceline 0x1e66
 	001a5130 mov ax,0x1
 	001a513c mov mar,0xba6f20
 	001a5148 memwrite4 ax
 	001a5150 sourceline 0x1e67
 	001a5158 mov ax,0x1
 	001a5164 mov mar,0xbb6f20
 	001a5170 memwrite4 ax
		001a5178: FALL_THROUGH

	[001a5178]
		001a4dc0: CONDITIONAL_JUMP
		001a4f68: FALL_THROUGH
 	001a5178 sourceline 0x1e69
 	001a5180 push op
 	001a5188 mov ax,0x7
 	001a5194 farpush ax
 	001a519c mov mar,0x3cef20
 	001a51a8 mov ax,mar
 	001a51b4 mov op,ax
 	001a51bc setfuncargs 0x1
 	001a51c4 mov ax,0x51ef20
 	001a51d0 farcall ax
 	001a51d8 farsubsp 0x1
 	001a51e0 pop op
 	001a51e8 sourceline 0x1e6a
 	001a51f0 mov ax,0x81
 	001a51fc mov bx,ax
 	001a5208 mov mar,0x3cef20
 	001a5214 mov ax,mar
 	001a5220 push op
 	001a5228 mov op,ax
 	001a5230 farpush bx
 	001a5238 setfuncargs 0x1
 	001a5240 mov ax,0x526f20
 	001a524c farcall ax
 	001a5254 farsubsp 0x1
 	001a525c pop op
 	001a5264 sourceline 0x1e6b
 	001a526c mov ax,0xc5
 	001a5278 mov bx,ax
 	001a5284 mov mar,0x3cef20
 	001a5290 mov ax,mar
 	001a529c push op
 	001a52a4 mov op,ax
 	001a52ac farpush bx
 	001a52b4 setfuncargs 0x1
 	001a52bc mov ax,0x70ef20
 	001a52c8 farcall ax
 	001a52d0 farsubsp 0x1
 	001a52d8 pop op
 	001a52e0 sourceline 0x1e6c
 	001a52e8 push op
 	001a52f0 mov ax,0x426
 	001a52fc farpush ax
 	001a5304 mov ax,0x397
 	001a5310 farpush ax
 	001a5318 mov ax,0x0
 	001a5324 farpush ax
 	001a532c mov ax,0x3
 	001a5338 farpush ax
 	001a5340 mov ax,0x5
 	001a534c farpush ax
 	001a5354 mov mar,0x3cef20
 	001a5360 mov ax,mar
 	001a536c mov op,ax
 	001a5374 setfuncargs 0x5
 	001a537c mov ax,0x536f20
 	001a5388 farcall ax
 	001a5390 farsubsp 0x5
 	001a5398 pop op
 	001a53a0 sourceline 0x1e6d
 	001a53a8 push op
 	001a53b0 mov ax,0x2c39b4
 	001a53bc farpush ax
 	001a53c4 mov mar,0x3cef20
 	001a53d0 mov ax,mar
 	001a53dc mov op,ax
 	001a53e4 setfuncargs 0x1
 	001a53ec mov ax,0x6f6f20
 	001a53f8 farcall ax
 	001a5400 farsubsp 0x1
 	001a5408 pop op
 	001a5410 sourceline 0x1e6e
 	001a5418 push op
 	001a5420 mov ax,0x2c35e3
 	001a542c farpush ax
 	001a5434 mov mar,0xbaef20
 	001a5440 mov ax,mar
 	001a544c mov op,ax
 	001a5454 setfuncargs 0x1
 	001a545c mov ax,0x6f6f20
 	001a5468 farcall ax
 	001a5470 farsubsp 0x1
 	001a5478 pop op
 	001a5480 sourceline 0x1e6f
 	001a5488 push op
 	001a5490 mov ax,0x427
 	001a549c farpush ax
 	001a54a4 mov ax,0x397
 	001a54b0 farpush ax
 	001a54b8 mov ax,0x0
 	001a54c4 farpush ax
 	001a54cc mov ax,0x3
 	001a54d8 farpush ax
 	001a54e0 mov ax,0x5
 	001a54ec farpush ax
 	001a54f4 mov mar,0x3cef20
 	001a5500 mov ax,mar
 	001a550c mov op,ax
 	001a5514 setfuncargs 0x5
 	001a551c mov ax,0x536f20
 	001a5528 farcall ax
 	001a5530 farsubsp 0x5
 	001a5538 pop op
 	001a5540 sourceline 0x1e70
 	001a5548 push op
 	001a5550 mov ax,0x2
 	001a555c farpush ax
 	001a5564 mov mar,0x3cef20
 	001a5570 mov ax,mar
 	001a557c mov op,ax
 	001a5584 setfuncargs 0x1
 	001a558c mov ax,0x51ef20
 	001a5598 farcall ax
 	001a55a0 farsubsp 0x1
 	001a55a8 pop op
 	001a55b0 sourceline 0x1e71
 	001a55b8 mov ax,0x2
 	001a55c4 mov bx,ax
 	001a55d0 mov mar,0x3cef20
 	001a55dc mov ax,mar
 	001a55e8 push op
 	001a55f0 mov op,ax
 	001a55f8 farpush bx
 	001a5600 setfuncargs 0x1
 	001a5608 mov ax,0x766f20
 	001a5614 farcall ax
 	001a561c farsubsp 0x1
 	001a5624 pop op
 	001a562c sourceline 0x1e72
 	001a5634 mov ax,0x89
 	001a5640 mov bx,ax
 	001a564c mov mar,0x3cef20
 	001a5658 mov ax,mar
 	001a5664 push op
 	001a566c mov op,ax
 	001a5674 farpush bx
 	001a567c setfuncargs 0x1
 	001a5684 mov ax,0x526f20
 	001a5690 farcall ax
 	001a5698 farsubsp 0x1
 	001a56a0 pop op
 	001a56a8 sourceline 0x1e73
 	001a56b0 mov ax,0xbc
 	001a56bc mov bx,ax
 	001a56c8 mov mar,0x3cef20
 	001a56d4 mov ax,mar
 	001a56e0 push op
 	001a56e8 mov op,ax
 	001a56f0 farpush bx
 	001a56f8 setfuncargs 0x1
 	001a5700 mov ax,0x70ef20
 	001a570c farcall ax
 	001a5714 farsubsp 0x1
 	001a571c pop op
		001a5724: FALL_THROUGH

	[001a5724]
		001a4d6c: UNCONDITIONAL_JUMP
		001a5178: FALL_THROUGH
 	001a5724 sourceline 0x1e75
 	001a572c jmp 0x001a60e0
		001a60e0: UNCONDITIONAL_JUMP

	[001a5734]
		001a4d0c: CONDITIONAL_JUMP
 	001a5734 sourceline 0x1e78
 	001a573c mov mar,0xbbef20
 	001a5748 memread4 ax
 	001a5750 lnot ax
 	001a5758 jz 0x001a5f20
		001a5f20: CONDITIONAL_JUMP
		001a5760: FALL_THROUGH

	[001a5760]
		001a5734: FALL_THROUGH
 	001a5760 sourceline 0x1e7a
 	001a5768 setfuncargs 0x0
 	001a5770 mov ax,0x6def20
 	001a577c farcall ax
 	001a5784 lnot ax
 	001a578c jz 0x001a57e8
		001a57e8: CONDITIONAL_JUMP
		001a5794: FALL_THROUGH

	[001a5794]
		001a5760: FALL_THROUGH
 	001a5794 mov ax,0x89
 	001a57a0 farpush ax
 	001a57a8 mov ax,0xbc
 	001a57b4 farpush ax
 	001a57bc setfuncargs 0x2
 	001a57c4 mov ax,0x6e6f20
 	001a57d0 farcall ax
 	001a57d8 farsubsp 0x2
 	001a57e0 jmp 0x001a5f10
		001a5f10: UNCONDITIONAL_JUMP

	[001a57e8]
		001a5760: CONDITIONAL_JUMP
 	001a57e8 sourceline 0x1e7d
 	001a57f0 push op
 	001a57f8 mov ax,0x397
 	001a5804 farpush ax
 	001a580c mov ax,0x2
 	001a5818 farpush ax
 	001a5820 mov mar,0x3cef20
 	001a582c mov ax,mar
 	001a5838 mov op,ax
 	001a5840 setfuncargs 0x2
 	001a5848 mov ax,0x6eef20
 	001a5854 farcall ax
 	001a585c farsubsp 0x2
 	001a5864 pop op
 	001a586c sourceline 0x1e7e
 	001a5874 mov ax,0x3
 	001a5880 mov bx,ax
 	001a588c mov mar,0x3cef20
 	001a5898 mov ax,mar
 	001a58a4 push op
 	001a58ac mov op,ax
 	001a58b4 farpush bx
 	001a58bc setfuncargs 0x1
 	001a58c4 mov ax,0x69ef20
 	001a58d0 farcall ax
 	001a58d8 farsubsp 0x1
 	001a58e0 pop op
 	001a58e8 sourceline 0x1e7f
 	001a58f0 mov ax,0x0
 	001a58fc mov bx,ax
 	001a5908 mov mar,0x3cef20
 	001a5914 mov ax,mar
 	001a5920 push op
 	001a5928 mov op,ax
 	001a5930 farpush bx
 	001a5938 setfuncargs 0x1
 	001a5940 mov ax,0x436f20
 	001a594c farcall ax
 	001a5954 farsubsp 0x1
 	001a595c pop op
 	001a5964 sourceline 0x1e80
 	001a596c push op
 	001a5974 mov ax,0x7
 	001a5980 farpush ax
 	001a5988 mov mar,0x3cef20
 	001a5994 mov ax,mar
 	001a59a0 mov op,ax
 	001a59a8 setfuncargs 0x1
 	001a59b0 mov ax,0x51ef20
 	001a59bc farcall ax
 	001a59c4 farsubsp 0x1
 	001a59cc pop op
 	001a59d4 sourceline 0x1e81
 	001a59dc mov ax,0x81
 	001a59e8 mov bx,ax
 	001a59f4 mov mar,0x3cef20
 	001a5a00 mov ax,mar
 	001a5a0c push op
 	001a5a14 mov op,ax
 	001a5a1c farpush bx
 	001a5a24 setfuncargs 0x1
 	001a5a2c mov ax,0x526f20
 	001a5a38 farcall ax
 	001a5a40 farsubsp 0x1
 	001a5a48 pop op
 	001a5a50 sourceline 0x1e82
 	001a5a58 mov ax,0xc5
 	001a5a64 mov bx,ax
 	001a5a70 mov mar,0x3cef20
 	001a5a7c mov ax,mar
 	001a5a88 push op
 	001a5a90 mov op,ax
 	001a5a98 farpush bx
 	001a5aa0 setfuncargs 0x1
 	001a5aa8 mov ax,0x70ef20
 	001a5ab4 farcall ax
 	001a5abc farsubsp 0x1
 	001a5ac4 pop op
 	001a5acc sourceline 0x1e83
 	001a5ad4 push op
 	001a5adc mov ax,0x426
 	001a5ae8 farpush ax
 	001a5af0 mov ax,0x397
 	001a5afc farpush ax
 	001a5b04 mov ax,0x0
 	001a5b10 farpush ax
 	001a5b18 mov ax,0x3
 	001a5b24 farpush ax
 	001a5b2c mov ax,0x5
 	001a5b38 farpush ax
 	001a5b40 mov mar,0x3cef20
 	001a5b4c mov ax,mar
 	001a5b58 mov op,ax
 	001a5b60 setfuncargs 0x5
 	001a5b68 mov ax,0x536f20
 	001a5b74 farcall ax
 	001a5b7c farsubsp 0x5
 	001a5b84 pop op
 	001a5b8c sourceline 0x1e84
 	001a5b94 push op
 	001a5b9c mov ax,0x2c39b4
 	001a5ba8 farpush ax
 	001a5bb0 mov mar,0x3cef20
 	001a5bbc mov ax,mar
 	001a5bc8 mov op,ax
 	001a5bd0 setfuncargs 0x1
 	001a5bd8 mov ax,0x6f6f20
 	001a5be4 farcall ax
 	001a5bec farsubsp 0x1
 	001a5bf4 pop op
 	001a5bfc sourceline 0x1e85
 	001a5c04 push op
 	001a5c0c mov ax,0x2c3952
 	001a5c18 farpush ax
 	001a5c20 mov mar,0xbaef20
 	001a5c2c mov ax,mar
 	001a5c38 mov op,ax
 	001a5c40 setfuncargs 0x1
 	001a5c48 mov ax,0x6f6f20
 	001a5c54 farcall ax
 	001a5c5c farsubsp 0x1
 	001a5c64 pop op
 	001a5c6c sourceline 0x1e86
 	001a5c74 push op
 	001a5c7c mov ax,0x427
 	001a5c88 farpush ax
 	001a5c90 mov ax,0x397
 	001a5c9c farpush ax
 	001a5ca4 mov ax,0x0
 	001a5cb0 farpush ax
 	001a5cb8 mov ax,0x3
 	001a5cc4 farpush ax
 	001a5ccc mov ax,0x5
 	001a5cd8 farpush ax
 	001a5ce0 mov mar,0x3cef20
 	001a5cec mov ax,mar
 	001a5cf8 mov op,ax
 	001a5d00 setfuncargs 0x5
 	001a5d08 mov ax,0x536f20
 	001a5d14 farcall ax
 	001a5d1c farsubsp 0x5
 	001a5d24 pop op
 	001a5d2c sourceline 0x1e87
 	001a5d34 push op
 	001a5d3c mov ax,0x2
 	001a5d48 farpush ax
 	001a5d50 mov mar,0x3cef20
 	001a5d5c mov ax,mar
 	001a5d68 mov op,ax
 	001a5d70 setfuncargs 0x1
 	001a5d78 mov ax,0x51ef20
 	001a5d84 farcall ax
 	001a5d8c farsubsp 0x1
 	001a5d94 pop op
 	001a5d9c sourceline 0x1e88
 	001a5da4 mov ax,0x2
 	001a5db0 mov bx,ax
 	001a5dbc mov mar,0x3cef20
 	001a5dc8 mov ax,mar
 	001a5dd4 push op
 	001a5ddc mov op,ax
 	001a5de4 farpush bx
 	001a5dec setfuncargs 0x1
 	001a5df4 mov ax,0x766f20
 	001a5e00 farcall ax
 	001a5e08 farsubsp 0x1
 	001a5e10 pop op
 	001a5e18 sourceline 0x1e89
 	001a5e20 mov ax,0x89
 	001a5e2c mov bx,ax
 	001a5e38 mov mar,0x3cef20
 	001a5e44 mov ax,mar
 	001a5e50 push op
 	001a5e58 mov op,ax
 	001a5e60 farpush bx
 	001a5e68 setfuncargs 0x1
 	001a5e70 mov ax,0x526f20
 	001a5e7c farcall ax
 	001a5e84 farsubsp 0x1
 	001a5e8c pop op
 	001a5e94 sourceline 0x1e8a
 	001a5e9c mov ax,0xbc
 	001a5ea8 mov bx,ax
 	001a5eb4 mov mar,0x3cef20
 	001a5ec0 mov ax,mar
 	001a5ecc push op
 	001a5ed4 mov op,ax
 	001a5edc farpush bx
 	001a5ee4 setfuncargs 0x1
 	001a5eec mov ax,0x70ef20
 	001a5ef8 farcall ax
 	001a5f00 farsubsp 0x1
 	001a5f08 pop op
		001a5f10: FALL_THROUGH

	[001a5f10]
		001a5794: UNCONDITIONAL_JUMP
		001a57e8: FALL_THROUGH
 	001a5f10 sourceline 0x1e8c
 	001a5f18 jmp 0x001a60e0
		001a60e0: UNCONDITIONAL_JUMP

	[001a5f20]
		001a5734: CONDITIONAL_JUMP
 	001a5f20 sourceline 0x1e8f
 	001a5f28 push op
 	001a5f30 mov ax,0x397
 	001a5f3c farpush ax
 	001a5f44 mov ax,0x8c
 	001a5f50 farpush ax
 	001a5f58 mov ax,0xdf
 	001a5f64 farpush ax
 	001a5f6c mov mar,0x3cef20
 	001a5f78 mov ax,mar
 	001a5f84 mov op,ax
 	001a5f8c setfuncargs 0x3
 	001a5f94 mov ax,0x726f20
 	001a5fa0 farcall ax
 	001a5fa8 farsubsp 0x3
 	001a5fb0 pop op
 	001a5fb8 sourceline 0x1e90
 	001a5fc0 mov ax,0x1
 	001a5fcc mov bx,ax
 	001a5fd8 mov mar,0x3cef20
 	001a5fe4 mov ax,mar
 	001a5ff0 push op
 	001a5ff8 mov op,ax
 	001a6000 farpush bx
 	001a6008 setfuncargs 0x1
 	001a6010 mov ax,0x69ef20
 	001a601c farcall ax
 	001a6024 farsubsp 0x1
 	001a602c pop op
 	001a6034 sourceline 0x1e91
 	001a603c push op
 	001a6044 mov ax,0x2c3677
 	001a6050 farpush ax
 	001a6058 mov ax,0x138
 	001a6064 farpush ax
 	001a606c mov ax,0x92
 	001a6078 farpush ax
 	001a6080 mov ax,0x0
 	001a608c farpush ax
 	001a6094 mov mar,0x3cef20
 	001a60a0 mov ax,mar
 	001a60ac mov op,ax
 	001a60b4 setfuncargs 0x4
 	001a60bc mov ax,0x6aef20
 	001a60c8 farcall ax
 	001a60d0 farsubsp 0x4
 	001a60d8 pop op
		001a60e0: FALL_THROUGH

	[001a60e0]
		001a5724: UNCONDITIONAL_JUMP
		001a5f10: UNCONDITIONAL_JUMP
		001a5f20: FALL_THROUGH
 	001a60e0 sourceline 0x1e94
 	001a60e8 jmp 0x001a93a0
		001a93a0: UNCONDITIONAL_JUMP

	[001a60f0]
		001a4d04: CONDITIONAL_JUMP
 	001a60f0 sourceline 0x1e97
 	001a60f8 mov mar,0x3cef20
 	001a6104 mov ax,mar
 	001a6110 push op
 	001a6118 mov op,ax
 	001a6120 setfuncargs 0x0
 	001a6128 mov ax,0x89ef20
 	001a6134 farcall ax
 	001a613c pop op
 	001a6144 push ax
 	001a614c mov mar,0x8c6f20
 	001a6158 mov ax,mar
 	001a6164 pop bx
 	001a616c cmpeq bx,ax
 	001a6178 mov ax,bx
 	001a6184 jz 0x001a7a50
		001a7a50: CONDITIONAL_JUMP
		001a618c: FALL_THROUGH

	[001a618c]
		001a60f0: FALL_THROUGH
 	001a618c sourceline 0x1e99
 	001a6194 setfuncargs 0x0
 	001a619c mov ax,0x6def20
 	001a61a8 farcall ax
 	001a61b0 lnot ax
 	001a61b8 jz 0x001a6214
		001a6214: CONDITIONAL_JUMP
		001a61c0: FALL_THROUGH

	[001a61c0]
		001a618c: FALL_THROUGH
 	001a61c0 mov ax,0x89
 	001a61cc farpush ax
 	001a61d4 mov ax,0xbc
 	001a61e0 farpush ax
 	001a61e8 setfuncargs 0x2
 	001a61f0 mov ax,0x6e6f20
 	001a61fc farcall ax
 	001a6204 farsubsp 0x2
 	001a620c jmp 0x001a7a40
		001a7a40: UNCONDITIONAL_JUMP

	[001a6214]
		001a618c: CONDITIONAL_JUMP
 	001a6214 sourceline 0x1e9c
 	001a621c mov mar,0xcf6f20
 	001a6228 memread4 ax
 	001a6230 lnot ax
 	001a6238 jz 0x001a6bb4
		001a6bb4: CONDITIONAL_JUMP
		001a6240: FALL_THROUGH

	[001a6240]
		001a6214: FALL_THROUGH
 	001a6240 sourceline 0x1e9e
 	001a6248 push op
 	001a6250 mov ax,0x397
 	001a625c farpush ax
 	001a6264 mov ax,0x2
 	001a6270 farpush ax
 	001a6278 mov mar,0x3cef20
 	001a6284 mov ax,mar
 	001a6290 mov op,ax
 	001a6298 setfuncargs 0x2
 	001a62a0 mov ax,0x6eef20
 	001a62ac farcall ax
 	001a62b4 farsubsp 0x2
 	001a62bc pop op
 	001a62c4 sourceline 0x1e9f
 	001a62cc mov ax,0x3
 	001a62d8 mov bx,ax
 	001a62e4 mov mar,0x3cef20
 	001a62f0 mov ax,mar
 	001a62fc push op
 	001a6304 mov op,ax
 	001a630c farpush bx
 	001a6314 setfuncargs 0x1
 	001a631c mov ax,0x69ef20
 	001a6328 farcall ax
 	001a6330 farsubsp 0x1
 	001a6338 pop op
 	001a6340 sourceline 0x1ea0
 	001a6348 mov mar,0xba6f20
 	001a6354 memread4 ax
 	001a635c lnot ax
 	001a6364 jz 0x001a657c
		001a657c: CONDITIONAL_JUMP
		001a636c: FALL_THROUGH

	[001a636c]
		001a6240: FALL_THROUGH
 	001a636c sourceline 0x1ea2
 	001a6374 push op
 	001a637c mov ax,0x2c3881
 	001a6388 farpush ax
 	001a6390 mov mar,0x3cef20
 	001a639c mov ax,mar
 	001a63a8 mov op,ax
 	001a63b0 setfuncargs 0x1
 	001a63b8 mov ax,0x6f6f20
 	001a63c4 farcall ax
 	001a63cc farsubsp 0x1
 	001a63d4 pop op
 	001a63dc sourceline 0x1ea3
 	001a63e4 push op
 	001a63ec mov ax,0x2c38a0
 	001a63f8 farpush ax
 	001a6400 mov mar,0xbaef20
 	001a640c mov ax,mar
 	001a6418 mov op,ax
 	001a6420 setfuncargs 0x1
 	001a6428 mov ax,0x6f6f20
 	001a6434 farcall ax
 	001a643c farsubsp 0x1
 	001a6444 pop op
 	001a644c sourceline 0x1ea4
 	001a6454 push op
 	001a645c mov ax,0x2c38d4
 	001a6468 farpush ax
 	001a6470 mov mar,0x3cef20
 	001a647c mov ax,mar
 	001a6488 mov op,ax
 	001a6490 setfuncargs 0x1
 	001a6498 mov ax,0x6f6f20
 	001a64a4 farcall ax
 	001a64ac farsubsp 0x1
 	001a64b4 pop op
 	001a64bc sourceline 0x1ea5
 	001a64c4 push op
 	001a64cc mov ax,0x2c38de
 	001a64d8 farpush ax
 	001a64e0 mov mar,0xbaef20
 	001a64ec mov ax,mar
 	001a64f8 mov op,ax
 	001a6500 setfuncargs 0x1
 	001a6508 mov ax,0x6f6f20
 	001a6514 farcall ax
 	001a651c farsubsp 0x1
 	001a6524 pop op
 	001a652c sourceline 0x1ea6
 	001a6534 mov ax,0x1
 	001a6540 mov mar,0xba6f20
 	001a654c memwrite4 ax
 	001a6554 sourceline 0x1ea7
 	001a655c mov ax,0x1
 	001a6568 mov mar,0xbb6f20
 	001a6574 memwrite4 ax
		001a657c: FALL_THROUGH

	[001a657c]
		001a6240: CONDITIONAL_JUMP
		001a636c: FALL_THROUGH
 	001a657c sourceline 0x1ea9
 	001a6584 mov ax,0x0
 	001a6590 mov bx,ax
 	001a659c mov mar,0x3cef20
 	001a65a8 mov ax,mar
 	001a65b4 push op
 	001a65bc mov op,ax
 	001a65c4 farpush bx
 	001a65cc setfuncargs 0x1
 	001a65d4 mov ax,0x436f20
 	001a65e0 farcall ax
 	001a65e8 farsubsp 0x1
 	001a65f0 pop op
 	001a65f8 sourceline 0x1eaa
 	001a6600 push op
 	001a6608 mov ax,0x7
 	001a6614 farpush ax
 	001a661c mov mar,0x3cef20
 	001a6628 mov ax,mar
 	001a6634 mov op,ax
 	001a663c setfuncargs 0x1
 	001a6644 mov ax,0x51ef20
 	001a6650 farcall ax
 	001a6658 farsubsp 0x1
 	001a6660 pop op
 	001a6668 sourceline 0x1eab
 	001a6670 mov ax,0x81
 	001a667c mov bx,ax
 	001a6688 mov mar,0x3cef20
 	001a6694 mov ax,mar
 	001a66a0 push op
 	001a66a8 mov op,ax
 	001a66b0 farpush bx
 	001a66b8 setfuncargs 0x1
 	001a66c0 mov ax,0x526f20
 	001a66cc farcall ax
 	001a66d4 farsubsp 0x1
 	001a66dc pop op
 	001a66e4 sourceline 0x1eac
 	001a66ec mov ax,0xc5
 	001a66f8 mov bx,ax
 	001a6704 mov mar,0x3cef20
 	001a6710 mov ax,mar
 	001a671c push op
 	001a6724 mov op,ax
 	001a672c farpush bx
 	001a6734 setfuncargs 0x1
 	001a673c mov ax,0x70ef20
 	001a6748 farcall ax
 	001a6750 farsubsp 0x1
 	001a6758 pop op
 	001a6760 sourceline 0x1ead
 	001a6768 push op
 	001a6770 mov ax,0x426
 	001a677c farpush ax
 	001a6784 mov ax,0x397
 	001a6790 farpush ax
 	001a6798 mov ax,0x0
 	001a67a4 farpush ax
 	001a67ac mov ax,0x3
 	001a67b8 farpush ax
 	001a67c0 mov ax,0x5
 	001a67cc farpush ax
 	001a67d4 mov mar,0x3cef20
 	001a67e0 mov ax,mar
 	001a67ec mov op,ax
 	001a67f4 setfuncargs 0x5
 	001a67fc mov ax,0x536f20
 	001a6808 farcall ax
 	001a6810 farsubsp 0x5
 	001a6818 pop op
 	001a6820 sourceline 0x1eae
 	001a6828 push op
 	001a6830 mov ax,0x2c39b4
 	001a683c farpush ax
 	001a6844 mov mar,0x3cef20
 	001a6850 mov ax,mar
 	001a685c mov op,ax
 	001a6864 setfuncargs 0x1
 	001a686c mov ax,0x6f6f20
 	001a6878 farcall ax
 	001a6880 farsubsp 0x1
 	001a6888 pop op
 	001a6890 sourceline 0x1eaf
 	001a6898 push op
 	001a68a0 mov ax,0x2c380f
 	001a68ac farpush ax
 	001a68b4 mov mar,0xbaef20
 	001a68c0 mov ax,mar
 	001a68cc mov op,ax
 	001a68d4 setfuncargs 0x1
 	001a68dc mov ax,0x6f6f20
 	001a68e8 farcall ax
 	001a68f0 farsubsp 0x1
 	001a68f8 pop op
 	001a6900 sourceline 0x1eb0
 	001a6908 push op
 	001a6910 mov ax,0x427
 	001a691c farpush ax
 	001a6924 mov ax,0x397
 	001a6930 farpush ax
 	001a6938 mov ax,0x0
 	001a6944 farpush ax
 	001a694c mov ax,0x3
 	001a6958 farpush ax
 	001a6960 mov ax,0x5
 	001a696c farpush ax
 	001a6974 mov mar,0x3cef20
 	001a6980 mov ax,mar
 	001a698c mov op,ax
 	001a6994 setfuncargs 0x5
 	001a699c mov ax,0x536f20
 	001a69a8 farcall ax
 	001a69b0 farsubsp 0x5
 	001a69b8 pop op
 	001a69c0 sourceline 0x1eb1
 	001a69c8 push op
 	001a69d0 mov ax,0x2
 	001a69dc farpush ax
 	001a69e4 mov mar,0x3cef20
 	001a69f0 mov ax,mar
 	001a69fc mov op,ax
 	001a6a04 setfuncargs 0x1
 	001a6a0c mov ax,0x51ef20
 	001a6a18 farcall ax
 	001a6a20 farsubsp 0x1
 	001a6a28 pop op
 	001a6a30 sourceline 0x1eb2
 	001a6a38 mov ax,0x2
 	001a6a44 mov bx,ax
 	001a6a50 mov mar,0x3cef20
 	001a6a5c mov ax,mar
 	001a6a68 push op
 	001a6a70 mov op,ax
 	001a6a78 farpush bx
 	001a6a80 setfuncargs 0x1
 	001a6a88 mov ax,0x766f20
 	001a6a94 farcall ax
 	001a6a9c farsubsp 0x1
 	001a6aa4 pop op
 	001a6aac sourceline 0x1eb3
 	001a6ab4 mov ax,0x89
 	001a6ac0 mov bx,ax
 	001a6acc mov mar,0x3cef20
 	001a6ad8 mov ax,mar
 	001a6ae4 push op
 	001a6aec mov op,ax
 	001a6af4 farpush bx
 	001a6afc setfuncargs 0x1
 	001a6b04 mov ax,0x526f20
 	001a6b10 farcall ax
 	001a6b18 farsubsp 0x1
 	001a6b20 pop op
 	001a6b28 sourceline 0x1eb4
 	001a6b30 mov ax,0xbc
 	001a6b3c mov bx,ax
 	001a6b48 mov mar,0x3cef20
 	001a6b54 mov ax,mar
 	001a6b60 push op
 	001a6b68 mov op,ax
 	001a6b70 farpush bx
 	001a6b78 setfuncargs 0x1
 	001a6b80 mov ax,0x70ef20
 	001a6b8c farcall ax
 	001a6b94 farsubsp 0x1
 	001a6b9c pop op
 	001a6ba4 sourceline 0x1eb5
 	001a6bac jmp 0x001a7a40
		001a7a40: UNCONDITIONAL_JUMP

	[001a6bb4]
		001a6214: CONDITIONAL_JUMP
 	001a6bb4 sourceline 0x1eb8
 	001a6bbc mov mar,0xbbef20
 	001a6bc8 memread4 ax
 	001a6bd0 lnot ax
 	001a6bd8 jz 0x001a7318
		001a7318: CONDITIONAL_JUMP
		001a6be0: FALL_THROUGH

	[001a6be0]
		001a6bb4: FALL_THROUGH
 	001a6be0 sourceline 0x1eba
 	001a6be8 push op
 	001a6bf0 mov ax,0x397
 	001a6bfc farpush ax
 	001a6c04 mov ax,0x2
 	001a6c10 farpush ax
 	001a6c18 mov mar,0x3cef20
 	001a6c24 mov ax,mar
 	001a6c30 mov op,ax
 	001a6c38 setfuncargs 0x2
 	001a6c40 mov ax,0x6eef20
 	001a6c4c farcall ax
 	001a6c54 farsubsp 0x2
 	001a6c5c pop op
 	001a6c64 sourceline 0x1ebb
 	001a6c6c mov ax,0x3
 	001a6c78 mov bx,ax
 	001a6c84 mov mar,0x3cef20
 	001a6c90 mov ax,mar
 	001a6c9c push op
 	001a6ca4 mov op,ax
 	001a6cac farpush bx
 	001a6cb4 setfuncargs 0x1
 	001a6cbc mov ax,0x69ef20
 	001a6cc8 farcall ax
 	001a6cd0 farsubsp 0x1
 	001a6cd8 pop op
 	001a6ce0 sourceline 0x1ebc
 	001a6ce8 mov ax,0x0
 	001a6cf4 mov bx,ax
 	001a6d00 mov mar,0x3cef20
 	001a6d0c mov ax,mar
 	001a6d18 push op
 	001a6d20 mov op,ax
 	001a6d28 farpush bx
 	001a6d30 setfuncargs 0x1
 	001a6d38 mov ax,0x436f20
 	001a6d44 farcall ax
 	001a6d4c farsubsp 0x1
 	001a6d54 pop op
 	001a6d5c sourceline 0x1ebd
 	001a6d64 push op
 	001a6d6c mov ax,0x7
 	001a6d78 farpush ax
 	001a6d80 mov mar,0x3cef20
 	001a6d8c mov ax,mar
 	001a6d98 mov op,ax
 	001a6da0 setfuncargs 0x1
 	001a6da8 mov ax,0x51ef20
 	001a6db4 farcall ax
 	001a6dbc farsubsp 0x1
 	001a6dc4 pop op
 	001a6dcc sourceline 0x1ebe
 	001a6dd4 mov ax,0x81
 	001a6de0 mov bx,ax
 	001a6dec mov mar,0x3cef20
 	001a6df8 mov ax,mar
 	001a6e04 push op
 	001a6e0c mov op,ax
 	001a6e14 farpush bx
 	001a6e1c setfuncargs 0x1
 	001a6e24 mov ax,0x526f20
 	001a6e30 farcall ax
 	001a6e38 farsubsp 0x1
 	001a6e40 pop op
 	001a6e48 sourceline 0x1ebf
 	001a6e50 mov ax,0xc5
 	001a6e5c mov bx,ax
 	001a6e68 mov mar,0x3cef20
 	001a6e74 mov ax,mar
 	001a6e80 push op
 	001a6e88 mov op,ax
 	001a6e90 farpush bx
 	001a6e98 setfuncargs 0x1
 	001a6ea0 mov ax,0x70ef20
 	001a6eac farcall ax
 	001a6eb4 farsubsp 0x1
 	001a6ebc pop op
 	001a6ec4 sourceline 0x1ec0
 	001a6ecc push op
 	001a6ed4 mov ax,0x426
 	001a6ee0 farpush ax
 	001a6ee8 mov ax,0x397
 	001a6ef4 farpush ax
 	001a6efc mov ax,0x0
 	001a6f08 farpush ax
 	001a6f10 mov ax,0x3
 	001a6f1c farpush ax
 	001a6f24 mov ax,0x5
 	001a6f30 farpush ax
 	001a6f38 mov mar,0x3cef20
 	001a6f44 mov ax,mar
 	001a6f50 mov op,ax
 	001a6f58 setfuncargs 0x5
 	001a6f60 mov ax,0x536f20
 	001a6f6c farcall ax
 	001a6f74 farsubsp 0x5
 	001a6f7c pop op
 	001a6f84 sourceline 0x1ec1
 	001a6f8c push op
 	001a6f94 mov ax,0x2c39b4
 	001a6fa0 farpush ax
 	001a6fa8 mov mar,0x3cef20
 	001a6fb4 mov ax,mar
 	001a6fc0 mov op,ax
 	001a6fc8 setfuncargs 0x1
 	001a6fd0 mov ax,0x6f6f20
 	001a6fdc farcall ax
 	001a6fe4 farsubsp 0x1
 	001a6fec pop op
 	001a6ff4 sourceline 0x1ec2
 	001a6ffc push op
 	001a7004 mov ax,0x2c3952
 	001a7010 farpush ax
 	001a7018 mov mar,0xbaef20
 	001a7024 mov ax,mar
 	001a7030 mov op,ax
 	001a7038 setfuncargs 0x1
 	001a7040 mov ax,0x6f6f20
 	001a704c farcall ax
 	001a7054 farsubsp 0x1
 	001a705c pop op
 	001a7064 sourceline 0x1ec3
 	001a706c push op
 	001a7074 mov ax,0x427
 	001a7080 farpush ax
 	001a7088 mov ax,0x397
 	001a7094 farpush ax
 	001a709c mov ax,0x0
 	001a70a8 farpush ax
 	001a70b0 mov ax,0x3
 	001a70bc farpush ax
 	001a70c4 mov ax,0x5
 	001a70d0 farpush ax
 	001a70d8 mov mar,0x3cef20
 	001a70e4 mov ax,mar
 	001a70f0 mov op,ax
 	001a70f8 setfuncargs 0x5
 	001a7100 mov ax,0x536f20
 	001a710c farcall ax
 	001a7114 farsubsp 0x5
 	001a711c pop op
 	001a7124 sourceline 0x1ec4
 	001a712c push op
 	001a7134 mov ax,0x2
 	001a7140 farpush ax
 	001a7148 mov mar,0x3cef20
 	001a7154 mov ax,mar
 	001a7160 mov op,ax
 	001a7168 setfuncargs 0x1
 	001a7170 mov ax,0x51ef20
 	001a717c farcall ax
 	001a7184 farsubsp 0x1
 	001a718c pop op
 	001a7194 sourceline 0x1ec5
 	001a719c mov ax,0x2
 	001a71a8 mov bx,ax
 	001a71b4 mov mar,0x3cef20
 	001a71c0 mov ax,mar
 	001a71cc push op
 	001a71d4 mov op,ax
 	001a71dc farpush bx
 	001a71e4 setfuncargs 0x1
 	001a71ec mov ax,0x766f20
 	001a71f8 farcall ax
 	001a7200 farsubsp 0x1
 	001a7208 pop op
 	001a7210 sourceline 0x1ec6
 	001a7218 mov ax,0x89
 	001a7224 mov bx,ax
 	001a7230 mov mar,0x3cef20
 	001a723c mov ax,mar
 	001a7248 push op
 	001a7250 mov op,ax
 	001a7258 farpush bx
 	001a7260 setfuncargs 0x1
 	001a7268 mov ax,0x526f20
 	001a7274 farcall ax
 	001a727c farsubsp 0x1
 	001a7284 pop op
 	001a728c sourceline 0x1ec7
 	001a7294 mov ax,0xbc
 	001a72a0 mov bx,ax
 	001a72ac mov mar,0x3cef20
 	001a72b8 mov ax,mar
 	001a72c4 push op
 	001a72cc mov op,ax
 	001a72d4 farpush bx
 	001a72dc setfuncargs 0x1
 	001a72e4 mov ax,0x70ef20
 	001a72f0 farcall ax
 	001a72f8 farsubsp 0x1
 	001a7300 pop op
 	001a7308 sourceline 0x1ec8
 	001a7310 jmp 0x001a7a40
		001a7a40: UNCONDITIONAL_JUMP

	[001a7318]
		001a6bb4: CONDITIONAL_JUMP
 	001a7318 sourceline 0x1ecb
 	001a7320 push op
 	001a7328 mov ax,0x397
 	001a7334 farpush ax
 	001a733c mov ax,0x2
 	001a7348 farpush ax
 	001a7350 mov mar,0x3cef20
 	001a735c mov ax,mar
 	001a7368 mov op,ax
 	001a7370 setfuncargs 0x2
 	001a7378 mov ax,0x6eef20
 	001a7384 farcall ax
 	001a738c farsubsp 0x2
 	001a7394 pop op
 	001a739c sourceline 0x1ecc
 	001a73a4 mov ax,0x3
 	001a73b0 mov bx,ax
 	001a73bc mov mar,0x3cef20
 	001a73c8 mov ax,mar
 	001a73d4 push op
 	001a73dc mov op,ax
 	001a73e4 farpush bx
 	001a73ec setfuncargs 0x1
 	001a73f4 mov ax,0x69ef20
 	001a7400 farcall ax
 	001a7408 farsubsp 0x1
 	001a7410 pop op
 	001a7418 sourceline 0x1ecd
 	001a7420 mov ax,0x0
 	001a742c mov bx,ax
 	001a7438 mov mar,0x3cef20
 	001a7444 mov ax,mar
 	001a7450 push op
 	001a7458 mov op,ax
 	001a7460 farpush bx
 	001a7468 setfuncargs 0x1
 	001a7470 mov ax,0x436f20
 	001a747c farcall ax
 	001a7484 farsubsp 0x1
 	001a748c pop op
 	001a7494 sourceline 0x1ece
 	001a749c push op
 	001a74a4 mov ax,0x7
 	001a74b0 farpush ax
 	001a74b8 mov mar,0x3cef20
 	001a74c4 mov ax,mar
 	001a74d0 mov op,ax
 	001a74d8 setfuncargs 0x1
 	001a74e0 mov ax,0x51ef20
 	001a74ec farcall ax
 	001a74f4 farsubsp 0x1
 	001a74fc pop op
 	001a7504 sourceline 0x1ecf
 	001a750c mov ax,0x81
 	001a7518 mov bx,ax
 	001a7524 mov mar,0x3cef20
 	001a7530 mov ax,mar
 	001a753c push op
 	001a7544 mov op,ax
 	001a754c farpush bx
 	001a7554 setfuncargs 0x1
 	001a755c mov ax,0x526f20
 	001a7568 farcall ax
 	001a7570 farsubsp 0x1
 	001a7578 pop op
 	001a7580 sourceline 0x1ed0
 	001a7588 mov ax,0xc5
 	001a7594 mov bx,ax
 	001a75a0 mov mar,0x3cef20
 	001a75ac mov ax,mar
 	001a75b8 push op
 	001a75c0 mov op,ax
 	001a75c8 farpush bx
 	001a75d0 setfuncargs 0x1
 	001a75d8 mov ax,0x70ef20
 	001a75e4 farcall ax
 	001a75ec farsubsp 0x1
 	001a75f4 pop op
 	001a75fc sourceline 0x1ed1
 	001a7604 push op
 	001a760c mov ax,0x426
 	001a7618 farpush ax
 	001a7620 mov ax,0x397
 	001a762c farpush ax
 	001a7634 mov ax,0x0
 	001a7640 farpush ax
 	001a7648 mov ax,0x3
 	001a7654 farpush ax
 	001a765c mov ax,0x5
 	001a7668 farpush ax
 	001a7670 mov mar,0x3cef20
 	001a767c mov ax,mar
 	001a7688 mov op,ax
 	001a7690 setfuncargs 0x5
 	001a7698 mov ax,0x536f20
 	001a76a4 farcall ax
 	001a76ac farsubsp 0x5
 	001a76b4 pop op
 	001a76bc sourceline 0x1ed2
 	001a76c4 push op
 	001a76cc mov ax,0x2c39b4
 	001a76d8 farpush ax
 	001a76e0 mov mar,0x3cef20
 	001a76ec mov ax,mar
 	001a76f8 mov op,ax
 	001a7700 setfuncargs 0x1
 	001a7708 mov ax,0x6f6f20
 	001a7714 farcall ax
 	001a771c farsubsp 0x1
 	001a7724 pop op
 	001a772c sourceline 0x1ed3
 	001a7734 push op
 	001a773c mov ax,0x2c380f
 	001a7748 farpush ax
 	001a7750 mov mar,0xbaef20
 	001a775c mov ax,mar
 	001a7768 mov op,ax
 	001a7770 setfuncargs 0x1
 	001a7778 mov ax,0x6f6f20
 	001a7784 farcall ax
 	001a778c farsubsp 0x1
 	001a7794 pop op
 	001a779c sourceline 0x1ed4
 	001a77a4 push op
 	001a77ac mov ax,0x427
 	001a77b8 farpush ax
 	001a77c0 mov ax,0x397
 	001a77cc farpush ax
 	001a77d4 mov ax,0x0
 	001a77e0 farpush ax
 	001a77e8 mov ax,0x3
 	001a77f4 farpush ax
 	001a77fc mov ax,0x5
 	001a7808 farpush ax
 	001a7810 mov mar,0x3cef20
 	001a781c mov ax,mar
 	001a7828 mov op,ax
 	001a7830 setfuncargs 0x5
 	001a7838 mov ax,0x536f20
 	001a7844 farcall ax
 	001a784c farsubsp 0x5
 	001a7854 pop op
 	001a785c sourceline 0x1ed5
 	001a7864 push op
 	001a786c mov ax,0x2
 	001a7878 farpush ax
 	001a7880 mov mar,0x3cef20
 	001a788c mov ax,mar
 	001a7898 mov op,ax
 	001a78a0 setfuncargs 0x1
 	001a78a8 mov ax,0x51ef20
 	001a78b4 farcall ax
 	001a78bc farsubsp 0x1
 	001a78c4 pop op
 	001a78cc sourceline 0x1ed6
 	001a78d4 mov ax,0x2
 	001a78e0 mov bx,ax
 	001a78ec mov mar,0x3cef20
 	001a78f8 mov ax,mar
 	001a7904 push op
 	001a790c mov op,ax
 	001a7914 farpush bx
 	001a791c setfuncargs 0x1
 	001a7924 mov ax,0x766f20
 	001a7930 farcall ax
 	001a7938 farsubsp 0x1
 	001a7940 pop op
 	001a7948 sourceline 0x1ed7
 	001a7950 mov ax,0x89
 	001a795c mov bx,ax
 	001a7968 mov mar,0x3cef20
 	001a7974 mov ax,mar
 	001a7980 push op
 	001a7988 mov op,ax
 	001a7990 farpush bx
 	001a7998 setfuncargs 0x1
 	001a79a0 mov ax,0x526f20
 	001a79ac farcall ax
 	001a79b4 farsubsp 0x1
 	001a79bc pop op
 	001a79c4 sourceline 0x1ed8
 	001a79cc mov ax,0xbc
 	001a79d8 mov bx,ax
 	001a79e4 mov mar,0x3cef20
 	001a79f0 mov ax,mar
 	001a79fc push op
 	001a7a04 mov op,ax
 	001a7a0c farpush bx
 	001a7a14 setfuncargs 0x1
 	001a7a1c mov ax,0x70ef20
 	001a7a28 farcall ax
 	001a7a30 farsubsp 0x1
 	001a7a38 pop op
		001a7a40: FALL_THROUGH

	[001a7a40]
		001a61c0: UNCONDITIONAL_JUMP
		001a657c: UNCONDITIONAL_JUMP
		001a6be0: UNCONDITIONAL_JUMP
		001a7318: FALL_THROUGH
 	001a7a40 sourceline 0x1edc
 	001a7a48 jmp 0x001a93a0
		001a93a0: UNCONDITIONAL_JUMP

	[001a7a50]
		001a60f0: CONDITIONAL_JUMP
 	001a7a50 sourceline 0x1edf
 	001a7a58 mov mar,0x3cef20
 	001a7a64 mov ax,mar
 	001a7a70 push op
 	001a7a78 mov op,ax
 	001a7a80 setfuncargs 0x0
 	001a7a88 mov ax,0x89ef20
 	001a7a94 farcall ax
 	001a7a9c pop op
 	001a7aa4 push ax
 	001a7aac mov mar,0x8e6f20
 	001a7ab8 mov ax,mar
 	001a7ac4 pop bx
 	001a7acc cmpeq bx,ax
 	001a7ad8 mov ax,bx
 	001a7ae4 jz 0x001a93a0
		001a93a0: CONDITIONAL_JUMP
		001a7aec: FALL_THROUGH

	[001a7aec]
		001a7a50: FALL_THROUGH
 	001a7aec sourceline 0x1ee1
 	001a7af4 setfuncargs 0x0
 	001a7afc mov ax,0x6def20
 	001a7b08 farcall ax
 	001a7b10 lnot ax
 	001a7b18 jz 0x001a7b74
		001a7b74: CONDITIONAL_JUMP
		001a7b20: FALL_THROUGH

	[001a7b20]
		001a7aec: FALL_THROUGH
 	001a7b20 mov ax,0x89
 	001a7b2c farpush ax
 	001a7b34 mov ax,0xbc
 	001a7b40 farpush ax
 	001a7b48 setfuncargs 0x2
 	001a7b50 mov ax,0x6e6f20
 	001a7b5c farcall ax
 	001a7b64 farsubsp 0x2
 	001a7b6c jmp 0x001a93a0
		001a93a0: UNCONDITIONAL_JUMP

	[001a7b74]
		001a7aec: CONDITIONAL_JUMP
 	001a7b74 sourceline 0x1ee4
 	001a7b7c mov mar,0xcf6f20
 	001a7b88 memread4 ax
 	001a7b90 lnot ax
 	001a7b98 jz 0x001a8514
		001a8514: CONDITIONAL_JUMP
		001a7ba0: FALL_THROUGH

	[001a7ba0]
		001a7b74: FALL_THROUGH
 	001a7ba0 sourceline 0x1ee6
 	001a7ba8 push op
 	001a7bb0 mov ax,0x397
 	001a7bbc farpush ax
 	001a7bc4 mov ax,0x2
 	001a7bd0 farpush ax
 	001a7bd8 mov mar,0x3cef20
 	001a7be4 mov ax,mar
 	001a7bf0 mov op,ax
 	001a7bf8 setfuncargs 0x2
 	001a7c00 mov ax,0x6eef20
 	001a7c0c farcall ax
 	001a7c14 farsubsp 0x2
 	001a7c1c pop op
 	001a7c24 sourceline 0x1ee7
 	001a7c2c mov ax,0x3
 	001a7c38 mov bx,ax
 	001a7c44 mov mar,0x3cef20
 	001a7c50 mov ax,mar
 	001a7c5c push op
 	001a7c64 mov op,ax
 	001a7c6c farpush bx
 	001a7c74 setfuncargs 0x1
 	001a7c7c mov ax,0x69ef20
 	001a7c88 farcall ax
 	001a7c90 farsubsp 0x1
 	001a7c98 pop op
 	001a7ca0 sourceline 0x1ee8
 	001a7ca8 mov mar,0xba6f20
 	001a7cb4 memread4 ax
 	001a7cbc lnot ax
 	001a7cc4 jz 0x001a7edc
		001a7edc: CONDITIONAL_JUMP
		001a7ccc: FALL_THROUGH

	[001a7ccc]
		001a7ba0: FALL_THROUGH
 	001a7ccc sourceline 0x1eea
 	001a7cd4 push op
 	001a7cdc mov ax,0x2c3881
 	001a7ce8 farpush ax
 	001a7cf0 mov mar,0x3cef20
 	001a7cfc mov ax,mar
 	001a7d08 mov op,ax
 	001a7d10 setfuncargs 0x1
 	001a7d18 mov ax,0x6f6f20
 	001a7d24 farcall ax
 	001a7d2c farsubsp 0x1
 	001a7d34 pop op
 	001a7d3c sourceline 0x1eeb
 	001a7d44 push op
 	001a7d4c mov ax,0x2c38a0
 	001a7d58 farpush ax
 	001a7d60 mov mar,0xbaef20
 	001a7d6c mov ax,mar
 	001a7d78 mov op,ax
 	001a7d80 setfuncargs 0x1
 	001a7d88 mov ax,0x6f6f20
 	001a7d94 farcall ax
 	001a7d9c farsubsp 0x1
 	001a7da4 pop op
 	001a7dac sourceline 0x1eec
 	001a7db4 push op
 	001a7dbc mov ax,0x2c38d4
 	001a7dc8 farpush ax
 	001a7dd0 mov mar,0x3cef20
 	001a7ddc mov ax,mar
 	001a7de8 mov op,ax
 	001a7df0 setfuncargs 0x1
 	001a7df8 mov ax,0x6f6f20
 	001a7e04 farcall ax
 	001a7e0c farsubsp 0x1
 	001a7e14 pop op
 	001a7e1c sourceline 0x1eed
 	001a7e24 push op
 	001a7e2c mov ax,0x2c38de
 	001a7e38 farpush ax
 	001a7e40 mov mar,0xbaef20
 	001a7e4c mov ax,mar
 	001a7e58 mov op,ax
 	001a7e60 setfuncargs 0x1
 	001a7e68 mov ax,0x6f6f20
 	001a7e74 farcall ax
 	001a7e7c farsubsp 0x1
 	001a7e84 pop op
 	001a7e8c sourceline 0x1eee
 	001a7e94 mov ax,0x1
 	001a7ea0 mov mar,0xba6f20
 	001a7eac memwrite4 ax
 	001a7eb4 sourceline 0x1eef
 	001a7ebc mov ax,0x1
 	001a7ec8 mov mar,0xbb6f20
 	001a7ed4 memwrite4 ax
		001a7edc: FALL_THROUGH

	[001a7edc]
		001a7ba0: CONDITIONAL_JUMP
		001a7ccc: FALL_THROUGH
 	001a7edc sourceline 0x1ef1
 	001a7ee4 mov ax,0x0
 	001a7ef0 mov bx,ax
 	001a7efc mov mar,0x3cef20
 	001a7f08 mov ax,mar
 	001a7f14 push op
 	001a7f1c mov op,ax
 	001a7f24 farpush bx
 	001a7f2c setfuncargs 0x1
 	001a7f34 mov ax,0x436f20
 	001a7f40 farcall ax
 	001a7f48 farsubsp 0x1
 	001a7f50 pop op
 	001a7f58 sourceline 0x1ef2
 	001a7f60 push op
 	001a7f68 mov ax,0x7
 	001a7f74 farpush ax
 	001a7f7c mov mar,0x3cef20
 	001a7f88 mov ax,mar
 	001a7f94 mov op,ax
 	001a7f9c setfuncargs 0x1
 	001a7fa4 mov ax,0x51ef20
 	001a7fb0 farcall ax
 	001a7fb8 farsubsp 0x1
 	001a7fc0 pop op
 	001a7fc8 sourceline 0x1ef3
 	001a7fd0 mov ax,0x81
 	001a7fdc mov bx,ax
 	001a7fe8 mov mar,0x3cef20
 	001a7ff4 mov ax,mar
 	001a8000 push op
 	001a8008 mov op,ax
 	001a8010 farpush bx
 	001a8018 setfuncargs 0x1
 	001a8020 mov ax,0x526f20
 	001a802c farcall ax
 	001a8034 farsubsp 0x1
 	001a803c pop op
 	001a8044 sourceline 0x1ef4
 	001a804c mov ax,0xc5
 	001a8058 mov bx,ax
 	001a8064 mov mar,0x3cef20
 	001a8070 mov ax,mar
 	001a807c push op
 	001a8084 mov op,ax
 	001a808c farpush bx
 	001a8094 setfuncargs 0x1
 	001a809c mov ax,0x70ef20
 	001a80a8 farcall ax
 	001a80b0 farsubsp 0x1
 	001a80b8 pop op
 	001a80c0 sourceline 0x1ef5
 	001a80c8 push op
 	001a80d0 mov ax,0x426
 	001a80dc farpush ax
 	001a80e4 mov ax,0x397
 	001a80f0 farpush ax
 	001a80f8 mov ax,0x0
 	001a8104 farpush ax
 	001a810c mov ax,0x3
 	001a8118 farpush ax
 	001a8120 mov ax,0x5
 	001a812c farpush ax
 	001a8134 mov mar,0x3cef20
 	001a8140 mov ax,mar
 	001a814c mov op,ax
 	001a8154 setfuncargs 0x5
 	001a815c mov ax,0x536f20
 	001a8168 farcall ax
 	001a8170 farsubsp 0x5
 	001a8178 pop op
 	001a8180 sourceline 0x1ef6
 	001a8188 push op
 	001a8190 mov ax,0x2c39b4
 	001a819c farpush ax
 	001a81a4 mov mar,0x3cef20
 	001a81b0 mov ax,mar
 	001a81bc mov op,ax
 	001a81c4 setfuncargs 0x1
 	001a81cc mov ax,0x6f6f20
 	001a81d8 farcall ax
 	001a81e0 farsubsp 0x1
 	001a81e8 pop op
 	001a81f0 sourceline 0x1ef7
 	001a81f8 push op
 	001a8200 mov ax,0x2c39be
 	001a820c farpush ax
 	001a8214 mov mar,0xbaef20
 	001a8220 mov ax,mar
 	001a822c mov op,ax
 	001a8234 setfuncargs 0x1
 	001a823c mov ax,0x6f6f20
 	001a8248 farcall ax
 	001a8250 farsubsp 0x1
 	001a8258 pop op
 	001a8260 sourceline 0x1ef8
 	001a8268 push op
 	001a8270 mov ax,0x427
 	001a827c farpush ax
 	001a8284 mov ax,0x397
 	001a8290 farpush ax
 	001a8298 mov ax,0x0
 	001a82a4 farpush ax
 	001a82ac mov ax,0x3
 	001a82b8 farpush ax
 	001a82c0 mov ax,0x5
 	001a82cc farpush ax
 	001a82d4 mov mar,0x3cef20
 	001a82e0 mov ax,mar
 	001a82ec mov op,ax
 	001a82f4 setfuncargs 0x5
 	001a82fc mov ax,0x536f20
 	001a8308 farcall ax
 	001a8310 farsubsp 0x5
 	001a8318 pop op
 	001a8320 sourceline 0x1ef9
 	001a8328 push op
 	001a8330 mov ax,0x2
 	001a833c farpush ax
 	001a8344 mov mar,0x3cef20
 	001a8350 mov ax,mar
 	001a835c mov op,ax
 	001a8364 setfuncargs 0x1
 	001a836c mov ax,0x51ef20
 	001a8378 farcall ax
 	001a8380 farsubsp 0x1
 	001a8388 pop op
 	001a8390 sourceline 0x1efa
 	001a8398 mov ax,0x2
 	001a83a4 mov bx,ax
 	001a83b0 mov mar,0x3cef20
 	001a83bc mov ax,mar
 	001a83c8 push op
 	001a83d0 mov op,ax
 	001a83d8 farpush bx
 	001a83e0 setfuncargs 0x1
 	001a83e8 mov ax,0x766f20
 	001a83f4 farcall ax
 	001a83fc farsubsp 0x1
 	001a8404 pop op
 	001a840c sourceline 0x1efb
 	001a8414 mov ax,0x89
 	001a8420 mov bx,ax
 	001a842c mov mar,0x3cef20
 	001a8438 mov ax,mar
 	001a8444 push op
 	001a844c mov op,ax
 	001a8454 farpush bx
 	001a845c setfuncargs 0x1
 	001a8464 mov ax,0x526f20
 	001a8470 farcall ax
 	001a8478 farsubsp 0x1
 	001a8480 pop op
 	001a8488 sourceline 0x1efc
 	001a8490 mov ax,0xbc
 	001a849c mov bx,ax
 	001a84a8 mov mar,0x3cef20
 	001a84b4 mov ax,mar
 	001a84c0 push op
 	001a84c8 mov op,ax
 	001a84d0 farpush bx
 	001a84d8 setfuncargs 0x1
 	001a84e0 mov ax,0x70ef20
 	001a84ec farcall ax
 	001a84f4 farsubsp 0x1
 	001a84fc pop op
 	001a8504 sourceline 0x1efd
 	001a850c jmp 0x001a93a0
		001a93a0: UNCONDITIONAL_JUMP

	[001a8514]
		001a7b74: CONDITIONAL_JUMP
 	001a8514 sourceline 0x1f00
 	001a851c mov mar,0xbbef20
 	001a8528 memread4 ax
 	001a8530 lnot ax
 	001a8538 jz 0x001a8c78
		001a8c78: CONDITIONAL_JUMP
		001a8540: FALL_THROUGH

	[001a8540]
		001a8514: FALL_THROUGH
 	001a8540 sourceline 0x1f02
 	001a8548 push op
 	001a8550 mov ax,0x397
 	001a855c farpush ax
 	001a8564 mov ax,0x2
 	001a8570 farpush ax
 	001a8578 mov mar,0x3cef20
 	001a8584 mov ax,mar
 	001a8590 mov op,ax
 	001a8598 setfuncargs 0x2
 	001a85a0 mov ax,0x6eef20
 	001a85ac farcall ax
 	001a85b4 farsubsp 0x2
 	001a85bc pop op
 	001a85c4 sourceline 0x1f03
 	001a85cc mov ax,0x3
 	001a85d8 mov bx,ax
 	001a85e4 mov mar,0x3cef20
 	001a85f0 mov ax,mar
 	001a85fc push op
 	001a8604 mov op,ax
 	001a860c farpush bx
 	001a8614 setfuncargs 0x1
 	001a861c mov ax,0x69ef20
 	001a8628 farcall ax
 	001a8630 farsubsp 0x1
 	001a8638 pop op
 	001a8640 sourceline 0x1f04
 	001a8648 mov ax,0x0
 	001a8654 mov bx,ax
 	001a8660 mov mar,0x3cef20
 	001a866c mov ax,mar
 	001a8678 push op
 	001a8680 mov op,ax
 	001a8688 farpush bx
 	001a8690 setfuncargs 0x1
 	001a8698 mov ax,0x436f20
 	001a86a4 farcall ax
 	001a86ac farsubsp 0x1
 	001a86b4 pop op
 	001a86bc sourceline 0x1f05
 	001a86c4 push op
 	001a86cc mov ax,0x7
 	001a86d8 farpush ax
 	001a86e0 mov mar,0x3cef20
 	001a86ec mov ax,mar
 	001a86f8 mov op,ax
 	001a8700 setfuncargs 0x1
 	001a8708 mov ax,0x51ef20
 	001a8714 farcall ax
 	001a871c farsubsp 0x1
 	001a8724 pop op
 	001a872c sourceline 0x1f06
 	001a8734 mov ax,0x81
 	001a8740 mov bx,ax
 	001a874c mov mar,0x3cef20
 	001a8758 mov ax,mar
 	001a8764 push op
 	001a876c mov op,ax
 	001a8774 farpush bx
 	001a877c setfuncargs 0x1
 	001a8784 mov ax,0x526f20
 	001a8790 farcall ax
 	001a8798 farsubsp 0x1
 	001a87a0 pop op
 	001a87a8 sourceline 0x1f07
 	001a87b0 mov ax,0xc5
 	001a87bc mov bx,ax
 	001a87c8 mov mar,0x3cef20
 	001a87d4 mov ax,mar
 	001a87e0 push op
 	001a87e8 mov op,ax
 	001a87f0 farpush bx
 	001a87f8 setfuncargs 0x1
 	001a8800 mov ax,0x70ef20
 	001a880c farcall ax
 	001a8814 farsubsp 0x1
 	001a881c pop op
 	001a8824 sourceline 0x1f08
 	001a882c push op
 	001a8834 mov ax,0x426
 	001a8840 farpush ax
 	001a8848 mov ax,0x397
 	001a8854 farpush ax
 	001a885c mov ax,0x0
 	001a8868 farpush ax
 	001a8870 mov ax,0x3
 	001a887c farpush ax
 	001a8884 mov ax,0x5
 	001a8890 farpush ax
 	001a8898 mov mar,0x3cef20
 	001a88a4 mov ax,mar
 	001a88b0 mov op,ax
 	001a88b8 setfuncargs 0x5
 	001a88c0 mov ax,0x536f20
 	001a88cc farcall ax
 	001a88d4 farsubsp 0x5
 	001a88dc pop op
 	001a88e4 sourceline 0x1f09
 	001a88ec push op
 	001a88f4 mov ax,0x2c39b4
 	001a8900 farpush ax
 	001a8908 mov mar,0x3cef20
 	001a8914 mov ax,mar
 	001a8920 mov op,ax
 	001a8928 setfuncargs 0x1
 	001a8930 mov ax,0x6f6f20
 	001a893c farcall ax
 	001a8944 farsubsp 0x1
 	001a894c pop op
 	001a8954 sourceline 0x1f0a
 	001a895c push op
 	001a8964 mov ax,0x2c3952
 	001a8970 farpush ax
 	001a8978 mov mar,0xbaef20
 	001a8984 mov ax,mar
 	001a8990 mov op,ax
 	001a8998 setfuncargs 0x1
 	001a89a0 mov ax,0x6f6f20
 	001a89ac farcall ax
 	001a89b4 farsubsp 0x1
 	001a89bc pop op
 	001a89c4 sourceline 0x1f0b
 	001a89cc push op
 	001a89d4 mov ax,0x427
 	001a89e0 farpush ax
 	001a89e8 mov ax,0x397
 	001a89f4 farpush ax
 	001a89fc mov ax,0x0
 	001a8a08 farpush ax
 	001a8a10 mov ax,0x3
 	001a8a1c farpush ax
 	001a8a24 mov ax,0x5
 	001a8a30 farpush ax
 	001a8a38 mov mar,0x3cef20
 	001a8a44 mov ax,mar
 	001a8a50 mov op,ax
 	001a8a58 setfuncargs 0x5
 	001a8a60 mov ax,0x536f20
 	001a8a6c farcall ax
 	001a8a74 farsubsp 0x5
 	001a8a7c pop op
 	001a8a84 sourceline 0x1f0c
 	001a8a8c push op
 	001a8a94 mov ax,0x2
 	001a8aa0 farpush ax
 	001a8aa8 mov mar,0x3cef20
 	001a8ab4 mov ax,mar
 	001a8ac0 mov op,ax
 	001a8ac8 setfuncargs 0x1
 	001a8ad0 mov ax,0x51ef20
 	001a8adc farcall ax
 	001a8ae4 farsubsp 0x1
 	001a8aec pop op
 	001a8af4 sourceline 0x1f0d
 	001a8afc mov ax,0x2
 	001a8b08 mov bx,ax
 	001a8b14 mov mar,0x3cef20
 	001a8b20 mov ax,mar
 	001a8b2c push op
 	001a8b34 mov op,ax
 	001a8b3c farpush bx
 	001a8b44 setfuncargs 0x1
 	001a8b4c mov ax,0x766f20
 	001a8b58 farcall ax
 	001a8b60 farsubsp 0x1
 	001a8b68 pop op
 	001a8b70 sourceline 0x1f0e
 	001a8b78 mov ax,0x89
 	001a8b84 mov bx,ax
 	001a8b90 mov mar,0x3cef20
 	001a8b9c mov ax,mar
 	001a8ba8 push op
 	001a8bb0 mov op,ax
 	001a8bb8 farpush bx
 	001a8bc0 setfuncargs 0x1
 	001a8bc8 mov ax,0x526f20
 	001a8bd4 farcall ax
 	001a8bdc farsubsp 0x1
 	001a8be4 pop op
 	001a8bec sourceline 0x1f0f
 	001a8bf4 mov ax,0xbc
 	001a8c00 mov bx,ax
 	001a8c0c mov mar,0x3cef20
 	001a8c18 mov ax,mar
 	001a8c24 push op
 	001a8c2c mov op,ax
 	001a8c34 farpush bx
 	001a8c3c setfuncargs 0x1
 	001a8c44 mov ax,0x70ef20
 	001a8c50 farcall ax
 	001a8c58 farsubsp 0x1
 	001a8c60 pop op
 	001a8c68 sourceline 0x1f10
 	001a8c70 jmp 0x001a93a0
		001a93a0: UNCONDITIONAL_JUMP

	[001a8c78]
		001a8514: CONDITIONAL_JUMP
 	001a8c78 sourceline 0x1f13
 	001a8c80 push op
 	001a8c88 mov ax,0x397
 	001a8c94 farpush ax
 	001a8c9c mov ax,0x2
 	001a8ca8 farpush ax
 	001a8cb0 mov mar,0x3cef20
 	001a8cbc mov ax,mar
 	001a8cc8 mov op,ax
 	001a8cd0 setfuncargs 0x2
 	001a8cd8 mov ax,0x6eef20
 	001a8ce4 farcall ax
 	001a8cec farsubsp 0x2
 	001a8cf4 pop op
 	001a8cfc sourceline 0x1f14
 	001a8d04 mov ax,0x3
 	001a8d10 mov bx,ax
 	001a8d1c mov mar,0x3cef20
 	001a8d28 mov ax,mar
 	001a8d34 push op
 	001a8d3c mov op,ax
 	001a8d44 farpush bx
 	001a8d4c setfuncargs 0x1
 	001a8d54 mov ax,0x69ef20
 	001a8d60 farcall ax
 	001a8d68 farsubsp 0x1
 	001a8d70 pop op
 	001a8d78 sourceline 0x1f15
 	001a8d80 mov ax,0x0
 	001a8d8c mov bx,ax
 	001a8d98 mov mar,0x3cef20
 	001a8da4 mov ax,mar
 	001a8db0 push op
 	001a8db8 mov op,ax
 	001a8dc0 farpush bx
 	001a8dc8 setfuncargs 0x1
 	001a8dd0 mov ax,0x436f20
 	001a8ddc farcall ax
 	001a8de4 farsubsp 0x1
 	001a8dec pop op
 	001a8df4 sourceline 0x1f16
 	001a8dfc push op
 	001a8e04 mov ax,0x7
 	001a8e10 farpush ax
 	001a8e18 mov mar,0x3cef20
 	001a8e24 mov ax,mar
 	001a8e30 mov op,ax
 	001a8e38 setfuncargs 0x1
 	001a8e40 mov ax,0x51ef20
 	001a8e4c farcall ax
 	001a8e54 farsubsp 0x1
 	001a8e5c pop op
 	001a8e64 sourceline 0x1f17
 	001a8e6c mov ax,0x81
 	001a8e78 mov bx,ax
 	001a8e84 mov mar,0x3cef20
 	001a8e90 mov ax,mar
 	001a8e9c push op
 	001a8ea4 mov op,ax
 	001a8eac farpush bx
 	001a8eb4 setfuncargs 0x1
 	001a8ebc mov ax,0x526f20
 	001a8ec8 farcall ax
 	001a8ed0 farsubsp 0x1
 	001a8ed8 pop op
 	001a8ee0 sourceline 0x1f18
 	001a8ee8 mov ax,0xc5
 	001a8ef4 mov bx,ax
 	001a8f00 mov mar,0x3cef20
 	001a8f0c mov ax,mar
 	001a8f18 push op
 	001a8f20 mov op,ax
 	001a8f28 farpush bx
 	001a8f30 setfuncargs 0x1
 	001a8f38 mov ax,0x70ef20
 	001a8f44 farcall ax
 	001a8f4c farsubsp 0x1
 	001a8f54 pop op
 	001a8f5c sourceline 0x1f19
 	001a8f64 push op
 	001a8f6c mov ax,0x426
 	001a8f78 farpush ax
 	001a8f80 mov ax,0x397
 	001a8f8c farpush ax
 	001a8f94 mov ax,0x0
 	001a8fa0 farpush ax
 	001a8fa8 mov ax,0x3
 	001a8fb4 farpush ax
 	001a8fbc mov ax,0x5
 	001a8fc8 farpush ax
 	001a8fd0 mov mar,0x3cef20
 	001a8fdc mov ax,mar
 	001a8fe8 mov op,ax
 	001a8ff0 setfuncargs 0x5
 	001a8ff8 mov ax,0x536f20
 	001a9004 farcall ax
 	001a900c farsubsp 0x5
 	001a9014 pop op
 	001a901c sourceline 0x1f1a
 	001a9024 push op
 	001a902c mov ax,0x2c39b4
 	001a9038 farpush ax
 	001a9040 mov mar,0x3cef20
 	001a904c mov ax,mar
 	001a9058 mov op,ax
 	001a9060 setfuncargs 0x1
 	001a9068 mov ax,0x6f6f20
 	001a9074 farcall ax
 	001a907c farsubsp 0x1
 	001a9084 pop op
 	001a908c sourceline 0x1f1b
 	001a9094 push op
 	001a909c mov ax,0x2c39be
 	001a90a8 farpush ax
 	001a90b0 mov mar,0xbaef20
 	001a90bc mov ax,mar
 	001a90c8 mov op,ax
 	001a90d0 setfuncargs 0x1
 	001a90d8 mov ax,0x6f6f20
 	001a90e4 farcall ax
 	001a90ec farsubsp 0x1
 	001a90f4 pop op
 	001a90fc sourceline 0x1f1c
 	001a9104 push op
 	001a910c mov ax,0x427
 	001a9118 farpush ax
 	001a9120 mov ax,0x397
 	001a912c farpush ax
 	001a9134 mov ax,0x0
 	001a9140 farpush ax
 	001a9148 mov ax,0x3
 	001a9154 farpush ax
 	001a915c mov ax,0x5
 	001a9168 farpush ax
 	001a9170 mov mar,0x3cef20
 	001a917c mov ax,mar
 	001a9188 mov op,ax
 	001a9190 setfuncargs 0x5
 	001a9198 mov ax,0x536f20
 	001a91a4 farcall ax
 	001a91ac farsubsp 0x5
 	001a91b4 pop op
 	001a91bc sourceline 0x1f1d
 	001a91c4 push op
 	001a91cc mov ax,0x2
 	001a91d8 farpush ax
 	001a91e0 mov mar,0x3cef20
 	001a91ec mov ax,mar
 	001a91f8 mov op,ax
 	001a9200 setfuncargs 0x1
 	001a9208 mov ax,0x51ef20
 	001a9214 farcall ax
 	001a921c farsubsp 0x1
 	001a9224 pop op
 	001a922c sourceline 0x1f1e
 	001a9234 mov ax,0x2
 	001a9240 mov bx,ax
 	001a924c mov mar,0x3cef20
 	001a9258 mov ax,mar
 	001a9264 push op
 	001a926c mov op,ax
 	001a9274 farpush bx
 	001a927c setfuncargs 0x1
 	001a9284 mov ax,0x766f20
 	001a9290 farcall ax
 	001a9298 farsubsp 0x1
 	001a92a0 pop op
 	001a92a8 sourceline 0x1f1f
 	001a92b0 mov ax,0x89
 	001a92bc mov bx,ax
 	001a92c8 mov mar,0x3cef20
 	001a92d4 mov ax,mar
 	001a92e0 push op
 	001a92e8 mov op,ax
 	001a92f0 farpush bx
 	001a92f8 setfuncargs 0x1
 	001a9300 mov ax,0x526f20
 	001a930c farcall ax
 	001a9314 farsubsp 0x1
 	001a931c pop op
 	001a9324 sourceline 0x1f20
 	001a932c mov ax,0xbc
 	001a9338 mov bx,ax
 	001a9344 mov mar,0x3cef20
 	001a9350 mov ax,mar
 	001a935c push op
 	001a9364 mov op,ax
 	001a936c farpush bx
 	001a9374 setfuncargs 0x1
 	001a937c mov ax,0x70ef20
 	001a9388 farcall ax
 	001a9390 farsubsp 0x1
 	001a9398 pop op
		001a93a0: FALL_THROUGH

	[001a93a0]
		001a1370: UNCONDITIONAL_JUMP
		001a4390: UNCONDITIONAL_JUMP
		001a60e0: UNCONDITIONAL_JUMP
		001a7a40: UNCONDITIONAL_JUMP
		001a7a50: CONDITIONAL_JUMP
		001a7b20: UNCONDITIONAL_JUMP
		001a7edc: UNCONDITIONAL_JUMP
		001a8540: UNCONDITIONAL_JUMP
		001a8c78: FALL_THROUGH
 	001a93a0 sourceline 0x1f25
 	001a93a8 mov ax,0x0
 	001a93b4 ret

cKid_UseInv$0:
	[001a93b8]
 	001a93b8 sourceline 0x1f2b
 	001a93c0 thisaddr
 	001a93c8 sourceline 0x1f2c
*	001a93d0 mov mar,0x3cef20
 	001a93dc mov ax,mar
 	001a93e8 push op
 	001a93f0 mov op,ax
 	001a93f8 setfuncargs 0x0
 	001a9400 mov ax,0x89ef20
 	001a940c farcall ax
 	001a9414 pop op
 	001a941c push ax
 	001a9424 mov mar,0x926f20
 	001a9430 mov ax,mar
 	001a943c pop bx
 	001a9444 cmpeq bx,ax
 	001a9450 mov ax,bx
 	001a945c jz 0x001ac944
		001ac944: CONDITIONAL_JUMP
		001a9464: FALL_THROUGH

	[001a9464]
		001a93b8: FALL_THROUGH
 	001a9464 sourceline 0x1f2e
 	001a946c mov mar,0xc2ef20
 	001a9478 memread4 ax
 	001a9480 push ax
 	001a9488 mov ax,0x0
 	001a9494 pop bx
 	001a949c cmpeq bx,ax
 	001a94a8 mov ax,bx
 	001a94b4 jz 0x001ab2a4
		001ab2a4: CONDITIONAL_JUMP
		001a94bc: FALL_THROUGH

	[001a94bc]
		001a9464: FALL_THROUGH
 	001a94bc sourceline 0x1f30
 	001a94c4 setfuncargs 0x0
 	001a94cc mov ax,0x6def20
 	001a94d8 farcall ax
 	001a94e0 lnot ax
 	001a94e8 jz 0x001a9544
		001a9544: CONDITIONAL_JUMP
		001a94f0: FALL_THROUGH

	[001a94f0]
		001a94bc: FALL_THROUGH
 	001a94f0 mov ax,0x8b
 	001a94fc farpush ax
 	001a9504 mov ax,0xc0
 	001a9510 farpush ax
 	001a9518 setfuncargs 0x2
 	001a9520 mov ax,0x6e6f20
 	001a952c farcall ax
 	001a9534 farsubsp 0x2
 	001a953c jmp 0x001ab294
		001ab294: UNCONDITIONAL_JUMP

	[001a9544]
		001a94bc: CONDITIONAL_JUMP
 	001a9544 sourceline 0x1f33
 	001a954c push op
 	001a9554 mov ax,0x397
 	001a9560 farpush ax
 	001a9568 mov ax,0x5
 	001a9574 farpush ax
 	001a957c mov mar,0x3cef20
 	001a9588 mov ax,mar
 	001a9594 mov op,ax
 	001a959c setfuncargs 0x2
 	001a95a4 mov ax,0x6eef20
 	001a95b0 farcall ax
 	001a95b8 farsubsp 0x2
 	001a95c0 pop op
 	001a95c8 sourceline 0x1f34
 	001a95d0 mov ax,0x3
 	001a95dc mov bx,ax
 	001a95e8 mov mar,0x3cef20
 	001a95f4 mov ax,mar
 	001a9600 push op
 	001a9608 mov op,ax
 	001a9610 farpush bx
 	001a9618 setfuncargs 0x1
 	001a9620 mov ax,0x69ef20
 	001a962c farcall ax
 	001a9634 farsubsp 0x1
 	001a963c pop op
 	001a9644 sourceline 0x1f35
 	001a964c push op
 	001a9654 mov ax,0x2c3a01
 	001a9660 farpush ax
 	001a9668 mov mar,0x3cef20
 	001a9674 mov ax,mar
 	001a9680 mov op,ax
 	001a9688 setfuncargs 0x1
 	001a9690 mov ax,0x6f6f20
 	001a969c farcall ax
 	001a96a4 farsubsp 0x1
 	001a96ac pop op
 	001a96b4 sourceline 0x1f36
 	001a96bc push op
 	001a96c4 mov ax,0x81
 	001a96d0 farpush ax
 	001a96d8 mov mar,0xc3ef20
 	001a96e4 mov ax,mar
 	001a96f0 mov op,ax
 	001a96f8 setfuncargs 0x1
 	001a9700 mov ax,0x51ef20
 	001a970c farcall ax
 	001a9714 farsubsp 0x1
 	001a971c pop op
 	001a9724 sourceline 0x1f37
 	001a972c mov ax,0x84
 	001a9738 mov bx,ax
 	001a9744 mov mar,0xc3ef20
 	001a9750 mov ax,mar
 	001a975c push op
 	001a9764 mov op,ax
 	001a976c farpush bx
 	001a9774 setfuncargs 0x1
 	001a977c mov ax,0x526f20
 	001a9788 farcall ax
 	001a9790 farsubsp 0x1
 	001a9798 pop op
 	001a97a0 sourceline 0x1f38
 	001a97a8 mov ax,0xd6
 	001a97b4 mov bx,ax
 	001a97c0 mov mar,0xc3ef20
 	001a97cc mov ax,mar
 	001a97d8 push op
 	001a97e0 mov op,ax
 	001a97e8 farpush bx
 	001a97f0 setfuncargs 0x1
 	001a97f8 mov ax,0x70ef20
 	001a9804 farcall ax
 	001a980c farsubsp 0x1
 	001a9814 pop op
 	001a981c sourceline 0x1f39
 	001a9824 push op
 	001a982c mov ax,0x426
 	001a9838 farpush ax
 	001a9840 mov ax,0x397
 	001a984c farpush ax
 	001a9854 mov ax,0x0
 	001a9860 farpush ax
 	001a9868 mov ax,0x3
 	001a9874 farpush ax
 	001a987c mov ax,0x0
 	001a9888 farpush ax
 	001a9890 mov mar,0xc3ef20
 	001a989c mov ax,mar
 	001a98a8 mov op,ax
 	001a98b0 setfuncargs 0x5
 	001a98b8 mov ax,0x536f20
 	001a98c4 farcall ax
 	001a98cc farsubsp 0x5
 	001a98d4 pop op
 	001a98dc sourceline 0x1f3a
 	001a98e4 push op
 	001a98ec mov ax,0x4c
 	001a98f8 farpush ax
 	001a9900 mov mar,0x3cef20
 	001a990c mov ax,mar
 	001a9918 mov op,ax
 	001a9920 setfuncargs 0x1
 	001a9928 mov ax,0x51ef20
 	001a9934 farcall ax
 	001a993c farsubsp 0x1
 	001a9944 pop op
 	001a994c sourceline 0x1f3b
 	001a9954 mov ax,0x96
 	001a9960 mov bx,ax
 	001a996c mov mar,0x3cef20
 	001a9978 mov ax,mar
 	001a9984 push op
 	001a998c mov op,ax
 	001a9994 farpush bx
 	001a999c setfuncargs 0x1
 	001a99a4 mov ax,0x526f20
 	001a99b0 farcall ax
 	001a99b8 farsubsp 0x1
 	001a99c0 pop op
 	001a99c8 sourceline 0x1f3c
 	001a99d0 mov ax,0xc1
 	001a99dc mov bx,ax
 	001a99e8 mov mar,0x3cef20
 	001a99f4 mov ax,mar
 	001a9a00 push op
 	001a9a08 mov op,ax
 	001a9a10 farpush bx
 	001a9a18 setfuncargs 0x1
 	001a9a20 mov ax,0x70ef20
 	001a9a2c farcall ax
 	001a9a34 farsubsp 0x1
 	001a9a3c pop op
 	001a9a44 sourceline 0x1f3d
 	001a9a4c push op
 	001a9a54 mov ax,0x427
 	001a9a60 farpush ax
 	001a9a68 mov ax,0x398
 	001a9a74 farpush ax
 	001a9a7c mov ax,0x0
 	001a9a88 farpush ax
 	001a9a90 mov ax,0x3
 	001a9a9c farpush ax
 	001a9aa4 mov ax,0x0
 	001a9ab0 farpush ax
 	001a9ab8 mov mar,0xc3ef20
 	001a9ac4 mov ax,mar
 	001a9ad0 mov op,ax
 	001a9ad8 setfuncargs 0x5
 	001a9ae0 mov ax,0x536f20
 	001a9aec farcall ax
 	001a9af4 farsubsp 0x5
 	001a9afc pop op
 	001a9b04 sourceline 0x1f3e
 	001a9b0c push op
 	001a9b14 mov ax,0x426
 	001a9b20 farpush ax
 	001a9b28 mov ax,0x397
 	001a9b34 farpush ax
 	001a9b3c mov ax,0x0
 	001a9b48 farpush ax
 	001a9b50 mov ax,0x3
 	001a9b5c farpush ax
 	001a9b64 mov ax,0x0
 	001a9b70 farpush ax
 	001a9b78 mov mar,0x3cef20
 	001a9b84 mov ax,mar
 	001a9b90 mov op,ax
 	001a9b98 setfuncargs 0x5
 	001a9ba0 mov ax,0x536f20
 	001a9bac farcall ax
 	001a9bb4 farsubsp 0x5
 	001a9bbc pop op
 	001a9bc4 sourceline 0x1f3f
 	001a9bcc mov ax,0x1e
 	001a9bd8 farpush ax
 	001a9be0 setfuncargs 0x1
 	001a9be8 mov ax,0x426f20
 	001a9bf4 farcall ax
 	001a9bfc farsubsp 0x1
 	001a9c04 sourceline 0x1f40
 	001a9c0c push op
 	001a9c14 mov ax,0x80
 	001a9c20 farpush ax
 	001a9c28 mov mar,0xc3ef20
 	001a9c34 mov ax,mar
 	001a9c40 mov op,ax
 	001a9c48 setfuncargs 0x1
 	001a9c50 mov ax,0x51ef20
 	001a9c5c farcall ax
 	001a9c64 farsubsp 0x1
 	001a9c6c pop op
 	001a9c74 sourceline 0x1f41
 	001a9c7c mov ax,0x88
 	001a9c88 mov bx,ax
 	001a9c94 mov mar,0xc3ef20
 	001a9ca0 mov ax,mar
 	001a9cac push op
 	001a9cb4 mov op,ax
 	001a9cbc farpush bx
 	001a9cc4 setfuncargs 0x1
 	001a9ccc mov ax,0x526f20
 	001a9cd8 farcall ax
 	001a9ce0 farsubsp 0x1
 	001a9ce8 pop op
 	001a9cf0 sourceline 0x1f42
 	001a9cf8 mov ax,0xd9
 	001a9d04 mov bx,ax
 	001a9d10 mov mar,0xc3ef20
 	001a9d1c mov ax,mar
 	001a9d28 push op
 	001a9d30 mov op,ax
 	001a9d38 farpush bx
 	001a9d40 setfuncargs 0x1
 	001a9d48 mov ax,0x70ef20
 	001a9d54 farcall ax
 	001a9d5c farsubsp 0x1
 	001a9d64 pop op
 	001a9d6c sourceline 0x1f43
 	001a9d74 mov ax,0x3
 	001a9d80 mov bx,ax
 	001a9d8c mov mar,0x3cef20
 	001a9d98 mov ax,mar
 	001a9da4 push op
 	001a9dac mov op,ax
 	001a9db4 farpush bx
 	001a9dbc setfuncargs 0x1
 	001a9dc4 mov ax,0x69ef20
 	001a9dd0 farcall ax
 	001a9dd8 farsubsp 0x1
 	001a9de0 pop op
 	001a9de8 sourceline 0x1f44
 	001a9df0 push op
 	001a9df8 mov ax,0x2c3a15
 	001a9e04 farpush ax
 	001a9e0c mov mar,0x3cef20
 	001a9e18 mov ax,mar
 	001a9e24 mov op,ax
 	001a9e2c setfuncargs 0x1
 	001a9e34 mov ax,0x6f6f20
 	001a9e40 farcall ax
 	001a9e48 farsubsp 0x1
 	001a9e50 pop op
 	001a9e58 sourceline 0x1f45
 	001a9e60 push op
 	001a9e68 mov ax,0x2c3a24
 	001a9e74 farpush ax
 	001a9e7c mov mar,0xc3ef20
 	001a9e88 mov ax,mar
 	001a9e94 mov op,ax
 	001a9e9c setfuncargs 0x1
 	001a9ea4 mov ax,0x6f6f20
 	001a9eb0 farcall ax
 	001a9eb8 farsubsp 0x1
 	001a9ec0 pop op
 	001a9ec8 sourceline 0x1f46
 	001a9ed0 push op
 	001a9ed8 mov ax,0x2c3a3a
 	001a9ee4 farpush ax
 	001a9eec mov mar,0x3cef20
 	001a9ef8 mov ax,mar
 	001a9f04 mov op,ax
 	001a9f0c setfuncargs 0x1
 	001a9f14 mov ax,0x6f6f20
 	001a9f20 farcall ax
 	001a9f28 farsubsp 0x1
 	001a9f30 pop op
 	001a9f38 sourceline 0x1f47
 	001a9f40 push op
 	001a9f48 mov ax,0x2c3a44
 	001a9f54 farpush ax
 	001a9f5c mov mar,0xc3ef20
 	001a9f68 mov ax,mar
 	001a9f74 mov op,ax
 	001a9f7c setfuncargs 0x1
 	001a9f84 mov ax,0x6f6f20
 	001a9f90 farcall ax
 	001a9f98 farsubsp 0x1
 	001a9fa0 pop op
 	001a9fa8 sourceline 0x1f48
 	001a9fb0 push op
 	001a9fb8 mov ax,0x2c3bc0
 	001a9fc4 farpush ax
 	001a9fcc mov mar,0x3cef20
 	001a9fd8 mov ax,mar
 	001a9fe4 mov op,ax
 	001a9fec setfuncargs 0x1
 	001a9ff4 mov ax,0x6f6f20
 	001aa000 farcall ax
 	001aa008 farsubsp 0x1
 	001aa010 pop op
 	001aa018 sourceline 0x1f4a
 	001aa020 mov ax,0x270f
 	001aa02c mov bx,ax
 	001aa038 mov mar,0x3cef20
 	001aa044 mov ax,mar
 	001aa050 push op
 	001aa058 mov op,ax
 	001aa060 farpush bx
 	001aa068 setfuncargs 0x1
 	001aa070 mov ax,0xcaef20
 	001aa07c farcall ax
 	001aa084 farsubsp 0x1
 	001aa08c pop op
 	001aa094 sourceline 0x1f4b
 	001aa09c push op
 	001aa0a4 mov ax,0x2
 	001aa0b0 farpush ax
 	001aa0b8 mov mar,0x3cef20
 	001aa0c4 mov ax,mar
 	001aa0d0 mov op,ax
 	001aa0d8 setfuncargs 0x1
 	001aa0e0 mov ax,0x51ef20
 	001aa0ec farcall ax
 	001aa0f4 farsubsp 0x1
 	001aa0fc pop op
 	001aa104 sourceline 0x1f4c
 	001aa10c mov ax,0x8d
 	001aa118 mov bx,ax
 	001aa124 mov mar,0x3cef20
 	001aa130 mov ax,mar
 	001aa13c push op
 	001aa144 mov op,ax
 	001aa14c farpush bx
 	001aa154 setfuncargs 0x1
 	001aa15c mov ax,0x526f20
 	001aa168 farcall ax
 	001aa170 farsubsp 0x1
 	001aa178 pop op
 	001aa180 sourceline 0x1f4d
 	001aa188 mov ax,0xb3
 	001aa194 mov bx,ax
 	001aa1a0 mov mar,0x3cef20
 	001aa1ac mov ax,mar
 	001aa1b8 push op
 	001aa1c0 mov op,ax
 	001aa1c8 farpush bx
 	001aa1d0 setfuncargs 0x1
 	001aa1d8 mov ax,0x70ef20
 	001aa1e4 farcall ax
 	001aa1ec farsubsp 0x1
 	001aa1f4 pop op
 	001aa1fc sourceline 0x1f4e
 	001aa204 mov ax,0x5
 	001aa210 mov bx,ax
 	001aa21c mov mar,0x3cef20
 	001aa228 mov ax,mar
 	001aa234 push op
 	001aa23c mov op,ax
 	001aa244 farpush bx
 	001aa24c setfuncargs 0x1
 	001aa254 mov ax,0x766f20
 	001aa260 farcall ax
 	001aa268 farsubsp 0x1
 	001aa270 pop op
 	001aa278 sourceline 0x1f4f
 	001aa280 push op
 	001aa288 mov ax,0x131
 	001aa294 farpush ax
 	001aa29c mov ax,0x397
 	001aa2a8 farpush ax
 	001aa2b0 mov ax,0x8c
 	001aa2bc farpush ax
 	001aa2c4 mov ax,0xb6
 	001aa2d0 farpush ax
 	001aa2d8 mov mar,0x3cef20
 	001aa2e4 mov ax,mar
 	001aa2f0 mov op,ax
 	001aa2f8 setfuncargs 0x4
 	001aa300 mov ax,0xb2ef20
 	001aa30c farcall ax
 	001aa314 farsubsp 0x4
 	001aa31c pop op
 	001aa324 sourceline 0x1f50
 	001aa32c mov ax,0x14
 	001aa338 farpush ax
 	001aa340 setfuncargs 0x1
 	001aa348 mov ax,0x426f20
 	001aa354 farcall ax
 	001aa35c farsubsp 0x1
 	001aa364 sourceline 0x1f51
 	001aa36c push op
 	001aa374 mov ax,0xe
 	001aa380 farpush ax
 	001aa388 mov mar,0x3cef20
 	001aa394 mov ax,mar
 	001aa3a0 mov op,ax
 	001aa3a8 setfuncargs 0x1
 	001aa3b0 mov ax,0x51ef20
 	001aa3bc farcall ax
 	001aa3c4 farsubsp 0x1
 	001aa3cc pop op
 	001aa3d4 sourceline 0x1f52
 	001aa3dc mov mar,0x3cef20
 	001aa3e8 mov ax,mar
 	001aa3f4 push op
 	001aa3fc mov op,ax
 	001aa404 setfuncargs 0x0
 	001aa40c mov ax,0x78ef20
 	001aa418 farcall ax
 	001aa420 pop op
 	001aa428 push ax
 	001aa430 mov ax,0x7
 	001aa43c pop bx
 	001aa444 sub bx,ax
 	001aa450 mov ax,bx
 	001aa45c mov bx,ax
 	001aa468 mov mar,0x3cef20
 	001aa474 mov ax,mar
 	001aa480 push op
 	001aa488 mov op,ax
 	001aa490 farpush bx
 	001aa498 setfuncargs 0x1
 	001aa4a0 mov ax,0x526f20
 	001aa4ac farcall ax
 	001aa4b4 farsubsp 0x1
 	001aa4bc pop op
 	001aa4c4 sourceline 0x1f53
 	001aa4cc mov mar,0x3cef20
 	001aa4d8 mov ax,mar
 	001aa4e4 push op
 	001aa4ec mov op,ax
 	001aa4f4 setfuncargs 0x0
 	001aa4fc mov ax,0xb36f20
 	001aa508 farcall ax
 	001aa510 pop op
 	001aa518 push ax
 	001aa520 mov ax,0x5
 	001aa52c pop bx
 	001aa534 add bx,ax
 	001aa540 mov ax,bx
 	001aa54c mov bx,ax
 	001aa558 mov mar,0x3cef20
 	001aa564 mov ax,mar
 	001aa570 push op
 	001aa578 mov op,ax
 	001aa580 farpush bx
 	001aa588 setfuncargs 0x1
 	001aa590 mov ax,0x70ef20
 	001aa59c farcall ax
 	001aa5a4 farsubsp 0x1
 	001aa5ac pop op
 	001aa5b4 sourceline 0x1f54
 	001aa5bc push op
 	001aa5c4 mov ax,0x426
 	001aa5d0 farpush ax
 	001aa5d8 mov ax,0x398
 	001aa5e4 farpush ax
 	001aa5ec mov ax,0x0
 	001aa5f8 farpush ax
 	001aa600 mov ax,0x3
 	001aa60c farpush ax
 	001aa614 mov ax,0x1
 	001aa620 farpush ax
 	001aa628 mov mar,0x3cef20
 	001aa634 mov ax,mar
 	001aa640 mov op,ax
 	001aa648 setfuncargs 0x5
 	001aa650 mov ax,0x536f20
 	001aa65c farcall ax
 	001aa664 farsubsp 0x5
 	001aa66c pop op
 	001aa674 sourceline 0x1f55
 	001aa67c push op
 	001aa684 mov ax,0x82
 	001aa690 farpush ax
 	001aa698 mov mar,0xc3ef20
 	001aa6a4 mov ax,mar
 	001aa6b0 mov op,ax
 	001aa6b8 setfuncargs 0x1
 	001aa6c0 mov ax,0x51ef20
 	001aa6cc farcall ax
 	001aa6d4 farsubsp 0x1
 	001aa6dc pop op
 	001aa6e4 sourceline 0x1f56
 	001aa6ec mov ax,0xd3
 	001aa6f8 mov bx,ax
 	001aa704 mov mar,0xc3ef20
 	001aa710 mov ax,mar
 	001aa71c push op
 	001aa724 mov op,ax
 	001aa72c farpush bx
 	001aa734 setfuncargs 0x1
 	001aa73c mov ax,0x70ef20
 	001aa748 farcall ax
 	001aa750 farsubsp 0x1
 	001aa758 pop op
 	001aa760 sourceline 0x1f57
 	001aa768 mov mar,0xc3ef20
 	001aa774 mov ax,mar
 	001aa780 push op
 	001aa788 mov op,ax
 	001aa790 setfuncargs 0x0
 	001aa798 mov ax,0x78ef20
 	001aa7a4 farcall ax
 	001aa7ac pop op
 	001aa7b4 push ax
 	001aa7bc mov ax,0x3
 	001aa7c8 pop bx
 	001aa7d0 sub bx,ax
 	001aa7dc mov ax,bx
 	001aa7e8 mov bx,ax
 	001aa7f4 mov mar,0xc3ef20
 	001aa800 mov ax,mar
 	001aa80c push op
 	001aa814 mov op,ax
 	001aa81c farpush bx
 	001aa824 setfuncargs 0x1
 	001aa82c mov ax,0x526f20
 	001aa838 farcall ax
 	001aa840 farsubsp 0x1
 	001aa848 pop op
 	001aa850 sourceline 0x1f58
 	001aa858 push op
 	001aa860 mov ax,0x426
 	001aa86c farpush ax
 	001aa874 mov ax,0x397
 	001aa880 farpush ax
 	001aa888 mov ax,0x0
 	001aa894 farpush ax
 	001aa89c mov ax,0x3
 	001aa8a8 farpush ax
 	001aa8b0 mov ax,0x0
 	001aa8bc farpush ax
 	001aa8c4 mov mar,0xc3ef20
 	001aa8d0 mov ax,mar
 	001aa8dc mov op,ax
 	001aa8e4 setfuncargs 0x5
 	001aa8ec mov ax,0x536f20
 	001aa8f8 farcall ax
 	001aa900 farsubsp 0x5
 	001aa908 pop op
 	001aa910 sourceline 0x1f59
 	001aa918 push op
 	001aa920 mov ax,0x427
 	001aa92c farpush ax
 	001aa934 mov ax,0x398
 	001aa940 farpush ax
 	001aa948 mov ax,0x0
 	001aa954 farpush ax
 	001aa95c mov ax,0x3
 	001aa968 farpush ax
 	001aa970 mov ax,0x0
 	001aa97c farpush ax
 	001aa984 mov mar,0xc3ef20
 	001aa990 mov ax,mar
 	001aa99c mov op,ax
 	001aa9a4 setfuncargs 0x5
 	001aa9ac mov ax,0x536f20
 	001aa9b8 farcall ax
 	001aa9c0 farsubsp 0x5
 	001aa9c8 pop op
 	001aa9d0 sourceline 0x1f5a
 	001aa9d8 push op
 	001aa9e0 mov ax,0x427
 	001aa9ec farpush ax
 	001aa9f4 mov ax,0x397
 	001aaa00 farpush ax
 	001aaa08 mov ax,0x0
 	001aaa14 farpush ax
 	001aaa1c mov ax,0x3
 	001aaa28 farpush ax
 	001aaa30 mov ax,0x1
 	001aaa3c farpush ax
 	001aaa44 mov mar,0x3cef20
 	001aaa50 mov ax,mar
 	001aaa5c mov op,ax
 	001aaa64 setfuncargs 0x5
 	001aaa6c mov ax,0x536f20
 	001aaa78 farcall ax
 	001aaa80 farsubsp 0x5
 	001aaa88 pop op
 	001aaa90 sourceline 0x1f5b
 	001aaa98 push op
 	001aaaa0 mov ax,0x2
 	001aaaac farpush ax
 	001aaab4 mov mar,0x3cef20
 	001aaac0 mov ax,mar
 	001aaacc mov op,ax
 	001aaad4 setfuncargs 0x1
 	001aaadc mov ax,0x51ef20
 	001aaae8 farcall ax
 	001aaaf0 farsubsp 0x1
 	001aaaf8 pop op
 	001aab00 sourceline 0x1f5c
 	001aab08 mov ax,0x5
 	001aab14 mov bx,ax
 	001aab20 mov mar,0x3cef20
 	001aab2c mov ax,mar
 	001aab38 push op
 	001aab40 mov op,ax
 	001aab48 farpush bx
 	001aab50 setfuncargs 0x1
 	001aab58 mov ax,0x766f20
 	001aab64 farcall ax
 	001aab6c farsubsp 0x1
 	001aab74 pop op
 	001aab7c sourceline 0x1f5d
 	001aab84 mov ax,0x8c
 	001aab90 mov bx,ax
 	001aab9c mov mar,0x3cef20
 	001aaba8 mov ax,mar
 	001aabb4 push op
 	001aabbc mov op,ax
 	001aabc4 farpush bx
 	001aabcc setfuncargs 0x1
 	001aabd4 mov ax,0x526f20
 	001aabe0 farcall ax
 	001aabe8 farsubsp 0x1
 	001aabf0 pop op
 	001aabf8 sourceline 0x1f5e
 	001aac00 mov ax,0xb6
 	001aac0c mov bx,ax
 	001aac18 mov mar,0x3cef20
 	001aac24 mov ax,mar
 	001aac30 push op
 	001aac38 mov op,ax
 	001aac40 farpush bx
 	001aac48 setfuncargs 0x1
 	001aac50 mov ax,0x70ef20
 	001aac5c farcall ax
 	001aac64 farsubsp 0x1
 	001aac6c pop op
 	001aac74 sourceline 0x1f5f
 	001aac7c push op
 	001aac84 mov ax,0x2c3bee
 	001aac90 farpush ax
 	001aac98 mov mar,0xc3ef20
 	001aaca4 mov ax,mar
 	001aacb0 mov op,ax
 	001aacb8 setfuncargs 0x1
 	001aacc0 mov ax,0x6f6f20
 	001aaccc farcall ax
 	001aacd4 farsubsp 0x1
 	001aacdc pop op
 	001aace4 sourceline 0x1f60
 	001aacec push op
 	001aacf4 mov ax,0x2c3c07
 	001aad00 farpush ax
 	001aad08 mov mar,0x3cef20
 	001aad14 mov ax,mar
 	001aad20 mov op,ax
 	001aad28 setfuncargs 0x1
 	001aad30 mov ax,0x6f6f20
 	001aad3c farcall ax
 	001aad44 farsubsp 0x1
 	001aad4c pop op
 	001aad54 sourceline 0x1f61
 	001aad5c push op
 	001aad64 mov ax,0x2c3c46
 	001aad70 farpush ax
 	001aad78 mov mar,0xc3ef20
 	001aad84 mov ax,mar
 	001aad90 mov op,ax
 	001aad98 setfuncargs 0x1
 	001aada0 mov ax,0x6f6f20
 	001aadac farcall ax
 	001aadb4 farsubsp 0x1
 	001aadbc pop op
 	001aadc4 sourceline 0x1f62
 	001aadcc push op
 	001aadd4 mov ax,0x2c3ca1
 	001aade0 farpush ax
 	001aade8 mov mar,0x3cef20
 	001aadf4 mov ax,mar
 	001aae00 mov op,ax
 	001aae08 setfuncargs 0x1
 	001aae10 mov ax,0x6f6f20
 	001aae1c farcall ax
 	001aae24 farsubsp 0x1
 	001aae2c pop op
 	001aae34 sourceline 0x1f63
 	001aae3c push op
 	001aae44 mov ax,0x80
 	001aae50 farpush ax
 	001aae58 mov mar,0xc3ef20
 	001aae64 mov ax,mar
 	001aae70 mov op,ax
 	001aae78 setfuncargs 0x1
 	001aae80 mov ax,0x51ef20
 	001aae8c farcall ax
 	001aae94 farsubsp 0x1
 	001aae9c pop op
 	001aaea4 sourceline 0x1f64
 	001aaeac mov ax,0x88
 	001aaeb8 mov bx,ax
 	001aaec4 mov mar,0xc3ef20
 	001aaed0 mov ax,mar
 	001aaedc push op
 	001aaee4 mov op,ax
 	001aaeec farpush bx
 	001aaef4 setfuncargs 0x1
 	001aaefc mov ax,0x526f20
 	001aaf08 farcall ax
 	001aaf10 farsubsp 0x1
 	001aaf18 pop op
 	001aaf20 sourceline 0x1f65
 	001aaf28 mov ax,0xd9
 	001aaf34 mov bx,ax
 	001aaf40 mov mar,0xc3ef20
 	001aaf4c mov ax,mar
 	001aaf58 push op
 	001aaf60 mov op,ax
 	001aaf68 farpush bx
 	001aaf70 setfuncargs 0x1
 	001aaf78 mov ax,0x70ef20
 	001aaf84 farcall ax
 	001aaf8c farsubsp 0x1
 	001aaf94 pop op
 	001aaf9c sourceline 0x1f66
 	001aafa4 push op
 	001aafac mov ax,0x427
 	001aafb8 farpush ax
 	001aafc0 mov ax,0x397
 	001aafcc farpush ax
 	001aafd4 mov ax,0x0
 	001aafe0 farpush ax
 	001aafe8 mov ax,0x3
 	001aaff4 farpush ax
 	001aaffc mov ax,0x0
 	001ab008 farpush ax
 	001ab010 mov mar,0xc3ef20
 	001ab01c mov ax,mar
 	001ab028 mov op,ax
 	001ab030 setfuncargs 0x5
 	001ab038 mov ax,0x536f20
 	001ab044 farcall ax
 	001ab04c farsubsp 0x5
 	001ab054 pop op
 	001ab05c sourceline 0x1f67
 	001ab064 mov ax,0x0
 	001ab070 mov bx,ax
 	001ab07c mov mar,0x3cef20
 	001ab088 mov ax,mar
 	001ab094 push op
 	001ab09c mov op,ax
 	001ab0a4 farpush bx
 	001ab0ac setfuncargs 0x1
 	001ab0b4 mov ax,0x436f20
 	001ab0c0 farcall ax
 	001ab0c8 farsubsp 0x1
 	001ab0d0 pop op
 	001ab0d8 sourceline 0x1f68
 	001ab0e0 mov ax,0x1
 	001ab0ec mov mar,0xd26f20
 	001ab0f8 memwrite4 ax
 	001ab100 sourceline 0x1f69
 	001ab108 mov ax,0x1
 	001ab114 mov mar,0xd2ef20
 	001ab120 memwrite4 ax
 	001ab128 sourceline 0x1f6a
 	001ab130 mov ax,0x1
 	001ab13c push ax
 	001ab144 mov ax,0x2
 	001ab150 assertlte ax,0x32
 	001ab15c mul ax,0x8
 	001ab168 mov cx,ax
 	001ab174 pop ax
 	001ab17c mov bx,ax
 	001ab188 mov mar,0x6c6f20
 	001ab194 add mar,cx
 	001ab1a0 mov ax,mar
 	001ab1ac push op
 	001ab1b4 mov op,ax
 	001ab1bc farpush bx
 	001ab1c4 setfuncargs 0x1
 	001ab1cc mov ax,0xa66f20
 	001ab1d8 farcall ax
 	001ab1e0 farsubsp 0x1
 	001ab1e8 pop op
 	001ab1f0 sourceline 0x1f6b
 	001ab1f8 mov ax,0x2
 	001ab204 mov mar,0xc2ef20
 	001ab210 memwrite4 ax
 	001ab218 sourceline 0x1f6c
 	001ab220 mov ax,0x0
 	001ab22c mov bx,ax
 	001ab238 mov mar,0x3cef20
 	001ab244 mov ax,mar
 	001ab250 push op
 	001ab258 mov op,ax
 	001ab260 farpush bx
 	001ab268 setfuncargs 0x1
 	001ab270 mov ax,0xcaef20
 	001ab27c farcall ax
 	001ab284 farsubsp 0x1
 	001ab28c pop op
		001ab294: FALL_THROUGH

	[001ab294]
		001a94f0: UNCONDITIONAL_JUMP
		001a9544: FALL_THROUGH
 	001ab294 sourceline 0x1f6e
 	001ab29c jmp 0x001ac934
		001ac934: UNCONDITIONAL_JUMP

	[001ab2a4]
		001a9464: CONDITIONAL_JUMP
 	001ab2a4 sourceline 0x1f71
 	001ab2ac mov mar,0xd2ef20
 	001ab2b8 memread4 ax
 	001ab2c0 lnot ax
 	001ab2c8 jz 0x001ac624
		001ac624: CONDITIONAL_JUMP
		001ab2d0: FALL_THROUGH

	[001ab2d0]
		001ab2a4: FALL_THROUGH
 	001ab2d0 sourceline 0x1f73
 	001ab2d8 setfuncargs 0x0
 	001ab2e0 mov ax,0x6def20
 	001ab2ec farcall ax
 	001ab2f4 lnot ax
 	001ab2fc jz 0x001ab358
		001ab358: CONDITIONAL_JUMP
		001ab304: FALL_THROUGH

	[001ab304]
		001ab2d0: FALL_THROUGH
 	001ab304 mov ax,0x8c
 	001ab310 farpush ax
 	001ab318 mov ax,0xb6
 	001ab324 farpush ax
 	001ab32c setfuncargs 0x2
 	001ab334 mov ax,0x6e6f20
 	001ab340 farcall ax
 	001ab348 farsubsp 0x2
 	001ab350 jmp 0x001ac614
		001ac614: UNCONDITIONAL_JUMP

	[001ab358]
		001ab2d0: CONDITIONAL_JUMP
 	001ab358 sourceline 0x1f76
 	001ab360 push op
 	001ab368 mov ax,0x397
 	001ab374 farpush ax
 	001ab37c mov ax,0x5
 	001ab388 farpush ax
 	001ab390 mov mar,0x3cef20
 	001ab39c mov ax,mar
 	001ab3a8 mov op,ax
 	001ab3b0 setfuncargs 0x2
 	001ab3b8 mov ax,0x6eef20
 	001ab3c4 farcall ax
 	001ab3cc farsubsp 0x2
 	001ab3d4 pop op
 	001ab3dc sourceline 0x1f77
 	001ab3e4 push op
 	001ab3ec mov ax,0x426
 	001ab3f8 farpush ax
 	001ab400 mov ax,0x398
 	001ab40c farpush ax
 	001ab414 mov ax,0x0
 	001ab420 farpush ax
 	001ab428 mov ax,0x3
 	001ab434 farpush ax
 	001ab43c mov ax,0x0
 	001ab448 farpush ax
 	001ab450 mov mar,0xc3ef20
 	001ab45c mov ax,mar
 	001ab468 mov op,ax
 	001ab470 setfuncargs 0x5
 	001ab478 mov ax,0x536f20
 	001ab484 farcall ax
 	001ab48c farsubsp 0x5
 	001ab494 pop op
 	001ab49c sourceline 0x1f78
 	001ab4a4 mov ax,0x3
 	001ab4b0 mov bx,ax
 	001ab4bc mov mar,0x3cef20
 	001ab4c8 mov ax,mar
 	001ab4d4 push op
 	001ab4dc mov op,ax
 	001ab4e4 farpush bx
 	001ab4ec setfuncargs 0x1
 	001ab4f4 mov ax,0x69ef20
 	001ab500 farcall ax
 	001ab508 farsubsp 0x1
 	001ab510 pop op
 	001ab518 sourceline 0x1f79
 	001ab520 push op
 	001ab528 mov ax,0x2c3b79
 	001ab534 farpush ax
 	001ab53c mov mar,0x3cef20
 	001ab548 mov ax,mar
 	001ab554 mov op,ax
 	001ab55c setfuncargs 0x1
 	001ab564 mov ax,0x6f6f20
 	001ab570 farcall ax
 	001ab578 farsubsp 0x1
 	001ab580 pop op
 	001ab588 sourceline 0x1f7a
 	001ab590 push op
 	001ab598 mov ax,0x2c3b8a
 	001ab5a4 farpush ax
 	001ab5ac mov mar,0xc3ef20
 	001ab5b8 mov ax,mar
 	001ab5c4 mov op,ax
 	001ab5cc setfuncargs 0x1
 	001ab5d4 mov ax,0x6f6f20
 	001ab5e0 farcall ax
 	001ab5e8 farsubsp 0x1
 	001ab5f0 pop op
 	001ab5f8 sourceline 0x1f7b
 	001ab600 push op
 	001ab608 mov ax,0x2c3bc0
 	001ab614 farpush ax
 	001ab61c mov mar,0x3cef20
 	001ab628 mov ax,mar
 	001ab634 mov op,ax
 	001ab63c setfuncargs 0x1
 	001ab644 mov ax,0x6f6f20
 	001ab650 farcall ax
 	001ab658 farsubsp 0x1
 	001ab660 pop op
 	001ab668 sourceline 0x1f7d
 	001ab670 mov ax,0x270f
 	001ab67c mov bx,ax
 	001ab688 mov mar,0x3cef20
 	001ab694 mov ax,mar
 	001ab6a0 push op
 	001ab6a8 mov op,ax
 	001ab6b0 farpush bx
 	001ab6b8 setfuncargs 0x1
 	001ab6c0 mov ax,0xcaef20
 	001ab6cc farcall ax
 	001ab6d4 farsubsp 0x1
 	001ab6dc pop op
 	001ab6e4 sourceline 0x1f7e
 	001ab6ec push op
 	001ab6f4 mov ax,0xe
 	001ab700 farpush ax
 	001ab708 mov mar,0x3cef20
 	001ab714 mov ax,mar
 	001ab720 mov op,ax
 	001ab728 setfuncargs 0x1
 	001ab730 mov ax,0x51ef20
 	001ab73c farcall ax
 	001ab744 farsubsp 0x1
 	001ab74c pop op
 	001ab754 sourceline 0x1f7f
 	001ab75c mov mar,0x3cef20
 	001ab768 mov ax,mar
 	001ab774 push op
 	001ab77c mov op,ax
 	001ab784 setfuncargs 0x0
 	001ab78c mov ax,0x78ef20
 	001ab798 farcall ax
 	001ab7a0 pop op
 	001ab7a8 push ax
 	001ab7b0 mov ax,0x7
 	001ab7bc pop bx
 	001ab7c4 sub bx,ax
 	001ab7d0 mov ax,bx
 	001ab7dc mov bx,ax
 	001ab7e8 mov mar,0x3cef20
 	001ab7f4 mov ax,mar
 	001ab800 push op
 	001ab808 mov op,ax
 	001ab810 farpush bx
 	001ab818 setfuncargs 0x1
 	001ab820 mov ax,0x526f20
 	001ab82c farcall ax
 	001ab834 farsubsp 0x1
 	001ab83c pop op
 	001ab844 sourceline 0x1f80
 	001ab84c mov mar,0x3cef20
 	001ab858 mov ax,mar
 	001ab864 push op
 	001ab86c mov op,ax
 	001ab874 setfuncargs 0x0
 	001ab87c mov ax,0xb36f20
 	001ab888 farcall ax
 	001ab890 pop op
 	001ab898 push ax
 	001ab8a0 mov ax,0x5
 	001ab8ac pop bx
 	001ab8b4 add bx,ax
 	001ab8c0 mov ax,bx
 	001ab8cc mov bx,ax
 	001ab8d8 mov mar,0x3cef20
 	001ab8e4 mov ax,mar
 	001ab8f0 push op
 	001ab8f8 mov op,ax
 	001ab900 farpush bx
 	001ab908 setfuncargs 0x1
 	001ab910 mov ax,0x70ef20
 	001ab91c farcall ax
 	001ab924 farsubsp 0x1
 	001ab92c pop op
 	001ab934 sourceline 0x1f81
 	001ab93c push op
 	001ab944 mov ax,0x426
 	001ab950 farpush ax
 	001ab958 mov ax,0x398
 	001ab964 farpush ax
 	001ab96c mov ax,0x0
 	001ab978 farpush ax
 	001ab980 mov ax,0x3
 	001ab98c farpush ax
 	001ab994 mov ax,0x1
 	001ab9a0 farpush ax
 	001ab9a8 mov mar,0x3cef20
 	001ab9b4 mov ax,mar
 	001ab9c0 mov op,ax
 	001ab9c8 setfuncargs 0x5
 	001ab9d0 mov ax,0x536f20
 	001ab9dc farcall ax
 	001ab9e4 farsubsp 0x5
 	001ab9ec pop op
 	001ab9f4 sourceline 0x1f82
 	001ab9fc push op
 	001aba04 mov ax,0x82
 	001aba10 farpush ax
 	001aba18 mov mar,0xc3ef20
 	001aba24 mov ax,mar
 	001aba30 mov op,ax
 	001aba38 setfuncargs 0x1
 	001aba40 mov ax,0x51ef20
 	001aba4c farcall ax
 	001aba54 farsubsp 0x1
 	001aba5c pop op
 	001aba64 sourceline 0x1f83
 	001aba6c mov ax,0xd3
 	001aba78 mov bx,ax
 	001aba84 mov mar,0xc3ef20
 	001aba90 mov ax,mar
 	001aba9c push op
 	001abaa4 mov op,ax
 	001abaac farpush bx
 	001abab4 setfuncargs 0x1
 	001ababc mov ax,0x70ef20
 	001abac8 farcall ax
 	001abad0 farsubsp 0x1
 	001abad8 pop op
 	001abae0 sourceline 0x1f84
 	001abae8 mov mar,0xc3ef20
 	001abaf4 mov ax,mar
 	001abb00 push op
 	001abb08 mov op,ax
 	001abb10 setfuncargs 0x0
 	001abb18 mov ax,0x78ef20
 	001abb24 farcall ax
 	001abb2c pop op
 	001abb34 push ax
 	001abb3c mov ax,0x3
 	001abb48 pop bx
 	001abb50 sub bx,ax
 	001abb5c mov ax,bx
 	001abb68 mov bx,ax
 	001abb74 mov mar,0xc3ef20
 	001abb80 mov ax,mar
 	001abb8c push op
 	001abb94 mov op,ax
 	001abb9c farpush bx
 	001abba4 setfuncargs 0x1
 	001abbac mov ax,0x526f20
 	001abbb8 farcall ax
 	001abbc0 farsubsp 0x1
 	001abbc8 pop op
 	001abbd0 sourceline 0x1f85
 	001abbd8 push op
 	001abbe0 mov ax,0x426
 	001abbec farpush ax
 	001abbf4 mov ax,0x397
 	001abc00 farpush ax
 	001abc08 mov ax,0x0
 	001abc14 farpush ax
 	001abc1c mov ax,0x3
 	001abc28 farpush ax
 	001abc30 mov ax,0x0
 	001abc3c farpush ax
 	001abc44 mov mar,0xc3ef20
 	001abc50 mov ax,mar
 	001abc5c mov op,ax
 	001abc64 setfuncargs 0x5
 	001abc6c mov ax,0x536f20
 	001abc78 farcall ax
 	001abc80 farsubsp 0x5
 	001abc88 pop op
 	001abc90 sourceline 0x1f86
 	001abc98 push op
 	001abca0 mov ax,0x427
 	001abcac farpush ax
 	001abcb4 mov ax,0x398
 	001abcc0 farpush ax
 	001abcc8 mov ax,0x0
 	001abcd4 farpush ax
 	001abcdc mov ax,0x3
 	001abce8 farpush ax
 	001abcf0 mov ax,0x0
 	001abcfc farpush ax
 	001abd04 mov mar,0xc3ef20
 	001abd10 mov ax,mar
 	001abd1c mov op,ax
 	001abd24 setfuncargs 0x5
 	001abd2c mov ax,0x536f20
 	001abd38 farcall ax
 	001abd40 farsubsp 0x5
 	001abd48 pop op
 	001abd50 sourceline 0x1f87
 	001abd58 push op
 	001abd60 mov ax,0x427
 	001abd6c farpush ax
 	001abd74 mov ax,0x397
 	001abd80 farpush ax
 	001abd88 mov ax,0x0
 	001abd94 farpush ax
 	001abd9c mov ax,0x3
 	001abda8 farpush ax
 	001abdb0 mov ax,0x1
 	001abdbc farpush ax
 	001abdc4 mov mar,0x3cef20
 	001abdd0 mov ax,mar
 	001abddc mov op,ax
 	001abde4 setfuncargs 0x5
 	001abdec mov ax,0x536f20
 	001abdf8 farcall ax
 	001abe00 farsubsp 0x5
 	001abe08 pop op
 	001abe10 sourceline 0x1f88
 	001abe18 push op
 	001abe20 mov ax,0x2
 	001abe2c farpush ax
 	001abe34 mov mar,0x3cef20
 	001abe40 mov ax,mar
 	001abe4c mov op,ax
 	001abe54 setfuncargs 0x1
 	001abe5c mov ax,0x51ef20
 	001abe68 farcall ax
 	001abe70 farsubsp 0x1
 	001abe78 pop op
 	001abe80 sourceline 0x1f89
 	001abe88 mov ax,0x5
 	001abe94 mov bx,ax
 	001abea0 mov mar,0x3cef20
 	001abeac mov ax,mar
 	001abeb8 push op
 	001abec0 mov op,ax
 	001abec8 farpush bx
 	001abed0 setfuncargs 0x1
 	001abed8 mov ax,0x766f20
 	001abee4 farcall ax
 	001abeec farsubsp 0x1
 	001abef4 pop op
 	001abefc sourceline 0x1f8a
 	001abf04 mov ax,0x8c
 	001abf10 mov bx,ax
 	001abf1c mov mar,0x3cef20
 	001abf28 mov ax,mar
 	001abf34 push op
 	001abf3c mov op,ax
 	001abf44 farpush bx
 	001abf4c setfuncargs 0x1
 	001abf54 mov ax,0x526f20
 	001abf60 farcall ax
 	001abf68 farsubsp 0x1
 	001abf70 pop op
 	001abf78 sourceline 0x1f8b
 	001abf80 mov ax,0xb6
 	001abf8c mov bx,ax
 	001abf98 mov mar,0x3cef20
 	001abfa4 mov ax,mar
 	001abfb0 push op
 	001abfb8 mov op,ax
 	001abfc0 farpush bx
 	001abfc8 setfuncargs 0x1
 	001abfd0 mov ax,0x70ef20
 	001abfdc farcall ax
 	001abfe4 farsubsp 0x1
 	001abfec pop op
 	001abff4 sourceline 0x1f8c
 	001abffc push op
 	001ac004 mov ax,0x2c3bee
 	001ac010 farpush ax
 	001ac018 mov mar,0xc3ef20
 	001ac024 mov ax,mar
 	001ac030 mov op,ax
 	001ac038 setfuncargs 0x1
 	001ac040 mov ax,0x6f6f20
 	001ac04c farcall ax
 	001ac054 farsubsp 0x1
 	001ac05c pop op
 	001ac064 sourceline 0x1f8d
 	001ac06c push op
 	001ac074 mov ax,0x2c3c07
 	001ac080 farpush ax
 	001ac088 mov mar,0x3cef20
 	001ac094 mov ax,mar
 	001ac0a0 mov op,ax
 	001ac0a8 setfuncargs 0x1
 	001ac0b0 mov ax,0x6f6f20
 	001ac0bc farcall ax
 	001ac0c4 farsubsp 0x1
 	001ac0cc pop op
 	001ac0d4 sourceline 0x1f8e
 	001ac0dc push op
 	001ac0e4 mov ax,0x2c3c46
 	001ac0f0 farpush ax
 	001ac0f8 mov mar,0xc3ef20
 	001ac104 mov ax,mar
 	001ac110 mov op,ax
 	001ac118 setfuncargs 0x1
 	001ac120 mov ax,0x6f6f20
 	001ac12c farcall ax
 	001ac134 farsubsp 0x1
 	001ac13c pop op
 	001ac144 sourceline 0x1f8f
 	001ac14c push op
 	001ac154 mov ax,0x2c3ca1
 	001ac160 farpush ax
 	001ac168 mov mar,0x3cef20
 	001ac174 mov ax,mar
 	001ac180 mov op,ax
 	001ac188 setfuncargs 0x1
 	001ac190 mov ax,0x6f6f20
 	001ac19c farcall ax
 	001ac1a4 farsubsp 0x1
 	001ac1ac pop op
 	001ac1b4 sourceline 0x1f90
 	001ac1bc push op
 	001ac1c4 mov ax,0x80
 	001ac1d0 farpush ax
 	001ac1d8 mov mar,0xc3ef20
 	001ac1e4 mov ax,mar
 	001ac1f0 mov op,ax
 	001ac1f8 setfuncargs 0x1
 	001ac200 mov ax,0x51ef20
 	001ac20c farcall ax
 	001ac214 farsubsp 0x1
 	001ac21c pop op
 	001ac224 sourceline 0x1f91
 	001ac22c mov ax,0x88
 	001ac238 mov bx,ax
 	001ac244 mov mar,0xc3ef20
 	001ac250 mov ax,mar
 	001ac25c push op
 	001ac264 mov op,ax
 	001ac26c farpush bx
 	001ac274 setfuncargs 0x1
 	001ac27c mov ax,0x526f20
 	001ac288 farcall ax
 	001ac290 farsubsp 0x1
 	001ac298 pop op
 	001ac2a0 sourceline 0x1f92
 	001ac2a8 mov ax,0xd9
 	001ac2b4 mov bx,ax
 	001ac2c0 mov mar,0xc3ef20
 	001ac2cc mov ax,mar
 	001ac2d8 push op
 	001ac2e0 mov op,ax
 	001ac2e8 farpush bx
 	001ac2f0 setfuncargs 0x1
 	001ac2f8 mov ax,0x70ef20
 	001ac304 farcall ax
 	001ac30c farsubsp 0x1
 	001ac314 pop op
 	001ac31c sourceline 0x1f93
 	001ac324 push op
 	001ac32c mov ax,0x427
 	001ac338 farpush ax
 	001ac340 mov ax,0x397
 	001ac34c farpush ax
 	001ac354 mov ax,0x0
 	001ac360 farpush ax
 	001ac368 mov ax,0x3
 	001ac374 farpush ax
 	001ac37c mov ax,0x0
 	001ac388 farpush ax
 	001ac390 mov mar,0xc3ef20
 	001ac39c mov ax,mar
 	001ac3a8 mov op,ax
 	001ac3b0 setfuncargs 0x5
 	001ac3b8 mov ax,0x536f20
 	001ac3c4 farcall ax
 	001ac3cc farsubsp 0x5
 	001ac3d4 pop op
 	001ac3dc sourceline 0x1f94
 	001ac3e4 mov ax,0x0
 	001ac3f0 mov bx,ax
 	001ac3fc mov mar,0x3cef20
 	001ac408 mov ax,mar
 	001ac414 push op
 	001ac41c mov op,ax
 	001ac424 farpush bx
 	001ac42c setfuncargs 0x1
 	001ac434 mov ax,0x436f20
 	001ac440 farcall ax
 	001ac448 farsubsp 0x1
 	001ac450 pop op
 	001ac458 sourceline 0x1f95
 	001ac460 mov ax,0x1
 	001ac46c mov mar,0xd26f20
 	001ac478 memwrite4 ax
 	001ac480 sourceline 0x1f96
 	001ac488 mov ax,0x1
 	001ac494 mov mar,0xd2ef20
 	001ac4a0 memwrite4 ax
 	001ac4a8 sourceline 0x1f97
 	001ac4b0 mov ax,0x1
 	001ac4bc push ax
 	001ac4c4 mov ax,0x2
 	001ac4d0 assertlte ax,0x32
 	001ac4dc mul ax,0x8
 	001ac4e8 mov cx,ax
 	001ac4f4 pop ax
 	001ac4fc mov bx,ax
 	001ac508 mov mar,0x6c6f20
 	001ac514 add mar,cx
 	001ac520 mov ax,mar
 	001ac52c push op
 	001ac534 mov op,ax
 	001ac53c farpush bx
 	001ac544 setfuncargs 0x1
 	001ac54c mov ax,0xa66f20
 	001ac558 farcall ax
 	001ac560 farsubsp 0x1
 	001ac568 pop op
 	001ac570 sourceline 0x1f98
 	001ac578 mov ax,0x2
 	001ac584 mov mar,0xc2ef20
 	001ac590 memwrite4 ax
 	001ac598 sourceline 0x1f99
 	001ac5a0 mov ax,0x0
 	001ac5ac mov bx,ax
 	001ac5b8 mov mar,0x3cef20
 	001ac5c4 mov ax,mar
 	001ac5d0 push op
 	001ac5d8 mov op,ax
 	001ac5e0 farpush bx
 	001ac5e8 setfuncargs 0x1
 	001ac5f0 mov ax,0xcaef20
 	001ac5fc farcall ax
 	001ac604 farsubsp 0x1
 	001ac60c pop op
		001ac614: FALL_THROUGH

	[001ac614]
		001ab304: UNCONDITIONAL_JUMP
		001ab358: FALL_THROUGH
 	001ac614 sourceline 0x1f9b
 	001ac61c jmp 0x001ac934
		001ac934: UNCONDITIONAL_JUMP

	[001ac624]
		001ab2a4: CONDITIONAL_JUMP
 	001ac624 sourceline 0x1f9e
 	001ac62c mov mar,0x42ef20
 	001ac638 push mar
 	001ac640 pop mar
 	001ac648 memread.ptr ax
 	001ac650 push ax
 	001ac658 pop mar
 	001ac660 mov ax,mar
 	001ac66c push op
 	001ac674 mov op,ax
 	001ac67c setfuncargs 0x0
 	001ac684 mov ax,0x78ef20
 	001ac690 farcall ax
 	001ac698 pop op
 	001ac6a0 push ax
 	001ac6a8 mov ax,0x83
 	001ac6b4 pop bx
 	001ac6bc cmplt bx,ax
 	001ac6c8 mov ax,bx
 	001ac6d4 jz 0x001ac774
		001ac774: CONDITIONAL_JUMP
		001ac6dc: FALL_THROUGH

	[001ac6dc]
		001ac624: FALL_THROUGH
 	001ac6dc push op
 	001ac6e4 mov ax,0x397
 	001ac6f0 farpush ax
 	001ac6f8 mov ax,0xa6
 	001ac704 farpush ax
 	001ac70c mov ax,0xa9
 	001ac718 farpush ax
 	001ac720 mov mar,0x3cef20
 	001ac72c mov ax,mar
 	001ac738 mov op,ax
 	001ac740 setfuncargs 0x3
 	001ac748 mov ax,0x726f20
 	001ac754 farcall ax
 	001ac75c farsubsp 0x3
 	001ac764 pop op
 	001ac76c jmp 0x001ac80c
		001ac80c: UNCONDITIONAL_JUMP

	[001ac774]
		001ac624: CONDITIONAL_JUMP
 	001ac774 sourceline 0x1f9f
 	001ac77c push op
 	001ac784 mov ax,0x397
 	001ac790 farpush ax
 	001ac798 mov ax,0x6d
 	001ac7a4 farpush ax
 	001ac7ac mov ax,0xd1
 	001ac7b8 farpush ax
 	001ac7c0 mov mar,0x3cef20
 	001ac7cc mov ax,mar
 	001ac7d8 mov op,ax
 	001ac7e0 setfuncargs 0x3
 	001ac7e8 mov ax,0x726f20
 	001ac7f4 farcall ax
 	001ac7fc farsubsp 0x3
 	001ac804 pop op
		001ac80c: FALL_THROUGH

	[001ac80c]
		001ac6dc: UNCONDITIONAL_JUMP
		001ac774: FALL_THROUGH
 	001ac80c sourceline 0x1fa0
 	001ac814 mov ax,0x1
 	001ac820 mov bx,ax
 	001ac82c mov mar,0x3cef20
 	001ac838 mov ax,mar
 	001ac844 push op
 	001ac84c mov op,ax
 	001ac854 farpush bx
 	001ac85c setfuncargs 0x1
 	001ac864 mov ax,0x69ef20
 	001ac870 farcall ax
 	001ac878 farsubsp 0x1
 	001ac880 pop op
 	001ac888 sourceline 0x1fa2
 	001ac890 push op
 	001ac898 mov ax,0x2c3ccc
 	001ac8a4 farpush ax
 	001ac8ac mov ax,0x138
 	001ac8b8 farpush ax
 	001ac8c0 mov ax,0x92
 	001ac8cc farpush ax
 	001ac8d4 mov ax,0x0
 	001ac8e0 farpush ax
 	001ac8e8 mov mar,0x3cef20
 	001ac8f4 mov ax,mar
 	001ac900 mov op,ax
 	001ac908 setfuncargs 0x4
 	001ac910 mov ax,0x6aef20
 	001ac91c farcall ax
 	001ac924 farsubsp 0x4
 	001ac92c pop op
		001ac934: FALL_THROUGH

	[001ac934]
		001ab294: UNCONDITIONAL_JUMP
		001ac614: UNCONDITIONAL_JUMP
		001ac80c: FALL_THROUGH
 	001ac934 sourceline 0x1fa5
 	001ac93c jmp 0x001aec38
		001aec38: UNCONDITIONAL_JUMP

	[001ac944]
		001a93b8: CONDITIONAL_JUMP
 	001ac944 sourceline 0x1fa7
 	001ac94c mov mar,0x3cef20
 	001ac958 mov ax,mar
 	001ac964 push op
 	001ac96c mov op,ax
 	001ac974 setfuncargs 0x0
 	001ac97c mov ax,0x89ef20
 	001ac988 farcall ax
 	001ac990 pop op
 	001ac998 push ax
 	001ac9a0 mov mar,0x8cef20
 	001ac9ac mov ax,mar
 	001ac9b8 pop bx
 	001ac9c0 cmpeq bx,ax
 	001ac9cc mov ax,bx
 	001ac9d8 jnz 0x001aca94
		001aca94: CONDITIONAL_JUMP
		001ac9e0: FALL_THROUGH

	[001ac9e0]
		001ac944: FALL_THROUGH
 	001ac9e0 push ax
 	001ac9e8 mov mar,0x3cef20
 	001ac9f4 mov ax,mar
 	001aca00 push op
 	001aca08 mov op,ax
 	001aca10 setfuncargs 0x0
 	001aca18 mov ax,0x89ef20
 	001aca24 farcall ax
 	001aca2c pop op
 	001aca34 push ax
 	001aca3c mov mar,0x8b6f20
 	001aca48 mov ax,mar
 	001aca54 pop bx
 	001aca5c cmpeq bx,ax
 	001aca68 mov ax,bx
 	001aca74 pop bx
 	001aca7c lor bx,ax
 	001aca88 mov ax,bx
		001aca94: FALL_THROUGH

	[001aca94]
		001ac944: CONDITIONAL_JUMP
		001ac9e0: FALL_THROUGH
 	001aca94 jnz 0x001acb50
		001acb50: CONDITIONAL_JUMP
		001aca9c: FALL_THROUGH

	[001aca9c]
		001aca94: FALL_THROUGH
 	001aca9c push ax
 	001acaa4 mov mar,0x3cef20
 	001acab0 mov ax,mar
 	001acabc push op
 	001acac4 mov op,ax
 	001acacc setfuncargs 0x0
 	001acad4 mov ax,0x89ef20
 	001acae0 farcall ax
 	001acae8 pop op
 	001acaf0 push ax
 	001acaf8 mov mar,0x8bef20
 	001acb04 mov ax,mar
 	001acb10 pop bx
 	001acb18 cmpeq bx,ax
 	001acb24 mov ax,bx
 	001acb30 pop bx
 	001acb38 lor bx,ax
 	001acb44 mov ax,bx
		001acb50: FALL_THROUGH

	[001acb50]
		001aca94: CONDITIONAL_JUMP
		001aca9c: FALL_THROUGH
 	001acb50 jnz 0x001acc0c
		001acc0c: CONDITIONAL_JUMP
		001acb58: FALL_THROUGH

	[001acb58]
		001acb50: FALL_THROUGH
 	001acb58 push ax
 	001acb60 mov mar,0x3cef20
 	001acb6c mov ax,mar
 	001acb78 push op
 	001acb80 mov op,ax
 	001acb88 setfuncargs 0x0
 	001acb90 mov ax,0x89ef20
 	001acb9c farcall ax
 	001acba4 pop op
 	001acbac push ax
 	001acbb4 mov mar,0x8c6f20
 	001acbc0 mov ax,mar
 	001acbcc pop bx
 	001acbd4 cmpeq bx,ax
 	001acbe0 mov ax,bx
 	001acbec pop bx
 	001acbf4 lor bx,ax
 	001acc00 mov ax,bx
		001acc0c: FALL_THROUGH

	[001acc0c]
		001acb50: CONDITIONAL_JUMP
		001acb58: FALL_THROUGH
 	001acc0c jnz 0x001accc8
		001accc8: CONDITIONAL_JUMP
		001acc14: FALL_THROUGH

	[001acc14]
		001acc0c: FALL_THROUGH
 	001acc14 push ax
 	001acc1c mov mar,0x3cef20
 	001acc28 mov ax,mar
 	001acc34 push op
 	001acc3c mov op,ax
 	001acc44 setfuncargs 0x0
 	001acc4c mov ax,0x89ef20
 	001acc58 farcall ax
 	001acc60 pop op
 	001acc68 push ax
 	001acc70 mov mar,0x7def20
 	001acc7c mov ax,mar
 	001acc88 pop bx
 	001acc90 cmpeq bx,ax
 	001acc9c mov ax,bx
 	001acca8 pop bx
 	001accb0 lor bx,ax
 	001accbc mov ax,bx
		001accc8: FALL_THROUGH

	[001accc8]
		001acc0c: CONDITIONAL_JUMP
		001acc14: FALL_THROUGH
 	001accc8 jnz 0x001acd84
		001acd84: CONDITIONAL_JUMP
		001accd0: FALL_THROUGH

	[001accd0]
		001accc8: FALL_THROUGH
 	001accd0 push ax
 	001accd8 mov mar,0x3cef20
 	001acce4 mov ax,mar
 	001accf0 push op
 	001accf8 mov op,ax
 	001acd00 setfuncargs 0x0
 	001acd08 mov ax,0x89ef20
 	001acd14 farcall ax
 	001acd1c pop op
 	001acd24 push ax
 	001acd2c mov mar,0x8def20
 	001acd38 mov ax,mar
 	001acd44 pop bx
 	001acd4c cmpeq bx,ax
 	001acd58 mov ax,bx
 	001acd64 pop bx
 	001acd6c lor bx,ax
 	001acd78 mov ax,bx
		001acd84: FALL_THROUGH

	[001acd84]
		001accc8: CONDITIONAL_JUMP
		001accd0: FALL_THROUGH
 	001acd84 jnz 0x001ace40
		001ace40: CONDITIONAL_JUMP
		001acd8c: FALL_THROUGH

	[001acd8c]
		001acd84: FALL_THROUGH
 	001acd8c push ax
 	001acd94 mov mar,0x3cef20
 	001acda0 mov ax,mar
 	001acdac push op
 	001acdb4 mov op,ax
 	001acdbc setfuncargs 0x0
 	001acdc4 mov ax,0x89ef20
 	001acdd0 farcall ax
 	001acdd8 pop op
 	001acde0 push ax
 	001acde8 mov mar,0x8aef20
 	001acdf4 mov ax,mar
 	001ace00 pop bx
 	001ace08 cmpeq bx,ax
 	001ace14 mov ax,bx
 	001ace20 pop bx
 	001ace28 lor bx,ax
 	001ace34 mov ax,bx
		001ace40: FALL_THROUGH

	[001ace40]
		001acd84: CONDITIONAL_JUMP
		001acd8c: FALL_THROUGH
 	001ace40 jnz 0x001acefc
		001acefc: CONDITIONAL_JUMP
		001ace48: FALL_THROUGH

	[001ace48]
		001ace40: FALL_THROUGH
 	001ace48 push ax
 	001ace50 mov mar,0x3cef20
 	001ace5c mov ax,mar
 	001ace68 push op
 	001ace70 mov op,ax
 	001ace78 setfuncargs 0x0
 	001ace80 mov ax,0x89ef20
 	001ace8c farcall ax
 	001ace94 pop op
 	001ace9c push ax
 	001acea4 mov mar,0x8e6f20
 	001aceb0 mov ax,mar
 	001acebc pop bx
 	001acec4 cmpeq bx,ax
 	001aced0 mov ax,bx
 	001acedc pop bx
 	001acee4 lor bx,ax
 	001acef0 mov ax,bx
		001acefc: FALL_THROUGH

	[001acefc]
		001ace40: CONDITIONAL_JUMP
		001ace48: FALL_THROUGH
 	001acefc jnz 0x001acfb8
		001acfb8: CONDITIONAL_JUMP
		001acf04: FALL_THROUGH

	[001acf04]
		001acefc: FALL_THROUGH
 	001acf04 push ax
 	001acf0c mov mar,0x3cef20
 	001acf18 mov ax,mar
 	001acf24 push op
 	001acf2c mov op,ax
 	001acf34 setfuncargs 0x0
 	001acf3c mov ax,0x89ef20
 	001acf48 farcall ax
 	001acf50 pop op
 	001acf58 push ax
 	001acf60 mov mar,0x8eef20
 	001acf6c mov ax,mar
 	001acf78 pop bx
 	001acf80 cmpeq bx,ax
 	001acf8c mov ax,bx
 	001acf98 pop bx
 	001acfa0 lor bx,ax
 	001acfac mov ax,bx
		001acfb8: FALL_THROUGH

	[001acfb8]
		001acefc: CONDITIONAL_JUMP
		001acf04: FALL_THROUGH
 	001acfb8 jnz 0x001ad074
		001ad074: CONDITIONAL_JUMP
		001acfc0: FALL_THROUGH

	[001acfc0]
		001acfb8: FALL_THROUGH
 	001acfc0 push ax
 	001acfc8 mov mar,0x3cef20
 	001acfd4 mov ax,mar
 	001acfe0 push op
 	001acfe8 mov op,ax
 	001acff0 setfuncargs 0x0
 	001acff8 mov ax,0x89ef20
 	001ad004 farcall ax
 	001ad00c pop op
 	001ad014 push ax
 	001ad01c mov mar,0x8f6f20
 	001ad028 mov ax,mar
 	001ad034 pop bx
 	001ad03c cmpeq bx,ax
 	001ad048 mov ax,bx
 	001ad054 pop bx
 	001ad05c lor bx,ax
 	001ad068 mov ax,bx
		001ad074: FALL_THROUGH

	[001ad074]
		001acfb8: CONDITIONAL_JUMP
		001acfc0: FALL_THROUGH
 	001ad074 jnz 0x001ad130
		001ad130: CONDITIONAL_JUMP
		001ad07c: FALL_THROUGH

	[001ad07c]
		001ad074: FALL_THROUGH
 	001ad07c push ax
 	001ad084 mov mar,0x3cef20
 	001ad090 mov ax,mar
 	001ad09c push op
 	001ad0a4 mov op,ax
 	001ad0ac setfuncargs 0x0
 	001ad0b4 mov ax,0x89ef20
 	001ad0c0 farcall ax
 	001ad0c8 pop op
 	001ad0d0 push ax
 	001ad0d8 mov mar,0x8fef20
 	001ad0e4 mov ax,mar
 	001ad0f0 pop bx
 	001ad0f8 cmpeq bx,ax
 	001ad104 mov ax,bx
 	001ad110 pop bx
 	001ad118 lor bx,ax
 	001ad124 mov ax,bx
		001ad130: FALL_THROUGH

	[001ad130]
		001ad074: CONDITIONAL_JUMP
		001ad07c: FALL_THROUGH
 	001ad130 jnz 0x001ad1ec
		001ad1ec: CONDITIONAL_JUMP
		001ad138: FALL_THROUGH

	[001ad138]
		001ad130: FALL_THROUGH
 	001ad138 push ax
 	001ad140 mov mar,0x3cef20
 	001ad14c mov ax,mar
 	001ad158 push op
 	001ad160 mov op,ax
 	001ad168 setfuncargs 0x0
 	001ad170 mov ax,0x89ef20
 	001ad17c farcall ax
 	001ad184 pop op
 	001ad18c push ax
 	001ad194 mov mar,0x906f20
 	001ad1a0 mov ax,mar
 	001ad1ac pop bx
 	001ad1b4 cmpeq bx,ax
 	001ad1c0 mov ax,bx
 	001ad1cc pop bx
 	001ad1d4 lor bx,ax
 	001ad1e0 mov ax,bx
		001ad1ec: FALL_THROUGH

	[001ad1ec]
		001ad130: CONDITIONAL_JUMP
		001ad138: FALL_THROUGH
 	001ad1ec jnz 0x001ad2a8
		001ad2a8: CONDITIONAL_JUMP
		001ad1f4: FALL_THROUGH

	[001ad1f4]
		001ad1ec: FALL_THROUGH
 	001ad1f4 push ax
 	001ad1fc mov mar,0x3cef20
 	001ad208 mov ax,mar
 	001ad214 push op
 	001ad21c mov op,ax
 	001ad224 setfuncargs 0x0
 	001ad22c mov ax,0x89ef20
 	001ad238 farcall ax
 	001ad240 pop op
 	001ad248 push ax
 	001ad250 mov mar,0x976f20
 	001ad25c mov ax,mar
 	001ad268 pop bx
 	001ad270 cmpeq bx,ax
 	001ad27c mov ax,bx
 	001ad288 pop bx
 	001ad290 lor bx,ax
 	001ad29c mov ax,bx
		001ad2a8: FALL_THROUGH

	[001ad2a8]
		001ad1ec: CONDITIONAL_JUMP
		001ad1f4: FALL_THROUGH
 	001ad2a8 jnz 0x001ad364
		001ad364: CONDITIONAL_JUMP
		001ad2b0: FALL_THROUGH

	[001ad2b0]
		001ad2a8: FALL_THROUGH
 	001ad2b0 push ax
 	001ad2b8 mov mar,0x3cef20
 	001ad2c4 mov ax,mar
 	001ad2d0 push op
 	001ad2d8 mov op,ax
 	001ad2e0 setfuncargs 0x0
 	001ad2e8 mov ax,0x89ef20
 	001ad2f4 farcall ax
 	001ad2fc pop op
 	001ad304 push ax
 	001ad30c mov mar,0x846f20
 	001ad318 mov ax,mar
 	001ad324 pop bx
 	001ad32c cmpeq bx,ax
 	001ad338 mov ax,bx
 	001ad344 pop bx
 	001ad34c lor bx,ax
 	001ad358 mov ax,bx
		001ad364: FALL_THROUGH

	[001ad364]
		001ad2a8: CONDITIONAL_JUMP
		001ad2b0: FALL_THROUGH
 	001ad364 jnz 0x001ad420
		001ad420: CONDITIONAL_JUMP
		001ad36c: FALL_THROUGH

	[001ad36c]
		001ad364: FALL_THROUGH
 	001ad36c push ax
 	001ad374 mov mar,0x3cef20
 	001ad380 mov ax,mar
 	001ad38c push op
 	001ad394 mov op,ax
 	001ad39c setfuncargs 0x0
 	001ad3a4 mov ax,0x89ef20
 	001ad3b0 farcall ax
 	001ad3b8 pop op
 	001ad3c0 push ax
 	001ad3c8 mov mar,0x90ef20
 	001ad3d4 mov ax,mar
 	001ad3e0 pop bx
 	001ad3e8 cmpeq bx,ax
 	001ad3f4 mov ax,bx
 	001ad400 pop bx
 	001ad408 lor bx,ax
 	001ad414 mov ax,bx
		001ad420: FALL_THROUGH

	[001ad420]
		001ad364: CONDITIONAL_JUMP
		001ad36c: FALL_THROUGH
 	001ad420 jnz 0x001ad4dc
		001ad4dc: CONDITIONAL_JUMP
		001ad428: FALL_THROUGH

	[001ad428]
		001ad420: FALL_THROUGH
 	001ad428 push ax
 	001ad430 mov mar,0x3cef20
 	001ad43c mov ax,mar
 	001ad448 push op
 	001ad450 mov op,ax
 	001ad458 setfuncargs 0x0
 	001ad460 mov ax,0x89ef20
 	001ad46c farcall ax
 	001ad474 pop op
 	001ad47c push ax
 	001ad484 mov mar,0x916f20
 	001ad490 mov ax,mar
 	001ad49c pop bx
 	001ad4a4 cmpeq bx,ax
 	001ad4b0 mov ax,bx
 	001ad4bc pop bx
 	001ad4c4 lor bx,ax
 	001ad4d0 mov ax,bx
		001ad4dc: FALL_THROUGH

	[001ad4dc]
		001ad420: CONDITIONAL_JUMP
		001ad428: FALL_THROUGH
 	001ad4dc jnz 0x001ad598
		001ad598: CONDITIONAL_JUMP
		001ad4e4: FALL_THROUGH

	[001ad4e4]
		001ad4dc: FALL_THROUGH
 	001ad4e4 push ax
 	001ad4ec mov mar,0x3cef20
 	001ad4f8 mov ax,mar
 	001ad504 push op
 	001ad50c mov op,ax
 	001ad514 setfuncargs 0x0
 	001ad51c mov ax,0x89ef20
 	001ad528 farcall ax
 	001ad530 pop op
 	001ad538 push ax
 	001ad540 mov mar,0x91ef20
 	001ad54c mov ax,mar
 	001ad558 pop bx
 	001ad560 cmpeq bx,ax
 	001ad56c mov ax,bx
 	001ad578 pop bx
 	001ad580 lor bx,ax
 	001ad58c mov ax,bx
		001ad598: FALL_THROUGH

	[001ad598]
		001ad4dc: CONDITIONAL_JUMP
		001ad4e4: FALL_THROUGH
 	001ad598 jz 0x001ae158
		001ae158: CONDITIONAL_JUMP
		001ad5a0: FALL_THROUGH

	[001ad5a0]
		001ad598: FALL_THROUGH
 	001ad5a0 sourceline 0x1fad
 	001ad5a8 setfuncargs 0x0
 	001ad5b0 mov ax,0x6def20
 	001ad5bc farcall ax
 	001ad5c4 lnot ax
 	001ad5cc jz 0x001ad628
		001ad628: CONDITIONAL_JUMP
		001ad5d4: FALL_THROUGH

	[001ad5d4]
		001ad5a0: FALL_THROUGH
 	001ad5d4 mov ax,0x8d
 	001ad5e0 farpush ax
 	001ad5e8 mov ax,0xbd
 	001ad5f4 farpush ax
 	001ad5fc setfuncargs 0x2
 	001ad604 mov ax,0x6e6f20
 	001ad610 farcall ax
 	001ad618 farsubsp 0x2
 	001ad620 jmp 0x001ae148
		001ae148: UNCONDITIONAL_JUMP

	[001ad628]
		001ad5a0: CONDITIONAL_JUMP
 	001ad628 sourceline 0x1fb0
 	001ad630 mov ax,0x3
 	001ad63c mov bx,ax
 	001ad648 mov mar,0x3cef20
 	001ad654 mov ax,mar
 	001ad660 push op
 	001ad668 mov op,ax
 	001ad670 farpush bx
 	001ad678 setfuncargs 0x1
 	001ad680 mov ax,0x69ef20
 	001ad68c farcall ax
 	001ad694 farsubsp 0x1
 	001ad69c pop op
 	001ad6a4 sourceline 0x1fb1
 	001ad6ac push op
 	001ad6b4 mov ax,0x397
 	001ad6c0 farpush ax
 	001ad6c8 mov ax,0x5
 	001ad6d4 farpush ax
 	001ad6dc mov mar,0x3cef20
 	001ad6e8 mov ax,mar
 	001ad6f4 mov op,ax
 	001ad6fc setfuncargs 0x2
 	001ad704 mov ax,0x6eef20
 	001ad710 farcall ax
 	001ad718 farsubsp 0x2
 	001ad720 pop op
 	001ad728 sourceline 0x1fb2
 	001ad730 mov ax,0x0
 	001ad73c mov bx,ax
 	001ad748 mov mar,0x3cef20
 	001ad754 mov ax,mar
 	001ad760 push op
 	001ad768 mov op,ax
 	001ad770 farpush bx
 	001ad778 setfuncargs 0x1
 	001ad780 mov ax,0x436f20
 	001ad78c farcall ax
 	001ad794 farsubsp 0x1
 	001ad79c pop op
 	001ad7a4 sourceline 0x1fb3
 	001ad7ac push op
 	001ad7b4 mov ax,0xe
 	001ad7c0 farpush ax
 	001ad7c8 mov mar,0x3cef20
 	001ad7d4 mov ax,mar
 	001ad7e0 mov op,ax
 	001ad7e8 setfuncargs 0x1
 	001ad7f0 mov ax,0x51ef20
 	001ad7fc farcall ax
 	001ad804 farsubsp 0x1
 	001ad80c pop op
 	001ad814 sourceline 0x1fb4
 	001ad81c mov mar,0x3cef20
 	001ad828 mov ax,mar
 	001ad834 push op
 	001ad83c mov op,ax
 	001ad844 setfuncargs 0x0
 	001ad84c mov ax,0x78ef20
 	001ad858 farcall ax
 	001ad860 pop op
 	001ad868 push ax
 	001ad870 mov ax,0x7
 	001ad87c pop bx
 	001ad884 sub bx,ax
 	001ad890 mov ax,bx
 	001ad89c mov bx,ax
 	001ad8a8 mov mar,0x3cef20
 	001ad8b4 mov ax,mar
 	001ad8c0 push op
 	001ad8c8 mov op,ax
 	001ad8d0 farpush bx
 	001ad8d8 setfuncargs 0x1
 	001ad8e0 mov ax,0x526f20
 	001ad8ec farcall ax
 	001ad8f4 farsubsp 0x1
 	001ad8fc pop op
 	001ad904 sourceline 0x1fb5
 	001ad90c mov mar,0x3cef20
 	001ad918 mov ax,mar
 	001ad924 push op
 	001ad92c mov op,ax
 	001ad934 setfuncargs 0x0
 	001ad93c mov ax,0xb36f20
 	001ad948 farcall ax
 	001ad950 pop op
 	001ad958 push ax
 	001ad960 mov ax,0x5
 	001ad96c pop bx
 	001ad974 add bx,ax
 	001ad980 mov ax,bx
 	001ad98c mov bx,ax
 	001ad998 mov mar,0x3cef20
 	001ad9a4 mov ax,mar
 	001ad9b0 push op
 	001ad9b8 mov op,ax
 	001ad9c0 farpush bx
 	001ad9c8 setfuncargs 0x1
 	001ad9d0 mov ax,0x70ef20
 	001ad9dc farcall ax
 	001ad9e4 farsubsp 0x1
 	001ad9ec pop op
 	001ad9f4 sourceline 0x1fb6
 	001ad9fc push op
 	001ada04 mov ax,0x426
 	001ada10 farpush ax
 	001ada18 mov ax,0x397
 	001ada24 farpush ax
 	001ada2c mov ax,0x0
 	001ada38 farpush ax
 	001ada40 mov ax,0x3
 	001ada4c farpush ax
 	001ada54 mov ax,0x1
 	001ada60 farpush ax
 	001ada68 mov mar,0x3cef20
 	001ada74 mov ax,mar
 	001ada80 mov op,ax
 	001ada88 setfuncargs 0x5
 	001ada90 mov ax,0x536f20
 	001ada9c farcall ax
 	001adaa4 farsubsp 0x5
 	001adaac pop op
 	001adab4 sourceline 0x1fb7
 	001adabc push op
 	001adac4 mov ax,0x426
 	001adad0 farpush ax
 	001adad8 mov ax,0x398
 	001adae4 farpush ax
 	001adaec mov ax,0x0
 	001adaf8 farpush ax
 	001adb00 mov ax,0x3
 	001adb0c farpush ax
 	001adb14 mov ax,0x0
 	001adb20 farpush ax
 	001adb28 mov mar,0xc3ef20
 	001adb34 mov ax,mar
 	001adb40 mov op,ax
 	001adb48 setfuncargs 0x5
 	001adb50 mov ax,0x536f20
 	001adb5c farcall ax
 	001adb64 farsubsp 0x5
 	001adb6c pop op
 	001adb74 sourceline 0x1fb8
 	001adb7c push op
 	001adb84 mov ax,0x2c3d3a
 	001adb90 farpush ax
 	001adb98 mov mar,0x3cef20
 	001adba4 mov ax,mar
 	001adbb0 mov op,ax
 	001adbb8 setfuncargs 0x1
 	001adbc0 mov ax,0x6f6f20
 	001adbcc farcall ax
 	001adbd4 farsubsp 0x1
 	001adbdc pop op
 	001adbe4 sourceline 0x1fb9
 	001adbec push op
 	001adbf4 mov ax,0x427
 	001adc00 farpush ax
 	001adc08 mov ax,0x398
 	001adc14 farpush ax
 	001adc1c mov ax,0x0
 	001adc28 farpush ax
 	001adc30 mov ax,0x3
 	001adc3c farpush ax
 	001adc44 mov ax,0x0
 	001adc50 farpush ax
 	001adc58 mov mar,0xc3ef20
 	001adc64 mov ax,mar
 	001adc70 mov op,ax
 	001adc78 setfuncargs 0x5
 	001adc80 mov ax,0x536f20
 	001adc8c farcall ax
 	001adc94 farsubsp 0x5
 	001adc9c pop op
 	001adca4 sourceline 0x1fba
 	001adcac mov mar,0xc2ef20
 	001adcb8 memread4 ax
 	001adcc0 push ax
 	001adcc8 mov ax,0x0
 	001adcd4 pop bx
 	001adcdc cmpeq bx,ax
 	001adce8 mov ax,bx
 	001adcf4 jz 0x001add6c
		001add6c: CONDITIONAL_JUMP
		001adcfc: FALL_THROUGH

	[001adcfc]
		001ad628: FALL_THROUGH
 	001adcfc push op
 	001add04 mov ax,0x2c3d90
 	001add10 farpush ax
 	001add18 mov mar,0xc3ef20
 	001add24 mov ax,mar
 	001add30 mov op,ax
 	001add38 setfuncargs 0x1
 	001add40 mov ax,0x6f6f20
 	001add4c farcall ax
 	001add54 farsubsp 0x1
 	001add5c pop op
 	001add64 jmp 0x001adea4
		001adea4: UNCONDITIONAL_JUMP

	[001add6c]
		001ad628: CONDITIONAL_JUMP
 	001add6c sourceline 0x1fbd
 	001add74 mov mar,0xc2ef20
 	001add80 memread4 ax
 	001add88 push ax
 	001add90 mov ax,0x2
 	001add9c pop bx
 	001adda4 cmpneq bx,ax
 	001addb0 mov ax,bx
 	001addbc jz 0x001ade34
		001ade34: CONDITIONAL_JUMP
		001addc4: FALL_THROUGH

	[001addc4]
		001add6c: FALL_THROUGH
 	001addc4 push op
 	001addcc mov ax,0x2c3d77
 	001addd8 farpush ax
 	001adde0 mov mar,0xc3ef20
 	001addec mov ax,mar
 	001addf8 mov op,ax
 	001ade00 setfuncargs 0x1
 	001ade08 mov ax,0x6f6f20
 	001ade14 farcall ax
 	001ade1c farsubsp 0x1
 	001ade24 pop op
 	001ade2c jmp 0x001adea4
		001adea4: UNCONDITIONAL_JUMP

	[001ade34]
		001add6c: CONDITIONAL_JUMP
 	001ade34 sourceline 0x1fbe
 	001ade3c push op
 	001ade44 mov ax,0x2c3d90
 	001ade50 farpush ax
 	001ade58 mov mar,0xc3ef20
 	001ade64 mov ax,mar
 	001ade70 mov op,ax
 	001ade78 setfuncargs 0x1
 	001ade80 mov ax,0x6f6f20
 	001ade8c farcall ax
 	001ade94 farsubsp 0x1
 	001ade9c pop op
		001adea4: FALL_THROUGH

	[001adea4]
		001adcfc: UNCONDITIONAL_JUMP
		001addc4: UNCONDITIONAL_JUMP
		001ade34: FALL_THROUGH
 	001adea4 sourceline 0x1fc1
 	001adeac push op
 	001adeb4 mov ax,0x427
 	001adec0 farpush ax
 	001adec8 mov ax,0x397
 	001aded4 farpush ax
 	001adedc mov ax,0x0
 	001adee8 farpush ax
 	001adef0 mov ax,0x3
 	001adefc farpush ax
 	001adf04 mov ax,0x1
 	001adf10 farpush ax
 	001adf18 mov mar,0x3cef20
 	001adf24 mov ax,mar
 	001adf30 mov op,ax
 	001adf38 setfuncargs 0x5
 	001adf40 mov ax,0x536f20
 	001adf4c farcall ax
 	001adf54 farsubsp 0x5
 	001adf5c pop op
 	001adf64 sourceline 0x1fc2
 	001adf6c push op
 	001adf74 mov ax,0x2
 	001adf80 farpush ax
 	001adf88 mov mar,0x3cef20
 	001adf94 mov ax,mar
 	001adfa0 mov op,ax
 	001adfa8 setfuncargs 0x1
 	001adfb0 mov ax,0x51ef20
 	001adfbc farcall ax
 	001adfc4 farsubsp 0x1
 	001adfcc pop op
 	001adfd4 sourceline 0x1fc3
 	001adfdc mov ax,0x5
 	001adfe8 mov bx,ax
 	001adff4 mov mar,0x3cef20
 	001ae000 mov ax,mar
 	001ae00c push op
 	001ae014 mov op,ax
 	001ae01c farpush bx
 	001ae024 setfuncargs 0x1
 	001ae02c mov ax,0x766f20
 	001ae038 farcall ax
 	001ae040 farsubsp 0x1
 	001ae048 pop op
 	001ae050 sourceline 0x1fc4
 	001ae058 mov ax,0x8d
 	001ae064 mov bx,ax
 	001ae070 mov mar,0x3cef20
 	001ae07c mov ax,mar
 	001ae088 push op
 	001ae090 mov op,ax
 	001ae098 farpush bx
 	001ae0a0 setfuncargs 0x1
 	001ae0a8 mov ax,0x526f20
 	001ae0b4 farcall ax
 	001ae0bc farsubsp 0x1
 	001ae0c4 pop op
 	001ae0cc sourceline 0x1fc5
 	001ae0d4 mov ax,0xbd
 	001ae0e0 mov bx,ax
 	001ae0ec mov mar,0x3cef20
 	001ae0f8 mov ax,mar
 	001ae104 push op
 	001ae10c mov op,ax
 	001ae114 farpush bx
 	001ae11c setfuncargs 0x1
 	001ae124 mov ax,0x70ef20
 	001ae130 farcall ax
 	001ae138 farsubsp 0x1
 	001ae140 pop op
		001ae148: FALL_THROUGH

	[001ae148]
		001ad5d4: UNCONDITIONAL_JUMP
		001adea4: FALL_THROUGH
 	001ae148 sourceline 0x1fc7
 	001ae150 jmp 0x001aec38
		001aec38: UNCONDITIONAL_JUMP

	[001ae158]
		001ad598: CONDITIONAL_JUMP
 	001ae158 sourceline 0x1fc9
 	001ae160 mov mar,0x3cef20
 	001ae16c mov ax,mar
 	001ae178 push op
 	001ae180 mov op,ax
 	001ae188 setfuncargs 0x0
 	001ae190 mov ax,0x89ef20
 	001ae19c farcall ax
 	001ae1a4 pop op
 	001ae1ac push ax
 	001ae1b4 mov mar,0x8d6f20
 	001ae1c0 mov ax,mar
 	001ae1cc pop bx
 	001ae1d4 cmpeq bx,ax
 	001ae1e0 mov ax,bx
 	001ae1ec jz 0x001ae88c
		001ae88c: CONDITIONAL_JUMP
		001ae1f4: FALL_THROUGH

	[001ae1f4]
		001ae158: FALL_THROUGH
 	001ae1f4 sourceline 0x1fcb
 	001ae1fc mov mar,0xc2ef20
 	001ae208 memread4 ax
 	001ae210 push ax
 	001ae218 mov ax,0x0
 	001ae224 pop bx
 	001ae22c cmpeq bx,ax
 	001ae238 mov ax,bx
 	001ae244 jz 0x001ae56c
		001ae56c: CONDITIONAL_JUMP
		001ae24c: FALL_THROUGH

	[001ae24c]
		001ae1f4: FALL_THROUGH
 	001ae24c sourceline 0x1fcd
 	001ae254 mov mar,0x42ef20
 	001ae260 push mar
 	001ae268 pop mar
 	001ae270 memread.ptr ax
 	001ae278 push ax
 	001ae280 pop mar
 	001ae288 mov ax,mar
 	001ae294 push op
 	001ae29c mov op,ax
 	001ae2a4 setfuncargs 0x0
 	001ae2ac mov ax,0x78ef20
 	001ae2b8 farcall ax
 	001ae2c0 pop op
 	001ae2c8 push ax
 	001ae2d0 mov ax,0x83
 	001ae2dc pop bx
 	001ae2e4 cmplt bx,ax
 	001ae2f0 mov ax,bx
 	001ae2fc jz 0x001ae39c
		001ae39c: CONDITIONAL_JUMP
		001ae304: FALL_THROUGH

	[001ae304]
		001ae24c: FALL_THROUGH
 	001ae304 push op
 	001ae30c mov ax,0x397
 	001ae318 farpush ax
 	001ae320 mov ax,0xa6
 	001ae32c farpush ax
 	001ae334 mov ax,0xa9
 	001ae340 farpush ax
 	001ae348 mov mar,0x3cef20
 	001ae354 mov ax,mar
 	001ae360 mov op,ax
 	001ae368 setfuncargs 0x3
 	001ae370 mov ax,0x726f20
 	001ae37c farcall ax
 	001ae384 farsubsp 0x3
 	001ae38c pop op
 	001ae394 jmp 0x001ae434
		001ae434: UNCONDITIONAL_JUMP

	[001ae39c]
		001ae24c: CONDITIONAL_JUMP
 	001ae39c sourceline 0x1fce
 	001ae3a4 push op
 	001ae3ac mov ax,0x397
 	001ae3b8 farpush ax
 	001ae3c0 mov ax,0x6d
 	001ae3cc farpush ax
 	001ae3d4 mov ax,0xd1
 	001ae3e0 farpush ax
 	001ae3e8 mov mar,0x3cef20
 	001ae3f4 mov ax,mar
 	001ae400 mov op,ax
 	001ae408 setfuncargs 0x3
 	001ae410 mov ax,0x726f20
 	001ae41c farcall ax
 	001ae424 farsubsp 0x3
 	001ae42c pop op
		001ae434: FALL_THROUGH

	[001ae434]
		001ae304: UNCONDITIONAL_JUMP
		001ae39c: FALL_THROUGH
 	001ae434 sourceline 0x1fcf
 	001ae43c mov ax,0x1
 	001ae448 mov bx,ax
 	001ae454 mov mar,0x3cef20
 	001ae460 mov ax,mar
 	001ae46c push op
 	001ae474 mov op,ax
 	001ae47c farpush bx
 	001ae484 setfuncargs 0x1
 	001ae48c mov ax,0x69ef20
 	001ae498 farcall ax
 	001ae4a0 farsubsp 0x1
 	001ae4a8 pop op
 	001ae4b0 sourceline 0x1fd0
 	001ae4b8 push op
 	001ae4c0 mov ax,0x2c3d97
 	001ae4cc farpush ax
 	001ae4d4 mov ax,0x138
 	001ae4e0 farpush ax
 	001ae4e8 mov ax,0x92
 	001ae4f4 farpush ax
 	001ae4fc mov ax,0x0
 	001ae508 farpush ax
 	001ae510 mov mar,0x3cef20
 	001ae51c mov ax,mar
 	001ae528 mov op,ax
 	001ae530 setfuncargs 0x4
 	001ae538 mov ax,0x6aef20
 	001ae544 farcall ax
 	001ae54c farsubsp 0x4
 	001ae554 pop op
 	001ae55c sourceline 0x1fd1
 	001ae564 jmp 0x001ae87c
		001ae87c: UNCONDITIONAL_JUMP

	[001ae56c]
		001ae1f4: CONDITIONAL_JUMP
 	001ae56c sourceline 0x1fd4
 	001ae574 mov mar,0x42ef20
 	001ae580 push mar
 	001ae588 pop mar
 	001ae590 memread.ptr ax
 	001ae598 push ax
 	001ae5a0 pop mar
 	001ae5a8 mov ax,mar
 	001ae5b4 push op
 	001ae5bc mov op,ax
 	001ae5c4 setfuncargs 0x0
 	001ae5cc mov ax,0x78ef20
 	001ae5d8 farcall ax
 	001ae5e0 pop op
 	001ae5e8 push ax
 	001ae5f0 mov ax,0x83
 	001ae5fc pop bx
 	001ae604 cmplt bx,ax
 	001ae610 mov ax,bx
 	001ae61c jz 0x001ae6bc
		001ae6bc: CONDITIONAL_JUMP
		001ae624: FALL_THROUGH

	[001ae624]
		001ae56c: FALL_THROUGH
 	001ae624 push op
 	001ae62c mov ax,0x397
 	001ae638 farpush ax
 	001ae640 mov ax,0xa6
 	001ae64c farpush ax
 	001ae654 mov ax,0xa9
 	001ae660 farpush ax
 	001ae668 mov mar,0x3cef20
 	001ae674 mov ax,mar
 	001ae680 mov op,ax
 	001ae688 setfuncargs 0x3
 	001ae690 mov ax,0x726f20
 	001ae69c farcall ax
 	001ae6a4 farsubsp 0x3
 	001ae6ac pop op
 	001ae6b4 jmp 0x001ae754
		001ae754: UNCONDITIONAL_JUMP

	[001ae6bc]
		001ae56c: CONDITIONAL_JUMP
 	001ae6bc sourceline 0x1fd5
 	001ae6c4 push op
 	001ae6cc mov ax,0x397
 	001ae6d8 farpush ax
 	001ae6e0 mov ax,0x6d
 	001ae6ec farpush ax
 	001ae6f4 mov ax,0xd1
 	001ae700 farpush ax
 	001ae708 mov mar,0x3cef20
 	001ae714 mov ax,mar
 	001ae720 mov op,ax
 	001ae728 setfuncargs 0x3
 	001ae730 mov ax,0x726f20
 	001ae73c farcall ax
 	001ae744 farsubsp 0x3
 	001ae74c pop op
		001ae754: FALL_THROUGH

	[001ae754]
		001ae624: UNCONDITIONAL_JUMP
		001ae6bc: FALL_THROUGH
 	001ae754 sourceline 0x1fd6
 	001ae75c mov ax,0x1
 	001ae768 mov bx,ax
 	001ae774 mov mar,0x3cef20
 	001ae780 mov ax,mar
 	001ae78c push op
 	001ae794 mov op,ax
 	001ae79c farpush bx
 	001ae7a4 setfuncargs 0x1
 	001ae7ac mov ax,0x69ef20
 	001ae7b8 farcall ax
 	001ae7c0 farsubsp 0x1
 	001ae7c8 pop op
 	001ae7d0 sourceline 0x1fd7
 	001ae7d8 push op
 	001ae7e0 mov ax,0x2c3de2
 	001ae7ec farpush ax
 	001ae7f4 mov ax,0x138
 	001ae800 farpush ax
 	001ae808 mov ax,0x92
 	001ae814 farpush ax
 	001ae81c mov ax,0x0
 	001ae828 farpush ax
 	001ae830 mov mar,0x3cef20
 	001ae83c mov ax,mar
 	001ae848 mov op,ax
 	001ae850 setfuncargs 0x4
 	001ae858 mov ax,0x6aef20
 	001ae864 farcall ax
 	001ae86c farsubsp 0x4
 	001ae874 pop op
		001ae87c: FALL_THROUGH

	[001ae87c]
		001ae434: UNCONDITIONAL_JUMP
		001ae754: FALL_THROUGH
 	001ae87c sourceline 0x1fd9
 	001ae884 jmp 0x001aec38
		001aec38: UNCONDITIONAL_JUMP

	[001ae88c]
		001ae158: CONDITIONAL_JUMP
 	001ae88c sourceline 0x1fdc
 	001ae894 mov mar,0x3cef20
 	001ae8a0 mov ax,mar
 	001ae8ac push op
 	001ae8b4 mov op,ax
 	001ae8bc setfuncargs 0x0
 	001ae8c4 mov ax,0x89ef20
 	001ae8d0 farcall ax
 	001ae8d8 pop op
 	001ae8e0 push ax
 	001ae8e8 mov mar,0x92ef20
 	001ae8f4 mov ax,mar
 	001ae900 pop bx
 	001ae908 cmpeq bx,ax
 	001ae914 mov ax,bx
 	001ae920 jz 0x001aec38
		001aec38: CONDITIONAL_JUMP
		001ae928: FALL_THROUGH

	[001ae928]
		001ae88c: FALL_THROUGH
 	001ae928 sourceline 0x1fde
 	001ae930 mov mar,0x42ef20
 	001ae93c push mar
 	001ae944 pop mar
 	001ae94c memread.ptr ax
 	001ae954 push ax
 	001ae95c pop mar
 	001ae964 mov ax,mar
 	001ae970 push op
 	001ae978 mov op,ax
 	001ae980 setfuncargs 0x0
 	001ae988 mov ax,0x78ef20
 	001ae994 farcall ax
 	001ae99c pop op
 	001ae9a4 push ax
 	001ae9ac mov ax,0x83
 	001ae9b8 pop bx
 	001ae9c0 cmplt bx,ax
 	001ae9cc mov ax,bx
 	001ae9d8 jz 0x001aea78
		001aea78: CONDITIONAL_JUMP
		001ae9e0: FALL_THROUGH

	[001ae9e0]
		001ae928: FALL_THROUGH
 	001ae9e0 push op
 	001ae9e8 mov ax,0x397
 	001ae9f4 farpush ax
 	001ae9fc mov ax,0xa6
 	001aea08 farpush ax
 	001aea10 mov ax,0xa9
 	001aea1c farpush ax
 	001aea24 mov mar,0x3cef20
 	001aea30 mov ax,mar
 	001aea3c mov op,ax
 	001aea44 setfuncargs 0x3
 	001aea4c mov ax,0x726f20
 	001aea58 farcall ax
 	001aea60 farsubsp 0x3
 	001aea68 pop op
 	001aea70 jmp 0x001aeb10
		001aeb10: UNCONDITIONAL_JUMP

	[001aea78]
		001ae928: CONDITIONAL_JUMP
 	001aea78 sourceline 0x1fdf
 	001aea80 push op
 	001aea88 mov ax,0x397
 	001aea94 farpush ax
 	001aea9c mov ax,0x6d
 	001aeaa8 farpush ax
 	001aeab0 mov ax,0xd1
 	001aeabc farpush ax
 	001aeac4 mov mar,0x3cef20
 	001aead0 mov ax,mar
 	001aeadc mov op,ax
 	001aeae4 setfuncargs 0x3
 	001aeaec mov ax,0x726f20
 	001aeaf8 farcall ax
 	001aeb00 farsubsp 0x3
 	001aeb08 pop op
		001aeb10: FALL_THROUGH

	[001aeb10]
		001ae9e0: UNCONDITIONAL_JUMP
		001aea78: FALL_THROUGH
 	001aeb10 sourceline 0x1fe0
 	001aeb18 mov ax,0x1
 	001aeb24 mov bx,ax
 	001aeb30 mov mar,0x3cef20
 	001aeb3c mov ax,mar
 	001aeb48 push op
 	001aeb50 mov op,ax
 	001aeb58 farpush bx
 	001aeb60 setfuncargs 0x1
 	001aeb68 mov ax,0x69ef20
 	001aeb74 farcall ax
 	001aeb7c farsubsp 0x1
 	001aeb84 pop op
 	001aeb8c sourceline 0x1fe1
 	001aeb94 push op
 	001aeb9c mov ax,0x2c3e16
 	001aeba8 farpush ax
 	001aebb0 mov ax,0x138
 	001aebbc farpush ax
 	001aebc4 mov ax,0x92
 	001aebd0 farpush ax
 	001aebd8 mov ax,0x0
 	001aebe4 farpush ax
 	001aebec mov mar,0x3cef20
 	001aebf8 mov ax,mar
 	001aec04 mov op,ax
 	001aec0c setfuncargs 0x4
 	001aec14 mov ax,0x6aef20
 	001aec20 farcall ax
 	001aec28 farsubsp 0x4
 	001aec30 pop op
		001aec38: FALL_THROUGH

	[001aec38]
		001ac934: UNCONDITIONAL_JUMP
		001ae148: UNCONDITIONAL_JUMP
		001ae87c: UNCONDITIONAL_JUMP
		001ae88c: CONDITIONAL_JUMP
		001aeb10: FALL_THROUGH
 	001aec38 sourceline 0x1fe3
 	001aec40 mov ax,0x0
 	001aec4c ret

cButcher_UseInv$0:
	[001aec50]
 	001aec50 sourceline 0x1fe9
 	001aec58 thisaddr
 	001aec60 sourceline 0x1fea
*	001aec68 mov mar,0x3cef20
 	001aec74 mov ax,mar
 	001aec80 push op
 	001aec88 mov op,ax
 	001aec90 setfuncargs 0x0
 	001aec98 mov ax,0x89ef20
 	001aeca4 farcall ax
 	001aecac pop op
 	001aecb4 push ax
 	001aecbc mov mar,0x8cef20
 	001aecc8 mov ax,mar
 	001aecd4 pop bx
 	001aecdc cmpeq bx,ax
 	001aece8 mov ax,bx
 	001aecf4 jnz 0x001aedb0
		001aedb0: CONDITIONAL_JUMP
		001aecfc: FALL_THROUGH

	[001aecfc]
		001aec50: FALL_THROUGH
 	001aecfc push ax
 	001aed04 mov mar,0x3cef20
 	001aed10 mov ax,mar
 	001aed1c push op
 	001aed24 mov op,ax
 	001aed2c setfuncargs 0x0
 	001aed34 mov ax,0x89ef20
 	001aed40 farcall ax
 	001aed48 pop op
 	001aed50 push ax
 	001aed58 mov mar,0x8b6f20
 	001aed64 mov ax,mar
 	001aed70 pop bx
 	001aed78 cmpeq bx,ax
 	001aed84 mov ax,bx
 	001aed90 pop bx
 	001aed98 lor bx,ax
 	001aeda4 mov ax,bx
		001aedb0: FALL_THROUGH

	[001aedb0]
		001aec50: CONDITIONAL_JUMP
		001aecfc: FALL_THROUGH
 	001aedb0 jnz 0x001aee6c
		001aee6c: CONDITIONAL_JUMP
		001aedb8: FALL_THROUGH

	[001aedb8]
		001aedb0: FALL_THROUGH
 	001aedb8 push ax
 	001aedc0 mov mar,0x3cef20
 	001aedcc mov ax,mar
 	001aedd8 push op
 	001aede0 mov op,ax
 	001aede8 setfuncargs 0x0
 	001aedf0 mov ax,0x89ef20
 	001aedfc farcall ax
 	001aee04 pop op
 	001aee0c push ax
 	001aee14 mov mar,0x8c6f20
 	001aee20 mov ax,mar
 	001aee2c pop bx
 	001aee34 cmpeq bx,ax
 	001aee40 mov ax,bx
 	001aee4c pop bx
 	001aee54 lor bx,ax
 	001aee60 mov ax,bx
		001aee6c: FALL_THROUGH

	[001aee6c]
		001aedb0: CONDITIONAL_JUMP
		001aedb8: FALL_THROUGH
 	001aee6c jnz 0x001aef28
		001aef28: CONDITIONAL_JUMP
		001aee74: FALL_THROUGH

	[001aee74]
		001aee6c: FALL_THROUGH
 	001aee74 push ax
 	001aee7c mov mar,0x3cef20
 	001aee88 mov ax,mar
 	001aee94 push op
 	001aee9c mov op,ax
 	001aeea4 setfuncargs 0x0
 	001aeeac mov ax,0x89ef20
 	001aeeb8 farcall ax
 	001aeec0 pop op
 	001aeec8 push ax
 	001aeed0 mov mar,0x7def20
 	001aeedc mov ax,mar
 	001aeee8 pop bx
 	001aeef0 cmpeq bx,ax
 	001aeefc mov ax,bx
 	001aef08 pop bx
 	001aef10 lor bx,ax
 	001aef1c mov ax,bx
		001aef28: FALL_THROUGH

	[001aef28]
		001aee6c: CONDITIONAL_JUMP
		001aee74: FALL_THROUGH
 	001aef28 jnz 0x001aefe4
		001aefe4: CONDITIONAL_JUMP
		001aef30: FALL_THROUGH

	[001aef30]
		001aef28: FALL_THROUGH
 	001aef30 push ax
 	001aef38 mov mar,0x3cef20
 	001aef44 mov ax,mar
 	001aef50 push op
 	001aef58 mov op,ax
 	001aef60 setfuncargs 0x0
 	001aef68 mov ax,0x89ef20
 	001aef74 farcall ax
 	001aef7c pop op
 	001aef84 push ax
 	001aef8c mov mar,0x8def20
 	001aef98 mov ax,mar
 	001aefa4 pop bx
 	001aefac cmpeq bx,ax
 	001aefb8 mov ax,bx
 	001aefc4 pop bx
 	001aefcc lor bx,ax
 	001aefd8 mov ax,bx
		001aefe4: FALL_THROUGH

	[001aefe4]
		001aef28: CONDITIONAL_JUMP
		001aef30: FALL_THROUGH
 	001aefe4 jnz 0x001af0a0
		001af0a0: CONDITIONAL_JUMP
		001aefec: FALL_THROUGH

	[001aefec]
		001aefe4: FALL_THROUGH
 	001aefec push ax
 	001aeff4 mov mar,0x3cef20
 	001af000 mov ax,mar
 	001af00c push op
 	001af014 mov op,ax
 	001af01c setfuncargs 0x0
 	001af024 mov ax,0x89ef20
 	001af030 farcall ax
 	001af038 pop op
 	001af040 push ax
 	001af048 mov mar,0x8aef20
 	001af054 mov ax,mar
 	001af060 pop bx
 	001af068 cmpeq bx,ax
 	001af074 mov ax,bx
 	001af080 pop bx
 	001af088 lor bx,ax
 	001af094 mov ax,bx
		001af0a0: FALL_THROUGH

	[001af0a0]
		001aefe4: CONDITIONAL_JUMP
		001aefec: FALL_THROUGH
 	001af0a0 jnz 0x001af15c
		001af15c: CONDITIONAL_JUMP
		001af0a8: FALL_THROUGH

	[001af0a8]
		001af0a0: FALL_THROUGH
 	001af0a8 push ax
 	001af0b0 mov mar,0x3cef20
 	001af0bc mov ax,mar
 	001af0c8 push op
 	001af0d0 mov op,ax
 	001af0d8 setfuncargs 0x0
 	001af0e0 mov ax,0x89ef20
 	001af0ec farcall ax
 	001af0f4 pop op
 	001af0fc push ax
 	001af104 mov mar,0x8e6f20
 	001af110 mov ax,mar
 	001af11c pop bx
 	001af124 cmpeq bx,ax
 	001af130 mov ax,bx
 	001af13c pop bx
 	001af144 lor bx,ax
 	001af150 mov ax,bx
		001af15c: FALL_THROUGH

	[001af15c]
		001af0a0: CONDITIONAL_JUMP
		001af0a8: FALL_THROUGH
 	001af15c jnz 0x001af218
		001af218: CONDITIONAL_JUMP
		001af164: FALL_THROUGH

	[001af164]
		001af15c: FALL_THROUGH
 	001af164 push ax
 	001af16c mov mar,0x3cef20
 	001af178 mov ax,mar
 	001af184 push op
 	001af18c mov op,ax
 	001af194 setfuncargs 0x0
 	001af19c mov ax,0x89ef20
 	001af1a8 farcall ax
 	001af1b0 pop op
 	001af1b8 push ax
 	001af1c0 mov mar,0x8eef20
 	001af1cc mov ax,mar
 	001af1d8 pop bx
 	001af1e0 cmpeq bx,ax
 	001af1ec mov ax,bx
 	001af1f8 pop bx
 	001af200 lor bx,ax
 	001af20c mov ax,bx
		001af218: FALL_THROUGH

	[001af218]
		001af15c: CONDITIONAL_JUMP
		001af164: FALL_THROUGH
 	001af218 jnz 0x001af2d4
		001af2d4: CONDITIONAL_JUMP
		001af220: FALL_THROUGH

	[001af220]
		001af218: FALL_THROUGH
 	001af220 push ax
 	001af228 mov mar,0x3cef20
 	001af234 mov ax,mar
 	001af240 push op
 	001af248 mov op,ax
 	001af250 setfuncargs 0x0
 	001af258 mov ax,0x89ef20
 	001af264 farcall ax
 	001af26c pop op
 	001af274 push ax
 	001af27c mov mar,0x8f6f20
 	001af288 mov ax,mar
 	001af294 pop bx
 	001af29c cmpeq bx,ax
 	001af2a8 mov ax,bx
 	001af2b4 pop bx
 	001af2bc lor bx,ax
 	001af2c8 mov ax,bx
		001af2d4: FALL_THROUGH

	[001af2d4]
		001af218: CONDITIONAL_JUMP
		001af220: FALL_THROUGH
 	001af2d4 jnz 0x001af390
		001af390: CONDITIONAL_JUMP
		001af2dc: FALL_THROUGH

	[001af2dc]
		001af2d4: FALL_THROUGH
 	001af2dc push ax
 	001af2e4 mov mar,0x3cef20
 	001af2f0 mov ax,mar
 	001af2fc push op
 	001af304 mov op,ax
 	001af30c setfuncargs 0x0
 	001af314 mov ax,0x89ef20
 	001af320 farcall ax
 	001af328 pop op
 	001af330 push ax
 	001af338 mov mar,0x8fef20
 	001af344 mov ax,mar
 	001af350 pop bx
 	001af358 cmpeq bx,ax
 	001af364 mov ax,bx
 	001af370 pop bx
 	001af378 lor bx,ax
 	001af384 mov ax,bx
		001af390: FALL_THROUGH

	[001af390]
		001af2d4: CONDITIONAL_JUMP
		001af2dc: FALL_THROUGH
 	001af390 jnz 0x001af44c
		001af44c: CONDITIONAL_JUMP
		001af398: FALL_THROUGH

	[001af398]
		001af390: FALL_THROUGH
 	001af398 push ax
 	001af3a0 mov mar,0x3cef20
 	001af3ac mov ax,mar
 	001af3b8 push op
 	001af3c0 mov op,ax
 	001af3c8 setfuncargs 0x0
 	001af3d0 mov ax,0x89ef20
 	001af3dc farcall ax
 	001af3e4 pop op
 	001af3ec push ax
 	001af3f4 mov mar,0x906f20
 	001af400 mov ax,mar
 	001af40c pop bx
 	001af414 cmpeq bx,ax
 	001af420 mov ax,bx
 	001af42c pop bx
 	001af434 lor bx,ax
 	001af440 mov ax,bx
		001af44c: FALL_THROUGH

	[001af44c]
		001af390: CONDITIONAL_JUMP
		001af398: FALL_THROUGH
 	001af44c jnz 0x001af508
		001af508: CONDITIONAL_JUMP
		001af454: FALL_THROUGH

	[001af454]
		001af44c: FALL_THROUGH
 	001af454 push ax
 	001af45c mov mar,0x3cef20
 	001af468 mov ax,mar
 	001af474 push op
 	001af47c mov op,ax
 	001af484 setfuncargs 0x0
 	001af48c mov ax,0x89ef20
 	001af498 farcall ax
 	001af4a0 pop op
 	001af4a8 push ax
 	001af4b0 mov mar,0x976f20
 	001af4bc mov ax,mar
 	001af4c8 pop bx
 	001af4d0 cmpeq bx,ax
 	001af4dc mov ax,bx
 	001af4e8 pop bx
 	001af4f0 lor bx,ax
 	001af4fc mov ax,bx
		001af508: FALL_THROUGH

	[001af508]
		001af44c: CONDITIONAL_JUMP
		001af454: FALL_THROUGH
 	001af508 jnz 0x001af5c4
		001af5c4: CONDITIONAL_JUMP
		001af510: FALL_THROUGH

	[001af510]
		001af508: FALL_THROUGH
 	001af510 push ax
 	001af518 mov mar,0x3cef20
 	001af524 mov ax,mar
 	001af530 push op
 	001af538 mov op,ax
 	001af540 setfuncargs 0x0
 	001af548 mov ax,0x89ef20
 	001af554 farcall ax
 	001af55c pop op
 	001af564 push ax
 	001af56c mov mar,0x846f20
 	001af578 mov ax,mar
 	001af584 pop bx
 	001af58c cmpeq bx,ax
 	001af598 mov ax,bx
 	001af5a4 pop bx
 	001af5ac lor bx,ax
 	001af5b8 mov ax,bx
		001af5c4: FALL_THROUGH

	[001af5c4]
		001af508: CONDITIONAL_JUMP
		001af510: FALL_THROUGH
 	001af5c4 jnz 0x001af680
		001af680: CONDITIONAL_JUMP
		001af5cc: FALL_THROUGH

	[001af5cc]
		001af5c4: FALL_THROUGH
 	001af5cc push ax
 	001af5d4 mov mar,0x3cef20
 	001af5e0 mov ax,mar
 	001af5ec push op
 	001af5f4 mov op,ax
 	001af5fc setfuncargs 0x0
 	001af604 mov ax,0x89ef20
 	001af610 farcall ax
 	001af618 pop op
 	001af620 push ax
 	001af628 mov mar,0x90ef20
 	001af634 mov ax,mar
 	001af640 pop bx
 	001af648 cmpeq bx,ax
 	001af654 mov ax,bx
 	001af660 pop bx
 	001af668 lor bx,ax
 	001af674 mov ax,bx
		001af680: FALL_THROUGH

	[001af680]
		001af5c4: CONDITIONAL_JUMP
		001af5cc: FALL_THROUGH
 	001af680 jnz 0x001af73c
		001af73c: CONDITIONAL_JUMP
		001af688: FALL_THROUGH

	[001af688]
		001af680: FALL_THROUGH
 	001af688 push ax
 	001af690 mov mar,0x3cef20
 	001af69c mov ax,mar
 	001af6a8 push op
 	001af6b0 mov op,ax
 	001af6b8 setfuncargs 0x0
 	001af6c0 mov ax,0x89ef20
 	001af6cc farcall ax
 	001af6d4 pop op
 	001af6dc push ax
 	001af6e4 mov mar,0x916f20
 	001af6f0 mov ax,mar
 	001af6fc pop bx
 	001af704 cmpeq bx,ax
 	001af710 mov ax,bx
 	001af71c pop bx
 	001af724 lor bx,ax
 	001af730 mov ax,bx
		001af73c: FALL_THROUGH

	[001af73c]
		001af680: CONDITIONAL_JUMP
		001af688: FALL_THROUGH
 	001af73c jz 0x001b0584
		001b0584: CONDITIONAL_JUMP
		001af744: FALL_THROUGH

	[001af744]
		001af73c: FALL_THROUGH
 	001af744 sourceline 0x1ff0
 	001af74c setfuncargs 0x0
 	001af754 mov ax,0x6def20
 	001af760 farcall ax
 	001af768 lnot ax
 	001af770 jz 0x001af7cc
		001af7cc: CONDITIONAL_JUMP
		001af778: FALL_THROUGH

	[001af778]
		001af744: FALL_THROUGH
 	001af778 mov ax,0x8c
 	001af784 farpush ax
 	001af78c mov ax,0xe5
 	001af798 farpush ax
 	001af7a0 setfuncargs 0x2
 	001af7a8 mov ax,0x6e6f20
 	001af7b4 farcall ax
 	001af7bc farsubsp 0x2
 	001af7c4 jmp 0x001b0574
		001b0574: UNCONDITIONAL_JUMP

	[001af7cc]
		001af744: CONDITIONAL_JUMP
 	001af7cc sourceline 0x1ff3
 	001af7d4 mov ax,0x3
 	001af7e0 mov bx,ax
 	001af7ec mov mar,0x3cef20
 	001af7f8 mov ax,mar
 	001af804 push op
 	001af80c mov op,ax
 	001af814 farpush bx
 	001af81c setfuncargs 0x1
 	001af824 mov ax,0x69ef20
 	001af830 farcall ax
 	001af838 farsubsp 0x1
 	001af840 pop op
 	001af848 sourceline 0x1ff4
 	001af850 push op
 	001af858 mov ax,0x397
 	001af864 farpush ax
 	001af86c mov ax,0x2
 	001af878 farpush ax
 	001af880 mov mar,0x3cef20
 	001af88c mov ax,mar
 	001af898 mov op,ax
 	001af8a0 setfuncargs 0x2
 	001af8a8 mov ax,0x6eef20
 	001af8b4 farcall ax
 	001af8bc farsubsp 0x2
 	001af8c4 pop op
 	001af8cc sourceline 0x1ff5
 	001af8d4 push op
 	001af8dc mov ax,0x426
 	001af8e8 farpush ax
 	001af8f0 mov ax,0x397
 	001af8fc farpush ax
 	001af904 mov ax,0x0
 	001af910 farpush ax
 	001af918 mov ax,0x3
 	001af924 farpush ax
 	001af92c mov ax,0x0
 	001af938 farpush ax
 	001af940 mov mar,0xbdef20
 	001af94c mov ax,mar
 	001af958 mov op,ax
 	001af960 setfuncargs 0x5
 	001af968 mov ax,0x536f20
 	001af974 farcall ax
 	001af97c farsubsp 0x5
 	001af984 pop op
 	001af98c sourceline 0x1ff6
 	001af994 push op
 	001af99c mov ax,0x7
 	001af9a8 farpush ax
 	001af9b0 mov mar,0x3cef20
 	001af9bc mov ax,mar
 	001af9c8 mov op,ax
 	001af9d0 setfuncargs 0x1
 	001af9d8 mov ax,0x51ef20
 	001af9e4 farcall ax
 	001af9ec farsubsp 0x1
 	001af9f4 pop op
 	001af9fc sourceline 0x1ff7
 	001afa04 mov ax,0x0
 	001afa10 mov bx,ax
 	001afa1c mov mar,0x3cef20
 	001afa28 mov ax,mar
 	001afa34 push op
 	001afa3c mov op,ax
 	001afa44 farpush bx
 	001afa4c setfuncargs 0x1
 	001afa54 mov ax,0x436f20
 	001afa60 farcall ax
 	001afa68 farsubsp 0x1
 	001afa70 pop op
 	001afa78 sourceline 0x1ff8
 	001afa80 mov mar,0x3cef20
 	001afa8c mov ax,mar
 	001afa98 push op
 	001afaa0 mov op,ax
 	001afaa8 setfuncargs 0x0
 	001afab0 mov ax,0x78ef20
 	001afabc farcall ax
 	001afac4 pop op
 	001afacc push ax
 	001afad4 mov ax,0x8
 	001afae0 pop bx
 	001afae8 sub bx,ax
 	001afaf4 mov ax,bx
 	001afb00 mov bx,ax
 	001afb0c mov mar,0x3cef20
 	001afb18 mov ax,mar
 	001afb24 push op
 	001afb2c mov op,ax
 	001afb34 farpush bx
 	001afb3c setfuncargs 0x1
 	001afb44 mov ax,0x526f20
 	001afb50 farcall ax
 	001afb58 farsubsp 0x1
 	001afb60 pop op
 	001afb68 sourceline 0x1ff9
 	001afb70 mov mar,0x3cef20
 	001afb7c mov ax,mar
 	001afb88 push op
 	001afb90 mov op,ax
 	001afb98 setfuncargs 0x0
 	001afba0 mov ax,0xb36f20
 	001afbac farcall ax
 	001afbb4 pop op
 	001afbbc push ax
 	001afbc4 mov ax,0x9
 	001afbd0 pop bx
 	001afbd8 add bx,ax
 	001afbe4 mov ax,bx
 	001afbf0 mov bx,ax
 	001afbfc mov mar,0x3cef20
 	001afc08 mov ax,mar
 	001afc14 push op
 	001afc1c mov op,ax
 	001afc24 farpush bx
 	001afc2c setfuncargs 0x1
 	001afc34 mov ax,0x70ef20
 	001afc40 farcall ax
 	001afc48 farsubsp 0x1
 	001afc50 pop op
 	001afc58 sourceline 0x1ffa
 	001afc60 push op
 	001afc68 mov ax,0x426
 	001afc74 farpush ax
 	001afc7c mov ax,0x397
 	001afc88 farpush ax
 	001afc90 mov ax,0x0
 	001afc9c farpush ax
 	001afca4 mov ax,0x3
 	001afcb0 farpush ax
 	001afcb8 mov ax,0x1
 	001afcc4 farpush ax
 	001afccc mov mar,0x3cef20
 	001afcd8 mov ax,mar
 	001afce4 mov op,ax
 	001afcec setfuncargs 0x5
 	001afcf4 mov ax,0x536f20
 	001afd00 farcall ax
 	001afd08 farsubsp 0x5
 	001afd10 pop op
 	001afd18 sourceline 0x1ffc
 	001afd20 mov ax,0x3
 	001afd2c farpush ax
 	001afd34 setfuncargs 0x1
 	001afd3c mov ax,0x4a6f20
 	001afd48 farcall ax
 	001afd50 farsubsp 0x1
 	001afd58 mov mar,sp
 	001afd64 memwrite4 ax
 	001afd6c add sp,0x4
 	001afd78 sourceline 0x1ffd
 	001afd80 stackptr 0x4
 	001afd88 memread4 ax
 	001afd90 push ax
 	001afd98 mov ax,0x0
 	001afda4 pop bx
 	001afdac cmpeq bx,ax
 	001afdb8 mov ax,bx
 	001afdc4 jz 0x001afe3c
		001afe3c: CONDITIONAL_JUMP
		001afdcc: FALL_THROUGH

	[001afdcc]
		001af7cc: FALL_THROUGH
 	001afdcc push op
 	001afdd4 mov ax,0x2c8717
 	001afde0 farpush ax
 	001afde8 mov mar,0x3cef20
 	001afdf4 mov ax,mar
 	001afe00 mov op,ax
 	001afe08 setfuncargs 0x1
 	001afe10 mov ax,0x6f6f20
 	001afe1c farcall ax
 	001afe24 farsubsp 0x1
 	001afe2c pop op
 	001afe34 jmp 0x001b0034
		001b0034: UNCONDITIONAL_JUMP

	[001afe3c]
		001af7cc: CONDITIONAL_JUMP
 	001afe3c sourceline 0x1ffe
 	001afe44 stackptr 0x4
 	001afe4c memread4 ax
 	001afe54 push ax
 	001afe5c mov ax,0x1
 	001afe68 pop bx
 	001afe70 cmpeq bx,ax
 	001afe7c mov ax,bx
 	001afe88 jz 0x001aff00
		001aff00: CONDITIONAL_JUMP
		001afe90: FALL_THROUGH

	[001afe90]
		001afe3c: FALL_THROUGH
 	001afe90 push op
 	001afe98 mov ax,0x2c8740
 	001afea4 farpush ax
 	001afeac mov mar,0x3cef20
 	001afeb8 mov ax,mar
 	001afec4 mov op,ax
 	001afecc setfuncargs 0x1
 	001afed4 mov ax,0x6f6f20
 	001afee0 farcall ax
 	001afee8 farsubsp 0x1
 	001afef0 pop op
 	001afef8 jmp 0x001b0034
		001b0034: UNCONDITIONAL_JUMP

	[001aff00]
		001afe3c: CONDITIONAL_JUMP
 	001aff00 sourceline 0x1fff
 	001aff08 stackptr 0x4
 	001aff10 memread4 ax
 	001aff18 push ax
 	001aff20 mov ax,0x2
 	001aff2c pop bx
 	001aff34 cmpeq bx,ax
 	001aff40 mov ax,bx
 	001aff4c jz 0x001affc4
		001affc4: CONDITIONAL_JUMP
		001aff54: FALL_THROUGH

	[001aff54]
		001aff00: FALL_THROUGH
 	001aff54 push op
 	001aff5c mov ax,0x2c8769
 	001aff68 farpush ax
 	001aff70 mov mar,0x3cef20
 	001aff7c mov ax,mar
 	001aff88 mov op,ax
 	001aff90 setfuncargs 0x1
 	001aff98 mov ax,0x6f6f20
 	001affa4 farcall ax
 	001affac farsubsp 0x1
 	001affb4 pop op
 	001affbc jmp 0x001b0034
		001b0034: UNCONDITIONAL_JUMP

	[001affc4]
		001aff00: CONDITIONAL_JUMP
 	001affc4 sourceline 0x2000
 	001affcc push op
 	001affd4 mov ax,0x2c8792
 	001affe0 farpush ax
 	001affe8 mov mar,0x3cef20
 	001afff4 mov ax,mar
 	001b0000 mov op,ax
 	001b0008 setfuncargs 0x1
 	001b0010 mov ax,0x6f6f20
 	001b001c farcall ax
 	001b0024 farsubsp 0x1
 	001b002c pop op
		001b0034: FALL_THROUGH

	[001b0034]
		001afdcc: UNCONDITIONAL_JUMP
		001afe90: UNCONDITIONAL_JUMP
		001aff54: UNCONDITIONAL_JUMP
		001affc4: FALL_THROUGH
 	001b0034 sourceline 0x2002
 	001b003c push op
 	001b0044 mov ax,0x2c3eff
 	001b0050 farpush ax
 	001b0058 mov mar,0xbdef20
 	001b0064 mov ax,mar
 	001b0070 mov op,ax
 	001b0078 setfuncargs 0x1
 	001b0080 mov ax,0x6f6f20
 	001b008c farcall ax
 	001b0094 farsubsp 0x1
 	001b009c pop op
 	001b00a4 sourceline 0x2003
 	001b00ac push op
 	001b00b4 mov ax,0x2c3f3a
 	001b00c0 farpush ax
 	001b00c8 mov mar,0x3cef20
 	001b00d4 mov ax,mar
 	001b00e0 mov op,ax
 	001b00e8 setfuncargs 0x1
 	001b00f0 mov ax,0x6f6f20
 	001b00fc farcall ax
 	001b0104 farsubsp 0x1
 	001b010c pop op
 	001b0114 sourceline 0x2004
 	001b011c push op
 	001b0124 mov ax,0x427
 	001b0130 farpush ax
 	001b0138 mov ax,0x398
 	001b0144 farpush ax
 	001b014c mov ax,0x0
 	001b0158 farpush ax
 	001b0160 mov ax,0x3
 	001b016c farpush ax
 	001b0174 mov ax,0x0
 	001b0180 farpush ax
 	001b0188 mov mar,0xbdef20
 	001b0194 mov ax,mar
 	001b01a0 mov op,ax
 	001b01a8 setfuncargs 0x5
 	001b01b0 mov ax,0x536f20
 	001b01bc farcall ax
 	001b01c4 farsubsp 0x5
 	001b01cc pop op
 	001b01d4 sourceline 0x2005
 	001b01dc push op
 	001b01e4 mov ax,0x427
 	001b01f0 farpush ax
 	001b01f8 mov ax,0x397
 	001b0204 farpush ax
 	001b020c mov ax,0x0
 	001b0218 farpush ax
 	001b0220 mov ax,0x3
 	001b022c farpush ax
 	001b0234 mov ax,0x1
 	001b0240 farpush ax
 	001b0248 mov mar,0x3cef20
 	001b0254 mov ax,mar
 	001b0260 mov op,ax
 	001b0268 setfuncargs 0x5
 	001b0270 mov ax,0x536f20
 	001b027c farcall ax
 	001b0284 farsubsp 0x5
 	001b028c pop op
 	001b0294 sourceline 0x2006
 	001b029c push op
 	001b02a4 mov ax,0x2
 	001b02b0 farpush ax
 	001b02b8 mov mar,0x3cef20
 	001b02c4 mov ax,mar
 	001b02d0 mov op,ax
 	001b02d8 setfuncargs 0x1
 	001b02e0 mov ax,0x51ef20
 	001b02ec farcall ax
 	001b02f4 farsubsp 0x1
 	001b02fc pop op
 	001b0304 sourceline 0x2007
 	001b030c mov mar,0x3cef20
 	001b0318 mov ax,mar
 	001b0324 push op
 	001b032c mov op,ax
 	001b0334 setfuncargs 0x0
 	001b033c mov ax,0x78ef20
 	001b0348 farcall ax
 	001b0350 pop op
 	001b0358 push ax
 	001b0360 mov ax,0x8
 	001b036c pop bx
 	001b0374 add bx,ax
 	001b0380 mov ax,bx
 	001b038c mov bx,ax
 	001b0398 mov mar,0x3cef20
 	001b03a4 mov ax,mar
 	001b03b0 push op
 	001b03b8 mov op,ax
 	001b03c0 farpush bx
 	001b03c8 setfuncargs 0x1
 	001b03d0 mov ax,0x526f20
 	001b03dc farcall ax
 	001b03e4 farsubsp 0x1
 	001b03ec pop op
 	001b03f4 sourceline 0x2008
 	001b03fc mov mar,0x3cef20
 	001b0408 mov ax,mar
 	001b0414 push op
 	001b041c mov op,ax
 	001b0424 setfuncargs 0x0
 	001b042c mov ax,0xb36f20
 	001b0438 farcall ax
 	001b0440 pop op
 	001b0448 push ax
 	001b0450 mov ax,0x9
 	001b045c pop bx
 	001b0464 sub bx,ax
 	001b0470 mov ax,bx
 	001b047c mov bx,ax
 	001b0488 mov mar,0x3cef20
 	001b0494 mov ax,mar
 	001b04a0 push op
 	001b04a8 mov op,ax
 	001b04b0 farpush bx
 	001b04b8 setfuncargs 0x1
 	001b04c0 mov ax,0x70ef20
 	001b04cc farcall ax
 	001b04d4 farsubsp 0x1
 	001b04dc pop op
 	001b04e4 sourceline 0x2009
 	001b04ec mov ax,0x2
 	001b04f8 mov bx,ax
 	001b0504 mov mar,0x3cef20
 	001b0510 mov ax,mar
 	001b051c push op
 	001b0524 mov op,ax
 	001b052c farpush bx
 	001b0534 setfuncargs 0x1
 	001b053c mov ax,0x766f20
 	001b0548 farcall ax
 	001b0550 farsubsp 0x1
 	001b0558 pop op
 	001b0560 sourceline 0x200a
 	001b0568 sub sp,0x4
		001b0574: FALL_THROUGH

	[001b0574]
		001af778: UNCONDITIONAL_JUMP
		001b0034: FALL_THROUGH
 	001b0574 sourceline 0x200b
 	001b057c jmp 0x001b1a94
		001b1a94: UNCONDITIONAL_JUMP

	[001b0584]
		001af73c: CONDITIONAL_JUMP
 	001b0584 sourceline 0x200d
 	001b058c mov mar,0x3cef20
 	001b0598 mov ax,mar
 	001b05a4 push op
 	001b05ac mov op,ax
 	001b05b4 setfuncargs 0x0
 	001b05bc mov ax,0x89ef20
 	001b05c8 farcall ax
 	001b05d0 pop op
 	001b05d8 push ax
 	001b05e0 mov mar,0x8d6f20
 	001b05ec mov ax,mar
 	001b05f8 pop bx
 	001b0600 cmpeq bx,ax
 	001b060c mov ax,bx
 	001b0618 jz 0x001b1330
		001b1330: CONDITIONAL_JUMP
		001b0620: FALL_THROUGH

	[001b0620]
		001b0584: FALL_THROUGH
 	001b0620 sourceline 0x200f
 	001b0628 mov mar,0xc2ef20
 	001b0634 memread4 ax
 	001b063c push ax
 	001b0644 mov ax,0x0
 	001b0650 pop bx
 	001b0658 cmpeq bx,ax
 	001b0664 mov ax,bx
 	001b0670 jz 0x001b07b0
		001b07b0: CONDITIONAL_JUMP
		001b0678: FALL_THROUGH

	[001b0678]
		001b0620: FALL_THROUGH
 	001b0678 sourceline 0x2011
 	001b0680 mov ax,0x1
 	001b068c mov bx,ax
 	001b0698 mov mar,0x3cef20
 	001b06a4 mov ax,mar
 	001b06b0 push op
 	001b06b8 mov op,ax
 	001b06c0 farpush bx
 	001b06c8 setfuncargs 0x1
 	001b06d0 mov ax,0x69ef20
 	001b06dc farcall ax
 	001b06e4 farsubsp 0x1
 	001b06ec pop op
 	001b06f4 sourceline 0x2012
 	001b06fc push op
 	001b0704 mov ax,0x2c7d07
 	001b0710 farpush ax
 	001b0718 mov ax,0x138
 	001b0724 farpush ax
 	001b072c mov ax,0x92
 	001b0738 farpush ax
 	001b0740 mov ax,0x0
 	001b074c farpush ax
 	001b0754 mov mar,0x3cef20
 	001b0760 mov ax,mar
 	001b076c mov op,ax
 	001b0774 setfuncargs 0x4
 	001b077c mov ax,0x6aef20
 	001b0788 farcall ax
 	001b0790 farsubsp 0x4
 	001b0798 pop op
 	001b07a0 sourceline 0x2013
 	001b07a8 jmp 0x001b1320
		001b1320: UNCONDITIONAL_JUMP

	[001b07b0]
		001b0620: CONDITIONAL_JUMP
 	001b07b0 sourceline 0x2016
 	001b07b8 setfuncargs 0x0
 	001b07c0 mov ax,0x6def20
 	001b07cc farcall ax
 	001b07d4 lnot ax
 	001b07dc jz 0x001b0838
		001b0838: CONDITIONAL_JUMP
		001b07e4: FALL_THROUGH

	[001b07e4]
		001b07b0: FALL_THROUGH
 	001b07e4 mov ax,0x8c
 	001b07f0 farpush ax
 	001b07f8 mov ax,0xe5
 	001b0804 farpush ax
 	001b080c setfuncargs 0x2
 	001b0814 mov ax,0x6e6f20
 	001b0820 farcall ax
 	001b0828 farsubsp 0x2
 	001b0830 jmp 0x001b1320
		001b1320: UNCONDITIONAL_JUMP

	[001b0838]
		001b07b0: CONDITIONAL_JUMP
 	001b0838 sourceline 0x2019
 	001b0840 mov ax,0x0
 	001b084c mov bx,ax
 	001b0858 mov mar,0x3cef20
 	001b0864 mov ax,mar
 	001b0870 push op
 	001b0878 mov op,ax
 	001b0880 farpush bx
 	001b0888 setfuncargs 0x1
 	001b0890 mov ax,0x436f20
 	001b089c farcall ax
 	001b08a4 farsubsp 0x1
 	001b08ac pop op
 	001b08b4 sourceline 0x201a
 	001b08bc mov ax,0x3
 	001b08c8 mov bx,ax
 	001b08d4 mov mar,0x3cef20
 	001b08e0 mov ax,mar
 	001b08ec push op
 	001b08f4 mov op,ax
 	001b08fc farpush bx
 	001b0904 setfuncargs 0x1
 	001b090c mov ax,0x69ef20
 	001b0918 farcall ax
 	001b0920 farsubsp 0x1
 	001b0928 pop op
 	001b0930 sourceline 0x201b
 	001b0938 push op
 	001b0940 mov ax,0x397
 	001b094c farpush ax
 	001b0954 mov ax,0x2
 	001b0960 farpush ax
 	001b0968 mov mar,0x3cef20
 	001b0974 mov ax,mar
 	001b0980 mov op,ax
 	001b0988 setfuncargs 0x2
 	001b0990 mov ax,0x6eef20
 	001b099c farcall ax
 	001b09a4 farsubsp 0x2
 	001b09ac pop op
 	001b09b4 sourceline 0x201c
 	001b09bc push op
 	001b09c4 mov ax,0x426
 	001b09d0 farpush ax
 	001b09d8 mov ax,0x397
 	001b09e4 farpush ax
 	001b09ec mov ax,0x0
 	001b09f8 farpush ax
 	001b0a00 mov ax,0x3
 	001b0a0c farpush ax
 	001b0a14 mov ax,0x0
 	001b0a20 farpush ax
 	001b0a28 mov mar,0xbdef20
 	001b0a34 mov ax,mar
 	001b0a40 mov op,ax
 	001b0a48 setfuncargs 0x5
 	001b0a50 mov ax,0x536f20
 	001b0a5c farcall ax
 	001b0a64 farsubsp 0x5
 	001b0a6c pop op
 	001b0a74 sourceline 0x201d
 	001b0a7c push op
 	001b0a84 mov ax,0x7
 	001b0a90 farpush ax
 	001b0a98 mov mar,0x3cef20
 	001b0aa4 mov ax,mar
 	001b0ab0 mov op,ax
 	001b0ab8 setfuncargs 0x1
 	001b0ac0 mov ax,0x51ef20
 	001b0acc farcall ax
 	001b0ad4 farsubsp 0x1
 	001b0adc pop op
 	001b0ae4 sourceline 0x201e
 	001b0aec mov mar,0x3cef20
 	001b0af8 mov ax,mar
 	001b0b04 push op
 	001b0b0c mov op,ax
 	001b0b14 setfuncargs 0x0
 	001b0b1c mov ax,0x78ef20
 	001b0b28 farcall ax
 	001b0b30 pop op
 	001b0b38 push ax
 	001b0b40 mov ax,0x8
 	001b0b4c pop bx
 	001b0b54 sub bx,ax
 	001b0b60 mov ax,bx
 	001b0b6c mov bx,ax
 	001b0b78 mov mar,0x3cef20
 	001b0b84 mov ax,mar
 	001b0b90 push op
 	001b0b98 mov op,ax
 	001b0ba0 farpush bx
 	001b0ba8 setfuncargs 0x1
 	001b0bb0 mov ax,0x526f20
 	001b0bbc farcall ax
 	001b0bc4 farsubsp 0x1
 	001b0bcc pop op
 	001b0bd4 sourceline 0x201f
 	001b0bdc mov mar,0x3cef20
 	001b0be8 mov ax,mar
 	001b0bf4 push op
 	001b0bfc mov op,ax
 	001b0c04 setfuncargs 0x0
 	001b0c0c mov ax,0xb36f20
 	001b0c18 farcall ax
 	001b0c20 pop op
 	001b0c28 push ax
 	001b0c30 mov ax,0x9
 	001b0c3c pop bx
 	001b0c44 add bx,ax
 	001b0c50 mov ax,bx
 	001b0c5c mov bx,ax
 	001b0c68 mov mar,0x3cef20
 	001b0c74 mov ax,mar
 	001b0c80 push op
 	001b0c88 mov op,ax
 	001b0c90 farpush bx
 	001b0c98 setfuncargs 0x1
 	001b0ca0 mov ax,0x70ef20
 	001b0cac farcall ax
 	001b0cb4 farsubsp 0x1
 	001b0cbc pop op
 	001b0cc4 sourceline 0x2020
 	001b0ccc push op
 	001b0cd4 mov ax,0x426
 	001b0ce0 farpush ax
 	001b0ce8 mov ax,0x397
 	001b0cf4 farpush ax
 	001b0cfc mov ax,0x0
 	001b0d08 farpush ax
 	001b0d10 mov ax,0x3
 	001b0d1c farpush ax
 	001b0d24 mov ax,0x1
 	001b0d30 farpush ax
 	001b0d38 mov mar,0x3cef20
 	001b0d44 mov ax,mar
 	001b0d50 mov op,ax
 	001b0d58 setfuncargs 0x5
 	001b0d60 mov ax,0x536f20
 	001b0d6c farcall ax
 	001b0d74 farsubsp 0x5
 	001b0d7c pop op
 	001b0d84 sourceline 0x2021
 	001b0d8c push op
 	001b0d94 mov ax,0x2c3f65
 	001b0da0 farpush ax
 	001b0da8 mov mar,0x3cef20
 	001b0db4 mov ax,mar
 	001b0dc0 mov op,ax
 	001b0dc8 setfuncargs 0x1
 	001b0dd0 mov ax,0x6f6f20
 	001b0ddc farcall ax
 	001b0de4 farsubsp 0x1
 	001b0dec pop op
 	001b0df4 sourceline 0x2022
 	001b0dfc push op
 	001b0e04 mov ax,0x2c3f9b
 	001b0e10 farpush ax
 	001b0e18 mov mar,0xbdef20
 	001b0e24 mov ax,mar
 	001b0e30 mov op,ax
 	001b0e38 setfuncargs 0x1
 	001b0e40 mov ax,0x6f6f20
 	001b0e4c farcall ax
 	001b0e54 farsubsp 0x1
 	001b0e5c pop op
 	001b0e64 sourceline 0x2023
 	001b0e6c push op
 	001b0e74 mov ax,0x2c3fac
 	001b0e80 farpush ax
 	001b0e88 mov mar,0x3cef20
 	001b0e94 mov ax,mar
 	001b0ea0 mov op,ax
 	001b0ea8 setfuncargs 0x1
 	001b0eb0 mov ax,0x6f6f20
 	001b0ebc farcall ax
 	001b0ec4 farsubsp 0x1
 	001b0ecc pop op
 	001b0ed4 sourceline 0x2024
 	001b0edc push op
 	001b0ee4 mov ax,0x427
 	001b0ef0 farpush ax
 	001b0ef8 mov ax,0x398
 	001b0f04 farpush ax
 	001b0f0c mov ax,0x0
 	001b0f18 farpush ax
 	001b0f20 mov ax,0x3
 	001b0f2c farpush ax
 	001b0f34 mov ax,0x0
 	001b0f40 farpush ax
 	001b0f48 mov mar,0xbdef20
 	001b0f54 mov ax,mar
 	001b0f60 mov op,ax
 	001b0f68 setfuncargs 0x5
 	001b0f70 mov ax,0x536f20
 	001b0f7c farcall ax
 	001b0f84 farsubsp 0x5
 	001b0f8c pop op
 	001b0f94 sourceline 0x2025
 	001b0f9c push op
 	001b0fa4 mov ax,0x427
 	001b0fb0 farpush ax
 	001b0fb8 mov ax,0x397
 	001b0fc4 farpush ax
 	001b0fcc mov ax,0x0
 	001b0fd8 farpush ax
 	001b0fe0 mov ax,0x3
 	001b0fec farpush ax
 	001b0ff4 mov ax,0x1
 	001b1000 farpush ax
 	001b1008 mov mar,0x3cef20
 	001b1014 mov ax,mar
 	001b1020 mov op,ax
 	001b1028 setfuncargs 0x5
 	001b1030 mov ax,0x536f20
 	001b103c farcall ax
 	001b1044 farsubsp 0x5
 	001b104c pop op
 	001b1054 sourceline 0x2026
 	001b105c push op
 	001b1064 mov ax,0x2
 	001b1070 farpush ax
 	001b1078 mov mar,0x3cef20
 	001b1084 mov ax,mar
 	001b1090 mov op,ax
 	001b1098 setfuncargs 0x1
 	001b10a0 mov ax,0x51ef20
 	001b10ac farcall ax
 	001b10b4 farsubsp 0x1
 	001b10bc pop op
 	001b10c4 sourceline 0x2027
 	001b10cc mov mar,0x3cef20
 	001b10d8 mov ax,mar
 	001b10e4 push op
 	001b10ec mov op,ax
 	001b10f4 setfuncargs 0x0
 	001b10fc mov ax,0x78ef20
 	001b1108 farcall ax
 	001b1110 pop op
 	001b1118 push ax
 	001b1120 mov ax,0x8
 	001b112c pop bx
 	001b1134 add bx,ax
 	001b1140 mov ax,bx
 	001b114c mov bx,ax
 	001b1158 mov mar,0x3cef20
 	001b1164 mov ax,mar
 	001b1170 push op
 	001b1178 mov op,ax
 	001b1180 farpush bx
 	001b1188 setfuncargs 0x1
 	001b1190 mov ax,0x526f20
 	001b119c farcall ax
 	001b11a4 farsubsp 0x1
 	001b11ac pop op
 	001b11b4 sourceline 0x2028
 	001b11bc mov mar,0x3cef20
 	001b11c8 mov ax,mar
 	001b11d4 push op
 	001b11dc mov op,ax
 	001b11e4 setfuncargs 0x0
 	001b11ec mov ax,0xb36f20
 	001b11f8 farcall ax
 	001b1200 pop op
 	001b1208 push ax
 	001b1210 mov ax,0x9
 	001b121c pop bx
 	001b1224 sub bx,ax
 	001b1230 mov ax,bx
 	001b123c mov bx,ax
 	001b1248 mov mar,0x3cef20
 	001b1254 mov ax,mar
 	001b1260 push op
 	001b1268 mov op,ax
 	001b1270 farpush bx
 	001b1278 setfuncargs 0x1
 	001b1280 mov ax,0x70ef20
 	001b128c farcall ax
 	001b1294 farsubsp 0x1
 	001b129c pop op
 	001b12a4 sourceline 0x2029
 	001b12ac mov ax,0x2
 	001b12b8 mov bx,ax
 	001b12c4 mov mar,0x3cef20
 	001b12d0 mov ax,mar
 	001b12dc push op
 	001b12e4 mov op,ax
 	001b12ec farpush bx
 	001b12f4 setfuncargs 0x1
 	001b12fc mov ax,0x766f20
 	001b1308 farcall ax
 	001b1310 farsubsp 0x1
 	001b1318 pop op
		001b1320: FALL_THROUGH

	[001b1320]
		001b0678: UNCONDITIONAL_JUMP
		001b07e4: UNCONDITIONAL_JUMP
		001b0838: FALL_THROUGH
 	001b1320 sourceline 0x202c
 	001b1328 jmp 0x001b1a94
		001b1a94: UNCONDITIONAL_JUMP

	[001b1330]
		001b0584: CONDITIONAL_JUMP
 	001b1330 sourceline 0x202e
 	001b1338 mov mar,0x3cef20
 	001b1344 mov ax,mar
 	001b1350 push op
 	001b1358 mov op,ax
 	001b1360 setfuncargs 0x0
 	001b1368 mov ax,0x89ef20
 	001b1374 farcall ax
 	001b137c pop op
 	001b1384 push ax
 	001b138c mov mar,0x91ef20
 	001b1398 mov ax,mar
 	001b13a4 pop bx
 	001b13ac cmpeq bx,ax
 	001b13b8 mov ax,bx
 	001b13c4 jz 0x001b1838
		001b1838: CONDITIONAL_JUMP
		001b13cc: FALL_THROUGH

	[001b13cc]
		001b1330: FALL_THROUGH
 	001b13cc sourceline 0x2030
 	001b13d4 mov ax,0x0
 	001b13e0 assertlte ax,0x28
 	001b13ec mul ax,0x8
 	001b13f8 mov cx,ax
 	001b1404 mov mar,0x6fef20
 	001b1410 add mar,cx
 	001b141c mov ax,mar
 	001b1428 push op
 	001b1430 mov op,ax
 	001b1438 setfuncargs 0x0
 	001b1440 mov ax,0xbeef20
 	001b144c farcall ax
 	001b1454 pop op
 	001b145c push ax
 	001b1464 mov ax,0x8c
 	001b1470 pop bx
 	001b1478 cmpneq bx,ax
 	001b1484 mov ax,bx
 	001b1490 jz 0x001b1668
		001b1668: CONDITIONAL_JUMP
		001b1498: FALL_THROUGH

	[001b1498]
		001b13cc: FALL_THROUGH
 	001b1498 sourceline 0x2032
 	001b14a0 push op
 	001b14a8 mov ax,0x397
 	001b14b4 farpush ax
 	001b14bc mov ax,0x66
 	001b14c8 farpush ax
 	001b14d0 mov ax,0x13e
 	001b14dc farpush ax
 	001b14e4 mov mar,0x3cef20
 	001b14f0 mov ax,mar
 	001b14fc mov op,ax
 	001b1504 setfuncargs 0x3
 	001b150c mov ax,0x726f20
 	001b1518 farcall ax
 	001b1520 farsubsp 0x3
 	001b1528 pop op
 	001b1530 sourceline 0x2033
 	001b1538 mov ax,0x1
 	001b1544 mov bx,ax
 	001b1550 mov mar,0x3cef20
 	001b155c mov ax,mar
 	001b1568 push op
 	001b1570 mov op,ax
 	001b1578 farpush bx
 	001b1580 setfuncargs 0x1
 	001b1588 mov ax,0x69ef20
 	001b1594 farcall ax
 	001b159c farsubsp 0x1
 	001b15a4 pop op
 	001b15ac sourceline 0x2034
 	001b15b4 push op
 	001b15bc mov ax,0x2c3fbd
 	001b15c8 farpush ax
 	001b15d0 mov ax,0x138
 	001b15dc farpush ax
 	001b15e4 mov ax,0x92
 	001b15f0 farpush ax
 	001b15f8 mov ax,0x0
 	001b1604 farpush ax
 	001b160c mov mar,0x3cef20
 	001b1618 mov ax,mar
 	001b1624 mov op,ax
 	001b162c setfuncargs 0x4
 	001b1634 mov ax,0x6aef20
 	001b1640 farcall ax
 	001b1648 farsubsp 0x4
 	001b1650 pop op
 	001b1658 sourceline 0x2035
 	001b1660 jmp 0x001b1828
		001b1828: UNCONDITIONAL_JUMP

	[001b1668]
		001b13cc: CONDITIONAL_JUMP
 	001b1668 sourceline 0x2038
 	001b1670 push op
 	001b1678 mov ax,0x397
 	001b1684 farpush ax
 	001b168c mov ax,0x66
 	001b1698 farpush ax
 	001b16a0 mov ax,0x13e
 	001b16ac farpush ax
 	001b16b4 mov mar,0x3cef20
 	001b16c0 mov ax,mar
 	001b16cc mov op,ax
 	001b16d4 setfuncargs 0x3
 	001b16dc mov ax,0x726f20
 	001b16e8 farcall ax
 	001b16f0 farsubsp 0x3
 	001b16f8 pop op
 	001b1700 sourceline 0x2039
 	001b1708 mov ax,0x1
 	001b1714 mov bx,ax
 	001b1720 mov mar,0x3cef20
 	001b172c mov ax,mar
 	001b1738 push op
 	001b1740 mov op,ax
 	001b1748 farpush bx
 	001b1750 setfuncargs 0x1
 	001b1758 mov ax,0x69ef20
 	001b1764 farcall ax
 	001b176c farsubsp 0x1
 	001b1774 pop op
 	001b177c sourceline 0x203a
 	001b1784 push op
 	001b178c mov ax,0x2c3fe8
 	001b1798 farpush ax
 	001b17a0 mov ax,0x138
 	001b17ac farpush ax
 	001b17b4 mov ax,0x92
 	001b17c0 farpush ax
 	001b17c8 mov ax,0x0
 	001b17d4 farpush ax
 	001b17dc mov mar,0x3cef20
 	001b17e8 mov ax,mar
 	001b17f4 mov op,ax
 	001b17fc setfuncargs 0x4
 	001b1804 mov ax,0x6aef20
 	001b1810 farcall ax
 	001b1818 farsubsp 0x4
 	001b1820 pop op
		001b1828: FALL_THROUGH

	[001b1828]
		001b1498: UNCONDITIONAL_JUMP
		001b1668: FALL_THROUGH
 	001b1828 sourceline 0x203c
 	001b1830 jmp 0x001b1a94
		001b1a94: UNCONDITIONAL_JUMP

	[001b1838]
		001b1330: CONDITIONAL_JUMP
 	001b1838 sourceline 0x203e
 	001b1840 mov mar,0x3cef20
 	001b184c mov ax,mar
 	001b1858 push op
 	001b1860 mov op,ax
 	001b1868 setfuncargs 0x0
 	001b1870 mov ax,0x89ef20
 	001b187c farcall ax
 	001b1884 pop op
 	001b188c push ax
 	001b1894 mov mar,0x8bef20
 	001b18a0 mov ax,mar
 	001b18ac pop bx
 	001b18b4 cmpeq bx,ax
 	001b18c0 mov ax,bx
 	001b18cc jz 0x001b1a94
		001b1a94: CONDITIONAL_JUMP
		001b18d4: FALL_THROUGH

	[001b18d4]
		001b1838: FALL_THROUGH
 	001b18d4 sourceline 0x2040
 	001b18dc push op
 	001b18e4 mov ax,0x397
 	001b18f0 farpush ax
 	001b18f8 mov ax,0x66
 	001b1904 farpush ax
 	001b190c mov ax,0x13e
 	001b1918 farpush ax
 	001b1920 mov mar,0x3cef20
 	001b192c mov ax,mar
 	001b1938 mov op,ax
 	001b1940 setfuncargs 0x3
 	001b1948 mov ax,0x726f20
 	001b1954 farcall ax
 	001b195c farsubsp 0x3
 	001b1964 pop op
 	001b196c sourceline 0x2041
 	001b1974 mov ax,0x1
 	001b1980 mov bx,ax
 	001b198c mov mar,0x3cef20
 	001b1998 mov ax,mar
 	001b19a4 push op
 	001b19ac mov op,ax
 	001b19b4 farpush bx
 	001b19bc setfuncargs 0x1
 	001b19c4 mov ax,0x69ef20
 	001b19d0 farcall ax
 	001b19d8 farsubsp 0x1
 	001b19e0 pop op
 	001b19e8 sourceline 0x2042
 	001b19f0 push op
 	001b19f8 mov ax,0x2c4847
 	001b1a04 farpush ax
 	001b1a0c mov ax,0x138
 	001b1a18 farpush ax
 	001b1a20 mov ax,0x92
 	001b1a2c farpush ax
 	001b1a34 mov ax,0x0
 	001b1a40 farpush ax
 	001b1a48 mov mar,0x3cef20
 	001b1a54 mov ax,mar
 	001b1a60 mov op,ax
 	001b1a68 setfuncargs 0x4
 	001b1a70 mov ax,0x6aef20
 	001b1a7c farcall ax
 	001b1a84 farsubsp 0x4
 	001b1a8c pop op
		001b1a94: FALL_THROUGH

	[001b1a94]
		001b0574: UNCONDITIONAL_JUMP
		001b1320: UNCONDITIONAL_JUMP
		001b1828: UNCONDITIONAL_JUMP
		001b1838: CONDITIONAL_JUMP
		001b18d4: FALL_THROUGH
 	001b1a94 sourceline 0x2044
 	001b1a9c mov ax,0x0
 	001b1aa8 ret

cVegetableSeller_UseInv$0:
	[001b1aac]
 	001b1aac sourceline 0x2049
 	001b1ab4 thisaddr
 	001b1abc sourceline 0x204a
*	001b1ac4 mov mar,0x3cef20
 	001b1ad0 mov ax,mar
 	001b1adc push op
 	001b1ae4 mov op,ax
 	001b1aec setfuncargs 0x0
 	001b1af4 mov ax,0x89ef20
 	001b1b00 farcall ax
 	001b1b08 pop op
 	001b1b10 push ax
 	001b1b18 mov mar,0x8d6f20
 	001b1b24 mov ax,mar
 	001b1b30 pop bx
 	001b1b38 cmpeq bx,ax
 	001b1b44 mov ax,bx
 	001b1b50 jz 0x001b3e38
		001b3e38: CONDITIONAL_JUMP
		001b1b58: FALL_THROUGH

	[001b1b58]
		001b1aac: FALL_THROUGH
 	001b1b58 sourceline 0x204c
 	001b1b60 mov mar,0xc2ef20
 	001b1b6c memread4 ax
 	001b1b74 push ax
 	001b1b7c mov ax,0x0
 	001b1b88 pop bx
 	001b1b90 cmpeq bx,ax
 	001b1b9c mov ax,bx
 	001b1ba8 jz 0x001b1ce8
		001b1ce8: CONDITIONAL_JUMP
		001b1bb0: FALL_THROUGH

	[001b1bb0]
		001b1b58: FALL_THROUGH
 	001b1bb0 sourceline 0x204e
 	001b1bb8 mov ax,0x1
 	001b1bc4 mov bx,ax
 	001b1bd0 mov mar,0x3cef20
 	001b1bdc mov ax,mar
 	001b1be8 push op
 	001b1bf0 mov op,ax
 	001b1bf8 farpush bx
 	001b1c00 setfuncargs 0x1
 	001b1c08 mov ax,0x69ef20
 	001b1c14 farcall ax
 	001b1c1c farsubsp 0x1
 	001b1c24 pop op
 	001b1c2c sourceline 0x204f
 	001b1c34 push op
 	001b1c3c mov ax,0x2c7d07
 	001b1c48 farpush ax
 	001b1c50 mov ax,0x138
 	001b1c5c farpush ax
 	001b1c64 mov ax,0x92
 	001b1c70 farpush ax
 	001b1c78 mov ax,0x0
 	001b1c84 farpush ax
 	001b1c8c mov mar,0x3cef20
 	001b1c98 mov ax,mar
 	001b1ca4 mov op,ax
 	001b1cac setfuncargs 0x4
 	001b1cb4 mov ax,0x6aef20
 	001b1cc0 farcall ax
 	001b1cc8 farsubsp 0x4
 	001b1cd0 pop op
 	001b1cd8 sourceline 0x2050
 	001b1ce0 jmp 0x001b3e28
		001b3e28: UNCONDITIONAL_JUMP

	[001b1ce8]
		001b1b58: CONDITIONAL_JUMP
 	001b1ce8 sourceline 0x2053
 	001b1cf0 mov mar,0xbdef20
 	001b1cfc mov ax,mar
 	001b1d08 push op
 	001b1d10 mov op,ax
 	001b1d18 setfuncargs 0x0
 	001b1d20 mov ax,0x3d6f20
 	001b1d2c farcall ax
 	001b1d34 pop op
 	001b1d3c push ax
 	001b1d44 mov ax,0x19
 	001b1d50 pop bx
 	001b1d58 cmpeq bx,ax
 	001b1d64 mov ax,bx
 	001b1d70 jz 0x001b2c20
		001b2c20: CONDITIONAL_JUMP
		001b1d78: FALL_THROUGH

	[001b1d78]
		001b1ce8: FALL_THROUGH
 	001b1d78 sourceline 0x2055
 	001b1d80 mov mar,0xd36f20
 	001b1d8c memread4 ax
 	001b1d94 lnot ax
 	001b1d9c jz 0x001b2ae8
		001b2ae8: CONDITIONAL_JUMP
		001b1da4: FALL_THROUGH

	[001b1da4]
		001b1d78: FALL_THROUGH
 	001b1da4 sourceline 0x2057
 	001b1dac setfuncargs 0x0
 	001b1db4 mov ax,0x6def20
 	001b1dc0 farcall ax
 	001b1dc8 lnot ax
 	001b1dd0 jz 0x001b1e2c
		001b1e2c: CONDITIONAL_JUMP
		001b1dd8: FALL_THROUGH

	[001b1dd8]
		001b1da4: FALL_THROUGH
 	001b1dd8 mov ax,0x8f
 	001b1de4 farpush ax
 	001b1dec mov ax,0x56
 	001b1df8 farpush ax
 	001b1e00 setfuncargs 0x2
 	001b1e08 mov ax,0x6e6f20
 	001b1e14 farcall ax
 	001b1e1c farsubsp 0x2
 	001b1e24 jmp 0x001b2ad8
		001b2ad8: UNCONDITIONAL_JUMP

	[001b1e2c]
		001b1da4: CONDITIONAL_JUMP
 	001b1e2c sourceline 0x205a
 	001b1e34 mov mar,0xd3ef20
 	001b1e40 memread4 ax
 	001b1e48 lnot ax
 	001b1e50 jz 0x001b1e78
		001b1e78: CONDITIONAL_JUMP
		001b1e58: FALL_THROUGH

	[001b1e58]
		001b1e2c: FALL_THROUGH
 	001b1e58 mov ax,0x1
 	001b1e64 mov mar,0xd3ef20
 	001b1e70 memwrite4 ax
		001b1e78: FALL_THROUGH

	[001b1e78]
		001b1e2c: CONDITIONAL_JUMP
		001b1e58: FALL_THROUGH
 	001b1e78 sourceline 0x205b
 	001b1e80 mov ax,0x1
 	001b1e8c mov mar,0xd36f20
 	001b1e98 memwrite4 ax
 	001b1ea0 sourceline 0x205c
 	001b1ea8 push op
 	001b1eb0 mov ax,0x397
 	001b1ebc farpush ax
 	001b1ec4 mov ax,0x7
 	001b1ed0 farpush ax
 	001b1ed8 mov mar,0x3cef20
 	001b1ee4 mov ax,mar
 	001b1ef0 mov op,ax
 	001b1ef8 setfuncargs 0x2
 	001b1f00 mov ax,0x6eef20
 	001b1f0c farcall ax
 	001b1f14 farsubsp 0x2
 	001b1f1c pop op
 	001b1f24 sourceline 0x205d
 	001b1f2c mov ax,0x3
 	001b1f38 mov bx,ax
 	001b1f44 mov mar,0x3cef20
 	001b1f50 mov ax,mar
 	001b1f5c push op
 	001b1f64 mov op,ax
 	001b1f6c farpush bx
 	001b1f74 setfuncargs 0x1
 	001b1f7c mov ax,0x69ef20
 	001b1f88 farcall ax
 	001b1f90 farsubsp 0x1
 	001b1f98 pop op
 	001b1fa0 sourceline 0x205e
 	001b1fa8 mov ax,0x0
 	001b1fb4 mov bx,ax
 	001b1fc0 mov mar,0x3cef20
 	001b1fcc mov ax,mar
 	001b1fd8 push op
 	001b1fe0 mov op,ax
 	001b1fe8 farpush bx
 	001b1ff0 setfuncargs 0x1
 	001b1ff8 mov ax,0x436f20
 	001b2004 farcall ax
 	001b200c farsubsp 0x1
 	001b2014 pop op
 	001b201c sourceline 0x205f
 	001b2024 mov mar,0xbf6f20
 	001b2030 memread4 ax
 	001b2038 jz 0x001b2148
		001b2148: CONDITIONAL_JUMP
		001b2040: FALL_THROUGH

	[001b2040]
		001b1e78: FALL_THROUGH
 	001b2040 sourceline 0x2061
 	001b2048 push op
 	001b2050 mov ax,0x2c48ed
 	001b205c farpush ax
 	001b2064 mov mar,0x3cef20
 	001b2070 mov ax,mar
 	001b207c mov op,ax
 	001b2084 setfuncargs 0x1
 	001b208c mov ax,0x6f6f20
 	001b2098 farcall ax
 	001b20a0 farsubsp 0x1
 	001b20a8 pop op
 	001b20b0 sourceline 0x2062
 	001b20b8 push op
 	001b20c0 mov ax,0x2c48f9
 	001b20cc farpush ax
 	001b20d4 mov mar,0xc06f20
 	001b20e0 mov ax,mar
 	001b20ec mov op,ax
 	001b20f4 setfuncargs 0x1
 	001b20fc mov ax,0x6f6f20
 	001b2108 farcall ax
 	001b2110 farsubsp 0x1
 	001b2118 pop op
 	001b2120 sourceline 0x2063
 	001b2128 mov ax,0x0
 	001b2134 mov mar,0xbf6f20
 	001b2140 memwrite4 ax
		001b2148: FALL_THROUGH

	[001b2148]
		001b1e78: CONDITIONAL_JUMP
		001b2040: FALL_THROUGH
 	001b2148 sourceline 0x2065
 	001b2150 push op
 	001b2158 mov ax,0x3
 	001b2164 farpush ax
 	001b216c mov mar,0xbe6f20
 	001b2178 mov ax,mar
 	001b2184 mov op,ax
 	001b218c setfuncargs 0x1
 	001b2194 mov ax,0x6d6f20
 	001b21a0 farcall ax
 	001b21a8 farsubsp 0x1
 	001b21b0 pop op
 	001b21b8 lnot ax
 	001b21c0 jz 0x001b2934
		001b2934: CONDITIONAL_JUMP
		001b21c8: FALL_THROUGH

	[001b21c8]
		001b2148: FALL_THROUGH
 	001b21c8 sourceline 0x2067
 	001b21d0 push op
 	001b21d8 mov ax,0x2c40f5
 	001b21e4 farpush ax
 	001b21ec mov mar,0x3cef20
 	001b21f8 mov ax,mar
 	001b2204 mov op,ax
 	001b220c setfuncargs 0x1
 	001b2214 mov ax,0x6f6f20
 	001b2220 farcall ax
 	001b2228 farsubsp 0x1
 	001b2230 pop op
 	001b2238 sourceline 0x2068
 	001b2240 push op
 	001b2248 mov ax,0x2c4165
 	001b2254 farpush ax
 	001b225c mov mar,0xc06f20
 	001b2268 mov ax,mar
 	001b2274 mov op,ax
 	001b227c setfuncargs 0x1
 	001b2284 mov ax,0x6f6f20
 	001b2290 farcall ax
 	001b2298 farsubsp 0x1
 	001b22a0 pop op
 	001b22a8 sourceline 0x2069
 	001b22b0 push op
 	001b22b8 mov ax,0x2c4190
 	001b22c4 farpush ax
 	001b22cc mov mar,0x3cef20
 	001b22d8 mov ax,mar
 	001b22e4 mov op,ax
 	001b22ec setfuncargs 0x1
 	001b22f4 mov ax,0x6f6f20
 	001b2300 farcall ax
 	001b2308 farsubsp 0x1
 	001b2310 pop op
 	001b2318 sourceline 0x206a
 	001b2320 push op
 	001b2328 mov ax,0x2c419a
 	001b2334 farpush ax
 	001b233c mov mar,0xc06f20
 	001b2348 mov ax,mar
 	001b2354 mov op,ax
 	001b235c setfuncargs 0x1
 	001b2364 mov ax,0x6f6f20
 	001b2370 farcall ax
 	001b2378 farsubsp 0x1
 	001b2380 pop op
 	001b2388 sourceline 0x206b
 	001b2390 push op
 	001b2398 mov ax,0x2c41e1
 	001b23a4 farpush ax
 	001b23ac mov mar,0x3cef20
 	001b23b8 mov ax,mar
 	001b23c4 mov op,ax
 	001b23cc setfuncargs 0x1
 	001b23d4 mov ax,0x6f6f20
 	001b23e0 farcall ax
 	001b23e8 farsubsp 0x1
 	001b23f0 pop op
 	001b23f8 sourceline 0x206c
 	001b2400 push op
 	001b2408 mov ax,0x2c41ec
 	001b2414 farpush ax
 	001b241c mov mar,0xc06f20
 	001b2428 mov ax,mar
 	001b2434 mov op,ax
 	001b243c setfuncargs 0x1
 	001b2444 mov ax,0x6f6f20
 	001b2450 farcall ax
 	001b2458 farsubsp 0x1
 	001b2460 pop op
 	001b2468 sourceline 0x206d
 	001b2470 push op
 	001b2478 mov ax,0x2c4262
 	001b2484 farpush ax
 	001b248c mov mar,0x3cef20
 	001b2498 mov ax,mar
 	001b24a4 mov op,ax
 	001b24ac setfuncargs 0x1
 	001b24b4 mov ax,0x6f6f20
 	001b24c0 farcall ax
 	001b24c8 farsubsp 0x1
 	001b24d0 pop op
 	001b24d8 sourceline 0x206e
 	001b24e0 push op
 	001b24e8 mov ax,0x2c42cc
 	001b24f4 farpush ax
 	001b24fc mov mar,0xc06f20
 	001b2508 mov ax,mar
 	001b2514 mov op,ax
 	001b251c setfuncargs 0x1
 	001b2524 mov ax,0x6f6f20
 	001b2530 farcall ax
 	001b2538 farsubsp 0x1
 	001b2540 pop op
 	001b2548 sourceline 0x206f
 	001b2550 push op
 	001b2558 mov ax,0x2c4384
 	001b2564 farpush ax
 	001b256c mov mar,0xc06f20
 	001b2578 mov ax,mar
 	001b2584 mov op,ax
 	001b258c setfuncargs 0x1
 	001b2594 mov ax,0x6f6f20
 	001b25a0 farcall ax
 	001b25a8 farsubsp 0x1
 	001b25b0 pop op
 	001b25b8 sourceline 0x2070
 	001b25c0 push op
 	001b25c8 mov ax,0x2c43e1
 	001b25d4 farpush ax
 	001b25dc mov mar,0x3cef20
 	001b25e8 mov ax,mar
 	001b25f4 mov op,ax
 	001b25fc setfuncargs 0x1
 	001b2604 mov ax,0x6f6f20
 	001b2610 farcall ax
 	001b2618 farsubsp 0x1
 	001b2620 pop op
 	001b2628 sourceline 0x2071
 	001b2630 push op
 	001b2638 mov ax,0x2c43ed
 	001b2644 farpush ax
 	001b264c mov mar,0xc06f20
 	001b2658 mov ax,mar
 	001b2664 mov op,ax
 	001b266c setfuncargs 0x1
 	001b2674 mov ax,0x6f6f20
 	001b2680 farcall ax
 	001b2688 farsubsp 0x1
 	001b2690 pop op
 	001b2698 sourceline 0x2072
 	001b26a0 push op
 	001b26a8 mov ax,0x2c44b1
 	001b26b4 farpush ax
 	001b26bc mov mar,0xc06f20
 	001b26c8 mov ax,mar
 	001b26d4 mov op,ax
 	001b26dc setfuncargs 0x1
 	001b26e4 mov ax,0x6f6f20
 	001b26f0 farcall ax
 	001b26f8 farsubsp 0x1
 	001b2700 pop op
 	001b2708 sourceline 0x2073
 	001b2710 push op
 	001b2718 mov ax,0x2c44d9
 	001b2724 farpush ax
 	001b272c mov mar,0xc06f20
 	001b2738 mov ax,mar
 	001b2744 mov op,ax
 	001b274c setfuncargs 0x1
 	001b2754 mov ax,0x6f6f20
 	001b2760 farcall ax
 	001b2768 farsubsp 0x1
 	001b2770 pop op
 	001b2778 sourceline 0x2074
 	001b2780 push op
 	001b2788 mov ax,0x2
 	001b2794 farpush ax
 	001b279c mov ax,0x3
 	001b27a8 farpush ax
 	001b27b0 mov mar,0xbe6f20
 	001b27bc mov ax,mar
 	001b27c8 mov op,ax
 	001b27d0 setfuncargs 0x2
 	001b27d8 mov ax,0xc26f20
 	001b27e4 farcall ax
 	001b27ec farsubsp 0x2
 	001b27f4 pop op
 	001b27fc sourceline 0x2075
 	001b2804 push op
 	001b280c mov ax,0x4
 	001b2818 farpush ax
 	001b2820 mov mar,0xbe6f20
 	001b282c mov ax,mar
 	001b2838 mov op,ax
 	001b2840 setfuncargs 0x1
 	001b2848 mov ax,0xac6f20
 	001b2854 farcall ax
 	001b285c farsubsp 0x1
 	001b2864 pop op
 	001b286c push ax
 	001b2874 mov ax,0x0
 	001b2880 pop bx
 	001b2888 cmpeq bx,ax
 	001b2894 mov ax,bx
 	001b28a0 jz 0x001b2924
		001b2924: CONDITIONAL_JUMP
		001b28a8: FALL_THROUGH

	[001b28a8]
		001b21c8: FALL_THROUGH
 	001b28a8 push op
 	001b28b0 mov ax,0x1
 	001b28bc farpush ax
 	001b28c4 mov ax,0x4
 	001b28d0 farpush ax
 	001b28d8 mov mar,0xbe6f20
 	001b28e4 mov ax,mar
 	001b28f0 mov op,ax
 	001b28f8 setfuncargs 0x2
 	001b2900 mov ax,0xc26f20
 	001b290c farcall ax
 	001b2914 farsubsp 0x2
 	001b291c pop op
		001b2924: FALL_THROUGH

	[001b2924]
		001b21c8: CONDITIONAL_JUMP
		001b28a8: FALL_THROUGH
 	001b2924 sourceline 0x2076
 	001b292c jmp 0x001b2ad8
		001b2ad8: UNCONDITIONAL_JUMP

	[001b2934]
		001b2148: CONDITIONAL_JUMP
 	001b2934 sourceline 0x2082
 	001b293c mov ax,0x1
 	001b2948 mov bx,ax
 	001b2954 mov mar,0x3cef20
 	001b2960 mov ax,mar
 	001b296c push op
 	001b2974 mov op,ax
 	001b297c farpush bx
 	001b2984 setfuncargs 0x1
 	001b298c mov ax,0x69ef20
 	001b2998 farcall ax
 	001b29a0 farsubsp 0x1
 	001b29a8 pop op
 	001b29b0 sourceline 0x2083
 	001b29b8 mov ax,0x0
 	001b29c4 mov bx,ax
 	001b29d0 mov mar,0x3cef20
 	001b29dc mov ax,mar
 	001b29e8 push op
 	001b29f0 mov op,ax
 	001b29f8 farpush bx
 	001b2a00 setfuncargs 0x1
 	001b2a08 mov ax,0x436f20
 	001b2a14 farcall ax
 	001b2a1c farsubsp 0x1
 	001b2a24 pop op
 	001b2a2c sourceline 0x2084
 	001b2a34 push op
 	001b2a3c mov ax,0x2c455a
 	001b2a48 farpush ax
 	001b2a50 mov ax,0x138
 	001b2a5c farpush ax
 	001b2a64 mov ax,0x92
 	001b2a70 farpush ax
 	001b2a78 mov ax,0x0
 	001b2a84 farpush ax
 	001b2a8c mov mar,0x3cef20
 	001b2a98 mov ax,mar
 	001b2aa4 mov op,ax
 	001b2aac setfuncargs 0x4
 	001b2ab4 mov ax,0x6aef20
 	001b2ac0 farcall ax
 	001b2ac8 farsubsp 0x4
 	001b2ad0 pop op
		001b2ad8: FALL_THROUGH

	[001b2ad8]
		001b1dd8: UNCONDITIONAL_JUMP
		001b2924: UNCONDITIONAL_JUMP
		001b2934: FALL_THROUGH
 	001b2ad8 sourceline 0x2087
 	001b2ae0 jmp 0x001b2c10
		001b2c10: UNCONDITIONAL_JUMP

	[001b2ae8]
		001b1d78: CONDITIONAL_JUMP
 	001b2ae8 sourceline 0x208a
 	001b2af0 mov ax,0x1
 	001b2afc mov bx,ax
 	001b2b08 mov mar,0x3cef20
 	001b2b14 mov ax,mar
 	001b2b20 push op
 	001b2b28 mov op,ax
 	001b2b30 farpush bx
 	001b2b38 setfuncargs 0x1
 	001b2b40 mov ax,0x69ef20
 	001b2b4c farcall ax
 	001b2b54 farsubsp 0x1
 	001b2b5c pop op
 	001b2b64 sourceline 0x208c
 	001b2b6c push op
 	001b2b74 mov ax,0x2c455a
 	001b2b80 farpush ax
 	001b2b88 mov ax,0x138
 	001b2b94 farpush ax
 	001b2b9c mov ax,0x92
 	001b2ba8 farpush ax
 	001b2bb0 mov ax,0x0
 	001b2bbc farpush ax
 	001b2bc4 mov mar,0x3cef20
 	001b2bd0 mov ax,mar
 	001b2bdc mov op,ax
 	001b2be4 setfuncargs 0x4
 	001b2bec mov ax,0x6aef20
 	001b2bf8 farcall ax
 	001b2c00 farsubsp 0x4
 	001b2c08 pop op
		001b2c10: FALL_THROUGH

	[001b2c10]
		001b2ad8: UNCONDITIONAL_JUMP
		001b2ae8: FALL_THROUGH
 	001b2c10 sourceline 0x208e
 	001b2c18 jmp 0x001b3e28
		001b3e28: UNCONDITIONAL_JUMP

	[001b2c20]
		001b1ce8: CONDITIONAL_JUMP
 	001b2c20 sourceline 0x2092
 	001b2c28 mov mar,0xd46f20
 	001b2c34 memread4 ax
 	001b2c3c lnot ax
 	001b2c44 jz 0x001b3c7c
		001b3c7c: CONDITIONAL_JUMP
		001b2c4c: FALL_THROUGH

	[001b2c4c]
		001b2c20: FALL_THROUGH
 	001b2c4c sourceline 0x2094
 	001b2c54 setfuncargs 0x0
 	001b2c5c mov ax,0x6def20
 	001b2c68 farcall ax
 	001b2c70 lnot ax
 	001b2c78 jz 0x001b2cd4
		001b2cd4: CONDITIONAL_JUMP
		001b2c80: FALL_THROUGH

	[001b2c80]
		001b2c4c: FALL_THROUGH
 	001b2c80 mov ax,0x8f
 	001b2c8c farpush ax
 	001b2c94 mov ax,0x56
 	001b2ca0 farpush ax
 	001b2ca8 setfuncargs 0x2
 	001b2cb0 mov ax,0x6e6f20
 	001b2cbc farcall ax
 	001b2cc4 farsubsp 0x2
 	001b2ccc jmp 0x001b3c6c
		001b3c6c: UNCONDITIONAL_JUMP

	[001b2cd4]
		001b2c4c: CONDITIONAL_JUMP
 	001b2cd4 sourceline 0x2097
 	001b2cdc mov ax,0x3
 	001b2ce8 mov bx,ax
 	001b2cf4 mov mar,0x3cef20
 	001b2d00 mov ax,mar
 	001b2d0c push op
 	001b2d14 mov op,ax
 	001b2d1c farpush bx
 	001b2d24 setfuncargs 0x1
 	001b2d2c mov ax,0x69ef20
 	001b2d38 farcall ax
 	001b2d40 farsubsp 0x1
 	001b2d48 pop op
 	001b2d50 sourceline 0x2098
 	001b2d58 push op
 	001b2d60 mov ax,0x397
 	001b2d6c farpush ax
 	001b2d74 mov ax,0x7
 	001b2d80 farpush ax
 	001b2d88 mov mar,0x3cef20
 	001b2d94 mov ax,mar
 	001b2da0 mov op,ax
 	001b2da8 setfuncargs 0x2
 	001b2db0 mov ax,0x6eef20
 	001b2dbc farcall ax
 	001b2dc4 farsubsp 0x2
 	001b2dcc pop op
 	001b2dd4 sourceline 0x2099
 	001b2ddc push op
 	001b2de4 mov ax,0x2c45b7
 	001b2df0 farpush ax
 	001b2df8 mov mar,0x3cef20
 	001b2e04 mov ax,mar
 	001b2e10 mov op,ax
 	001b2e18 setfuncargs 0x1
 	001b2e20 mov ax,0x6f6f20
 	001b2e2c farcall ax
 	001b2e34 farsubsp 0x1
 	001b2e3c pop op
 	001b2e44 sourceline 0x209a
 	001b2e4c push op
 	001b2e54 mov ax,0x2c45f9
 	001b2e60 farpush ax
 	001b2e68 mov mar,0xc06f20
 	001b2e74 mov ax,mar
 	001b2e80 mov op,ax
 	001b2e88 setfuncargs 0x1
 	001b2e90 mov ax,0x6f6f20
 	001b2e9c farcall ax
 	001b2ea4 farsubsp 0x1
 	001b2eac pop op
 	001b2eb4 sourceline 0x209b
 	001b2ebc push op
 	001b2ec4 mov ax,0xc
 	001b2ed0 farpush ax
 	001b2ed8 mov mar,0x3cef20
 	001b2ee4 mov ax,mar
 	001b2ef0 mov op,ax
 	001b2ef8 setfuncargs 0x1
 	001b2f00 mov ax,0x51ef20
 	001b2f0c farcall ax
 	001b2f14 farsubsp 0x1
 	001b2f1c pop op
 	001b2f24 sourceline 0x209c
 	001b2f2c mov mar,0x3cef20
 	001b2f38 mov ax,mar
 	001b2f44 push op
 	001b2f4c mov op,ax
 	001b2f54 setfuncargs 0x0
 	001b2f5c mov ax,0x78ef20
 	001b2f68 farcall ax
 	001b2f70 pop op
 	001b2f78 push ax
 	001b2f80 mov ax,0x7
 	001b2f8c pop bx
 	001b2f94 sub bx,ax
 	001b2fa0 mov ax,bx
 	001b2fac mov bx,ax
 	001b2fb8 mov mar,0x3cef20
 	001b2fc4 mov ax,mar
 	001b2fd0 push op
 	001b2fd8 mov op,ax
 	001b2fe0 farpush bx
 	001b2fe8 setfuncargs 0x1
 	001b2ff0 mov ax,0x526f20
 	001b2ffc farcall ax
 	001b3004 farsubsp 0x1
 	001b300c pop op
 	001b3014 sourceline 0x209d
 	001b301c mov mar,0x3cef20
 	001b3028 mov ax,mar
 	001b3034 push op
 	001b303c mov op,ax
 	001b3044 setfuncargs 0x0
 	001b304c mov ax,0xb36f20
 	001b3058 farcall ax
 	001b3060 pop op
 	001b3068 push ax
 	001b3070 mov ax,0x4
 	001b307c pop bx
 	001b3084 sub bx,ax
 	001b3090 mov ax,bx
 	001b309c mov bx,ax
 	001b30a8 mov mar,0x3cef20
 	001b30b4 mov ax,mar
 	001b30c0 push op
 	001b30c8 mov op,ax
 	001b30d0 farpush bx
 	001b30d8 setfuncargs 0x1
 	001b30e0 mov ax,0x70ef20
 	001b30ec farcall ax
 	001b30f4 farsubsp 0x1
 	001b30fc pop op
 	001b3104 sourceline 0x209e
 	001b310c push op
 	001b3114 mov ax,0x426
 	001b3120 farpush ax
 	001b3128 mov ax,0x398
 	001b3134 farpush ax
 	001b313c mov ax,0x0
 	001b3148 farpush ax
 	001b3150 mov ax,0x3
 	001b315c farpush ax
 	001b3164 mov ax,0x2
 	001b3170 farpush ax
 	001b3178 mov mar,0x3cef20
 	001b3184 mov ax,mar
 	001b3190 mov op,ax
 	001b3198 setfuncargs 0x5
 	001b31a0 mov ax,0x536f20
 	001b31ac farcall ax
 	001b31b4 farsubsp 0x5
 	001b31bc pop op
 	001b31c4 sourceline 0x209f
 	001b31cc push op
 	001b31d4 mov ax,0x426
 	001b31e0 farpush ax
 	001b31e8 mov ax,0x397
 	001b31f4 farpush ax
 	001b31fc mov ax,0x0
 	001b3208 farpush ax
 	001b3210 mov ax,0x3
 	001b321c farpush ax
 	001b3224 mov ax,0x0
 	001b3230 farpush ax
 	001b3238 mov mar,0xc06f20
 	001b3244 mov ax,mar
 	001b3250 mov op,ax
 	001b3258 setfuncargs 0x5
 	001b3260 mov ax,0x536f20
 	001b326c farcall ax
 	001b3274 farsubsp 0x5
 	001b327c pop op
 	001b3284 sourceline 0x20a0
 	001b328c push op
 	001b3294 mov ax,0x427
 	001b32a0 farpush ax
 	001b32a8 mov ax,0x398
 	001b32b4 farpush ax
 	001b32bc mov ax,0x0
 	001b32c8 farpush ax
 	001b32d0 mov ax,0x3
 	001b32dc farpush ax
 	001b32e4 mov ax,0x2
 	001b32f0 farpush ax
 	001b32f8 mov mar,0x3cef20
 	001b3304 mov ax,mar
 	001b3310 mov op,ax
 	001b3318 setfuncargs 0x5
 	001b3320 mov ax,0x536f20
 	001b332c farcall ax
 	001b3334 farsubsp 0x5
 	001b333c pop op
 	001b3344 sourceline 0x20a1
 	001b334c push op
 	001b3354 mov ax,0x427
 	001b3360 farpush ax
 	001b3368 mov ax,0x397
 	001b3374 farpush ax
 	001b337c mov ax,0x0
 	001b3388 farpush ax
 	001b3390 mov ax,0x3
 	001b339c farpush ax
 	001b33a4 mov ax,0x0
 	001b33b0 farpush ax
 	001b33b8 mov mar,0xc06f20
 	001b33c4 mov ax,mar
 	001b33d0 mov op,ax
 	001b33d8 setfuncargs 0x5
 	001b33e0 mov ax,0x536f20
 	001b33ec farcall ax
 	001b33f4 farsubsp 0x5
 	001b33fc pop op
 	001b3404 sourceline 0x20a2
 	001b340c push op
 	001b3414 mov ax,0x2c4621
 	001b3420 farpush ax
 	001b3428 mov mar,0xc06f20
 	001b3434 mov ax,mar
 	001b3440 mov op,ax
 	001b3448 setfuncargs 0x1
 	001b3450 mov ax,0x6f6f20
 	001b345c farcall ax
 	001b3464 farsubsp 0x1
 	001b346c pop op
 	001b3474 sourceline 0x20a3
 	001b347c push op
 	001b3484 mov ax,0x2c46ac
 	001b3490 farpush ax
 	001b3498 mov mar,0x3cef20
 	001b34a4 mov ax,mar
 	001b34b0 mov op,ax
 	001b34b8 setfuncargs 0x1
 	001b34c0 mov ax,0x6f6f20
 	001b34cc farcall ax
 	001b34d4 farsubsp 0x1
 	001b34dc pop op
 	001b34e4 sourceline 0x20a4
 	001b34ec push op
 	001b34f4 mov ax,0x426
 	001b3500 farpush ax
 	001b3508 mov ax,0x398
 	001b3514 farpush ax
 	001b351c mov ax,0x0
 	001b3528 farpush ax
 	001b3530 mov ax,0x3
 	001b353c farpush ax
 	001b3544 mov ax,0x0
 	001b3550 farpush ax
 	001b3558 mov mar,0xc06f20
 	001b3564 mov ax,mar
 	001b3570 mov op,ax
 	001b3578 setfuncargs 0x5
 	001b3580 mov ax,0x536f20
 	001b358c farcall ax
 	001b3594 farsubsp 0x5
 	001b359c pop op
 	001b35a4 sourceline 0x20a5
 	001b35ac push op
 	001b35b4 mov ax,0x426
 	001b35c0 farpush ax
 	001b35c8 mov ax,0x397
 	001b35d4 farpush ax
 	001b35dc mov ax,0x0
 	001b35e8 farpush ax
 	001b35f0 mov ax,0x3
 	001b35fc farpush ax
 	001b3604 mov ax,0x2
 	001b3610 farpush ax
 	001b3618 mov mar,0x3cef20
 	001b3624 mov ax,mar
 	001b3630 mov op,ax
 	001b3638 setfuncargs 0x5
 	001b3640 mov ax,0x536f20
 	001b364c farcall ax
 	001b3654 farsubsp 0x5
 	001b365c pop op
 	001b3664 sourceline 0x20a6
 	001b366c push op
 	001b3674 mov ax,0x427
 	001b3680 farpush ax
 	001b3688 mov ax,0x398
 	001b3694 farpush ax
 	001b369c mov ax,0x0
 	001b36a8 farpush ax
 	001b36b0 mov ax,0x3
 	001b36bc farpush ax
 	001b36c4 mov ax,0x0
 	001b36d0 farpush ax
 	001b36d8 mov mar,0xc06f20
 	001b36e4 mov ax,mar
 	001b36f0 mov op,ax
 	001b36f8 setfuncargs 0x5
 	001b3700 mov ax,0x536f20
 	001b370c farcall ax
 	001b3714 farsubsp 0x5
 	001b371c pop op
 	001b3724 sourceline 0x20a7
 	001b372c push op
 	001b3734 mov ax,0x427
 	001b3740 farpush ax
 	001b3748 mov ax,0x397
 	001b3754 farpush ax
 	001b375c mov ax,0x0
 	001b3768 farpush ax
 	001b3770 mov ax,0x3
 	001b377c farpush ax
 	001b3784 mov ax,0x2
 	001b3790 farpush ax
 	001b3798 mov mar,0x3cef20
 	001b37a4 mov ax,mar
 	001b37b0 mov op,ax
 	001b37b8 setfuncargs 0x5
 	001b37c0 mov ax,0x536f20
 	001b37cc farcall ax
 	001b37d4 farsubsp 0x5
 	001b37dc pop op
 	001b37e4 sourceline 0x20a8
 	001b37ec push op
 	001b37f4 mov ax,0x7cfe
 	001b3800 farpush ax
 	001b3808 mov mar,0x926f20
 	001b3814 mov ax,mar
 	001b3820 farpush ax
 	001b3828 mov mar,0x3cef20
 	001b3834 mov ax,mar
 	001b3840 mov op,ax
 	001b3848 setfuncargs 0x2
 	001b3850 mov ax,0x7e6f20
 	001b385c farcall ax
 	001b3864 farsubsp 0x2
 	001b386c pop op
 	001b3874 sourceline 0x20a9
 	001b387c push op
 	001b3884 mov ax,0x7cfe
 	001b3890 farpush ax
 	001b3898 mov mar,0x92ef20
 	001b38a4 mov ax,mar
 	001b38b0 farpush ax
 	001b38b8 mov mar,0x3cef20
 	001b38c4 mov ax,mar
 	001b38d0 mov op,ax
 	001b38d8 setfuncargs 0x2
 	001b38e0 mov ax,0x7e6f20
 	001b38ec farcall ax
 	001b38f4 farsubsp 0x2
 	001b38fc pop op
 	001b3904 sourceline 0x20aa
 	001b390c push op
 	001b3914 mov ax,0x2
 	001b3920 farpush ax
 	001b3928 mov mar,0x3cef20
 	001b3934 mov ax,mar
 	001b3940 mov op,ax
 	001b3948 setfuncargs 0x1
 	001b3950 mov ax,0x51ef20
 	001b395c farcall ax
 	001b3964 farsubsp 0x1
 	001b396c pop op
 	001b3974 sourceline 0x20ab
 	001b397c mov ax,0x7
 	001b3988 mov bx,ax
 	001b3994 mov mar,0x3cef20
 	001b39a0 mov ax,mar
 	001b39ac push op
 	001b39b4 mov op,ax
 	001b39bc farpush bx
 	001b39c4 setfuncargs 0x1
 	001b39cc mov ax,0x766f20
 	001b39d8 farcall ax
 	001b39e0 farsubsp 0x1
 	001b39e8 pop op
 	001b39f0 sourceline 0x20ac
 	001b39f8 mov ax,0x56
 	001b3a04 mov bx,ax
 	001b3a10 mov mar,0x3cef20
 	001b3a1c mov ax,mar
 	001b3a28 push op
 	001b3a30 mov op,ax
 	001b3a38 farpush bx
 	001b3a40 setfuncargs 0x1
 	001b3a48 mov ax,0x70ef20
 	001b3a54 farcall ax
 	001b3a5c farsubsp 0x1
 	001b3a64 pop op
 	001b3a6c sourceline 0x20ad
 	001b3a74 mov ax,0x8f
 	001b3a80 mov bx,ax
 	001b3a8c mov mar,0x3cef20
 	001b3a98 mov ax,mar
 	001b3aa4 push op
 	001b3aac mov op,ax
 	001b3ab4 farpush bx
 	001b3abc setfuncargs 0x1
 	001b3ac4 mov ax,0x526f20
 	001b3ad0 farcall ax
 	001b3ad8 farsubsp 0x1
 	001b3ae0 pop op
 	001b3ae8 sourceline 0x20ae
 	001b3af0 mov ax,0x1
 	001b3afc mov mar,0xd46f20
 	001b3b08 memwrite4 ax
 	001b3b10 sourceline 0x20af
 	001b3b18 mov ax,0x0
 	001b3b24 mov bx,ax
 	001b3b30 mov mar,0x3cef20
 	001b3b3c mov ax,mar
 	001b3b48 push op
 	001b3b50 mov op,ax
 	001b3b58 farpush bx
 	001b3b60 setfuncargs 0x1
 	001b3b68 mov ax,0x436f20
 	001b3b74 farcall ax
 	001b3b7c farsubsp 0x1
 	001b3b84 pop op
 	001b3b8c sourceline 0x20b0
 	001b3b94 push op
 	001b3b9c mov ax,0x2c46d1
 	001b3ba8 farpush ax
 	001b3bb0 mov mar,0xc06f20
 	001b3bbc mov ax,mar
 	001b3bc8 mov op,ax
 	001b3bd0 setfuncargs 0x1
 	001b3bd8 mov ax,0x6f6f20
 	001b3be4 farcall ax
 	001b3bec farsubsp 0x1
 	001b3bf4 pop op
 	001b3bfc sourceline 0x20b1
 	001b3c04 push op
 	001b3c0c mov ax,0x2c4725
 	001b3c18 farpush ax
 	001b3c20 mov mar,0x3cef20
 	001b3c2c mov ax,mar
 	001b3c38 mov op,ax
 	001b3c40 setfuncargs 0x1
 	001b3c48 mov ax,0x6f6f20
 	001b3c54 farcall ax
 	001b3c5c farsubsp 0x1
 	001b3c64 pop op
		001b3c6c: FALL_THROUGH

	[001b3c6c]
		001b2c80: UNCONDITIONAL_JUMP
		001b2cd4: FALL_THROUGH
 	001b3c6c sourceline 0x20b3
 	001b3c74 jmp 0x001b3e28
		001b3e28: UNCONDITIONAL_JUMP

	[001b3c7c]
		001b2c20: CONDITIONAL_JUMP
 	001b3c7c sourceline 0x20b6
 	001b3c84 push op
 	001b3c8c mov ax,0x397
 	001b3c98 farpush ax
 	001b3ca0 mov ax,0x7
 	001b3cac farpush ax
 	001b3cb4 mov mar,0x3cef20
 	001b3cc0 mov ax,mar
 	001b3ccc mov op,ax
 	001b3cd4 setfuncargs 0x2
 	001b3cdc mov ax,0x6eef20
 	001b3ce8 farcall ax
 	001b3cf0 farsubsp 0x2
 	001b3cf8 pop op
 	001b3d00 sourceline 0x20b7
 	001b3d08 mov ax,0x1
 	001b3d14 mov bx,ax
 	001b3d20 mov mar,0x3cef20
 	001b3d2c mov ax,mar
 	001b3d38 push op
 	001b3d40 mov op,ax
 	001b3d48 farpush bx
 	001b3d50 setfuncargs 0x1
 	001b3d58 mov ax,0x69ef20
 	001b3d64 farcall ax
 	001b3d6c farsubsp 0x1
 	001b3d74 pop op
 	001b3d7c sourceline 0x20b8
 	001b3d84 push op
 	001b3d8c mov ax,0x2c473b
 	001b3d98 farpush ax
 	001b3da0 mov ax,0x138
 	001b3dac farpush ax
 	001b3db4 mov ax,0x92
 	001b3dc0 farpush ax
 	001b3dc8 mov ax,0x0
 	001b3dd4 farpush ax
 	001b3ddc mov mar,0x3cef20
 	001b3de8 mov ax,mar
 	001b3df4 mov op,ax
 	001b3dfc setfuncargs 0x4
 	001b3e04 mov ax,0x6aef20
 	001b3e10 farcall ax
 	001b3e18 farsubsp 0x4
 	001b3e20 pop op
		001b3e28: FALL_THROUGH

	[001b3e28]
		001b1bb0: UNCONDITIONAL_JUMP
		001b2c10: UNCONDITIONAL_JUMP
		001b3c6c: UNCONDITIONAL_JUMP
		001b3c7c: FALL_THROUGH
 	001b3e28 sourceline 0x20bc
 	001b3e30 jmp 0x001b684c
		001b684c: UNCONDITIONAL_JUMP

	[001b3e38]
		001b1aac: CONDITIONAL_JUMP
 	001b3e38 sourceline 0x20be
 	001b3e40 mov mar,0x3cef20
 	001b3e4c mov ax,mar
 	001b3e58 push op
 	001b3e60 mov op,ax
 	001b3e68 setfuncargs 0x0
 	001b3e70 mov ax,0x89ef20
 	001b3e7c farcall ax
 	001b3e84 pop op
 	001b3e8c push ax
 	001b3e94 mov mar,0x8cef20
 	001b3ea0 mov ax,mar
 	001b3eac pop bx
 	001b3eb4 cmpeq bx,ax
 	001b3ec0 mov ax,bx
 	001b3ecc jnz 0x001b3f88
		001b3f88: CONDITIONAL_JUMP
		001b3ed4: FALL_THROUGH

	[001b3ed4]
		001b3e38: FALL_THROUGH
 	001b3ed4 push ax
 	001b3edc mov mar,0x3cef20
 	001b3ee8 mov ax,mar
 	001b3ef4 push op
 	001b3efc mov op,ax
 	001b3f04 setfuncargs 0x0
 	001b3f0c mov ax,0x89ef20
 	001b3f18 farcall ax
 	001b3f20 pop op
 	001b3f28 push ax
 	001b3f30 mov mar,0x8b6f20
 	001b3f3c mov ax,mar
 	001b3f48 pop bx
 	001b3f50 cmpeq bx,ax
 	001b3f5c mov ax,bx
 	001b3f68 pop bx
 	001b3f70 lor bx,ax
 	001b3f7c mov ax,bx
		001b3f88: FALL_THROUGH

	[001b3f88]
		001b3e38: CONDITIONAL_JUMP
		001b3ed4: FALL_THROUGH
 	001b3f88 jnz 0x001b4044
		001b4044: CONDITIONAL_JUMP
		001b3f90: FALL_THROUGH

	[001b3f90]
		001b3f88: FALL_THROUGH
 	001b3f90 push ax
 	001b3f98 mov mar,0x3cef20
 	001b3fa4 mov ax,mar
 	001b3fb0 push op
 	001b3fb8 mov op,ax
 	001b3fc0 setfuncargs 0x0
 	001b3fc8 mov ax,0x89ef20
 	001b3fd4 farcall ax
 	001b3fdc pop op
 	001b3fe4 push ax
 	001b3fec mov mar,0x8c6f20
 	001b3ff8 mov ax,mar
 	001b4004 pop bx
 	001b400c cmpeq bx,ax
 	001b4018 mov ax,bx
 	001b4024 pop bx
 	001b402c lor bx,ax
 	001b4038 mov ax,bx
		001b4044: FALL_THROUGH

	[001b4044]
		001b3f88: CONDITIONAL_JUMP
		001b3f90: FALL_THROUGH
 	001b4044 jnz 0x001b4100
		001b4100: CONDITIONAL_JUMP
		001b404c: FALL_THROUGH

	[001b404c]
		001b4044: FALL_THROUGH
 	001b404c push ax
 	001b4054 mov mar,0x3cef20
 	001b4060 mov ax,mar
 	001b406c push op
 	001b4074 mov op,ax
 	001b407c setfuncargs 0x0
 	001b4084 mov ax,0x89ef20
 	001b4090 farcall ax
 	001b4098 pop op
 	001b40a0 push ax
 	001b40a8 mov mar,0x7def20
 	001b40b4 mov ax,mar
 	001b40c0 pop bx
 	001b40c8 cmpeq bx,ax
 	001b40d4 mov ax,bx
 	001b40e0 pop bx
 	001b40e8 lor bx,ax
 	001b40f4 mov ax,bx
		001b4100: FALL_THROUGH

	[001b4100]
		001b4044: CONDITIONAL_JUMP
		001b404c: FALL_THROUGH
 	001b4100 jnz 0x001b41bc
		001b41bc: CONDITIONAL_JUMP
		001b4108: FALL_THROUGH

	[001b4108]
		001b4100: FALL_THROUGH
 	001b4108 push ax
 	001b4110 mov mar,0x3cef20
 	001b411c mov ax,mar
 	001b4128 push op
 	001b4130 mov op,ax
 	001b4138 setfuncargs 0x0
 	001b4140 mov ax,0x89ef20
 	001b414c farcall ax
 	001b4154 pop op
 	001b415c push ax
 	001b4164 mov mar,0x8def20
 	001b4170 mov ax,mar
 	001b417c pop bx
 	001b4184 cmpeq bx,ax
 	001b4190 mov ax,bx
 	001b419c pop bx
 	001b41a4 lor bx,ax
 	001b41b0 mov ax,bx
		001b41bc: FALL_THROUGH

	[001b41bc]
		001b4100: CONDITIONAL_JUMP
		001b4108: FALL_THROUGH
 	001b41bc jnz 0x001b4278
		001b4278: CONDITIONAL_JUMP
		001b41c4: FALL_THROUGH

	[001b41c4]
		001b41bc: FALL_THROUGH
 	001b41c4 push ax
 	001b41cc mov mar,0x3cef20
 	001b41d8 mov ax,mar
 	001b41e4 push op
 	001b41ec mov op,ax
 	001b41f4 setfuncargs 0x0
 	001b41fc mov ax,0x89ef20
 	001b4208 farcall ax
 	001b4210 pop op
 	001b4218 push ax
 	001b4220 mov mar,0x8aef20
 	001b422c mov ax,mar
 	001b4238 pop bx
 	001b4240 cmpeq bx,ax
 	001b424c mov ax,bx
 	001b4258 pop bx
 	001b4260 lor bx,ax
 	001b426c mov ax,bx
		001b4278: FALL_THROUGH

	[001b4278]
		001b41bc: CONDITIONAL_JUMP
		001b41c4: FALL_THROUGH
 	001b4278 jnz 0x001b4334
		001b4334: CONDITIONAL_JUMP
		001b4280: FALL_THROUGH

	[001b4280]
		001b4278: FALL_THROUGH
 	001b4280 push ax
 	001b4288 mov mar,0x3cef20
 	001b4294 mov ax,mar
 	001b42a0 push op
 	001b42a8 mov op,ax
 	001b42b0 setfuncargs 0x0
 	001b42b8 mov ax,0x89ef20
 	001b42c4 farcall ax
 	001b42cc pop op
 	001b42d4 push ax
 	001b42dc mov mar,0x8e6f20
 	001b42e8 mov ax,mar
 	001b42f4 pop bx
 	001b42fc cmpeq bx,ax
 	001b4308 mov ax,bx
 	001b4314 pop bx
 	001b431c lor bx,ax
 	001b4328 mov ax,bx
		001b4334: FALL_THROUGH

	[001b4334]
		001b4278: CONDITIONAL_JUMP
		001b4280: FALL_THROUGH
 	001b4334 jnz 0x001b43f0
		001b43f0: CONDITIONAL_JUMP
		001b433c: FALL_THROUGH

	[001b433c]
		001b4334: FALL_THROUGH
 	001b433c push ax
 	001b4344 mov mar,0x3cef20
 	001b4350 mov ax,mar
 	001b435c push op
 	001b4364 mov op,ax
 	001b436c setfuncargs 0x0
 	001b4374 mov ax,0x89ef20
 	001b4380 farcall ax
 	001b4388 pop op
 	001b4390 push ax
 	001b4398 mov mar,0x8eef20
 	001b43a4 mov ax,mar
 	001b43b0 pop bx
 	001b43b8 cmpeq bx,ax
 	001b43c4 mov ax,bx
 	001b43d0 pop bx
 	001b43d8 lor bx,ax
 	001b43e4 mov ax,bx
		001b43f0: FALL_THROUGH

	[001b43f0]
		001b4334: CONDITIONAL_JUMP
		001b433c: FALL_THROUGH
 	001b43f0 jnz 0x001b44ac
		001b44ac: CONDITIONAL_JUMP
		001b43f8: FALL_THROUGH

	[001b43f8]
		001b43f0: FALL_THROUGH
 	001b43f8 push ax
 	001b4400 mov mar,0x3cef20
 	001b440c mov ax,mar
 	001b4418 push op
 	001b4420 mov op,ax
 	001b4428 setfuncargs 0x0
 	001b4430 mov ax,0x89ef20
 	001b443c farcall ax
 	001b4444 pop op
 	001b444c push ax
 	001b4454 mov mar,0x8f6f20
 	001b4460 mov ax,mar
 	001b446c pop bx
 	001b4474 cmpeq bx,ax
 	001b4480 mov ax,bx
 	001b448c pop bx
 	001b4494 lor bx,ax
 	001b44a0 mov ax,bx
		001b44ac: FALL_THROUGH

	[001b44ac]
		001b43f0: CONDITIONAL_JUMP
		001b43f8: FALL_THROUGH
 	001b44ac jnz 0x001b4568
		001b4568: CONDITIONAL_JUMP
		001b44b4: FALL_THROUGH

	[001b44b4]
		001b44ac: FALL_THROUGH
 	001b44b4 push ax
 	001b44bc mov mar,0x3cef20
 	001b44c8 mov ax,mar
 	001b44d4 push op
 	001b44dc mov op,ax
 	001b44e4 setfuncargs 0x0
 	001b44ec mov ax,0x89ef20
 	001b44f8 farcall ax
 	001b4500 pop op
 	001b4508 push ax
 	001b4510 mov mar,0x8fef20
 	001b451c mov ax,mar
 	001b4528 pop bx
 	001b4530 cmpeq bx,ax
 	001b453c mov ax,bx
 	001b4548 pop bx
 	001b4550 lor bx,ax
 	001b455c mov ax,bx
		001b4568: FALL_THROUGH

	[001b4568]
		001b44ac: CONDITIONAL_JUMP
		001b44b4: FALL_THROUGH
 	001b4568 jnz 0x001b4624
		001b4624: CONDITIONAL_JUMP
		001b4570: FALL_THROUGH

	[001b4570]
		001b4568: FALL_THROUGH
 	001b4570 push ax
 	001b4578 mov mar,0x3cef20
 	001b4584 mov ax,mar
 	001b4590 push op
 	001b4598 mov op,ax
 	001b45a0 setfuncargs 0x0
 	001b45a8 mov ax,0x89ef20
 	001b45b4 farcall ax
 	001b45bc pop op
 	001b45c4 push ax
 	001b45cc mov mar,0x906f20
 	001b45d8 mov ax,mar
 	001b45e4 pop bx
 	001b45ec cmpeq bx,ax
 	001b45f8 mov ax,bx
 	001b4604 pop bx
 	001b460c lor bx,ax
 	001b4618 mov ax,bx
		001b4624: FALL_THROUGH

	[001b4624]
		001b4568: CONDITIONAL_JUMP
		001b4570: FALL_THROUGH
 	001b4624 jnz 0x001b46e0
		001b46e0: CONDITIONAL_JUMP
		001b462c: FALL_THROUGH

	[001b462c]
		001b4624: FALL_THROUGH
 	001b462c push ax
 	001b4634 mov mar,0x3cef20
 	001b4640 mov ax,mar
 	001b464c push op
 	001b4654 mov op,ax
 	001b465c setfuncargs 0x0
 	001b4664 mov ax,0x89ef20
 	001b4670 farcall ax
 	001b4678 pop op
 	001b4680 push ax
 	001b4688 mov mar,0x976f20
 	001b4694 mov ax,mar
 	001b46a0 pop bx
 	001b46a8 cmpeq bx,ax
 	001b46b4 mov ax,bx
 	001b46c0 pop bx
 	001b46c8 lor bx,ax
 	001b46d4 mov ax,bx
		001b46e0: FALL_THROUGH

	[001b46e0]
		001b4624: CONDITIONAL_JUMP
		001b462c: FALL_THROUGH
 	001b46e0 jnz 0x001b479c
		001b479c: CONDITIONAL_JUMP
		001b46e8: FALL_THROUGH

	[001b46e8]
		001b46e0: FALL_THROUGH
 	001b46e8 push ax
 	001b46f0 mov mar,0x3cef20
 	001b46fc mov ax,mar
 	001b4708 push op
 	001b4710 mov op,ax
 	001b4718 setfuncargs 0x0
 	001b4720 mov ax,0x89ef20
 	001b472c farcall ax
 	001b4734 pop op
 	001b473c push ax
 	001b4744 mov mar,0x846f20
 	001b4750 mov ax,mar
 	001b475c pop bx
 	001b4764 cmpeq bx,ax
 	001b4770 mov ax,bx
 	001b477c pop bx
 	001b4784 lor bx,ax
 	001b4790 mov ax,bx
		001b479c: FALL_THROUGH

	[001b479c]
		001b46e0: CONDITIONAL_JUMP
		001b46e8: FALL_THROUGH
 	001b479c jnz 0x001b4858
		001b4858: CONDITIONAL_JUMP
		001b47a4: FALL_THROUGH

	[001b47a4]
		001b479c: FALL_THROUGH
 	001b47a4 push ax
 	001b47ac mov mar,0x3cef20
 	001b47b8 mov ax,mar
 	001b47c4 push op
 	001b47cc mov op,ax
 	001b47d4 setfuncargs 0x0
 	001b47dc mov ax,0x89ef20
 	001b47e8 farcall ax
 	001b47f0 pop op
 	001b47f8 push ax
 	001b4800 mov mar,0x90ef20
 	001b480c mov ax,mar
 	001b4818 pop bx
 	001b4820 cmpeq bx,ax
 	001b482c mov ax,bx
 	001b4838 pop bx
 	001b4840 lor bx,ax
 	001b484c mov ax,bx
		001b4858: FALL_THROUGH

	[001b4858]
		001b479c: CONDITIONAL_JUMP
		001b47a4: FALL_THROUGH
 	001b4858 jnz 0x001b4914
		001b4914: CONDITIONAL_JUMP
		001b4860: FALL_THROUGH

	[001b4860]
		001b4858: FALL_THROUGH
 	001b4860 push ax
 	001b4868 mov mar,0x3cef20
 	001b4874 mov ax,mar
 	001b4880 push op
 	001b4888 mov op,ax
 	001b4890 setfuncargs 0x0
 	001b4898 mov ax,0x89ef20
 	001b48a4 farcall ax
 	001b48ac pop op
 	001b48b4 push ax
 	001b48bc mov mar,0x916f20
 	001b48c8 mov ax,mar
 	001b48d4 pop bx
 	001b48dc cmpeq bx,ax
 	001b48e8 mov ax,bx
 	001b48f4 pop bx
 	001b48fc lor bx,ax
 	001b4908 mov ax,bx
		001b4914: FALL_THROUGH

	[001b4914]
		001b4858: CONDITIONAL_JUMP
		001b4860: FALL_THROUGH
 	001b4914 jz 0x001b55b0
		001b55b0: CONDITIONAL_JUMP
		001b491c: FALL_THROUGH

	[001b491c]
		001b4914: FALL_THROUGH
 	001b491c sourceline 0x20c3
 	001b4924 setfuncargs 0x0
 	001b492c mov ax,0x6def20
 	001b4938 farcall ax
 	001b4940 lnot ax
 	001b4948 jz 0x001b49a4
		001b49a4: CONDITIONAL_JUMP
		001b4950: FALL_THROUGH

	[001b4950]
		001b491c: FALL_THROUGH
 	001b4950 mov ax,0x8f
 	001b495c farpush ax
 	001b4964 mov ax,0x56
 	001b4970 farpush ax
 	001b4978 setfuncargs 0x2
 	001b4980 mov ax,0x6e6f20
 	001b498c farcall ax
 	001b4994 farsubsp 0x2
 	001b499c jmp 0x001b55a0
		001b55a0: UNCONDITIONAL_JUMP

	[001b49a4]
		001b491c: CONDITIONAL_JUMP
 	001b49a4 sourceline 0x20c6
 	001b49ac push op
 	001b49b4 mov ax,0x397
 	001b49c0 farpush ax
 	001b49c8 mov ax,0x7
 	001b49d4 farpush ax
 	001b49dc mov mar,0x3cef20
 	001b49e8 mov ax,mar
 	001b49f4 mov op,ax
 	001b49fc setfuncargs 0x2
 	001b4a04 mov ax,0x6eef20
 	001b4a10 farcall ax
 	001b4a18 farsubsp 0x2
 	001b4a20 pop op
 	001b4a28 sourceline 0x20c7
 	001b4a30 mov ax,0x3
 	001b4a3c mov bx,ax
 	001b4a48 mov mar,0x3cef20
 	001b4a54 mov ax,mar
 	001b4a60 push op
 	001b4a68 mov op,ax
 	001b4a70 farpush bx
 	001b4a78 setfuncargs 0x1
 	001b4a80 mov ax,0x69ef20
 	001b4a8c farcall ax
 	001b4a94 farsubsp 0x1
 	001b4a9c pop op
 	001b4aa4 sourceline 0x20c8
 	001b4aac mov ax,0x0
 	001b4ab8 mov bx,ax
 	001b4ac4 mov mar,0x3cef20
 	001b4ad0 mov ax,mar
 	001b4adc push op
 	001b4ae4 mov op,ax
 	001b4aec farpush bx
 	001b4af4 setfuncargs 0x1
 	001b4afc mov ax,0x436f20
 	001b4b08 farcall ax
 	001b4b10 farsubsp 0x1
 	001b4b18 pop op
 	001b4b20 sourceline 0x20c9
 	001b4b28 mov mar,0xbf6f20
 	001b4b34 memread4 ax
 	001b4b3c jz 0x001b4c4c
		001b4c4c: CONDITIONAL_JUMP
		001b4b44: FALL_THROUGH

	[001b4b44]
		001b49a4: FALL_THROUGH
 	001b4b44 sourceline 0x20cb
 	001b4b4c push op
 	001b4b54 mov ax,0x2c48ed
 	001b4b60 farpush ax
 	001b4b68 mov mar,0x3cef20
 	001b4b74 mov ax,mar
 	001b4b80 mov op,ax
 	001b4b88 setfuncargs 0x1
 	001b4b90 mov ax,0x6f6f20
 	001b4b9c farcall ax
 	001b4ba4 farsubsp 0x1
 	001b4bac pop op
 	001b4bb4 sourceline 0x20cc
 	001b4bbc push op
 	001b4bc4 mov ax,0x2c48f9
 	001b4bd0 farpush ax
 	001b4bd8 mov mar,0xc06f20
 	001b4be4 mov ax,mar
 	001b4bf0 mov op,ax
 	001b4bf8 setfuncargs 0x1
 	001b4c00 mov ax,0x6f6f20
 	001b4c0c farcall ax
 	001b4c14 farsubsp 0x1
 	001b4c1c pop op
 	001b4c24 sourceline 0x20cd
 	001b4c2c mov ax,0x0
 	001b4c38 mov mar,0xbf6f20
 	001b4c44 memwrite4 ax
		001b4c4c: FALL_THROUGH

	[001b4c4c]
		001b49a4: CONDITIONAL_JUMP
		001b4b44: FALL_THROUGH
 	001b4c4c sourceline 0x20cf
 	001b4c54 push op
 	001b4c5c mov ax,0xc
 	001b4c68 farpush ax
 	001b4c70 mov mar,0x3cef20
 	001b4c7c mov ax,mar
 	001b4c88 mov op,ax
 	001b4c90 setfuncargs 0x1
 	001b4c98 mov ax,0x51ef20
 	001b4ca4 farcall ax
 	001b4cac farsubsp 0x1
 	001b4cb4 pop op
 	001b4cbc sourceline 0x20d0
 	001b4cc4 mov mar,0x3cef20
 	001b4cd0 mov ax,mar
 	001b4cdc push op
 	001b4ce4 mov op,ax
 	001b4cec setfuncargs 0x0
 	001b4cf4 mov ax,0x78ef20
 	001b4d00 farcall ax
 	001b4d08 pop op
 	001b4d10 push ax
 	001b4d18 mov ax,0x7
 	001b4d24 pop bx
 	001b4d2c sub bx,ax
 	001b4d38 mov ax,bx
 	001b4d44 mov bx,ax
 	001b4d50 mov mar,0x3cef20
 	001b4d5c mov ax,mar
 	001b4d68 push op
 	001b4d70 mov op,ax
 	001b4d78 farpush bx
 	001b4d80 setfuncargs 0x1
 	001b4d88 mov ax,0x526f20
 	001b4d94 farcall ax
 	001b4d9c farsubsp 0x1
 	001b4da4 pop op
 	001b4dac sourceline 0x20d1
 	001b4db4 mov mar,0x3cef20
 	001b4dc0 mov ax,mar
 	001b4dcc push op
 	001b4dd4 mov op,ax
 	001b4ddc setfuncargs 0x0
 	001b4de4 mov ax,0xb36f20
 	001b4df0 farcall ax
 	001b4df8 pop op
 	001b4e00 push ax
 	001b4e08 mov ax,0x4
 	001b4e14 pop bx
 	001b4e1c sub bx,ax
 	001b4e28 mov ax,bx
 	001b4e34 mov bx,ax
 	001b4e40 mov mar,0x3cef20
 	001b4e4c mov ax,mar
 	001b4e58 push op
 	001b4e60 mov op,ax
 	001b4e68 farpush bx
 	001b4e70 setfuncargs 0x1
 	001b4e78 mov ax,0x70ef20
 	001b4e84 farcall ax
 	001b4e8c farsubsp 0x1
 	001b4e94 pop op
 	001b4e9c sourceline 0x20d2
 	001b4ea4 push op
 	001b4eac mov ax,0x426
 	001b4eb8 farpush ax
 	001b4ec0 mov ax,0x397
 	001b4ecc farpush ax
 	001b4ed4 mov ax,0x0
 	001b4ee0 farpush ax
 	001b4ee8 mov ax,0x3
 	001b4ef4 farpush ax
 	001b4efc mov ax,0x2
 	001b4f08 farpush ax
 	001b4f10 mov mar,0x3cef20
 	001b4f1c mov ax,mar
 	001b4f28 mov op,ax
 	001b4f30 setfuncargs 0x5
 	001b4f38 mov ax,0x536f20
 	001b4f44 farcall ax
 	001b4f4c farsubsp 0x5
 	001b4f54 pop op
 	001b4f5c sourceline 0x20d4
 	001b4f64 mov ax,0x3
 	001b4f70 farpush ax
 	001b4f78 setfuncargs 0x1
 	001b4f80 mov ax,0x4a6f20
 	001b4f8c farcall ax
 	001b4f94 farsubsp 0x1
 	001b4f9c mov mar,sp
 	001b4fa8 memwrite4 ax
 	001b4fb0 add sp,0x4
 	001b4fbc sourceline 0x20d5
 	001b4fc4 stackptr 0x4
 	001b4fcc memread4 ax
 	001b4fd4 push ax
 	001b4fdc mov ax,0x0
 	001b4fe8 pop bx
 	001b4ff0 cmpeq bx,ax
 	001b4ffc mov ax,bx
 	001b5008 jz 0x001b5080
		001b5080: CONDITIONAL_JUMP
		001b5010: FALL_THROUGH

	[001b5010]
		001b4c4c: FALL_THROUGH
 	001b5010 push op
 	001b5018 mov ax,0x2c8717
 	001b5024 farpush ax
 	001b502c mov mar,0x3cef20
 	001b5038 mov ax,mar
 	001b5044 mov op,ax
 	001b504c setfuncargs 0x1
 	001b5054 mov ax,0x6f6f20
 	001b5060 farcall ax
 	001b5068 farsubsp 0x1
 	001b5070 pop op
 	001b5078 jmp 0x001b5278
		001b5278: UNCONDITIONAL_JUMP

	[001b5080]
		001b4c4c: CONDITIONAL_JUMP
 	001b5080 sourceline 0x20d6
 	001b5088 stackptr 0x4
 	001b5090 memread4 ax
 	001b5098 push ax
 	001b50a0 mov ax,0x1
 	001b50ac pop bx
 	001b50b4 cmpeq bx,ax
 	001b50c0 mov ax,bx
 	001b50cc jz 0x001b5144
		001b5144: CONDITIONAL_JUMP
		001b50d4: FALL_THROUGH

	[001b50d4]
		001b5080: FALL_THROUGH
 	001b50d4 push op
 	001b50dc mov ax,0x2c8740
 	001b50e8 farpush ax
 	001b50f0 mov mar,0x3cef20
 	001b50fc mov ax,mar
 	001b5108 mov op,ax
 	001b5110 setfuncargs 0x1
 	001b5118 mov ax,0x6f6f20
 	001b5124 farcall ax
 	001b512c farsubsp 0x1
 	001b5134 pop op
 	001b513c jmp 0x001b5278
		001b5278: UNCONDITIONAL_JUMP

	[001b5144]
		001b5080: CONDITIONAL_JUMP
 	001b5144 sourceline 0x20d7
 	001b514c stackptr 0x4
 	001b5154 memread4 ax
 	001b515c push ax
 	001b5164 mov ax,0x2
 	001b5170 pop bx
 	001b5178 cmpeq bx,ax
 	001b5184 mov ax,bx
 	001b5190 jz 0x001b5208
		001b5208: CONDITIONAL_JUMP
		001b5198: FALL_THROUGH

	[001b5198]
		001b5144: FALL_THROUGH
 	001b5198 push op
 	001b51a0 mov ax,0x2c8769
 	001b51ac farpush ax
 	001b51b4 mov mar,0x3cef20
 	001b51c0 mov ax,mar
 	001b51cc mov op,ax
 	001b51d4 setfuncargs 0x1
 	001b51dc mov ax,0x6f6f20
 	001b51e8 farcall ax
 	001b51f0 farsubsp 0x1
 	001b51f8 pop op
 	001b5200 jmp 0x001b5278
		001b5278: UNCONDITIONAL_JUMP

	[001b5208]
		001b5144: CONDITIONAL_JUMP
 	001b5208 sourceline 0x20d8
 	001b5210 push op
 	001b5218 mov ax,0x2c8792
 	001b5224 farpush ax
 	001b522c mov mar,0x3cef20
 	001b5238 mov ax,mar
 	001b5244 mov op,ax
 	001b524c setfuncargs 0x1
 	001b5254 mov ax,0x6f6f20
 	001b5260 farcall ax
 	001b5268 farsubsp 0x1
 	001b5270 pop op
		001b5278: FALL_THROUGH

	[001b5278]
		001b5010: UNCONDITIONAL_JUMP
		001b50d4: UNCONDITIONAL_JUMP
		001b5198: UNCONDITIONAL_JUMP
		001b5208: FALL_THROUGH
 	001b5278 sourceline 0x20da
 	001b5280 push op
 	001b5288 mov ax,0x2c483a
 	001b5294 farpush ax
 	001b529c mov mar,0xc06f20
 	001b52a8 mov ax,mar
 	001b52b4 mov op,ax
 	001b52bc setfuncargs 0x1
 	001b52c4 mov ax,0x6f6f20
 	001b52d0 farcall ax
 	001b52d8 farsubsp 0x1
 	001b52e0 pop op
 	001b52e8 sourceline 0x20db
 	001b52f0 push op
 	001b52f8 mov ax,0x427
 	001b5304 farpush ax
 	001b530c mov ax,0x397
 	001b5318 farpush ax
 	001b5320 mov ax,0x0
 	001b532c farpush ax
 	001b5334 mov ax,0x3
 	001b5340 farpush ax
 	001b5348 mov ax,0x2
 	001b5354 farpush ax
 	001b535c mov mar,0x3cef20
 	001b5368 mov ax,mar
 	001b5374 mov op,ax
 	001b537c setfuncargs 0x5
 	001b5384 mov ax,0x536f20
 	001b5390 farcall ax
 	001b5398 farsubsp 0x5
 	001b53a0 pop op
 	001b53a8 sourceline 0x20dc
 	001b53b0 push op
 	001b53b8 mov ax,0x2
 	001b53c4 farpush ax
 	001b53cc mov mar,0x3cef20
 	001b53d8 mov ax,mar
 	001b53e4 mov op,ax
 	001b53ec setfuncargs 0x1
 	001b53f4 mov ax,0x51ef20
 	001b5400 farcall ax
 	001b5408 farsubsp 0x1
 	001b5410 pop op
 	001b5418 sourceline 0x20dd
 	001b5420 mov ax,0x7
 	001b542c mov bx,ax
 	001b5438 mov mar,0x3cef20
 	001b5444 mov ax,mar
 	001b5450 push op
 	001b5458 mov op,ax
 	001b5460 farpush bx
 	001b5468 setfuncargs 0x1
 	001b5470 mov ax,0x766f20
 	001b547c farcall ax
 	001b5484 farsubsp 0x1
 	001b548c pop op
 	001b5494 sourceline 0x20de
 	001b549c mov ax,0x56
 	001b54a8 mov bx,ax
 	001b54b4 mov mar,0x3cef20
 	001b54c0 mov ax,mar
 	001b54cc push op
 	001b54d4 mov op,ax
 	001b54dc farpush bx
 	001b54e4 setfuncargs 0x1
 	001b54ec mov ax,0x70ef20
 	001b54f8 farcall ax
 	001b5500 farsubsp 0x1
 	001b5508 pop op
 	001b5510 sourceline 0x20df
 	001b5518 mov ax,0x8f
 	001b5524 mov bx,ax
 	001b5530 mov mar,0x3cef20
 	001b553c mov ax,mar
 	001b5548 push op
 	001b5550 mov op,ax
 	001b5558 farpush bx
 	001b5560 setfuncargs 0x1
 	001b5568 mov ax,0x526f20
 	001b5574 farcall ax
 	001b557c farsubsp 0x1
 	001b5584 pop op
 	001b558c sourceline 0x20e0
 	001b5594 sub sp,0x4
		001b55a0: FALL_THROUGH

	[001b55a0]
		001b4950: UNCONDITIONAL_JUMP
		001b5278: FALL_THROUGH
 	001b55a0 sourceline 0x20e1
 	001b55a8 jmp 0x001b684c
		001b684c: UNCONDITIONAL_JUMP

	[001b55b0]
		001b4914: CONDITIONAL_JUMP
 	001b55b0 sourceline 0x20e3
 	001b55b8 mov mar,0x3cef20
 	001b55c4 mov ax,mar
 	001b55d0 push op
 	001b55d8 mov op,ax
 	001b55e0 setfuncargs 0x0
 	001b55e8 mov ax,0x89ef20
 	001b55f4 farcall ax
 	001b55fc pop op
 	001b5604 push ax
 	001b560c mov mar,0x8bef20
 	001b5618 mov ax,mar
 	001b5624 pop bx
 	001b562c cmpeq bx,ax
 	001b5638 mov ax,bx
 	001b5644 jz 0x001b5784
		001b5784: CONDITIONAL_JUMP
		001b564c: FALL_THROUGH

	[001b564c]
		001b55b0: FALL_THROUGH
 	001b564c sourceline 0x20e5
 	001b5654 mov ax,0x1
 	001b5660 mov bx,ax
 	001b566c mov mar,0x3cef20
 	001b5678 mov ax,mar
 	001b5684 push op
 	001b568c mov op,ax
 	001b5694 farpush bx
 	001b569c setfuncargs 0x1
 	001b56a4 mov ax,0x69ef20
 	001b56b0 farcall ax
 	001b56b8 farsubsp 0x1
 	001b56c0 pop op
 	001b56c8 sourceline 0x20e7
 	001b56d0 push op
 	001b56d8 mov ax,0x2c4847
 	001b56e4 farpush ax
 	001b56ec mov ax,0x138
 	001b56f8 farpush ax
 	001b5700 mov ax,0x92
 	001b570c farpush ax
 	001b5714 mov ax,0x0
 	001b5720 farpush ax
 	001b5728 mov mar,0x3cef20
 	001b5734 mov ax,mar
 	001b5740 mov op,ax
 	001b5748 setfuncargs 0x4
 	001b5750 mov ax,0x6aef20
 	001b575c farcall ax
 	001b5764 farsubsp 0x4
 	001b576c pop op
 	001b5774 sourceline 0x20e8
 	001b577c jmp 0x001b684c
		001b684c: UNCONDITIONAL_JUMP

	[001b5784]
		001b55b0: CONDITIONAL_JUMP
 	001b5784 sourceline 0x20ea
 	001b578c mov mar,0x3cef20
 	001b5798 mov ax,mar
 	001b57a4 push op
 	001b57ac mov op,ax
 	001b57b4 setfuncargs 0x0
 	001b57bc mov ax,0x89ef20
 	001b57c8 farcall ax
 	001b57d0 pop op
 	001b57d8 push ax
 	001b57e0 mov mar,0x92ef20
 	001b57ec mov ax,mar
 	001b57f8 pop bx
 	001b5800 cmpeq bx,ax
 	001b580c mov ax,bx
 	001b5818 jz 0x001b5958
		001b5958: CONDITIONAL_JUMP
		001b5820: FALL_THROUGH

	[001b5820]
		001b5784: FALL_THROUGH
 	001b5820 sourceline 0x20ec
 	001b5828 mov ax,0x1
 	001b5834 mov bx,ax
 	001b5840 mov mar,0x3cef20
 	001b584c mov ax,mar
 	001b5858 push op
 	001b5860 mov op,ax
 	001b5868 farpush bx
 	001b5870 setfuncargs 0x1
 	001b5878 mov ax,0x69ef20
 	001b5884 farcall ax
 	001b588c farsubsp 0x1
 	001b5894 pop op
 	001b589c sourceline 0x20ee
 	001b58a4 push op
 	001b58ac mov ax,0x2c48ad
 	001b58b8 farpush ax
 	001b58c0 mov ax,0x138
 	001b58cc farpush ax
 	001b58d4 mov ax,0x92
 	001b58e0 farpush ax
 	001b58e8 mov ax,0x0
 	001b58f4 farpush ax
 	001b58fc mov mar,0x3cef20
 	001b5908 mov ax,mar
 	001b5914 mov op,ax
 	001b591c setfuncargs 0x4
 	001b5924 mov ax,0x6aef20
 	001b5930 farcall ax
 	001b5938 farsubsp 0x4
 	001b5940 pop op
 	001b5948 sourceline 0x20ef
 	001b5950 jmp 0x001b684c
		001b684c: UNCONDITIONAL_JUMP

	[001b5958]
		001b5784: CONDITIONAL_JUMP
 	001b5958 sourceline 0x20f1
 	001b5960 mov mar,0x3cef20
 	001b596c mov ax,mar
 	001b5978 push op
 	001b5980 mov op,ax
 	001b5988 setfuncargs 0x0
 	001b5990 mov ax,0x89ef20
 	001b599c farcall ax
 	001b59a4 pop op
 	001b59ac push ax
 	001b59b4 mov mar,0x91ef20
 	001b59c0 mov ax,mar
 	001b59cc pop bx
 	001b59d4 cmpeq bx,ax
 	001b59e0 mov ax,bx
 	001b59ec jz 0x001b6688
		001b6688: CONDITIONAL_JUMP
		001b59f4: FALL_THROUGH

	[001b59f4]
		001b5958: FALL_THROUGH
 	001b59f4 sourceline 0x20f3
 	001b59fc setfuncargs 0x0
 	001b5a04 mov ax,0x6def20
 	001b5a10 farcall ax
 	001b5a18 lnot ax
 	001b5a20 jz 0x001b5a7c
		001b5a7c: CONDITIONAL_JUMP
		001b5a28: FALL_THROUGH

	[001b5a28]
		001b59f4: FALL_THROUGH
 	001b5a28 mov ax,0x8f
 	001b5a34 farpush ax
 	001b5a3c mov ax,0x56
 	001b5a48 farpush ax
 	001b5a50 setfuncargs 0x2
 	001b5a58 mov ax,0x6e6f20
 	001b5a64 farcall ax
 	001b5a6c farsubsp 0x2
 	001b5a74 jmp 0x001b6678
		001b6678: UNCONDITIONAL_JUMP

	[001b5a7c]
		001b59f4: CONDITIONAL_JUMP
 	001b5a7c sourceline 0x20f6
 	001b5a84 push op
 	001b5a8c mov ax,0x397
 	001b5a98 farpush ax
 	001b5aa0 mov ax,0x7
 	001b5aac farpush ax
 	001b5ab4 mov mar,0x3cef20
 	001b5ac0 mov ax,mar
 	001b5acc mov op,ax
 	001b5ad4 setfuncargs 0x2
 	001b5adc mov ax,0x6eef20
 	001b5ae8 farcall ax
 	001b5af0 farsubsp 0x2
 	001b5af8 pop op
 	001b5b00 sourceline 0x20f7
 	001b5b08 mov ax,0x3
 	001b5b14 mov bx,ax
 	001b5b20 mov mar,0x3cef20
 	001b5b2c mov ax,mar
 	001b5b38 push op
 	001b5b40 mov op,ax
 	001b5b48 farpush bx
 	001b5b50 setfuncargs 0x1
 	001b5b58 mov ax,0x69ef20
 	001b5b64 farcall ax
 	001b5b6c farsubsp 0x1
 	001b5b74 pop op
 	001b5b7c sourceline 0x20f8
 	001b5b84 mov ax,0x0
 	001b5b90 mov bx,ax
 	001b5b9c mov mar,0x3cef20
 	001b5ba8 mov ax,mar
 	001b5bb4 push op
 	001b5bbc mov op,ax
 	001b5bc4 farpush bx
 	001b5bcc setfuncargs 0x1
 	001b5bd4 mov ax,0x436f20
 	001b5be0 farcall ax
 	001b5be8 farsubsp 0x1
 	001b5bf0 pop op
 	001b5bf8 sourceline 0x20f9
 	001b5c00 mov mar,0xbf6f20
 	001b5c0c memread4 ax
 	001b5c14 jz 0x001b5d24
		001b5d24: CONDITIONAL_JUMP
		001b5c1c: FALL_THROUGH

	[001b5c1c]
		001b5a7c: FALL_THROUGH
 	001b5c1c sourceline 0x20fb
 	001b5c24 push op
 	001b5c2c mov ax,0x2c48ed
 	001b5c38 farpush ax
 	001b5c40 mov mar,0x3cef20
 	001b5c4c mov ax,mar
 	001b5c58 mov op,ax
 	001b5c60 setfuncargs 0x1
 	001b5c68 mov ax,0x6f6f20
 	001b5c74 farcall ax
 	001b5c7c farsubsp 0x1
 	001b5c84 pop op
 	001b5c8c sourceline 0x20fc
 	001b5c94 push op
 	001b5c9c mov ax,0x2c48f9
 	001b5ca8 farpush ax
 	001b5cb0 mov mar,0xc06f20
 	001b5cbc mov ax,mar
 	001b5cc8 mov op,ax
 	001b5cd0 setfuncargs 0x1
 	001b5cd8 mov ax,0x6f6f20
 	001b5ce4 farcall ax
 	001b5cec farsubsp 0x1
 	001b5cf4 pop op
 	001b5cfc sourceline 0x20fd
 	001b5d04 mov ax,0x0
 	001b5d10 mov mar,0xbf6f20
 	001b5d1c memwrite4 ax
		001b5d24: FALL_THROUGH

	[001b5d24]
		001b5a7c: CONDITIONAL_JUMP
		001b5c1c: FALL_THROUGH
 	001b5d24 sourceline 0x20ff
 	001b5d2c push op
 	001b5d34 mov ax,0xc
 	001b5d40 farpush ax
 	001b5d48 mov mar,0x3cef20
 	001b5d54 mov ax,mar
 	001b5d60 mov op,ax
 	001b5d68 setfuncargs 0x1
 	001b5d70 mov ax,0x51ef20
 	001b5d7c farcall ax
 	001b5d84 farsubsp 0x1
 	001b5d8c pop op
 	001b5d94 sourceline 0x2100
 	001b5d9c mov mar,0x3cef20
 	001b5da8 mov ax,mar
 	001b5db4 push op
 	001b5dbc mov op,ax
 	001b5dc4 setfuncargs 0x0
 	001b5dcc mov ax,0x78ef20
 	001b5dd8 farcall ax
 	001b5de0 pop op
 	001b5de8 push ax
 	001b5df0 mov ax,0x7
 	001b5dfc pop bx
 	001b5e04 sub bx,ax
 	001b5e10 mov ax,bx
 	001b5e1c mov bx,ax
 	001b5e28 mov mar,0x3cef20
 	001b5e34 mov ax,mar
 	001b5e40 push op
 	001b5e48 mov op,ax
 	001b5e50 farpush bx
 	001b5e58 setfuncargs 0x1
 	001b5e60 mov ax,0x526f20
 	001b5e6c farcall ax
 	001b5e74 farsubsp 0x1
 	001b5e7c pop op
 	001b5e84 sourceline 0x2101
 	001b5e8c mov mar,0x3cef20
 	001b5e98 mov ax,mar
 	001b5ea4 push op
 	001b5eac mov op,ax
 	001b5eb4 setfuncargs 0x0
 	001b5ebc mov ax,0xb36f20
 	001b5ec8 farcall ax
 	001b5ed0 pop op
 	001b5ed8 push ax
 	001b5ee0 mov ax,0x4
 	001b5eec pop bx
 	001b5ef4 sub bx,ax
 	001b5f00 mov ax,bx
 	001b5f0c mov bx,ax
 	001b5f18 mov mar,0x3cef20
 	001b5f24 mov ax,mar
 	001b5f30 push op
 	001b5f38 mov op,ax
 	001b5f40 farpush bx
 	001b5f48 setfuncargs 0x1
 	001b5f50 mov ax,0x70ef20
 	001b5f5c farcall ax
 	001b5f64 farsubsp 0x1
 	001b5f6c pop op
 	001b5f74 sourceline 0x2102
 	001b5f7c push op
 	001b5f84 mov ax,0x426
 	001b5f90 farpush ax
 	001b5f98 mov ax,0x397
 	001b5fa4 farpush ax
 	001b5fac mov ax,0x0
 	001b5fb8 farpush ax
 	001b5fc0 mov ax,0x3
 	001b5fcc farpush ax
 	001b5fd4 mov ax,0x2
 	001b5fe0 farpush ax
 	001b5fe8 mov mar,0x3cef20
 	001b5ff4 mov ax,mar
 	001b6000 mov op,ax
 	001b6008 setfuncargs 0x5
 	001b6010 mov ax,0x536f20
 	001b601c farcall ax
 	001b6024 farsubsp 0x5
 	001b602c pop op
 	001b6034 sourceline 0x2103
 	001b603c mov ax,0x3
 	001b6048 farpush ax
 	001b6050 setfuncargs 0x1
 	001b6058 mov ax,0x4a6f20
 	001b6064 farcall ax
 	001b606c farsubsp 0x1
 	001b6074 mov mar,sp
 	001b6080 memwrite4 ax
 	001b6088 add sp,0x4
 	001b6094 sourceline 0x2104
 	001b609c stackptr 0x4
 	001b60a4 memread4 ax
 	001b60ac push ax
 	001b60b4 mov ax,0x0
 	001b60c0 pop bx
 	001b60c8 cmpeq bx,ax
 	001b60d4 mov ax,bx
 	001b60e0 jz 0x001b6158
		001b6158: CONDITIONAL_JUMP
		001b60e8: FALL_THROUGH

	[001b60e8]
		001b5d24: FALL_THROUGH
 	001b60e8 push op
 	001b60f0 mov ax,0x2c4923
 	001b60fc farpush ax
 	001b6104 mov mar,0x3cef20
 	001b6110 mov ax,mar
 	001b611c mov op,ax
 	001b6124 setfuncargs 0x1
 	001b612c mov ax,0x6f6f20
 	001b6138 farcall ax
 	001b6140 farsubsp 0x1
 	001b6148 pop op
 	001b6150 jmp 0x001b6350
		001b6350: UNCONDITIONAL_JUMP

	[001b6158]
		001b5d24: CONDITIONAL_JUMP
 	001b6158 sourceline 0x2105
 	001b6160 stackptr 0x4
 	001b6168 memread4 ax
 	001b6170 push ax
 	001b6178 mov ax,0x1
 	001b6184 pop bx
 	001b618c cmpeq bx,ax
 	001b6198 mov ax,bx
 	001b61a4 jz 0x001b621c
		001b621c: CONDITIONAL_JUMP
		001b61ac: FALL_THROUGH

	[001b61ac]
		001b6158: FALL_THROUGH
 	001b61ac push op
 	001b61b4 mov ax,0x2c4936
 	001b61c0 farpush ax
 	001b61c8 mov mar,0x3cef20
 	001b61d4 mov ax,mar
 	001b61e0 mov op,ax
 	001b61e8 setfuncargs 0x1
 	001b61f0 mov ax,0x6f6f20
 	001b61fc farcall ax
 	001b6204 farsubsp 0x1
 	001b620c pop op
 	001b6214 jmp 0x001b6350
		001b6350: UNCONDITIONAL_JUMP

	[001b621c]
		001b6158: CONDITIONAL_JUMP
 	001b621c sourceline 0x2106
 	001b6224 stackptr 0x4
 	001b622c memread4 ax
 	001b6234 push ax
 	001b623c mov ax,0x2
 	001b6248 pop bx
 	001b6250 cmpeq bx,ax
 	001b625c mov ax,bx
 	001b6268 jz 0x001b62e0
		001b62e0: CONDITIONAL_JUMP
		001b6270: FALL_THROUGH

	[001b6270]
		001b621c: FALL_THROUGH
 	001b6270 push op
 	001b6278 mov ax,0x2c4949
 	001b6284 farpush ax
 	001b628c mov mar,0x3cef20
 	001b6298 mov ax,mar
 	001b62a4 mov op,ax
 	001b62ac setfuncargs 0x1
 	001b62b4 mov ax,0x6f6f20
 	001b62c0 farcall ax
 	001b62c8 farsubsp 0x1
 	001b62d0 pop op
 	001b62d8 jmp 0x001b6350
		001b6350: UNCONDITIONAL_JUMP

	[001b62e0]
		001b621c: CONDITIONAL_JUMP
 	001b62e0 sourceline 0x2107
 	001b62e8 push op
 	001b62f0 mov ax,0x2c495c
 	001b62fc farpush ax
 	001b6304 mov mar,0x3cef20
 	001b6310 mov ax,mar
 	001b631c mov op,ax
 	001b6324 setfuncargs 0x1
 	001b632c mov ax,0x6f6f20
 	001b6338 farcall ax
 	001b6340 farsubsp 0x1
 	001b6348 pop op
		001b6350: FALL_THROUGH

	[001b6350]
		001b60e8: UNCONDITIONAL_JUMP
		001b61ac: UNCONDITIONAL_JUMP
		001b6270: UNCONDITIONAL_JUMP
		001b62e0: FALL_THROUGH
 	001b6350 sourceline 0x2109
 	001b6358 push op
 	001b6360 mov ax,0x2c496f
 	001b636c farpush ax
 	001b6374 mov mar,0xc06f20
 	001b6380 mov ax,mar
 	001b638c mov op,ax
 	001b6394 setfuncargs 0x1
 	001b639c mov ax,0x6f6f20
 	001b63a8 farcall ax
 	001b63b0 farsubsp 0x1
 	001b63b8 pop op
 	001b63c0 sourceline 0x210a
 	001b63c8 push op
 	001b63d0 mov ax,0x427
 	001b63dc farpush ax
 	001b63e4 mov ax,0x397
 	001b63f0 farpush ax
 	001b63f8 mov ax,0x0
 	001b6404 farpush ax
 	001b640c mov ax,0x3
 	001b6418 farpush ax
 	001b6420 mov ax,0x2
 	001b642c farpush ax
 	001b6434 mov mar,0x3cef20
 	001b6440 mov ax,mar
 	001b644c mov op,ax
 	001b6454 setfuncargs 0x5
 	001b645c mov ax,0x536f20
 	001b6468 farcall ax
 	001b6470 farsubsp 0x5
 	001b6478 pop op
 	001b6480 sourceline 0x210b
 	001b6488 push op
 	001b6490 mov ax,0x2
 	001b649c farpush ax
 	001b64a4 mov mar,0x3cef20
 	001b64b0 mov ax,mar
 	001b64bc mov op,ax
 	001b64c4 setfuncargs 0x1
 	001b64cc mov ax,0x51ef20
 	001b64d8 farcall ax
 	001b64e0 farsubsp 0x1
 	001b64e8 pop op
 	001b64f0 sourceline 0x210c
 	001b64f8 mov ax,0x7
 	001b6504 mov bx,ax
 	001b6510 mov mar,0x3cef20
 	001b651c mov ax,mar
 	001b6528 push op
 	001b6530 mov op,ax
 	001b6538 farpush bx
 	001b6540 setfuncargs 0x1
 	001b6548 mov ax,0x766f20
 	001b6554 farcall ax
 	001b655c farsubsp 0x1
 	001b6564 pop op
 	001b656c sourceline 0x210d
 	001b6574 mov ax,0x56
 	001b6580 mov bx,ax
 	001b658c mov mar,0x3cef20
 	001b6598 mov ax,mar
 	001b65a4 push op
 	001b65ac mov op,ax
 	001b65b4 farpush bx
 	001b65bc setfuncargs 0x1
 	001b65c4 mov ax,0x70ef20
 	001b65d0 farcall ax
 	001b65d8 farsubsp 0x1
 	001b65e0 pop op
 	001b65e8 sourceline 0x210e
 	001b65f0 mov ax,0x8f
 	001b65fc mov bx,ax
 	001b6608 mov mar,0x3cef20
 	001b6614 mov ax,mar
 	001b6620 push op
 	001b6628 mov op,ax
 	001b6630 farpush bx
 	001b6638 setfuncargs 0x1
 	001b6640 mov ax,0x526f20
 	001b664c farcall ax
 	001b6654 farsubsp 0x1
 	001b665c pop op
 	001b6664 sourceline 0x210f
 	001b666c sub sp,0x4
		001b6678: FALL_THROUGH

	[001b6678]
		001b5a28: UNCONDITIONAL_JUMP
		001b6350: FALL_THROUGH
 	001b6678 sourceline 0x2110
 	001b6680 jmp 0x001b684c
		001b684c: UNCONDITIONAL_JUMP

	[001b6688]
		001b5958: CONDITIONAL_JUMP
 	001b6688 sourceline 0x2112
 	001b6690 mov mar,0x3cef20
 	001b669c mov ax,mar
 	001b66a8 push op
 	001b66b0 mov op,ax
 	001b66b8 setfuncargs 0x0
 	001b66c0 mov ax,0x89ef20
 	001b66cc farcall ax
 	001b66d4 pop op
 	001b66dc push ax
 	001b66e4 mov mar,0x926f20
 	001b66f0 mov ax,mar
 	001b66fc pop bx
 	001b6704 cmpeq bx,ax
 	001b6710 mov ax,bx
 	001b671c jz 0x001b684c
		001b684c: CONDITIONAL_JUMP
		001b6724: FALL_THROUGH

	[001b6724]
		001b6688: FALL_THROUGH
 	001b6724 sourceline 0x2114
 	001b672c mov ax,0x1
 	001b6738 mov bx,ax
 	001b6744 mov mar,0x3cef20
 	001b6750 mov ax,mar
 	001b675c push op
 	001b6764 mov op,ax
 	001b676c farpush bx
 	001b6774 setfuncargs 0x1
 	001b677c mov ax,0x69ef20
 	001b6788 farcall ax
 	001b6790 farsubsp 0x1
 	001b6798 pop op
 	001b67a0 sourceline 0x2116
 	001b67a8 push op
 	001b67b0 mov ax,0x2c49b3
 	001b67bc farpush ax
 	001b67c4 mov ax,0x138
 	001b67d0 farpush ax
 	001b67d8 mov ax,0x92
 	001b67e4 farpush ax
 	001b67ec mov ax,0x0
 	001b67f8 farpush ax
 	001b6800 mov mar,0x3cef20
 	001b680c mov ax,mar
 	001b6818 mov op,ax
 	001b6820 setfuncargs 0x4
 	001b6828 mov ax,0x6aef20
 	001b6834 farcall ax
 	001b683c farsubsp 0x4
 	001b6844 pop op
		001b684c: FALL_THROUGH

	[001b684c]
		001b3e28: UNCONDITIONAL_JUMP
		001b55a0: UNCONDITIONAL_JUMP
		001b564c: UNCONDITIONAL_JUMP
		001b5820: UNCONDITIONAL_JUMP
		001b6678: UNCONDITIONAL_JUMP
		001b6688: CONDITIONAL_JUMP
		001b6724: FALL_THROUGH
 	001b684c sourceline 0x2118
 	001b6854 mov ax,0x0
 	001b6860 ret

cHippie_UseInv$0:
	[001b6864]
 	001b6864 sourceline 0x211d
 	001b686c thisaddr
 	001b6874 sourceline 0x211e
*	001b687c mov mar,0x3cef20
 	001b6888 mov ax,mar
 	001b6894 push op
 	001b689c mov op,ax
 	001b68a4 setfuncargs 0x0
 	001b68ac mov ax,0x89ef20
 	001b68b8 farcall ax
 	001b68c0 pop op
 	001b68c8 push ax
 	001b68d0 mov mar,0x946f20
 	001b68dc mov ax,mar
 	001b68e8 pop bx
 	001b68f0 cmpeq bx,ax
 	001b68fc mov ax,bx
 	001b6908 jz 0x001b7c1c
		001b7c1c: CONDITIONAL_JUMP
		001b6910: FALL_THROUGH

	[001b6910]
		001b6864: FALL_THROUGH
 	001b6910 sourceline 0x2120
 	001b6918 mov mar,0x876f20
 	001b6924 memread4 ax
 	001b692c jz 0x001b7a4c
		001b7a4c: CONDITIONAL_JUMP
		001b6934: FALL_THROUGH

	[001b6934]
		001b6910: FALL_THROUGH
 	001b6934 sourceline 0x2122
 	001b693c setfuncargs 0x0
 	001b6944 mov ax,0x6def20
 	001b6950 farcall ax
 	001b6958 lnot ax
 	001b6960 jz 0x001b69bc
		001b69bc: CONDITIONAL_JUMP
		001b6968: FALL_THROUGH

	[001b6968]
		001b6934: FALL_THROUGH
 	001b6968 mov ax,0x78
 	001b6974 farpush ax
 	001b697c mov ax,0xba
 	001b6988 farpush ax
 	001b6990 setfuncargs 0x2
 	001b6998 mov ax,0x6e6f20
 	001b69a4 farcall ax
 	001b69ac farsubsp 0x2
 	001b69b4 jmp 0x001b7a3c
		001b7a3c: UNCONDITIONAL_JUMP

	[001b69bc]
		001b6934: CONDITIONAL_JUMP
 	001b69bc sourceline 0x2125
 	001b69c4 push op
 	001b69cc mov ax,0x397
 	001b69d8 farpush ax
 	001b69e0 mov ax,0x7
 	001b69ec farpush ax
 	001b69f4 mov mar,0x3cef20
 	001b6a00 mov ax,mar
 	001b6a0c mov op,ax
 	001b6a14 setfuncargs 0x2
 	001b6a1c mov ax,0x6eef20
 	001b6a28 farcall ax
 	001b6a30 farsubsp 0x2
 	001b6a38 pop op
 	001b6a40 sourceline 0x2126
 	001b6a48 mov ax,0x3
 	001b6a54 mov bx,ax
 	001b6a60 mov mar,0x3cef20
 	001b6a6c mov ax,mar
 	001b6a78 push op
 	001b6a80 mov op,ax
 	001b6a88 farpush bx
 	001b6a90 setfuncargs 0x1
 	001b6a98 mov ax,0x69ef20
 	001b6aa4 farcall ax
 	001b6aac farsubsp 0x1
 	001b6ab4 pop op
 	001b6abc sourceline 0x2127
 	001b6ac4 push op
 	001b6acc mov ax,0x2c49e5
 	001b6ad8 farpush ax
 	001b6ae0 mov mar,0x3cef20
 	001b6aec mov ax,mar
 	001b6af8 mov op,ax
 	001b6b00 setfuncargs 0x1
 	001b6b08 mov ax,0x6f6f20
 	001b6b14 farcall ax
 	001b6b1c farsubsp 0x1
 	001b6b24 pop op
 	001b6b2c sourceline 0x2128
 	001b6b34 push op
 	001b6b3c mov ax,0xd
 	001b6b48 farpush ax
 	001b6b50 mov mar,0x3cef20
 	001b6b5c mov ax,mar
 	001b6b68 mov op,ax
 	001b6b70 setfuncargs 0x1
 	001b6b78 mov ax,0x51ef20
 	001b6b84 farcall ax
 	001b6b8c farsubsp 0x1
 	001b6b94 pop op
 	001b6b9c sourceline 0x2129
 	001b6ba4 mov mar,0x3cef20
 	001b6bb0 mov ax,mar
 	001b6bbc push op
 	001b6bc4 mov op,ax
 	001b6bcc setfuncargs 0x0
 	001b6bd4 mov ax,0x78ef20
 	001b6be0 farcall ax
 	001b6be8 pop op
 	001b6bf0 push ax
 	001b6bf8 mov ax,0x6
 	001b6c04 pop bx
 	001b6c0c sub bx,ax
 	001b6c18 mov ax,bx
 	001b6c24 mov bx,ax
 	001b6c30 mov mar,0x3cef20
 	001b6c3c mov ax,mar
 	001b6c48 push op
 	001b6c50 mov op,ax
 	001b6c58 farpush bx
 	001b6c60 setfuncargs 0x1
 	001b6c68 mov ax,0x526f20
 	001b6c74 farcall ax
 	001b6c7c farsubsp 0x1
 	001b6c84 pop op
 	001b6c8c sourceline 0x212a
 	001b6c94 mov mar,0x3cef20
 	001b6ca0 mov ax,mar
 	001b6cac push op
 	001b6cb4 mov op,ax
 	001b6cbc setfuncargs 0x0
 	001b6cc4 mov ax,0xb36f20
 	001b6cd0 farcall ax
 	001b6cd8 pop op
 	001b6ce0 push ax
 	001b6ce8 mov ax,0x4
 	001b6cf4 pop bx
 	001b6cfc sub bx,ax
 	001b6d08 mov ax,bx
 	001b6d14 mov bx,ax
 	001b6d20 mov mar,0x3cef20
 	001b6d2c mov ax,mar
 	001b6d38 push op
 	001b6d40 mov op,ax
 	001b6d48 farpush bx
 	001b6d50 setfuncargs 0x1
 	001b6d58 mov ax,0x70ef20
 	001b6d64 farcall ax
 	001b6d6c farsubsp 0x1
 	001b6d74 pop op
 	001b6d7c sourceline 0x212b
 	001b6d84 push op
 	001b6d8c mov ax,0x426
 	001b6d98 farpush ax
 	001b6da0 mov ax,0x398
 	001b6dac farpush ax
 	001b6db4 mov ax,0x0
 	001b6dc0 farpush ax
 	001b6dc8 mov ax,0x3
 	001b6dd4 farpush ax
 	001b6ddc mov ax,0x0
 	001b6de8 farpush ax
 	001b6df0 mov mar,0x3cef20
 	001b6dfc mov ax,mar
 	001b6e08 mov op,ax
 	001b6e10 setfuncargs 0x5
 	001b6e18 mov ax,0x536f20
 	001b6e24 farcall ax
 	001b6e2c farsubsp 0x5
 	001b6e34 pop op
 	001b6e3c sourceline 0x212c
 	001b6e44 push op
 	001b6e4c mov ax,0x427
 	001b6e58 farpush ax
 	001b6e60 mov ax,0x397
 	001b6e6c farpush ax
 	001b6e74 mov ax,0x0
 	001b6e80 farpush ax
 	001b6e88 mov ax,0x3
 	001b6e94 farpush ax
 	001b6e9c mov ax,0x0
 	001b6ea8 farpush ax
 	001b6eb0 mov mar,0xd4ef20
 	001b6ebc mov ax,mar
 	001b6ec8 mov op,ax
 	001b6ed0 setfuncargs 0x5
 	001b6ed8 mov ax,0x536f20
 	001b6ee4 farcall ax
 	001b6eec farsubsp 0x5
 	001b6ef4 pop op
 	001b6efc sourceline 0x212d
 	001b6f04 push op
 	001b6f0c mov mar,0x946f20
 	001b6f18 mov ax,mar
 	001b6f24 farpush ax
 	001b6f2c mov mar,0x3cef20
 	001b6f38 mov ax,mar
 	001b6f44 mov op,ax
 	001b6f4c setfuncargs 0x1
 	001b6f54 mov ax,0x7d6f20
 	001b6f60 farcall ax
 	001b6f68 farsubsp 0x1
 	001b6f70 pop op
 	001b6f78 sourceline 0x212e
 	001b6f80 push op
 	001b6f88 mov ax,0x427
 	001b6f94 farpush ax
 	001b6f9c mov ax,0x398
 	001b6fa8 farpush ax
 	001b6fb0 mov ax,0x0
 	001b6fbc farpush ax
 	001b6fc4 mov ax,0x3
 	001b6fd0 farpush ax
 	001b6fd8 mov ax,0x0
 	001b6fe4 farpush ax
 	001b6fec mov mar,0x3cef20
 	001b6ff8 mov ax,mar
 	001b7004 mov op,ax
 	001b700c setfuncargs 0x5
 	001b7014 mov ax,0x536f20
 	001b7020 farcall ax
 	001b7028 farsubsp 0x5
 	001b7030 pop op
 	001b7038 sourceline 0x212f
 	001b7040 push op
 	001b7048 mov ax,0x94
 	001b7054 farpush ax
 	001b705c mov mar,0xd4ef20
 	001b7068 mov ax,mar
 	001b7074 mov op,ax
 	001b707c setfuncargs 0x1
 	001b7084 mov ax,0x51ef20
 	001b7090 farcall ax
 	001b7098 farsubsp 0x1
 	001b70a0 pop op
 	001b70a8 sourceline 0x2130
 	001b70b0 mov ax,0x8
 	001b70bc mov bx,ax
 	001b70c8 mov mar,0xd4ef20
 	001b70d4 mov ax,mar
 	001b70e0 push op
 	001b70e8 mov op,ax
 	001b70f0 farpush bx
 	001b70f8 setfuncargs 0x1
 	001b7100 mov ax,0x52ef20
 	001b710c farcall ax
 	001b7114 farsubsp 0x1
 	001b711c pop op
 	001b7124 sourceline 0x2131
 	001b712c push op
 	001b7134 mov ax,0x427
 	001b7140 farpush ax
 	001b7148 mov ax,0x397
 	001b7154 farpush ax
 	001b715c mov ax,0x0
 	001b7168 farpush ax
 	001b7170 mov ax,0x3
 	001b717c farpush ax
 	001b7184 mov ax,0x0
 	001b7190 farpush ax
 	001b7198 mov mar,0xd4ef20
 	001b71a4 mov ax,mar
 	001b71b0 mov op,ax
 	001b71b8 setfuncargs 0x5
 	001b71c0 mov ax,0x536f20
 	001b71cc farcall ax
 	001b71d4 farsubsp 0x5
 	001b71dc pop op
 	001b71e4 sourceline 0x2132
 	001b71ec push op
 	001b71f4 mov ax,0x2c4a0f
 	001b7200 farpush ax
 	001b7208 mov mar,0xd4ef20
 	001b7214 mov ax,mar
 	001b7220 mov op,ax
 	001b7228 setfuncargs 0x1
 	001b7230 mov ax,0x6f6f20
 	001b723c farcall ax
 	001b7244 farsubsp 0x1
 	001b724c pop op
 	001b7254 sourceline 0x2133
 	001b725c push op
 	001b7264 mov ax,0x2c4a34
 	001b7270 farpush ax
 	001b7278 mov mar,0x3cef20
 	001b7284 mov ax,mar
 	001b7290 mov op,ax
 	001b7298 setfuncargs 0x1
 	001b72a0 mov ax,0x6f6f20
 	001b72ac farcall ax
 	001b72b4 farsubsp 0x1
 	001b72bc pop op
 	001b72c4 sourceline 0x2134
 	001b72cc push op
 	001b72d4 mov ax,0x2c4a55
 	001b72e0 farpush ax
 	001b72e8 mov mar,0xd4ef20
 	001b72f4 mov ax,mar
 	001b7300 mov op,ax
 	001b7308 setfuncargs 0x1
 	001b7310 mov ax,0x6f6f20
 	001b731c farcall ax
 	001b7324 farsubsp 0x1
 	001b732c pop op
 	001b7334 sourceline 0x2135
 	001b733c push op
 	001b7344 mov ax,0x93
 	001b7350 farpush ax
 	001b7358 mov mar,0xd4ef20
 	001b7364 mov ax,mar
 	001b7370 mov op,ax
 	001b7378 setfuncargs 0x1
 	001b7380 mov ax,0x51ef20
 	001b738c farcall ax
 	001b7394 farsubsp 0x1
 	001b739c pop op
 	001b73a4 sourceline 0x2136
 	001b73ac mov mar,0xd4ef20
 	001b73b8 mov ax,mar
 	001b73c4 push op
 	001b73cc mov op,ax
 	001b73d4 setfuncargs 0x0
 	001b73dc mov ax,0x78ef20
 	001b73e8 farcall ax
 	001b73f0 pop op
 	001b73f8 push ax
 	001b7400 mov ax,0x1
 	001b740c pop bx
 	001b7414 add bx,ax
 	001b7420 mov ax,bx
 	001b742c mov bx,ax
 	001b7438 mov mar,0xd4ef20
 	001b7444 mov ax,mar
 	001b7450 push op
 	001b7458 mov op,ax
 	001b7460 farpush bx
 	001b7468 setfuncargs 0x1
 	001b7470 mov ax,0x526f20
 	001b747c farcall ax
 	001b7484 farsubsp 0x1
 	001b748c pop op
 	001b7494 sourceline 0x2137
 	001b749c mov mar,0xd4ef20
 	001b74a8 mov ax,mar
 	001b74b4 push op
 	001b74bc mov op,ax
 	001b74c4 setfuncargs 0x0
 	001b74cc mov ax,0xb36f20
 	001b74d8 farcall ax
 	001b74e0 pop op
 	001b74e8 push ax
 	001b74f0 mov ax,0x4
 	001b74fc pop bx
 	001b7504 sub bx,ax
 	001b7510 mov ax,bx
 	001b751c mov bx,ax
 	001b7528 mov mar,0xd4ef20
 	001b7534 mov ax,mar
 	001b7540 push op
 	001b7548 mov op,ax
 	001b7550 farpush bx
 	001b7558 setfuncargs 0x1
 	001b7560 mov ax,0x70ef20
 	001b756c farcall ax
 	001b7574 farsubsp 0x1
 	001b757c pop op
 	001b7584 sourceline 0x2138
 	001b758c push op
 	001b7594 mov ax,0x427
 	001b75a0 farpush ax
 	001b75a8 mov ax,0x397
 	001b75b4 farpush ax
 	001b75bc mov ax,0x0
 	001b75c8 farpush ax
 	001b75d0 mov ax,0x3
 	001b75dc farpush ax
 	001b75e4 mov ax,0x0
 	001b75f0 farpush ax
 	001b75f8 mov mar,0xd4ef20
 	001b7604 mov ax,mar
 	001b7610 mov op,ax
 	001b7618 setfuncargs 0x5
 	001b7620 mov ax,0x536f20
 	001b762c farcall ax
 	001b7634 farsubsp 0x5
 	001b763c pop op
 	001b7644 sourceline 0x2139
 	001b764c push op
 	001b7654 mov ax,0x2
 	001b7660 farpush ax
 	001b7668 mov mar,0x3cef20
 	001b7674 mov ax,mar
 	001b7680 mov op,ax
 	001b7688 setfuncargs 0x1
 	001b7690 mov ax,0x51ef20
 	001b769c farcall ax
 	001b76a4 farsubsp 0x1
 	001b76ac pop op
 	001b76b4 sourceline 0x213a
 	001b76bc mov ax,0x7
 	001b76c8 mov bx,ax
 	001b76d4 mov mar,0x3cef20
 	001b76e0 mov ax,mar
 	001b76ec push op
 	001b76f4 mov op,ax
 	001b76fc farpush bx
 	001b7704 setfuncargs 0x1
 	001b770c mov ax,0x766f20
 	001b7718 farcall ax
 	001b7720 farsubsp 0x1
 	001b7728 pop op
 	001b7730 sourceline 0x213b
 	001b7738 mov mar,0x3cef20
 	001b7744 mov ax,mar
 	001b7750 push op
 	001b7758 mov op,ax
 	001b7760 setfuncargs 0x0
 	001b7768 mov ax,0x78ef20
 	001b7774 farcall ax
 	001b777c pop op
 	001b7784 push ax
 	001b778c mov ax,0x6
 	001b7798 pop bx
 	001b77a0 add bx,ax
 	001b77ac mov ax,bx
 	001b77b8 mov bx,ax
 	001b77c4 mov mar,0x3cef20
 	001b77d0 mov ax,mar
 	001b77dc push op
 	001b77e4 mov op,ax
 	001b77ec farpush bx
 	001b77f4 setfuncargs 0x1
 	001b77fc mov ax,0x526f20
 	001b7808 farcall ax
 	001b7810 farsubsp 0x1
 	001b7818 pop op
 	001b7820 sourceline 0x213c
 	001b7828 mov mar,0x3cef20
 	001b7834 mov ax,mar
 	001b7840 push op
 	001b7848 mov op,ax
 	001b7850 setfuncargs 0x0
 	001b7858 mov ax,0xb36f20
 	001b7864 farcall ax
 	001b786c pop op
 	001b7874 push ax
 	001b787c mov ax,0x4
 	001b7888 pop bx
 	001b7890 add bx,ax
 	001b789c mov ax,bx
 	001b78a8 mov bx,ax
 	001b78b4 mov mar,0x3cef20
 	001b78c0 mov ax,mar
 	001b78cc push op
 	001b78d4 mov op,ax
 	001b78dc farpush bx
 	001b78e4 setfuncargs 0x1
 	001b78ec mov ax,0x70ef20
 	001b78f8 farcall ax
 	001b7900 farsubsp 0x1
 	001b7908 pop op
 	001b7910 sourceline 0x213d
 	001b7918 mov ax,0x0
 	001b7924 mov bx,ax
 	001b7930 mov mar,0x3cef20
 	001b793c mov ax,mar
 	001b7948 push op
 	001b7950 mov op,ax
 	001b7958 farpush bx
 	001b7960 setfuncargs 0x1
 	001b7968 mov ax,0x436f20
 	001b7974 farcall ax
 	001b797c farsubsp 0x1
 	001b7984 pop op
 	001b798c sourceline 0x213e
 	001b7994 mov ax,0x28
 	001b79a0 farpush ax
 	001b79a8 setfuncargs 0x1
 	001b79b0 mov ax,0x426f20
 	001b79bc farcall ax
 	001b79c4 farsubsp 0x1
 	001b79cc sourceline 0x213f
 	001b79d4 push op
 	001b79dc mov ax,0x2c4a6c
 	001b79e8 farpush ax
 	001b79f0 mov mar,0xd4ef20
 	001b79fc mov ax,mar
 	001b7a08 mov op,ax
 	001b7a10 setfuncargs 0x1
 	001b7a18 mov ax,0x6f6f20
 	001b7a24 farcall ax
 	001b7a2c farsubsp 0x1
 	001b7a34 pop op
		001b7a3c: FALL_THROUGH

	[001b7a3c]
		001b6968: UNCONDITIONAL_JUMP
		001b69bc: FALL_THROUGH
 	001b7a3c sourceline 0x2141
 	001b7a44 jmp 0x001b7c0c
		001b7c0c: UNCONDITIONAL_JUMP

	[001b7a4c]
		001b6910: CONDITIONAL_JUMP
 	001b7a4c sourceline 0x2144
 	001b7a54 push op
 	001b7a5c mov ax,0x397
 	001b7a68 farpush ax
 	001b7a70 mov ax,0x4c
 	001b7a7c farpush ax
 	001b7a84 mov ax,0x91
 	001b7a90 farpush ax
 	001b7a98 mov mar,0x3cef20
 	001b7aa4 mov ax,mar
 	001b7ab0 mov op,ax
 	001b7ab8 setfuncargs 0x3
 	001b7ac0 mov ax,0x726f20
 	001b7acc farcall ax
 	001b7ad4 farsubsp 0x3
 	001b7adc pop op
 	001b7ae4 sourceline 0x2145
 	001b7aec mov ax,0x1
 	001b7af8 mov bx,ax
 	001b7b04 mov mar,0x3cef20
 	001b7b10 mov ax,mar
 	001b7b1c push op
 	001b7b24 mov op,ax
 	001b7b2c farpush bx
 	001b7b34 setfuncargs 0x1
 	001b7b3c mov ax,0x69ef20
 	001b7b48 farcall ax
 	001b7b50 farsubsp 0x1
 	001b7b58 pop op
 	001b7b60 sourceline 0x2146
 	001b7b68 push op
 	001b7b70 mov ax,0x2c4a82
 	001b7b7c farpush ax
 	001b7b84 mov ax,0x138
 	001b7b90 farpush ax
 	001b7b98 mov ax,0x92
 	001b7ba4 farpush ax
 	001b7bac mov ax,0x0
 	001b7bb8 farpush ax
 	001b7bc0 mov mar,0x3cef20
 	001b7bcc mov ax,mar
 	001b7bd8 mov op,ax
 	001b7be0 setfuncargs 0x4
 	001b7be8 mov ax,0x6aef20
 	001b7bf4 farcall ax
 	001b7bfc farsubsp 0x4
 	001b7c04 pop op
		001b7c0c: FALL_THROUGH

	[001b7c0c]
		001b7a3c: UNCONDITIONAL_JUMP
		001b7a4c: FALL_THROUGH
 	001b7c0c sourceline 0x2148
 	001b7c14 jmp 0x001bd360
		001bd360: UNCONDITIONAL_JUMP

	[001b7c1c]
		001b6864: CONDITIONAL_JUMP
 	001b7c1c sourceline 0x214a
 	001b7c24 mov mar,0x3cef20
 	001b7c30 mov ax,mar
 	001b7c3c push op
 	001b7c44 mov op,ax
 	001b7c4c setfuncargs 0x0
 	001b7c54 mov ax,0x89ef20
 	001b7c60 farcall ax
 	001b7c68 pop op
 	001b7c70 push ax
 	001b7c78 mov mar,0x8cef20
 	001b7c84 mov ax,mar
 	001b7c90 pop bx
 	001b7c98 cmpeq bx,ax
 	001b7ca4 mov ax,bx
 	001b7cb0 jnz 0x001b7d6c
		001b7d6c: CONDITIONAL_JUMP
		001b7cb8: FALL_THROUGH

	[001b7cb8]
		001b7c1c: FALL_THROUGH
 	001b7cb8 push ax
 	001b7cc0 mov mar,0x3cef20
 	001b7ccc mov ax,mar
 	001b7cd8 push op
 	001b7ce0 mov op,ax
 	001b7ce8 setfuncargs 0x0
 	001b7cf0 mov ax,0x89ef20
 	001b7cfc farcall ax
 	001b7d04 pop op
 	001b7d0c push ax
 	001b7d14 mov mar,0x8b6f20
 	001b7d20 mov ax,mar
 	001b7d2c pop bx
 	001b7d34 cmpeq bx,ax
 	001b7d40 mov ax,bx
 	001b7d4c pop bx
 	001b7d54 lor bx,ax
 	001b7d60 mov ax,bx
		001b7d6c: FALL_THROUGH

	[001b7d6c]
		001b7c1c: CONDITIONAL_JUMP
		001b7cb8: FALL_THROUGH
 	001b7d6c jnz 0x001b7e28
		001b7e28: CONDITIONAL_JUMP
		001b7d74: FALL_THROUGH

	[001b7d74]
		001b7d6c: FALL_THROUGH
 	001b7d74 push ax
 	001b7d7c mov mar,0x3cef20
 	001b7d88 mov ax,mar
 	001b7d94 push op
 	001b7d9c mov op,ax
 	001b7da4 setfuncargs 0x0
 	001b7dac mov ax,0x89ef20
 	001b7db8 farcall ax
 	001b7dc0 pop op
 	001b7dc8 push ax
 	001b7dd0 mov mar,0x8d6f20
 	001b7ddc mov ax,mar
 	001b7de8 pop bx
 	001b7df0 cmpeq bx,ax
 	001b7dfc mov ax,bx
 	001b7e08 pop bx
 	001b7e10 lor bx,ax
 	001b7e1c mov ax,bx
		001b7e28: FALL_THROUGH

	[001b7e28]
		001b7d6c: CONDITIONAL_JUMP
		001b7d74: FALL_THROUGH
 	001b7e28 jnz 0x001b7ee4
		001b7ee4: CONDITIONAL_JUMP
		001b7e30: FALL_THROUGH

	[001b7e30]
		001b7e28: FALL_THROUGH
 	001b7e30 push ax
 	001b7e38 mov mar,0x3cef20
 	001b7e44 mov ax,mar
 	001b7e50 push op
 	001b7e58 mov op,ax
 	001b7e60 setfuncargs 0x0
 	001b7e68 mov ax,0x89ef20
 	001b7e74 farcall ax
 	001b7e7c pop op
 	001b7e84 push ax
 	001b7e8c mov mar,0x8bef20
 	001b7e98 mov ax,mar
 	001b7ea4 pop bx
 	001b7eac cmpeq bx,ax
 	001b7eb8 mov ax,bx
 	001b7ec4 pop bx
 	001b7ecc lor bx,ax
 	001b7ed8 mov ax,bx
		001b7ee4: FALL_THROUGH

	[001b7ee4]
		001b7e28: CONDITIONAL_JUMP
		001b7e30: FALL_THROUGH
 	001b7ee4 jnz 0x001b7fa0
		001b7fa0: CONDITIONAL_JUMP
		001b7eec: FALL_THROUGH

	[001b7eec]
		001b7ee4: FALL_THROUGH
 	001b7eec push ax
 	001b7ef4 mov mar,0x3cef20
 	001b7f00 mov ax,mar
 	001b7f0c push op
 	001b7f14 mov op,ax
 	001b7f1c setfuncargs 0x0
 	001b7f24 mov ax,0x89ef20
 	001b7f30 farcall ax
 	001b7f38 pop op
 	001b7f40 push ax
 	001b7f48 mov mar,0x8c6f20
 	001b7f54 mov ax,mar
 	001b7f60 pop bx
 	001b7f68 cmpeq bx,ax
 	001b7f74 mov ax,bx
 	001b7f80 pop bx
 	001b7f88 lor bx,ax
 	001b7f94 mov ax,bx
		001b7fa0: FALL_THROUGH

	[001b7fa0]
		001b7ee4: CONDITIONAL_JUMP
		001b7eec: FALL_THROUGH
 	001b7fa0 jnz 0x001b805c
		001b805c: CONDITIONAL_JUMP
		001b7fa8: FALL_THROUGH

	[001b7fa8]
		001b7fa0: FALL_THROUGH
 	001b7fa8 push ax
 	001b7fb0 mov mar,0x3cef20
 	001b7fbc mov ax,mar
 	001b7fc8 push op
 	001b7fd0 mov op,ax
 	001b7fd8 setfuncargs 0x0
 	001b7fe0 mov ax,0x89ef20
 	001b7fec farcall ax
 	001b7ff4 pop op
 	001b7ffc push ax
 	001b8004 mov mar,0x7def20
 	001b8010 mov ax,mar
 	001b801c pop bx
 	001b8024 cmpeq bx,ax
 	001b8030 mov ax,bx
 	001b803c pop bx
 	001b8044 lor bx,ax
 	001b8050 mov ax,bx
		001b805c: FALL_THROUGH

	[001b805c]
		001b7fa0: CONDITIONAL_JUMP
		001b7fa8: FALL_THROUGH
 	001b805c jnz 0x001b8118
		001b8118: CONDITIONAL_JUMP
		001b8064: FALL_THROUGH

	[001b8064]
		001b805c: FALL_THROUGH
 	001b8064 push ax
 	001b806c mov mar,0x3cef20
 	001b8078 mov ax,mar
 	001b8084 push op
 	001b808c mov op,ax
 	001b8094 setfuncargs 0x0
 	001b809c mov ax,0x89ef20
 	001b80a8 farcall ax
 	001b80b0 pop op
 	001b80b8 push ax
 	001b80c0 mov mar,0x8def20
 	001b80cc mov ax,mar
 	001b80d8 pop bx
 	001b80e0 cmpeq bx,ax
 	001b80ec mov ax,bx
 	001b80f8 pop bx
 	001b8100 lor bx,ax
 	001b810c mov ax,bx
		001b8118: FALL_THROUGH

	[001b8118]
		001b805c: CONDITIONAL_JUMP
		001b8064: FALL_THROUGH
 	001b8118 jnz 0x001b81d4
		001b81d4: CONDITIONAL_JUMP
		001b8120: FALL_THROUGH

	[001b8120]
		001b8118: FALL_THROUGH
 	001b8120 push ax
 	001b8128 mov mar,0x3cef20
 	001b8134 mov ax,mar
 	001b8140 push op
 	001b8148 mov op,ax
 	001b8150 setfuncargs 0x0
 	001b8158 mov ax,0x89ef20
 	001b8164 farcall ax
 	001b816c pop op
 	001b8174 push ax
 	001b817c mov mar,0x8aef20
 	001b8188 mov ax,mar
 	001b8194 pop bx
 	001b819c cmpeq bx,ax
 	001b81a8 mov ax,bx
 	001b81b4 pop bx
 	001b81bc lor bx,ax
 	001b81c8 mov ax,bx
		001b81d4: FALL_THROUGH

	[001b81d4]
		001b8118: CONDITIONAL_JUMP
		001b8120: FALL_THROUGH
 	001b81d4 jnz 0x001b8290
		001b8290: CONDITIONAL_JUMP
		001b81dc: FALL_THROUGH

	[001b81dc]
		001b81d4: FALL_THROUGH
 	001b81dc push ax
 	001b81e4 mov mar,0x3cef20
 	001b81f0 mov ax,mar
 	001b81fc push op
 	001b8204 mov op,ax
 	001b820c setfuncargs 0x0
 	001b8214 mov ax,0x89ef20
 	001b8220 farcall ax
 	001b8228 pop op
 	001b8230 push ax
 	001b8238 mov mar,0x8e6f20
 	001b8244 mov ax,mar
 	001b8250 pop bx
 	001b8258 cmpeq bx,ax
 	001b8264 mov ax,bx
 	001b8270 pop bx
 	001b8278 lor bx,ax
 	001b8284 mov ax,bx
		001b8290: FALL_THROUGH

	[001b8290]
		001b81d4: CONDITIONAL_JUMP
		001b81dc: FALL_THROUGH
 	001b8290 jnz 0x001b834c
		001b834c: CONDITIONAL_JUMP
		001b8298: FALL_THROUGH

	[001b8298]
		001b8290: FALL_THROUGH
 	001b8298 push ax
 	001b82a0 mov mar,0x3cef20
 	001b82ac mov ax,mar
 	001b82b8 push op
 	001b82c0 mov op,ax
 	001b82c8 setfuncargs 0x0
 	001b82d0 mov ax,0x89ef20
 	001b82dc farcall ax
 	001b82e4 pop op
 	001b82ec push ax
 	001b82f4 mov mar,0x8eef20
 	001b8300 mov ax,mar
 	001b830c pop bx
 	001b8314 cmpeq bx,ax
 	001b8320 mov ax,bx
 	001b832c pop bx
 	001b8334 lor bx,ax
 	001b8340 mov ax,bx
		001b834c: FALL_THROUGH

	[001b834c]
		001b8290: CONDITIONAL_JUMP
		001b8298: FALL_THROUGH
 	001b834c jnz 0x001b8408
		001b8408: CONDITIONAL_JUMP
		001b8354: FALL_THROUGH

	[001b8354]
		001b834c: FALL_THROUGH
 	001b8354 push ax
 	001b835c mov mar,0x3cef20
 	001b8368 mov ax,mar
 	001b8374 push op
 	001b837c mov op,ax
 	001b8384 setfuncargs 0x0
 	001b838c mov ax,0x89ef20
 	001b8398 farcall ax
 	001b83a0 pop op
 	001b83a8 push ax
 	001b83b0 mov mar,0x8fef20
 	001b83bc mov ax,mar
 	001b83c8 pop bx
 	001b83d0 cmpeq bx,ax
 	001b83dc mov ax,bx
 	001b83e8 pop bx
 	001b83f0 lor bx,ax
 	001b83fc mov ax,bx
		001b8408: FALL_THROUGH

	[001b8408]
		001b834c: CONDITIONAL_JUMP
		001b8354: FALL_THROUGH
 	001b8408 jnz 0x001b84c4
		001b84c4: CONDITIONAL_JUMP
		001b8410: FALL_THROUGH

	[001b8410]
		001b8408: FALL_THROUGH
 	001b8410 push ax
 	001b8418 mov mar,0x3cef20
 	001b8424 mov ax,mar
 	001b8430 push op
 	001b8438 mov op,ax
 	001b8440 setfuncargs 0x0
 	001b8448 mov ax,0x89ef20
 	001b8454 farcall ax
 	001b845c pop op
 	001b8464 push ax
 	001b846c mov mar,0x976f20
 	001b8478 mov ax,mar
 	001b8484 pop bx
 	001b848c cmpeq bx,ax
 	001b8498 mov ax,bx
 	001b84a4 pop bx
 	001b84ac lor bx,ax
 	001b84b8 mov ax,bx
		001b84c4: FALL_THROUGH

	[001b84c4]
		001b8408: CONDITIONAL_JUMP
		001b8410: FALL_THROUGH
 	001b84c4 jnz 0x001b8580
		001b8580: CONDITIONAL_JUMP
		001b84cc: FALL_THROUGH

	[001b84cc]
		001b84c4: FALL_THROUGH
 	001b84cc push ax
 	001b84d4 mov mar,0x3cef20
 	001b84e0 mov ax,mar
 	001b84ec push op
 	001b84f4 mov op,ax
 	001b84fc setfuncargs 0x0
 	001b8504 mov ax,0x89ef20
 	001b8510 farcall ax
 	001b8518 pop op
 	001b8520 push ax
 	001b8528 mov mar,0x846f20
 	001b8534 mov ax,mar
 	001b8540 pop bx
 	001b8548 cmpeq bx,ax
 	001b8554 mov ax,bx
 	001b8560 pop bx
 	001b8568 lor bx,ax
 	001b8574 mov ax,bx
		001b8580: FALL_THROUGH

	[001b8580]
		001b84c4: CONDITIONAL_JUMP
		001b84cc: FALL_THROUGH
 	001b8580 jnz 0x001b863c
		001b863c: CONDITIONAL_JUMP
		001b8588: FALL_THROUGH

	[001b8588]
		001b8580: FALL_THROUGH
 	001b8588 push ax
 	001b8590 mov mar,0x3cef20
 	001b859c mov ax,mar
 	001b85a8 push op
 	001b85b0 mov op,ax
 	001b85b8 setfuncargs 0x0
 	001b85c0 mov ax,0x89ef20
 	001b85cc farcall ax
 	001b85d4 pop op
 	001b85dc push ax
 	001b85e4 mov mar,0x916f20
 	001b85f0 mov ax,mar
 	001b85fc pop bx
 	001b8604 cmpeq bx,ax
 	001b8610 mov ax,bx
 	001b861c pop bx
 	001b8624 lor bx,ax
 	001b8630 mov ax,bx
		001b863c: FALL_THROUGH

	[001b863c]
		001b8580: CONDITIONAL_JUMP
		001b8588: FALL_THROUGH
 	001b863c jnz 0x001b86f8
		001b86f8: CONDITIONAL_JUMP
		001b8644: FALL_THROUGH

	[001b8644]
		001b863c: FALL_THROUGH
 	001b8644 push ax
 	001b864c mov mar,0x3cef20
 	001b8658 mov ax,mar
 	001b8664 push op
 	001b866c mov op,ax
 	001b8674 setfuncargs 0x0
 	001b867c mov ax,0x89ef20
 	001b8688 farcall ax
 	001b8690 pop op
 	001b8698 push ax
 	001b86a0 mov mar,0x926f20
 	001b86ac mov ax,mar
 	001b86b8 pop bx
 	001b86c0 cmpeq bx,ax
 	001b86cc mov ax,bx
 	001b86d8 pop bx
 	001b86e0 lor bx,ax
 	001b86ec mov ax,bx
		001b86f8: FALL_THROUGH

	[001b86f8]
		001b863c: CONDITIONAL_JUMP
		001b8644: FALL_THROUGH
 	001b86f8 jnz 0x001b87b4
		001b87b4: CONDITIONAL_JUMP
		001b8700: FALL_THROUGH

	[001b8700]
		001b86f8: FALL_THROUGH
 	001b8700 push ax
 	001b8708 mov mar,0x3cef20
 	001b8714 mov ax,mar
 	001b8720 push op
 	001b8728 mov op,ax
 	001b8730 setfuncargs 0x0
 	001b8738 mov ax,0x89ef20
 	001b8744 farcall ax
 	001b874c pop op
 	001b8754 push ax
 	001b875c mov mar,0x92ef20
 	001b8768 mov ax,mar
 	001b8774 pop bx
 	001b877c cmpeq bx,ax
 	001b8788 mov ax,bx
 	001b8794 pop bx
 	001b879c lor bx,ax
 	001b87a8 mov ax,bx
		001b87b4: FALL_THROUGH

	[001b87b4]
		001b86f8: CONDITIONAL_JUMP
		001b8700: FALL_THROUGH
 	001b87b4 jnz 0x001b8870
		001b8870: CONDITIONAL_JUMP
		001b87bc: FALL_THROUGH

	[001b87bc]
		001b87b4: FALL_THROUGH
 	001b87bc push ax
 	001b87c4 mov mar,0x3cef20
 	001b87d0 mov ax,mar
 	001b87dc push op
 	001b87e4 mov op,ax
 	001b87ec setfuncargs 0x0
 	001b87f4 mov ax,0x89ef20
 	001b8800 farcall ax
 	001b8808 pop op
 	001b8810 push ax
 	001b8818 mov mar,0x93ef20
 	001b8824 mov ax,mar
 	001b8830 pop bx
 	001b8838 cmpeq bx,ax
 	001b8844 mov ax,bx
 	001b8850 pop bx
 	001b8858 lor bx,ax
 	001b8864 mov ax,bx
		001b8870: FALL_THROUGH

	[001b8870]
		001b87b4: CONDITIONAL_JUMP
		001b87bc: FALL_THROUGH
 	001b8870 jnz 0x001b892c
		001b892c: CONDITIONAL_JUMP
		001b8878: FALL_THROUGH

	[001b8878]
		001b8870: FALL_THROUGH
 	001b8878 push ax
 	001b8880 mov mar,0x3cef20
 	001b888c mov ax,mar
 	001b8898 push op
 	001b88a0 mov op,ax
 	001b88a8 setfuncargs 0x0
 	001b88b0 mov ax,0x89ef20
 	001b88bc farcall ax
 	001b88c4 pop op
 	001b88cc push ax
 	001b88d4 mov mar,0x94ef20
 	001b88e0 mov ax,mar
 	001b88ec pop bx
 	001b88f4 cmpeq bx,ax
 	001b8900 mov ax,bx
 	001b890c pop bx
 	001b8914 lor bx,ax
 	001b8920 mov ax,bx
		001b892c: FALL_THROUGH

	[001b892c]
		001b8870: CONDITIONAL_JUMP
		001b8878: FALL_THROUGH
 	001b892c jz 0x001b9ad0
		001b9ad0: CONDITIONAL_JUMP
		001b8934: FALL_THROUGH

	[001b8934]
		001b892c: FALL_THROUGH
 	001b8934 sourceline 0x2151
 	001b893c setfuncargs 0x0
 	001b8944 mov ax,0x6def20
 	001b8950 farcall ax
 	001b8958 lnot ax
 	001b8960 jz 0x001b89bc
		001b89bc: CONDITIONAL_JUMP
		001b8968: FALL_THROUGH

	[001b8968]
		001b8934: FALL_THROUGH
 	001b8968 mov ax,0x78
 	001b8974 farpush ax
 	001b897c mov ax,0xba
 	001b8988 farpush ax
 	001b8990 setfuncargs 0x2
 	001b8998 mov ax,0x6e6f20
 	001b89a4 farcall ax
 	001b89ac farsubsp 0x2
 	001b89b4 jmp 0x001b9ac0
		001b9ac0: UNCONDITIONAL_JUMP

	[001b89bc]
		001b8934: CONDITIONAL_JUMP
 	001b89bc sourceline 0x2154
 	001b89c4 push op
 	001b89cc mov ax,0x397
 	001b89d8 farpush ax
 	001b89e0 mov ax,0x7
 	001b89ec farpush ax
 	001b89f4 mov mar,0x3cef20
 	001b8a00 mov ax,mar
 	001b8a0c mov op,ax
 	001b8a14 setfuncargs 0x2
 	001b8a1c mov ax,0x6eef20
 	001b8a28 farcall ax
 	001b8a30 farsubsp 0x2
 	001b8a38 pop op
 	001b8a40 sourceline 0x2155
 	001b8a48 mov ax,0x3
 	001b8a54 mov bx,ax
 	001b8a60 mov mar,0x3cef20
 	001b8a6c mov ax,mar
 	001b8a78 push op
 	001b8a80 mov op,ax
 	001b8a88 farpush bx
 	001b8a90 setfuncargs 0x1
 	001b8a98 mov ax,0x69ef20
 	001b8aa4 farcall ax
 	001b8aac farsubsp 0x1
 	001b8ab4 pop op
 	001b8abc sourceline 0x2156
 	001b8ac4 mov ax,0x0
 	001b8ad0 mov bx,ax
 	001b8adc mov mar,0x3cef20
 	001b8ae8 mov ax,mar
 	001b8af4 push op
 	001b8afc mov op,ax
 	001b8b04 farpush bx
 	001b8b0c setfuncargs 0x1
 	001b8b14 mov ax,0x436f20
 	001b8b20 farcall ax
 	001b8b28 farsubsp 0x1
 	001b8b30 pop op
 	001b8b38 sourceline 0x2157
 	001b8b40 push op
 	001b8b48 mov ax,0xd
 	001b8b54 farpush ax
 	001b8b5c mov mar,0x3cef20
 	001b8b68 mov ax,mar
 	001b8b74 mov op,ax
 	001b8b7c setfuncargs 0x1
 	001b8b84 mov ax,0x51ef20
 	001b8b90 farcall ax
 	001b8b98 farsubsp 0x1
 	001b8ba0 pop op
 	001b8ba8 sourceline 0x2158
 	001b8bb0 mov mar,0x3cef20
 	001b8bbc mov ax,mar
 	001b8bc8 push op
 	001b8bd0 mov op,ax
 	001b8bd8 setfuncargs 0x0
 	001b8be0 mov ax,0x78ef20
 	001b8bec farcall ax
 	001b8bf4 pop op
 	001b8bfc push ax
 	001b8c04 mov ax,0x6
 	001b8c10 pop bx
 	001b8c18 sub bx,ax
 	001b8c24 mov ax,bx
 	001b8c30 mov bx,ax
 	001b8c3c mov mar,0x3cef20
 	001b8c48 mov ax,mar
 	001b8c54 push op
 	001b8c5c mov op,ax
 	001b8c64 farpush bx
 	001b8c6c setfuncargs 0x1
 	001b8c74 mov ax,0x526f20
 	001b8c80 farcall ax
 	001b8c88 farsubsp 0x1
 	001b8c90 pop op
 	001b8c98 sourceline 0x2159
 	001b8ca0 mov mar,0x3cef20
 	001b8cac mov ax,mar
 	001b8cb8 push op
 	001b8cc0 mov op,ax
 	001b8cc8 setfuncargs 0x0
 	001b8cd0 mov ax,0xb36f20
 	001b8cdc farcall ax
 	001b8ce4 pop op
 	001b8cec push ax
 	001b8cf4 mov ax,0x4
 	001b8d00 pop bx
 	001b8d08 sub bx,ax
 	001b8d14 mov ax,bx
 	001b8d20 mov bx,ax
 	001b8d2c mov mar,0x3cef20
 	001b8d38 mov ax,mar
 	001b8d44 push op
 	001b8d4c mov op,ax
 	001b8d54 farpush bx
 	001b8d5c setfuncargs 0x1
 	001b8d64 mov ax,0x70ef20
 	001b8d70 farcall ax
 	001b8d78 farsubsp 0x1
 	001b8d80 pop op
 	001b8d88 sourceline 0x215a
 	001b8d90 mov mar,0xd4ef20
 	001b8d9c mov ax,mar
 	001b8da8 push op
 	001b8db0 mov op,ax
 	001b8db8 setfuncargs 0x0
 	001b8dc0 mov ax,0x516f20
 	001b8dcc farcall ax
 	001b8dd4 pop op
 	001b8ddc push ax
 	001b8de4 mov ax,0x95
 	001b8df0 pop bx
 	001b8df8 cmpneq bx,ax
 	001b8e04 mov ax,bx
 	001b8e10 jz 0x001b8ed8
		001b8ed8: CONDITIONAL_JUMP
		001b8e18: FALL_THROUGH

	[001b8e18]
		001b89bc: FALL_THROUGH
 	001b8e18 push op
 	001b8e20 mov ax,0x426
 	001b8e2c farpush ax
 	001b8e34 mov ax,0x397
 	001b8e40 farpush ax
 	001b8e48 mov ax,0x0
 	001b8e54 farpush ax
 	001b8e5c mov ax,0x3
 	001b8e68 farpush ax
 	001b8e70 mov ax,0x0
 	001b8e7c farpush ax
 	001b8e84 mov mar,0xd4ef20
 	001b8e90 mov ax,mar
 	001b8e9c mov op,ax
 	001b8ea4 setfuncargs 0x5
 	001b8eac mov ax,0x536f20
 	001b8eb8 farcall ax
 	001b8ec0 farsubsp 0x5
 	001b8ec8 pop op
 	001b8ed0 jmp 0x001b8f98
		001b8f98: UNCONDITIONAL_JUMP

	[001b8ed8]
		001b89bc: CONDITIONAL_JUMP
 	001b8ed8 sourceline 0x215b
 	001b8ee0 push op
 	001b8ee8 mov ax,0x426
 	001b8ef4 farpush ax
 	001b8efc mov ax,0x397
 	001b8f08 farpush ax
 	001b8f10 mov ax,0x0
 	001b8f1c farpush ax
 	001b8f24 mov ax,0x3
 	001b8f30 farpush ax
 	001b8f38 mov ax,0x1
 	001b8f44 farpush ax
 	001b8f4c mov mar,0xd4ef20
 	001b8f58 mov ax,mar
 	001b8f64 mov op,ax
 	001b8f6c setfuncargs 0x5
 	001b8f74 mov ax,0x536f20
 	001b8f80 farcall ax
 	001b8f88 farsubsp 0x5
 	001b8f90 pop op
		001b8f98: FALL_THROUGH

	[001b8f98]
		001b8e18: UNCONDITIONAL_JUMP
		001b8ed8: FALL_THROUGH
 	001b8f98 sourceline 0x215c
 	001b8fa0 mov mar,0xd56f20
 	001b8fac memread4 ax
 	001b8fb4 jz 0x001b90c4
		001b90c4: CONDITIONAL_JUMP
		001b8fbc: FALL_THROUGH

	[001b8fbc]
		001b8f98: FALL_THROUGH
 	001b8fbc sourceline 0x215e
 	001b8fc4 push op
 	001b8fcc mov ax,0x2c4e58
 	001b8fd8 farpush ax
 	001b8fe0 mov mar,0x3cef20
 	001b8fec mov ax,mar
 	001b8ff8 mov op,ax
 	001b9000 setfuncargs 0x1
 	001b9008 mov ax,0x6f6f20
 	001b9014 farcall ax
 	001b901c farsubsp 0x1
 	001b9024 pop op
 	001b902c sourceline 0x215f
 	001b9034 push op
 	001b903c mov ax,0x2c4e63
 	001b9048 farpush ax
 	001b9050 mov mar,0xd4ef20
 	001b905c mov ax,mar
 	001b9068 mov op,ax
 	001b9070 setfuncargs 0x1
 	001b9078 mov ax,0x6f6f20
 	001b9084 farcall ax
 	001b908c farsubsp 0x1
 	001b9094 pop op
 	001b909c sourceline 0x2160
 	001b90a4 mov ax,0x0
 	001b90b0 mov mar,0xd56f20
 	001b90bc memwrite4 ax
		001b90c4: FALL_THROUGH

	[001b90c4]
		001b8f98: CONDITIONAL_JUMP
		001b8fbc: FALL_THROUGH
 	001b90c4 sourceline 0x2162
 	001b90cc push op
 	001b90d4 mov ax,0x426
 	001b90e0 farpush ax
 	001b90e8 mov ax,0x397
 	001b90f4 farpush ax
 	001b90fc mov ax,0x0
 	001b9108 farpush ax
 	001b9110 mov ax,0x3
 	001b911c farpush ax
 	001b9124 mov ax,0x0
 	001b9130 farpush ax
 	001b9138 mov mar,0x3cef20
 	001b9144 mov ax,mar
 	001b9150 mov op,ax
 	001b9158 setfuncargs 0x5
 	001b9160 mov ax,0x536f20
 	001b916c farcall ax
 	001b9174 farsubsp 0x5
 	001b917c pop op
 	001b9184 sourceline 0x2165
 	001b918c mov ax,0x3
 	001b9198 farpush ax
 	001b91a0 setfuncargs 0x1
 	001b91a8 mov ax,0x4a6f20
 	001b91b4 farcall ax
 	001b91bc farsubsp 0x1
 	001b91c4 mov mar,sp
 	001b91d0 memwrite4 ax
 	001b91d8 add sp,0x4
 	001b91e4 sourceline 0x2166
 	001b91ec stackptr 0x4
 	001b91f4 memread4 ax
 	001b91fc push ax
 	001b9204 mov ax,0x0
 	001b9210 pop bx
 	001b9218 cmpeq bx,ax
 	001b9224 mov ax,bx
 	001b9230 jz 0x001b92a8
		001b92a8: CONDITIONAL_JUMP
		001b9238: FALL_THROUGH

	[001b9238]
		001b90c4: FALL_THROUGH
 	001b9238 push op
 	001b9240 mov ax,0x2c8717
 	001b924c farpush ax
 	001b9254 mov mar,0x3cef20
 	001b9260 mov ax,mar
 	001b926c mov op,ax
 	001b9274 setfuncargs 0x1
 	001b927c mov ax,0x6f6f20
 	001b9288 farcall ax
 	001b9290 farsubsp 0x1
 	001b9298 pop op
 	001b92a0 jmp 0x001b94a0
		001b94a0: UNCONDITIONAL_JUMP

	[001b92a8]
		001b90c4: CONDITIONAL_JUMP
 	001b92a8 sourceline 0x2167
 	001b92b0 stackptr 0x4
 	001b92b8 memread4 ax
 	001b92c0 push ax
 	001b92c8 mov ax,0x1
 	001b92d4 pop bx
 	001b92dc cmpeq bx,ax
 	001b92e8 mov ax,bx
 	001b92f4 jz 0x001b936c
		001b936c: CONDITIONAL_JUMP
		001b92fc: FALL_THROUGH

	[001b92fc]
		001b92a8: FALL_THROUGH
 	001b92fc push op
 	001b9304 mov ax,0x2c8740
 	001b9310 farpush ax
 	001b9318 mov mar,0x3cef20
 	001b9324 mov ax,mar
 	001b9330 mov op,ax
 	001b9338 setfuncargs 0x1
 	001b9340 mov ax,0x6f6f20
 	001b934c farcall ax
 	001b9354 farsubsp 0x1
 	001b935c pop op
 	001b9364 jmp 0x001b94a0
		001b94a0: UNCONDITIONAL_JUMP

	[001b936c]
		001b92a8: CONDITIONAL_JUMP
 	001b936c sourceline 0x2168
 	001b9374 stackptr 0x4
 	001b937c memread4 ax
 	001b9384 push ax
 	001b938c mov ax,0x2
 	001b9398 pop bx
 	001b93a0 cmpeq bx,ax
 	001b93ac mov ax,bx
 	001b93b8 jz 0x001b9430
		001b9430: CONDITIONAL_JUMP
		001b93c0: FALL_THROUGH

	[001b93c0]
		001b936c: FALL_THROUGH
 	001b93c0 push op
 	001b93c8 mov ax,0x2c8769
 	001b93d4 farpush ax
 	001b93dc mov mar,0x3cef20
 	001b93e8 mov ax,mar
 	001b93f4 mov op,ax
 	001b93fc setfuncargs 0x1
 	001b9404 mov ax,0x6f6f20
 	001b9410 farcall ax
 	001b9418 farsubsp 0x1
 	001b9420 pop op
 	001b9428 jmp 0x001b94a0
		001b94a0: UNCONDITIONAL_JUMP

	[001b9430]
		001b936c: CONDITIONAL_JUMP
 	001b9430 sourceline 0x2169
 	001b9438 push op
 	001b9440 mov ax,0x2c8792
 	001b944c farpush ax
 	001b9454 mov mar,0x3cef20
 	001b9460 mov ax,mar
 	001b946c mov op,ax
 	001b9474 setfuncargs 0x1
 	001b947c mov ax,0x6f6f20
 	001b9488 farcall ax
 	001b9490 farsubsp 0x1
 	001b9498 pop op
		001b94a0: FALL_THROUGH

	[001b94a0]
		001b9238: UNCONDITIONAL_JUMP
		001b92fc: UNCONDITIONAL_JUMP
		001b93c0: UNCONDITIONAL_JUMP
		001b9430: FALL_THROUGH
 	001b94a0 sourceline 0x216c
 	001b94a8 push op
 	001b94b0 mov ax,0x2c4b83
 	001b94bc farpush ax
 	001b94c4 mov mar,0xd4ef20
 	001b94d0 mov ax,mar
 	001b94dc mov op,ax
 	001b94e4 setfuncargs 0x1
 	001b94ec mov ax,0x6f6f20
 	001b94f8 farcall ax
 	001b9500 farsubsp 0x1
 	001b9508 pop op
 	001b9510 sourceline 0x216d
 	001b9518 mov mar,0xd4ef20
 	001b9524 mov ax,mar
 	001b9530 push op
 	001b9538 mov op,ax
 	001b9540 setfuncargs 0x0
 	001b9548 mov ax,0x516f20
 	001b9554 farcall ax
 	001b955c pop op
 	001b9564 push ax
 	001b956c mov ax,0x95
 	001b9578 pop bx
 	001b9580 cmpneq bx,ax
 	001b958c mov ax,bx
 	001b9598 jz 0x001b9660
		001b9660: CONDITIONAL_JUMP
		001b95a0: FALL_THROUGH

	[001b95a0]
		001b94a0: FALL_THROUGH
 	001b95a0 push op
 	001b95a8 mov ax,0x427
 	001b95b4 farpush ax
 	001b95bc mov ax,0x398
 	001b95c8 farpush ax
 	001b95d0 mov ax,0x0
 	001b95dc farpush ax
 	001b95e4 mov ax,0x3
 	001b95f0 farpush ax
 	001b95f8 mov ax,0x0
 	001b9604 farpush ax
 	001b960c mov mar,0xd4ef20
 	001b9618 mov ax,mar
 	001b9624 mov op,ax
 	001b962c setfuncargs 0x5
 	001b9634 mov ax,0x536f20
 	001b9640 farcall ax
 	001b9648 farsubsp 0x5
 	001b9650 pop op
 	001b9658 jmp 0x001b9720
		001b9720: UNCONDITIONAL_JUMP

	[001b9660]
		001b94a0: CONDITIONAL_JUMP
 	001b9660 sourceline 0x216e
 	001b9668 push op
 	001b9670 mov ax,0x427
 	001b967c farpush ax
 	001b9684 mov ax,0x398
 	001b9690 farpush ax
 	001b9698 mov ax,0x0
 	001b96a4 farpush ax
 	001b96ac mov ax,0x3
 	001b96b8 farpush ax
 	001b96c0 mov ax,0x1
 	001b96cc farpush ax
 	001b96d4 mov mar,0xd4ef20
 	001b96e0 mov ax,mar
 	001b96ec mov op,ax
 	001b96f4 setfuncargs 0x5
 	001b96fc mov ax,0x536f20
 	001b9708 farcall ax
 	001b9710 farsubsp 0x5
 	001b9718 pop op
		001b9720: FALL_THROUGH

	[001b9720]
		001b95a0: UNCONDITIONAL_JUMP
		001b9660: FALL_THROUGH
 	001b9720 sourceline 0x216f
 	001b9728 push op
 	001b9730 mov ax,0x427
 	001b973c farpush ax
 	001b9744 mov ax,0x397
 	001b9750 farpush ax
 	001b9758 mov ax,0x0
 	001b9764 farpush ax
 	001b976c mov ax,0x3
 	001b9778 farpush ax
 	001b9780 mov ax,0x0
 	001b978c farpush ax
 	001b9794 mov mar,0x3cef20
 	001b97a0 mov ax,mar
 	001b97ac mov op,ax
 	001b97b4 setfuncargs 0x5
 	001b97bc mov ax,0x536f20
 	001b97c8 farcall ax
 	001b97d0 farsubsp 0x5
 	001b97d8 pop op
 	001b97e0 sourceline 0x2170
 	001b97e8 push op
 	001b97f0 mov ax,0x2
 	001b97fc farpush ax
 	001b9804 mov mar,0x3cef20
 	001b9810 mov ax,mar
 	001b981c mov op,ax
 	001b9824 setfuncargs 0x1
 	001b982c mov ax,0x51ef20
 	001b9838 farcall ax
 	001b9840 farsubsp 0x1
 	001b9848 pop op
 	001b9850 sourceline 0x2171
 	001b9858 mov ax,0x7
 	001b9864 mov bx,ax
 	001b9870 mov mar,0x3cef20
 	001b987c mov ax,mar
 	001b9888 push op
 	001b9890 mov op,ax
 	001b9898 farpush bx
 	001b98a0 setfuncargs 0x1
 	001b98a8 mov ax,0x766f20
 	001b98b4 farcall ax
 	001b98bc farsubsp 0x1
 	001b98c4 pop op
 	001b98cc sourceline 0x2172
 	001b98d4 mov mar,0x3cef20
 	001b98e0 mov ax,mar
 	001b98ec push op
 	001b98f4 mov op,ax
 	001b98fc setfuncargs 0x0
 	001b9904 mov ax,0x78ef20
 	001b9910 farcall ax
 	001b9918 pop op
 	001b9920 push ax
 	001b9928 mov ax,0x6
 	001b9934 pop bx
 	001b993c add bx,ax
 	001b9948 mov ax,bx
 	001b9954 mov bx,ax
 	001b9960 mov mar,0x3cef20
 	001b996c mov ax,mar
 	001b9978 push op
 	001b9980 mov op,ax
 	001b9988 farpush bx
 	001b9990 setfuncargs 0x1
 	001b9998 mov ax,0x526f20
 	001b99a4 farcall ax
 	001b99ac farsubsp 0x1
 	001b99b4 pop op
 	001b99bc sourceline 0x2173
 	001b99c4 mov mar,0x3cef20
 	001b99d0 mov ax,mar
 	001b99dc push op
 	001b99e4 mov op,ax
 	001b99ec setfuncargs 0x0
 	001b99f4 mov ax,0xb36f20
 	001b9a00 farcall ax
 	001b9a08 pop op
 	001b9a10 push ax
 	001b9a18 mov ax,0x4
 	001b9a24 pop bx
 	001b9a2c add bx,ax
 	001b9a38 mov ax,bx
 	001b9a44 mov bx,ax
 	001b9a50 mov mar,0x3cef20
 	001b9a5c mov ax,mar
 	001b9a68 push op
 	001b9a70 mov op,ax
 	001b9a78 farpush bx
 	001b9a80 setfuncargs 0x1
 	001b9a88 mov ax,0x70ef20
 	001b9a94 farcall ax
 	001b9a9c farsubsp 0x1
 	001b9aa4 pop op
 	001b9aac sourceline 0x2174
 	001b9ab4 sub sp,0x4
		001b9ac0: FALL_THROUGH

	[001b9ac0]
		001b8968: UNCONDITIONAL_JUMP
		001b9720: FALL_THROUGH
 	001b9ac0 sourceline 0x2175
 	001b9ac8 jmp 0x001bd360
		001bd360: UNCONDITIONAL_JUMP

	[001b9ad0]
		001b892c: CONDITIONAL_JUMP
 	001b9ad0 sourceline 0x2177
 	001b9ad8 mov mar,0x3cef20
 	001b9ae4 mov ax,mar
 	001b9af0 push op
 	001b9af8 mov op,ax
 	001b9b00 setfuncargs 0x0
 	001b9b08 mov ax,0x89ef20
 	001b9b14 farcall ax
 	001b9b1c pop op
 	001b9b24 push ax
 	001b9b2c mov mar,0x8f6f20
 	001b9b38 mov ax,mar
 	001b9b44 pop bx
 	001b9b4c cmpeq bx,ax
 	001b9b58 mov ax,bx
 	001b9b64 jz 0x001baec8
		001baec8: CONDITIONAL_JUMP
		001b9b6c: FALL_THROUGH

	[001b9b6c]
		001b9ad0: FALL_THROUGH
 	001b9b6c sourceline 0x2179
 	001b9b74 setfuncargs 0x0
 	001b9b7c mov ax,0x6def20
 	001b9b88 farcall ax
 	001b9b90 lnot ax
 	001b9b98 jz 0x001b9bf4
		001b9bf4: CONDITIONAL_JUMP
		001b9ba0: FALL_THROUGH

	[001b9ba0]
		001b9b6c: FALL_THROUGH
 	001b9ba0 mov ax,0x78
 	001b9bac farpush ax
 	001b9bb4 mov ax,0xba
 	001b9bc0 farpush ax
 	001b9bc8 setfuncargs 0x2
 	001b9bd0 mov ax,0x6e6f20
 	001b9bdc farcall ax
 	001b9be4 farsubsp 0x2
 	001b9bec jmp 0x001baeb8
		001baeb8: UNCONDITIONAL_JUMP

	[001b9bf4]
		001b9b6c: CONDITIONAL_JUMP
 	001b9bf4 sourceline 0x217c
 	001b9bfc push op
 	001b9c04 mov ax,0x397
 	001b9c10 farpush ax
 	001b9c18 mov ax,0x7
 	001b9c24 farpush ax
 	001b9c2c mov mar,0x3cef20
 	001b9c38 mov ax,mar
 	001b9c44 mov op,ax
 	001b9c4c setfuncargs 0x2
 	001b9c54 mov ax,0x6eef20
 	001b9c60 farcall ax
 	001b9c68 farsubsp 0x2
 	001b9c70 pop op
 	001b9c78 sourceline 0x217d
 	001b9c80 mov ax,0x3
 	001b9c8c mov bx,ax
 	001b9c98 mov mar,0x3cef20
 	001b9ca4 mov ax,mar
 	001b9cb0 push op
 	001b9cb8 mov op,ax
 	001b9cc0 farpush bx
 	001b9cc8 setfuncargs 0x1
 	001b9cd0 mov ax,0x69ef20
 	001b9cdc farcall ax
 	001b9ce4 farsubsp 0x1
 	001b9cec pop op
 	001b9cf4 sourceline 0x217e
 	001b9cfc mov ax,0x0
 	001b9d08 mov bx,ax
 	001b9d14 mov mar,0x3cef20
 	001b9d20 mov ax,mar
 	001b9d2c push op
 	001b9d34 mov op,ax
 	001b9d3c farpush bx
 	001b9d44 setfuncargs 0x1
 	001b9d4c mov ax,0x436f20
 	001b9d58 farcall ax
 	001b9d60 farsubsp 0x1
 	001b9d68 pop op
 	001b9d70 sourceline 0x217f
 	001b9d78 push op
 	001b9d80 mov ax,0xd
 	001b9d8c farpush ax
 	001b9d94 mov mar,0x3cef20
 	001b9da0 mov ax,mar
 	001b9dac mov op,ax
 	001b9db4 setfuncargs 0x1
 	001b9dbc mov ax,0x51ef20
 	001b9dc8 farcall ax
 	001b9dd0 farsubsp 0x1
 	001b9dd8 pop op
 	001b9de0 sourceline 0x2180
 	001b9de8 mov mar,0x3cef20
 	001b9df4 mov ax,mar
 	001b9e00 push op
 	001b9e08 mov op,ax
 	001b9e10 setfuncargs 0x0
 	001b9e18 mov ax,0x78ef20
 	001b9e24 farcall ax
 	001b9e2c pop op
 	001b9e34 push ax
 	001b9e3c mov ax,0x6
 	001b9e48 pop bx
 	001b9e50 sub bx,ax
 	001b9e5c mov ax,bx
 	001b9e68 mov bx,ax
 	001b9e74 mov mar,0x3cef20
 	001b9e80 mov ax,mar
 	001b9e8c push op
 	001b9e94 mov op,ax
 	001b9e9c farpush bx
 	001b9ea4 setfuncargs 0x1
 	001b9eac mov ax,0x526f20
 	001b9eb8 farcall ax
 	001b9ec0 farsubsp 0x1
 	001b9ec8 pop op
 	001b9ed0 sourceline 0x2181
 	001b9ed8 mov mar,0x3cef20
 	001b9ee4 mov ax,mar
 	001b9ef0 push op
 	001b9ef8 mov op,ax
 	001b9f00 setfuncargs 0x0
 	001b9f08 mov ax,0xb36f20
 	001b9f14 farcall ax
 	001b9f1c pop op
 	001b9f24 push ax
 	001b9f2c mov ax,0x4
 	001b9f38 pop bx
 	001b9f40 sub bx,ax
 	001b9f4c mov ax,bx
 	001b9f58 mov bx,ax
 	001b9f64 mov mar,0x3cef20
 	001b9f70 mov ax,mar
 	001b9f7c push op
 	001b9f84 mov op,ax
 	001b9f8c farpush bx
 	001b9f94 setfuncargs 0x1
 	001b9f9c mov ax,0x70ef20
 	001b9fa8 farcall ax
 	001b9fb0 farsubsp 0x1
 	001b9fb8 pop op
 	001b9fc0 sourceline 0x2182
 	001b9fc8 mov mar,0xd4ef20
 	001b9fd4 mov ax,mar
 	001b9fe0 push op
 	001b9fe8 mov op,ax
 	001b9ff0 setfuncargs 0x0
 	001b9ff8 mov ax,0x516f20
 	001ba004 farcall ax
 	001ba00c pop op
 	001ba014 push ax
 	001ba01c mov ax,0x95
 	001ba028 pop bx
 	001ba030 cmpneq bx,ax
 	001ba03c mov ax,bx
 	001ba048 jz 0x001ba110
		001ba110: CONDITIONAL_JUMP
		001ba050: FALL_THROUGH

	[001ba050]
		001b9bf4: FALL_THROUGH
 	001ba050 push op
 	001ba058 mov ax,0x426
 	001ba064 farpush ax
 	001ba06c mov ax,0x397
 	001ba078 farpush ax
 	001ba080 mov ax,0x0
 	001ba08c farpush ax
 	001ba094 mov ax,0x3
 	001ba0a0 farpush ax
 	001ba0a8 mov ax,0x0
 	001ba0b4 farpush ax
 	001ba0bc mov mar,0xd4ef20
 	001ba0c8 mov ax,mar
 	001ba0d4 mov op,ax
 	001ba0dc setfuncargs 0x5
 	001ba0e4 mov ax,0x536f20
 	001ba0f0 farcall ax
 	001ba0f8 farsubsp 0x5
 	001ba100 pop op
 	001ba108 jmp 0x001ba1d0
		001ba1d0: UNCONDITIONAL_JUMP

	[001ba110]
		001b9bf4: CONDITIONAL_JUMP
 	001ba110 sourceline 0x2183
 	001ba118 push op
 	001ba120 mov ax,0x426
 	001ba12c farpush ax
 	001ba134 mov ax,0x397
 	001ba140 farpush ax
 	001ba148 mov ax,0x0
 	001ba154 farpush ax
 	001ba15c mov ax,0x3
 	001ba168 farpush ax
 	001ba170 mov ax,0x1
 	001ba17c farpush ax
 	001ba184 mov mar,0xd4ef20
 	001ba190 mov ax,mar
 	001ba19c mov op,ax
 	001ba1a4 setfuncargs 0x5
 	001ba1ac mov ax,0x536f20
 	001ba1b8 farcall ax
 	001ba1c0 farsubsp 0x5
 	001ba1c8 pop op
		001ba1d0: FALL_THROUGH

	[001ba1d0]
		001ba050: UNCONDITIONAL_JUMP
		001ba110: FALL_THROUGH
 	001ba1d0 sourceline 0x2184
 	001ba1d8 mov mar,0xd56f20
 	001ba1e4 memread4 ax
 	001ba1ec jz 0x001ba2fc
		001ba2fc: CONDITIONAL_JUMP
		001ba1f4: FALL_THROUGH

	[001ba1f4]
		001ba1d0: FALL_THROUGH
 	001ba1f4 sourceline 0x2186
 	001ba1fc push op
 	001ba204 mov ax,0x2c4e58
 	001ba210 farpush ax
 	001ba218 mov mar,0x3cef20
 	001ba224 mov ax,mar
 	001ba230 mov op,ax
 	001ba238 setfuncargs 0x1
 	001ba240 mov ax,0x6f6f20
 	001ba24c farcall ax
 	001ba254 farsubsp 0x1
 	001ba25c pop op
 	001ba264 sourceline 0x2187
 	001ba26c push op
 	001ba274 mov ax,0x2c4e63
 	001ba280 farpush ax
 	001ba288 mov mar,0xd4ef20
 	001ba294 mov ax,mar
 	001ba2a0 mov op,ax
 	001ba2a8 setfuncargs 0x1
 	001ba2b0 mov ax,0x6f6f20
 	001ba2bc farcall ax
 	001ba2c4 farsubsp 0x1
 	001ba2cc pop op
 	001ba2d4 sourceline 0x2188
 	001ba2dc mov ax,0x0
 	001ba2e8 mov mar,0xd56f20
 	001ba2f4 memwrite4 ax
		001ba2fc: FALL_THROUGH

	[001ba2fc]
		001ba1d0: CONDITIONAL_JUMP
		001ba1f4: FALL_THROUGH
 	001ba2fc sourceline 0x218a
 	001ba304 push op
 	001ba30c mov ax,0x426
 	001ba318 farpush ax
 	001ba320 mov ax,0x397
 	001ba32c farpush ax
 	001ba334 mov ax,0x0
 	001ba340 farpush ax
 	001ba348 mov ax,0x3
 	001ba354 farpush ax
 	001ba35c mov ax,0x0
 	001ba368 farpush ax
 	001ba370 mov mar,0x3cef20
 	001ba37c mov ax,mar
 	001ba388 mov op,ax
 	001ba390 setfuncargs 0x5
 	001ba398 mov ax,0x536f20
 	001ba3a4 farcall ax
 	001ba3ac farsubsp 0x5
 	001ba3b4 pop op
 	001ba3bc sourceline 0x218c
 	001ba3c4 mov ax,0x3
 	001ba3d0 farpush ax
 	001ba3d8 setfuncargs 0x1
 	001ba3e0 mov ax,0x4a6f20
 	001ba3ec farcall ax
 	001ba3f4 farsubsp 0x1
 	001ba3fc mov mar,sp
 	001ba408 memwrite4 ax
 	001ba410 add sp,0x4
 	001ba41c sourceline 0x218d
 	001ba424 stackptr 0x4
 	001ba42c memread4 ax
 	001ba434 push ax
 	001ba43c mov ax,0x0
 	001ba448 pop bx
 	001ba450 cmpeq bx,ax
 	001ba45c mov ax,bx
 	001ba468 jz 0x001ba4e0
		001ba4e0: CONDITIONAL_JUMP
		001ba470: FALL_THROUGH

	[001ba470]
		001ba2fc: FALL_THROUGH
 	001ba470 push op
 	001ba478 mov ax,0x2c8717
 	001ba484 farpush ax
 	001ba48c mov mar,0x3cef20
 	001ba498 mov ax,mar
 	001ba4a4 mov op,ax
 	001ba4ac setfuncargs 0x1
 	001ba4b4 mov ax,0x6f6f20
 	001ba4c0 farcall ax
 	001ba4c8 farsubsp 0x1
 	001ba4d0 pop op
 	001ba4d8 jmp 0x001ba6d8
		001ba6d8: UNCONDITIONAL_JUMP

	[001ba4e0]
		001ba2fc: CONDITIONAL_JUMP
 	001ba4e0 sourceline 0x218e
 	001ba4e8 stackptr 0x4
 	001ba4f0 memread4 ax
 	001ba4f8 push ax
 	001ba500 mov ax,0x1
 	001ba50c pop bx
 	001ba514 cmpeq bx,ax
 	001ba520 mov ax,bx
 	001ba52c jz 0x001ba5a4
		001ba5a4: CONDITIONAL_JUMP
		001ba534: FALL_THROUGH

	[001ba534]
		001ba4e0: FALL_THROUGH
 	001ba534 push op
 	001ba53c mov ax,0x2c8740
 	001ba548 farpush ax
 	001ba550 mov mar,0x3cef20
 	001ba55c mov ax,mar
 	001ba568 mov op,ax
 	001ba570 setfuncargs 0x1
 	001ba578 mov ax,0x6f6f20
 	001ba584 farcall ax
 	001ba58c farsubsp 0x1
 	001ba594 pop op
 	001ba59c jmp 0x001ba6d8
		001ba6d8: UNCONDITIONAL_JUMP

	[001ba5a4]
		001ba4e0: CONDITIONAL_JUMP
 	001ba5a4 sourceline 0x218f
 	001ba5ac stackptr 0x4
 	001ba5b4 memread4 ax
 	001ba5bc push ax
 	001ba5c4 mov ax,0x2
 	001ba5d0 pop bx
 	001ba5d8 cmpeq bx,ax
 	001ba5e4 mov ax,bx
 	001ba5f0 jz 0x001ba668
		001ba668: CONDITIONAL_JUMP
		001ba5f8: FALL_THROUGH

	[001ba5f8]
		001ba5a4: FALL_THROUGH
 	001ba5f8 push op
 	001ba600 mov ax,0x2c8769
 	001ba60c farpush ax
 	001ba614 mov mar,0x3cef20
 	001ba620 mov ax,mar
 	001ba62c mov op,ax
 	001ba634 setfuncargs 0x1
 	001ba63c mov ax,0x6f6f20
 	001ba648 farcall ax
 	001ba650 farsubsp 0x1
 	001ba658 pop op
 	001ba660 jmp 0x001ba6d8
		001ba6d8: UNCONDITIONAL_JUMP

	[001ba668]
		001ba5a4: CONDITIONAL_JUMP
 	001ba668 sourceline 0x2190
 	001ba670 push op
 	001ba678 mov ax,0x2c8792
 	001ba684 farpush ax
 	001ba68c mov mar,0x3cef20
 	001ba698 mov ax,mar
 	001ba6a4 mov op,ax
 	001ba6ac setfuncargs 0x1
 	001ba6b4 mov ax,0x6f6f20
 	001ba6c0 farcall ax
 	001ba6c8 farsubsp 0x1
 	001ba6d0 pop op
		001ba6d8: FALL_THROUGH

	[001ba6d8]
		001ba470: UNCONDITIONAL_JUMP
		001ba534: UNCONDITIONAL_JUMP
		001ba5f8: UNCONDITIONAL_JUMP
		001ba668: FALL_THROUGH
 	001ba6d8 sourceline 0x2192
 	001ba6e0 push op
 	001ba6e8 mov ax,0x2c4c60
 	001ba6f4 farpush ax
 	001ba6fc mov mar,0xd4ef20
 	001ba708 mov ax,mar
 	001ba714 mov op,ax
 	001ba71c setfuncargs 0x1
 	001ba724 mov ax,0x6f6f20
 	001ba730 farcall ax
 	001ba738 farsubsp 0x1
 	001ba740 pop op
 	001ba748 sourceline 0x2193
 	001ba750 push op
 	001ba758 mov ax,0x2c4c85
 	001ba764 farpush ax
 	001ba76c mov mar,0x3cef20
 	001ba778 mov ax,mar
 	001ba784 mov op,ax
 	001ba78c setfuncargs 0x1
 	001ba794 mov ax,0x6f6f20
 	001ba7a0 farcall ax
 	001ba7a8 farsubsp 0x1
 	001ba7b0 pop op
 	001ba7b8 sourceline 0x2194
 	001ba7c0 push op
 	001ba7c8 mov ax,0x2c4cae
 	001ba7d4 farpush ax
 	001ba7dc mov mar,0xd4ef20
 	001ba7e8 mov ax,mar
 	001ba7f4 mov op,ax
 	001ba7fc setfuncargs 0x1
 	001ba804 mov ax,0x6f6f20
 	001ba810 farcall ax
 	001ba818 farsubsp 0x1
 	001ba820 pop op
 	001ba828 sourceline 0x2195
 	001ba830 push op
 	001ba838 mov ax,0x2c4cee
 	001ba844 farpush ax
 	001ba84c mov mar,0x3cef20
 	001ba858 mov ax,mar
 	001ba864 mov op,ax
 	001ba86c setfuncargs 0x1
 	001ba874 mov ax,0x6f6f20
 	001ba880 farcall ax
 	001ba888 farsubsp 0x1
 	001ba890 pop op
 	001ba898 sourceline 0x2196
 	001ba8a0 push op
 	001ba8a8 mov ax,0x2c4d0e
 	001ba8b4 farpush ax
 	001ba8bc mov mar,0xd4ef20
 	001ba8c8 mov ax,mar
 	001ba8d4 mov op,ax
 	001ba8dc setfuncargs 0x1
 	001ba8e4 mov ax,0x6f6f20
 	001ba8f0 farcall ax
 	001ba8f8 farsubsp 0x1
 	001ba900 pop op
 	001ba908 sourceline 0x2197
 	001ba910 mov mar,0xd4ef20
 	001ba91c mov ax,mar
 	001ba928 push op
 	001ba930 mov op,ax
 	001ba938 setfuncargs 0x0
 	001ba940 mov ax,0x516f20
 	001ba94c farcall ax
 	001ba954 pop op
 	001ba95c push ax
 	001ba964 mov ax,0x95
 	001ba970 pop bx
 	001ba978 cmpneq bx,ax
 	001ba984 mov ax,bx
 	001ba990 jz 0x001baa58
		001baa58: CONDITIONAL_JUMP
		001ba998: FALL_THROUGH

	[001ba998]
		001ba6d8: FALL_THROUGH
 	001ba998 push op
 	001ba9a0 mov ax,0x427
 	001ba9ac farpush ax
 	001ba9b4 mov ax,0x398
 	001ba9c0 farpush ax
 	001ba9c8 mov ax,0x0
 	001ba9d4 farpush ax
 	001ba9dc mov ax,0x3
 	001ba9e8 farpush ax
 	001ba9f0 mov ax,0x0
 	001ba9fc farpush ax
 	001baa04 mov mar,0xd4ef20
 	001baa10 mov ax,mar
 	001baa1c mov op,ax
 	001baa24 setfuncargs 0x5
 	001baa2c mov ax,0x536f20
 	001baa38 farcall ax
 	001baa40 farsubsp 0x5
 	001baa48 pop op
 	001baa50 jmp 0x001bab18
		001bab18: UNCONDITIONAL_JUMP

	[001baa58]
		001ba6d8: CONDITIONAL_JUMP
 	001baa58 sourceline 0x2198
 	001baa60 push op
 	001baa68 mov ax,0x427
 	001baa74 farpush ax
 	001baa7c mov ax,0x398
 	001baa88 farpush ax
 	001baa90 mov ax,0x0
 	001baa9c farpush ax
 	001baaa4 mov ax,0x3
 	001baab0 farpush ax
 	001baab8 mov ax,0x1
 	001baac4 farpush ax
 	001baacc mov mar,0xd4ef20
 	001baad8 mov ax,mar
 	001baae4 mov op,ax
 	001baaec setfuncargs 0x5
 	001baaf4 mov ax,0x536f20
 	001bab00 farcall ax
 	001bab08 farsubsp 0x5
 	001bab10 pop op
		001bab18: FALL_THROUGH

	[001bab18]
		001ba998: UNCONDITIONAL_JUMP
		001baa58: FALL_THROUGH
 	001bab18 sourceline 0x2199
 	001bab20 push op
 	001bab28 mov ax,0x427
 	001bab34 farpush ax
 	001bab3c mov ax,0x397
 	001bab48 farpush ax
 	001bab50 mov ax,0x0
 	001bab5c farpush ax
 	001bab64 mov ax,0x3
 	001bab70 farpush ax
 	001bab78 mov ax,0x0
 	001bab84 farpush ax
 	001bab8c mov mar,0x3cef20
 	001bab98 mov ax,mar
 	001baba4 mov op,ax
 	001babac setfuncargs 0x5
 	001babb4 mov ax,0x536f20
 	001babc0 farcall ax
 	001babc8 farsubsp 0x5
 	001babd0 pop op
 	001babd8 sourceline 0x219a
 	001babe0 push op
 	001babe8 mov ax,0x2
 	001babf4 farpush ax
 	001babfc mov mar,0x3cef20
 	001bac08 mov ax,mar
 	001bac14 mov op,ax
 	001bac1c setfuncargs 0x1
 	001bac24 mov ax,0x51ef20
 	001bac30 farcall ax
 	001bac38 farsubsp 0x1
 	001bac40 pop op
 	001bac48 sourceline 0x219b
 	001bac50 mov ax,0x7
 	001bac5c mov bx,ax
 	001bac68 mov mar,0x3cef20
 	001bac74 mov ax,mar
 	001bac80 push op
 	001bac88 mov op,ax
 	001bac90 farpush bx
 	001bac98 setfuncargs 0x1
 	001baca0 mov ax,0x766f20
 	001bacac farcall ax
 	001bacb4 farsubsp 0x1
 	001bacbc pop op
 	001bacc4 sourceline 0x219c
 	001baccc mov mar,0x3cef20
 	001bacd8 mov ax,mar
 	001bace4 push op
 	001bacec mov op,ax
 	001bacf4 setfuncargs 0x0
 	001bacfc mov ax,0x78ef20
 	001bad08 farcall ax
 	001bad10 pop op
 	001bad18 push ax
 	001bad20 mov ax,0x6
 	001bad2c pop bx
 	001bad34 add bx,ax
 	001bad40 mov ax,bx
 	001bad4c mov bx,ax
 	001bad58 mov mar,0x3cef20
 	001bad64 mov ax,mar
 	001bad70 push op
 	001bad78 mov op,ax
 	001bad80 farpush bx
 	001bad88 setfuncargs 0x1
 	001bad90 mov ax,0x526f20
 	001bad9c farcall ax
 	001bada4 farsubsp 0x1
 	001badac pop op
 	001badb4 sourceline 0x219d
 	001badbc mov mar,0x3cef20
 	001badc8 mov ax,mar
 	001badd4 push op
 	001baddc mov op,ax
 	001bade4 setfuncargs 0x0
 	001badec mov ax,0xb36f20
 	001badf8 farcall ax
 	001bae00 pop op
 	001bae08 push ax
 	001bae10 mov ax,0x4
 	001bae1c pop bx
 	001bae24 add bx,ax
 	001bae30 mov ax,bx
 	001bae3c mov bx,ax
 	001bae48 mov mar,0x3cef20
 	001bae54 mov ax,mar
 	001bae60 push op
 	001bae68 mov op,ax
 	001bae70 farpush bx
 	001bae78 setfuncargs 0x1
 	001bae80 mov ax,0x70ef20
 	001bae8c farcall ax
 	001bae94 farsubsp 0x1
 	001bae9c pop op
 	001baea4 sourceline 0x219e
 	001baeac sub sp,0x4
		001baeb8: FALL_THROUGH

	[001baeb8]
		001b9ba0: UNCONDITIONAL_JUMP
		001bab18: FALL_THROUGH
 	001baeb8 sourceline 0x219f
 	001baec0 jmp 0x001bd360
		001bd360: UNCONDITIONAL_JUMP

	[001baec8]
		001b9ad0: CONDITIONAL_JUMP
 	001baec8 sourceline 0x21a1
 	001baed0 mov mar,0x3cef20
 	001baedc mov ax,mar
 	001baee8 push op
 	001baef0 mov op,ax
 	001baef8 setfuncargs 0x0
 	001baf00 mov ax,0x89ef20
 	001baf0c farcall ax
 	001baf14 pop op
 	001baf1c push ax
 	001baf24 mov mar,0x906f20
 	001baf30 mov ax,mar
 	001baf3c pop bx
 	001baf44 cmpeq bx,ax
 	001baf50 mov ax,bx
 	001baf5c jz 0x001bb134
		001bb134: CONDITIONAL_JUMP
		001baf64: FALL_THROUGH

	[001baf64]
		001baec8: FALL_THROUGH
 	001baf64 sourceline 0x21a3
 	001baf6c push op
 	001baf74 mov ax,0x397
 	001baf80 farpush ax
 	001baf88 mov ax,0x4c
 	001baf94 farpush ax
 	001baf9c mov ax,0x91
 	001bafa8 farpush ax
 	001bafb0 mov mar,0x3cef20
 	001bafbc mov ax,mar
 	001bafc8 mov op,ax
 	001bafd0 setfuncargs 0x3
 	001bafd8 mov ax,0x726f20
 	001bafe4 farcall ax
 	001bafec farsubsp 0x3
 	001baff4 pop op
 	001baffc sourceline 0x21a4
 	001bb004 mov ax,0x1
 	001bb010 mov bx,ax
 	001bb01c mov mar,0x3cef20
 	001bb028 mov ax,mar
 	001bb034 push op
 	001bb03c mov op,ax
 	001bb044 farpush bx
 	001bb04c setfuncargs 0x1
 	001bb054 mov ax,0x69ef20
 	001bb060 farcall ax
 	001bb068 farsubsp 0x1
 	001bb070 pop op
 	001bb078 sourceline 0x21a6
 	001bb080 push op
 	001bb088 mov ax,0x2c4d18
 	001bb094 farpush ax
 	001bb09c mov ax,0x138
 	001bb0a8 farpush ax
 	001bb0b0 mov ax,0x92
 	001bb0bc farpush ax
 	001bb0c4 mov ax,0x0
 	001bb0d0 farpush ax
 	001bb0d8 mov mar,0x3cef20
 	001bb0e4 mov ax,mar
 	001bb0f0 mov op,ax
 	001bb0f8 setfuncargs 0x4
 	001bb100 mov ax,0x6aef20
 	001bb10c farcall ax
 	001bb114 farsubsp 0x4
 	001bb11c pop op
 	001bb124 sourceline 0x21a7
 	001bb12c jmp 0x001bd360
		001bd360: UNCONDITIONAL_JUMP

	[001bb134]
		001baec8: CONDITIONAL_JUMP
 	001bb134 sourceline 0x21a9
 	001bb13c mov mar,0x3cef20
 	001bb148 mov ax,mar
 	001bb154 push op
 	001bb15c mov op,ax
 	001bb164 setfuncargs 0x0
 	001bb16c mov ax,0x89ef20
 	001bb178 farcall ax
 	001bb180 pop op
 	001bb188 push ax
 	001bb190 mov mar,0x90ef20
 	001bb19c mov ax,mar
 	001bb1a8 pop bx
 	001bb1b0 cmpeq bx,ax
 	001bb1bc mov ax,bx
 	001bb1c8 jz 0x001bc18c
		001bc18c: CONDITIONAL_JUMP
		001bb1d0: FALL_THROUGH

	[001bb1d0]
		001bb134: FALL_THROUGH
 	001bb1d0 sourceline 0x21ab
 	001bb1d8 setfuncargs 0x0
 	001bb1e0 mov ax,0x6def20
 	001bb1ec farcall ax
 	001bb1f4 lnot ax
 	001bb1fc jz 0x001bb258
		001bb258: CONDITIONAL_JUMP
		001bb204: FALL_THROUGH

	[001bb204]
		001bb1d0: FALL_THROUGH
 	001bb204 mov ax,0x78
 	001bb210 farpush ax
 	001bb218 mov ax,0xba
 	001bb224 farpush ax
 	001bb22c setfuncargs 0x2
 	001bb234 mov ax,0x6e6f20
 	001bb240 farcall ax
 	001bb248 farsubsp 0x2
 	001bb250 jmp 0x001bc17c
		001bc17c: UNCONDITIONAL_JUMP

	[001bb258]
		001bb1d0: CONDITIONAL_JUMP
 	001bb258 sourceline 0x21ae
 	001bb260 push op
 	001bb268 mov ax,0x397
 	001bb274 farpush ax
 	001bb27c mov ax,0x7
 	001bb288 farpush ax
 	001bb290 mov mar,0x3cef20
 	001bb29c mov ax,mar
 	001bb2a8 mov op,ax
 	001bb2b0 setfuncargs 0x2
 	001bb2b8 mov ax,0x6eef20
 	001bb2c4 farcall ax
 	001bb2cc farsubsp 0x2
 	001bb2d4 pop op
 	001bb2dc sourceline 0x21af
 	001bb2e4 mov ax,0x3
 	001bb2f0 mov bx,ax
 	001bb2fc mov mar,0x3cef20
 	001bb308 mov ax,mar
 	001bb314 push op
 	001bb31c mov op,ax
 	001bb324 farpush bx
 	001bb32c setfuncargs 0x1
 	001bb334 mov ax,0x69ef20
 	001bb340 farcall ax
 	001bb348 farsubsp 0x1
 	001bb350 pop op
 	001bb358 sourceline 0x21b0
 	001bb360 mov ax,0x0
 	001bb36c mov bx,ax
 	001bb378 mov mar,0x3cef20
 	001bb384 mov ax,mar
 	001bb390 push op
 	001bb398 mov op,ax
 	001bb3a0 farpush bx
 	001bb3a8 setfuncargs 0x1
 	001bb3b0 mov ax,0x436f20
 	001bb3bc farcall ax
 	001bb3c4 farsubsp 0x1
 	001bb3cc pop op
 	001bb3d4 sourceline 0x21b1
 	001bb3dc push op
 	001bb3e4 mov ax,0xd
 	001bb3f0 farpush ax
 	001bb3f8 mov mar,0x3cef20
 	001bb404 mov ax,mar
 	001bb410 mov op,ax
 	001bb418 setfuncargs 0x1
 	001bb420 mov ax,0x51ef20
 	001bb42c farcall ax
 	001bb434 farsubsp 0x1
 	001bb43c pop op
 	001bb444 sourceline 0x21b2
 	001bb44c mov mar,0x3cef20
 	001bb458 mov ax,mar
 	001bb464 push op
 	001bb46c mov op,ax
 	001bb474 setfuncargs 0x0
 	001bb47c mov ax,0x78ef20
 	001bb488 farcall ax
 	001bb490 pop op
 	001bb498 push ax
 	001bb4a0 mov ax,0x6
 	001bb4ac pop bx
 	001bb4b4 sub bx,ax
 	001bb4c0 mov ax,bx
 	001bb4cc mov bx,ax
 	001bb4d8 mov mar,0x3cef20
 	001bb4e4 mov ax,mar
 	001bb4f0 push op
 	001bb4f8 mov op,ax
 	001bb500 farpush bx
 	001bb508 setfuncargs 0x1
 	001bb510 mov ax,0x526f20
 	001bb51c farcall ax
 	001bb524 farsubsp 0x1
 	001bb52c pop op
 	001bb534 sourceline 0x21b3
 	001bb53c mov mar,0x3cef20
 	001bb548 mov ax,mar
 	001bb554 push op
 	001bb55c mov op,ax
 	001bb564 setfuncargs 0x0
 	001bb56c mov ax,0xb36f20
 	001bb578 farcall ax
 	001bb580 pop op
 	001bb588 push ax
 	001bb590 mov ax,0x4
 	001bb59c pop bx
 	001bb5a4 sub bx,ax
 	001bb5b0 mov ax,bx
 	001bb5bc mov bx,ax
 	001bb5c8 mov mar,0x3cef20
 	001bb5d4 mov ax,mar
 	001bb5e0 push op
 	001bb5e8 mov op,ax
 	001bb5f0 farpush bx
 	001bb5f8 setfuncargs 0x1
 	001bb600 mov ax,0x70ef20
 	001bb60c farcall ax
 	001bb614 farsubsp 0x1
 	001bb61c pop op
 	001bb624 sourceline 0x21b4
 	001bb62c mov mar,0xd4ef20
 	001bb638 mov ax,mar
 	001bb644 push op
 	001bb64c mov op,ax
 	001bb654 setfuncargs 0x0
 	001bb65c mov ax,0x516f20
 	001bb668 farcall ax
 	001bb670 pop op
 	001bb678 push ax
 	001bb680 mov ax,0x95
 	001bb68c pop bx
 	001bb694 cmpneq bx,ax
 	001bb6a0 mov ax,bx
 	001bb6ac jz 0x001bb774
		001bb774: CONDITIONAL_JUMP
		001bb6b4: FALL_THROUGH

	[001bb6b4]
		001bb258: FALL_THROUGH
 	001bb6b4 push op
 	001bb6bc mov ax,0x426
 	001bb6c8 farpush ax
 	001bb6d0 mov ax,0x397
 	001bb6dc farpush ax
 	001bb6e4 mov ax,0x0
 	001bb6f0 farpush ax
 	001bb6f8 mov ax,0x3
 	001bb704 farpush ax
 	001bb70c mov ax,0x0
 	001bb718 farpush ax
 	001bb720 mov mar,0xd4ef20
 	001bb72c mov ax,mar
 	001bb738 mov op,ax
 	001bb740 setfuncargs 0x5
 	001bb748 mov ax,0x536f20
 	001bb754 farcall ax
 	001bb75c farsubsp 0x5
 	001bb764 pop op
 	001bb76c jmp 0x001bb834
		001bb834: UNCONDITIONAL_JUMP

	[001bb774]
		001bb258: CONDITIONAL_JUMP
 	001bb774 sourceline 0x21b5
 	001bb77c push op
 	001bb784 mov ax,0x426
 	001bb790 farpush ax
 	001bb798 mov ax,0x397
 	001bb7a4 farpush ax
 	001bb7ac mov ax,0x0
 	001bb7b8 farpush ax
 	001bb7c0 mov ax,0x3
 	001bb7cc farpush ax
 	001bb7d4 mov ax,0x1
 	001bb7e0 farpush ax
 	001bb7e8 mov mar,0xd4ef20
 	001bb7f4 mov ax,mar
 	001bb800 mov op,ax
 	001bb808 setfuncargs 0x5
 	001bb810 mov ax,0x536f20
 	001bb81c farcall ax
 	001bb824 farsubsp 0x5
 	001bb82c pop op
		001bb834: FALL_THROUGH

	[001bb834]
		001bb6b4: UNCONDITIONAL_JUMP
		001bb774: FALL_THROUGH
 	001bb834 sourceline 0x21b6
 	001bb83c mov mar,0xd56f20
 	001bb848 memread4 ax
 	001bb850 jz 0x001bb960
		001bb960: CONDITIONAL_JUMP
		001bb858: FALL_THROUGH

	[001bb858]
		001bb834: FALL_THROUGH
 	001bb858 sourceline 0x21b8
 	001bb860 push op
 	001bb868 mov ax,0x2c4e58
 	001bb874 farpush ax
 	001bb87c mov mar,0x3cef20
 	001bb888 mov ax,mar
 	001bb894 mov op,ax
 	001bb89c setfuncargs 0x1
 	001bb8a4 mov ax,0x6f6f20
 	001bb8b0 farcall ax
 	001bb8b8 farsubsp 0x1
 	001bb8c0 pop op
 	001bb8c8 sourceline 0x21b9
 	001bb8d0 push op
 	001bb8d8 mov ax,0x2c4e63
 	001bb8e4 farpush ax
 	001bb8ec mov mar,0xd4ef20
 	001bb8f8 mov ax,mar
 	001bb904 mov op,ax
 	001bb90c setfuncargs 0x1
 	001bb914 mov ax,0x6f6f20
 	001bb920 farcall ax
 	001bb928 farsubsp 0x1
 	001bb930 pop op
 	001bb938 sourceline 0x21ba
 	001bb940 mov ax,0x0
 	001bb94c mov mar,0xd56f20
 	001bb958 memwrite4 ax
		001bb960: FALL_THROUGH

	[001bb960]
		001bb834: CONDITIONAL_JUMP
		001bb858: FALL_THROUGH
 	001bb960 sourceline 0x21bc
 	001bb968 push op
 	001bb970 mov ax,0x426
 	001bb97c farpush ax
 	001bb984 mov ax,0x397
 	001bb990 farpush ax
 	001bb998 mov ax,0x0
 	001bb9a4 farpush ax
 	001bb9ac mov ax,0x3
 	001bb9b8 farpush ax
 	001bb9c0 mov ax,0x0
 	001bb9cc farpush ax
 	001bb9d4 mov mar,0x3cef20
 	001bb9e0 mov ax,mar
 	001bb9ec mov op,ax
 	001bb9f4 setfuncargs 0x5
 	001bb9fc mov ax,0x536f20
 	001bba08 farcall ax
 	001bba10 farsubsp 0x5
 	001bba18 pop op
 	001bba20 sourceline 0x21bd
 	001bba28 push op
 	001bba30 mov ax,0x2c4d65
 	001bba3c farpush ax
 	001bba44 mov mar,0x3cef20
 	001bba50 mov ax,mar
 	001bba5c mov op,ax
 	001bba64 setfuncargs 0x1
 	001bba6c mov ax,0x6f6f20
 	001bba78 farcall ax
 	001bba80 farsubsp 0x1
 	001bba88 pop op
 	001bba90 sourceline 0x21be
 	001bba98 push op
 	001bbaa0 mov ax,0x2c4d97
 	001bbaac farpush ax
 	001bbab4 mov mar,0xd4ef20
 	001bbac0 mov ax,mar
 	001bbacc mov op,ax
 	001bbad4 setfuncargs 0x1
 	001bbadc mov ax,0x6f6f20
 	001bbae8 farcall ax
 	001bbaf0 farsubsp 0x1
 	001bbaf8 pop op
 	001bbb00 sourceline 0x21bf
 	001bbb08 push op
 	001bbb10 mov ax,0x2c4ddb
 	001bbb1c farpush ax
 	001bbb24 mov mar,0x3cef20
 	001bbb30 mov ax,mar
 	001bbb3c mov op,ax
 	001bbb44 setfuncargs 0x1
 	001bbb4c mov ax,0x6f6f20
 	001bbb58 farcall ax
 	001bbb60 farsubsp 0x1
 	001bbb68 pop op
 	001bbb70 sourceline 0x21c0
 	001bbb78 push op
 	001bbb80 mov ax,0x2c4ded
 	001bbb8c farpush ax
 	001bbb94 mov mar,0xd4ef20
 	001bbba0 mov ax,mar
 	001bbbac mov op,ax
 	001bbbb4 setfuncargs 0x1
 	001bbbbc mov ax,0x6f6f20
 	001bbbc8 farcall ax
 	001bbbd0 farsubsp 0x1
 	001bbbd8 pop op
 	001bbbe0 sourceline 0x21c1
 	001bbbe8 mov mar,0xd4ef20
 	001bbbf4 mov ax,mar
 	001bbc00 push op
 	001bbc08 mov op,ax
 	001bbc10 setfuncargs 0x0
 	001bbc18 mov ax,0x516f20
 	001bbc24 farcall ax
 	001bbc2c pop op
 	001bbc34 push ax
 	001bbc3c mov ax,0x95
 	001bbc48 pop bx
 	001bbc50 cmpneq bx,ax
 	001bbc5c mov ax,bx
 	001bbc68 jz 0x001bbd30
		001bbd30: CONDITIONAL_JUMP
		001bbc70: FALL_THROUGH

	[001bbc70]
		001bb960: FALL_THROUGH
 	001bbc70 push op
 	001bbc78 mov ax,0x427
 	001bbc84 farpush ax
 	001bbc8c mov ax,0x398
 	001bbc98 farpush ax
 	001bbca0 mov ax,0x0
 	001bbcac farpush ax
 	001bbcb4 mov ax,0x3
 	001bbcc0 farpush ax
 	001bbcc8 mov ax,0x0
 	001bbcd4 farpush ax
 	001bbcdc mov mar,0xd4ef20
 	001bbce8 mov ax,mar
 	001bbcf4 mov op,ax
 	001bbcfc setfuncargs 0x5
 	001bbd04 mov ax,0x536f20
 	001bbd10 farcall ax
 	001bbd18 farsubsp 0x5
 	001bbd20 pop op
 	001bbd28 jmp 0x001bbdf0
		001bbdf0: UNCONDITIONAL_JUMP

	[001bbd30]
		001bb960: CONDITIONAL_JUMP
 	001bbd30 sourceline 0x21c2
 	001bbd38 push op
 	001bbd40 mov ax,0x427
 	001bbd4c farpush ax
 	001bbd54 mov ax,0x398
 	001bbd60 farpush ax
 	001bbd68 mov ax,0x0
 	001bbd74 farpush ax
 	001bbd7c mov ax,0x3
 	001bbd88 farpush ax
 	001bbd90 mov ax,0x1
 	001bbd9c farpush ax
 	001bbda4 mov mar,0xd4ef20
 	001bbdb0 mov ax,mar
 	001bbdbc mov op,ax
 	001bbdc4 setfuncargs 0x5
 	001bbdcc mov ax,0x536f20
 	001bbdd8 farcall ax
 	001bbde0 farsubsp 0x5
 	001bbde8 pop op
		001bbdf0: FALL_THROUGH

	[001bbdf0]
		001bbc70: UNCONDITIONAL_JUMP
		001bbd30: FALL_THROUGH
 	001bbdf0 sourceline 0x21c3
 	001bbdf8 push op
 	001bbe00 mov ax,0x427
 	001bbe0c farpush ax
 	001bbe14 mov ax,0x397
 	001bbe20 farpush ax
 	001bbe28 mov ax,0x0
 	001bbe34 farpush ax
 	001bbe3c mov ax,0x3
 	001bbe48 farpush ax
 	001bbe50 mov ax,0x0
 	001bbe5c farpush ax
 	001bbe64 mov mar,0x3cef20
 	001bbe70 mov ax,mar
 	001bbe7c mov op,ax
 	001bbe84 setfuncargs 0x5
 	001bbe8c mov ax,0x536f20
 	001bbe98 farcall ax
 	001bbea0 farsubsp 0x5
 	001bbea8 pop op
 	001bbeb0 sourceline 0x21c4
 	001bbeb8 push op
 	001bbec0 mov ax,0x2
 	001bbecc farpush ax
 	001bbed4 mov mar,0x3cef20
 	001bbee0 mov ax,mar
 	001bbeec mov op,ax
 	001bbef4 setfuncargs 0x1
 	001bbefc mov ax,0x51ef20
 	001bbf08 farcall ax
 	001bbf10 farsubsp 0x1
 	001bbf18 pop op
 	001bbf20 sourceline 0x21c5
 	001bbf28 mov ax,0x7
 	001bbf34 mov bx,ax
 	001bbf40 mov mar,0x3cef20
 	001bbf4c mov ax,mar
 	001bbf58 push op
 	001bbf60 mov op,ax
 	001bbf68 farpush bx
 	001bbf70 setfuncargs 0x1
 	001bbf78 mov ax,0x766f20
 	001bbf84 farcall ax
 	001bbf8c farsubsp 0x1
 	001bbf94 pop op
 	001bbf9c sourceline 0x21c6
 	001bbfa4 mov mar,0x3cef20
 	001bbfb0 mov ax,mar
 	001bbfbc push op
 	001bbfc4 mov op,ax
 	001bbfcc setfuncargs 0x0
 	001bbfd4 mov ax,0x78ef20
 	001bbfe0 farcall ax
 	001bbfe8 pop op
 	001bbff0 push ax
 	001bbff8 mov ax,0x6
 	001bc004 pop bx
 	001bc00c add bx,ax
 	001bc018 mov ax,bx
 	001bc024 mov bx,ax
 	001bc030 mov mar,0x3cef20
 	001bc03c mov ax,mar
 	001bc048 push op
 	001bc050 mov op,ax
 	001bc058 farpush bx
 	001bc060 setfuncargs 0x1
 	001bc068 mov ax,0x526f20
 	001bc074 farcall ax
 	001bc07c farsubsp 0x1
 	001bc084 pop op
 	001bc08c sourceline 0x21c7
 	001bc094 mov mar,0x3cef20
 	001bc0a0 mov ax,mar
 	001bc0ac push op
 	001bc0b4 mov op,ax
 	001bc0bc setfuncargs 0x0
 	001bc0c4 mov ax,0xb36f20
 	001bc0d0 farcall ax
 	001bc0d8 pop op
 	001bc0e0 push ax
 	001bc0e8 mov ax,0x4
 	001bc0f4 pop bx
 	001bc0fc add bx,ax
 	001bc108 mov ax,bx
 	001bc114 mov bx,ax
 	001bc120 mov mar,0x3cef20
 	001bc12c mov ax,mar
 	001bc138 push op
 	001bc140 mov op,ax
 	001bc148 farpush bx
 	001bc150 setfuncargs 0x1
 	001bc158 mov ax,0x70ef20
 	001bc164 farcall ax
 	001bc16c farsubsp 0x1
 	001bc174 pop op
		001bc17c: FALL_THROUGH

	[001bc17c]
		001bb204: UNCONDITIONAL_JUMP
		001bbdf0: FALL_THROUGH
 	001bc17c sourceline 0x21c9
 	001bc184 jmp 0x001bd360
		001bd360: UNCONDITIONAL_JUMP

	[001bc18c]
		001bb134: CONDITIONAL_JUMP
 	001bc18c sourceline 0x21cb
 	001bc194 mov mar,0x3cef20
 	001bc1a0 mov ax,mar
 	001bc1ac push op
 	001bc1b4 mov op,ax
 	001bc1bc setfuncargs 0x0
 	001bc1c4 mov ax,0x89ef20
 	001bc1d0 farcall ax
 	001bc1d8 pop op
 	001bc1e0 push ax
 	001bc1e8 mov mar,0x936f20
 	001bc1f4 mov ax,mar
 	001bc200 pop bx
 	001bc208 cmpeq bx,ax
 	001bc214 mov ax,bx
 	001bc220 jz 0x001bd104
		001bd104: CONDITIONAL_JUMP
		001bc228: FALL_THROUGH

	[001bc228]
		001bc18c: FALL_THROUGH
 	001bc228 sourceline 0x21cd
 	001bc230 setfuncargs 0x0
 	001bc238 mov ax,0x6def20
 	001bc244 farcall ax
 	001bc24c lnot ax
 	001bc254 jz 0x001bc2b0
		001bc2b0: CONDITIONAL_JUMP
		001bc25c: FALL_THROUGH

	[001bc25c]
		001bc228: FALL_THROUGH
 	001bc25c mov ax,0x78
 	001bc268 farpush ax
 	001bc270 mov ax,0xba
 	001bc27c farpush ax
 	001bc284 setfuncargs 0x2
 	001bc28c mov ax,0x6e6f20
 	001bc298 farcall ax
 	001bc2a0 farsubsp 0x2
 	001bc2a8 jmp 0x001bd0f4
		001bd0f4: UNCONDITIONAL_JUMP

	[001bc2b0]
		001bc228: CONDITIONAL_JUMP
 	001bc2b0 sourceline 0x21d0
 	001bc2b8 push op
 	001bc2c0 mov ax,0x397
 	001bc2cc farpush ax
 	001bc2d4 mov ax,0x7
 	001bc2e0 farpush ax
 	001bc2e8 mov mar,0x3cef20
 	001bc2f4 mov ax,mar
 	001bc300 mov op,ax
 	001bc308 setfuncargs 0x2
 	001bc310 mov ax,0x6eef20
 	001bc31c farcall ax
 	001bc324 farsubsp 0x2
 	001bc32c pop op
 	001bc334 sourceline 0x21d1
 	001bc33c mov ax,0x3
 	001bc348 mov bx,ax
 	001bc354 mov mar,0x3cef20
 	001bc360 mov ax,mar
 	001bc36c push op
 	001bc374 mov op,ax
 	001bc37c farpush bx
 	001bc384 setfuncargs 0x1
 	001bc38c mov ax,0x69ef20
 	001bc398 farcall ax
 	001bc3a0 farsubsp 0x1
 	001bc3a8 pop op
 	001bc3b0 sourceline 0x21d2
 	001bc3b8 mov ax,0x0
 	001bc3c4 mov bx,ax
 	001bc3d0 mov mar,0x3cef20
 	001bc3dc mov ax,mar
 	001bc3e8 push op
 	001bc3f0 mov op,ax
 	001bc3f8 farpush bx
 	001bc400 setfuncargs 0x1
 	001bc408 mov ax,0x436f20
 	001bc414 farcall ax
 	001bc41c farsubsp 0x1
 	001bc424 pop op
 	001bc42c sourceline 0x21d3
 	001bc434 push op
 	001bc43c mov ax,0xd
 	001bc448 farpush ax
 	001bc450 mov mar,0x3cef20
 	001bc45c mov ax,mar
 	001bc468 mov op,ax
 	001bc470 setfuncargs 0x1
 	001bc478 mov ax,0x51ef20
 	001bc484 farcall ax
 	001bc48c farsubsp 0x1
 	001bc494 pop op
 	001bc49c sourceline 0x21d4
 	001bc4a4 mov mar,0x3cef20
 	001bc4b0 mov ax,mar
 	001bc4bc push op
 	001bc4c4 mov op,ax
 	001bc4cc setfuncargs 0x0
 	001bc4d4 mov ax,0x78ef20
 	001bc4e0 farcall ax
 	001bc4e8 pop op
 	001bc4f0 push ax
 	001bc4f8 mov ax,0x6
 	001bc504 pop bx
 	001bc50c sub bx,ax
 	001bc518 mov ax,bx
 	001bc524 mov bx,ax
 	001bc530 mov mar,0x3cef20
 	001bc53c mov ax,mar
 	001bc548 push op
 	001bc550 mov op,ax
 	001bc558 farpush bx
 	001bc560 setfuncargs 0x1
 	001bc568 mov ax,0x526f20
 	001bc574 farcall ax
 	001bc57c farsubsp 0x1
 	001bc584 pop op
 	001bc58c sourceline 0x21d5
 	001bc594 mov mar,0x3cef20
 	001bc5a0 mov ax,mar
 	001bc5ac push op
 	001bc5b4 mov op,ax
 	001bc5bc setfuncargs 0x0
 	001bc5c4 mov ax,0xb36f20
 	001bc5d0 farcall ax
 	001bc5d8 pop op
 	001bc5e0 push ax
 	001bc5e8 mov ax,0x4
 	001bc5f4 pop bx
 	001bc5fc sub bx,ax
 	001bc608 mov ax,bx
 	001bc614 mov bx,ax
 	001bc620 mov mar,0x3cef20
 	001bc62c mov ax,mar
 	001bc638 push op
 	001bc640 mov op,ax
 	001bc648 farpush bx
 	001bc650 setfuncargs 0x1
 	001bc658 mov ax,0x70ef20
 	001bc664 farcall ax
 	001bc66c farsubsp 0x1
 	001bc674 pop op
 	001bc67c sourceline 0x21d6
 	001bc684 mov mar,0xd4ef20
 	001bc690 mov ax,mar
 	001bc69c push op
 	001bc6a4 mov op,ax
 	001bc6ac setfuncargs 0x0
 	001bc6b4 mov ax,0x516f20
 	001bc6c0 farcall ax
 	001bc6c8 pop op
 	001bc6d0 push ax
 	001bc6d8 mov ax,0x95
 	001bc6e4 pop bx
 	001bc6ec cmpneq bx,ax
 	001bc6f8 mov ax,bx
 	001bc704 jz 0x001bc7cc
		001bc7cc: CONDITIONAL_JUMP
		001bc70c: FALL_THROUGH

	[001bc70c]
		001bc2b0: FALL_THROUGH
 	001bc70c push op
 	001bc714 mov ax,0x426
 	001bc720 farpush ax
 	001bc728 mov ax,0x397
 	001bc734 farpush ax
 	001bc73c mov ax,0x0
 	001bc748 farpush ax
 	001bc750 mov ax,0x3
 	001bc75c farpush ax
 	001bc764 mov ax,0x0
 	001bc770 farpush ax
 	001bc778 mov mar,0xd4ef20
 	001bc784 mov ax,mar
 	001bc790 mov op,ax
 	001bc798 setfuncargs 0x5
 	001bc7a0 mov ax,0x536f20
 	001bc7ac farcall ax
 	001bc7b4 farsubsp 0x5
 	001bc7bc pop op
 	001bc7c4 jmp 0x001bc88c
		001bc88c: UNCONDITIONAL_JUMP

	[001bc7cc]
		001bc2b0: CONDITIONAL_JUMP
 	001bc7cc sourceline 0x21d7
 	001bc7d4 push op
 	001bc7dc mov ax,0x426
 	001bc7e8 farpush ax
 	001bc7f0 mov ax,0x397
 	001bc7fc farpush ax
 	001bc804 mov ax,0x0
 	001bc810 farpush ax
 	001bc818 mov ax,0x3
 	001bc824 farpush ax
 	001bc82c mov ax,0x1
 	001bc838 farpush ax
 	001bc840 mov mar,0xd4ef20
 	001bc84c mov ax,mar
 	001bc858 mov op,ax
 	001bc860 setfuncargs 0x5
 	001bc868 mov ax,0x536f20
 	001bc874 farcall ax
 	001bc87c farsubsp 0x5
 	001bc884 pop op
		001bc88c: FALL_THROUGH

	[001bc88c]
		001bc70c: UNCONDITIONAL_JUMP
		001bc7cc: FALL_THROUGH
 	001bc88c sourceline 0x21d8
 	001bc894 mov mar,0xd56f20
 	001bc8a0 memread4 ax
 	001bc8a8 jz 0x001bc9b8
		001bc9b8: CONDITIONAL_JUMP
		001bc8b0: FALL_THROUGH

	[001bc8b0]
		001bc88c: FALL_THROUGH
 	001bc8b0 sourceline 0x21da
 	001bc8b8 push op
 	001bc8c0 mov ax,0x2c4e58
 	001bc8cc farpush ax
 	001bc8d4 mov mar,0x3cef20
 	001bc8e0 mov ax,mar
 	001bc8ec mov op,ax
 	001bc8f4 setfuncargs 0x1
 	001bc8fc mov ax,0x6f6f20
 	001bc908 farcall ax
 	001bc910 farsubsp 0x1
 	001bc918 pop op
 	001bc920 sourceline 0x21db
 	001bc928 push op
 	001bc930 mov ax,0x2c4e63
 	001bc93c farpush ax
 	001bc944 mov mar,0xd4ef20
 	001bc950 mov ax,mar
 	001bc95c mov op,ax
 	001bc964 setfuncargs 0x1
 	001bc96c mov ax,0x6f6f20
 	001bc978 farcall ax
 	001bc980 farsubsp 0x1
 	001bc988 pop op
 	001bc990 sourceline 0x21dc
 	001bc998 mov ax,0x0
 	001bc9a4 mov mar,0xd56f20
 	001bc9b0 memwrite4 ax
		001bc9b8: FALL_THROUGH

	[001bc9b8]
		001bc88c: CONDITIONAL_JUMP
		001bc8b0: FALL_THROUGH
 	001bc9b8 sourceline 0x21de
 	001bc9c0 push op
 	001bc9c8 mov ax,0x426
 	001bc9d4 farpush ax
 	001bc9dc mov ax,0x397
 	001bc9e8 farpush ax
 	001bc9f0 mov ax,0x0
 	001bc9fc farpush ax
 	001bca04 mov ax,0x3
 	001bca10 farpush ax
 	001bca18 mov ax,0x0
 	001bca24 farpush ax
 	001bca2c mov mar,0x3cef20
 	001bca38 mov ax,mar
 	001bca44 mov op,ax
 	001bca4c setfuncargs 0x5
 	001bca54 mov ax,0x536f20
 	001bca60 farcall ax
 	001bca68 farsubsp 0x5
 	001bca70 pop op
 	001bca78 sourceline 0x21df
 	001bca80 push op
 	001bca88 mov ax,0x2c4e7d
 	001bca94 farpush ax
 	001bca9c mov mar,0x3cef20
 	001bcaa8 mov ax,mar
 	001bcab4 mov op,ax
 	001bcabc setfuncargs 0x1
 	001bcac4 mov ax,0x6f6f20
 	001bcad0 farcall ax
 	001bcad8 farsubsp 0x1
 	001bcae0 pop op
 	001bcae8 sourceline 0x21e0
 	001bcaf0 push op
 	001bcaf8 mov ax,0x2c4e9e
 	001bcb04 farpush ax
 	001bcb0c mov mar,0xd4ef20
 	001bcb18 mov ax,mar
 	001bcb24 mov op,ax
 	001bcb2c setfuncargs 0x1
 	001bcb34 mov ax,0x6f6f20
 	001bcb40 farcall ax
 	001bcb48 farsubsp 0x1
 	001bcb50 pop op
 	001bcb58 sourceline 0x21e1
 	001bcb60 mov mar,0xd4ef20
 	001bcb6c mov ax,mar
 	001bcb78 push op
 	001bcb80 mov op,ax
 	001bcb88 setfuncargs 0x0
 	001bcb90 mov ax,0x516f20
 	001bcb9c farcall ax
 	001bcba4 pop op
 	001bcbac push ax
 	001bcbb4 mov ax,0x95
 	001bcbc0 pop bx
 	001bcbc8 cmpneq bx,ax
 	001bcbd4 mov ax,bx
 	001bcbe0 jz 0x001bcca8
		001bcca8: CONDITIONAL_JUMP
		001bcbe8: FALL_THROUGH

	[001bcbe8]
		001bc9b8: FALL_THROUGH
 	001bcbe8 push op
 	001bcbf0 mov ax,0x427
 	001bcbfc farpush ax
 	001bcc04 mov ax,0x398
 	001bcc10 farpush ax
 	001bcc18 mov ax,0x0
 	001bcc24 farpush ax
 	001bcc2c mov ax,0x3
 	001bcc38 farpush ax
 	001bcc40 mov ax,0x0
 	001bcc4c farpush ax
 	001bcc54 mov mar,0xd4ef20
 	001bcc60 mov ax,mar
 	001bcc6c mov op,ax
 	001bcc74 setfuncargs 0x5
 	001bcc7c mov ax,0x536f20
 	001bcc88 farcall ax
 	001bcc90 farsubsp 0x5
 	001bcc98 pop op
 	001bcca0 jmp 0x001bcd68
		001bcd68: UNCONDITIONAL_JUMP

	[001bcca8]
		001bc9b8: CONDITIONAL_JUMP
 	001bcca8 sourceline 0x21e2
 	001bccb0 push op
 	001bccb8 mov ax,0x427
 	001bccc4 farpush ax
 	001bcccc mov ax,0x398
 	001bccd8 farpush ax
 	001bcce0 mov ax,0x0
 	001bccec farpush ax
 	001bccf4 mov ax,0x3
 	001bcd00 farpush ax
 	001bcd08 mov ax,0x1
 	001bcd14 farpush ax
 	001bcd1c mov mar,0xd4ef20
 	001bcd28 mov ax,mar
 	001bcd34 mov op,ax
 	001bcd3c setfuncargs 0x5
 	001bcd44 mov ax,0x536f20
 	001bcd50 farcall ax
 	001bcd58 farsubsp 0x5
 	001bcd60 pop op
		001bcd68: FALL_THROUGH

	[001bcd68]
		001bcbe8: UNCONDITIONAL_JUMP
		001bcca8: FALL_THROUGH
 	001bcd68 sourceline 0x21e3
 	001bcd70 push op
 	001bcd78 mov ax,0x427
 	001bcd84 farpush ax
 	001bcd8c mov ax,0x397
 	001bcd98 farpush ax
 	001bcda0 mov ax,0x0
 	001bcdac farpush ax
 	001bcdb4 mov ax,0x3
 	001bcdc0 farpush ax
 	001bcdc8 mov ax,0x0
 	001bcdd4 farpush ax
 	001bcddc mov mar,0x3cef20
 	001bcde8 mov ax,mar
 	001bcdf4 mov op,ax
 	001bcdfc setfuncargs 0x5
 	001bce04 mov ax,0x536f20
 	001bce10 farcall ax
 	001bce18 farsubsp 0x5
 	001bce20 pop op
 	001bce28 sourceline 0x21e4
 	001bce30 push op
 	001bce38 mov ax,0x2
 	001bce44 farpush ax
 	001bce4c mov mar,0x3cef20
 	001bce58 mov ax,mar
 	001bce64 mov op,ax
 	001bce6c setfuncargs 0x1
 	001bce74 mov ax,0x51ef20
 	001bce80 farcall ax
 	001bce88 farsubsp 0x1
 	001bce90 pop op
 	001bce98 sourceline 0x21e5
 	001bcea0 mov ax,0x7
 	001bceac mov bx,ax
 	001bceb8 mov mar,0x3cef20
 	001bcec4 mov ax,mar
 	001bced0 push op
 	001bced8 mov op,ax
 	001bcee0 farpush bx
 	001bcee8 setfuncargs 0x1
 	001bcef0 mov ax,0x766f20
 	001bcefc farcall ax
 	001bcf04 farsubsp 0x1
 	001bcf0c pop op
 	001bcf14 sourceline 0x21e6
 	001bcf1c mov mar,0x3cef20
 	001bcf28 mov ax,mar
 	001bcf34 push op
 	001bcf3c mov op,ax
 	001bcf44 setfuncargs 0x0
 	001bcf4c mov ax,0x78ef20
 	001bcf58 farcall ax
 	001bcf60 pop op
 	001bcf68 push ax
 	001bcf70 mov ax,0x6
 	001bcf7c pop bx
 	001bcf84 add bx,ax
 	001bcf90 mov ax,bx
 	001bcf9c mov bx,ax
 	001bcfa8 mov mar,0x3cef20
 	001bcfb4 mov ax,mar
 	001bcfc0 push op
 	001bcfc8 mov op,ax
 	001bcfd0 farpush bx
 	001bcfd8 setfuncargs 0x1
 	001bcfe0 mov ax,0x526f20
 	001bcfec farcall ax
 	001bcff4 farsubsp 0x1
 	001bcffc pop op
 	001bd004 sourceline 0x21e7
 	001bd00c mov mar,0x3cef20
 	001bd018 mov ax,mar
 	001bd024 push op
 	001bd02c mov op,ax
 	001bd034 setfuncargs 0x0
 	001bd03c mov ax,0xb36f20
 	001bd048 farcall ax
 	001bd050 pop op
 	001bd058 push ax
 	001bd060 mov ax,0x4
 	001bd06c pop bx
 	001bd074 add bx,ax
 	001bd080 mov ax,bx
 	001bd08c mov bx,ax
 	001bd098 mov mar,0x3cef20
 	001bd0a4 mov ax,mar
 	001bd0b0 push op
 	001bd0b8 mov op,ax
 	001bd0c0 farpush bx
 	001bd0c8 setfuncargs 0x1
 	001bd0d0 mov ax,0x70ef20
 	001bd0dc farcall ax
 	001bd0e4 farsubsp 0x1
 	001bd0ec pop op
		001bd0f4: FALL_THROUGH

	[001bd0f4]
		001bc25c: UNCONDITIONAL_JUMP
		001bcd68: FALL_THROUGH
 	001bd0f4 sourceline 0x21e9
 	001bd0fc jmp 0x001bd360
		001bd360: UNCONDITIONAL_JUMP

	[001bd104]
		001bc18c: CONDITIONAL_JUMP
 	001bd104 sourceline 0x21eb
 	001bd10c mov mar,0x3cef20
 	001bd118 mov ax,mar
 	001bd124 push op
 	001bd12c mov op,ax
 	001bd134 setfuncargs 0x0
 	001bd13c mov ax,0x89ef20
 	001bd148 farcall ax
 	001bd150 pop op
 	001bd158 push ax
 	001bd160 mov mar,0x956f20
 	001bd16c mov ax,mar
 	001bd178 pop bx
 	001bd180 cmpeq bx,ax
 	001bd18c mov ax,bx
 	001bd198 jz 0x001bd360
		001bd360: CONDITIONAL_JUMP
		001bd1a0: FALL_THROUGH

	[001bd1a0]
		001bd104: FALL_THROUGH
 	001bd1a0 sourceline 0x21ed
 	001bd1a8 push op
 	001bd1b0 mov ax,0x397
 	001bd1bc farpush ax
 	001bd1c4 mov ax,0x4c
 	001bd1d0 farpush ax
 	001bd1d8 mov ax,0x91
 	001bd1e4 farpush ax
 	001bd1ec mov mar,0x3cef20
 	001bd1f8 mov ax,mar
 	001bd204 mov op,ax
 	001bd20c setfuncargs 0x3
 	001bd214 mov ax,0x726f20
 	001bd220 farcall ax
 	001bd228 farsubsp 0x3
 	001bd230 pop op
 	001bd238 sourceline 0x21ee
 	001bd240 mov ax,0x1
 	001bd24c mov bx,ax
 	001bd258 mov mar,0x3cef20
 	001bd264 mov ax,mar
 	001bd270 push op
 	001bd278 mov op,ax
 	001bd280 farpush bx
 	001bd288 setfuncargs 0x1
 	001bd290 mov ax,0x69ef20
 	001bd29c farcall ax
 	001bd2a4 farsubsp 0x1
 	001bd2ac pop op
 	001bd2b4 sourceline 0x21f0
 	001bd2bc push op
 	001bd2c4 mov ax,0x2c52db
 	001bd2d0 farpush ax
 	001bd2d8 mov ax,0x138
 	001bd2e4 farpush ax
 	001bd2ec mov ax,0x92
 	001bd2f8 farpush ax
 	001bd300 mov ax,0x0
 	001bd30c farpush ax
 	001bd314 mov mar,0x3cef20
 	001bd320 mov ax,mar
 	001bd32c mov op,ax
 	001bd334 setfuncargs 0x4
 	001bd33c mov ax,0x6aef20
 	001bd348 farcall ax
 	001bd350 farsubsp 0x4
 	001bd358 pop op
		001bd360: FALL_THROUGH

	[001bd360]
		001b7c0c: UNCONDITIONAL_JUMP
		001b9ac0: UNCONDITIONAL_JUMP
		001baeb8: UNCONDITIONAL_JUMP
		001baf64: UNCONDITIONAL_JUMP
		001bc17c: UNCONDITIONAL_JUMP
		001bd0f4: UNCONDITIONAL_JUMP
		001bd104: CONDITIONAL_JUMP
		001bd1a0: FALL_THROUGH
 	001bd360 sourceline 0x21f2
 	001bd368 mov ax,0x0
 	001bd374 ret

cMuslimWoman_UseInv$0:
	[001bd378]
 	001bd378 sourceline 0x21f7
 	001bd380 thisaddr
 	001bd388 sourceline 0x21f8
*	001bd390 mov mar,0xc56f20
 	001bd39c mov ax,mar
 	001bd3a8 push op
 	001bd3b0 mov op,ax
 	001bd3b8 setfuncargs 0x0
 	001bd3c0 mov ax,0x516f20
 	001bd3cc farcall ax
 	001bd3d4 pop op
 	001bd3dc push ax
 	001bd3e4 mov ax,0xa2
 	001bd3f0 pop bx
 	001bd3f8 cmpneq bx,ax
 	001bd404 mov ax,bx
 	001bd410 jz 0x001c0774
		001c0774: CONDITIONAL_JUMP
		001bd418: FALL_THROUGH

	[001bd418]
		001bd378: FALL_THROUGH
 	001bd418 sourceline 0x21fa
 	001bd420 mov mar,0x3cef20
 	001bd42c mov ax,mar
 	001bd438 push op
 	001bd440 mov op,ax
 	001bd448 setfuncargs 0x0
 	001bd450 mov ax,0x89ef20
 	001bd45c farcall ax
 	001bd464 pop op
 	001bd46c push ax
 	001bd474 mov mar,0x92ef20
 	001bd480 mov ax,mar
 	001bd48c pop bx
 	001bd494 cmpeq bx,ax
 	001bd4a0 mov ax,bx
 	001bd4ac jz 0x001c05a4
		001c05a4: CONDITIONAL_JUMP
		001bd4b4: FALL_THROUGH

	[001bd4b4]
		001bd418: FALL_THROUGH
 	001bd4b4 sourceline 0x21fc
 	001bd4bc mov mar,0x86ef20
 	001bd4c8 memread4 ax
 	001bd4d0 lnot ax
 	001bd4d8 jz 0x001bd6b0
		001bd6b0: CONDITIONAL_JUMP
		001bd4e0: FALL_THROUGH

	[001bd4e0]
		001bd4b4: FALL_THROUGH
 	001bd4e0 sourceline 0x21fe
 	001bd4e8 push op
 	001bd4f0 mov ax,0x397
 	001bd4fc farpush ax
 	001bd504 mov ax,0x6b
 	001bd510 farpush ax
 	001bd518 mov ax,0x57
 	001bd524 farpush ax
 	001bd52c mov mar,0x3cef20
 	001bd538 mov ax,mar
 	001bd544 mov op,ax
 	001bd54c setfuncargs 0x3
 	001bd554 mov ax,0x726f20
 	001bd560 farcall ax
 	001bd568 farsubsp 0x3
 	001bd570 pop op
 	001bd578 sourceline 0x21ff
 	001bd580 mov ax,0x1
 	001bd58c mov bx,ax
 	001bd598 mov mar,0x3cef20
 	001bd5a4 mov ax,mar
 	001bd5b0 push op
 	001bd5b8 mov op,ax
 	001bd5c0 farpush bx
 	001bd5c8 setfuncargs 0x1
 	001bd5d0 mov ax,0x69ef20
 	001bd5dc farcall ax
 	001bd5e4 farsubsp 0x1
 	001bd5ec pop op
 	001bd5f4 sourceline 0x2201
 	001bd5fc push op
 	001bd604 mov ax,0x2c4f39
 	001bd610 farpush ax
 	001bd618 mov ax,0x138
 	001bd624 farpush ax
 	001bd62c mov ax,0x92
 	001bd638 farpush ax
 	001bd640 mov ax,0x0
 	001bd64c farpush ax
 	001bd654 mov mar,0x3cef20
 	001bd660 mov ax,mar
 	001bd66c mov op,ax
 	001bd674 setfuncargs 0x4
 	001bd67c mov ax,0x6aef20
 	001bd688 farcall ax
 	001bd690 farsubsp 0x4
 	001bd698 pop op
 	001bd6a0 sourceline 0x2202
 	001bd6a8 jmp 0x001c0594
		001c0594: UNCONDITIONAL_JUMP

	[001bd6b0]
		001bd4b4: CONDITIONAL_JUMP
 	001bd6b0 sourceline 0x2205
 	001bd6b8 setfuncargs 0x0
 	001bd6c0 mov ax,0x6def20
 	001bd6cc farcall ax
 	001bd6d4 lnot ax
 	001bd6dc jz 0x001bd738
		001bd738: CONDITIONAL_JUMP
		001bd6e4: FALL_THROUGH

	[001bd6e4]
		001bd6b0: FALL_THROUGH
 	001bd6e4 mov ax,0x86
 	001bd6f0 farpush ax
 	001bd6f8 mov ax,0x7a
 	001bd704 farpush ax
 	001bd70c setfuncargs 0x2
 	001bd714 mov ax,0x6e6f20
 	001bd720 farcall ax
 	001bd728 farsubsp 0x2
 	001bd730 jmp 0x001c0594
		001c0594: UNCONDITIONAL_JUMP

	[001bd738]
		001bd6b0: CONDITIONAL_JUMP
 	001bd738 sourceline 0x2208
 	001bd740 mov ax,0x1
 	001bd74c mov bx,ax
 	001bd758 mov mar,0x3cef20
 	001bd764 mov ax,mar
 	001bd770 push op
 	001bd778 mov op,ax
 	001bd780 farpush bx
 	001bd788 setfuncargs 0x1
 	001bd790 mov ax,0x69ef20
 	001bd79c farcall ax
 	001bd7a4 farsubsp 0x1
 	001bd7ac pop op
 	001bd7b4 sourceline 0x2209
 	001bd7bc mov ax,0x1
 	001bd7c8 mov mar,0xd5ef20
 	001bd7d4 memwrite4 ax
 	001bd7dc sourceline 0x220a
 	001bd7e4 push op
 	001bd7ec mov ax,0x397
 	001bd7f8 farpush ax
 	001bd800 mov ax,0x3
 	001bd80c farpush ax
 	001bd814 mov mar,0x3cef20
 	001bd820 mov ax,mar
 	001bd82c mov op,ax
 	001bd834 setfuncargs 0x2
 	001bd83c mov ax,0x6eef20
 	001bd848 farcall ax
 	001bd850 farsubsp 0x2
 	001bd858 pop op
 	001bd860 sourceline 0x220b
 	001bd868 push op
 	001bd870 mov ax,0x2c4f5c
 	001bd87c farpush ax
 	001bd884 mov ax,0x138
 	001bd890 farpush ax
 	001bd898 mov ax,0x92
 	001bd8a4 farpush ax
 	001bd8ac mov ax,0x0
 	001bd8b8 farpush ax
 	001bd8c0 mov mar,0x3cef20
 	001bd8cc mov ax,mar
 	001bd8d8 mov op,ax
 	001bd8e0 setfuncargs 0x4
 	001bd8e8 mov ax,0x6aef20
 	001bd8f4 farcall ax
 	001bd8fc farsubsp 0x4
 	001bd904 pop op
 	001bd90c sourceline 0x220e
 	001bd914 push op
 	001bd91c mov ax,0xa
 	001bd928 farpush ax
 	001bd930 mov mar,0x3cef20
 	001bd93c mov ax,mar
 	001bd948 mov op,ax
 	001bd950 setfuncargs 0x1
 	001bd958 mov ax,0x51ef20
 	001bd964 farcall ax
 	001bd96c farsubsp 0x1
 	001bd974 pop op
 	001bd97c sourceline 0x220f
 	001bd984 mov mar,0x3cef20
 	001bd990 mov ax,mar
 	001bd99c push op
 	001bd9a4 mov op,ax
 	001bd9ac setfuncargs 0x0
 	001bd9b4 mov ax,0x78ef20
 	001bd9c0 farcall ax
 	001bd9c8 pop op
 	001bd9d0 push ax
 	001bd9d8 mov ax,0x8
 	001bd9e4 pop bx
 	001bd9ec sub bx,ax
 	001bd9f8 mov ax,bx
 	001bda04 mov bx,ax
 	001bda10 mov mar,0x3cef20
 	001bda1c mov ax,mar
 	001bda28 push op
 	001bda30 mov op,ax
 	001bda38 farpush bx
 	001bda40 setfuncargs 0x1
 	001bda48 mov ax,0x526f20
 	001bda54 farcall ax
 	001bda5c farsubsp 0x1
 	001bda64 pop op
 	001bda6c sourceline 0x2210
 	001bda74 mov mar,0x3cef20
 	001bda80 mov ax,mar
 	001bda8c push op
 	001bda94 mov op,ax
 	001bda9c setfuncargs 0x0
 	001bdaa4 mov ax,0xb36f20
 	001bdab0 farcall ax
 	001bdab8 pop op
 	001bdac0 push ax
 	001bdac8 mov ax,0x1
 	001bdad4 pop bx
 	001bdadc add bx,ax
 	001bdae8 mov ax,bx
 	001bdaf4 mov bx,ax
 	001bdb00 mov mar,0x3cef20
 	001bdb0c mov ax,mar
 	001bdb18 push op
 	001bdb20 mov op,ax
 	001bdb28 farpush bx
 	001bdb30 setfuncargs 0x1
 	001bdb38 mov ax,0x70ef20
 	001bdb44 farcall ax
 	001bdb4c farsubsp 0x1
 	001bdb54 pop op
 	001bdb5c sourceline 0x2211
 	001bdb64 mov ax,0x270f
 	001bdb70 mov bx,ax
 	001bdb7c mov mar,0x3cef20
 	001bdb88 mov ax,mar
 	001bdb94 push op
 	001bdb9c mov op,ax
 	001bdba4 farpush bx
 	001bdbac setfuncargs 0x1
 	001bdbb4 mov ax,0xcaef20
 	001bdbc0 farcall ax
 	001bdbc8 farsubsp 0x1
 	001bdbd0 pop op
 	001bdbd8 sourceline 0x2212
 	001bdbe0 push op
 	001bdbe8 mov ax,0x426
 	001bdbf4 farpush ax
 	001bdbfc mov ax,0x398
 	001bdc08 farpush ax
 	001bdc10 mov ax,0x0
 	001bdc1c farpush ax
 	001bdc24 mov ax,0x3
 	001bdc30 farpush ax
 	001bdc38 mov ax,0x0
 	001bdc44 farpush ax
 	001bdc4c mov mar,0x3cef20
 	001bdc58 mov ax,mar
 	001bdc64 mov op,ax
 	001bdc6c setfuncargs 0x5
 	001bdc74 mov ax,0x536f20
 	001bdc80 farcall ax
 	001bdc88 farsubsp 0x5
 	001bdc90 pop op
 	001bdc98 sourceline 0x2213
 	001bdca0 mov ax,0xa
 	001bdcac farpush ax
 	001bdcb4 setfuncargs 0x1
 	001bdcbc mov ax,0x426f20
 	001bdcc8 farcall ax
 	001bdcd0 farsubsp 0x1
 	001bdcd8 sourceline 0x2214
 	001bdce0 push op
 	001bdce8 mov ax,0x0
 	001bdcf4 farpush ax
 	001bdcfc mov ax,0x32
 	001bdd08 farpush ax
 	001bdd10 mov mar,0xd66f20
 	001bdd1c mov ax,mar
 	001bdd28 mov op,ax
 	001bdd30 setfuncargs 0x2
 	001bdd38 mov ax,0x2fef20
 	001bdd44 farcall ax
 	001bdd4c farsubsp 0x2
 	001bdd54 pop op
 	001bdd5c sourceline 0x2215
 	001bdd64 mov ax,0x46
 	001bdd70 farpush ax
 	001bdd78 setfuncargs 0x1
 	001bdd80 mov ax,0x426f20
 	001bdd8c farcall ax
 	001bdd94 farsubsp 0x1
 	001bdd9c sourceline 0x2216
 	001bdda4 push op
 	001bddac mov ax,0x427
 	001bddb8 farpush ax
 	001bddc0 mov ax,0x397
 	001bddcc farpush ax
 	001bddd4 mov ax,0x0
 	001bdde0 farpush ax
 	001bdde8 mov ax,0x3
 	001bddf4 farpush ax
 	001bddfc mov ax,0x0
 	001bde08 farpush ax
 	001bde10 mov mar,0x3cef20
 	001bde1c mov ax,mar
 	001bde28 mov op,ax
 	001bde30 setfuncargs 0x5
 	001bde38 mov ax,0x536f20
 	001bde44 farcall ax
 	001bde4c farsubsp 0x5
 	001bde54 pop op
 	001bde5c sourceline 0x2217
 	001bde64 push op
 	001bde6c mov mar,0x92ef20
 	001bde78 mov ax,mar
 	001bde84 farpush ax
 	001bde8c mov mar,0x3cef20
 	001bde98 mov ax,mar
 	001bdea4 mov op,ax
 	001bdeac setfuncargs 0x1
 	001bdeb4 mov ax,0x7d6f20
 	001bdec0 farcall ax
 	001bdec8 farsubsp 0x1
 	001bded0 pop op
 	001bded8 sourceline 0x2218
 	001bdee0 push op
 	001bdee8 mov ax,0x2
 	001bdef4 farpush ax
 	001bdefc mov mar,0x3cef20
 	001bdf08 mov ax,mar
 	001bdf14 mov op,ax
 	001bdf1c setfuncargs 0x1
 	001bdf24 mov ax,0x51ef20
 	001bdf30 farcall ax
 	001bdf38 farsubsp 0x1
 	001bdf40 pop op
 	001bdf48 sourceline 0x2219
 	001bdf50 mov ax,0x3
 	001bdf5c mov bx,ax
 	001bdf68 mov mar,0x3cef20
 	001bdf74 mov ax,mar
 	001bdf80 push op
 	001bdf88 mov op,ax
 	001bdf90 farpush bx
 	001bdf98 setfuncargs 0x1
 	001bdfa0 mov ax,0x766f20
 	001bdfac farcall ax
 	001bdfb4 farsubsp 0x1
 	001bdfbc pop op
 	001bdfc4 sourceline 0x221a
 	001bdfcc mov mar,0x3cef20
 	001bdfd8 mov ax,mar
 	001bdfe4 push op
 	001bdfec mov op,ax
 	001bdff4 setfuncargs 0x0
 	001bdffc mov ax,0x78ef20
 	001be008 farcall ax
 	001be010 pop op
 	001be018 push ax
 	001be020 mov ax,0x8
 	001be02c pop bx
 	001be034 add bx,ax
 	001be040 mov ax,bx
 	001be04c mov bx,ax
 	001be058 mov mar,0x3cef20
 	001be064 mov ax,mar
 	001be070 push op
 	001be078 mov op,ax
 	001be080 farpush bx
 	001be088 setfuncargs 0x1
 	001be090 mov ax,0x526f20
 	001be09c farcall ax
 	001be0a4 farsubsp 0x1
 	001be0ac pop op
 	001be0b4 sourceline 0x221b
 	001be0bc mov mar,0x3cef20
 	001be0c8 mov ax,mar
 	001be0d4 push op
 	001be0dc mov op,ax
 	001be0e4 setfuncargs 0x0
 	001be0ec mov ax,0xb36f20
 	001be0f8 farcall ax
 	001be100 pop op
 	001be108 push ax
 	001be110 mov ax,0x1
 	001be11c pop bx
 	001be124 sub bx,ax
 	001be130 mov ax,bx
 	001be13c mov bx,ax
 	001be148 mov mar,0x3cef20
 	001be154 mov ax,mar
 	001be160 push op
 	001be168 mov op,ax
 	001be170 farpush bx
 	001be178 setfuncargs 0x1
 	001be180 mov ax,0x70ef20
 	001be18c farcall ax
 	001be194 farsubsp 0x1
 	001be19c pop op
 	001be1a4 sourceline 0x221c
 	001be1ac push op
 	001be1b4 mov ax,0x131
 	001be1c0 farpush ax
 	001be1c8 mov ax,0x397
 	001be1d4 farpush ax
 	001be1dc mov ax,0x94
 	001be1e8 farpush ax
 	001be1f0 mov ax,0xbe
 	001be1fc farpush ax
 	001be204 mov mar,0x3cef20
 	001be210 mov ax,mar
 	001be21c mov op,ax
 	001be224 setfuncargs 0x4
 	001be22c mov ax,0xb2ef20
 	001be238 farcall ax
 	001be240 farsubsp 0x4
 	001be248 pop op
 	001be250 sourceline 0x221d
 	001be258 push op
 	001be260 mov ax,0x397
 	001be26c farpush ax
 	001be274 mov ax,0x7
 	001be280 farpush ax
 	001be288 mov mar,0x3cef20
 	001be294 mov ax,mar
 	001be2a0 mov op,ax
 	001be2a8 setfuncargs 0x2
 	001be2b0 mov ax,0x6eef20
 	001be2bc farcall ax
 	001be2c4 farsubsp 0x2
 	001be2cc pop op
 	001be2d4 sourceline 0x221e
 	001be2dc push op
 	001be2e4 mov ax,-0x1
 	001be2f0 farpush ax
 	001be2f8 mov ax,-0x1
 	001be304 farpush ax
 	001be30c mov ax,0xa3
 	001be318 farpush ax
 	001be320 mov ax,0x2
 	001be32c assertlte ax,0x28
 	001be338 mul ax,0x8
 	001be344 mov cx,ax
 	001be350 mov mar,0x6fef20
 	001be35c add mar,cx
 	001be368 mov ax,mar
 	001be374 mov op,ax
 	001be37c setfuncargs 0x3
 	001be384 mov ax,0xa6ef20
 	001be390 farcall ax
 	001be398 farsubsp 0x3
 	001be3a0 pop op
 	001be3a8 sourceline 0x221f
 	001be3b0 push op
 	001be3b8 mov ax,0x426
 	001be3c4 farpush ax
 	001be3cc mov ax,0x397
 	001be3d8 farpush ax
 	001be3e0 mov ax,0x0
 	001be3ec farpush ax
 	001be3f4 mov ax,0x3
 	001be400 farpush ax
 	001be408 mov ax,0x0
 	001be414 farpush ax
 	001be41c mov ax,0x2
 	001be428 assertlte ax,0x28
 	001be434 mul ax,0x8
 	001be440 mov cx,ax
 	001be44c mov mar,0x6fef20
 	001be458 add mar,cx
 	001be464 mov ax,mar
 	001be470 mov op,ax
 	001be478 setfuncargs 0x5
 	001be480 mov ax,0xa76f20
 	001be48c farcall ax
 	001be494 farsubsp 0x5
 	001be49c pop op
 	001be4a4 sourceline 0x2220
 	001be4ac push op
 	001be4b4 mov ax,-0x1
 	001be4c0 farpush ax
 	001be4c8 mov ax,-0x1
 	001be4d4 farpush ax
 	001be4dc mov ax,0xa5
 	001be4e8 farpush ax
 	001be4f0 mov ax,0x2
 	001be4fc assertlte ax,0x28
 	001be508 mul ax,0x8
 	001be514 mov cx,ax
 	001be520 mov mar,0x6fef20
 	001be52c add mar,cx
 	001be538 mov ax,mar
 	001be544 mov op,ax
 	001be54c setfuncargs 0x3
 	001be554 mov ax,0xa6ef20
 	001be560 farcall ax
 	001be568 farsubsp 0x3
 	001be570 pop op
 	001be578 sourceline 0x2221
 	001be580 push op
 	001be588 mov ax,0x9b
 	001be594 farpush ax
 	001be59c mov mar,0xc5ef20
 	001be5a8 mov ax,mar
 	001be5b4 mov op,ax
 	001be5bc setfuncargs 0x1
 	001be5c4 mov ax,0x51ef20
 	001be5d0 farcall ax
 	001be5d8 farsubsp 0x1
 	001be5e0 pop op
 	001be5e8 sourceline 0x2222
 	001be5f0 push op
 	001be5f8 mov ax,0x426
 	001be604 farpush ax
 	001be60c mov ax,0x397
 	001be618 farpush ax
 	001be620 mov ax,0x0
 	001be62c farpush ax
 	001be634 mov ax,0x3
 	001be640 farpush ax
 	001be648 mov ax,0x0
 	001be654 farpush ax
 	001be65c mov mar,0xc5ef20
 	001be668 mov ax,mar
 	001be674 mov op,ax
 	001be67c setfuncargs 0x5
 	001be684 mov ax,0x536f20
 	001be690 farcall ax
 	001be698 farsubsp 0x5
 	001be6a0 pop op
 	001be6a8 sourceline 0x2224
 	001be6b0 push op
 	001be6b8 mov ax,0x9c
 	001be6c4 farpush ax
 	001be6cc mov mar,0xc5ef20
 	001be6d8 mov ax,mar
 	001be6e4 mov op,ax
 	001be6ec setfuncargs 0x1
 	001be6f4 mov ax,0x51ef20
 	001be700 farcall ax
 	001be708 farsubsp 0x1
 	001be710 pop op
 	001be718 sourceline 0x2225
 	001be720 mov mar,0xc5ef20
 	001be72c mov ax,mar
 	001be738 push op
 	001be740 mov op,ax
 	001be748 setfuncargs 0x0
 	001be750 mov ax,0x78ef20
 	001be75c farcall ax
 	001be764 pop op
 	001be76c push ax
 	001be774 mov ax,0x1
 	001be780 pop bx
 	001be788 sub bx,ax
 	001be794 mov ax,bx
 	001be7a0 mov bx,ax
 	001be7ac mov mar,0xc5ef20
 	001be7b8 mov ax,mar
 	001be7c4 push op
 	001be7cc mov op,ax
 	001be7d4 farpush bx
 	001be7dc setfuncargs 0x1
 	001be7e4 mov ax,0x526f20
 	001be7f0 farcall ax
 	001be7f8 farsubsp 0x1
 	001be800 pop op
 	001be808 sourceline 0x2226
 	001be810 mov mar,0xc5ef20
 	001be81c mov ax,mar
 	001be828 push op
 	001be830 mov op,ax
 	001be838 setfuncargs 0x0
 	001be840 mov ax,0xb36f20
 	001be84c farcall ax
 	001be854 pop op
 	001be85c push ax
 	001be864 mov ax,0x1
 	001be870 pop bx
 	001be878 add bx,ax
 	001be884 mov ax,bx
 	001be890 mov bx,ax
 	001be89c mov mar,0xc5ef20
 	001be8a8 mov ax,mar
 	001be8b4 push op
 	001be8bc mov op,ax
 	001be8c4 farpush bx
 	001be8cc setfuncargs 0x1
 	001be8d4 mov ax,0x70ef20
 	001be8e0 farcall ax
 	001be8e8 farsubsp 0x1
 	001be8f0 pop op
 	001be8f8 sourceline 0x2227
 	001be900 push op
 	001be908 mov ax,0x426
 	001be914 farpush ax
 	001be91c mov ax,0x398
 	001be928 farpush ax
 	001be930 mov ax,0x0
 	001be93c farpush ax
 	001be944 mov ax,0x3
 	001be950 farpush ax
 	001be958 mov ax,0x0
 	001be964 farpush ax
 	001be96c mov mar,0xc5ef20
 	001be978 mov ax,mar
 	001be984 mov op,ax
 	001be98c setfuncargs 0x5
 	001be994 mov ax,0x536f20
 	001be9a0 farcall ax
 	001be9a8 farsubsp 0x5
 	001be9b0 pop op
 	001be9b8 sourceline 0x2228
 	001be9c0 mov ax,0x1
 	001be9cc mov mar,0xd6ef20
 	001be9d8 memwrite4 ax
 	001be9e0 sourceline 0x2229
 	001be9e8 push op
 	001be9f0 mov ax,0x2c4fc6
 	001be9fc farpush ax
 	001bea04 mov mar,0xc5ef20
 	001bea10 mov ax,mar
 	001bea1c mov op,ax
 	001bea24 setfuncargs 0x1
 	001bea2c mov ax,0x6f6f20
 	001bea38 farcall ax
 	001bea40 farsubsp 0x1
 	001bea48 pop op
 	001bea50 sourceline 0x222d
 	001bea58 push op
 	001bea60 mov ax,0x96
 	001bea6c farpush ax
 	001bea74 mov mar,0xc66f20
 	001bea80 mov ax,mar
 	001bea8c mov op,ax
 	001bea94 setfuncargs 0x1
 	001bea9c mov ax,0x51ef20
 	001beaa8 farcall ax
 	001beab0 farsubsp 0x1
 	001beab8 pop op
 	001beac0 sourceline 0x222e
 	001beac8 push op
 	001bead0 mov ax,0x426
 	001beadc farpush ax
 	001beae4 mov ax,0x397
 	001beaf0 farpush ax
 	001beaf8 mov ax,0x0
 	001beb04 farpush ax
 	001beb0c mov ax,0x3
 	001beb18 farpush ax
 	001beb20 mov ax,0x0
 	001beb2c farpush ax
 	001beb34 mov mar,0xc66f20
 	001beb40 mov ax,mar
 	001beb4c mov op,ax
 	001beb54 setfuncargs 0x5
 	001beb5c mov ax,0x536f20
 	001beb68 farcall ax
 	001beb70 farsubsp 0x5
 	001beb78 pop op
 	001beb80 sourceline 0x2231
 	001beb88 push op
 	001beb90 mov ax,0x97
 	001beb9c farpush ax
 	001beba4 mov mar,0xc66f20
 	001bebb0 mov ax,mar
 	001bebbc mov op,ax
 	001bebc4 setfuncargs 0x1
 	001bebcc mov ax,0x51ef20
 	001bebd8 farcall ax
 	001bebe0 farsubsp 0x1
 	001bebe8 pop op
 	001bebf0 sourceline 0x2232
 	001bebf8 mov mar,0xc66f20
 	001bec04 mov ax,mar
 	001bec10 push op
 	001bec18 mov op,ax
 	001bec20 setfuncargs 0x0
 	001bec28 mov ax,0xb36f20
 	001bec34 farcall ax
 	001bec3c pop op
 	001bec44 push ax
 	001bec4c mov ax,0x2
 	001bec58 pop bx
 	001bec60 add bx,ax
 	001bec6c mov ax,bx
 	001bec78 mov bx,ax
 	001bec84 mov mar,0xc66f20
 	001bec90 mov ax,mar
 	001bec9c push op
 	001beca4 mov op,ax
 	001becac farpush bx
 	001becb4 setfuncargs 0x1
 	001becbc mov ax,0x70ef20
 	001becc8 farcall ax
 	001becd0 farsubsp 0x1
 	001becd8 pop op
 	001bece0 sourceline 0x2233
 	001bece8 push op
 	001becf0 mov ax,0x426
 	001becfc farpush ax
 	001bed04 mov ax,0x398
 	001bed10 farpush ax
 	001bed18 mov ax,0x0
 	001bed24 farpush ax
 	001bed2c mov ax,0x3
 	001bed38 farpush ax
 	001bed40 mov ax,0x0
 	001bed4c farpush ax
 	001bed54 mov mar,0xc66f20
 	001bed60 mov ax,mar
 	001bed6c mov op,ax
 	001bed74 setfuncargs 0x5
 	001bed7c mov ax,0x536f20
 	001bed88 farcall ax
 	001bed90 farsubsp 0x5
 	001bed98 pop op
 	001beda0 sourceline 0x2234
 	001beda8 mov ax,0x1
 	001bedb4 mov mar,0xd76f20
 	001bedc0 memwrite4 ax
 	001bedc8 sourceline 0x2235
 	001bedd0 push op
 	001bedd8 mov ax,0x2c4fe7
 	001bede4 farpush ax
 	001bedec mov mar,0xc66f20
 	001bedf8 mov ax,mar
 	001bee04 mov op,ax
 	001bee0c setfuncargs 0x1
 	001bee14 mov ax,0x6f6f20
 	001bee20 farcall ax
 	001bee28 farsubsp 0x1
 	001bee30 pop op
 	001bee38 sourceline 0x2237
 	001bee40 mov ax,0x32
 	001bee4c farpush ax
 	001bee54 setfuncargs 0x1
 	001bee5c mov ax,0x426f20
 	001bee68 farcall ax
 	001bee70 farsubsp 0x1
 	001bee78 sourceline 0x2238
 	001bee80 mov ax,0x0
 	001bee8c mov mar,0xc76f20
 	001bee98 memwrite4 ax
 	001beea0 sourceline 0x2239
 	001beea8 mov ax,0x0
 	001beeb4 mov mar,0xc6ef20
 	001beec0 memwrite4 ax
 	001beec8 sourceline 0x223a
 	001beed0 mov mar,0xc56f20
 	001beedc mov ax,mar
 	001beee8 push op
 	001beef0 mov op,ax
 	001beef8 setfuncargs 0x0
 	001bef00 mov ax,0xc7ef20
 	001bef0c farcall ax
 	001bef14 pop op
 	001bef1c push ax
 	001bef24 mov ax,0x0
 	001bef30 pop bx
 	001bef38 cmpeq bx,ax
 	001bef44 mov ax,bx
 	001bef50 jz 0x001bf730
		001bf730: CONDITIONAL_JUMP
		001bef58: FALL_THROUGH

	[001bef58]
		001bd738: FALL_THROUGH
 	001bef58 sourceline 0x223c
 	001bef60 mov mar,0xc56f20
 	001bef6c mov ax,mar
 	001bef78 push op
 	001bef80 mov op,ax
 	001bef88 setfuncargs 0x0
 	001bef90 mov ax,0xb16f20
 	001bef9c farcall ax
 	001befa4 pop op
 	001befac push ax
 	001befb4 mov ax,0x0
 	001befc0 pop bx
 	001befc8 cmpeq bx,ax
 	001befd4 mov ax,bx
 	001befe0 jz 0x001bf0a8
		001bf0a8: CONDITIONAL_JUMP
		001befe8: FALL_THROUGH

	[001befe8]
		001bef58: FALL_THROUGH
 	001befe8 push op
 	001beff0 mov ax,0x426
 	001beffc farpush ax
 	001bf004 mov ax,0x397
 	001bf010 farpush ax
 	001bf018 mov ax,0x0
 	001bf024 farpush ax
 	001bf02c mov ax,0x3
 	001bf038 farpush ax
 	001bf040 mov ax,0x6
 	001bf04c farpush ax
 	001bf054 mov mar,0xc56f20
 	001bf060 mov ax,mar
 	001bf06c mov op,ax
 	001bf074 setfuncargs 0x5
 	001bf07c mov ax,0x536f20
 	001bf088 farcall ax
 	001bf090 farsubsp 0x5
 	001bf098 pop op
 	001bf0a0 jmp 0x001bf730
		001bf730: UNCONDITIONAL_JUMP

	[001bf0a8]
		001bef58: CONDITIONAL_JUMP
 	001bf0a8 sourceline 0x223d
 	001bf0b0 mov mar,0xc56f20
 	001bf0bc mov ax,mar
 	001bf0c8 push op
 	001bf0d0 mov op,ax
 	001bf0d8 setfuncargs 0x0
 	001bf0e0 mov ax,0xb16f20
 	001bf0ec farcall ax
 	001bf0f4 pop op
 	001bf0fc push ax
 	001bf104 mov ax,0x1
 	001bf110 pop bx
 	001bf118 cmpeq bx,ax
 	001bf124 mov ax,bx
 	001bf130 jz 0x001bf1f8
		001bf1f8: CONDITIONAL_JUMP
		001bf138: FALL_THROUGH

	[001bf138]
		001bf0a8: FALL_THROUGH
 	001bf138 push op
 	001bf140 mov ax,0x426
 	001bf14c farpush ax
 	001bf154 mov ax,0x397
 	001bf160 farpush ax
 	001bf168 mov ax,0x0
 	001bf174 farpush ax
 	001bf17c mov ax,0x3
 	001bf188 farpush ax
 	001bf190 mov ax,0x7
 	001bf19c farpush ax
 	001bf1a4 mov mar,0xc56f20
 	001bf1b0 mov ax,mar
 	001bf1bc mov op,ax
 	001bf1c4 setfuncargs 0x5
 	001bf1cc mov ax,0x536f20
 	001bf1d8 farcall ax
 	001bf1e0 farsubsp 0x5
 	001bf1e8 pop op
 	001bf1f0 jmp 0x001bf730
		001bf730: UNCONDITIONAL_JUMP

	[001bf1f8]
		001bf0a8: CONDITIONAL_JUMP
 	001bf1f8 sourceline 0x223e
 	001bf200 mov mar,0xc56f20
 	001bf20c mov ax,mar
 	001bf218 push op
 	001bf220 mov op,ax
 	001bf228 setfuncargs 0x0
 	001bf230 mov ax,0xb16f20
 	001bf23c farcall ax
 	001bf244 pop op
 	001bf24c push ax
 	001bf254 mov ax,0x2
 	001bf260 pop bx
 	001bf268 cmpeq bx,ax
 	001bf274 mov ax,bx
 	001bf280 jz 0x001bf348
		001bf348: CONDITIONAL_JUMP
		001bf288: FALL_THROUGH

	[001bf288]
		001bf1f8: FALL_THROUGH
 	001bf288 push op
 	001bf290 mov ax,0x426
 	001bf29c farpush ax
 	001bf2a4 mov ax,0x397
 	001bf2b0 farpush ax
 	001bf2b8 mov ax,0x0
 	001bf2c4 farpush ax
 	001bf2cc mov ax,0x3
 	001bf2d8 farpush ax
 	001bf2e0 mov ax,0x8
 	001bf2ec farpush ax
 	001bf2f4 mov mar,0xc56f20
 	001bf300 mov ax,mar
 	001bf30c mov op,ax
 	001bf314 setfuncargs 0x5
 	001bf31c mov ax,0x536f20
 	001bf328 farcall ax
 	001bf330 farsubsp 0x5
 	001bf338 pop op
 	001bf340 jmp 0x001bf730
		001bf730: UNCONDITIONAL_JUMP

	[001bf348]
		001bf1f8: CONDITIONAL_JUMP
 	001bf348 sourceline 0x223f
 	001bf350 mov mar,0xc56f20
 	001bf35c mov ax,mar
 	001bf368 push op
 	001bf370 mov op,ax
 	001bf378 setfuncargs 0x0
 	001bf380 mov ax,0xb16f20
 	001bf38c farcall ax
 	001bf394 pop op
 	001bf39c push ax
 	001bf3a4 mov ax,0x3
 	001bf3b0 pop bx
 	001bf3b8 cmpeq bx,ax
 	001bf3c4 mov ax,bx
 	001bf3d0 jz 0x001bf498
		001bf498: CONDITIONAL_JUMP
		001bf3d8: FALL_THROUGH

	[001bf3d8]
		001bf348: FALL_THROUGH
 	001bf3d8 push op
 	001bf3e0 mov ax,0x426
 	001bf3ec farpush ax
 	001bf3f4 mov ax,0x397
 	001bf400 farpush ax
 	001bf408 mov ax,0x0
 	001bf414 farpush ax
 	001bf41c mov ax,0x3
 	001bf428 farpush ax
 	001bf430 mov ax,0x9
 	001bf43c farpush ax
 	001bf444 mov mar,0xc56f20
 	001bf450 mov ax,mar
 	001bf45c mov op,ax
 	001bf464 setfuncargs 0x5
 	001bf46c mov ax,0x536f20
 	001bf478 farcall ax
 	001bf480 farsubsp 0x5
 	001bf488 pop op
 	001bf490 jmp 0x001bf730
		001bf730: UNCONDITIONAL_JUMP

	[001bf498]
		001bf348: CONDITIONAL_JUMP
 	001bf498 sourceline 0x2240
 	001bf4a0 mov mar,0xc56f20
 	001bf4ac mov ax,mar
 	001bf4b8 push op
 	001bf4c0 mov op,ax
 	001bf4c8 setfuncargs 0x0
 	001bf4d0 mov ax,0xb16f20
 	001bf4dc farcall ax
 	001bf4e4 pop op
 	001bf4ec push ax
 	001bf4f4 mov ax,0x4
 	001bf500 pop bx
 	001bf508 cmpeq bx,ax
 	001bf514 mov ax,bx
 	001bf520 jz 0x001bf5e8
		001bf5e8: CONDITIONAL_JUMP
		001bf528: FALL_THROUGH

	[001bf528]
		001bf498: FALL_THROUGH
 	001bf528 push op
 	001bf530 mov ax,0x426
 	001bf53c farpush ax
 	001bf544 mov ax,0x397
 	001bf550 farpush ax
 	001bf558 mov ax,0x0
 	001bf564 farpush ax
 	001bf56c mov ax,0x3
 	001bf578 farpush ax
 	001bf580 mov ax,0xa
 	001bf58c farpush ax
 	001bf594 mov mar,0xc56f20
 	001bf5a0 mov ax,mar
 	001bf5ac mov op,ax
 	001bf5b4 setfuncargs 0x5
 	001bf5bc mov ax,0x536f20
 	001bf5c8 farcall ax
 	001bf5d0 farsubsp 0x5
 	001bf5d8 pop op
 	001bf5e0 jmp 0x001bf730
		001bf730: UNCONDITIONAL_JUMP

	[001bf5e8]
		001bf498: CONDITIONAL_JUMP
 	001bf5e8 sourceline 0x2241
 	001bf5f0 mov mar,0xc56f20
 	001bf5fc mov ax,mar
 	001bf608 push op
 	001bf610 mov op,ax
 	001bf618 setfuncargs 0x0
 	001bf620 mov ax,0xb16f20
 	001bf62c farcall ax
 	001bf634 pop op
 	001bf63c push ax
 	001bf644 mov ax,0x5
 	001bf650 pop bx
 	001bf658 cmpeq bx,ax
 	001bf664 mov ax,bx
 	001bf670 jz 0x001bf730
		001bf730: CONDITIONAL_JUMP
		001bf678: FALL_THROUGH

	[001bf678]
		001bf5e8: FALL_THROUGH
 	001bf678 push op
 	001bf680 mov ax,0x426
 	001bf68c farpush ax
 	001bf694 mov ax,0x397
 	001bf6a0 farpush ax
 	001bf6a8 mov ax,0x0
 	001bf6b4 farpush ax
 	001bf6bc mov ax,0x3
 	001bf6c8 farpush ax
 	001bf6d0 mov ax,0xb
 	001bf6dc farpush ax
 	001bf6e4 mov mar,0xc56f20
 	001bf6f0 mov ax,mar
 	001bf6fc mov op,ax
 	001bf704 setfuncargs 0x5
 	001bf70c mov ax,0x536f20
 	001bf718 farcall ax
 	001bf720 farsubsp 0x5
 	001bf728 pop op
		001bf730: FALL_THROUGH

	[001bf730]
		001bd738: CONDITIONAL_JUMP
		001befe8: UNCONDITIONAL_JUMP
		001bf138: UNCONDITIONAL_JUMP
		001bf288: UNCONDITIONAL_JUMP
		001bf3d8: UNCONDITIONAL_JUMP
		001bf528: UNCONDITIONAL_JUMP
		001bf5e8: CONDITIONAL_JUMP
		001bf678: FALL_THROUGH
 	001bf730 sourceline 0x2243
 	001bf738 mov mar,0xc56f20
 	001bf744 mov ax,mar
 	001bf750 push op
 	001bf758 mov op,ax
 	001bf760 setfuncargs 0x0
 	001bf768 mov ax,0xc7ef20
 	001bf774 farcall ax
 	001bf77c pop op
 	001bf784 push ax
 	001bf78c mov ax,0x1
 	001bf798 pop bx
 	001bf7a0 cmpeq bx,ax
 	001bf7ac mov ax,bx
 	001bf7b8 jz 0x001bff98
		001bff98: CONDITIONAL_JUMP
		001bf7c0: FALL_THROUGH

	[001bf7c0]
		001bf730: FALL_THROUGH
 	001bf7c0 sourceline 0x2245
 	001bf7c8 mov mar,0xc56f20
 	001bf7d4 mov ax,mar
 	001bf7e0 push op
 	001bf7e8 mov op,ax
 	001bf7f0 setfuncargs 0x0
 	001bf7f8 mov ax,0xb16f20
 	001bf804 farcall ax
 	001bf80c pop op
 	001bf814 push ax
 	001bf81c mov ax,0x0
 	001bf828 pop bx
 	001bf830 cmpeq bx,ax
 	001bf83c mov ax,bx
 	001bf848 jz 0x001bf910
		001bf910: CONDITIONAL_JUMP
		001bf850: FALL_THROUGH

	[001bf850]
		001bf7c0: FALL_THROUGH
 	001bf850 push op
 	001bf858 mov ax,0x426
 	001bf864 farpush ax
 	001bf86c mov ax,0x397
 	001bf878 farpush ax
 	001bf880 mov ax,0x0
 	001bf88c farpush ax
 	001bf894 mov ax,0x3
 	001bf8a0 farpush ax
 	001bf8a8 mov ax,0xb
 	001bf8b4 farpush ax
 	001bf8bc mov mar,0xc56f20
 	001bf8c8 mov ax,mar
 	001bf8d4 mov op,ax
 	001bf8dc setfuncargs 0x5
 	001bf8e4 mov ax,0x536f20
 	001bf8f0 farcall ax
 	001bf8f8 farsubsp 0x5
 	001bf900 pop op
 	001bf908 jmp 0x001bff98
		001bff98: UNCONDITIONAL_JUMP

	[001bf910]
		001bf7c0: CONDITIONAL_JUMP
 	001bf910 sourceline 0x2246
 	001bf918 mov mar,0xc56f20
 	001bf924 mov ax,mar
 	001bf930 push op
 	001bf938 mov op,ax
 	001bf940 setfuncargs 0x0
 	001bf948 mov ax,0xb16f20
 	001bf954 farcall ax
 	001bf95c pop op
 	001bf964 push ax
 	001bf96c mov ax,0x1
 	001bf978 pop bx
 	001bf980 cmpeq bx,ax
 	001bf98c mov ax,bx
 	001bf998 jz 0x001bfa60
		001bfa60: CONDITIONAL_JUMP
		001bf9a0: FALL_THROUGH

	[001bf9a0]
		001bf910: FALL_THROUGH
 	001bf9a0 push op
 	001bf9a8 mov ax,0x426
 	001bf9b4 farpush ax
 	001bf9bc mov ax,0x397
 	001bf9c8 farpush ax
 	001bf9d0 mov ax,0x0
 	001bf9dc farpush ax
 	001bf9e4 mov ax,0x3
 	001bf9f0 farpush ax
 	001bf9f8 mov ax,0xc
 	001bfa04 farpush ax
 	001bfa0c mov mar,0xc56f20
 	001bfa18 mov ax,mar
 	001bfa24 mov op,ax
 	001bfa2c setfuncargs 0x5
 	001bfa34 mov ax,0x536f20
 	001bfa40 farcall ax
 	001bfa48 farsubsp 0x5
 	001bfa50 pop op
 	001bfa58 jmp 0x001bff98
		001bff98: UNCONDITIONAL_JUMP

	[001bfa60]
		001bf910: CONDITIONAL_JUMP
 	001bfa60 sourceline 0x2247
 	001bfa68 mov mar,0xc56f20
 	001bfa74 mov ax,mar
 	001bfa80 push op
 	001bfa88 mov op,ax
 	001bfa90 setfuncargs 0x0
 	001bfa98 mov ax,0xb16f20
 	001bfaa4 farcall ax
 	001bfaac pop op
 	001bfab4 push ax
 	001bfabc mov ax,0x2
 	001bfac8 pop bx
 	001bfad0 cmpeq bx,ax
 	001bfadc mov ax,bx
 	001bfae8 jz 0x001bfbb0
		001bfbb0: CONDITIONAL_JUMP
		001bfaf0: FALL_THROUGH

	[001bfaf0]
		001bfa60: FALL_THROUGH
 	001bfaf0 push op
 	001bfaf8 mov ax,0x426
 	001bfb04 farpush ax
 	001bfb0c mov ax,0x397
 	001bfb18 farpush ax
 	001bfb20 mov ax,0x0
 	001bfb2c farpush ax
 	001bfb34 mov ax,0x3
 	001bfb40 farpush ax
 	001bfb48 mov ax,0xd
 	001bfb54 farpush ax
 	001bfb5c mov mar,0xc56f20
 	001bfb68 mov ax,mar
 	001bfb74 mov op,ax
 	001bfb7c setfuncargs 0x5
 	001bfb84 mov ax,0x536f20
 	001bfb90 farcall ax
 	001bfb98 farsubsp 0x5
 	001bfba0 pop op
 	001bfba8 jmp 0x001bff98
		001bff98: UNCONDITIONAL_JUMP

	[001bfbb0]
		001bfa60: CONDITIONAL_JUMP
 	001bfbb0 sourceline 0x2248
 	001bfbb8 mov mar,0xc56f20
 	001bfbc4 mov ax,mar
 	001bfbd0 push op
 	001bfbd8 mov op,ax
 	001bfbe0 setfuncargs 0x0
 	001bfbe8 mov ax,0xb16f20
 	001bfbf4 farcall ax
 	001bfbfc pop op
 	001bfc04 push ax
 	001bfc0c mov ax,0x3
 	001bfc18 pop bx
 	001bfc20 cmpeq bx,ax
 	001bfc2c mov ax,bx
 	001bfc38 jz 0x001bfd00
		001bfd00: CONDITIONAL_JUMP
		001bfc40: FALL_THROUGH

	[001bfc40]
		001bfbb0: FALL_THROUGH
 	001bfc40 push op
 	001bfc48 mov ax,0x426
 	001bfc54 farpush ax
 	001bfc5c mov ax,0x397
 	001bfc68 farpush ax
 	001bfc70 mov ax,0x0
 	001bfc7c farpush ax
 	001bfc84 mov ax,0x3
 	001bfc90 farpush ax
 	001bfc98 mov ax,0xe
 	001bfca4 farpush ax
 	001bfcac mov mar,0xc56f20
 	001bfcb8 mov ax,mar
 	001bfcc4 mov op,ax
 	001bfccc setfuncargs 0x5
 	001bfcd4 mov ax,0x536f20
 	001bfce0 farcall ax
 	001bfce8 farsubsp 0x5
 	001bfcf0 pop op
 	001bfcf8 jmp 0x001bff98
		001bff98: UNCONDITIONAL_JUMP

	[001bfd00]
		001bfbb0: CONDITIONAL_JUMP
 	001bfd00 sourceline 0x2249
 	001bfd08 mov mar,0xc56f20
 	001bfd14 mov ax,mar
 	001bfd20 push op
 	001bfd28 mov op,ax
 	001bfd30 setfuncargs 0x0
 	001bfd38 mov ax,0xb16f20
 	001bfd44 farcall ax
 	001bfd4c pop op
 	001bfd54 push ax
 	001bfd5c mov ax,0x4
 	001bfd68 pop bx
 	001bfd70 cmpeq bx,ax
 	001bfd7c mov ax,bx
 	001bfd88 jz 0x001bfe50
		001bfe50: CONDITIONAL_JUMP
		001bfd90: FALL_THROUGH

	[001bfd90]
		001bfd00: FALL_THROUGH
 	001bfd90 push op
 	001bfd98 mov ax,0x426
 	001bfda4 farpush ax
 	001bfdac mov ax,0x397
 	001bfdb8 farpush ax
 	001bfdc0 mov ax,0x0
 	001bfdcc farpush ax
 	001bfdd4 mov ax,0x3
 	001bfde0 farpush ax
 	001bfde8 mov ax,0xf
 	001bfdf4 farpush ax
 	001bfdfc mov mar,0xc56f20
 	001bfe08 mov ax,mar
 	001bfe14 mov op,ax
 	001bfe1c setfuncargs 0x5
 	001bfe24 mov ax,0x536f20
 	001bfe30 farcall ax
 	001bfe38 farsubsp 0x5
 	001bfe40 pop op
 	001bfe48 jmp 0x001bff98
		001bff98: UNCONDITIONAL_JUMP

	[001bfe50]
		001bfd00: CONDITIONAL_JUMP
 	001bfe50 sourceline 0x224a
 	001bfe58 mov mar,0xc56f20
 	001bfe64 mov ax,mar
 	001bfe70 push op
 	001bfe78 mov op,ax
 	001bfe80 setfuncargs 0x0
 	001bfe88 mov ax,0xb16f20
 	001bfe94 farcall ax
 	001bfe9c pop op
 	001bfea4 push ax
 	001bfeac mov ax,0x5
 	001bfeb8 pop bx
 	001bfec0 cmpeq bx,ax
 	001bfecc mov ax,bx
 	001bfed8 jz 0x001bff98
		001bff98: CONDITIONAL_JUMP
		001bfee0: FALL_THROUGH

	[001bfee0]
		001bfe50: FALL_THROUGH
 	001bfee0 push op
 	001bfee8 mov ax,0x426
 	001bfef4 farpush ax
 	001bfefc mov ax,0x397
 	001bff08 farpush ax
 	001bff10 mov ax,0x0
 	001bff1c farpush ax
 	001bff24 mov ax,0x3
 	001bff30 farpush ax
 	001bff38 mov ax,0x10
 	001bff44 farpush ax
 	001bff4c mov mar,0xc56f20
 	001bff58 mov ax,mar
 	001bff64 mov op,ax
 	001bff6c setfuncargs 0x5
 	001bff74 mov ax,0x536f20
 	001bff80 farcall ax
 	001bff88 farsubsp 0x5
 	001bff90 pop op
		001bff98: FALL_THROUGH

	[001bff98]
		001bf730: CONDITIONAL_JUMP
		001bf850: UNCONDITIONAL_JUMP
		001bf9a0: UNCONDITIONAL_JUMP
		001bfaf0: UNCONDITIONAL_JUMP
		001bfc40: UNCONDITIONAL_JUMP
		001bfd90: UNCONDITIONAL_JUMP
		001bfe50: CONDITIONAL_JUMP
		001bfee0: FALL_THROUGH
 	001bff98 sourceline 0x224c
 	001bffa0 mov ax,0x1e
 	001bffac farpush ax
 	001bffb4 setfuncargs 0x1
 	001bffbc mov ax,0x426f20
 	001bffc8 farcall ax
 	001bffd0 farsubsp 0x1
 	001bffd8 sourceline 0x224d
 	001bffe0 push op
 	001bffe8 mov ax,0xe0
 	001bfff4 farpush ax
 	001bfffc mov mar,0xc56f20
 	001c0008 mov ax,mar
 	001c0014 mov op,ax
 	001c001c setfuncargs 0x1
 	001c0024 mov ax,0x51ef20
 	001c0030 farcall ax
 	001c0038 farsubsp 0x1
 	001c0040 pop op
 	001c0048 sourceline 0x224e
 	001c0050 mov ax,0x3
 	001c005c farpush ax
 	001c0064 setfuncargs 0x1
 	001c006c mov ax,0xbd6f20
 	001c0078 farcall ax
 	001c0080 farsubsp 0x1
 	001c0088 sourceline 0x2250
 	001c0090 push op
 	001c0098 mov ax,0x130
 	001c00a4 farpush ax
 	001c00ac mov ax,0x397
 	001c00b8 farpush ax
 	001c00c0 mov ax,0x84
 	001c00cc farpush ax
 	001c00d4 mov ax,0x8e
 	001c00e0 farpush ax
 	001c00e8 mov mar,0xc56f20
 	001c00f4 mov ax,mar
 	001c0100 mov op,ax
 	001c0108 setfuncargs 0x4
 	001c0110 mov ax,0xb2ef20
 	001c011c farcall ax
 	001c0124 farsubsp 0x4
 	001c012c pop op
 	001c0134 sourceline 0x2251
 	001c013c mov ax,0x3
 	001c0148 farpush ax
 	001c0150 setfuncargs 0x1
 	001c0158 mov ax,0xc1ef20
 	001c0164 farcall ax
 	001c016c farsubsp 0x1
 	001c0174 sourceline 0x2252
 	001c017c push op
 	001c0184 mov ax,0xa2
 	001c0190 farpush ax
 	001c0198 mov mar,0xc56f20
 	001c01a4 mov ax,mar
 	001c01b0 mov op,ax
 	001c01b8 setfuncargs 0x1
 	001c01c0 mov ax,0x51ef20
 	001c01cc farcall ax
 	001c01d4 farsubsp 0x1
 	001c01dc pop op
 	001c01e4 sourceline 0x2253
 	001c01ec mov mar,0xc56f20
 	001c01f8 mov ax,mar
 	001c0204 push op
 	001c020c mov op,ax
 	001c0214 setfuncargs 0x0
 	001c021c mov ax,0x78ef20
 	001c0228 farcall ax
 	001c0230 pop op
 	001c0238 push ax
 	001c0240 mov ax,0x6
 	001c024c pop bx
 	001c0254 sub bx,ax
 	001c0260 mov ax,bx
 	001c026c mov bx,ax
 	001c0278 mov mar,0xc56f20
 	001c0284 mov ax,mar
 	001c0290 push op
 	001c0298 mov op,ax
 	001c02a0 farpush bx
 	001c02a8 setfuncargs 0x1
 	001c02b0 mov ax,0x526f20
 	001c02bc farcall ax
 	001c02c4 farsubsp 0x1
 	001c02cc pop op
 	001c02d4 sourceline 0x2254
 	001c02dc push op
 	001c02e4 mov ax,0x426
 	001c02f0 farpush ax
 	001c02f8 mov ax,0x398
 	001c0304 farpush ax
 	001c030c mov ax,0x1
 	001c0318 farpush ax
 	001c0320 mov ax,0x3
 	001c032c farpush ax
 	001c0334 mov ax,0x0
 	001c0340 farpush ax
 	001c0348 mov mar,0xc56f20
 	001c0354 mov ax,mar
 	001c0360 mov op,ax
 	001c0368 setfuncargs 0x5
 	001c0370 mov ax,0x536f20
 	001c037c farcall ax
 	001c0384 farsubsp 0x5
 	001c038c pop op
 	001c0394 sourceline 0x2256
 	001c039c mov ax,0x384
 	001c03a8 mov bx,ax
 	001c03b4 mov mar,0xc56f20
 	001c03c0 mov ax,mar
 	001c03cc push op
 	001c03d4 mov op,ax
 	001c03dc farpush bx
 	001c03e4 setfuncargs 0x1
 	001c03ec mov ax,0xcaef20
 	001c03f8 farcall ax
 	001c0400 farsubsp 0x1
 	001c0408 pop op
 	001c0410 sourceline 0x2259
 	001c0418 mov ax,0x4
 	001c0424 farpush ax
 	001c042c setfuncargs 0x1
 	001c0434 mov ax,0xc1ef20
 	001c0440 farcall ax
 	001c0448 farsubsp 0x1
 	001c0450 sourceline 0x225a
 	001c0458 mov ax,0x0
 	001c0464 push ax
 	001c046c mov ax,0x5
 	001c0478 assertlte ax,0x32
 	001c0484 mul ax,0x8
 	001c0490 mov cx,ax
 	001c049c pop ax
 	001c04a4 mov bx,ax
 	001c04b0 mov mar,0x6c6f20
 	001c04bc add mar,cx
 	001c04c8 mov ax,mar
 	001c04d4 push op
 	001c04dc mov op,ax
 	001c04e4 farpush bx
 	001c04ec setfuncargs 0x1
 	001c04f4 mov ax,0xa66f20
 	001c0500 farcall ax
 	001c0508 farsubsp 0x1
 	001c0510 pop op
 	001c0518 sourceline 0x225b
 	001c0520 mov ax,0x0
 	001c052c mov bx,ax
 	001c0538 mov mar,0x3cef20
 	001c0544 mov ax,mar
 	001c0550 push op
 	001c0558 mov op,ax
 	001c0560 farpush bx
 	001c0568 setfuncargs 0x1
 	001c0570 mov ax,0xcaef20
 	001c057c farcall ax
 	001c0584 farsubsp 0x1
 	001c058c pop op
		001c0594: FALL_THROUGH

	[001c0594]
		001bd4e0: UNCONDITIONAL_JUMP
		001bd6e4: UNCONDITIONAL_JUMP
		001bff98: FALL_THROUGH
 	001c0594 sourceline 0x225e
 	001c059c jmp 0x001c0764
		001c0764: UNCONDITIONAL_JUMP

	[001c05a4]
		001bd418: CONDITIONAL_JUMP
 	001c05a4 sourceline 0x2261
 	001c05ac push op
 	001c05b4 mov ax,0x397
 	001c05c0 farpush ax
 	001c05c8 mov ax,0x6b
 	001c05d4 farpush ax
 	001c05dc mov ax,0x57
 	001c05e8 farpush ax
 	001c05f0 mov mar,0x3cef20
 	001c05fc mov ax,mar
 	001c0608 mov op,ax
 	001c0610 setfuncargs 0x3
 	001c0618 mov ax,0x726f20
 	001c0624 farcall ax
 	001c062c farsubsp 0x3
 	001c0634 pop op
 	001c063c sourceline 0x2262
 	001c0644 mov ax,0x1
 	001c0650 mov bx,ax
 	001c065c mov mar,0x3cef20
 	001c0668 mov ax,mar
 	001c0674 push op
 	001c067c mov op,ax
 	001c0684 farpush bx
 	001c068c setfuncargs 0x1
 	001c0694 mov ax,0x69ef20
 	001c06a0 farcall ax
 	001c06a8 farsubsp 0x1
 	001c06b0 pop op
 	001c06b8 sourceline 0x2264
 	001c06c0 push op
 	001c06c8 mov ax,0x2c50a5
 	001c06d4 farpush ax
 	001c06dc mov ax,0x138
 	001c06e8 farpush ax
 	001c06f0 mov ax,0x92
 	001c06fc farpush ax
 	001c0704 mov ax,0x0
 	001c0710 farpush ax
 	001c0718 mov mar,0x3cef20
 	001c0724 mov ax,mar
 	001c0730 mov op,ax
 	001c0738 setfuncargs 0x4
 	001c0740 mov ax,0x6aef20
 	001c074c farcall ax
 	001c0754 farsubsp 0x4
 	001c075c pop op
		001c0764: FALL_THROUGH

	[001c0764]
		001c0594: UNCONDITIONAL_JUMP
		001c05a4: FALL_THROUGH
 	001c0764 sourceline 0x2266
 	001c076c jmp 0x001c0b08
		001c0b08: UNCONDITIONAL_JUMP

	[001c0774]
		001bd378: CONDITIONAL_JUMP
 	001c0774 sourceline 0x226a
 	001c077c push op
 	001c0784 mov ax,0x397
 	001c0790 farpush ax
 	001c0798 mov ax,0x6b
 	001c07a4 farpush ax
 	001c07ac mov ax,0x57
 	001c07b8 farpush ax
 	001c07c0 mov mar,0x3cef20
 	001c07cc mov ax,mar
 	001c07d8 mov op,ax
 	001c07e0 setfuncargs 0x3
 	001c07e8 mov ax,0x726f20
 	001c07f4 farcall ax
 	001c07fc farsubsp 0x3
 	001c0804 pop op
 	001c080c sourceline 0x226b
 	001c0814 mov mar,0x3cef20
 	001c0820 mov ax,mar
 	001c082c push op
 	001c0834 mov op,ax
 	001c083c setfuncargs 0x0
 	001c0844 mov ax,0x89ef20
 	001c0850 farcall ax
 	001c0858 pop op
 	001c0860 push ax
 	001c0868 mov mar,0x956f20
 	001c0874 mov ax,mar
 	001c0880 pop bx
 	001c0888 cmpeq bx,ax
 	001c0894 mov ax,bx
 	001c08a0 jz 0x001c09e0
		001c09e0: CONDITIONAL_JUMP
		001c08a8: FALL_THROUGH

	[001c08a8]
		001c0774: FALL_THROUGH
 	001c08a8 sourceline 0x226d
 	001c08b0 mov ax,0x1
 	001c08bc mov bx,ax
 	001c08c8 mov mar,0x3cef20
 	001c08d4 mov ax,mar
 	001c08e0 push op
 	001c08e8 mov op,ax
 	001c08f0 farpush bx
 	001c08f8 setfuncargs 0x1
 	001c0900 mov ax,0x69ef20
 	001c090c farcall ax
 	001c0914 farsubsp 0x1
 	001c091c pop op
 	001c0924 sourceline 0x226f
 	001c092c push op
 	001c0934 mov ax,0x2c52db
 	001c0940 farpush ax
 	001c0948 mov ax,0x138
 	001c0954 farpush ax
 	001c095c mov ax,0x92
 	001c0968 farpush ax
 	001c0970 mov ax,0x0
 	001c097c farpush ax
 	001c0984 mov mar,0x3cef20
 	001c0990 mov ax,mar
 	001c099c mov op,ax
 	001c09a4 setfuncargs 0x4
 	001c09ac mov ax,0x6aef20
 	001c09b8 farcall ax
 	001c09c0 farsubsp 0x4
 	001c09c8 pop op
 	001c09d0 sourceline 0x2270
 	001c09d8 jmp 0x001c0b08
		001c0b08: UNCONDITIONAL_JUMP

	[001c09e0]
		001c0774: CONDITIONAL_JUMP
 	001c09e0 sourceline 0x2273
 	001c09e8 mov ax,0x1
 	001c09f4 mov bx,ax
 	001c0a00 mov mar,0x3cef20
 	001c0a0c mov ax,mar
 	001c0a18 push op
 	001c0a20 mov op,ax
 	001c0a28 farpush bx
 	001c0a30 setfuncargs 0x1
 	001c0a38 mov ax,0x69ef20
 	001c0a44 farcall ax
 	001c0a4c farsubsp 0x1
 	001c0a54 pop op
 	001c0a5c sourceline 0x2275
 	001c0a64 push op
 	001c0a6c mov ax,0x2c50a5
 	001c0a78 farpush ax
 	001c0a80 mov ax,0x138
 	001c0a8c farpush ax
 	001c0a94 mov ax,0x92
 	001c0aa0 farpush ax
 	001c0aa8 mov ax,0x0
 	001c0ab4 farpush ax
 	001c0abc mov mar,0x3cef20
 	001c0ac8 mov ax,mar
 	001c0ad4 mov op,ax
 	001c0adc setfuncargs 0x4
 	001c0ae4 mov ax,0x6aef20
 	001c0af0 farcall ax
 	001c0af8 farsubsp 0x4
 	001c0b00 pop op
		001c0b08: FALL_THROUGH

	[001c0b08]
		001c0764: UNCONDITIONAL_JUMP
		001c08a8: UNCONDITIONAL_JUMP
		001c09e0: FALL_THROUGH
 	001c0b08 sourceline 0x2278
 	001c0b10 mov ax,0x0
 	001c0b1c ret

cOldIranian_UseInv$0:
	[001c0b20]
 	001c0b20 sourceline 0x227d
 	001c0b28 thisaddr
 	001c0b30 sourceline 0x227e
 	001c0b38 push op
 	001c0b40 mov ax,0x397
 	001c0b4c farpush ax
 	001c0b54 mov ax,0x6a
 	001c0b60 farpush ax
 	001c0b68 mov ax,0x1e
 	001c0b74 farpush ax
*	001c0b7c mov mar,0x3cef20
 	001c0b88 mov ax,mar
 	001c0b94 mov op,ax
 	001c0b9c setfuncargs 0x3
 	001c0ba4 mov ax,0x726f20
 	001c0bb0 farcall ax
 	001c0bb8 farsubsp 0x3
 	001c0bc0 pop op
 	001c0bc8 sourceline 0x227f
 	001c0bd0 mov mar,0xc56f20
 	001c0bdc mov ax,mar
 	001c0be8 push op
 	001c0bf0 mov op,ax
 	001c0bf8 setfuncargs 0x0
 	001c0c00 mov ax,0x516f20
 	001c0c0c farcall ax
 	001c0c14 pop op
 	001c0c1c push ax
 	001c0c24 mov ax,0xa2
 	001c0c30 pop bx
 	001c0c38 cmpneq bx,ax
 	001c0c44 mov ax,bx
 	001c0c50 jz 0x001c0d90
		001c0d90: CONDITIONAL_JUMP
		001c0c58: FALL_THROUGH

	[001c0c58]
		001c0b20: FALL_THROUGH
 	001c0c58 sourceline 0x2281
 	001c0c60 mov ax,0x1
 	001c0c6c mov bx,ax
 	001c0c78 mov mar,0x3cef20
 	001c0c84 mov ax,mar
 	001c0c90 push op
 	001c0c98 mov op,ax
 	001c0ca0 farpush bx
 	001c0ca8 setfuncargs 0x1
 	001c0cb0 mov ax,0x69ef20
 	001c0cbc farcall ax
 	001c0cc4 farsubsp 0x1
 	001c0ccc pop op
 	001c0cd4 sourceline 0x2283
 	001c0cdc push op
 	001c0ce4 mov ax,0x2c5344
 	001c0cf0 farpush ax
 	001c0cf8 mov ax,0x138
 	001c0d04 farpush ax
 	001c0d0c mov ax,0x92
 	001c0d18 farpush ax
 	001c0d20 mov ax,0x0
 	001c0d2c farpush ax
 	001c0d34 mov mar,0x3cef20
 	001c0d40 mov ax,mar
 	001c0d4c mov op,ax
 	001c0d54 setfuncargs 0x4
 	001c0d5c mov ax,0x6aef20
 	001c0d68 farcall ax
 	001c0d70 farsubsp 0x4
 	001c0d78 pop op
 	001c0d80 sourceline 0x2284
 	001c0d88 jmp 0x001c108c
		001c108c: UNCONDITIONAL_JUMP

	[001c0d90]
		001c0b20: CONDITIONAL_JUMP
 	001c0d90 sourceline 0x2287
 	001c0d98 mov mar,0x3cef20
 	001c0da4 mov ax,mar
 	001c0db0 push op
 	001c0db8 mov op,ax
 	001c0dc0 setfuncargs 0x0
 	001c0dc8 mov ax,0x89ef20
 	001c0dd4 farcall ax
 	001c0ddc pop op
 	001c0de4 push ax
 	001c0dec mov mar,0x956f20
 	001c0df8 mov ax,mar
 	001c0e04 pop bx
 	001c0e0c cmpeq bx,ax
 	001c0e18 mov ax,bx
 	001c0e24 jz 0x001c0f64
		001c0f64: CONDITIONAL_JUMP
		001c0e2c: FALL_THROUGH

	[001c0e2c]
		001c0d90: FALL_THROUGH
 	001c0e2c sourceline 0x2289
 	001c0e34 mov ax,0x1
 	001c0e40 mov bx,ax
 	001c0e4c mov mar,0x3cef20
 	001c0e58 mov ax,mar
 	001c0e64 push op
 	001c0e6c mov op,ax
 	001c0e74 farpush bx
 	001c0e7c setfuncargs 0x1
 	001c0e84 mov ax,0x69ef20
 	001c0e90 farcall ax
 	001c0e98 farsubsp 0x1
 	001c0ea0 pop op
 	001c0ea8 sourceline 0x228b
 	001c0eb0 push op
 	001c0eb8 mov ax,0x2c52db
 	001c0ec4 farpush ax
 	001c0ecc mov ax,0x138
 	001c0ed8 farpush ax
 	001c0ee0 mov ax,0x92
 	001c0eec farpush ax
 	001c0ef4 mov ax,0x0
 	001c0f00 farpush ax
 	001c0f08 mov mar,0x3cef20
 	001c0f14 mov ax,mar
 	001c0f20 mov op,ax
 	001c0f28 setfuncargs 0x4
 	001c0f30 mov ax,0x6aef20
 	001c0f3c farcall ax
 	001c0f44 farsubsp 0x4
 	001c0f4c pop op
 	001c0f54 sourceline 0x228c
 	001c0f5c jmp 0x001c108c
		001c108c: UNCONDITIONAL_JUMP

	[001c0f64]
		001c0d90: CONDITIONAL_JUMP
 	001c0f64 sourceline 0x228f
 	001c0f6c mov ax,0x1
 	001c0f78 mov bx,ax
 	001c0f84 mov mar,0x3cef20
 	001c0f90 mov ax,mar
 	001c0f9c push op
 	001c0fa4 mov op,ax
 	001c0fac farpush bx
 	001c0fb4 setfuncargs 0x1
 	001c0fbc mov ax,0x69ef20
 	001c0fc8 farcall ax
 	001c0fd0 farsubsp 0x1
 	001c0fd8 pop op
 	001c0fe0 sourceline 0x2291
 	001c0fe8 push op
 	001c0ff0 mov ax,0x2c5344
 	001c0ffc farpush ax
 	001c1004 mov ax,0x138
 	001c1010 farpush ax
 	001c1018 mov ax,0x92
 	001c1024 farpush ax
 	001c102c mov ax,0x0
 	001c1038 farpush ax
 	001c1040 mov mar,0x3cef20
 	001c104c mov ax,mar
 	001c1058 mov op,ax
 	001c1060 setfuncargs 0x4
 	001c1068 mov ax,0x6aef20
 	001c1074 farcall ax
 	001c107c farsubsp 0x4
 	001c1084 pop op
		001c108c: FALL_THROUGH

	[001c108c]
		001c0c58: UNCONDITIONAL_JUMP
		001c0e2c: UNCONDITIONAL_JUMP
		001c0f64: FALL_THROUGH
 	001c108c sourceline 0x2294
 	001c1094 mov ax,0x0
 	001c10a0 ret

cGuard_UseInv$0:
	[001c10a4]
 	001c10a4 sourceline 0x2299
 	001c10ac thisaddr
 	001c10b4 sourceline 0x229a
*	001c10bc mov mar,0xc56f20
 	001c10c8 mov ax,mar
 	001c10d4 push op
 	001c10dc mov op,ax
 	001c10e4 setfuncargs 0x0
 	001c10ec mov ax,0x516f20
 	001c10f8 farcall ax
 	001c1100 pop op
 	001c1108 push ax
 	001c1110 mov ax,0xa2
 	001c111c pop bx
 	001c1124 cmpneq bx,ax
 	001c1130 mov ax,bx
 	001c113c jz 0x001c5194
		001c5194: CONDITIONAL_JUMP
		001c1144: FALL_THROUGH

	[001c1144]
		001c10a4: FALL_THROUGH
 	001c1144 sourceline 0x229c
 	001c114c mov mar,0x3cef20
 	001c1158 mov ax,mar
 	001c1164 push op
 	001c116c mov op,ax
 	001c1174 setfuncargs 0x0
 	001c117c mov ax,0x89ef20
 	001c1188 farcall ax
 	001c1190 pop op
 	001c1198 push ax
 	001c11a0 mov mar,0x8cef20
 	001c11ac mov ax,mar
 	001c11b8 pop bx
 	001c11c0 cmpeq bx,ax
 	001c11cc mov ax,bx
 	001c11d8 jnz 0x001c1294
		001c1294: CONDITIONAL_JUMP
		001c11e0: FALL_THROUGH

	[001c11e0]
		001c1144: FALL_THROUGH
 	001c11e0 push ax
 	001c11e8 mov mar,0x3cef20
 	001c11f4 mov ax,mar
 	001c1200 push op
 	001c1208 mov op,ax
 	001c1210 setfuncargs 0x0
 	001c1218 mov ax,0x89ef20
 	001c1224 farcall ax
 	001c122c pop op
 	001c1234 push ax
 	001c123c mov mar,0x8d6f20
 	001c1248 mov ax,mar
 	001c1254 pop bx
 	001c125c cmpeq bx,ax
 	001c1268 mov ax,bx
 	001c1274 pop bx
 	001c127c lor bx,ax
 	001c1288 mov ax,bx
		001c1294: FALL_THROUGH

	[001c1294]
		001c1144: CONDITIONAL_JUMP
		001c11e0: FALL_THROUGH
 	001c1294 jnz 0x001c1350
		001c1350: CONDITIONAL_JUMP
		001c129c: FALL_THROUGH

	[001c129c]
		001c1294: FALL_THROUGH
 	001c129c push ax
 	001c12a4 mov mar,0x3cef20
 	001c12b0 mov ax,mar
 	001c12bc push op
 	001c12c4 mov op,ax
 	001c12cc setfuncargs 0x0
 	001c12d4 mov ax,0x89ef20
 	001c12e0 farcall ax
 	001c12e8 pop op
 	001c12f0 push ax
 	001c12f8 mov mar,0x8b6f20
 	001c1304 mov ax,mar
 	001c1310 pop bx
 	001c1318 cmpeq bx,ax
 	001c1324 mov ax,bx
 	001c1330 pop bx
 	001c1338 lor bx,ax
 	001c1344 mov ax,bx
		001c1350: FALL_THROUGH

	[001c1350]
		001c1294: CONDITIONAL_JUMP
		001c129c: FALL_THROUGH
 	001c1350 jnz 0x001c140c
		001c140c: CONDITIONAL_JUMP
		001c1358: FALL_THROUGH

	[001c1358]
		001c1350: FALL_THROUGH
 	001c1358 push ax
 	001c1360 mov mar,0x3cef20
 	001c136c mov ax,mar
 	001c1378 push op
 	001c1380 mov op,ax
 	001c1388 setfuncargs 0x0
 	001c1390 mov ax,0x89ef20
 	001c139c farcall ax
 	001c13a4 pop op
 	001c13ac push ax
 	001c13b4 mov mar,0x8bef20
 	001c13c0 mov ax,mar
 	001c13cc pop bx
 	001c13d4 cmpeq bx,ax
 	001c13e0 mov ax,bx
 	001c13ec pop bx
 	001c13f4 lor bx,ax
 	001c1400 mov ax,bx
		001c140c: FALL_THROUGH

	[001c140c]
		001c1350: CONDITIONAL_JUMP
		001c1358: FALL_THROUGH
 	001c140c jnz 0x001c14c8
		001c14c8: CONDITIONAL_JUMP
		001c1414: FALL_THROUGH

	[001c1414]
		001c140c: FALL_THROUGH
 	001c1414 push ax
 	001c141c mov mar,0x3cef20
 	001c1428 mov ax,mar
 	001c1434 push op
 	001c143c mov op,ax
 	001c1444 setfuncargs 0x0
 	001c144c mov ax,0x89ef20
 	001c1458 farcall ax
 	001c1460 pop op
 	001c1468 push ax
 	001c1470 mov mar,0x8c6f20
 	001c147c mov ax,mar
 	001c1488 pop bx
 	001c1490 cmpeq bx,ax
 	001c149c mov ax,bx
 	001c14a8 pop bx
 	001c14b0 lor bx,ax
 	001c14bc mov ax,bx
		001c14c8: FALL_THROUGH

	[001c14c8]
		001c140c: CONDITIONAL_JUMP
		001c1414: FALL_THROUGH
 	001c14c8 jnz 0x001c1584
		001c1584: CONDITIONAL_JUMP
		001c14d0: FALL_THROUGH

	[001c14d0]
		001c14c8: FALL_THROUGH
 	001c14d0 push ax
 	001c14d8 mov mar,0x3cef20
 	001c14e4 mov ax,mar
 	001c14f0 push op
 	001c14f8 mov op,ax
 	001c1500 setfuncargs 0x0
 	001c1508 mov ax,0x89ef20
 	001c1514 farcall ax
 	001c151c pop op
 	001c1524 push ax
 	001c152c mov mar,0x7def20
 	001c1538 mov ax,mar
 	001c1544 pop bx
 	001c154c cmpeq bx,ax
 	001c1558 mov ax,bx
 	001c1564 pop bx
 	001c156c lor bx,ax
 	001c1578 mov ax,bx
		001c1584: FALL_THROUGH

	[001c1584]
		001c14c8: CONDITIONAL_JUMP
		001c14d0: FALL_THROUGH
 	001c1584 jnz 0x001c1640
		001c1640: CONDITIONAL_JUMP
		001c158c: FALL_THROUGH

	[001c158c]
		001c1584: FALL_THROUGH
 	001c158c push ax
 	001c1594 mov mar,0x3cef20
 	001c15a0 mov ax,mar
 	001c15ac push op
 	001c15b4 mov op,ax
 	001c15bc setfuncargs 0x0
 	001c15c4 mov ax,0x89ef20
 	001c15d0 farcall ax
 	001c15d8 pop op
 	001c15e0 push ax
 	001c15e8 mov mar,0x8def20
 	001c15f4 mov ax,mar
 	001c1600 pop bx
 	001c1608 cmpeq bx,ax
 	001c1614 mov ax,bx
 	001c1620 pop bx
 	001c1628 lor bx,ax
 	001c1634 mov ax,bx
		001c1640: FALL_THROUGH

	[001c1640]
		001c1584: CONDITIONAL_JUMP
		001c158c: FALL_THROUGH
 	001c1640 jnz 0x001c16fc
		001c16fc: CONDITIONAL_JUMP
		001c1648: FALL_THROUGH

	[001c1648]
		001c1640: FALL_THROUGH
 	001c1648 push ax
 	001c1650 mov mar,0x3cef20
 	001c165c mov ax,mar
 	001c1668 push op
 	001c1670 mov op,ax
 	001c1678 setfuncargs 0x0
 	001c1680 mov ax,0x89ef20
 	001c168c farcall ax
 	001c1694 pop op
 	001c169c push ax
 	001c16a4 mov mar,0x8aef20
 	001c16b0 mov ax,mar
 	001c16bc pop bx
 	001c16c4 cmpeq bx,ax
 	001c16d0 mov ax,bx
 	001c16dc pop bx
 	001c16e4 lor bx,ax
 	001c16f0 mov ax,bx
		001c16fc: FALL_THROUGH

	[001c16fc]
		001c1640: CONDITIONAL_JUMP
		001c1648: FALL_THROUGH
 	001c16fc jnz 0x001c17b8
		001c17b8: CONDITIONAL_JUMP
		001c1704: FALL_THROUGH

	[001c1704]
		001c16fc: FALL_THROUGH
 	001c1704 push ax
 	001c170c mov mar,0x3cef20
 	001c1718 mov ax,mar
 	001c1724 push op
 	001c172c mov op,ax
 	001c1734 setfuncargs 0x0
 	001c173c mov ax,0x89ef20
 	001c1748 farcall ax
 	001c1750 pop op
 	001c1758 push ax
 	001c1760 mov mar,0x8e6f20
 	001c176c mov ax,mar
 	001c1778 pop bx
 	001c1780 cmpeq bx,ax
 	001c178c mov ax,bx
 	001c1798 pop bx
 	001c17a0 lor bx,ax
 	001c17ac mov ax,bx
		001c17b8: FALL_THROUGH

	[001c17b8]
		001c16fc: CONDITIONAL_JUMP
		001c1704: FALL_THROUGH
 	001c17b8 jnz 0x001c1874
		001c1874: CONDITIONAL_JUMP
		001c17c0: FALL_THROUGH

	[001c17c0]
		001c17b8: FALL_THROUGH
 	001c17c0 push ax
 	001c17c8 mov mar,0x3cef20
 	001c17d4 mov ax,mar
 	001c17e0 push op
 	001c17e8 mov op,ax
 	001c17f0 setfuncargs 0x0
 	001c17f8 mov ax,0x89ef20
 	001c1804 farcall ax
 	001c180c pop op
 	001c1814 push ax
 	001c181c mov mar,0x8eef20
 	001c1828 mov ax,mar
 	001c1834 pop bx
 	001c183c cmpeq bx,ax
 	001c1848 mov ax,bx
 	001c1854 pop bx
 	001c185c lor bx,ax
 	001c1868 mov ax,bx
		001c1874: FALL_THROUGH

	[001c1874]
		001c17b8: CONDITIONAL_JUMP
		001c17c0: FALL_THROUGH
 	001c1874 jnz 0x001c1930
		001c1930: CONDITIONAL_JUMP
		001c187c: FALL_THROUGH

	[001c187c]
		001c1874: FALL_THROUGH
 	001c187c push ax
 	001c1884 mov mar,0x3cef20
 	001c1890 mov ax,mar
 	001c189c push op
 	001c18a4 mov op,ax
 	001c18ac setfuncargs 0x0
 	001c18b4 mov ax,0x89ef20
 	001c18c0 farcall ax
 	001c18c8 pop op
 	001c18d0 push ax
 	001c18d8 mov mar,0x8f6f20
 	001c18e4 mov ax,mar
 	001c18f0 pop bx
 	001c18f8 cmpeq bx,ax
 	001c1904 mov ax,bx
 	001c1910 pop bx
 	001c1918 lor bx,ax
 	001c1924 mov ax,bx
		001c1930: FALL_THROUGH

	[001c1930]
		001c1874: CONDITIONAL_JUMP
		001c187c: FALL_THROUGH
 	001c1930 jnz 0x001c19ec
		001c19ec: CONDITIONAL_JUMP
		001c1938: FALL_THROUGH

	[001c1938]
		001c1930: FALL_THROUGH
 	001c1938 push ax
 	001c1940 mov mar,0x3cef20
 	001c194c mov ax,mar
 	001c1958 push op
 	001c1960 mov op,ax
 	001c1968 setfuncargs 0x0
 	001c1970 mov ax,0x89ef20
 	001c197c farcall ax
 	001c1984 pop op
 	001c198c push ax
 	001c1994 mov mar,0x8fef20
 	001c19a0 mov ax,mar
 	001c19ac pop bx
 	001c19b4 cmpeq bx,ax
 	001c19c0 mov ax,bx
 	001c19cc pop bx
 	001c19d4 lor bx,ax
 	001c19e0 mov ax,bx
		001c19ec: FALL_THROUGH

	[001c19ec]
		001c1930: CONDITIONAL_JUMP
		001c1938: FALL_THROUGH
 	001c19ec jnz 0x001c1aa8
		001c1aa8: CONDITIONAL_JUMP
		001c19f4: FALL_THROUGH

	[001c19f4]
		001c19ec: FALL_THROUGH
 	001c19f4 push ax
 	001c19fc mov mar,0x3cef20
 	001c1a08 mov ax,mar
 	001c1a14 push op
 	001c1a1c mov op,ax
 	001c1a24 setfuncargs 0x0
 	001c1a2c mov ax,0x89ef20
 	001c1a38 farcall ax
 	001c1a40 pop op
 	001c1a48 push ax
 	001c1a50 mov mar,0x906f20
 	001c1a5c mov ax,mar
 	001c1a68 pop bx
 	001c1a70 cmpeq bx,ax
 	001c1a7c mov ax,bx
 	001c1a88 pop bx
 	001c1a90 lor bx,ax
 	001c1a9c mov ax,bx
		001c1aa8: FALL_THROUGH

	[001c1aa8]
		001c19ec: CONDITIONAL_JUMP
		001c19f4: FALL_THROUGH
 	001c1aa8 jnz 0x001c1b64
		001c1b64: CONDITIONAL_JUMP
		001c1ab0: FALL_THROUGH

	[001c1ab0]
		001c1aa8: FALL_THROUGH
 	001c1ab0 push ax
 	001c1ab8 mov mar,0x3cef20
 	001c1ac4 mov ax,mar
 	001c1ad0 push op
 	001c1ad8 mov op,ax
 	001c1ae0 setfuncargs 0x0
 	001c1ae8 mov ax,0x89ef20
 	001c1af4 farcall ax
 	001c1afc pop op
 	001c1b04 push ax
 	001c1b0c mov mar,0x976f20
 	001c1b18 mov ax,mar
 	001c1b24 pop bx
 	001c1b2c cmpeq bx,ax
 	001c1b38 mov ax,bx
 	001c1b44 pop bx
 	001c1b4c lor bx,ax
 	001c1b58 mov ax,bx
		001c1b64: FALL_THROUGH

	[001c1b64]
		001c1aa8: CONDITIONAL_JUMP
		001c1ab0: FALL_THROUGH
 	001c1b64 jnz 0x001c1c20
		001c1c20: CONDITIONAL_JUMP
		001c1b6c: FALL_THROUGH

	[001c1b6c]
		001c1b64: FALL_THROUGH
 	001c1b6c push ax
 	001c1b74 mov mar,0x3cef20
 	001c1b80 mov ax,mar
 	001c1b8c push op
 	001c1b94 mov op,ax
 	001c1b9c setfuncargs 0x0
 	001c1ba4 mov ax,0x89ef20
 	001c1bb0 farcall ax
 	001c1bb8 pop op
 	001c1bc0 push ax
 	001c1bc8 mov mar,0x846f20
 	001c1bd4 mov ax,mar
 	001c1be0 pop bx
 	001c1be8 cmpeq bx,ax
 	001c1bf4 mov ax,bx
 	001c1c00 pop bx
 	001c1c08 lor bx,ax
 	001c1c14 mov ax,bx
		001c1c20: FALL_THROUGH

	[001c1c20]
		001c1b64: CONDITIONAL_JUMP
		001c1b6c: FALL_THROUGH
 	001c1c20 jnz 0x001c1cdc
		001c1cdc: CONDITIONAL_JUMP
		001c1c28: FALL_THROUGH

	[001c1c28]
		001c1c20: FALL_THROUGH
 	001c1c28 push ax
 	001c1c30 mov mar,0x3cef20
 	001c1c3c mov ax,mar
 	001c1c48 push op
 	001c1c50 mov op,ax
 	001c1c58 setfuncargs 0x0
 	001c1c60 mov ax,0x89ef20
 	001c1c6c farcall ax
 	001c1c74 pop op
 	001c1c7c push ax
 	001c1c84 mov mar,0x90ef20
 	001c1c90 mov ax,mar
 	001c1c9c pop bx
 	001c1ca4 cmpeq bx,ax
 	001c1cb0 mov ax,bx
 	001c1cbc pop bx
 	001c1cc4 lor bx,ax
 	001c1cd0 mov ax,bx
		001c1cdc: FALL_THROUGH

	[001c1cdc]
		001c1c20: CONDITIONAL_JUMP
		001c1c28: FALL_THROUGH
 	001c1cdc jnz 0x001c1d98
		001c1d98: CONDITIONAL_JUMP
		001c1ce4: FALL_THROUGH

	[001c1ce4]
		001c1cdc: FALL_THROUGH
 	001c1ce4 push ax
 	001c1cec mov mar,0x3cef20
 	001c1cf8 mov ax,mar
 	001c1d04 push op
 	001c1d0c mov op,ax
 	001c1d14 setfuncargs 0x0
 	001c1d1c mov ax,0x89ef20
 	001c1d28 farcall ax
 	001c1d30 pop op
 	001c1d38 push ax
 	001c1d40 mov mar,0x916f20
 	001c1d4c mov ax,mar
 	001c1d58 pop bx
 	001c1d60 cmpeq bx,ax
 	001c1d6c mov ax,bx
 	001c1d78 pop bx
 	001c1d80 lor bx,ax
 	001c1d8c mov ax,bx
		001c1d98: FALL_THROUGH

	[001c1d98]
		001c1cdc: CONDITIONAL_JUMP
		001c1ce4: FALL_THROUGH
 	001c1d98 jnz 0x001c1e54
		001c1e54: CONDITIONAL_JUMP
		001c1da0: FALL_THROUGH

	[001c1da0]
		001c1d98: FALL_THROUGH
 	001c1da0 push ax
 	001c1da8 mov mar,0x3cef20
 	001c1db4 mov ax,mar
 	001c1dc0 push op
 	001c1dc8 mov op,ax
 	001c1dd0 setfuncargs 0x0
 	001c1dd8 mov ax,0x89ef20
 	001c1de4 farcall ax
 	001c1dec pop op
 	001c1df4 push ax
 	001c1dfc mov mar,0x926f20
 	001c1e08 mov ax,mar
 	001c1e14 pop bx
 	001c1e1c cmpeq bx,ax
 	001c1e28 mov ax,bx
 	001c1e34 pop bx
 	001c1e3c lor bx,ax
 	001c1e48 mov ax,bx
		001c1e54: FALL_THROUGH

	[001c1e54]
		001c1d98: CONDITIONAL_JUMP
		001c1da0: FALL_THROUGH
 	001c1e54 jnz 0x001c1f10
		001c1f10: CONDITIONAL_JUMP
		001c1e5c: FALL_THROUGH

	[001c1e5c]
		001c1e54: FALL_THROUGH
 	001c1e5c push ax
 	001c1e64 mov mar,0x3cef20
 	001c1e70 mov ax,mar
 	001c1e7c push op
 	001c1e84 mov op,ax
 	001c1e8c setfuncargs 0x0
 	001c1e94 mov ax,0x89ef20
 	001c1ea0 farcall ax
 	001c1ea8 pop op
 	001c1eb0 push ax
 	001c1eb8 mov mar,0x92ef20
 	001c1ec4 mov ax,mar
 	001c1ed0 pop bx
 	001c1ed8 cmpeq bx,ax
 	001c1ee4 mov ax,bx
 	001c1ef0 pop bx
 	001c1ef8 lor bx,ax
 	001c1f04 mov ax,bx
		001c1f10: FALL_THROUGH

	[001c1f10]
		001c1e54: CONDITIONAL_JUMP
		001c1e5c: FALL_THROUGH
 	001c1f10 jnz 0x001c1fcc
		001c1fcc: CONDITIONAL_JUMP
		001c1f18: FALL_THROUGH

	[001c1f18]
		001c1f10: FALL_THROUGH
 	001c1f18 push ax
 	001c1f20 mov mar,0x3cef20
 	001c1f2c mov ax,mar
 	001c1f38 push op
 	001c1f40 mov op,ax
 	001c1f48 setfuncargs 0x0
 	001c1f50 mov ax,0x89ef20
 	001c1f5c farcall ax
 	001c1f64 pop op
 	001c1f6c push ax
 	001c1f74 mov mar,0x936f20
 	001c1f80 mov ax,mar
 	001c1f8c pop bx
 	001c1f94 cmpeq bx,ax
 	001c1fa0 mov ax,bx
 	001c1fac pop bx
 	001c1fb4 lor bx,ax
 	001c1fc0 mov ax,bx
		001c1fcc: FALL_THROUGH

	[001c1fcc]
		001c1f10: CONDITIONAL_JUMP
		001c1f18: FALL_THROUGH
 	001c1fcc jnz 0x001c2088
		001c2088: CONDITIONAL_JUMP
		001c1fd4: FALL_THROUGH

	[001c1fd4]
		001c1fcc: FALL_THROUGH
 	001c1fd4 push ax
 	001c1fdc mov mar,0x3cef20
 	001c1fe8 mov ax,mar
 	001c1ff4 push op
 	001c1ffc mov op,ax
 	001c2004 setfuncargs 0x0
 	001c200c mov ax,0x89ef20
 	001c2018 farcall ax
 	001c2020 pop op
 	001c2028 push ax
 	001c2030 mov mar,0x93ef20
 	001c203c mov ax,mar
 	001c2048 pop bx
 	001c2050 cmpeq bx,ax
 	001c205c mov ax,bx
 	001c2068 pop bx
 	001c2070 lor bx,ax
 	001c207c mov ax,bx
		001c2088: FALL_THROUGH

	[001c2088]
		001c1fcc: CONDITIONAL_JUMP
		001c1fd4: FALL_THROUGH
 	001c2088 jnz 0x001c2144
		001c2144: CONDITIONAL_JUMP
		001c2090: FALL_THROUGH

	[001c2090]
		001c2088: FALL_THROUGH
 	001c2090 push ax
 	001c2098 mov mar,0x3cef20
 	001c20a4 mov ax,mar
 	001c20b0 push op
 	001c20b8 mov op,ax
 	001c20c0 setfuncargs 0x0
 	001c20c8 mov ax,0x89ef20
 	001c20d4 farcall ax
 	001c20dc pop op
 	001c20e4 push ax
 	001c20ec mov mar,0x94ef20
 	001c20f8 mov ax,mar
 	001c2104 pop bx
 	001c210c cmpeq bx,ax
 	001c2118 mov ax,bx
 	001c2124 pop bx
 	001c212c lor bx,ax
 	001c2138 mov ax,bx
		001c2144: FALL_THROUGH

	[001c2144]
		001c2088: CONDITIONAL_JUMP
		001c2090: FALL_THROUGH
 	001c2144 jz 0x001c4a6c
		001c4a6c: CONDITIONAL_JUMP
		001c214c: FALL_THROUGH

	[001c214c]
		001c2144: FALL_THROUGH
 	001c214c sourceline 0x22a3
 	001c2154 setfuncargs 0x0
 	001c215c mov ax,0x6def20
 	001c2168 farcall ax
 	001c2170 lnot ax
 	001c2178 jz 0x001c21d4
		001c21d4: CONDITIONAL_JUMP
		001c2180: FALL_THROUGH

	[001c2180]
		001c214c: FALL_THROUGH
 	001c2180 mov ax,0x8a
 	001c218c farpush ax
 	001c2194 mov ax,0xde
 	001c21a0 farpush ax
 	001c21a8 setfuncargs 0x2
 	001c21b0 mov ax,0x6e6f20
 	001c21bc farcall ax
 	001c21c4 farsubsp 0x2
 	001c21cc jmp 0x001c4a5c
		001c4a5c: UNCONDITIONAL_JUMP

	[001c21d4]
		001c214c: CONDITIONAL_JUMP
 	001c21d4 sourceline 0x22a6
 	001c21dc push op
 	001c21e4 mov ax,0x397
 	001c21f0 farpush ax
 	001c21f8 mov ax,0x5
 	001c2204 farpush ax
 	001c220c mov mar,0x3cef20
 	001c2218 mov ax,mar
 	001c2224 mov op,ax
 	001c222c setfuncargs 0x2
 	001c2234 mov ax,0x6eef20
 	001c2240 farcall ax
 	001c2248 farsubsp 0x2
 	001c2250 pop op
 	001c2258 sourceline 0x22a7
 	001c2260 mov ax,0x3
 	001c226c mov bx,ax
 	001c2278 mov mar,0x3cef20
 	001c2284 mov ax,mar
 	001c2290 push op
 	001c2298 mov op,ax
 	001c22a0 farpush bx
 	001c22a8 setfuncargs 0x1
 	001c22b0 mov ax,0x69ef20
 	001c22bc farcall ax
 	001c22c4 farsubsp 0x1
 	001c22cc pop op
 	001c22d4 sourceline 0x22a8
 	001c22dc push op
 	001c22e4 mov ax,0xe
 	001c22f0 farpush ax
 	001c22f8 mov mar,0x3cef20
 	001c2304 mov ax,mar
 	001c2310 mov op,ax
 	001c2318 setfuncargs 0x1
 	001c2320 mov ax,0x51ef20
 	001c232c farcall ax
 	001c2334 farsubsp 0x1
 	001c233c pop op
 	001c2344 sourceline 0x22a9
 	001c234c mov mar,0x3cef20
 	001c2358 mov ax,mar
 	001c2364 push op
 	001c236c mov op,ax
 	001c2374 setfuncargs 0x0
 	001c237c mov ax,0x78ef20
 	001c2388 farcall ax
 	001c2390 pop op
 	001c2398 push ax
 	001c23a0 mov ax,0x7
 	001c23ac pop bx
 	001c23b4 sub bx,ax
 	001c23c0 mov ax,bx
 	001c23cc mov bx,ax
 	001c23d8 mov mar,0x3cef20
 	001c23e4 mov ax,mar
 	001c23f0 push op
 	001c23f8 mov op,ax
 	001c2400 farpush bx
 	001c2408 setfuncargs 0x1
 	001c2410 mov ax,0x526f20
 	001c241c farcall ax
 	001c2424 farsubsp 0x1
 	001c242c pop op
 	001c2434 sourceline 0x22aa
 	001c243c mov mar,0x3cef20
 	001c2448 mov ax,mar
 	001c2454 push op
 	001c245c mov op,ax
 	001c2464 setfuncargs 0x0
 	001c246c mov ax,0xb36f20
 	001c2478 farcall ax
 	001c2480 pop op
 	001c2488 push ax
 	001c2490 mov ax,0x5
 	001c249c pop bx
 	001c24a4 add bx,ax
 	001c24b0 mov ax,bx
 	001c24bc mov bx,ax
 	001c24c8 mov mar,0x3cef20
 	001c24d4 mov ax,mar
 	001c24e0 push op
 	001c24e8 mov op,ax
 	001c24f0 farpush bx
 	001c24f8 setfuncargs 0x1
 	001c2500 mov ax,0x70ef20
 	001c250c farcall ax
 	001c2514 farsubsp 0x1
 	001c251c pop op
 	001c2524 sourceline 0x22ab
 	001c252c push op
 	001c2534 mov ax,0x426
 	001c2540 farpush ax
 	001c2548 mov ax,0x397
 	001c2554 farpush ax
 	001c255c mov ax,0x0
 	001c2568 farpush ax
 	001c2570 mov ax,0x3
 	001c257c farpush ax
 	001c2584 mov ax,0x0
 	001c2590 farpush ax
 	001c2598 mov mar,0x3cef20
 	001c25a4 mov ax,mar
 	001c25b0 mov op,ax
 	001c25b8 setfuncargs 0x5
 	001c25c0 mov ax,0x536f20
 	001c25cc farcall ax
 	001c25d4 farsubsp 0x5
 	001c25dc pop op
 	001c25e4 sourceline 0x22ac
 	001c25ec mov ax,0x0
 	001c25f8 mov mar,0xc6ef20
 	001c2604 memwrite4 ax
 	001c260c sourceline 0x22ad
 	001c2614 mov ax,0x0
 	001c2620 mov mar,0xc76f20
 	001c262c memwrite4 ax
 	001c2634 sourceline 0x22ae
 	001c263c mov ax,0x0
 	001c2648 mov bx,ax
 	001c2654 mov mar,0x3cef20
 	001c2660 mov ax,mar
 	001c266c push op
 	001c2674 mov op,ax
 	001c267c farpush bx
 	001c2684 setfuncargs 0x1
 	001c268c mov ax,0x436f20
 	001c2698 farcall ax
 	001c26a0 farsubsp 0x1
 	001c26a8 pop op
 	001c26b0 sourceline 0x22af
 	001c26b8 mov mar,0xc56f20
 	001c26c4 mov ax,mar
 	001c26d0 push op
 	001c26d8 mov op,ax
 	001c26e0 setfuncargs 0x0
 	001c26e8 mov ax,0xc7ef20
 	001c26f4 farcall ax
 	001c26fc pop op
 	001c2704 push ax
 	001c270c mov ax,0x0
 	001c2718 pop bx
 	001c2720 cmpeq bx,ax
 	001c272c mov ax,bx
 	001c2738 jz 0x001c2f18
		001c2f18: CONDITIONAL_JUMP
		001c2740: FALL_THROUGH

	[001c2740]
		001c21d4: FALL_THROUGH
 	001c2740 sourceline 0x22b1
 	001c2748 mov mar,0xc56f20
 	001c2754 mov ax,mar
 	001c2760 push op
 	001c2768 mov op,ax
 	001c2770 setfuncargs 0x0
 	001c2778 mov ax,0xb16f20
 	001c2784 farcall ax
 	001c278c pop op
 	001c2794 push ax
 	001c279c mov ax,0x0
 	001c27a8 pop bx
 	001c27b0 cmpeq bx,ax
 	001c27bc mov ax,bx
 	001c27c8 jz 0x001c2890
		001c2890: CONDITIONAL_JUMP
		001c27d0: FALL_THROUGH

	[001c27d0]
		001c2740: FALL_THROUGH
 	001c27d0 push op
 	001c27d8 mov ax,0x426
 	001c27e4 farpush ax
 	001c27ec mov ax,0x397
 	001c27f8 farpush ax
 	001c2800 mov ax,0x0
 	001c280c farpush ax
 	001c2814 mov ax,0x3
 	001c2820 farpush ax
 	001c2828 mov ax,0x11
 	001c2834 farpush ax
 	001c283c mov mar,0xc56f20
 	001c2848 mov ax,mar
 	001c2854 mov op,ax
 	001c285c setfuncargs 0x5
 	001c2864 mov ax,0x536f20
 	001c2870 farcall ax
 	001c2878 farsubsp 0x5
 	001c2880 pop op
 	001c2888 jmp 0x001c2f18
		001c2f18: UNCONDITIONAL_JUMP

	[001c2890]
		001c2740: CONDITIONAL_JUMP
 	001c2890 sourceline 0x22b2
 	001c2898 mov mar,0xc56f20
 	001c28a4 mov ax,mar
 	001c28b0 push op
 	001c28b8 mov op,ax
 	001c28c0 setfuncargs 0x0
 	001c28c8 mov ax,0xb16f20
 	001c28d4 farcall ax
 	001c28dc pop op
 	001c28e4 push ax
 	001c28ec mov ax,0x1
 	001c28f8 pop bx
 	001c2900 cmpeq bx,ax
 	001c290c mov ax,bx
 	001c2918 jz 0x001c29e0
		001c29e0: CONDITIONAL_JUMP
		001c2920: FALL_THROUGH

	[001c2920]
		001c2890: FALL_THROUGH
 	001c2920 push op
 	001c2928 mov ax,0x426
 	001c2934 farpush ax
 	001c293c mov ax,0x397
 	001c2948 farpush ax
 	001c2950 mov ax,0x0
 	001c295c farpush ax
 	001c2964 mov ax,0x3
 	001c2970 farpush ax
 	001c2978 mov ax,0x12
 	001c2984 farpush ax
 	001c298c mov mar,0xc56f20
 	001c2998 mov ax,mar
 	001c29a4 mov op,ax
 	001c29ac setfuncargs 0x5
 	001c29b4 mov ax,0x536f20
 	001c29c0 farcall ax
 	001c29c8 farsubsp 0x5
 	001c29d0 pop op
 	001c29d8 jmp 0x001c2f18
		001c2f18: UNCONDITIONAL_JUMP

	[001c29e0]
		001c2890: CONDITIONAL_JUMP
 	001c29e0 sourceline 0x22b3
 	001c29e8 mov mar,0xc56f20
 	001c29f4 mov ax,mar
 	001c2a00 push op
 	001c2a08 mov op,ax
 	001c2a10 setfuncargs 0x0
 	001c2a18 mov ax,0xb16f20
 	001c2a24 farcall ax
 	001c2a2c pop op
 	001c2a34 push ax
 	001c2a3c mov ax,0x2
 	001c2a48 pop bx
 	001c2a50 cmpeq bx,ax
 	001c2a5c mov ax,bx
 	001c2a68 jz 0x001c2b30
		001c2b30: CONDITIONAL_JUMP
		001c2a70: FALL_THROUGH

	[001c2a70]
		001c29e0: FALL_THROUGH
 	001c2a70 push op
 	001c2a78 mov ax,0x426
 	001c2a84 farpush ax
 	001c2a8c mov ax,0x397
 	001c2a98 farpush ax
 	001c2aa0 mov ax,0x0
 	001c2aac farpush ax
 	001c2ab4 mov ax,0x3
 	001c2ac0 farpush ax
 	001c2ac8 mov ax,0x13
 	001c2ad4 farpush ax
 	001c2adc mov mar,0xc56f20
 	001c2ae8 mov ax,mar
 	001c2af4 mov op,ax
 	001c2afc setfuncargs 0x5
 	001c2b04 mov ax,0x536f20
 	001c2b10 farcall ax
 	001c2b18 farsubsp 0x5
 	001c2b20 pop op
 	001c2b28 jmp 0x001c2f18
		001c2f18: UNCONDITIONAL_JUMP

	[001c2b30]
		001c29e0: CONDITIONAL_JUMP
 	001c2b30 sourceline 0x22b4
 	001c2b38 mov mar,0xc56f20
 	001c2b44 mov ax,mar
 	001c2b50 push op
 	001c2b58 mov op,ax
 	001c2b60 setfuncargs 0x0
 	001c2b68 mov ax,0xb16f20
 	001c2b74 farcall ax
 	001c2b7c pop op
 	001c2b84 push ax
 	001c2b8c mov ax,0x3
 	001c2b98 pop bx
 	001c2ba0 cmpeq bx,ax
 	001c2bac mov ax,bx
 	001c2bb8 jz 0x001c2c80
		001c2c80: CONDITIONAL_JUMP
		001c2bc0: FALL_THROUGH

	[001c2bc0]
		001c2b30: FALL_THROUGH
 	001c2bc0 push op
 	001c2bc8 mov ax,0x426
 	001c2bd4 farpush ax
 	001c2bdc mov ax,0x397
 	001c2be8 farpush ax
 	001c2bf0 mov ax,0x0
 	001c2bfc farpush ax
 	001c2c04 mov ax,0x3
 	001c2c10 farpush ax
 	001c2c18 mov ax,0x14
 	001c2c24 farpush ax
 	001c2c2c mov mar,0xc56f20
 	001c2c38 mov ax,mar
 	001c2c44 mov op,ax
 	001c2c4c setfuncargs 0x5
 	001c2c54 mov ax,0x536f20
 	001c2c60 farcall ax
 	001c2c68 farsubsp 0x5
 	001c2c70 pop op
 	001c2c78 jmp 0x001c2f18
		001c2f18: UNCONDITIONAL_JUMP

	[001c2c80]
		001c2b30: CONDITIONAL_JUMP
 	001c2c80 sourceline 0x22b5
 	001c2c88 mov mar,0xc56f20
 	001c2c94 mov ax,mar
 	001c2ca0 push op
 	001c2ca8 mov op,ax
 	001c2cb0 setfuncargs 0x0
 	001c2cb8 mov ax,0xb16f20
 	001c2cc4 farcall ax
 	001c2ccc pop op
 	001c2cd4 push ax
 	001c2cdc mov ax,0x4
 	001c2ce8 pop bx
 	001c2cf0 cmpeq bx,ax
 	001c2cfc mov ax,bx
 	001c2d08 jz 0x001c2dd0
		001c2dd0: CONDITIONAL_JUMP
		001c2d10: FALL_THROUGH

	[001c2d10]
		001c2c80: FALL_THROUGH
 	001c2d10 push op
 	001c2d18 mov ax,0x426
 	001c2d24 farpush ax
 	001c2d2c mov ax,0x397
 	001c2d38 farpush ax
 	001c2d40 mov ax,0x0
 	001c2d4c farpush ax
 	001c2d54 mov ax,0x3
 	001c2d60 farpush ax
 	001c2d68 mov ax,0x15
 	001c2d74 farpush ax
 	001c2d7c mov mar,0xc56f20
 	001c2d88 mov ax,mar
 	001c2d94 mov op,ax
 	001c2d9c setfuncargs 0x5
 	001c2da4 mov ax,0x536f20
 	001c2db0 farcall ax
 	001c2db8 farsubsp 0x5
 	001c2dc0 pop op
 	001c2dc8 jmp 0x001c2f18
		001c2f18: UNCONDITIONAL_JUMP

	[001c2dd0]
		001c2c80: CONDITIONAL_JUMP
 	001c2dd0 sourceline 0x22b6
 	001c2dd8 mov mar,0xc56f20
 	001c2de4 mov ax,mar
 	001c2df0 push op
 	001c2df8 mov op,ax
 	001c2e00 setfuncargs 0x0
 	001c2e08 mov ax,0xb16f20
 	001c2e14 farcall ax
 	001c2e1c pop op
 	001c2e24 push ax
 	001c2e2c mov ax,0x5
 	001c2e38 pop bx
 	001c2e40 cmpeq bx,ax
 	001c2e4c mov ax,bx
 	001c2e58 jz 0x001c2f18
		001c2f18: CONDITIONAL_JUMP
		001c2e60: FALL_THROUGH

	[001c2e60]
		001c2dd0: FALL_THROUGH
 	001c2e60 push op
 	001c2e68 mov ax,0x426
 	001c2e74 farpush ax
 	001c2e7c mov ax,0x397
 	001c2e88 farpush ax
 	001c2e90 mov ax,0x0
 	001c2e9c farpush ax
 	001c2ea4 mov ax,0x3
 	001c2eb0 farpush ax
 	001c2eb8 mov ax,0x16
 	001c2ec4 farpush ax
 	001c2ecc mov mar,0xc56f20
 	001c2ed8 mov ax,mar
 	001c2ee4 mov op,ax
 	001c2eec setfuncargs 0x5
 	001c2ef4 mov ax,0x536f20
 	001c2f00 farcall ax
 	001c2f08 farsubsp 0x5
 	001c2f10 pop op
		001c2f18: FALL_THROUGH

	[001c2f18]
		001c21d4: CONDITIONAL_JUMP
		001c27d0: UNCONDITIONAL_JUMP
		001c2920: UNCONDITIONAL_JUMP
		001c2a70: UNCONDITIONAL_JUMP
		001c2bc0: UNCONDITIONAL_JUMP
		001c2d10: UNCONDITIONAL_JUMP
		001c2dd0: CONDITIONAL_JUMP
		001c2e60: FALL_THROUGH
 	001c2f18 sourceline 0x22b8
 	001c2f20 mov mar,0xc56f20
 	001c2f2c mov ax,mar
 	001c2f38 push op
 	001c2f40 mov op,ax
 	001c2f48 setfuncargs 0x0
 	001c2f50 mov ax,0xc7ef20
 	001c2f5c farcall ax
 	001c2f64 pop op
 	001c2f6c push ax
 	001c2f74 mov ax,0x1
 	001c2f80 pop bx
 	001c2f88 cmpeq bx,ax
 	001c2f94 mov ax,bx
 	001c2fa0 jz 0x001c3780
		001c3780: CONDITIONAL_JUMP
		001c2fa8: FALL_THROUGH

	[001c2fa8]
		001c2f18: FALL_THROUGH
 	001c2fa8 sourceline 0x22ba
 	001c2fb0 mov mar,0xc56f20
 	001c2fbc mov ax,mar
 	001c2fc8 push op
 	001c2fd0 mov op,ax
 	001c2fd8 setfuncargs 0x0
 	001c2fe0 mov ax,0xb16f20
 	001c2fec farcall ax
 	001c2ff4 pop op
 	001c2ffc push ax
 	001c3004 mov ax,0x0
 	001c3010 pop bx
 	001c3018 cmpeq bx,ax
 	001c3024 mov ax,bx
 	001c3030 jz 0x001c30f8
		001c30f8: CONDITIONAL_JUMP
		001c3038: FALL_THROUGH

	[001c3038]
		001c2fa8: FALL_THROUGH
 	001c3038 push op
 	001c3040 mov ax,0x426
 	001c304c farpush ax
 	001c3054 mov ax,0x397
 	001c3060 farpush ax
 	001c3068 mov ax,0x0
 	001c3074 farpush ax
 	001c307c mov ax,0x3
 	001c3088 farpush ax
 	001c3090 mov ax,0x17
 	001c309c farpush ax
 	001c30a4 mov mar,0xc56f20
 	001c30b0 mov ax,mar
 	001c30bc mov op,ax
 	001c30c4 setfuncargs 0x5
 	001c30cc mov ax,0x536f20
 	001c30d8 farcall ax
 	001c30e0 farsubsp 0x5
 	001c30e8 pop op
 	001c30f0 jmp 0x001c3780
		001c3780: UNCONDITIONAL_JUMP

	[001c30f8]
		001c2fa8: CONDITIONAL_JUMP
 	001c30f8 sourceline 0x22bb
 	001c3100 mov mar,0xc56f20
 	001c310c mov ax,mar
 	001c3118 push op
 	001c3120 mov op,ax
 	001c3128 setfuncargs 0x0
 	001c3130 mov ax,0xb16f20
 	001c313c farcall ax
 	001c3144 pop op
 	001c314c push ax
 	001c3154 mov ax,0x1
 	001c3160 pop bx
 	001c3168 cmpeq bx,ax
 	001c3174 mov ax,bx
 	001c3180 jz 0x001c3248
		001c3248: CONDITIONAL_JUMP
		001c3188: FALL_THROUGH

	[001c3188]
		001c30f8: FALL_THROUGH
 	001c3188 push op
 	001c3190 mov ax,0x426
 	001c319c farpush ax
 	001c31a4 mov ax,0x397
 	001c31b0 farpush ax
 	001c31b8 mov ax,0x0
 	001c31c4 farpush ax
 	001c31cc mov ax,0x3
 	001c31d8 farpush ax
 	001c31e0 mov ax,0x18
 	001c31ec farpush ax
 	001c31f4 mov mar,0xc56f20
 	001c3200 mov ax,mar
 	001c320c mov op,ax
 	001c3214 setfuncargs 0x5
 	001c321c mov ax,0x536f20
 	001c3228 farcall ax
 	001c3230 farsubsp 0x5
 	001c3238 pop op
 	001c3240 jmp 0x001c3780
		001c3780: UNCONDITIONAL_JUMP

	[001c3248]
		001c30f8: CONDITIONAL_JUMP
 	001c3248 sourceline 0x22bc
 	001c3250 mov mar,0xc56f20
 	001c325c mov ax,mar
 	001c3268 push op
 	001c3270 mov op,ax
 	001c3278 setfuncargs 0x0
 	001c3280 mov ax,0xb16f20
 	001c328c farcall ax
 	001c3294 pop op
 	001c329c push ax
 	001c32a4 mov ax,0x2
 	001c32b0 pop bx
 	001c32b8 cmpeq bx,ax
 	001c32c4 mov ax,bx
 	001c32d0 jz 0x001c3398
		001c3398: CONDITIONAL_JUMP
		001c32d8: FALL_THROUGH

	[001c32d8]
		001c3248: FALL_THROUGH
 	001c32d8 push op
 	001c32e0 mov ax,0x426
 	001c32ec farpush ax
 	001c32f4 mov ax,0x397
 	001c3300 farpush ax
 	001c3308 mov ax,0x0
 	001c3314 farpush ax
 	001c331c mov ax,0x3
 	001c3328 farpush ax
 	001c3330 mov ax,0x19
 	001c333c farpush ax
 	001c3344 mov mar,0xc56f20
 	001c3350 mov ax,mar
 	001c335c mov op,ax
 	001c3364 setfuncargs 0x5
 	001c336c mov ax,0x536f20
 	001c3378 farcall ax
 	001c3380 farsubsp 0x5
 	001c3388 pop op
 	001c3390 jmp 0x001c3780
		001c3780: UNCONDITIONAL_JUMP

	[001c3398]
		001c3248: CONDITIONAL_JUMP
 	001c3398 sourceline 0x22bd
 	001c33a0 mov mar,0xc56f20
 	001c33ac mov ax,mar
 	001c33b8 push op
 	001c33c0 mov op,ax
 	001c33c8 setfuncargs 0x0
 	001c33d0 mov ax,0xb16f20
 	001c33dc farcall ax
 	001c33e4 pop op
 	001c33ec push ax
 	001c33f4 mov ax,0x3
 	001c3400 pop bx
 	001c3408 cmpeq bx,ax
 	001c3414 mov ax,bx
 	001c3420 jz 0x001c34e8
		001c34e8: CONDITIONAL_JUMP
		001c3428: FALL_THROUGH

	[001c3428]
		001c3398: FALL_THROUGH
 	001c3428 push op
 	001c3430 mov ax,0x426
 	001c343c farpush ax
 	001c3444 mov ax,0x397
 	001c3450 farpush ax
 	001c3458 mov ax,0x0
 	001c3464 farpush ax
 	001c346c mov ax,0x3
 	001c3478 farpush ax
 	001c3480 mov ax,0x1a
 	001c348c farpush ax
 	001c3494 mov mar,0xc56f20
 	001c34a0 mov ax,mar
 	001c34ac mov op,ax
 	001c34b4 setfuncargs 0x5
 	001c34bc mov ax,0x536f20
 	001c34c8 farcall ax
 	001c34d0 farsubsp 0x5
 	001c34d8 pop op
 	001c34e0 jmp 0x001c3780
		001c3780: UNCONDITIONAL_JUMP

	[001c34e8]
		001c3398: CONDITIONAL_JUMP
 	001c34e8 sourceline 0x22be
 	001c34f0 mov mar,0xc56f20
 	001c34fc mov ax,mar
 	001c3508 push op
 	001c3510 mov op,ax
 	001c3518 setfuncargs 0x0
 	001c3520 mov ax,0xb16f20
 	001c352c farcall ax
 	001c3534 pop op
 	001c353c push ax
 	001c3544 mov ax,0x4
 	001c3550 pop bx
 	001c3558 cmpeq bx,ax
 	001c3564 mov ax,bx
 	001c3570 jz 0x001c3638
		001c3638: CONDITIONAL_JUMP
		001c3578: FALL_THROUGH

	[001c3578]
		001c34e8: FALL_THROUGH
 	001c3578 push op
 	001c3580 mov ax,0x426
 	001c358c farpush ax
 	001c3594 mov ax,0x397
 	001c35a0 farpush ax
 	001c35a8 mov ax,0x0
 	001c35b4 farpush ax
 	001c35bc mov ax,0x3
 	001c35c8 farpush ax
 	001c35d0 mov ax,0x1b
 	001c35dc farpush ax
 	001c35e4 mov mar,0xc56f20
 	001c35f0 mov ax,mar
 	001c35fc mov op,ax
 	001c3604 setfuncargs 0x5
 	001c360c mov ax,0x536f20
 	001c3618 farcall ax
 	001c3620 farsubsp 0x5
 	001c3628 pop op
 	001c3630 jmp 0x001c3780
		001c3780: UNCONDITIONAL_JUMP

	[001c3638]
		001c34e8: CONDITIONAL_JUMP
 	001c3638 sourceline 0x22bf
 	001c3640 mov mar,0xc56f20
 	001c364c mov ax,mar
 	001c3658 push op
 	001c3660 mov op,ax
 	001c3668 setfuncargs 0x0
 	001c3670 mov ax,0xb16f20
 	001c367c farcall ax
 	001c3684 pop op
 	001c368c push ax
 	001c3694 mov ax,0x5
 	001c36a0 pop bx
 	001c36a8 cmpeq bx,ax
 	001c36b4 mov ax,bx
 	001c36c0 jz 0x001c3780
		001c3780: CONDITIONAL_JUMP
		001c36c8: FALL_THROUGH

	[001c36c8]
		001c3638: FALL_THROUGH
 	001c36c8 push op
 	001c36d0 mov ax,0x426
 	001c36dc farpush ax
 	001c36e4 mov ax,0x397
 	001c36f0 farpush ax
 	001c36f8 mov ax,0x0
 	001c3704 farpush ax
 	001c370c mov ax,0x3
 	001c3718 farpush ax
 	001c3720 mov ax,0x1c
 	001c372c farpush ax
 	001c3734 mov mar,0xc56f20
 	001c3740 mov ax,mar
 	001c374c mov op,ax
 	001c3754 setfuncargs 0x5
 	001c375c mov ax,0x536f20
 	001c3768 farcall ax
 	001c3770 farsubsp 0x5
 	001c3778 pop op
		001c3780: FALL_THROUGH

	[001c3780]
		001c2f18: CONDITIONAL_JUMP
		001c3038: UNCONDITIONAL_JUMP
		001c3188: UNCONDITIONAL_JUMP
		001c32d8: UNCONDITIONAL_JUMP
		001c3428: UNCONDITIONAL_JUMP
		001c3578: UNCONDITIONAL_JUMP
		001c3638: CONDITIONAL_JUMP
		001c36c8: FALL_THROUGH
 	001c3780 sourceline 0x22c2
 	001c3788 mov ax,0x3
 	001c3794 farpush ax
 	001c379c setfuncargs 0x1
 	001c37a4 mov ax,0x4a6f20
 	001c37b0 farcall ax
 	001c37b8 farsubsp 0x1
 	001c37c0 mov mar,sp
 	001c37cc memwrite4 ax
 	001c37d4 add sp,0x4
 	001c37e0 sourceline 0x22c3
 	001c37e8 stackptr 0x4
 	001c37f0 memread4 ax
 	001c37f8 push ax
 	001c3800 mov ax,0x0
 	001c380c pop bx
 	001c3814 cmpeq bx,ax
 	001c3820 mov ax,bx
 	001c382c jz 0x001c38a4
		001c38a4: CONDITIONAL_JUMP
		001c3834: FALL_THROUGH

	[001c3834]
		001c3780: FALL_THROUGH
 	001c3834 push op
 	001c383c mov ax,0x2c8717
 	001c3848 farpush ax
 	001c3850 mov mar,0x3cef20
 	001c385c mov ax,mar
 	001c3868 mov op,ax
 	001c3870 setfuncargs 0x1
 	001c3878 mov ax,0x6f6f20
 	001c3884 farcall ax
 	001c388c farsubsp 0x1
 	001c3894 pop op
 	001c389c jmp 0x001c3a9c
		001c3a9c: UNCONDITIONAL_JUMP

	[001c38a4]
		001c3780: CONDITIONAL_JUMP
 	001c38a4 sourceline 0x22c4
 	001c38ac stackptr 0x4
 	001c38b4 memread4 ax
 	001c38bc push ax
 	001c38c4 mov ax,0x1
 	001c38d0 pop bx
 	001c38d8 cmpeq bx,ax
 	001c38e4 mov ax,bx
 	001c38f0 jz 0x001c3968
		001c3968: CONDITIONAL_JUMP
		001c38f8: FALL_THROUGH

	[001c38f8]
		001c38a4: FALL_THROUGH
 	001c38f8 push op
 	001c3900 mov ax,0x2c8740
 	001c390c farpush ax
 	001c3914 mov mar,0x3cef20
 	001c3920 mov ax,mar
 	001c392c mov op,ax
 	001c3934 setfuncargs 0x1
 	001c393c mov ax,0x6f6f20
 	001c3948 farcall ax
 	001c3950 farsubsp 0x1
 	001c3958 pop op
 	001c3960 jmp 0x001c3a9c
		001c3a9c: UNCONDITIONAL_JUMP

	[001c3968]
		001c38a4: CONDITIONAL_JUMP
 	001c3968 sourceline 0x22c5
 	001c3970 stackptr 0x4
 	001c3978 memread4 ax
 	001c3980 push ax
 	001c3988 mov ax,0x2
 	001c3994 pop bx
 	001c399c cmpeq bx,ax
 	001c39a8 mov ax,bx
 	001c39b4 jz 0x001c3a2c
		001c3a2c: CONDITIONAL_JUMP
		001c39bc: FALL_THROUGH

	[001c39bc]
		001c3968: FALL_THROUGH
 	001c39bc push op
 	001c39c4 mov ax,0x2c8769
 	001c39d0 farpush ax
 	001c39d8 mov mar,0x3cef20
 	001c39e4 mov ax,mar
 	001c39f0 mov op,ax
 	001c39f8 setfuncargs 0x1
 	001c3a00 mov ax,0x6f6f20
 	001c3a0c farcall ax
 	001c3a14 farsubsp 0x1
 	001c3a1c pop op
 	001c3a24 jmp 0x001c3a9c
		001c3a9c: UNCONDITIONAL_JUMP

	[001c3a2c]
		001c3968: CONDITIONAL_JUMP
 	001c3a2c sourceline 0x22c6
 	001c3a34 push op
 	001c3a3c mov ax,0x2c8792
 	001c3a48 farpush ax
 	001c3a50 mov mar,0x3cef20
 	001c3a5c mov ax,mar
 	001c3a68 mov op,ax
 	001c3a70 setfuncargs 0x1
 	001c3a78 mov ax,0x6f6f20
 	001c3a84 farcall ax
 	001c3a8c farsubsp 0x1
 	001c3a94 pop op
		001c3a9c: FALL_THROUGH

	[001c3a9c]
		001c3834: UNCONDITIONAL_JUMP
		001c38f8: UNCONDITIONAL_JUMP
		001c39bc: UNCONDITIONAL_JUMP
		001c3a2c: FALL_THROUGH
 	001c3a9c sourceline 0x22c8
 	001c3aa4 push op
 	001c3aac mov ax,0x2c5224
 	001c3ab8 farpush ax
 	001c3ac0 mov mar,0xc56f20
 	001c3acc mov ax,mar
 	001c3ad8 mov op,ax
 	001c3ae0 setfuncargs 0x1
 	001c3ae8 mov ax,0x6f6f20
 	001c3af4 farcall ax
 	001c3afc farsubsp 0x1
 	001c3b04 pop op
 	001c3b0c sourceline 0x22c9
 	001c3b14 mov mar,0xc56f20
 	001c3b20 mov ax,mar
 	001c3b2c push op
 	001c3b34 mov op,ax
 	001c3b3c setfuncargs 0x0
 	001c3b44 mov ax,0xc7ef20
 	001c3b50 farcall ax
 	001c3b58 pop op
 	001c3b60 push ax
 	001c3b68 mov ax,0x11
 	001c3b74 pop bx
 	001c3b7c cmpeq bx,ax
 	001c3b88 mov ax,bx
 	001c3b94 jnz 0x001c3c44
		001c3c44: CONDITIONAL_JUMP
		001c3b9c: FALL_THROUGH

	[001c3b9c]
		001c3a9c: FALL_THROUGH
 	001c3b9c push ax
 	001c3ba4 mov mar,0xc56f20
 	001c3bb0 mov ax,mar
 	001c3bbc push op
 	001c3bc4 mov op,ax
 	001c3bcc setfuncargs 0x0
 	001c3bd4 mov ax,0xc7ef20
 	001c3be0 farcall ax
 	001c3be8 pop op
 	001c3bf0 push ax
 	001c3bf8 mov ax,0x12
 	001c3c04 pop bx
 	001c3c0c cmpeq bx,ax
 	001c3c18 mov ax,bx
 	001c3c24 pop bx
 	001c3c2c lor bx,ax
 	001c3c38 mov ax,bx
		001c3c44: FALL_THROUGH

	[001c3c44]
		001c3a9c: CONDITIONAL_JUMP
		001c3b9c: FALL_THROUGH
 	001c3c44 jnz 0x001c3cf4
		001c3cf4: CONDITIONAL_JUMP
		001c3c4c: FALL_THROUGH

	[001c3c4c]
		001c3c44: FALL_THROUGH
 	001c3c4c push ax
 	001c3c54 mov mar,0xc56f20
 	001c3c60 mov ax,mar
 	001c3c6c push op
 	001c3c74 mov op,ax
 	001c3c7c setfuncargs 0x0
 	001c3c84 mov ax,0xc7ef20
 	001c3c90 farcall ax
 	001c3c98 pop op
 	001c3ca0 push ax
 	001c3ca8 mov ax,0x13
 	001c3cb4 pop bx
 	001c3cbc cmpeq bx,ax
 	001c3cc8 mov ax,bx
 	001c3cd4 pop bx
 	001c3cdc lor bx,ax
 	001c3ce8 mov ax,bx
		001c3cf4: FALL_THROUGH

	[001c3cf4]
		001c3c44: CONDITIONAL_JUMP
		001c3c4c: FALL_THROUGH
 	001c3cf4 jnz 0x001c3da4
		001c3da4: CONDITIONAL_JUMP
		001c3cfc: FALL_THROUGH

	[001c3cfc]
		001c3cf4: FALL_THROUGH
 	001c3cfc push ax
 	001c3d04 mov mar,0xc56f20
 	001c3d10 mov ax,mar
 	001c3d1c push op
 	001c3d24 mov op,ax
 	001c3d2c setfuncargs 0x0
 	001c3d34 mov ax,0xc7ef20
 	001c3d40 farcall ax
 	001c3d48 pop op
 	001c3d50 push ax
 	001c3d58 mov ax,0x14
 	001c3d64 pop bx
 	001c3d6c cmpeq bx,ax
 	001c3d78 mov ax,bx
 	001c3d84 pop bx
 	001c3d8c lor bx,ax
 	001c3d98 mov ax,bx
		001c3da4: FALL_THROUGH

	[001c3da4]
		001c3cf4: CONDITIONAL_JUMP
		001c3cfc: FALL_THROUGH
 	001c3da4 jnz 0x001c3e54
		001c3e54: CONDITIONAL_JUMP
		001c3dac: FALL_THROUGH

	[001c3dac]
		001c3da4: FALL_THROUGH
 	001c3dac push ax
 	001c3db4 mov mar,0xc56f20
 	001c3dc0 mov ax,mar
 	001c3dcc push op
 	001c3dd4 mov op,ax
 	001c3ddc setfuncargs 0x0
 	001c3de4 mov ax,0xc7ef20
 	001c3df0 farcall ax
 	001c3df8 pop op
 	001c3e00 push ax
 	001c3e08 mov ax,0x15
 	001c3e14 pop bx
 	001c3e1c cmpeq bx,ax
 	001c3e28 mov ax,bx
 	001c3e34 pop bx
 	001c3e3c lor bx,ax
 	001c3e48 mov ax,bx
		001c3e54: FALL_THROUGH

	[001c3e54]
		001c3da4: CONDITIONAL_JUMP
		001c3dac: FALL_THROUGH
 	001c3e54 jnz 0x001c3f04
		001c3f04: CONDITIONAL_JUMP
		001c3e5c: FALL_THROUGH

	[001c3e5c]
		001c3e54: FALL_THROUGH
 	001c3e5c push ax
 	001c3e64 mov mar,0xc56f20
 	001c3e70 mov ax,mar
 	001c3e7c push op
 	001c3e84 mov op,ax
 	001c3e8c setfuncargs 0x0
 	001c3e94 mov ax,0xc7ef20
 	001c3ea0 farcall ax
 	001c3ea8 pop op
 	001c3eb0 push ax
 	001c3eb8 mov ax,0x16
 	001c3ec4 pop bx
 	001c3ecc cmpeq bx,ax
 	001c3ed8 mov ax,bx
 	001c3ee4 pop bx
 	001c3eec lor bx,ax
 	001c3ef8 mov ax,bx
		001c3f04: FALL_THROUGH

	[001c3f04]
		001c3e54: CONDITIONAL_JUMP
		001c3e5c: FALL_THROUGH
 	001c3f04 jz 0x001c40e4
		001c40e4: CONDITIONAL_JUMP
		001c3f0c: FALL_THROUGH

	[001c3f0c]
		001c3f04: FALL_THROUGH
 	001c3f0c sourceline 0x22cb
 	001c3f14 push op
 	001c3f1c mov ax,0x426
 	001c3f28 farpush ax
 	001c3f30 mov ax,0x397
 	001c3f3c farpush ax
 	001c3f44 mov ax,0x0
 	001c3f50 farpush ax
 	001c3f58 mov ax,0x3
 	001c3f64 farpush ax
 	001c3f6c mov ax,0x1d
 	001c3f78 farpush ax
 	001c3f80 mov mar,0xc56f20
 	001c3f8c mov ax,mar
 	001c3f98 mov op,ax
 	001c3fa0 setfuncargs 0x5
 	001c3fa8 mov ax,0x536f20
 	001c3fb4 farcall ax
 	001c3fbc farsubsp 0x5
 	001c3fc4 pop op
 	001c3fcc sourceline 0x22cc
 	001c3fd4 mov ax,0x1
 	001c3fe0 mov bx,ax
 	001c3fec mov mar,0xc56f20
 	001c3ff8 mov ax,mar
 	001c4004 push op
 	001c400c mov op,ax
 	001c4014 farpush bx
 	001c401c setfuncargs 0x1
 	001c4024 mov ax,0x766f20
 	001c4030 farcall ax
 	001c4038 farsubsp 0x1
 	001c4040 pop op
 	001c4048 mov ax,0x0
 	001c4054 mov bx,ax
 	001c4060 mov mar,0xc56f20
 	001c406c mov ax,mar
 	001c4078 push op
 	001c4080 mov op,ax
 	001c4088 farpush bx
 	001c4090 setfuncargs 0x1
 	001c4098 mov ax,0x52ef20
 	001c40a4 farcall ax
 	001c40ac farsubsp 0x1
 	001c40b4 pop op
 	001c40bc sourceline 0x22cd
 	001c40c4 mov ax,0x1
 	001c40d0 mov mar,0xc76f20
 	001c40dc memwrite4 ax
		001c40e4: FALL_THROUGH

	[001c40e4]
		001c3f04: CONDITIONAL_JUMP
		001c3f0c: FALL_THROUGH
 	001c40e4 sourceline 0x22d0
 	001c40ec mov mar,0xc56f20
 	001c40f8 mov ax,mar
 	001c4104 push op
 	001c410c mov op,ax
 	001c4114 setfuncargs 0x0
 	001c411c mov ax,0xc7ef20
 	001c4128 farcall ax
 	001c4130 pop op
 	001c4138 push ax
 	001c4140 mov ax,0x17
 	001c414c pop bx
 	001c4154 cmpeq bx,ax
 	001c4160 mov ax,bx
 	001c416c jnz 0x001c421c
		001c421c: CONDITIONAL_JUMP
		001c4174: FALL_THROUGH

	[001c4174]
		001c40e4: FALL_THROUGH
 	001c4174 push ax
 	001c417c mov mar,0xc56f20
 	001c4188 mov ax,mar
 	001c4194 push op
 	001c419c mov op,ax
 	001c41a4 setfuncargs 0x0
 	001c41ac mov ax,0xc7ef20
 	001c41b8 farcall ax
 	001c41c0 pop op
 	001c41c8 push ax
 	001c41d0 mov ax,0x18
 	001c41dc pop bx
 	001c41e4 cmpeq bx,ax
 	001c41f0 mov ax,bx
 	001c41fc pop bx
 	001c4204 lor bx,ax
 	001c4210 mov ax,bx
		001c421c: FALL_THROUGH

	[001c421c]
		001c40e4: CONDITIONAL_JUMP
		001c4174: FALL_THROUGH
 	001c421c jnz 0x001c42cc
		001c42cc: CONDITIONAL_JUMP
		001c4224: FALL_THROUGH

	[001c4224]
		001c421c: FALL_THROUGH
 	001c4224 push ax
 	001c422c mov mar,0xc56f20
 	001c4238 mov ax,mar
 	001c4244 push op
 	001c424c mov op,ax
 	001c4254 setfuncargs 0x0
 	001c425c mov ax,0xc7ef20
 	001c4268 farcall ax
 	001c4270 pop op
 	001c4278 push ax
 	001c4280 mov ax,0x19
 	001c428c pop bx
 	001c4294 cmpeq bx,ax
 	001c42a0 mov ax,bx
 	001c42ac pop bx
 	001c42b4 lor bx,ax
 	001c42c0 mov ax,bx
		001c42cc: FALL_THROUGH

	[001c42cc]
		001c421c: CONDITIONAL_JUMP
		001c4224: FALL_THROUGH
 	001c42cc jnz 0x001c437c
		001c437c: CONDITIONAL_JUMP
		001c42d4: FALL_THROUGH

	[001c42d4]
		001c42cc: FALL_THROUGH
 	001c42d4 push ax
 	001c42dc mov mar,0xc56f20
 	001c42e8 mov ax,mar
 	001c42f4 push op
 	001c42fc mov op,ax
 	001c4304 setfuncargs 0x0
 	001c430c mov ax,0xc7ef20
 	001c4318 farcall ax
 	001c4320 pop op
 	001c4328 push ax
 	001c4330 mov ax,0x1a
 	001c433c pop bx
 	001c4344 cmpeq bx,ax
 	001c4350 mov ax,bx
 	001c435c pop bx
 	001c4364 lor bx,ax
 	001c4370 mov ax,bx
		001c437c: FALL_THROUGH

	[001c437c]
		001c42cc: CONDITIONAL_JUMP
		001c42d4: FALL_THROUGH
 	001c437c jnz 0x001c442c
		001c442c: CONDITIONAL_JUMP
		001c4384: FALL_THROUGH

	[001c4384]
		001c437c: FALL_THROUGH
 	001c4384 push ax
 	001c438c mov mar,0xc56f20
 	001c4398 mov ax,mar
 	001c43a4 push op
 	001c43ac mov op,ax
 	001c43b4 setfuncargs 0x0
 	001c43bc mov ax,0xc7ef20
 	001c43c8 farcall ax
 	001c43d0 pop op
 	001c43d8 push ax
 	001c43e0 mov ax,0x1b
 	001c43ec pop bx
 	001c43f4 cmpeq bx,ax
 	001c4400 mov ax,bx
 	001c440c pop bx
 	001c4414 lor bx,ax
 	001c4420 mov ax,bx
		001c442c: FALL_THROUGH

	[001c442c]
		001c437c: CONDITIONAL_JUMP
		001c4384: FALL_THROUGH
 	001c442c jnz 0x001c44dc
		001c44dc: CONDITIONAL_JUMP
		001c4434: FALL_THROUGH

	[001c4434]
		001c442c: FALL_THROUGH
 	001c4434 push ax
 	001c443c mov mar,0xc56f20
 	001c4448 mov ax,mar
 	001c4454 push op
 	001c445c mov op,ax
 	001c4464 setfuncargs 0x0
 	001c446c mov ax,0xc7ef20
 	001c4478 farcall ax
 	001c4480 pop op
 	001c4488 push ax
 	001c4490 mov ax,0x1c
 	001c449c pop bx
 	001c44a4 cmpeq bx,ax
 	001c44b0 mov ax,bx
 	001c44bc pop bx
 	001c44c4 lor bx,ax
 	001c44d0 mov ax,bx
		001c44dc: FALL_THROUGH

	[001c44dc]
		001c442c: CONDITIONAL_JUMP
		001c4434: FALL_THROUGH
 	001c44dc jz 0x001c46bc
		001c46bc: CONDITIONAL_JUMP
		001c44e4: FALL_THROUGH

	[001c44e4]
		001c44dc: FALL_THROUGH
 	001c44e4 sourceline 0x22d2
 	001c44ec push op
 	001c44f4 mov ax,0x426
 	001c4500 farpush ax
 	001c4508 mov ax,0x397
 	001c4514 farpush ax
 	001c451c mov ax,0x0
 	001c4528 farpush ax
 	001c4530 mov ax,0x3
 	001c453c farpush ax
 	001c4544 mov ax,0x1e
 	001c4550 farpush ax
 	001c4558 mov mar,0xc56f20
 	001c4564 mov ax,mar
 	001c4570 mov op,ax
 	001c4578 setfuncargs 0x5
 	001c4580 mov ax,0x536f20
 	001c458c farcall ax
 	001c4594 farsubsp 0x5
 	001c459c pop op
 	001c45a4 sourceline 0x22d3
 	001c45ac mov ax,0x0
 	001c45b8 mov bx,ax
 	001c45c4 mov mar,0xc56f20
 	001c45d0 mov ax,mar
 	001c45dc push op
 	001c45e4 mov op,ax
 	001c45ec farpush bx
 	001c45f4 setfuncargs 0x1
 	001c45fc mov ax,0x766f20
 	001c4608 farcall ax
 	001c4610 farsubsp 0x1
 	001c4618 pop op
 	001c4620 mov ax,0x0
 	001c462c mov bx,ax
 	001c4638 mov mar,0xc56f20
 	001c4644 mov ax,mar
 	001c4650 push op
 	001c4658 mov op,ax
 	001c4660 farpush bx
 	001c4668 setfuncargs 0x1
 	001c4670 mov ax,0x52ef20
 	001c467c farcall ax
 	001c4684 farsubsp 0x1
 	001c468c pop op
 	001c4694 sourceline 0x22d4
 	001c469c mov ax,0x1
 	001c46a8 mov mar,0xc6ef20
 	001c46b4 memwrite4 ax
		001c46bc: FALL_THROUGH

	[001c46bc]
		001c44dc: CONDITIONAL_JUMP
		001c44e4: FALL_THROUGH
 	001c46bc sourceline 0x22d6
 	001c46c4 push op
 	001c46cc mov ax,0x427
 	001c46d8 farpush ax
 	001c46e0 mov ax,0x397
 	001c46ec farpush ax
 	001c46f4 mov ax,0x0
 	001c4700 farpush ax
 	001c4708 mov ax,0x3
 	001c4714 farpush ax
 	001c471c mov ax,0x0
 	001c4728 farpush ax
 	001c4730 mov mar,0x3cef20
 	001c473c mov ax,mar
 	001c4748 mov op,ax
 	001c4750 setfuncargs 0x5
 	001c4758 mov ax,0x536f20
 	001c4764 farcall ax
 	001c476c farsubsp 0x5
 	001c4774 pop op
 	001c477c sourceline 0x22d7
 	001c4784 push op
 	001c478c mov ax,0x2
 	001c4798 farpush ax
 	001c47a0 mov mar,0x3cef20
 	001c47ac mov ax,mar
 	001c47b8 mov op,ax
 	001c47c0 setfuncargs 0x1
 	001c47c8 mov ax,0x51ef20
 	001c47d4 farcall ax
 	001c47dc farsubsp 0x1
 	001c47e4 pop op
 	001c47ec sourceline 0x22d8
 	001c47f4 mov mar,0x3cef20
 	001c4800 mov ax,mar
 	001c480c push op
 	001c4814 mov op,ax
 	001c481c setfuncargs 0x0
 	001c4824 mov ax,0x78ef20
 	001c4830 farcall ax
 	001c4838 pop op
 	001c4840 push ax
 	001c4848 mov ax,0x7
 	001c4854 pop bx
 	001c485c add bx,ax
 	001c4868 mov ax,bx
 	001c4874 mov bx,ax
 	001c4880 mov mar,0x3cef20
 	001c488c mov ax,mar
 	001c4898 push op
 	001c48a0 mov op,ax
 	001c48a8 farpush bx
 	001c48b0 setfuncargs 0x1
 	001c48b8 mov ax,0x526f20
 	001c48c4 farcall ax
 	001c48cc farsubsp 0x1
 	001c48d4 pop op
 	001c48dc sourceline 0x22d9
 	001c48e4 mov mar,0x3cef20
 	001c48f0 mov ax,mar
 	001c48fc push op
 	001c4904 mov op,ax
 	001c490c setfuncargs 0x0
 	001c4914 mov ax,0xb36f20
 	001c4920 farcall ax
 	001c4928 pop op
 	001c4930 push ax
 	001c4938 mov ax,0x5
 	001c4944 pop bx
 	001c494c sub bx,ax
 	001c4958 mov ax,bx
 	001c4964 mov bx,ax
 	001c4970 mov mar,0x3cef20
 	001c497c mov ax,mar
 	001c4988 push op
 	001c4990 mov op,ax
 	001c4998 farpush bx
 	001c49a0 setfuncargs 0x1
 	001c49a8 mov ax,0x70ef20
 	001c49b4 farcall ax
 	001c49bc farsubsp 0x1
 	001c49c4 pop op
 	001c49cc sourceline 0x22da
 	001c49d4 mov ax,0x5
 	001c49e0 mov bx,ax
 	001c49ec mov mar,0x3cef20
 	001c49f8 mov ax,mar
 	001c4a04 push op
 	001c4a0c mov op,ax
 	001c4a14 farpush bx
 	001c4a1c setfuncargs 0x1
 	001c4a24 mov ax,0x766f20
 	001c4a30 farcall ax
 	001c4a38 farsubsp 0x1
 	001c4a40 pop op
 	001c4a48 sourceline 0x22db
 	001c4a50 sub sp,0x4
		001c4a5c: FALL_THROUGH

	[001c4a5c]
		001c2180: UNCONDITIONAL_JUMP
		001c46bc: FALL_THROUGH
 	001c4a5c sourceline 0x22dc
 	001c4a64 jmp 0x001c5184
		001c5184: UNCONDITIONAL_JUMP

	[001c4a6c]
		001c2144: CONDITIONAL_JUMP
 	001c4a6c sourceline 0x22de
 	001c4a74 mov mar,0x3cef20
 	001c4a80 mov ax,mar
 	001c4a8c push op
 	001c4a94 mov op,ax
 	001c4a9c setfuncargs 0x0
 	001c4aa4 mov ax,0x89ef20
 	001c4ab0 farcall ax
 	001c4ab8 pop op
 	001c4ac0 push ax
 	001c4ac8 mov mar,0x946f20
 	001c4ad4 mov ax,mar
 	001c4ae0 pop bx
 	001c4ae8 cmpeq bx,ax
 	001c4af4 mov ax,bx
 	001c4b00 jz 0x001c4e00
		001c4e00: CONDITIONAL_JUMP
		001c4b08: FALL_THROUGH

	[001c4b08]
		001c4a6c: FALL_THROUGH
 	001c4b08 sourceline 0x22e0
 	001c4b10 mov mar,0x3cef20
 	001c4b1c mov ax,mar
 	001c4b28 push op
 	001c4b30 mov op,ax
 	001c4b38 setfuncargs 0x0
 	001c4b40 mov ax,0x78ef20
 	001c4b4c farcall ax
 	001c4b54 pop op
 	001c4b5c push ax
 	001c4b64 mov ax,0x83
 	001c4b70 pop bx
 	001c4b78 cmpgt bx,ax
 	001c4b84 mov ax,bx
 	001c4b90 jz 0x001c4c30
		001c4c30: CONDITIONAL_JUMP
		001c4b98: FALL_THROUGH

	[001c4b98]
		001c4b08: FALL_THROUGH
 	001c4b98 push op
 	001c4ba0 mov ax,0x397
 	001c4bac farpush ax
 	001c4bb4 mov ax,0x52
 	001c4bc0 farpush ax
 	001c4bc8 mov ax,0x106
 	001c4bd4 farpush ax
 	001c4bdc mov mar,0x3cef20
 	001c4be8 mov ax,mar
 	001c4bf4 mov op,ax
 	001c4bfc setfuncargs 0x3
 	001c4c04 mov ax,0x726f20
 	001c4c10 farcall ax
 	001c4c18 farsubsp 0x3
 	001c4c20 pop op
 	001c4c28 jmp 0x001c4cc8
		001c4cc8: UNCONDITIONAL_JUMP

	[001c4c30]
		001c4b08: CONDITIONAL_JUMP
 	001c4c30 sourceline 0x22e1
 	001c4c38 push op
 	001c4c40 mov ax,0x397
 	001c4c4c farpush ax
 	001c4c54 mov ax,0x8d
 	001c4c60 farpush ax
 	001c4c68 mov ax,0xf5
 	001c4c74 farpush ax
 	001c4c7c mov mar,0x3cef20
 	001c4c88 mov ax,mar
 	001c4c94 mov op,ax
 	001c4c9c setfuncargs 0x3
 	001c4ca4 mov ax,0x726f20
 	001c4cb0 farcall ax
 	001c4cb8 farsubsp 0x3
 	001c4cc0 pop op
		001c4cc8: FALL_THROUGH

	[001c4cc8]
		001c4b98: UNCONDITIONAL_JUMP
		001c4c30: FALL_THROUGH
 	001c4cc8 sourceline 0x22e2
 	001c4cd0 mov ax,0x1
 	001c4cdc mov bx,ax
 	001c4ce8 mov mar,0x3cef20
 	001c4cf4 mov ax,mar
 	001c4d00 push op
 	001c4d08 mov op,ax
 	001c4d10 farpush bx
 	001c4d18 setfuncargs 0x1
 	001c4d20 mov ax,0x69ef20
 	001c4d2c farcall ax
 	001c4d34 farsubsp 0x1
 	001c4d3c pop op
 	001c4d44 sourceline 0x22e4
 	001c4d4c push op
 	001c4d54 mov ax,0x2c5246
 	001c4d60 farpush ax
 	001c4d68 mov ax,0x138
 	001c4d74 farpush ax
 	001c4d7c mov ax,0x92
 	001c4d88 farpush ax
 	001c4d90 mov ax,0x0
 	001c4d9c farpush ax
 	001c4da4 mov mar,0x3cef20
 	001c4db0 mov ax,mar
 	001c4dbc mov op,ax
 	001c4dc4 setfuncargs 0x4
 	001c4dcc mov ax,0x6aef20
 	001c4dd8 farcall ax
 	001c4de0 farsubsp 0x4
 	001c4de8 pop op
 	001c4df0 sourceline 0x22e5
 	001c4df8 jmp 0x001c5184
		001c5184: UNCONDITIONAL_JUMP

	[001c4e00]
		001c4a6c: CONDITIONAL_JUMP
 	001c4e00 sourceline 0x22e7
 	001c4e08 mov mar,0x3cef20
 	001c4e14 mov ax,mar
 	001c4e20 push op
 	001c4e28 mov op,ax
 	001c4e30 setfuncargs 0x0
 	001c4e38 mov ax,0x89ef20
 	001c4e44 farcall ax
 	001c4e4c pop op
 	001c4e54 push ax
 	001c4e5c mov mar,0x956f20
 	001c4e68 mov ax,mar
 	001c4e74 pop bx
 	001c4e7c cmpeq bx,ax
 	001c4e88 mov ax,bx
 	001c4e94 jz 0x001c5184
		001c5184: CONDITIONAL_JUMP
		001c4e9c: FALL_THROUGH

	[001c4e9c]
		001c4e00: FALL_THROUGH
 	001c4e9c sourceline 0x22e9
 	001c4ea4 mov mar,0x3cef20
 	001c4eb0 mov ax,mar
 	001c4ebc push op
 	001c4ec4 mov op,ax
 	001c4ecc setfuncargs 0x0
 	001c4ed4 mov ax,0x78ef20
 	001c4ee0 farcall ax
 	001c4ee8 pop op
 	001c4ef0 push ax
 	001c4ef8 mov ax,0x83
 	001c4f04 pop bx
 	001c4f0c cmpgt bx,ax
 	001c4f18 mov ax,bx
 	001c4f24 jz 0x001c4fc4
		001c4fc4: CONDITIONAL_JUMP
		001c4f2c: FALL_THROUGH

	[001c4f2c]
		001c4e9c: FALL_THROUGH
 	001c4f2c push op
 	001c4f34 mov ax,0x397
 	001c4f40 farpush ax
 	001c4f48 mov ax,0x52
 	001c4f54 farpush ax
 	001c4f5c mov ax,0x106
 	001c4f68 farpush ax
 	001c4f70 mov mar,0x3cef20
 	001c4f7c mov ax,mar
 	001c4f88 mov op,ax
 	001c4f90 setfuncargs 0x3
 	001c4f98 mov ax,0x726f20
 	001c4fa4 farcall ax
 	001c4fac farsubsp 0x3
 	001c4fb4 pop op
 	001c4fbc jmp 0x001c505c
		001c505c: UNCONDITIONAL_JUMP

	[001c4fc4]
		001c4e9c: CONDITIONAL_JUMP
 	001c4fc4 sourceline 0x22ea
 	001c4fcc push op
 	001c4fd4 mov ax,0x397
 	001c4fe0 farpush ax
 	001c4fe8 mov ax,0x8d
 	001c4ff4 farpush ax
 	001c4ffc mov ax,0xf5
 	001c5008 farpush ax
 	001c5010 mov mar,0x3cef20
 	001c501c mov ax,mar
 	001c5028 mov op,ax
 	001c5030 setfuncargs 0x3
 	001c5038 mov ax,0x726f20
 	001c5044 farcall ax
 	001c504c farsubsp 0x3
 	001c5054 pop op
		001c505c: FALL_THROUGH

	[001c505c]
		001c4f2c: UNCONDITIONAL_JUMP
		001c4fc4: FALL_THROUGH
 	001c505c sourceline 0x22eb
 	001c5064 mov ax,0x1
 	001c5070 mov bx,ax
 	001c507c mov mar,0x3cef20
 	001c5088 mov ax,mar
 	001c5094 push op
 	001c509c mov op,ax
 	001c50a4 farpush bx
 	001c50ac setfuncargs 0x1
 	001c50b4 mov ax,0x69ef20
 	001c50c0 farcall ax
 	001c50c8 farsubsp 0x1
 	001c50d0 pop op
 	001c50d8 sourceline 0x22ed
 	001c50e0 push op
 	001c50e8 mov ax,0x2c52db
 	001c50f4 farpush ax
 	001c50fc mov ax,0x138
 	001c5108 farpush ax
 	001c5110 mov ax,0x92
 	001c511c farpush ax
 	001c5124 mov ax,0x0
 	001c5130 farpush ax
 	001c5138 mov mar,0x3cef20
 	001c5144 mov ax,mar
 	001c5150 mov op,ax
 	001c5158 setfuncargs 0x4
 	001c5160 mov ax,0x6aef20
 	001c516c farcall ax
 	001c5174 farsubsp 0x4
 	001c517c pop op
		001c5184: FALL_THROUGH

	[001c5184]
		001c4a5c: UNCONDITIONAL_JUMP
		001c4cc8: UNCONDITIONAL_JUMP
		001c4e00: CONDITIONAL_JUMP
		001c505c: FALL_THROUGH
 	001c5184 sourceline 0x22ef
 	001c518c jmp 0x001c5528
		001c5528: UNCONDITIONAL_JUMP

	[001c5194]
		001c10a4: CONDITIONAL_JUMP
 	001c5194 sourceline 0x22f3
 	001c519c push op
 	001c51a4 mov ax,0x397
 	001c51b0 farpush ax
 	001c51b8 mov ax,0x71
 	001c51c4 farpush ax
 	001c51cc mov ax,0x68
 	001c51d8 farpush ax
 	001c51e0 mov mar,0x3cef20
 	001c51ec mov ax,mar
 	001c51f8 mov op,ax
 	001c5200 setfuncargs 0x3
 	001c5208 mov ax,0x726f20
 	001c5214 farcall ax
 	001c521c farsubsp 0x3
 	001c5224 pop op
 	001c522c sourceline 0x22f4
 	001c5234 mov mar,0x3cef20
 	001c5240 mov ax,mar
 	001c524c push op
 	001c5254 mov op,ax
 	001c525c setfuncargs 0x0
 	001c5264 mov ax,0x89ef20
 	001c5270 farcall ax
 	001c5278 pop op
 	001c5280 push ax
 	001c5288 mov mar,0x956f20
 	001c5294 mov ax,mar
 	001c52a0 pop bx
 	001c52a8 cmpeq bx,ax
 	001c52b4 mov ax,bx
 	001c52c0 jz 0x001c5400
		001c5400: CONDITIONAL_JUMP
		001c52c8: FALL_THROUGH

	[001c52c8]
		001c5194: FALL_THROUGH
 	001c52c8 sourceline 0x22f6
 	001c52d0 mov ax,0x1
 	001c52dc mov bx,ax
 	001c52e8 mov mar,0x3cef20
 	001c52f4 mov ax,mar
 	001c5300 push op
 	001c5308 mov op,ax
 	001c5310 farpush bx
 	001c5318 setfuncargs 0x1
 	001c5320 mov ax,0x69ef20
 	001c532c farcall ax
 	001c5334 farsubsp 0x1
 	001c533c pop op
 	001c5344 sourceline 0x22f8
 	001c534c push op
 	001c5354 mov ax,0x2c52db
 	001c5360 farpush ax
 	001c5368 mov ax,0x138
 	001c5374 farpush ax
 	001c537c mov ax,0x92
 	001c5388 farpush ax
 	001c5390 mov ax,0x0
 	001c539c farpush ax
 	001c53a4 mov mar,0x3cef20
 	001c53b0 mov ax,mar
 	001c53bc mov op,ax
 	001c53c4 setfuncargs 0x4
 	001c53cc mov ax,0x6aef20
 	001c53d8 farcall ax
 	001c53e0 farsubsp 0x4
 	001c53e8 pop op
 	001c53f0 sourceline 0x22f9
 	001c53f8 jmp 0x001c5528
		001c5528: UNCONDITIONAL_JUMP

	[001c5400]
		001c5194: CONDITIONAL_JUMP
 	001c5400 sourceline 0x22fc
 	001c5408 mov ax,0x1
 	001c5414 mov bx,ax
 	001c5420 mov mar,0x3cef20
 	001c542c mov ax,mar
 	001c5438 push op
 	001c5440 mov op,ax
 	001c5448 farpush bx
 	001c5450 setfuncargs 0x1
 	001c5458 mov ax,0x69ef20
 	001c5464 farcall ax
 	001c546c farsubsp 0x1
 	001c5474 pop op
 	001c547c sourceline 0x22fe
 	001c5484 push op
 	001c548c mov ax,0x2c5344
 	001c5498 farpush ax
 	001c54a0 mov ax,0x138
 	001c54ac farpush ax
 	001c54b4 mov ax,0x92
 	001c54c0 farpush ax
 	001c54c8 mov ax,0x0
 	001c54d4 farpush ax
 	001c54dc mov mar,0x3cef20
 	001c54e8 mov ax,mar
 	001c54f4 mov op,ax
 	001c54fc setfuncargs 0x4
 	001c5504 mov ax,0x6aef20
 	001c5510 farcall ax
 	001c5518 farsubsp 0x4
 	001c5520 pop op
		001c5528: FALL_THROUGH

	[001c5528]
		001c5184: UNCONDITIONAL_JUMP
		001c52c8: UNCONDITIONAL_JUMP
		001c5400: FALL_THROUGH
 	001c5528 sourceline 0x2301
 	001c5530 mov ax,0x0
 	001c553c ret

cJudy_Look$0:
	[001c5540]
 	001c5540 sourceline 0x2308
 	001c5548 thisaddr
 	001c5550 sourceline 0x2309
 	001c5558 push op
 	001c5560 mov ax,0x397
 	001c556c farpush ax
 	001c5574 mov ax,0x73
 	001c5580 farpush ax
 	001c5588 mov ax,0x5c
 	001c5594 farpush ax
*	001c559c mov mar,0x3cef20
 	001c55a8 mov ax,mar
 	001c55b4 mov op,ax
 	001c55bc setfuncargs 0x3
 	001c55c4 mov ax,0x726f20
 	001c55d0 farcall ax
 	001c55d8 farsubsp 0x3
 	001c55e0 pop op
 	001c55e8 sourceline 0x230a
 	001c55f0 mov ax,0x1
 	001c55fc mov bx,ax
 	001c5608 mov mar,0x3cef20
 	001c5614 mov ax,mar
 	001c5620 push op
 	001c5628 mov op,ax
 	001c5630 farpush bx
 	001c5638 setfuncargs 0x1
 	001c5640 mov ax,0x69ef20
 	001c564c farcall ax
 	001c5654 farsubsp 0x1
 	001c565c pop op
 	001c5664 sourceline 0x230b
 	001c566c push op
 	001c5674 mov ax,0x2c5367
 	001c5680 farpush ax
 	001c5688 mov ax,0x138
 	001c5694 farpush ax
 	001c569c mov ax,0x92
 	001c56a8 farpush ax
 	001c56b0 mov ax,0x0
 	001c56bc farpush ax
 	001c56c4 mov mar,0x3cef20
 	001c56d0 mov ax,mar
 	001c56dc mov op,ax
 	001c56e4 setfuncargs 0x4
 	001c56ec mov ax,0x6aef20
 	001c56f8 farcall ax
 	001c5700 farsubsp 0x4
 	001c5708 pop op
 	001c5710 sourceline 0x230c
 	001c5718 mov ax,0x0
 	001c5724 ret

cRec_Look$0:
	[001c5728]
 	001c5728 sourceline 0x2310
 	001c5730 thisaddr
 	001c5738 sourceline 0x2311
 	001c5740 push op
 	001c5748 mov ax,0x397
 	001c5754 farpush ax
 	001c575c mov ax,0xab
 	001c5768 farpush ax
 	001c5770 mov ax,0x122
 	001c577c farpush ax
*	001c5784 mov mar,0x3cef20
 	001c5790 mov ax,mar
 	001c579c mov op,ax
 	001c57a4 setfuncargs 0x3
 	001c57ac mov ax,0x726f20
 	001c57b8 farcall ax
 	001c57c0 farsubsp 0x3
 	001c57c8 pop op
 	001c57d0 sourceline 0x2312
 	001c57d8 mov ax,0x1
 	001c57e4 mov bx,ax
 	001c57f0 mov mar,0x3cef20
 	001c57fc mov ax,mar
 	001c5808 push op
 	001c5810 mov op,ax
 	001c5818 farpush bx
 	001c5820 setfuncargs 0x1
 	001c5828 mov ax,0x69ef20
 	001c5834 farcall ax
 	001c583c farsubsp 0x1
 	001c5844 pop op
 	001c584c sourceline 0x2313
 	001c5854 push op
 	001c585c mov ax,0x2c5410
 	001c5868 farpush ax
 	001c5870 mov ax,0x138
 	001c587c farpush ax
 	001c5884 mov ax,0x92
 	001c5890 farpush ax
 	001c5898 mov ax,0x0
 	001c58a4 farpush ax
 	001c58ac mov mar,0x3cef20
 	001c58b8 mov ax,mar
 	001c58c4 mov op,ax
 	001c58cc setfuncargs 0x4
 	001c58d4 mov ax,0x6aef20
 	001c58e0 farcall ax
 	001c58e8 farsubsp 0x4
 	001c58f0 pop op
 	001c58f8 sourceline 0x2314
 	001c5900 mov ax,0x0
 	001c590c ret

cPharmacyMan_Look$0:
	[001c5910]
 	001c5910 sourceline 0x231a
 	001c5918 thisaddr
 	001c5920 sourceline 0x231b
 	001c5928 push op
 	001c5930 mov ax,0x397
 	001c593c farpush ax
 	001c5944 mov ax,0x6e
 	001c5950 farpush ax
 	001c5958 mov ax,0x110
 	001c5964 farpush ax
*	001c596c mov mar,0x3cef20
 	001c5978 mov ax,mar
 	001c5984 mov op,ax
 	001c598c setfuncargs 0x3
 	001c5994 mov ax,0x726f20
 	001c59a0 farcall ax
 	001c59a8 farsubsp 0x3
 	001c59b0 pop op
 	001c59b8 sourceline 0x231c
 	001c59c0 mov ax,0x1
 	001c59cc mov bx,ax
 	001c59d8 mov mar,0x3cef20
 	001c59e4 mov ax,mar
 	001c59f0 push op
 	001c59f8 mov op,ax
 	001c5a00 farpush bx
 	001c5a08 setfuncargs 0x1
 	001c5a10 mov ax,0x69ef20
 	001c5a1c farcall ax
 	001c5a24 farsubsp 0x1
 	001c5a2c pop op
 	001c5a34 sourceline 0x231d
 	001c5a3c push op
 	001c5a44 mov ax,0x2c5485
 	001c5a50 farpush ax
 	001c5a58 mov ax,0x138
 	001c5a64 farpush ax
 	001c5a6c mov ax,0x92
 	001c5a78 farpush ax
 	001c5a80 mov ax,0x0
 	001c5a8c farpush ax
 	001c5a94 mov mar,0x3cef20
 	001c5aa0 mov ax,mar
 	001c5aac mov op,ax
 	001c5ab4 setfuncargs 0x4
 	001c5abc mov ax,0x6aef20
 	001c5ac8 farcall ax
 	001c5ad0 farsubsp 0x4
 	001c5ad8 pop op
 	001c5ae0 sourceline 0x231e
 	001c5ae8 mov ax,0x0
 	001c5af4 ret

cProcter_Look$0:
	[001c5af8]
 	001c5af8 sourceline 0x2322
 	001c5b00 thisaddr
 	001c5b08 sourceline 0x2323
 	001c5b10 mov ax,0x1
 	001c5b1c mov bx,ax
*	001c5b28 mov mar,0x3cef20
 	001c5b34 mov ax,mar
 	001c5b40 push op
 	001c5b48 mov op,ax
 	001c5b50 farpush bx
 	001c5b58 setfuncargs 0x1
 	001c5b60 mov ax,0x69ef20
 	001c5b6c farcall ax
 	001c5b74 farsubsp 0x1
 	001c5b7c pop op
 	001c5b84 sourceline 0x2324
 	001c5b8c mov mar,0x746f20
 	001c5b98 mov ax,mar
 	001c5ba4 push op
 	001c5bac mov op,ax
 	001c5bb4 setfuncargs 0x0
 	001c5bbc mov ax,0x516f20
 	001c5bc8 farcall ax
 	001c5bd0 pop op
 	001c5bd8 push ax
 	001c5be0 mov ax,0x44
 	001c5bec pop bx
 	001c5bf4 cmpeq bx,ax
 	001c5c00 mov ax,bx
 	001c5c0c jz 0x001c5d68
		001c5d68: CONDITIONAL_JUMP
		001c5c14: FALL_THROUGH

	[001c5c14]
		001c5af8: FALL_THROUGH
 	001c5c14 sourceline 0x2326
 	001c5c1c push op
 	001c5c24 mov ax,0x397
 	001c5c30 farpush ax
 	001c5c38 mov ax,0x98
 	001c5c44 farpush ax
 	001c5c4c mov ax,0x33
 	001c5c58 farpush ax
 	001c5c60 mov mar,0x3cef20
 	001c5c6c mov ax,mar
 	001c5c78 mov op,ax
 	001c5c80 setfuncargs 0x3
 	001c5c88 mov ax,0x726f20
 	001c5c94 farcall ax
 	001c5c9c farsubsp 0x3
 	001c5ca4 pop op
 	001c5cac sourceline 0x2327
 	001c5cb4 push op
 	001c5cbc mov ax,0x2c5509
 	001c5cc8 farpush ax
 	001c5cd0 mov ax,0x138
 	001c5cdc farpush ax
 	001c5ce4 mov ax,0x92
 	001c5cf0 farpush ax
 	001c5cf8 mov ax,0x0
 	001c5d04 farpush ax
 	001c5d0c mov mar,0x3cef20
 	001c5d18 mov ax,mar
 	001c5d24 mov op,ax
 	001c5d2c setfuncargs 0x4
 	001c5d34 mov ax,0x6aef20
 	001c5d40 farcall ax
 	001c5d48 farsubsp 0x4
 	001c5d50 pop op
 	001c5d58 sourceline 0x2328
 	001c5d60 jmp 0x001c5e14
		001c5e14: UNCONDITIONAL_JUMP

	[001c5d68]
		001c5af8: CONDITIONAL_JUMP
 	001c5d68 sourceline 0x2329
 	001c5d70 push op
 	001c5d78 mov ax,0x2c5541
 	001c5d84 farpush ax
 	001c5d8c mov ax,0x138
 	001c5d98 farpush ax
 	001c5da0 mov ax,0x92
 	001c5dac farpush ax
 	001c5db4 mov ax,0x0
 	001c5dc0 farpush ax
 	001c5dc8 mov mar,0x3cef20
 	001c5dd4 mov ax,mar
 	001c5de0 mov op,ax
 	001c5de8 setfuncargs 0x4
 	001c5df0 mov ax,0x6aef20
 	001c5dfc farcall ax
 	001c5e04 farsubsp 0x4
 	001c5e0c pop op
		001c5e14: FALL_THROUGH

	[001c5e14]
		001c5c14: UNCONDITIONAL_JUMP
		001c5d68: FALL_THROUGH
 	001c5e14 sourceline 0x232a
 	001c5e1c mov ax,0x0
 	001c5e28 ret

cPoliceMan_Look$0:
	[001c5e2c]
 	001c5e2c sourceline 0x232e
 	001c5e34 thisaddr
 	001c5e3c sourceline 0x232f
*	001c5e44 mov mar,0xb5ef20
 	001c5e50 memread4 ax
 	001c5e58 lnot ax
 	001c5e60 jz 0x001c6038
		001c6038: CONDITIONAL_JUMP
		001c5e68: FALL_THROUGH

	[001c5e68]
		001c5e2c: FALL_THROUGH
 	001c5e68 sourceline 0x2331
 	001c5e70 push op
 	001c5e78 mov ax,0x397
 	001c5e84 farpush ax
 	001c5e8c mov ax,0x53
 	001c5e98 farpush ax
 	001c5ea0 mov ax,0x9e
 	001c5eac farpush ax
 	001c5eb4 mov mar,0x3cef20
 	001c5ec0 mov ax,mar
 	001c5ecc mov op,ax
 	001c5ed4 setfuncargs 0x3
 	001c5edc mov ax,0x726f20
 	001c5ee8 farcall ax
 	001c5ef0 farsubsp 0x3
 	001c5ef8 pop op
 	001c5f00 sourceline 0x2332
 	001c5f08 mov ax,0x1
 	001c5f14 mov bx,ax
 	001c5f20 mov mar,0x3cef20
 	001c5f2c mov ax,mar
 	001c5f38 push op
 	001c5f40 mov op,ax
 	001c5f48 farpush bx
 	001c5f50 setfuncargs 0x1
 	001c5f58 mov ax,0x69ef20
 	001c5f64 farcall ax
 	001c5f6c farsubsp 0x1
 	001c5f74 pop op
 	001c5f7c sourceline 0x2333
 	001c5f84 push op
 	001c5f8c mov ax,0x2c55ae
 	001c5f98 farpush ax
 	001c5fa0 mov ax,0x138
 	001c5fac farpush ax
 	001c5fb4 mov ax,0x92
 	001c5fc0 farpush ax
 	001c5fc8 mov ax,0x0
 	001c5fd4 farpush ax
 	001c5fdc mov mar,0x3cef20
 	001c5fe8 mov ax,mar
 	001c5ff4 mov op,ax
 	001c5ffc setfuncargs 0x4
 	001c6004 mov ax,0x6aef20
 	001c6010 farcall ax
 	001c6018 farsubsp 0x4
 	001c6020 pop op
 	001c6028 sourceline 0x2334
 	001c6030 jmp 0x001c61f8
		001c61f8: UNCONDITIONAL_JUMP

	[001c6038]
		001c5e2c: CONDITIONAL_JUMP
 	001c6038 sourceline 0x2337
 	001c6040 push op
 	001c6048 mov ax,0x397
 	001c6054 farpush ax
 	001c605c mov ax,0x53
 	001c6068 farpush ax
 	001c6070 mov ax,0x9e
 	001c607c farpush ax
 	001c6084 mov mar,0x3cef20
 	001c6090 mov ax,mar
 	001c609c mov op,ax
 	001c60a4 setfuncargs 0x3
 	001c60ac mov ax,0x726f20
 	001c60b8 farcall ax
 	001c60c0 farsubsp 0x3
 	001c60c8 pop op
 	001c60d0 sourceline 0x2338
 	001c60d8 mov ax,0x1
 	001c60e4 mov bx,ax
 	001c60f0 mov mar,0x3cef20
 	001c60fc mov ax,mar
 	001c6108 push op
 	001c6110 mov op,ax
 	001c6118 farpush bx
 	001c6120 setfuncargs 0x1
 	001c6128 mov ax,0x69ef20
 	001c6134 farcall ax
 	001c613c farsubsp 0x1
 	001c6144 pop op
 	001c614c sourceline 0x2339
 	001c6154 push op
 	001c615c mov ax,0x2c55f9
 	001c6168 farpush ax
 	001c6170 mov ax,0x138
 	001c617c farpush ax
 	001c6184 mov ax,0x92
 	001c6190 farpush ax
 	001c6198 mov ax,0x0
 	001c61a4 farpush ax
 	001c61ac mov mar,0x3cef20
 	001c61b8 mov ax,mar
 	001c61c4 mov op,ax
 	001c61cc setfuncargs 0x4
 	001c61d4 mov ax,0x6aef20
 	001c61e0 farcall ax
 	001c61e8 farsubsp 0x4
 	001c61f0 pop op
		001c61f8: FALL_THROUGH

	[001c61f8]
		001c5e68: UNCONDITIONAL_JUMP
		001c6038: FALL_THROUGH
 	001c61f8 sourceline 0x233b
 	001c6200 mov ax,0x0
 	001c620c ret

cPatricia_Look$0:
	[001c6210]
 	001c6210 sourceline 0x2340
 	001c6218 thisaddr
 	001c6220 sourceline 0x2341
 	001c6228 push op
 	001c6230 mov ax,0x397
 	001c623c farpush ax
 	001c6244 mov ax,0xc7
 	001c6250 farpush ax
 	001c6258 mov ax,-0x5
 	001c6264 farpush ax
*	001c626c mov mar,0x3cef20
 	001c6278 mov ax,mar
 	001c6284 mov op,ax
 	001c628c setfuncargs 0x3
 	001c6294 mov ax,0x726f20
 	001c62a0 farcall ax
 	001c62a8 farsubsp 0x3
 	001c62b0 pop op
 	001c62b8 sourceline 0x2342
 	001c62c0 mov ax,0x1
 	001c62cc mov bx,ax
 	001c62d8 mov mar,0x3cef20
 	001c62e4 mov ax,mar
 	001c62f0 push op
 	001c62f8 mov op,ax
 	001c6300 farpush bx
 	001c6308 setfuncargs 0x1
 	001c6310 mov ax,0x69ef20
 	001c631c farcall ax
 	001c6324 farsubsp 0x1
 	001c632c pop op
 	001c6334 sourceline 0x2343
 	001c633c push op
 	001c6344 mov ax,0x2c564d
 	001c6350 farpush ax
 	001c6358 mov ax,0x138
 	001c6364 farpush ax
 	001c636c mov ax,0x92
 	001c6378 farpush ax
 	001c6380 mov ax,0x0
 	001c638c farpush ax
 	001c6394 mov mar,0x3cef20
 	001c63a0 mov ax,mar
 	001c63ac mov op,ax
 	001c63b4 setfuncargs 0x4
 	001c63bc mov ax,0x6aef20
 	001c63c8 farcall ax
 	001c63d0 farsubsp 0x4
 	001c63d8 pop op
 	001c63e0 sourceline 0x2344
 	001c63e8 mov ax,0x0
 	001c63f4 ret

cYou_Look$0:
	[001c63f8]
 	001c63f8 sourceline 0x2348
 	001c6400 thisaddr
 	001c6408 sourceline 0x2349
 	001c6410 mov ax,0x1
 	001c641c mov bx,ax
*	001c6428 mov mar,0x3cef20
 	001c6434 mov ax,mar
 	001c6440 push op
 	001c6448 mov op,ax
 	001c6450 farpush bx
 	001c6458 setfuncargs 0x1
 	001c6460 mov ax,0x69ef20
 	001c646c farcall ax
 	001c6474 farsubsp 0x1
 	001c647c pop op
 	001c6484 sourceline 0x234a
 	001c648c push op
 	001c6494 mov ax,0x2c56df
 	001c64a0 farpush ax
 	001c64a8 mov ax,0x138
 	001c64b4 farpush ax
 	001c64bc mov ax,0x92
 	001c64c8 farpush ax
 	001c64d0 mov ax,0x0
 	001c64dc farpush ax
 	001c64e4 mov mar,0x3cef20
 	001c64f0 mov ax,mar
 	001c64fc mov op,ax
 	001c6504 setfuncargs 0x4
 	001c650c mov ax,0x6aef20
 	001c6518 farcall ax
 	001c6520 farsubsp 0x4
 	001c6528 pop op
 	001c6530 sourceline 0x234b
 	001c6538 mov ax,0x0
 	001c6544 ret

cBlake_Look$0:
	[001c6548]
 	001c6548 sourceline 0x2350
 	001c6550 thisaddr
 	001c6558 sourceline 0x2351
*	001c6560 mov mar,0xb8ef20
 	001c656c memread4 ax
 	001c6574 push ax
 	001c657c mov ax,0x3
 	001c6588 pop bx
 	001c6590 cmpneq bx,ax
 	001c659c mov ax,bx
 	001c65a8 jz 0x001c69e0
		001c69e0: CONDITIONAL_JUMP
		001c65b0: FALL_THROUGH

	[001c65b0]
		001c6548: FALL_THROUGH
 	001c65b0 sourceline 0x2353
 	001c65b8 mov mar,0xb9ef20
 	001c65c4 mov ax,mar
 	001c65d0 push op
 	001c65d8 mov op,ax
 	001c65e0 setfuncargs 0x0
 	001c65e8 mov ax,0x516f20
 	001c65f4 farcall ax
 	001c65fc pop op
 	001c6604 push ax
 	001c660c mov ax,0x72
 	001c6618 pop bx
 	001c6620 cmpeq bx,ax
 	001c662c mov ax,bx
 	001c6638 jz 0x001c6810
		001c6810: CONDITIONAL_JUMP
		001c6640: FALL_THROUGH

	[001c6640]
		001c65b0: FALL_THROUGH
 	001c6640 sourceline 0x2355
 	001c6648 push op
 	001c6650 mov ax,0x397
 	001c665c farpush ax
 	001c6664 mov ax,0x4e
 	001c6670 farpush ax
 	001c6678 mov ax,0xae
 	001c6684 farpush ax
 	001c668c mov mar,0x3cef20
 	001c6698 mov ax,mar
 	001c66a4 mov op,ax
 	001c66ac setfuncargs 0x3
 	001c66b4 mov ax,0x726f20
 	001c66c0 farcall ax
 	001c66c8 farsubsp 0x3
 	001c66d0 pop op
 	001c66d8 sourceline 0x2356
 	001c66e0 mov ax,0x1
 	001c66ec mov bx,ax
 	001c66f8 mov mar,0x3cef20
 	001c6704 mov ax,mar
 	001c6710 push op
 	001c6718 mov op,ax
 	001c6720 farpush bx
 	001c6728 setfuncargs 0x1
 	001c6730 mov ax,0x69ef20
 	001c673c farcall ax
 	001c6744 farsubsp 0x1
 	001c674c pop op
 	001c6754 sourceline 0x2357
 	001c675c push op
 	001c6764 mov ax,0x2c5766
 	001c6770 farpush ax
 	001c6778 mov ax,0x138
 	001c6784 farpush ax
 	001c678c mov ax,0x92
 	001c6798 farpush ax
 	001c67a0 mov ax,0x0
 	001c67ac farpush ax
 	001c67b4 mov mar,0x3cef20
 	001c67c0 mov ax,mar
 	001c67cc mov op,ax
 	001c67d4 setfuncargs 0x4
 	001c67dc mov ax,0x6aef20
 	001c67e8 farcall ax
 	001c67f0 farsubsp 0x4
 	001c67f8 pop op
 	001c6800 sourceline 0x2358
 	001c6808 jmp 0x001c69d0
		001c69d0: UNCONDITIONAL_JUMP

	[001c6810]
		001c65b0: CONDITIONAL_JUMP
 	001c6810 sourceline 0x235b
 	001c6818 push op
 	001c6820 mov ax,0x397
 	001c682c farpush ax
 	001c6834 mov ax,0x49
 	001c6840 farpush ax
 	001c6848 mov ax,0x4f
 	001c6854 farpush ax
 	001c685c mov mar,0x3cef20
 	001c6868 mov ax,mar
 	001c6874 mov op,ax
 	001c687c setfuncargs 0x3
 	001c6884 mov ax,0x726f20
 	001c6890 farcall ax
 	001c6898 farsubsp 0x3
 	001c68a0 pop op
 	001c68a8 sourceline 0x235c
 	001c68b0 mov ax,0x1
 	001c68bc mov bx,ax
 	001c68c8 mov mar,0x3cef20
 	001c68d4 mov ax,mar
 	001c68e0 push op
 	001c68e8 mov op,ax
 	001c68f0 farpush bx
 	001c68f8 setfuncargs 0x1
 	001c6900 mov ax,0x69ef20
 	001c690c farcall ax
 	001c6914 farsubsp 0x1
 	001c691c pop op
 	001c6924 sourceline 0x235d
 	001c692c push op
 	001c6934 mov ax,0x2c5766
 	001c6940 farpush ax
 	001c6948 mov ax,0x138
 	001c6954 farpush ax
 	001c695c mov ax,0x92
 	001c6968 farpush ax
 	001c6970 mov ax,0x0
 	001c697c farpush ax
 	001c6984 mov mar,0x3cef20
 	001c6990 mov ax,mar
 	001c699c mov op,ax
 	001c69a4 setfuncargs 0x4
 	001c69ac mov ax,0x6aef20
 	001c69b8 farcall ax
 	001c69c0 farsubsp 0x4
 	001c69c8 pop op
		001c69d0: FALL_THROUGH

	[001c69d0]
		001c6640: UNCONDITIONAL_JUMP
		001c6810: FALL_THROUGH
 	001c69d0 sourceline 0x235f
 	001c69d8 jmp 0x001c6ba0
		001c6ba0: UNCONDITIONAL_JUMP

	[001c69e0]
		001c6548: CONDITIONAL_JUMP
 	001c69e0 sourceline 0x2362
 	001c69e8 push op
 	001c69f0 mov ax,0x397
 	001c69fc farpush ax
 	001c6a04 mov ax,0x49
 	001c6a10 farpush ax
 	001c6a18 mov ax,0x4f
 	001c6a24 farpush ax
 	001c6a2c mov mar,0x3cef20
 	001c6a38 mov ax,mar
 	001c6a44 mov op,ax
 	001c6a4c setfuncargs 0x3
 	001c6a54 mov ax,0x726f20
 	001c6a60 farcall ax
 	001c6a68 farsubsp 0x3
 	001c6a70 pop op
 	001c6a78 sourceline 0x2363
 	001c6a80 mov ax,0x1
 	001c6a8c mov bx,ax
 	001c6a98 mov mar,0x3cef20
 	001c6aa4 mov ax,mar
 	001c6ab0 push op
 	001c6ab8 mov op,ax
 	001c6ac0 farpush bx
 	001c6ac8 setfuncargs 0x1
 	001c6ad0 mov ax,0x69ef20
 	001c6adc farcall ax
 	001c6ae4 farsubsp 0x1
 	001c6aec pop op
 	001c6af4 sourceline 0x2364
 	001c6afc push op
 	001c6b04 mov ax,0x2c57b3
 	001c6b10 farpush ax
 	001c6b18 mov ax,0x138
 	001c6b24 farpush ax
 	001c6b2c mov ax,0x92
 	001c6b38 farpush ax
 	001c6b40 mov ax,0x0
 	001c6b4c farpush ax
 	001c6b54 mov mar,0x3cef20
 	001c6b60 mov ax,mar
 	001c6b6c mov op,ax
 	001c6b74 setfuncargs 0x4
 	001c6b7c mov ax,0x6aef20
 	001c6b88 farcall ax
 	001c6b90 farsubsp 0x4
 	001c6b98 pop op
		001c6ba0: FALL_THROUGH

	[001c6ba0]
		001c69d0: UNCONDITIONAL_JUMP
		001c69e0: FALL_THROUGH
 	001c6ba0 sourceline 0x2379
 	001c6ba8 mov ax,0x0
 	001c6bb4 ret

cKosloff_Look$0:
	[001c6bb8]
 	001c6bb8 sourceline 0x237e
 	001c6bc0 thisaddr
 	001c6bc8 sourceline 0x237f
*	001c6bd0 mov mar,0x74ef20
 	001c6bdc memread4 ax
 	001c6be4 lnot ax
 	001c6bec jz 0x001c6c8c
		001c6c8c: CONDITIONAL_JUMP
		001c6bf4: FALL_THROUGH

	[001c6bf4]
		001c6bb8: FALL_THROUGH
 	001c6bf4 sourceline 0x2381
 	001c6bfc push op
 	001c6c04 mov ax,0x397
 	001c6c10 farpush ax
 	001c6c18 mov ax,0x8c
 	001c6c24 farpush ax
 	001c6c2c mov ax,0xdf
 	001c6c38 farpush ax
 	001c6c40 mov mar,0x3cef20
 	001c6c4c mov ax,mar
 	001c6c58 mov op,ax
 	001c6c60 setfuncargs 0x3
 	001c6c68 mov ax,0x726f20
 	001c6c74 farcall ax
 	001c6c7c farsubsp 0x3
 	001c6c84 pop op
		001c6c8c: FALL_THROUGH

	[001c6c8c]
		001c6bb8: CONDITIONAL_JUMP
		001c6bf4: FALL_THROUGH
 	001c6c8c sourceline 0x2383
 	001c6c94 mov ax,0x1
 	001c6ca0 mov bx,ax
 	001c6cac mov mar,0x3cef20
 	001c6cb8 mov ax,mar
 	001c6cc4 push op
 	001c6ccc mov op,ax
 	001c6cd4 farpush bx
 	001c6cdc setfuncargs 0x1
 	001c6ce4 mov ax,0x69ef20
 	001c6cf0 farcall ax
 	001c6cf8 farsubsp 0x1
 	001c6d00 pop op
 	001c6d08 sourceline 0x2384
 	001c6d10 mov mar,0xba6f20
 	001c6d1c memread4 ax
 	001c6d24 lnot ax
 	001c6d2c jz 0x001c6de0
		001c6de0: CONDITIONAL_JUMP
		001c6d34: FALL_THROUGH

	[001c6d34]
		001c6c8c: FALL_THROUGH
 	001c6d34 push op
 	001c6d3c mov ax,0x2c57f4
 	001c6d48 farpush ax
 	001c6d50 mov ax,0x138
 	001c6d5c farpush ax
 	001c6d64 mov ax,0x92
 	001c6d70 farpush ax
 	001c6d78 mov ax,0x0
 	001c6d84 farpush ax
 	001c6d8c mov mar,0x3cef20
 	001c6d98 mov ax,mar
 	001c6da4 mov op,ax
 	001c6dac setfuncargs 0x4
 	001c6db4 mov ax,0x6aef20
 	001c6dc0 farcall ax
 	001c6dc8 farsubsp 0x4
 	001c6dd0 pop op
 	001c6dd8 jmp 0x001c6e8c
		001c6e8c: UNCONDITIONAL_JUMP

	[001c6de0]
		001c6c8c: CONDITIONAL_JUMP
 	001c6de0 sourceline 0x2385
 	001c6de8 push op
 	001c6df0 mov ax,0x2c583e
 	001c6dfc farpush ax
 	001c6e04 mov ax,0x138
 	001c6e10 farpush ax
 	001c6e18 mov ax,0x92
 	001c6e24 farpush ax
 	001c6e2c mov ax,0x0
 	001c6e38 farpush ax
 	001c6e40 mov mar,0x3cef20
 	001c6e4c mov ax,mar
 	001c6e58 mov op,ax
 	001c6e60 setfuncargs 0x4
 	001c6e68 mov ax,0x6aef20
 	001c6e74 farcall ax
 	001c6e7c farsubsp 0x4
 	001c6e84 pop op
		001c6e8c: FALL_THROUGH

	[001c6e8c]
		001c6d34: UNCONDITIONAL_JUMP
		001c6de0: FALL_THROUGH
 	001c6e8c sourceline 0x2386
 	001c6e94 mov ax,0x0
 	001c6ea0 ret

cVegetableSeller_Look$0:
	[001c6ea4]
 	001c6ea4 sourceline 0x238b
 	001c6eac thisaddr
 	001c6eb4 sourceline 0x238c
 	001c6ebc push op
 	001c6ec4 mov ax,0x397
 	001c6ed0 farpush ax
 	001c6ed8 mov ax,0x5d
 	001c6ee4 farpush ax
 	001c6eec mov ax,0x5
 	001c6ef8 farpush ax
*	001c6f00 mov mar,0x3cef20
 	001c6f0c mov ax,mar
 	001c6f18 mov op,ax
 	001c6f20 setfuncargs 0x3
 	001c6f28 mov ax,0x726f20
 	001c6f34 farcall ax
 	001c6f3c farsubsp 0x3
 	001c6f44 pop op
 	001c6f4c sourceline 0x238d
 	001c6f54 mov ax,0x1
 	001c6f60 mov bx,ax
 	001c6f6c mov mar,0x3cef20
 	001c6f78 mov ax,mar
 	001c6f84 push op
 	001c6f8c mov op,ax
 	001c6f94 farpush bx
 	001c6f9c setfuncargs 0x1
 	001c6fa4 mov ax,0x69ef20
 	001c6fb0 farcall ax
 	001c6fb8 farsubsp 0x1
 	001c6fc0 pop op
 	001c6fc8 sourceline 0x238e
 	001c6fd0 push op
 	001c6fd8 mov ax,0x2c586b
 	001c6fe4 farpush ax
 	001c6fec mov ax,0x138
 	001c6ff8 farpush ax
 	001c7000 mov ax,0x92
 	001c700c farpush ax
 	001c7014 mov ax,0x0
 	001c7020 farpush ax
 	001c7028 mov mar,0x3cef20
 	001c7034 mov ax,mar
 	001c7040 mov op,ax
 	001c7048 setfuncargs 0x4
 	001c7050 mov ax,0x6aef20
 	001c705c farcall ax
 	001c7064 farsubsp 0x4
 	001c706c pop op
 	001c7074 sourceline 0x238f
 	001c707c mov ax,0x0
 	001c7088 ret

cButcher_Look$0:
	[001c708c]
 	001c708c sourceline 0x2394
 	001c7094 thisaddr
 	001c709c sourceline 0x2395
 	001c70a4 push op
 	001c70ac mov ax,0x397
 	001c70b8 farpush ax
 	001c70c0 mov ax,0x66
 	001c70cc farpush ax
 	001c70d4 mov ax,0x13e
 	001c70e0 farpush ax
*	001c70e8 mov mar,0x3cef20
 	001c70f4 mov ax,mar
 	001c7100 mov op,ax
 	001c7108 setfuncargs 0x3
 	001c7110 mov ax,0x726f20
 	001c711c farcall ax
 	001c7124 farsubsp 0x3
 	001c712c pop op
 	001c7134 sourceline 0x2396
 	001c713c mov ax,0x1
 	001c7148 mov bx,ax
 	001c7154 mov mar,0x3cef20
 	001c7160 mov ax,mar
 	001c716c push op
 	001c7174 mov op,ax
 	001c717c farpush bx
 	001c7184 setfuncargs 0x1
 	001c718c mov ax,0x69ef20
 	001c7198 farcall ax
 	001c71a0 farsubsp 0x1
 	001c71a8 pop op
 	001c71b0 sourceline 0x2397
 	001c71b8 push op
 	001c71c0 mov ax,0x2c58b9
 	001c71cc farpush ax
 	001c71d4 mov ax,0x138
 	001c71e0 farpush ax
 	001c71e8 mov ax,0x92
 	001c71f4 farpush ax
 	001c71fc mov ax,0x0
 	001c7208 farpush ax
 	001c7210 mov mar,0x3cef20
 	001c721c mov ax,mar
 	001c7228 mov op,ax
 	001c7230 setfuncargs 0x4
 	001c7238 mov ax,0x6aef20
 	001c7244 farcall ax
 	001c724c farsubsp 0x4
 	001c7254 pop op
 	001c725c sourceline 0x2398
 	001c7264 mov ax,0x0
 	001c7270 ret

cKid_Look$0:
	[001c7274]
 	001c7274 sourceline 0x239d
 	001c727c thisaddr
 	001c7284 sourceline 0x239e
*	001c728c mov mar,0x42ef20
 	001c7298 push mar
 	001c72a0 pop mar
 	001c72a8 memread.ptr ax
 	001c72b0 push ax
 	001c72b8 pop mar
 	001c72c0 mov ax,mar
 	001c72cc push op
 	001c72d4 mov op,ax
 	001c72dc setfuncargs 0x0
 	001c72e4 mov ax,0x78ef20
 	001c72f0 farcall ax
 	001c72f8 pop op
 	001c7300 push ax
 	001c7308 mov ax,0x83
 	001c7314 pop bx
 	001c731c cmplt bx,ax
 	001c7328 mov ax,bx
 	001c7334 jz 0x001c73d4
		001c73d4: CONDITIONAL_JUMP
		001c733c: FALL_THROUGH

	[001c733c]
		001c7274: FALL_THROUGH
 	001c733c push op
 	001c7344 mov ax,0x397
 	001c7350 farpush ax
 	001c7358 mov ax,0xa6
 	001c7364 farpush ax
 	001c736c mov ax,0xa9
 	001c7378 farpush ax
 	001c7380 mov mar,0x3cef20
 	001c738c mov ax,mar
 	001c7398 mov op,ax
 	001c73a0 setfuncargs 0x3
 	001c73a8 mov ax,0x726f20
 	001c73b4 farcall ax
 	001c73bc farsubsp 0x3
 	001c73c4 pop op
 	001c73cc jmp 0x001c746c
		001c746c: UNCONDITIONAL_JUMP

	[001c73d4]
		001c7274: CONDITIONAL_JUMP
 	001c73d4 sourceline 0x239f
 	001c73dc push op
 	001c73e4 mov ax,0x397
 	001c73f0 farpush ax
 	001c73f8 mov ax,0x6d
 	001c7404 farpush ax
 	001c740c mov ax,0xd1
 	001c7418 farpush ax
 	001c7420 mov mar,0x3cef20
 	001c742c mov ax,mar
 	001c7438 mov op,ax
 	001c7440 setfuncargs 0x3
 	001c7448 mov ax,0x726f20
 	001c7454 farcall ax
 	001c745c farsubsp 0x3
 	001c7464 pop op
		001c746c: FALL_THROUGH

	[001c746c]
		001c733c: UNCONDITIONAL_JUMP
		001c73d4: FALL_THROUGH
 	001c746c sourceline 0x23a0
 	001c7474 mov ax,0x1
 	001c7480 mov bx,ax
 	001c748c mov mar,0x3cef20
 	001c7498 mov ax,mar
 	001c74a4 push op
 	001c74ac mov op,ax
 	001c74b4 farpush bx
 	001c74bc setfuncargs 0x1
 	001c74c4 mov ax,0x69ef20
 	001c74d0 farcall ax
 	001c74d8 farsubsp 0x1
 	001c74e0 pop op
 	001c74e8 sourceline 0x23a1
 	001c74f0 push op
 	001c74f8 mov ax,0x2c58f2
 	001c7504 farpush ax
 	001c750c mov ax,0x138
 	001c7518 farpush ax
 	001c7520 mov ax,0x92
 	001c752c farpush ax
 	001c7534 mov ax,0x0
 	001c7540 farpush ax
 	001c7548 mov mar,0x3cef20
 	001c7554 mov ax,mar
 	001c7560 mov op,ax
 	001c7568 setfuncargs 0x4
 	001c7570 mov ax,0x6aef20
 	001c757c farcall ax
 	001c7584 farsubsp 0x4
 	001c758c pop op
 	001c7594 sourceline 0x23a2
 	001c759c mov ax,0x0
 	001c75a8 ret

cHippie_Look$0:
	[001c75ac]
 	001c75ac sourceline 0x23a8
 	001c75b4 thisaddr
 	001c75bc sourceline 0x23a9
 	001c75c4 push op
 	001c75cc mov ax,0x397
 	001c75d8 farpush ax
 	001c75e0 mov ax,0x4c
 	001c75ec farpush ax
 	001c75f4 mov ax,0x91
 	001c7600 farpush ax
*	001c7608 mov mar,0x3cef20
 	001c7614 mov ax,mar
 	001c7620 mov op,ax
 	001c7628 setfuncargs 0x3
 	001c7630 mov ax,0x726f20
 	001c763c farcall ax
 	001c7644 farsubsp 0x3
 	001c764c pop op
 	001c7654 sourceline 0x23aa
 	001c765c mov ax,0x1
 	001c7668 mov bx,ax
 	001c7674 mov mar,0x3cef20
 	001c7680 mov ax,mar
 	001c768c push op
 	001c7694 mov op,ax
 	001c769c farpush bx
 	001c76a4 setfuncargs 0x1
 	001c76ac mov ax,0x69ef20
 	001c76b8 farcall ax
 	001c76c0 farsubsp 0x1
 	001c76c8 pop op
 	001c76d0 sourceline 0x23ab
 	001c76d8 push op
 	001c76e0 mov ax,0x2c5946
 	001c76ec farpush ax
 	001c76f4 mov ax,0x138
 	001c7700 farpush ax
 	001c7708 mov ax,0x92
 	001c7714 farpush ax
 	001c771c mov ax,0x0
 	001c7728 farpush ax
 	001c7730 mov mar,0x3cef20
 	001c773c mov ax,mar
 	001c7748 mov op,ax
 	001c7750 setfuncargs 0x4
 	001c7758 mov ax,0x6aef20
 	001c7764 farcall ax
 	001c776c farsubsp 0x4
 	001c7774 pop op
 	001c777c sourceline 0x23ac
 	001c7784 mov ax,0x0
 	001c7790 ret

cMuslimWoman_Look$0:
	[001c7794]
 	001c7794 sourceline 0x23b2
 	001c779c thisaddr
 	001c77a4 sourceline 0x23b3
*	001c77ac mov mar,0xc56f20
 	001c77b8 mov ax,mar
 	001c77c4 push op
 	001c77cc mov op,ax
 	001c77d4 setfuncargs 0x0
 	001c77dc mov ax,0x516f20
 	001c77e8 farcall ax
 	001c77f0 pop op
 	001c77f8 push ax
 	001c7800 mov ax,0xa2
 	001c780c pop bx
 	001c7814 cmpneq bx,ax
 	001c7820 mov ax,bx
 	001c782c jz 0x001c7a04
		001c7a04: CONDITIONAL_JUMP
		001c7834: FALL_THROUGH

	[001c7834]
		001c7794: FALL_THROUGH
 	001c7834 sourceline 0x23b5
 	001c783c push op
 	001c7844 mov ax,0x397
 	001c7850 farpush ax
 	001c7858 mov ax,0x6b
 	001c7864 farpush ax
 	001c786c mov ax,0x57
 	001c7878 farpush ax
 	001c7880 mov mar,0x3cef20
 	001c788c mov ax,mar
 	001c7898 mov op,ax
 	001c78a0 setfuncargs 0x3
 	001c78a8 mov ax,0x726f20
 	001c78b4 farcall ax
 	001c78bc farsubsp 0x3
 	001c78c4 pop op
 	001c78cc sourceline 0x23b6
 	001c78d4 mov ax,0x1
 	001c78e0 mov bx,ax
 	001c78ec mov mar,0x3cef20
 	001c78f8 mov ax,mar
 	001c7904 push op
 	001c790c mov op,ax
 	001c7914 farpush bx
 	001c791c setfuncargs 0x1
 	001c7924 mov ax,0x69ef20
 	001c7930 farcall ax
 	001c7938 farsubsp 0x1
 	001c7940 pop op
 	001c7948 sourceline 0x23b7
 	001c7950 push op
 	001c7958 mov ax,0x2c5985
 	001c7964 farpush ax
 	001c796c mov ax,0x138
 	001c7978 farpush ax
 	001c7980 mov ax,0x92
 	001c798c farpush ax
 	001c7994 mov ax,0x0
 	001c79a0 farpush ax
 	001c79a8 mov mar,0x3cef20
 	001c79b4 mov ax,mar
 	001c79c0 mov op,ax
 	001c79c8 setfuncargs 0x4
 	001c79d0 mov ax,0x6aef20
 	001c79dc farcall ax
 	001c79e4 farsubsp 0x4
 	001c79ec pop op
 	001c79f4 sourceline 0x23b8
 	001c79fc jmp 0x001c7bc4
		001c7bc4: UNCONDITIONAL_JUMP

	[001c7a04]
		001c7794: CONDITIONAL_JUMP
 	001c7a04 sourceline 0x23bb
 	001c7a0c push op
 	001c7a14 mov ax,0x397
 	001c7a20 farpush ax
 	001c7a28 mov ax,0x6b
 	001c7a34 farpush ax
 	001c7a3c mov ax,0x57
 	001c7a48 farpush ax
 	001c7a50 mov mar,0x3cef20
 	001c7a5c mov ax,mar
 	001c7a68 mov op,ax
 	001c7a70 setfuncargs 0x3
 	001c7a78 mov ax,0x726f20
 	001c7a84 farcall ax
 	001c7a8c farsubsp 0x3
 	001c7a94 pop op
 	001c7a9c sourceline 0x23bc
 	001c7aa4 mov ax,0x1
 	001c7ab0 mov bx,ax
 	001c7abc mov mar,0x3cef20
 	001c7ac8 mov ax,mar
 	001c7ad4 push op
 	001c7adc mov op,ax
 	001c7ae4 farpush bx
 	001c7aec setfuncargs 0x1
 	001c7af4 mov ax,0x69ef20
 	001c7b00 farcall ax
 	001c7b08 farsubsp 0x1
 	001c7b10 pop op
 	001c7b18 sourceline 0x23bd
 	001c7b20 push op
 	001c7b28 mov ax,0x2c5b23
 	001c7b34 farpush ax
 	001c7b3c mov ax,0x138
 	001c7b48 farpush ax
 	001c7b50 mov ax,0x92
 	001c7b5c farpush ax
 	001c7b64 mov ax,0x0
 	001c7b70 farpush ax
 	001c7b78 mov mar,0x3cef20
 	001c7b84 mov ax,mar
 	001c7b90 mov op,ax
 	001c7b98 setfuncargs 0x4
 	001c7ba0 mov ax,0x6aef20
 	001c7bac farcall ax
 	001c7bb4 farsubsp 0x4
 	001c7bbc pop op
		001c7bc4: FALL_THROUGH

	[001c7bc4]
		001c7834: UNCONDITIONAL_JUMP
		001c7a04: FALL_THROUGH
 	001c7bc4 sourceline 0x23bf
 	001c7bcc mov ax,0x0
 	001c7bd8 ret

cOldIranian_Look$0:
	[001c7bdc]
 	001c7bdc sourceline 0x23c4
 	001c7be4 thisaddr
 	001c7bec sourceline 0x23c5
*	001c7bf4 mov mar,0xc56f20
 	001c7c00 mov ax,mar
 	001c7c0c push op
 	001c7c14 mov op,ax
 	001c7c1c setfuncargs 0x0
 	001c7c24 mov ax,0x516f20
 	001c7c30 farcall ax
 	001c7c38 pop op
 	001c7c40 push ax
 	001c7c48 mov ax,0xa2
 	001c7c54 pop bx
 	001c7c5c cmpneq bx,ax
 	001c7c68 mov ax,bx
 	001c7c74 jz 0x001c7e4c
		001c7e4c: CONDITIONAL_JUMP
		001c7c7c: FALL_THROUGH

	[001c7c7c]
		001c7bdc: FALL_THROUGH
 	001c7c7c sourceline 0x23c7
 	001c7c84 push op
 	001c7c8c mov ax,0x397
 	001c7c98 farpush ax
 	001c7ca0 mov ax,0x6a
 	001c7cac farpush ax
 	001c7cb4 mov ax,0x1e
 	001c7cc0 farpush ax
 	001c7cc8 mov mar,0x3cef20
 	001c7cd4 mov ax,mar
 	001c7ce0 mov op,ax
 	001c7ce8 setfuncargs 0x3
 	001c7cf0 mov ax,0x726f20
 	001c7cfc farcall ax
 	001c7d04 farsubsp 0x3
 	001c7d0c pop op
 	001c7d14 sourceline 0x23c8
 	001c7d1c mov ax,0x1
 	001c7d28 mov bx,ax
 	001c7d34 mov mar,0x3cef20
 	001c7d40 mov ax,mar
 	001c7d4c push op
 	001c7d54 mov op,ax
 	001c7d5c farpush bx
 	001c7d64 setfuncargs 0x1
 	001c7d6c mov ax,0x69ef20
 	001c7d78 farcall ax
 	001c7d80 farsubsp 0x1
 	001c7d88 pop op
 	001c7d90 sourceline 0x23c9
 	001c7d98 push op
 	001c7da0 mov ax,0x2c5a0e
 	001c7dac farpush ax
 	001c7db4 mov ax,0x138
 	001c7dc0 farpush ax
 	001c7dc8 mov ax,0x92
 	001c7dd4 farpush ax
 	001c7ddc mov ax,0x0
 	001c7de8 farpush ax
 	001c7df0 mov mar,0x3cef20
 	001c7dfc mov ax,mar
 	001c7e08 mov op,ax
 	001c7e10 setfuncargs 0x4
 	001c7e18 mov ax,0x6aef20
 	001c7e24 farcall ax
 	001c7e2c farsubsp 0x4
 	001c7e34 pop op
 	001c7e3c sourceline 0x23ca
 	001c7e44 jmp 0x001c800c
		001c800c: UNCONDITIONAL_JUMP

	[001c7e4c]
		001c7bdc: CONDITIONAL_JUMP
 	001c7e4c sourceline 0x23cd
 	001c7e54 push op
 	001c7e5c mov ax,0x397
 	001c7e68 farpush ax
 	001c7e70 mov ax,0x6a
 	001c7e7c farpush ax
 	001c7e84 mov ax,0x1e
 	001c7e90 farpush ax
 	001c7e98 mov mar,0x3cef20
 	001c7ea4 mov ax,mar
 	001c7eb0 mov op,ax
 	001c7eb8 setfuncargs 0x3
 	001c7ec0 mov ax,0x726f20
 	001c7ecc farcall ax
 	001c7ed4 farsubsp 0x3
 	001c7edc pop op
 	001c7ee4 sourceline 0x23ce
 	001c7eec mov ax,0x1
 	001c7ef8 mov bx,ax
 	001c7f04 mov mar,0x3cef20
 	001c7f10 mov ax,mar
 	001c7f1c push op
 	001c7f24 mov op,ax
 	001c7f2c farpush bx
 	001c7f34 setfuncargs 0x1
 	001c7f3c mov ax,0x69ef20
 	001c7f48 farcall ax
 	001c7f50 farsubsp 0x1
 	001c7f58 pop op
 	001c7f60 sourceline 0x23cf
 	001c7f68 push op
 	001c7f70 mov ax,0x2c5a9f
 	001c7f7c farpush ax
 	001c7f84 mov ax,0x138
 	001c7f90 farpush ax
 	001c7f98 mov ax,0x92
 	001c7fa4 farpush ax
 	001c7fac mov ax,0x0
 	001c7fb8 farpush ax
 	001c7fc0 mov mar,0x3cef20
 	001c7fcc mov ax,mar
 	001c7fd8 mov op,ax
 	001c7fe0 setfuncargs 0x4
 	001c7fe8 mov ax,0x6aef20
 	001c7ff4 farcall ax
 	001c7ffc farsubsp 0x4
 	001c8004 pop op
		001c800c: FALL_THROUGH

	[001c800c]
		001c7c7c: UNCONDITIONAL_JUMP
		001c7e4c: FALL_THROUGH
 	001c800c sourceline 0x23d1
 	001c8014 mov ax,0x0
 	001c8020 ret

cGuard_Look$0:
	[001c8024]
 	001c8024 sourceline 0x23d6
 	001c802c thisaddr
 	001c8034 sourceline 0x23d7
*	001c803c mov mar,0xc56f20
 	001c8048 mov ax,mar
 	001c8054 push op
 	001c805c mov op,ax
 	001c8064 setfuncargs 0x0
 	001c806c mov ax,0x516f20
 	001c8078 farcall ax
 	001c8080 pop op
 	001c8088 push ax
 	001c8090 mov ax,0xa2
 	001c809c pop bx
 	001c80a4 cmpneq bx,ax
 	001c80b0 mov ax,bx
 	001c80bc jz 0x001c83bc
		001c83bc: CONDITIONAL_JUMP
		001c80c4: FALL_THROUGH

	[001c80c4]
		001c8024: FALL_THROUGH
 	001c80c4 sourceline 0x23d9
 	001c80cc mov mar,0x3cef20
 	001c80d8 mov ax,mar
 	001c80e4 push op
 	001c80ec mov op,ax
 	001c80f4 setfuncargs 0x0
 	001c80fc mov ax,0x78ef20
 	001c8108 farcall ax
 	001c8110 pop op
 	001c8118 push ax
 	001c8120 mov ax,0x83
 	001c812c pop bx
 	001c8134 cmpgt bx,ax
 	001c8140 mov ax,bx
 	001c814c jz 0x001c81ec
		001c81ec: CONDITIONAL_JUMP
		001c8154: FALL_THROUGH

	[001c8154]
		001c80c4: FALL_THROUGH
 	001c8154 push op
 	001c815c mov ax,0x397
 	001c8168 farpush ax
 	001c8170 mov ax,0x52
 	001c817c farpush ax
 	001c8184 mov ax,0x106
 	001c8190 farpush ax
 	001c8198 mov mar,0x3cef20
 	001c81a4 mov ax,mar
 	001c81b0 mov op,ax
 	001c81b8 setfuncargs 0x3
 	001c81c0 mov ax,0x726f20
 	001c81cc farcall ax
 	001c81d4 farsubsp 0x3
 	001c81dc pop op
 	001c81e4 jmp 0x001c8284
		001c8284: UNCONDITIONAL_JUMP

	[001c81ec]
		001c80c4: CONDITIONAL_JUMP
 	001c81ec sourceline 0x23da
 	001c81f4 push op
 	001c81fc mov ax,0x397
 	001c8208 farpush ax
 	001c8210 mov ax,0x8d
 	001c821c farpush ax
 	001c8224 mov ax,0xf5
 	001c8230 farpush ax
 	001c8238 mov mar,0x3cef20
 	001c8244 mov ax,mar
 	001c8250 mov op,ax
 	001c8258 setfuncargs 0x3
 	001c8260 mov ax,0x726f20
 	001c826c farcall ax
 	001c8274 farsubsp 0x3
 	001c827c pop op
		001c8284: FALL_THROUGH

	[001c8284]
		001c8154: UNCONDITIONAL_JUMP
		001c81ec: FALL_THROUGH
 	001c8284 sourceline 0x23db
 	001c828c mov ax,0x1
 	001c8298 mov bx,ax
 	001c82a4 mov mar,0x3cef20
 	001c82b0 mov ax,mar
 	001c82bc push op
 	001c82c4 mov op,ax
 	001c82cc farpush bx
 	001c82d4 setfuncargs 0x1
 	001c82dc mov ax,0x69ef20
 	001c82e8 farcall ax
 	001c82f0 farsubsp 0x1
 	001c82f8 pop op
 	001c8300 sourceline 0x23dc
 	001c8308 push op
 	001c8310 mov ax,0x2c5ae8
 	001c831c farpush ax
 	001c8324 mov ax,0x138
 	001c8330 farpush ax
 	001c8338 mov ax,0x92
 	001c8344 farpush ax
 	001c834c mov ax,0x0
 	001c8358 farpush ax
 	001c8360 mov mar,0x3cef20
 	001c836c mov ax,mar
 	001c8378 mov op,ax
 	001c8380 setfuncargs 0x4
 	001c8388 mov ax,0x6aef20
 	001c8394 farcall ax
 	001c839c farsubsp 0x4
 	001c83a4 pop op
 	001c83ac sourceline 0x23dd
 	001c83b4 jmp 0x001c857c
		001c857c: UNCONDITIONAL_JUMP

	[001c83bc]
		001c8024: CONDITIONAL_JUMP
 	001c83bc sourceline 0x23e0
 	001c83c4 push op
 	001c83cc mov ax,0x397
 	001c83d8 farpush ax
 	001c83e0 mov ax,0x71
 	001c83ec farpush ax
 	001c83f4 mov ax,0x68
 	001c8400 farpush ax
 	001c8408 mov mar,0x3cef20
 	001c8414 mov ax,mar
 	001c8420 mov op,ax
 	001c8428 setfuncargs 0x3
 	001c8430 mov ax,0x726f20
 	001c843c farcall ax
 	001c8444 farsubsp 0x3
 	001c844c pop op
 	001c8454 sourceline 0x23e1
 	001c845c mov ax,0x1
 	001c8468 mov bx,ax
 	001c8474 mov mar,0x3cef20
 	001c8480 mov ax,mar
 	001c848c push op
 	001c8494 mov op,ax
 	001c849c farpush bx
 	001c84a4 setfuncargs 0x1
 	001c84ac mov ax,0x69ef20
 	001c84b8 farcall ax
 	001c84c0 farsubsp 0x1
 	001c84c8 pop op
 	001c84d0 sourceline 0x23e2
 	001c84d8 push op
 	001c84e0 mov ax,0x2c5b23
 	001c84ec farpush ax
 	001c84f4 mov ax,0x138
 	001c8500 farpush ax
 	001c8508 mov ax,0x92
 	001c8514 farpush ax
 	001c851c mov ax,0x0
 	001c8528 farpush ax
 	001c8530 mov mar,0x3cef20
 	001c853c mov ax,mar
 	001c8548 mov op,ax
 	001c8550 setfuncargs 0x4
 	001c8558 mov ax,0x6aef20
 	001c8564 farcall ax
 	001c856c farsubsp 0x4
 	001c8574 pop op
		001c857c: FALL_THROUGH

	[001c857c]
		001c8284: UNCONDITIONAL_JUMP
		001c83bc: FALL_THROUGH
 	001c857c sourceline 0x23e4
 	001c8584 mov ax,0x0
 	001c8590 ret

gPhone_OnClick$2:
	[001c8594]
 	001c8594 sourceline 0x23eb
 	001c859c thisaddr
 	001c85a4 stackptr 0x8
 	001c85ac memread4 ax
 	001c85b4 meminit ax
 	001c85bc sourceline 0x23ec
 	001c85c4 stackptr 0xc
 	001c85cc memread4 ax
 	001c85d4 push ax
 	001c85dc mov ax,0x2
 	001c85e8 pop bx
 	001c85f0 cmpeq bx,ax
 	001c85fc mov ax,bx
 	001c8608 jz 0x001c9bd4
		001c9bd4: CONDITIONAL_JUMP
		001c8610: FALL_THROUGH

	[001c8610]
		001c8594: FALL_THROUGH
 	001c8610 sourceline 0x23ee
 	001c8618 mov ax,0x0
 	001c8624 mov bx,ax
*	001c8630 mov mar,0x31ef20
 	001c863c mov ax,mar
 	001c8648 push op
 	001c8650 mov op,ax
 	001c8658 farpush bx
 	001c8660 setfuncargs 0x1
 	001c8668 mov ax,0x3a6f20
 	001c8674 farcall ax
 	001c867c farsubsp 0x1
 	001c8684 pop op
 	001c868c sourceline 0x23ef
 	001c8694 mov ax,0x0
 	001c86a0 mov mar,0x5eef20
 	001c86ac memwrite4 ax
 	001c86b4 sourceline 0x23f0
 	001c86bc push op
 	001c86c4 mov ax,0x0
 	001c86d0 farpush ax
 	001c86d8 mov ax,0x32
 	001c86e4 farpush ax
 	001c86ec mov mar,0xd16f20
 	001c86f8 mov ax,mar
 	001c8704 mov op,ax
 	001c870c setfuncargs 0x2
 	001c8714 mov ax,0x2fef20
 	001c8720 farcall ax
 	001c8728 farsubsp 0x2
 	001c8730 pop op
 	001c8738 sourceline 0x23f1
 	001c8740 push op
 	001c8748 mov ax,0x426
 	001c8754 farpush ax
 	001c875c mov ax,0x397
 	001c8768 farpush ax
 	001c8770 mov ax,0x0
 	001c877c farpush ax
 	001c8784 mov ax,0x3
 	001c8790 farpush ax
 	001c8798 mov ax,0x3
 	001c87a4 farpush ax
 	001c87ac mov mar,0x3cef20
 	001c87b8 mov ax,mar
 	001c87c4 mov op,ax
 	001c87cc setfuncargs 0x5
 	001c87d4 mov ax,0x536f20
 	001c87e0 farcall ax
 	001c87e8 farsubsp 0x5
 	001c87f0 pop op
 	001c87f8 sourceline 0x23f2
 	001c8800 mov mar,0x3cef20
 	001c880c mov ax,mar
 	001c8818 push op
 	001c8820 mov op,ax
 	001c8828 setfuncargs 0x0
 	001c8830 mov ax,0x3d6f20
 	001c883c farcall ax
 	001c8844 pop op
 	001c884c push ax
 	001c8854 mov ax,0x8
 	001c8860 pop bx
 	001c8868 cmpeq bx,ax
 	001c8874 mov ax,bx
 	001c8880 jz 0x001c89d8
		001c89d8: CONDITIONAL_JUMP
		001c8888: FALL_THROUGH

	[001c8888]
		001c8610: FALL_THROUGH
 	001c8888 sourceline 0x23f4
 	001c8890 setfuncargs 0x0
 	001c8898 mov ax,0x76ef20
 	001c88a4 farcall ax
 	001c88ac push ax
 	001c88b4 mov ax,0x1
 	001c88c0 pop bx
 	001c88c8 cmpeq bx,ax
 	001c88d4 mov ax,bx
 	001c88e0 jz 0x001c8958
		001c8958: CONDITIONAL_JUMP
		001c88e8: FALL_THROUGH

	[001c88e8]
		001c8888: FALL_THROUGH
 	001c88e8 push op
 	001c88f0 mov ax,0x28
 	001c88fc farpush ax
 	001c8904 mov mar,0x3cef20
 	001c8910 mov ax,mar
 	001c891c mov op,ax
 	001c8924 setfuncargs 0x1
 	001c892c mov ax,0x51ef20
 	001c8938 farcall ax
 	001c8940 farsubsp 0x1
 	001c8948 pop op
 	001c8950 jmp 0x001c89c8
		001c89c8: UNCONDITIONAL_JUMP

	[001c8958]
		001c8888: CONDITIONAL_JUMP
 	001c8958 sourceline 0x23f5
 	001c8960 push op
 	001c8968 mov ax,0x2
 	001c8974 farpush ax
 	001c897c mov mar,0x3cef20
 	001c8988 mov ax,mar
 	001c8994 mov op,ax
 	001c899c setfuncargs 0x1
 	001c89a4 mov ax,0x51ef20
 	001c89b0 farcall ax
 	001c89b8 farsubsp 0x1
 	001c89c0 pop op
		001c89c8: FALL_THROUGH

	[001c89c8]
		001c88e8: UNCONDITIONAL_JUMP
		001c8958: FALL_THROUGH
 	001c89c8 sourceline 0x23f6
 	001c89d0 jmp 0x001c8e94
		001c8e94: UNCONDITIONAL_JUMP

	[001c89d8]
		001c8610: CONDITIONAL_JUMP
 	001c89d8 sourceline 0x23f7
 	001c89e0 mov mar,0x3cef20
 	001c89ec mov ax,mar
 	001c89f8 push op
 	001c8a00 mov op,ax
 	001c8a08 setfuncargs 0x0
 	001c8a10 mov ax,0x3d6f20
 	001c8a1c farcall ax
 	001c8a24 pop op
 	001c8a2c push ax
 	001c8a34 mov ax,0x12
 	001c8a40 pop bx
 	001c8a48 cmpeq bx,ax
 	001c8a54 mov ax,bx
 	001c8a60 jz 0x001c8ad8
		001c8ad8: CONDITIONAL_JUMP
		001c8a68: FALL_THROUGH

	[001c8a68]
		001c89d8: FALL_THROUGH
 	001c8a68 push op
 	001c8a70 mov ax,0x5e
 	001c8a7c farpush ax
 	001c8a84 mov mar,0x3cef20
 	001c8a90 mov ax,mar
 	001c8a9c mov op,ax
 	001c8aa4 setfuncargs 0x1
 	001c8aac mov ax,0x51ef20
 	001c8ab8 farcall ax
 	001c8ac0 farsubsp 0x1
 	001c8ac8 pop op
 	001c8ad0 jmp 0x001c8e94
		001c8e94: UNCONDITIONAL_JUMP

	[001c8ad8]
		001c89d8: CONDITIONAL_JUMP
 	001c8ad8 sourceline 0x23f8
 	001c8ae0 mov mar,0x3cef20
 	001c8aec mov ax,mar
 	001c8af8 push op
 	001c8b00 mov op,ax
 	001c8b08 setfuncargs 0x0
 	001c8b10 mov ax,0x3d6f20
 	001c8b1c farcall ax
 	001c8b24 pop op
 	001c8b2c push ax
 	001c8b34 mov ax,0x22
 	001c8b40 pop bx
 	001c8b48 cmpeq bx,ax
 	001c8b54 mov ax,bx
 	001c8b60 jnz 0x001c8c10
		001c8c10: CONDITIONAL_JUMP
		001c8b68: FALL_THROUGH

	[001c8b68]
		001c8ad8: FALL_THROUGH
 	001c8b68 push ax
 	001c8b70 mov mar,0x3cef20
 	001c8b7c mov ax,mar
 	001c8b88 push op
 	001c8b90 mov op,ax
 	001c8b98 setfuncargs 0x0
 	001c8ba0 mov ax,0x3d6f20
 	001c8bac farcall ax
 	001c8bb4 pop op
 	001c8bbc push ax
 	001c8bc4 mov ax,0x25
 	001c8bd0 pop bx
 	001c8bd8 cmpeq bx,ax
 	001c8be4 mov ax,bx
 	001c8bf0 pop bx
 	001c8bf8 lor bx,ax
 	001c8c04 mov ax,bx
		001c8c10: FALL_THROUGH

	[001c8c10]
		001c8ad8: CONDITIONAL_JUMP
		001c8b68: FALL_THROUGH
 	001c8c10 jz 0x001c8c88
		001c8c88: CONDITIONAL_JUMP
		001c8c18: FALL_THROUGH

	[001c8c18]
		001c8c10: FALL_THROUGH
 	001c8c18 push op
 	001c8c20 mov ax,0xac
 	001c8c2c farpush ax
 	001c8c34 mov mar,0x3cef20
 	001c8c40 mov ax,mar
 	001c8c4c mov op,ax
 	001c8c54 setfuncargs 0x1
 	001c8c5c mov ax,0x51ef20
 	001c8c68 farcall ax
 	001c8c70 farsubsp 0x1
 	001c8c78 pop op
 	001c8c80 jmp 0x001c8e94
		001c8e94: UNCONDITIONAL_JUMP

	[001c8c88]
		001c8c10: CONDITIONAL_JUMP
 	001c8c88 sourceline 0x23f9
 	001c8c90 mov mar,0x3cef20
 	001c8c9c mov ax,mar
 	001c8ca8 push op
 	001c8cb0 mov op,ax
 	001c8cb8 setfuncargs 0x0
 	001c8cc0 mov ax,0x3d6f20
 	001c8ccc farcall ax
 	001c8cd4 pop op
 	001c8cdc push ax
 	001c8ce4 mov ax,0x27
 	001c8cf0 pop bx
 	001c8cf8 cmpeq bx,ax
 	001c8d04 mov ax,bx
 	001c8d10 jz 0x001c8d88
		001c8d88: CONDITIONAL_JUMP
		001c8d18: FALL_THROUGH

	[001c8d18]
		001c8c88: FALL_THROUGH
 	001c8d18 push op
 	001c8d20 mov ax,0xd1
 	001c8d2c farpush ax
 	001c8d34 mov mar,0x3cef20
 	001c8d40 mov ax,mar
 	001c8d4c mov op,ax
 	001c8d54 setfuncargs 0x1
 	001c8d5c mov ax,0x51ef20
 	001c8d68 farcall ax
 	001c8d70 farsubsp 0x1
 	001c8d78 pop op
 	001c8d80 jmp 0x001c8e94
		001c8e94: UNCONDITIONAL_JUMP

	[001c8d88]
		001c8c88: CONDITIONAL_JUMP
 	001c8d88 sourceline 0x23fc
 	001c8d90 mov mar,0x776f20
 	001c8d9c memread4 ax
 	001c8da4 lnot ax
 	001c8dac jz 0x001c8e24
		001c8e24: CONDITIONAL_JUMP
		001c8db4: FALL_THROUGH

	[001c8db4]
		001c8d88: FALL_THROUGH
 	001c8db4 push op
 	001c8dbc mov ax,0x2
 	001c8dc8 farpush ax
 	001c8dd0 mov mar,0x3cef20
 	001c8ddc mov ax,mar
 	001c8de8 mov op,ax
 	001c8df0 setfuncargs 0x1
 	001c8df8 mov ax,0x51ef20
 	001c8e04 farcall ax
 	001c8e0c farsubsp 0x1
 	001c8e14 pop op
 	001c8e1c jmp 0x001c8e94
		001c8e94: UNCONDITIONAL_JUMP

	[001c8e24]
		001c8d88: CONDITIONAL_JUMP
 	001c8e24 sourceline 0x23fd
 	001c8e2c push op
 	001c8e34 mov ax,0x1b
 	001c8e40 farpush ax
 	001c8e48 mov mar,0x3cef20
 	001c8e54 mov ax,mar
 	001c8e60 mov op,ax
 	001c8e68 setfuncargs 0x1
 	001c8e70 mov ax,0x51ef20
 	001c8e7c farcall ax
 	001c8e84 farsubsp 0x1
 	001c8e8c pop op
		001c8e94: FALL_THROUGH

	[001c8e94]
		001c89c8: UNCONDITIONAL_JUMP
		001c8a68: UNCONDITIONAL_JUMP
		001c8c18: UNCONDITIONAL_JUMP
		001c8d18: UNCONDITIONAL_JUMP
		001c8db4: UNCONDITIONAL_JUMP
		001c8e24: FALL_THROUGH
 	001c8e94 sourceline 0x23ff
 	001c8e9c mov ax,0x0
 	001c8ea8 mov bx,ax
 	001c8eb4 mov mar,0x3cef20
 	001c8ec0 mov ax,mar
 	001c8ecc push op
 	001c8ed4 mov op,ax
 	001c8edc farpush bx
 	001c8ee4 setfuncargs 0x1
 	001c8eec mov ax,0x766f20
 	001c8ef8 farcall ax
 	001c8f00 farsubsp 0x1
 	001c8f08 pop op
 	001c8f10 sourceline 0x2400
 	001c8f18 mov mar,0x3cef20
 	001c8f24 mov ax,mar
 	001c8f30 push op
 	001c8f38 mov op,ax
 	001c8f40 setfuncargs 0x0
 	001c8f48 mov ax,0x78ef20
 	001c8f54 farcall ax
 	001c8f5c pop op
 	001c8f64 push ax
 	001c8f6c mov ax,0x7
 	001c8f78 pop bx
 	001c8f80 add bx,ax
 	001c8f8c mov ax,bx
 	001c8f98 mov bx,ax
 	001c8fa4 mov mar,0x3cef20
 	001c8fb0 mov ax,mar
 	001c8fbc push op
 	001c8fc4 mov op,ax
 	001c8fcc farpush bx
 	001c8fd4 setfuncargs 0x1
 	001c8fdc mov ax,0x526f20
 	001c8fe8 farcall ax
 	001c8ff0 farsubsp 0x1
 	001c8ff8 pop op
 	001c9000 sourceline 0x2402
 	001c9008 mov mar,0x3cef20
 	001c9014 mov ax,mar
 	001c9020 push op
 	001c9028 mov op,ax
 	001c9030 setfuncargs 0x0
 	001c9038 mov ax,0x3d6f20
 	001c9044 farcall ax
 	001c904c pop op
 	001c9054 push ax
 	001c905c mov ax,0x10
 	001c9068 pop bx
 	001c9070 cmpeq bx,ax
 	001c907c mov ax,bx
 	001c9088 jz 0x001c9390
		001c9390: CONDITIONAL_JUMP
		001c9090: FALL_THROUGH

	[001c9090]
		001c8e94: FALL_THROUGH
 	001c9090 mov ax,0x1
 	001c909c push ax
 	001c90a4 mov ax,0x1
 	001c90b0 assertlte ax,0x10
 	001c90bc mul ax,0x8
 	001c90c8 mov cx,ax
 	001c90d4 pop ax
 	001c90dc mov bx,ax
 	001c90e8 mov mar,0x77ef20
 	001c90f4 add mar,cx
 	001c9100 mov ax,mar
 	001c910c push op
 	001c9114 mov op,ax
 	001c911c farpush bx
 	001c9124 setfuncargs 0x1
 	001c912c mov ax,0x786f20
 	001c9138 farcall ax
 	001c9140 farsubsp 0x1
 	001c9148 pop op
 	001c9150 mov ax,0x1
 	001c915c push ax
 	001c9164 mov ax,0x2
 	001c9170 assertlte ax,0x10
 	001c917c mul ax,0x8
 	001c9188 mov cx,ax
 	001c9194 pop ax
 	001c919c mov bx,ax
 	001c91a8 mov mar,0x77ef20
 	001c91b4 add mar,cx
 	001c91c0 mov ax,mar
 	001c91cc push op
 	001c91d4 mov op,ax
 	001c91dc farpush bx
 	001c91e4 setfuncargs 0x1
 	001c91ec mov ax,0x786f20
 	001c91f8 farcall ax
 	001c9200 farsubsp 0x1
 	001c9208 pop op
 	001c9210 mov ax,0x1
 	001c921c push ax
 	001c9224 mov ax,0x3
 	001c9230 assertlte ax,0x10
 	001c923c mul ax,0x8
 	001c9248 mov cx,ax
 	001c9254 pop ax
 	001c925c mov bx,ax
 	001c9268 mov mar,0x77ef20
 	001c9274 add mar,cx
 	001c9280 mov ax,mar
 	001c928c push op
 	001c9294 mov op,ax
 	001c929c farpush bx
 	001c92a4 setfuncargs 0x1
 	001c92ac mov ax,0x786f20
 	001c92b8 farcall ax
 	001c92c0 farsubsp 0x1
 	001c92c8 pop op
 	001c92d0 mov ax,0x1
 	001c92dc push ax
 	001c92e4 mov ax,0x4
 	001c92f0 assertlte ax,0x10
 	001c92fc mul ax,0x8
 	001c9308 mov cx,ax
 	001c9314 pop ax
 	001c931c mov bx,ax
 	001c9328 mov mar,0x77ef20
 	001c9334 add mar,cx
 	001c9340 mov ax,mar
 	001c934c push op
 	001c9354 mov op,ax
 	001c935c farpush bx
 	001c9364 setfuncargs 0x1
 	001c936c mov ax,0x786f20
 	001c9378 farcall ax
 	001c9380 farsubsp 0x1
 	001c9388 pop op
		001c9390: FALL_THROUGH

	[001c9390]
		001c8e94: CONDITIONAL_JUMP
		001c9090: FALL_THROUGH
 	001c9390 sourceline 0x2404
 	001c9398 mov mar,0x42ef20
 	001c93a4 push mar
 	001c93ac pop mar
 	001c93b4 memread.ptr ax
 	001c93bc push ax
 	001c93c4 pop mar
 	001c93cc mov ax,mar
 	001c93d8 push op
 	001c93e0 mov op,ax
 	001c93e8 setfuncargs 0x0
 	001c93f0 mov ax,0x3d6f20
 	001c93fc farcall ax
 	001c9404 pop op
 	001c940c push ax
 	001c9414 mov ax,0xd
 	001c9420 pop bx
 	001c9428 cmpeq bx,ax
 	001c9434 mov ax,bx
 	001c9440 jz 0x001c95c8
		001c95c8: CONDITIONAL_JUMP
		001c9448: FALL_THROUGH

	[001c9448]
		001c9390: FALL_THROUGH
 	001c9448 mov ax,0x1
 	001c9454 push ax
 	001c945c mov ax,0x1
 	001c9468 assertlte ax,0x10
 	001c9474 mul ax,0x8
 	001c9480 mov cx,ax
 	001c948c pop ax
 	001c9494 mov bx,ax
 	001c94a0 mov mar,0x77ef20
 	001c94ac add mar,cx
 	001c94b8 mov ax,mar
 	001c94c4 push op
 	001c94cc mov op,ax
 	001c94d4 farpush bx
 	001c94dc setfuncargs 0x1
 	001c94e4 mov ax,0x786f20
 	001c94f0 farcall ax
 	001c94f8 farsubsp 0x1
 	001c9500 pop op
 	001c9508 mov ax,0x1
 	001c9514 push ax
 	001c951c mov ax,0x2
 	001c9528 assertlte ax,0x10
 	001c9534 mul ax,0x8
 	001c9540 mov cx,ax
 	001c954c pop ax
 	001c9554 mov bx,ax
 	001c9560 mov mar,0x77ef20
 	001c956c add mar,cx
 	001c9578 mov ax,mar
 	001c9584 push op
 	001c958c mov op,ax
 	001c9594 farpush bx
 	001c959c setfuncargs 0x1
 	001c95a4 mov ax,0x786f20
 	001c95b0 farcall ax
 	001c95b8 farsubsp 0x1
 	001c95c0 pop op
		001c95c8: FALL_THROUGH

	[001c95c8]
		001c9390: CONDITIONAL_JUMP
		001c9448: FALL_THROUGH
 	001c95c8 sourceline 0x2406
 	001c95d0 mov mar,0x42ef20
 	001c95dc push mar
 	001c95e4 pop mar
 	001c95ec memread.ptr ax
 	001c95f4 push ax
 	001c95fc pop mar
 	001c9604 mov ax,mar
 	001c9610 push op
 	001c9618 mov op,ax
 	001c9620 setfuncargs 0x0
 	001c9628 mov ax,0x3d6f20
 	001c9634 farcall ax
 	001c963c pop op
 	001c9644 push ax
 	001c964c mov ax,0x27
 	001c9658 pop bx
 	001c9660 cmpeq bx,ax
 	001c966c mov ax,bx
 	001c9678 jz 0x001c9800
		001c9800: CONDITIONAL_JUMP
		001c9680: FALL_THROUGH

	[001c9680]
		001c95c8: FALL_THROUGH
 	001c9680 mov ax,0x1
 	001c968c push ax
 	001c9694 mov ax,0x1
 	001c96a0 assertlte ax,0x10
 	001c96ac mul ax,0x8
 	001c96b8 mov cx,ax
 	001c96c4 pop ax
 	001c96cc mov bx,ax
 	001c96d8 mov mar,0x77ef20
 	001c96e4 add mar,cx
 	001c96f0 mov ax,mar
 	001c96fc push op
 	001c9704 mov op,ax
 	001c970c farpush bx
 	001c9714 setfuncargs 0x1
 	001c971c mov ax,0x786f20
 	001c9728 farcall ax
 	001c9730 farsubsp 0x1
 	001c9738 pop op
 	001c9740 mov ax,0x1
 	001c974c push ax
 	001c9754 mov ax,0x2
 	001c9760 assertlte ax,0x10
 	001c976c mul ax,0x8
 	001c9778 mov cx,ax
 	001c9784 pop ax
 	001c978c mov bx,ax
 	001c9798 mov mar,0x77ef20
 	001c97a4 add mar,cx
 	001c97b0 mov ax,mar
 	001c97bc push op
 	001c97c4 mov op,ax
 	001c97cc farpush bx
 	001c97d4 setfuncargs 0x1
 	001c97dc mov ax,0x786f20
 	001c97e8 farcall ax
 	001c97f0 farsubsp 0x1
 	001c97f8 pop op
		001c9800: FALL_THROUGH

	[001c9800]
		001c95c8: CONDITIONAL_JUMP
		001c9680: FALL_THROUGH
 	001c9800 sourceline 0x2408
 	001c9808 mov mar,0x42ef20
 	001c9814 push mar
 	001c981c pop mar
 	001c9824 memread.ptr ax
 	001c982c push ax
 	001c9834 pop mar
 	001c983c mov ax,mar
 	001c9848 push op
 	001c9850 mov op,ax
 	001c9858 setfuncargs 0x0
 	001c9860 mov ax,0x3d6f20
 	001c986c farcall ax
 	001c9874 pop op
 	001c987c push ax
 	001c9884 mov ax,0x16
 	001c9890 pop bx
 	001c9898 cmpeq bx,ax
 	001c98a4 mov ax,bx
 	001c98b0 jz 0x001c99c4
		001c99c4: CONDITIONAL_JUMP
		001c98b8: FALL_THROUGH

	[001c98b8]
		001c9800: FALL_THROUGH
 	001c98b8 mov ax,0x86
 	001c98c4 farpush ax
 	001c98cc mov ax,0x1
 	001c98d8 farpush ax
 	001c98e0 setfuncargs 0x2
 	001c98e8 mov ax,0x756f20
 	001c98f4 farcall ax
 	001c98fc farsubsp 0x2
 	001c9904 mov ax,0x87
 	001c9910 push ax
 	001c9918 mov ax,0x0
 	001c9924 assertlte ax,0x28
 	001c9930 mul ax,0x8
 	001c993c mov cx,ax
 	001c9948 pop ax
 	001c9950 mov bx,ax
 	001c995c mov mar,0x6fef20
 	001c9968 add mar,cx
 	001c9974 mov ax,mar
 	001c9980 push op
 	001c9988 mov op,ax
 	001c9990 farpush bx
 	001c9998 setfuncargs 0x1
 	001c99a0 mov ax,0x796f20
 	001c99ac farcall ax
 	001c99b4 farsubsp 0x1
 	001c99bc pop op
		001c99c4: FALL_THROUGH

	[001c99c4]
		001c9800: CONDITIONAL_JUMP
		001c98b8: FALL_THROUGH
 	001c99c4 sourceline 0x240a
 	001c99cc mov mar,0x42ef20
 	001c99d8 push mar
 	001c99e0 pop mar
 	001c99e8 memread.ptr ax
 	001c99f0 push ax
 	001c99f8 pop mar
 	001c9a00 mov ax,mar
 	001c9a0c push op
 	001c9a14 mov op,ax
 	001c9a1c setfuncargs 0x0
 	001c9a24 mov ax,0x3d6f20
 	001c9a30 farcall ax
 	001c9a38 pop op
 	001c9a40 push ax
 	001c9a48 mov ax,0xa
 	001c9a54 pop bx
 	001c9a5c cmpeq bx,ax
 	001c9a68 mov ax,bx
 	001c9a74 jz 0x001c9ac8
		001c9ac8: CONDITIONAL_JUMP
		001c9a7c: FALL_THROUGH

	[001c9a7c]
		001c99c4: FALL_THROUGH
 	001c9a7c mov ax,0x8c
 	001c9a88 farpush ax
 	001c9a90 mov ax,0x4
 	001c9a9c farpush ax
 	001c9aa4 setfuncargs 0x2
 	001c9aac mov ax,0x756f20
 	001c9ab8 farcall ax
 	001c9ac0 farsubsp 0x2
		001c9ac8: FALL_THROUGH

	[001c9ac8]
		001c99c4: CONDITIONAL_JUMP
		001c9a7c: FALL_THROUGH
 	001c9ac8 sourceline 0x240c
 	001c9ad0 mov mar,0x42ef20
 	001c9adc push mar
 	001c9ae4 pop mar
 	001c9aec memread.ptr ax
 	001c9af4 push ax
 	001c9afc pop mar
 	001c9b04 mov ax,mar
 	001c9b10 push op
 	001c9b18 mov op,ax
 	001c9b20 setfuncargs 0x0
 	001c9b28 mov ax,0x3d6f20
 	001c9b34 farcall ax
 	001c9b3c pop op
 	001c9b44 push ax
 	001c9b4c mov ax,0x2
 	001c9b58 pop bx
 	001c9b60 cmpeq bx,ax
 	001c9b6c mov ax,bx
 	001c9b78 jz 0x001c9bd4
		001c9bd4: CONDITIONAL_JUMP
		001c9b80: FALL_THROUGH

	[001c9b80]
		001c9ac8: FALL_THROUGH
 	001c9b80 sourceline 0x240e
 	001c9b88 mov ax,0x84
 	001c9b94 farpush ax
 	001c9b9c mov ax,0x5
 	001c9ba8 farpush ax
 	001c9bb0 setfuncargs 0x2
 	001c9bb8 mov ax,0x756f20
 	001c9bc4 farcall ax
 	001c9bcc farsubsp 0x2
		001c9bd4: FALL_THROUGH

	[001c9bd4]
		001c8594: CONDITIONAL_JUMP
		001c9ac8: CONDITIONAL_JUMP
		001c9b80: FALL_THROUGH
 	001c9bd4 sourceline 0x2411
 	001c9bdc mov ax,0x0
 	001c9be8 stackptr 0x8
 	001c9bf0 memzerond
 	001c9bf4 ret

InventoryUp_OnClick$2:
	[001c9bf8]
 	001c9bf8 sourceline 0x2417
 	001c9c00 thisaddr
 	001c9c08 stackptr 0x8
 	001c9c10 memread4 ax
 	001c9c18 meminit ax
 	001c9c20 sourceline 0x2418
 	001c9c28 stackptr 0xc
 	001c9c30 memread4 ax
 	001c9c38 push ax
 	001c9c40 mov ax,0x1
 	001c9c4c pop bx
 	001c9c54 cmpeq bx,ax
 	001c9c60 mov ax,bx
 	001c9c6c jz 0x001c9e6c
		001c9e6c: CONDITIONAL_JUMP
		001c9c74: FALL_THROUGH

	[001c9c74]
		001c9bf8: FALL_THROUGH
 	001c9c74 sourceline 0x241a
 	001c9c7c push op
*	001c9c84 mov mar,0x63ef20
 	001c9c90 mov ax,mar
 	001c9c9c mov op,ax
 	001c9ca4 setfuncargs 0x0
 	001c9cac mov ax,0xd7ef20
 	001c9cb8 farcall ax
 	001c9cc0 pop op
 	001c9cc8 sourceline 0x241b
 	001c9cd0 mov mar,0x64ef20
 	001c9cdc mov ax,mar
 	001c9ce8 push op
 	001c9cf0 mov op,ax
 	001c9cf8 setfuncargs 0x0
 	001c9d00 mov ax,0xd86f20
 	001c9d0c farcall ax
 	001c9d14 pop op
 	001c9d1c push ax
 	001c9d24 mov mar,0x63ef20
 	001c9d30 mov ax,mar
 	001c9d3c push op
 	001c9d44 mov op,ax
 	001c9d4c setfuncargs 0x0
 	001c9d54 mov ax,0xd8ef20
 	001c9d60 farcall ax
 	001c9d68 pop op
 	001c9d70 push ax
 	001c9d78 mov mar,0x63ef20
 	001c9d84 mov ax,mar
 	001c9d90 push op
 	001c9d98 mov op,ax
 	001c9da0 setfuncargs 0x0
 	001c9da8 mov ax,0xd96f20
 	001c9db4 farcall ax
 	001c9dbc pop op
 	001c9dc4 pop bx
 	001c9dcc div bx,ax
 	001c9dd8 mov ax,bx
 	001c9de4 pop bx
 	001c9dec sub bx,ax
 	001c9df8 mov ax,bx
 	001c9e04 mov bx,ax
 	001c9e10 mov mar,0x64ef20
 	001c9e1c mov ax,mar
 	001c9e28 push op
 	001c9e30 mov op,ax
 	001c9e38 farpush bx
 	001c9e40 setfuncargs 0x1
 	001c9e48 mov ax,0xd9ef20
 	001c9e54 farcall ax
 	001c9e5c farsubsp 0x1
 	001c9e64 pop op
		001c9e6c: FALL_THROUGH

	[001c9e6c]
		001c9bf8: CONDITIONAL_JUMP
		001c9c74: FALL_THROUGH
 	001c9e6c sourceline 0x241d
 	001c9e74 mov ax,0x0
 	001c9e80 stackptr 0x8
 	001c9e88 memzerond
 	001c9e8c ret

InventoryDown_OnClick$2:
	[001c9e90]
 	001c9e90 sourceline 0x2423
 	001c9e98 thisaddr
 	001c9ea0 stackptr 0x8
 	001c9ea8 memread4 ax
 	001c9eb0 meminit ax
 	001c9eb8 sourceline 0x2424
 	001c9ec0 stackptr 0xc
 	001c9ec8 memread4 ax
 	001c9ed0 push ax
 	001c9ed8 mov ax,0x1
 	001c9ee4 pop bx
 	001c9eec cmpeq bx,ax
 	001c9ef8 mov ax,bx
 	001c9f04 jz 0x001ca104
		001ca104: CONDITIONAL_JUMP
		001c9f0c: FALL_THROUGH

	[001c9f0c]
		001c9e90: FALL_THROUGH
 	001c9f0c sourceline 0x2426
 	001c9f14 push op
*	001c9f1c mov mar,0x63ef20
 	001c9f28 mov ax,mar
 	001c9f34 mov op,ax
 	001c9f3c setfuncargs 0x0
 	001c9f44 mov ax,0xda6f20
 	001c9f50 farcall ax
 	001c9f58 pop op
 	001c9f60 sourceline 0x2427
 	001c9f68 mov mar,0x64ef20
 	001c9f74 mov ax,mar
 	001c9f80 push op
 	001c9f88 mov op,ax
 	001c9f90 setfuncargs 0x0
 	001c9f98 mov ax,0xd86f20
 	001c9fa4 farcall ax
 	001c9fac pop op
 	001c9fb4 push ax
 	001c9fbc mov mar,0x63ef20
 	001c9fc8 mov ax,mar
 	001c9fd4 push op
 	001c9fdc mov op,ax
 	001c9fe4 setfuncargs 0x0
 	001c9fec mov ax,0xd8ef20
 	001c9ff8 farcall ax
 	001ca000 pop op
 	001ca008 push ax
 	001ca010 mov mar,0x63ef20
 	001ca01c mov ax,mar
 	001ca028 push op
 	001ca030 mov op,ax
 	001ca038 setfuncargs 0x0
 	001ca040 mov ax,0xd96f20
 	001ca04c farcall ax
 	001ca054 pop op
 	001ca05c pop bx
 	001ca064 div bx,ax
 	001ca070 mov ax,bx
 	001ca07c pop bx
 	001ca084 sub bx,ax
 	001ca090 mov ax,bx
 	001ca09c mov bx,ax
 	001ca0a8 mov mar,0x64ef20
 	001ca0b4 mov ax,mar
 	001ca0c0 push op
 	001ca0c8 mov op,ax
 	001ca0d0 farpush bx
 	001ca0d8 setfuncargs 0x1
 	001ca0e0 mov ax,0xd9ef20
 	001ca0ec farcall ax
 	001ca0f4 farsubsp 0x1
 	001ca0fc pop op
		001ca104: FALL_THROUGH

	[001ca104]
		001c9e90: CONDITIONAL_JUMP
		001c9f0c: FALL_THROUGH
 	001ca104 sourceline 0x2429
 	001ca10c mov ax,0x0
 	001ca118 stackptr 0x8
 	001ca120 memzerond
 	001ca124 ret

InventoryButtonTop_OnClick$2:
	[001ca128]
 	001ca128 sourceline 0x242f
 	001ca130 thisaddr
 	001ca138 stackptr 0x8
 	001ca140 memread4 ax
 	001ca148 meminit ax
 	001ca150 sourceline 0x2430
 	001ca158 stackptr 0xc
 	001ca160 memread4 ax
 	001ca168 push ax
 	001ca170 mov ax,0x1
 	001ca17c pop bx
 	001ca184 cmpeq bx,ax
 	001ca190 mov ax,bx
 	001ca19c jz 0x001ca538
		001ca538: CONDITIONAL_JUMP
		001ca1a4: FALL_THROUGH

	[001ca1a4]
		001ca128: FALL_THROUGH
 	001ca1a4 sourceline 0x2432
*	001ca1ac mov mar,0x31ef20
 	001ca1b8 mov ax,mar
 	001ca1c4 push op
 	001ca1cc mov op,ax
 	001ca1d4 setfuncargs 0x0
 	001ca1dc mov ax,0x316f20
 	001ca1e8 farcall ax
 	001ca1f0 pop op
 	001ca1f8 lnot ax
 	001ca200 jz 0x001ca284
		001ca284: CONDITIONAL_JUMP
		001ca208: FALL_THROUGH

	[001ca208]
		001ca1a4: FALL_THROUGH
 	001ca208 push ax
 	001ca210 mov mar,0x30ef20
 	001ca21c mov ax,mar
 	001ca228 push op
 	001ca230 mov op,ax
 	001ca238 setfuncargs 0x0
 	001ca240 mov ax,0x316f20
 	001ca24c farcall ax
 	001ca254 pop op
 	001ca25c lnot ax
 	001ca264 pop bx
 	001ca26c land bx,ax
 	001ca278 mov ax,bx
		001ca284: FALL_THROUGH

	[001ca284]
		001ca1a4: CONDITIONAL_JUMP
		001ca208: FALL_THROUGH
 	001ca284 jz 0x001ca538
		001ca538: CONDITIONAL_JUMP
		001ca28c: FALL_THROUGH

	[001ca28c]
		001ca284: FALL_THROUGH
 	001ca28c sourceline 0x2434
 	001ca294 mov mar,0x64ef20
 	001ca2a0 mov ax,mar
 	001ca2ac push op
 	001ca2b4 mov op,ax
 	001ca2bc setfuncargs 0x0
 	001ca2c4 mov ax,0xd86f20
 	001ca2d0 farcall ax
 	001ca2d8 pop op
 	001ca2e0 mov bx,ax
 	001ca2ec mov mar,0x64ef20
 	001ca2f8 mov ax,mar
 	001ca304 push op
 	001ca30c mov op,ax
 	001ca314 farpush bx
 	001ca31c setfuncargs 0x1
 	001ca324 mov ax,0xd9ef20
 	001ca330 farcall ax
 	001ca338 farsubsp 0x1
 	001ca340 pop op
 	001ca348 sourceline 0x2435
 	001ca350 mov ax,0x0
 	001ca35c mov bx,ax
 	001ca368 mov mar,0x63ef20
 	001ca374 mov ax,mar
 	001ca380 push op
 	001ca388 mov op,ax
 	001ca390 farpush bx
 	001ca398 setfuncargs 0x1
 	001ca3a0 mov ax,0xdaef20
 	001ca3ac farcall ax
 	001ca3b4 farsubsp 0x1
 	001ca3bc pop op
 	001ca3c4 sourceline 0x2436
 	001ca3cc mov mar,0x3cef20
 	001ca3d8 mov ax,mar
 	001ca3e4 push op
 	001ca3ec mov op,ax
 	001ca3f4 setfuncargs 0x0
 	001ca3fc mov ax,0x446f20
 	001ca408 farcall ax
 	001ca410 pop op
 	001ca418 jz 0x001ca46c
		001ca46c: CONDITIONAL_JUMP
		001ca420: FALL_THROUGH

	[001ca420]
		001ca28c: FALL_THROUGH
 	001ca420 push op
 	001ca428 mov mar,0x3cef20
 	001ca434 mov ax,mar
 	001ca440 mov op,ax
 	001ca448 setfuncargs 0x0
 	001ca450 mov ax,0x44ef20
 	001ca45c farcall ax
 	001ca464 pop op
		001ca46c: FALL_THROUGH

	[001ca46c]
		001ca28c: CONDITIONAL_JUMP
		001ca420: FALL_THROUGH
 	001ca46c sourceline 0x2437
 	001ca474 mov ax,0x1
 	001ca480 mov bx,ax
 	001ca48c mov mar,0x30ef20
 	001ca498 mov ax,mar
 	001ca4a4 push op
 	001ca4ac mov op,ax
 	001ca4b4 farpush bx
 	001ca4bc setfuncargs 0x1
 	001ca4c4 mov ax,0x3a6f20
 	001ca4d0 farcall ax
 	001ca4d8 farsubsp 0x1
 	001ca4e0 pop op
 	001ca4e8 sourceline 0x2438
 	001ca4f0 mov ax,0xa
 	001ca4fc mov mar,0x3aef20
 	001ca508 memwrite4 ax
 	001ca510 sourceline 0x2439
 	001ca518 mov ax,0x1
 	001ca524 mov mar,0x3b6f20
 	001ca530 memwrite4 ax
		001ca538: FALL_THROUGH

	[001ca538]
		001ca128: CONDITIONAL_JUMP
		001ca284: CONDITIONAL_JUMP
		001ca46c: FALL_THROUGH
 	001ca538 sourceline 0x243f
 	001ca540 mov ax,0x0
 	001ca54c stackptr 0x8
 	001ca554 memzerond
 	001ca558 ret

btnDown_OnClick$2:
	[001ca55c]
 	001ca55c sourceline 0x2445
 	001ca564 thisaddr
 	001ca56c stackptr 0x8
 	001ca574 memread4 ax
 	001ca57c meminit ax
 	001ca584 sourceline 0x2446
 	001ca58c stackptr 0xc
 	001ca594 memread4 ax
 	001ca59c push ax
 	001ca5a4 mov ax,0x1
 	001ca5b0 pop bx
 	001ca5b8 cmpeq bx,ax
 	001ca5c4 mov ax,bx
 	001ca5d0 jz 0x001cb25c
		001cb25c: CONDITIONAL_JUMP
		001ca5d8: FALL_THROUGH

	[001ca5d8]
		001ca55c: FALL_THROUGH
 	001ca5d8 sourceline 0x2448
 	001ca5e0 push op
 	001ca5e8 mov ax,0x0
 	001ca5f4 farpush ax
 	001ca5fc mov ax,0x32
 	001ca608 farpush ax
*	001ca610 mov mar,0xdb6f20
 	001ca61c mov ax,mar
 	001ca628 mov op,ax
 	001ca630 setfuncargs 0x2
 	001ca638 mov ax,0x2fef20
 	001ca644 farcall ax
 	001ca64c farsubsp 0x2
 	001ca654 pop op
 	001ca65c sourceline 0x2449
 	001ca664 mov mar,0x7a6f20
 	001ca670 mov ax,mar
 	001ca67c push op
 	001ca684 mov op,ax
 	001ca68c setfuncargs 0x0
 	001ca694 mov ax,0x346f20
 	001ca6a0 farcall ax
 	001ca6a8 pop op
 	001ca6b0 push ax
 	001ca6b8 mov ax,0x8ef
 	001ca6c4 pop bx
 	001ca6cc cmpeq bx,ax
 	001ca6d8 mov ax,bx
 	001ca6e4 jz 0x001ca7f4
		001ca7f4: CONDITIONAL_JUMP
		001ca6ec: FALL_THROUGH

	[001ca6ec]
		001ca5d8: FALL_THROUGH
 	001ca6ec sourceline 0x244b
 	001ca6f4 mov ax,0x8eb
 	001ca700 mov bx,ax
 	001ca70c mov mar,0x7a6f20
 	001ca718 mov ax,mar
 	001ca724 push op
 	001ca72c mov op,ax
 	001ca734 farpush bx
 	001ca73c setfuncargs 0x1
 	001ca744 mov ax,0x356f20
 	001ca750 farcall ax
 	001ca758 farsubsp 0x1
 	001ca760 pop op
 	001ca768 sourceline 0x244c
 	001ca770 mov ax,0x8ec
 	001ca77c mov bx,ax
 	001ca788 mov mar,0x7aef20
 	001ca794 mov ax,mar
 	001ca7a0 push op
 	001ca7a8 mov op,ax
 	001ca7b0 farpush bx
 	001ca7b8 setfuncargs 0x1
 	001ca7c0 mov ax,0x356f20
 	001ca7cc farcall ax
 	001ca7d4 farsubsp 0x1
 	001ca7dc pop op
 	001ca7e4 sourceline 0x244d
 	001ca7ec jmp 0x001cb25c
		001cb25c: UNCONDITIONAL_JUMP

	[001ca7f4]
		001ca5d8: CONDITIONAL_JUMP
 	001ca7f4 sourceline 0x2450
 	001ca7fc mov mar,0x7aef20
 	001ca808 mov ax,mar
 	001ca814 push op
 	001ca81c mov op,ax
 	001ca824 setfuncargs 0x0
 	001ca82c mov ax,0x346f20
 	001ca838 farcall ax
 	001ca840 pop op
 	001ca848 push ax
 	001ca850 mov ax,0x8ec
 	001ca85c pop bx
 	001ca864 cmpeq bx,ax
 	001ca870 mov ax,bx
 	001ca87c jz 0x001cad64
		001cad64: CONDITIONAL_JUMP
		001ca884: FALL_THROUGH

	[001ca884]
		001ca7f4: FALL_THROUGH
 	001ca884 sourceline 0x2452
 	001ca88c mov mar,0x7b6f20
 	001ca898 mov ax,mar
 	001ca8a4 push op
 	001ca8ac mov op,ax
 	001ca8b4 setfuncargs 0x0
 	001ca8bc mov ax,0x606f20
 	001ca8c8 farcall ax
 	001ca8d0 pop op
 	001ca8d8 jnz 0x001ca954
		001ca954: CONDITIONAL_JUMP
		001ca8e0: FALL_THROUGH

	[001ca8e0]
		001ca884: FALL_THROUGH
 	001ca8e0 push ax
 	001ca8e8 mov mar,0x7bef20
 	001ca8f4 mov ax,mar
 	001ca900 push op
 	001ca908 mov op,ax
 	001ca910 setfuncargs 0x0
 	001ca918 mov ax,0x606f20
 	001ca924 farcall ax
 	001ca92c pop op
 	001ca934 pop bx
 	001ca93c lor bx,ax
 	001ca948 mov ax,bx
		001ca954: FALL_THROUGH

	[001ca954]
		001ca884: CONDITIONAL_JUMP
		001ca8e0: FALL_THROUGH
 	001ca954 jz 0x001cad54
		001cad54: CONDITIONAL_JUMP
		001ca95c: FALL_THROUGH

	[001ca95c]
		001ca954: FALL_THROUGH
 	001ca95c sourceline 0x2454
 	001ca964 mov ax,0x8e8
 	001ca970 mov bx,ax
 	001ca97c mov mar,0x7aef20
 	001ca988 mov ax,mar
 	001ca994 push op
 	001ca99c mov op,ax
 	001ca9a4 farpush bx
 	001ca9ac setfuncargs 0x1
 	001ca9b4 mov ax,0x356f20
 	001ca9c0 farcall ax
 	001ca9c8 farsubsp 0x1
 	001ca9d0 pop op
 	001ca9d8 sourceline 0x2455
 	001ca9e0 mov mar,0x7b6f20
 	001ca9ec mov ax,mar
 	001ca9f8 push op
 	001caa00 mov op,ax
 	001caa08 setfuncargs 0x0
 	001caa10 mov ax,0x606f20
 	001caa1c farcall ax
 	001caa24 pop op
 	001caa2c jz 0x001cabcc
		001cabcc: CONDITIONAL_JUMP
		001caa34: FALL_THROUGH

	[001caa34]
		001ca95c: FALL_THROUGH
 	001caa34 sourceline 0x2457
 	001caa3c mov mar,0x7b6f20
 	001caa48 mov ax,mar
 	001caa54 push op
 	001caa5c mov op,ax
 	001caa64 setfuncargs 0x0
 	001caa6c mov ax,0xdbef20
 	001caa78 farcall ax
 	001caa80 pop op
 	001caa88 push ax
 	001caa90 mov ax,0x20
 	001caa9c pop bx
 	001caaa4 cmpeq bx,ax
 	001caab0 mov ax,bx
 	001caabc jz 0x001cab40
		001cab40: CONDITIONAL_JUMP
		001caac4: FALL_THROUGH

	[001caac4]
		001caa34: FALL_THROUGH
 	001caac4 mov ax,0x8ee
 	001caad0 mov bx,ax
 	001caadc mov mar,0x7b6f20
 	001caae8 mov ax,mar
 	001caaf4 push op
 	001caafc mov op,ax
 	001cab04 farpush bx
 	001cab0c setfuncargs 0x1
 	001cab14 mov ax,0x356f20
 	001cab20 farcall ax
 	001cab28 farsubsp 0x1
 	001cab30 pop op
 	001cab38 jmp 0x001cabbc
		001cabbc: UNCONDITIONAL_JUMP

	[001cab40]
		001caa34: CONDITIONAL_JUMP
 	001cab40 sourceline 0x2459
 	001cab48 mov ax,0x8ed
 	001cab54 mov bx,ax
 	001cab60 mov mar,0x7bef20
 	001cab6c mov ax,mar
 	001cab78 push op
 	001cab80 mov op,ax
 	001cab88 farpush bx
 	001cab90 setfuncargs 0x1
 	001cab98 mov ax,0x356f20
 	001caba4 farcall ax
 	001cabac farsubsp 0x1
 	001cabb4 pop op
		001cabbc: FALL_THROUGH

	[001cabbc]
		001caac4: UNCONDITIONAL_JUMP
		001cab40: FALL_THROUGH
 	001cabbc sourceline 0x245a
 	001cabc4 jmp 0x001cad54
		001cad54: UNCONDITIONAL_JUMP

	[001cabcc]
		001ca95c: CONDITIONAL_JUMP
 	001cabcc sourceline 0x245d
 	001cabd4 mov mar,0x7bef20
 	001cabe0 mov ax,mar
 	001cabec push op
 	001cabf4 mov op,ax
 	001cabfc setfuncargs 0x0
 	001cac04 mov ax,0xdbef20
 	001cac10 farcall ax
 	001cac18 pop op
 	001cac20 push ax
 	001cac28 mov ax,0x20
 	001cac34 pop bx
 	001cac3c cmpeq bx,ax
 	001cac48 mov ax,bx
 	001cac54 jz 0x001cacd8
		001cacd8: CONDITIONAL_JUMP
		001cac5c: FALL_THROUGH

	[001cac5c]
		001cabcc: FALL_THROUGH
 	001cac5c mov ax,0x8ed
 	001cac68 mov bx,ax
 	001cac74 mov mar,0x7bef20
 	001cac80 mov ax,mar
 	001cac8c push op
 	001cac94 mov op,ax
 	001cac9c farpush bx
 	001caca4 setfuncargs 0x1
 	001cacac mov ax,0x356f20
 	001cacb8 farcall ax
 	001cacc0 farsubsp 0x1
 	001cacc8 pop op
 	001cacd0 jmp 0x001cad54
		001cad54: UNCONDITIONAL_JUMP

	[001cacd8]
		001cabcc: CONDITIONAL_JUMP
 	001cacd8 sourceline 0x245f
 	001cace0 mov ax,0x8ee
 	001cacec mov bx,ax
 	001cacf8 mov mar,0x7b6f20
 	001cad04 mov ax,mar
 	001cad10 push op
 	001cad18 mov op,ax
 	001cad20 farpush bx
 	001cad28 setfuncargs 0x1
 	001cad30 mov ax,0x356f20
 	001cad3c farcall ax
 	001cad44 farsubsp 0x1
 	001cad4c pop op
		001cad54: FALL_THROUGH

	[001cad54]
		001ca954: CONDITIONAL_JUMP
		001cabbc: UNCONDITIONAL_JUMP
		001cac5c: UNCONDITIONAL_JUMP
		001cacd8: FALL_THROUGH
 	001cad54 sourceline 0x2462
 	001cad5c jmp 0x001cb25c
		001cb25c: UNCONDITIONAL_JUMP

	[001cad64]
		001ca7f4: CONDITIONAL_JUMP
 	001cad64 sourceline 0x2464
 	001cad6c mov mar,0x7b6f20
 	001cad78 mov ax,mar
 	001cad84 push op
 	001cad8c mov op,ax
 	001cad94 setfuncargs 0x0
 	001cad9c mov ax,0x346f20
 	001cada8 farcall ax
 	001cadb0 pop op
 	001cadb8 push ax
 	001cadc0 mov ax,0x8ee
 	001cadcc pop bx
 	001cadd4 cmpeq bx,ax
 	001cade0 mov ax,bx
 	001cadec jz 0x001cafe8
		001cafe8: CONDITIONAL_JUMP
		001cadf4: FALL_THROUGH

	[001cadf4]
		001cad64: FALL_THROUGH
 	001cadf4 sourceline 0x2466
 	001cadfc mov mar,0x7b6f20
 	001cae08 mov ax,mar
 	001cae14 push op
 	001cae1c mov op,ax
 	001cae24 setfuncargs 0x0
 	001cae2c mov ax,0xdbef20
 	001cae38 farcall ax
 	001cae40 pop op
 	001cae48 push ax
 	001cae50 mov ax,0x20
 	001cae5c pop bx
 	001cae64 cmpeq bx,ax
 	001cae70 mov ax,bx
 	001cae7c jz 0x001cafd8
		001cafd8: CONDITIONAL_JUMP
		001cae84: FALL_THROUGH

	[001cae84]
		001cadf4: FALL_THROUGH
 	001cae84 sourceline 0x2468
 	001cae8c mov mar,0x7bef20
 	001cae98 mov ax,mar
 	001caea4 push op
 	001caeac mov op,ax
 	001caeb4 setfuncargs 0x0
 	001caebc mov ax,0x606f20
 	001caec8 farcall ax
 	001caed0 pop op
 	001caed8 jz 0x001cafd8
		001cafd8: CONDITIONAL_JUMP
		001caee0: FALL_THROUGH

	[001caee0]
		001cae84: FALL_THROUGH
 	001caee0 sourceline 0x246a
 	001caee8 mov ax,0x8ea
 	001caef4 mov bx,ax
 	001caf00 mov mar,0x7b6f20
 	001caf0c mov ax,mar
 	001caf18 push op
 	001caf20 mov op,ax
 	001caf28 farpush bx
 	001caf30 setfuncargs 0x1
 	001caf38 mov ax,0x356f20
 	001caf44 farcall ax
 	001caf4c farsubsp 0x1
 	001caf54 pop op
 	001caf5c sourceline 0x246b
 	001caf64 mov ax,0x8ed
 	001caf70 mov bx,ax
 	001caf7c mov mar,0x7bef20
 	001caf88 mov ax,mar
 	001caf94 push op
 	001caf9c mov op,ax
 	001cafa4 farpush bx
 	001cafac setfuncargs 0x1
 	001cafb4 mov ax,0x356f20
 	001cafc0 farcall ax
 	001cafc8 farsubsp 0x1
 	001cafd0 pop op
		001cafd8: FALL_THROUGH

	[001cafd8]
		001cadf4: CONDITIONAL_JUMP
		001cae84: CONDITIONAL_JUMP
		001caee0: FALL_THROUGH
 	001cafd8 sourceline 0x246e
 	001cafe0 jmp 0x001cb25c
		001cb25c: UNCONDITIONAL_JUMP

	[001cafe8]
		001cad64: CONDITIONAL_JUMP
 	001cafe8 sourceline 0x2471
 	001caff0 mov mar,0x7bef20
 	001caffc mov ax,mar
 	001cb008 push op
 	001cb010 mov op,ax
 	001cb018 setfuncargs 0x0
 	001cb020 mov ax,0x346f20
 	001cb02c farcall ax
 	001cb034 pop op
 	001cb03c push ax
 	001cb044 mov ax,0x8ed
 	001cb050 pop bx
 	001cb058 cmpeq bx,ax
 	001cb064 mov ax,bx
 	001cb070 jz 0x001cb25c
		001cb25c: CONDITIONAL_JUMP
		001cb078: FALL_THROUGH

	[001cb078]
		001cafe8: FALL_THROUGH
 	001cb078 sourceline 0x2473
 	001cb080 mov mar,0x7bef20
 	001cb08c mov ax,mar
 	001cb098 push op
 	001cb0a0 mov op,ax
 	001cb0a8 setfuncargs 0x0
 	001cb0b0 mov ax,0xdbef20
 	001cb0bc farcall ax
 	001cb0c4 pop op
 	001cb0cc push ax
 	001cb0d4 mov ax,0x20
 	001cb0e0 pop bx
 	001cb0e8 cmpeq bx,ax
 	001cb0f4 mov ax,bx
 	001cb100 jz 0x001cb25c
		001cb25c: CONDITIONAL_JUMP
		001cb108: FALL_THROUGH

	[001cb108]
		001cb078: FALL_THROUGH
 	001cb108 sourceline 0x2475
 	001cb110 mov mar,0x7b6f20
 	001cb11c mov ax,mar
 	001cb128 push op
 	001cb130 mov op,ax
 	001cb138 setfuncargs 0x0
 	001cb140 mov ax,0x606f20
 	001cb14c farcall ax
 	001cb154 pop op
 	001cb15c jz 0x001cb25c
		001cb25c: CONDITIONAL_JUMP
		001cb164: FALL_THROUGH

	[001cb164]
		001cb108: FALL_THROUGH
 	001cb164 sourceline 0x2477
 	001cb16c mov ax,0x8e9
 	001cb178 mov bx,ax
 	001cb184 mov mar,0x7bef20
 	001cb190 mov ax,mar
 	001cb19c push op
 	001cb1a4 mov op,ax
 	001cb1ac farpush bx
 	001cb1b4 setfuncargs 0x1
 	001cb1bc mov ax,0x356f20
 	001cb1c8 farcall ax
 	001cb1d0 farsubsp 0x1
 	001cb1d8 pop op
 	001cb1e0 sourceline 0x2478
 	001cb1e8 mov ax,0x8ee
 	001cb1f4 mov bx,ax
 	001cb200 mov mar,0x7b6f20
 	001cb20c mov ax,mar
 	001cb218 push op
 	001cb220 mov op,ax
 	001cb228 farpush bx
 	001cb230 setfuncargs 0x1
 	001cb238 mov ax,0x356f20
 	001cb244 farcall ax
 	001cb24c farsubsp 0x1
 	001cb254 pop op
		001cb25c: FALL_THROUGH

	[001cb25c]
		001ca55c: CONDITIONAL_JUMP
		001ca6ec: UNCONDITIONAL_JUMP
		001cad54: UNCONDITIONAL_JUMP
		001cafd8: UNCONDITIONAL_JUMP
		001cafe8: CONDITIONAL_JUMP
		001cb078: CONDITIONAL_JUMP
		001cb108: CONDITIONAL_JUMP
		001cb164: FALL_THROUGH
 	001cb25c sourceline 0x247e
 	001cb264 mov ax,0x0
 	001cb270 stackptr 0x8
 	001cb278 memzerond
 	001cb27c ret

btnUp_OnClick$2:
	[001cb280]
 	001cb280 sourceline 0x2484
 	001cb288 thisaddr
 	001cb290 stackptr 0x8
 	001cb298 memread4 ax
 	001cb2a0 meminit ax
 	001cb2a8 sourceline 0x2485
 	001cb2b0 stackptr 0xc
 	001cb2b8 memread4 ax
 	001cb2c0 push ax
 	001cb2c8 mov ax,0x1
 	001cb2d4 pop bx
 	001cb2dc cmpeq bx,ax
 	001cb2e8 mov ax,bx
 	001cb2f4 jz 0x001cbb68
		001cbb68: CONDITIONAL_JUMP
		001cb2fc: FALL_THROUGH

	[001cb2fc]
		001cb280: FALL_THROUGH
 	001cb2fc sourceline 0x2487
 	001cb304 push op
 	001cb30c mov ax,0x0
 	001cb318 farpush ax
 	001cb320 mov ax,0x32
 	001cb32c farpush ax
*	001cb334 mov mar,0xdb6f20
 	001cb340 mov ax,mar
 	001cb34c mov op,ax
 	001cb354 setfuncargs 0x2
 	001cb35c mov ax,0x2fef20
 	001cb368 farcall ax
 	001cb370 farsubsp 0x2
 	001cb378 pop op
 	001cb380 sourceline 0x2488
 	001cb388 mov mar,0x7aef20
 	001cb394 mov ax,mar
 	001cb3a0 push op
 	001cb3a8 mov op,ax
 	001cb3b0 setfuncargs 0x0
 	001cb3b8 mov ax,0x346f20
 	001cb3c4 farcall ax
 	001cb3cc pop op
 	001cb3d4 push ax
 	001cb3dc mov ax,0x8ec
 	001cb3e8 pop bx
 	001cb3f0 cmpeq bx,ax
 	001cb3fc mov ax,bx
 	001cb408 jz 0x001cb518
		001cb518: CONDITIONAL_JUMP
		001cb410: FALL_THROUGH

	[001cb410]
		001cb2fc: FALL_THROUGH
 	001cb410 sourceline 0x248a
 	001cb418 mov ax,0x8e8
 	001cb424 mov bx,ax
 	001cb430 mov mar,0x7aef20
 	001cb43c mov ax,mar
 	001cb448 push op
 	001cb450 mov op,ax
 	001cb458 farpush bx
 	001cb460 setfuncargs 0x1
 	001cb468 mov ax,0x356f20
 	001cb474 farcall ax
 	001cb47c farsubsp 0x1
 	001cb484 pop op
 	001cb48c sourceline 0x248b
 	001cb494 mov ax,0x8ef
 	001cb4a0 mov bx,ax
 	001cb4ac mov mar,0x7a6f20
 	001cb4b8 mov ax,mar
 	001cb4c4 push op
 	001cb4cc mov op,ax
 	001cb4d4 farpush bx
 	001cb4dc setfuncargs 0x1
 	001cb4e4 mov ax,0x356f20
 	001cb4f0 farcall ax
 	001cb4f8 farsubsp 0x1
 	001cb500 pop op
 	001cb508 sourceline 0x248c
 	001cb510 jmp 0x001cbb68
		001cbb68: UNCONDITIONAL_JUMP

	[001cb518]
		001cb2fc: CONDITIONAL_JUMP
 	001cb518 sourceline 0x248e
 	001cb520 mov mar,0x7b6f20
 	001cb52c mov ax,mar
 	001cb538 push op
 	001cb540 mov op,ax
 	001cb548 setfuncargs 0x0
 	001cb550 mov ax,0x346f20
 	001cb55c farcall ax
 	001cb564 pop op
 	001cb56c push ax
 	001cb574 mov ax,0x8ee
 	001cb580 pop bx
 	001cb588 cmpeq bx,ax
 	001cb594 mov ax,bx
 	001cb5a0 jz 0x001cb848
		001cb848: CONDITIONAL_JUMP
		001cb5a8: FALL_THROUGH

	[001cb5a8]
		001cb518: FALL_THROUGH
 	001cb5a8 sourceline 0x2490
 	001cb5b0 mov mar,0x7b6f20
 	001cb5bc mov ax,mar
 	001cb5c8 push op
 	001cb5d0 mov op,ax
 	001cb5d8 setfuncargs 0x0
 	001cb5e0 mov ax,0xdbef20
 	001cb5ec farcall ax
 	001cb5f4 pop op
 	001cb5fc push ax
 	001cb604 mov ax,0x20
 	001cb610 pop bx
 	001cb618 cmpeq bx,ax
 	001cb624 mov ax,bx
 	001cb630 jz 0x001cb740
		001cb740: CONDITIONAL_JUMP
		001cb638: FALL_THROUGH

	[001cb638]
		001cb5a8: FALL_THROUGH
 	001cb638 sourceline 0x2492
 	001cb640 mov ax,0x8ea
 	001cb64c mov bx,ax
 	001cb658 mov mar,0x7b6f20
 	001cb664 mov ax,mar
 	001cb670 push op
 	001cb678 mov op,ax
 	001cb680 farpush bx
 	001cb688 setfuncargs 0x1
 	001cb690 mov ax,0x356f20
 	001cb69c farcall ax
 	001cb6a4 farsubsp 0x1
 	001cb6ac pop op
 	001cb6b4 sourceline 0x2493
 	001cb6bc mov ax,0x8ec
 	001cb6c8 mov bx,ax
 	001cb6d4 mov mar,0x7aef20
 	001cb6e0 mov ax,mar
 	001cb6ec push op
 	001cb6f4 mov op,ax
 	001cb6fc farpush bx
 	001cb704 setfuncargs 0x1
 	001cb70c mov ax,0x356f20
 	001cb718 farcall ax
 	001cb720 farsubsp 0x1
 	001cb728 pop op
 	001cb730 sourceline 0x2494
 	001cb738 jmp 0x001cb838
		001cb838: UNCONDITIONAL_JUMP

	[001cb740]
		001cb5a8: CONDITIONAL_JUMP
 	001cb740 sourceline 0x2497
 	001cb748 mov ax,0x8ea
 	001cb754 mov bx,ax
 	001cb760 mov mar,0x7b6f20
 	001cb76c mov ax,mar
 	001cb778 push op
 	001cb780 mov op,ax
 	001cb788 farpush bx
 	001cb790 setfuncargs 0x1
 	001cb798 mov ax,0x356f20
 	001cb7a4 farcall ax
 	001cb7ac farsubsp 0x1
 	001cb7b4 pop op
 	001cb7bc sourceline 0x2498
 	001cb7c4 mov ax,0x8ed
 	001cb7d0 mov bx,ax
 	001cb7dc mov mar,0x7bef20
 	001cb7e8 mov ax,mar
 	001cb7f4 push op
 	001cb7fc mov op,ax
 	001cb804 farpush bx
 	001cb80c setfuncargs 0x1
 	001cb814 mov ax,0x356f20
 	001cb820 farcall ax
 	001cb828 farsubsp 0x1
 	001cb830 pop op
		001cb838: FALL_THROUGH

	[001cb838]
		001cb638: UNCONDITIONAL_JUMP
		001cb740: FALL_THROUGH
 	001cb838 sourceline 0x249a
 	001cb840 jmp 0x001cbb68
		001cbb68: UNCONDITIONAL_JUMP

	[001cb848]
		001cb518: CONDITIONAL_JUMP
 	001cb848 sourceline 0x249d
 	001cb850 mov mar,0x7bef20
 	001cb85c mov ax,mar
 	001cb868 push op
 	001cb870 mov op,ax
 	001cb878 setfuncargs 0x0
 	001cb880 mov ax,0x346f20
 	001cb88c farcall ax
 	001cb894 pop op
 	001cb89c push ax
 	001cb8a4 mov ax,0x8ed
 	001cb8b0 pop bx
 	001cb8b8 cmpeq bx,ax
 	001cb8c4 mov ax,bx
 	001cb8d0 jz 0x001cbb68
		001cbb68: CONDITIONAL_JUMP
		001cb8d8: FALL_THROUGH

	[001cb8d8]
		001cb848: FALL_THROUGH
 	001cb8d8 sourceline 0x249f
 	001cb8e0 mov mar,0x7bef20
 	001cb8ec mov ax,mar
 	001cb8f8 push op
 	001cb900 mov op,ax
 	001cb908 setfuncargs 0x0
 	001cb910 mov ax,0xdbef20
 	001cb91c farcall ax
 	001cb924 pop op
 	001cb92c push ax
 	001cb934 mov ax,0x20
 	001cb940 pop bx
 	001cb948 cmpeq bx,ax
 	001cb954 mov ax,bx
 	001cb960 jz 0x001cba70
		001cba70: CONDITIONAL_JUMP
		001cb968: FALL_THROUGH

	[001cb968]
		001cb8d8: FALL_THROUGH
 	001cb968 sourceline 0x24a1
 	001cb970 mov ax,0x8e9
 	001cb97c mov bx,ax
 	001cb988 mov mar,0x7bef20
 	001cb994 mov ax,mar
 	001cb9a0 push op
 	001cb9a8 mov op,ax
 	001cb9b0 farpush bx
 	001cb9b8 setfuncargs 0x1
 	001cb9c0 mov ax,0x356f20
 	001cb9cc farcall ax
 	001cb9d4 farsubsp 0x1
 	001cb9dc pop op
 	001cb9e4 sourceline 0x24a2
 	001cb9ec mov ax,0x8ec
 	001cb9f8 mov bx,ax
 	001cba04 mov mar,0x7aef20
 	001cba10 mov ax,mar
 	001cba1c push op
 	001cba24 mov op,ax
 	001cba2c farpush bx
 	001cba34 setfuncargs 0x1
 	001cba3c mov ax,0x356f20
 	001cba48 farcall ax
 	001cba50 farsubsp 0x1
 	001cba58 pop op
 	001cba60 sourceline 0x24a3
 	001cba68 jmp 0x001cbb68
		001cbb68: UNCONDITIONAL_JUMP

	[001cba70]
		001cb8d8: CONDITIONAL_JUMP
 	001cba70 sourceline 0x24a6
 	001cba78 mov ax,0x8e9
 	001cba84 mov bx,ax
 	001cba90 mov mar,0x7bef20
 	001cba9c mov ax,mar
 	001cbaa8 push op
 	001cbab0 mov op,ax
 	001cbab8 farpush bx
 	001cbac0 setfuncargs 0x1
 	001cbac8 mov ax,0x356f20
 	001cbad4 farcall ax
 	001cbadc farsubsp 0x1
 	001cbae4 pop op
 	001cbaec sourceline 0x24a7
 	001cbaf4 mov ax,0x8ee
 	001cbb00 mov bx,ax
 	001cbb0c mov mar,0x7b6f20
 	001cbb18 mov ax,mar
 	001cbb24 push op
 	001cbb2c mov op,ax
 	001cbb34 farpush bx
 	001cbb3c setfuncargs 0x1
 	001cbb44 mov ax,0x356f20
 	001cbb50 farcall ax
 	001cbb58 farsubsp 0x1
 	001cbb60 pop op
		001cbb68: FALL_THROUGH

	[001cbb68]
		001cb280: CONDITIONAL_JUMP
		001cb410: UNCONDITIONAL_JUMP
		001cb838: UNCONDITIONAL_JUMP
		001cb848: CONDITIONAL_JUMP
		001cb968: UNCONDITIONAL_JUMP
		001cba70: FALL_THROUGH
 	001cbb68 sourceline 0x24ab
 	001cbb70 mov ax,0x0
 	001cbb7c stackptr 0x8
 	001cbb84 memzerond
 	001cbb88 ret

btnRed_OnClick$2:
	[001cbb8c]
 	001cbb8c sourceline 0x24b0
 	001cbb94 thisaddr
 	001cbb9c stackptr 0x8
 	001cbba4 memread4 ax
 	001cbbac meminit ax
 	001cbbb4 sourceline 0x24b1
 	001cbbbc stackptr 0xc
 	001cbbc4 memread4 ax
 	001cbbcc push ax
 	001cbbd4 mov ax,0x1
 	001cbbe0 pop bx
 	001cbbe8 cmpeq bx,ax
 	001cbbf4 mov ax,bx
 	001cbc00 jz 0x001cd290
		001cd290: CONDITIONAL_JUMP
		001cbc08: FALL_THROUGH

	[001cbc08]
		001cbb8c: FALL_THROUGH
 	001cbc08 sourceline 0x24b3
 	001cbc10 push op
 	001cbc18 mov ax,0x0
 	001cbc24 farpush ax
 	001cbc2c mov ax,0x32
 	001cbc38 farpush ax
*	001cbc40 mov mar,0xd06f20
 	001cbc4c mov ax,mar
 	001cbc58 mov op,ax
 	001cbc60 setfuncargs 0x2
 	001cbc68 mov ax,0x2fef20
 	001cbc74 farcall ax
 	001cbc7c farsubsp 0x2
 	001cbc84 pop op
 	001cbc8c sourceline 0x24b4
 	001cbc94 mov ax,0x7
 	001cbca0 farpush ax
 	001cbca8 setfuncargs 0x1
 	001cbcb0 mov ax,0x426f20
 	001cbcbc farcall ax
 	001cbcc4 farsubsp 0x1
 	001cbccc sourceline 0x24b5
 	001cbcd4 mov ax,0x0
 	001cbce0 mov bx,ax
 	001cbcec mov mar,0x31ef20
 	001cbcf8 mov ax,mar
 	001cbd04 push op
 	001cbd0c mov op,ax
 	001cbd14 farpush bx
 	001cbd1c setfuncargs 0x1
 	001cbd24 mov ax,0x3a6f20
 	001cbd30 farcall ax
 	001cbd38 farsubsp 0x1
 	001cbd40 pop op
 	001cbd48 sourceline 0x24b6
 	001cbd50 mov ax,0x0
 	001cbd5c mov mar,0x5eef20
 	001cbd68 memwrite4 ax
 	001cbd70 sourceline 0x24b7
 	001cbd78 push op
 	001cbd80 mov ax,0x0
 	001cbd8c farpush ax
 	001cbd94 mov ax,0x32
 	001cbda0 farpush ax
 	001cbda8 mov mar,0xd16f20
 	001cbdb4 mov ax,mar
 	001cbdc0 mov op,ax
 	001cbdc8 setfuncargs 0x2
 	001cbdd0 mov ax,0xdc6f20
 	001cbddc farcall ax
 	001cbde4 farsubsp 0x2
 	001cbdec pop op
 	001cbdf4 sourceline 0x24b8
 	001cbdfc push op
 	001cbe04 mov ax,0x426
 	001cbe10 farpush ax
 	001cbe18 mov ax,0x397
 	001cbe24 farpush ax
 	001cbe2c mov ax,0x0
 	001cbe38 farpush ax
 	001cbe40 mov ax,0x3
 	001cbe4c farpush ax
 	001cbe54 mov ax,0x3
 	001cbe60 farpush ax
 	001cbe68 mov mar,0x3cef20
 	001cbe74 mov ax,mar
 	001cbe80 mov op,ax
 	001cbe88 setfuncargs 0x5
 	001cbe90 mov ax,0x536f20
 	001cbe9c farcall ax
 	001cbea4 farsubsp 0x5
 	001cbeac pop op
 	001cbeb4 sourceline 0x24b9
 	001cbebc mov mar,0x3cef20
 	001cbec8 mov ax,mar
 	001cbed4 push op
 	001cbedc mov op,ax
 	001cbee4 setfuncargs 0x0
 	001cbeec mov ax,0x3d6f20
 	001cbef8 farcall ax
 	001cbf00 pop op
 	001cbf08 push ax
 	001cbf10 mov ax,0x8
 	001cbf1c pop bx
 	001cbf24 cmpeq bx,ax
 	001cbf30 mov ax,bx
 	001cbf3c jz 0x001cc094
		001cc094: CONDITIONAL_JUMP
		001cbf44: FALL_THROUGH

	[001cbf44]
		001cbc08: FALL_THROUGH
 	001cbf44 sourceline 0x24bb
 	001cbf4c setfuncargs 0x0
 	001cbf54 mov ax,0x76ef20
 	001cbf60 farcall ax
 	001cbf68 push ax
 	001cbf70 mov ax,0x1
 	001cbf7c pop bx
 	001cbf84 cmpeq bx,ax
 	001cbf90 mov ax,bx
 	001cbf9c jz 0x001cc014
		001cc014: CONDITIONAL_JUMP
		001cbfa4: FALL_THROUGH

	[001cbfa4]
		001cbf44: FALL_THROUGH
 	001cbfa4 push op
 	001cbfac mov ax,0x28
 	001cbfb8 farpush ax
 	001cbfc0 mov mar,0x3cef20
 	001cbfcc mov ax,mar
 	001cbfd8 mov op,ax
 	001cbfe0 setfuncargs 0x1
 	001cbfe8 mov ax,0x51ef20
 	001cbff4 farcall ax
 	001cbffc farsubsp 0x1
 	001cc004 pop op
 	001cc00c jmp 0x001cc084
		001cc084: UNCONDITIONAL_JUMP

	[001cc014]
		001cbf44: CONDITIONAL_JUMP
 	001cc014 sourceline 0x24bc
 	001cc01c push op
 	001cc024 mov ax,0x2
 	001cc030 farpush ax
 	001cc038 mov mar,0x3cef20
 	001cc044 mov ax,mar
 	001cc050 mov op,ax
 	001cc058 setfuncargs 0x1
 	001cc060 mov ax,0x51ef20
 	001cc06c farcall ax
 	001cc074 farsubsp 0x1
 	001cc07c pop op
		001cc084: FALL_THROUGH

	[001cc084]
		001cbfa4: UNCONDITIONAL_JUMP
		001cc014: FALL_THROUGH
 	001cc084 sourceline 0x24bd
 	001cc08c jmp 0x001cc550
		001cc550: UNCONDITIONAL_JUMP

	[001cc094]
		001cbc08: CONDITIONAL_JUMP
 	001cc094 sourceline 0x24be
 	001cc09c mov mar,0x3cef20
 	001cc0a8 mov ax,mar
 	001cc0b4 push op
 	001cc0bc mov op,ax
 	001cc0c4 setfuncargs 0x0
 	001cc0cc mov ax,0x3d6f20
 	001cc0d8 farcall ax
 	001cc0e0 pop op
 	001cc0e8 push ax
 	001cc0f0 mov ax,0x12
 	001cc0fc pop bx
 	001cc104 cmpeq bx,ax
 	001cc110 mov ax,bx
 	001cc11c jz 0x001cc194
		001cc194: CONDITIONAL_JUMP
		001cc124: FALL_THROUGH

	[001cc124]
		001cc094: FALL_THROUGH
 	001cc124 push op
 	001cc12c mov ax,0x5e
 	001cc138 farpush ax
 	001cc140 mov mar,0x3cef20
 	001cc14c mov ax,mar
 	001cc158 mov op,ax
 	001cc160 setfuncargs 0x1
 	001cc168 mov ax,0x51ef20
 	001cc174 farcall ax
 	001cc17c farsubsp 0x1
 	001cc184 pop op
 	001cc18c jmp 0x001cc550
		001cc550: UNCONDITIONAL_JUMP

	[001cc194]
		001cc094: CONDITIONAL_JUMP
 	001cc194 sourceline 0x24bf
 	001cc19c mov mar,0x3cef20
 	001cc1a8 mov ax,mar
 	001cc1b4 push op
 	001cc1bc mov op,ax
 	001cc1c4 setfuncargs 0x0
 	001cc1cc mov ax,0x3d6f20
 	001cc1d8 farcall ax
 	001cc1e0 pop op
 	001cc1e8 push ax
 	001cc1f0 mov ax,0x22
 	001cc1fc pop bx
 	001cc204 cmpeq bx,ax
 	001cc210 mov ax,bx
 	001cc21c jnz 0x001cc2cc
		001cc2cc: CONDITIONAL_JUMP
		001cc224: FALL_THROUGH

	[001cc224]
		001cc194: FALL_THROUGH
 	001cc224 push ax
 	001cc22c mov mar,0x3cef20
 	001cc238 mov ax,mar
 	001cc244 push op
 	001cc24c mov op,ax
 	001cc254 setfuncargs 0x0
 	001cc25c mov ax,0x3d6f20
 	001cc268 farcall ax
 	001cc270 pop op
 	001cc278 push ax
 	001cc280 mov ax,0x25
 	001cc28c pop bx
 	001cc294 cmpeq bx,ax
 	001cc2a0 mov ax,bx
 	001cc2ac pop bx
 	001cc2b4 lor bx,ax
 	001cc2c0 mov ax,bx
		001cc2cc: FALL_THROUGH

	[001cc2cc]
		001cc194: CONDITIONAL_JUMP
		001cc224: FALL_THROUGH
 	001cc2cc jz 0x001cc344
		001cc344: CONDITIONAL_JUMP
		001cc2d4: FALL_THROUGH

	[001cc2d4]
		001cc2cc: FALL_THROUGH
 	001cc2d4 push op
 	001cc2dc mov ax,0xac
 	001cc2e8 farpush ax
 	001cc2f0 mov mar,0x3cef20
 	001cc2fc mov ax,mar
 	001cc308 mov op,ax
 	001cc310 setfuncargs 0x1
 	001cc318 mov ax,0x51ef20
 	001cc324 farcall ax
 	001cc32c farsubsp 0x1
 	001cc334 pop op
 	001cc33c jmp 0x001cc550
		001cc550: UNCONDITIONAL_JUMP

	[001cc344]
		001cc2cc: CONDITIONAL_JUMP
 	001cc344 sourceline 0x24c0
 	001cc34c mov mar,0x3cef20
 	001cc358 mov ax,mar
 	001cc364 push op
 	001cc36c mov op,ax
 	001cc374 setfuncargs 0x0
 	001cc37c mov ax,0x3d6f20
 	001cc388 farcall ax
 	001cc390 pop op
 	001cc398 push ax
 	001cc3a0 mov ax,0x27
 	001cc3ac pop bx
 	001cc3b4 cmpeq bx,ax
 	001cc3c0 mov ax,bx
 	001cc3cc jz 0x001cc444
		001cc444: CONDITIONAL_JUMP
		001cc3d4: FALL_THROUGH

	[001cc3d4]
		001cc344: FALL_THROUGH
 	001cc3d4 push op
 	001cc3dc mov ax,0xd1
 	001cc3e8 farpush ax
 	001cc3f0 mov mar,0x3cef20
 	001cc3fc mov ax,mar
 	001cc408 mov op,ax
 	001cc410 setfuncargs 0x1
 	001cc418 mov ax,0x51ef20
 	001cc424 farcall ax
 	001cc42c farsubsp 0x1
 	001cc434 pop op
 	001cc43c jmp 0x001cc550
		001cc550: UNCONDITIONAL_JUMP

	[001cc444]
		001cc344: CONDITIONAL_JUMP
 	001cc444 sourceline 0x24c3
 	001cc44c mov mar,0x776f20
 	001cc458 memread4 ax
 	001cc460 lnot ax
 	001cc468 jz 0x001cc4e0
		001cc4e0: CONDITIONAL_JUMP
		001cc470: FALL_THROUGH

	[001cc470]
		001cc444: FALL_THROUGH
 	001cc470 push op
 	001cc478 mov ax,0x2
 	001cc484 farpush ax
 	001cc48c mov mar,0x3cef20
 	001cc498 mov ax,mar
 	001cc4a4 mov op,ax
 	001cc4ac setfuncargs 0x1
 	001cc4b4 mov ax,0x51ef20
 	001cc4c0 farcall ax
 	001cc4c8 farsubsp 0x1
 	001cc4d0 pop op
 	001cc4d8 jmp 0x001cc550
		001cc550: UNCONDITIONAL_JUMP

	[001cc4e0]
		001cc444: CONDITIONAL_JUMP
 	001cc4e0 sourceline 0x24c4
 	001cc4e8 push op
 	001cc4f0 mov ax,0x1b
 	001cc4fc farpush ax
 	001cc504 mov mar,0x3cef20
 	001cc510 mov ax,mar
 	001cc51c mov op,ax
 	001cc524 setfuncargs 0x1
 	001cc52c mov ax,0x51ef20
 	001cc538 farcall ax
 	001cc540 farsubsp 0x1
 	001cc548 pop op
		001cc550: FALL_THROUGH

	[001cc550]
		001cc084: UNCONDITIONAL_JUMP
		001cc124: UNCONDITIONAL_JUMP
		001cc2d4: UNCONDITIONAL_JUMP
		001cc3d4: UNCONDITIONAL_JUMP
		001cc470: UNCONDITIONAL_JUMP
		001cc4e0: FALL_THROUGH
 	001cc550 sourceline 0x24c6
 	001cc558 mov ax,0x0
 	001cc564 mov bx,ax
 	001cc570 mov mar,0x3cef20
 	001cc57c mov ax,mar
 	001cc588 push op
 	001cc590 mov op,ax
 	001cc598 farpush bx
 	001cc5a0 setfuncargs 0x1
 	001cc5a8 mov ax,0x766f20
 	001cc5b4 farcall ax
 	001cc5bc farsubsp 0x1
 	001cc5c4 pop op
 	001cc5cc sourceline 0x24c7
 	001cc5d4 mov mar,0x3cef20
 	001cc5e0 mov ax,mar
 	001cc5ec push op
 	001cc5f4 mov op,ax
 	001cc5fc setfuncargs 0x0
 	001cc604 mov ax,0x78ef20
 	001cc610 farcall ax
 	001cc618 pop op
 	001cc620 push ax
 	001cc628 mov ax,0x7
 	001cc634 pop bx
 	001cc63c add bx,ax
 	001cc648 mov ax,bx
 	001cc654 mov bx,ax
 	001cc660 mov mar,0x3cef20
 	001cc66c mov ax,mar
 	001cc678 push op
 	001cc680 mov op,ax
 	001cc688 farpush bx
 	001cc690 setfuncargs 0x1
 	001cc698 mov ax,0x526f20
 	001cc6a4 farcall ax
 	001cc6ac farsubsp 0x1
 	001cc6b4 pop op
 	001cc6bc sourceline 0x24c9
 	001cc6c4 mov mar,0x3cef20
 	001cc6d0 mov ax,mar
 	001cc6dc push op
 	001cc6e4 mov op,ax
 	001cc6ec setfuncargs 0x0
 	001cc6f4 mov ax,0x3d6f20
 	001cc700 farcall ax
 	001cc708 pop op
 	001cc710 push ax
 	001cc718 mov ax,0x10
 	001cc724 pop bx
 	001cc72c cmpeq bx,ax
 	001cc738 mov ax,bx
 	001cc744 jz 0x001cca4c
		001cca4c: CONDITIONAL_JUMP
		001cc74c: FALL_THROUGH

	[001cc74c]
		001cc550: FALL_THROUGH
 	001cc74c mov ax,0x1
 	001cc758 push ax
 	001cc760 mov ax,0x1
 	001cc76c assertlte ax,0x10
 	001cc778 mul ax,0x8
 	001cc784 mov cx,ax
 	001cc790 pop ax
 	001cc798 mov bx,ax
 	001cc7a4 mov mar,0x77ef20
 	001cc7b0 add mar,cx
 	001cc7bc mov ax,mar
 	001cc7c8 push op
 	001cc7d0 mov op,ax
 	001cc7d8 farpush bx
 	001cc7e0 setfuncargs 0x1
 	001cc7e8 mov ax,0x786f20
 	001cc7f4 farcall ax
 	001cc7fc farsubsp 0x1
 	001cc804 pop op
 	001cc80c mov ax,0x1
 	001cc818 push ax
 	001cc820 mov ax,0x2
 	001cc82c assertlte ax,0x10
 	001cc838 mul ax,0x8
 	001cc844 mov cx,ax
 	001cc850 pop ax
 	001cc858 mov bx,ax
 	001cc864 mov mar,0x77ef20
 	001cc870 add mar,cx
 	001cc87c mov ax,mar
 	001cc888 push op
 	001cc890 mov op,ax
 	001cc898 farpush bx
 	001cc8a0 setfuncargs 0x1
 	001cc8a8 mov ax,0x786f20
 	001cc8b4 farcall ax
 	001cc8bc farsubsp 0x1
 	001cc8c4 pop op
 	001cc8cc mov ax,0x1
 	001cc8d8 push ax
 	001cc8e0 mov ax,0x3
 	001cc8ec assertlte ax,0x10
 	001cc8f8 mul ax,0x8
 	001cc904 mov cx,ax
 	001cc910 pop ax
 	001cc918 mov bx,ax
 	001cc924 mov mar,0x77ef20
 	001cc930 add mar,cx
 	001cc93c mov ax,mar
 	001cc948 push op
 	001cc950 mov op,ax
 	001cc958 farpush bx
 	001cc960 setfuncargs 0x1
 	001cc968 mov ax,0x786f20
 	001cc974 farcall ax
 	001cc97c farsubsp 0x1
 	001cc984 pop op
 	001cc98c mov ax,0x1
 	001cc998 push ax
 	001cc9a0 mov ax,0x4
 	001cc9ac assertlte ax,0x10
 	001cc9b8 mul ax,0x8
 	001cc9c4 mov cx,ax
 	001cc9d0 pop ax
 	001cc9d8 mov bx,ax
 	001cc9e4 mov mar,0x77ef20
 	001cc9f0 add mar,cx
 	001cc9fc mov ax,mar
 	001cca08 push op
 	001cca10 mov op,ax
 	001cca18 farpush bx
 	001cca20 setfuncargs 0x1
 	001cca28 mov ax,0x786f20
 	001cca34 farcall ax
 	001cca3c farsubsp 0x1
 	001cca44 pop op
		001cca4c: FALL_THROUGH

	[001cca4c]
		001cc550: CONDITIONAL_JUMP
		001cc74c: FALL_THROUGH
 	001cca4c sourceline 0x24cb
 	001cca54 mov mar,0x42ef20
 	001cca60 push mar
 	001cca68 pop mar
 	001cca70 memread.ptr ax
 	001cca78 push ax
 	001cca80 pop mar
 	001cca88 mov ax,mar
 	001cca94 push op
 	001cca9c mov op,ax
 	001ccaa4 setfuncargs 0x0
 	001ccaac mov ax,0x3d6f20
 	001ccab8 farcall ax
 	001ccac0 pop op
 	001ccac8 push ax
 	001ccad0 mov ax,0xd
 	001ccadc pop bx
 	001ccae4 cmpeq bx,ax
 	001ccaf0 mov ax,bx
 	001ccafc jz 0x001ccc84
		001ccc84: CONDITIONAL_JUMP
		001ccb04: FALL_THROUGH

	[001ccb04]
		001cca4c: FALL_THROUGH
 	001ccb04 mov ax,0x1
 	001ccb10 push ax
 	001ccb18 mov ax,0x1
 	001ccb24 assertlte ax,0x10
 	001ccb30 mul ax,0x8
 	001ccb3c mov cx,ax
 	001ccb48 pop ax
 	001ccb50 mov bx,ax
 	001ccb5c mov mar,0x77ef20
 	001ccb68 add mar,cx
 	001ccb74 mov ax,mar
 	001ccb80 push op
 	001ccb88 mov op,ax
 	001ccb90 farpush bx
 	001ccb98 setfuncargs 0x1
 	001ccba0 mov ax,0x786f20
 	001ccbac farcall ax
 	001ccbb4 farsubsp 0x1
 	001ccbbc pop op
 	001ccbc4 mov ax,0x1
 	001ccbd0 push ax
 	001ccbd8 mov ax,0x2
 	001ccbe4 assertlte ax,0x10
 	001ccbf0 mul ax,0x8
 	001ccbfc mov cx,ax
 	001ccc08 pop ax
 	001ccc10 mov bx,ax
 	001ccc1c mov mar,0x77ef20
 	001ccc28 add mar,cx
 	001ccc34 mov ax,mar
 	001ccc40 push op
 	001ccc48 mov op,ax
 	001ccc50 farpush bx
 	001ccc58 setfuncargs 0x1
 	001ccc60 mov ax,0x786f20
 	001ccc6c farcall ax
 	001ccc74 farsubsp 0x1
 	001ccc7c pop op
		001ccc84: FALL_THROUGH

	[001ccc84]
		001cca4c: CONDITIONAL_JUMP
		001ccb04: FALL_THROUGH
 	001ccc84 sourceline 0x24cd
 	001ccc8c mov mar,0x42ef20
 	001ccc98 push mar
 	001ccca0 pop mar
 	001ccca8 memread.ptr ax
 	001cccb0 push ax
 	001cccb8 pop mar
 	001cccc0 mov ax,mar
 	001ccccc push op
 	001cccd4 mov op,ax
 	001cccdc setfuncargs 0x0
 	001ccce4 mov ax,0x3d6f20
 	001cccf0 farcall ax
 	001cccf8 pop op
 	001ccd00 push ax
 	001ccd08 mov ax,0x27
 	001ccd14 pop bx
 	001ccd1c cmpeq bx,ax
 	001ccd28 mov ax,bx
 	001ccd34 jz 0x001ccebc
		001ccebc: CONDITIONAL_JUMP
		001ccd3c: FALL_THROUGH

	[001ccd3c]
		001ccc84: FALL_THROUGH
 	001ccd3c mov ax,0x1
 	001ccd48 push ax
 	001ccd50 mov ax,0x1
 	001ccd5c assertlte ax,0x10
 	001ccd68 mul ax,0x8
 	001ccd74 mov cx,ax
 	001ccd80 pop ax
 	001ccd88 mov bx,ax
 	001ccd94 mov mar,0x77ef20
 	001ccda0 add mar,cx
 	001ccdac mov ax,mar
 	001ccdb8 push op
 	001ccdc0 mov op,ax
 	001ccdc8 farpush bx
 	001ccdd0 setfuncargs 0x1
 	001ccdd8 mov ax,0x786f20
 	001ccde4 farcall ax
 	001ccdec farsubsp 0x1
 	001ccdf4 pop op
 	001ccdfc mov ax,0x1
 	001cce08 push ax
 	001cce10 mov ax,0x2
 	001cce1c assertlte ax,0x10
 	001cce28 mul ax,0x8
 	001cce34 mov cx,ax
 	001cce40 pop ax
 	001cce48 mov bx,ax
 	001cce54 mov mar,0x77ef20
 	001cce60 add mar,cx
 	001cce6c mov ax,mar
 	001cce78 push op
 	001cce80 mov op,ax
 	001cce88 farpush bx
 	001cce90 setfuncargs 0x1
 	001cce98 mov ax,0x786f20
 	001ccea4 farcall ax
 	001cceac farsubsp 0x1
 	001cceb4 pop op
		001ccebc: FALL_THROUGH

	[001ccebc]
		001ccc84: CONDITIONAL_JUMP
		001ccd3c: FALL_THROUGH
 	001ccebc sourceline 0x24cf
 	001ccec4 mov mar,0x42ef20
 	001cced0 push mar
 	001cced8 pop mar
 	001ccee0 memread.ptr ax
 	001ccee8 push ax
 	001ccef0 pop mar
 	001ccef8 mov ax,mar
 	001ccf04 push op
 	001ccf0c mov op,ax
 	001ccf14 setfuncargs 0x0
 	001ccf1c mov ax,0x3d6f20
 	001ccf28 farcall ax
 	001ccf30 pop op
 	001ccf38 push ax
 	001ccf40 mov ax,0x16
 	001ccf4c pop bx
 	001ccf54 cmpeq bx,ax
 	001ccf60 mov ax,bx
 	001ccf6c jz 0x001cd080
		001cd080: CONDITIONAL_JUMP
		001ccf74: FALL_THROUGH

	[001ccf74]
		001ccebc: FALL_THROUGH
 	001ccf74 mov ax,0x86
 	001ccf80 farpush ax
 	001ccf88 mov ax,0x1
 	001ccf94 farpush ax
 	001ccf9c setfuncargs 0x2
 	001ccfa4 mov ax,0x756f20
 	001ccfb0 farcall ax
 	001ccfb8 farsubsp 0x2
 	001ccfc0 mov ax,0x87
 	001ccfcc push ax
 	001ccfd4 mov ax,0x0
 	001ccfe0 assertlte ax,0x28
 	001ccfec mul ax,0x8
 	001ccff8 mov cx,ax
 	001cd004 pop ax
 	001cd00c mov bx,ax
 	001cd018 mov mar,0x6fef20
 	001cd024 add mar,cx
 	001cd030 mov ax,mar
 	001cd03c push op
 	001cd044 mov op,ax
 	001cd04c farpush bx
 	001cd054 setfuncargs 0x1
 	001cd05c mov ax,0x796f20
 	001cd068 farcall ax
 	001cd070 farsubsp 0x1
 	001cd078 pop op
		001cd080: FALL_THROUGH

	[001cd080]
		001ccebc: CONDITIONAL_JUMP
		001ccf74: FALL_THROUGH
 	001cd080 sourceline 0x24d1
 	001cd088 mov mar,0x42ef20
 	001cd094 push mar
 	001cd09c pop mar
 	001cd0a4 memread.ptr ax
 	001cd0ac push ax
 	001cd0b4 pop mar
 	001cd0bc mov ax,mar
 	001cd0c8 push op
 	001cd0d0 mov op,ax
 	001cd0d8 setfuncargs 0x0
 	001cd0e0 mov ax,0x3d6f20
 	001cd0ec farcall ax
 	001cd0f4 pop op
 	001cd0fc push ax
 	001cd104 mov ax,0xa
 	001cd110 pop bx
 	001cd118 cmpeq bx,ax
 	001cd124 mov ax,bx
 	001cd130 jz 0x001cd184
		001cd184: CONDITIONAL_JUMP
		001cd138: FALL_THROUGH

	[001cd138]
		001cd080: FALL_THROUGH
 	001cd138 mov ax,0x8c
 	001cd144 farpush ax
 	001cd14c mov ax,0x4
 	001cd158 farpush ax
 	001cd160 setfuncargs 0x2
 	001cd168 mov ax,0x756f20
 	001cd174 farcall ax
 	001cd17c farsubsp 0x2
		001cd184: FALL_THROUGH

	[001cd184]
		001cd080: CONDITIONAL_JUMP
		001cd138: FALL_THROUGH
 	001cd184 sourceline 0x24d3
 	001cd18c mov mar,0x42ef20
 	001cd198 push mar
 	001cd1a0 pop mar
 	001cd1a8 memread.ptr ax
 	001cd1b0 push ax
 	001cd1b8 pop mar
 	001cd1c0 mov ax,mar
 	001cd1cc push op
 	001cd1d4 mov op,ax
 	001cd1dc setfuncargs 0x0
 	001cd1e4 mov ax,0x3d6f20
 	001cd1f0 farcall ax
 	001cd1f8 pop op
 	001cd200 push ax
 	001cd208 mov ax,0x2
 	001cd214 pop bx
 	001cd21c cmpeq bx,ax
 	001cd228 mov ax,bx
 	001cd234 jz 0x001cd290
		001cd290: CONDITIONAL_JUMP
		001cd23c: FALL_THROUGH

	[001cd23c]
		001cd184: FALL_THROUGH
 	001cd23c sourceline 0x24d5
 	001cd244 mov ax,0x84
 	001cd250 farpush ax
 	001cd258 mov ax,0x5
 	001cd264 farpush ax
 	001cd26c setfuncargs 0x2
 	001cd274 mov ax,0x756f20
 	001cd280 farcall ax
 	001cd288 farsubsp 0x2
		001cd290: FALL_THROUGH

	[001cd290]
		001cbb8c: CONDITIONAL_JUMP
		001cd184: CONDITIONAL_JUMP
		001cd23c: FALL_THROUGH
 	001cd290 sourceline 0x24d8
 	001cd298 mov ax,0x0
 	001cd2a4 stackptr 0x8
 	001cd2ac memzerond
 	001cd2b0 ret

btnGreen_OnClick$2:
	[001cd2b4]
 	001cd2b4 sourceline 0x24dc
 	001cd2bc thisaddr
 	001cd2c4 stackptr 0x8
 	001cd2cc memread4 ax
 	001cd2d4 meminit ax
 	001cd2dc sourceline 0x24dd
 	001cd2e4 stackptr 0xc
 	001cd2ec memread4 ax
 	001cd2f4 push ax
 	001cd2fc mov ax,0x1
 	001cd308 pop bx
 	001cd310 cmpeq bx,ax
 	001cd31c mov ax,bx
 	001cd328 jz 0x001dc30c
		001dc30c: CONDITIONAL_JUMP
		001cd330: FALL_THROUGH

	[001cd330]
		001cd2b4: FALL_THROUGH
 	001cd330 sourceline 0x24df
 	001cd338 push op
 	001cd340 mov ax,0x0
 	001cd34c farpush ax
 	001cd354 mov ax,0x32
 	001cd360 farpush ax
*	001cd368 mov mar,0xd06f20
 	001cd374 mov ax,mar
 	001cd380 mov op,ax
 	001cd388 setfuncargs 0x2
 	001cd390 mov ax,0x2fef20
 	001cd39c farcall ax
 	001cd3a4 farsubsp 0x2
 	001cd3ac pop op
 	001cd3b4 sourceline 0x24e0
 	001cd3bc mov mar,0x7aef20
 	001cd3c8 mov ax,mar
 	001cd3d4 push op
 	001cd3dc mov op,ax
 	001cd3e4 setfuncargs 0x0
 	001cd3ec mov ax,0x346f20
 	001cd3f8 farcall ax
 	001cd400 pop op
 	001cd408 push ax
 	001cd410 mov ax,0x8ec
 	001cd41c pop bx
 	001cd424 cmpeq bx,ax
 	001cd430 mov ax,bx
 	001cd43c jz 0x001d4718
		001d4718: CONDITIONAL_JUMP
		001cd444: FALL_THROUGH

	[001cd444]
		001cd330: FALL_THROUGH
 	001cd444 sourceline 0x24e2
 	001cd44c mov ax,0x2c5b6c
 	001cd458 farpush ax
 	001cd460 setfuncargs 0x1
 	001cd468 mov ax,0x7f6f20
 	001cd474 farcall ax
 	001cd47c farsubsp 0x1
 	001cd484 jz 0x001cdb20
		001cdb20: CONDITIONAL_JUMP
		001cd48c: FALL_THROUGH

	[001cd48c]
		001cd444: FALL_THROUGH
 	001cd48c sourceline 0x24e4
 	001cd494 mov ax,0x3
 	001cd4a0 mov bx,ax
 	001cd4ac mov mar,0x3cef20
 	001cd4b8 mov ax,mar
 	001cd4c4 push op
 	001cd4cc mov op,ax
 	001cd4d4 farpush bx
 	001cd4dc setfuncargs 0x1
 	001cd4e4 mov ax,0x69ef20
 	001cd4f0 farcall ax
 	001cd4f8 farsubsp 0x1
 	001cd500 pop op
 	001cd508 sourceline 0x24e5
 	001cd510 mov ax,0x4b
 	001cd51c mov bx,ax
 	001cd528 mov mar,0x506f20
 	001cd534 mov ax,mar
 	001cd540 push op
 	001cd548 mov op,ax
 	001cd550 farpush bx
 	001cd558 setfuncargs 0x1
 	001cd560 mov ax,0x69ef20
 	001cd56c farcall ax
 	001cd574 farsubsp 0x1
 	001cd57c pop op
 	001cd584 sourceline 0x24e6
 	001cd58c mov ax,0x0
 	001cd598 mov bx,ax
 	001cd5a4 mov mar,0x336f20
 	001cd5b0 mov ax,mar
 	001cd5bc farpush bx
 	001cd5c4 setfuncargs 0x1
 	001cd5cc mov ax,0x43ef20
 	001cd5d8 farcall ax
 	001cd5e0 farsubsp 0x1
 	001cd5e8 sourceline 0x24e7
 	001cd5f0 mov ax,0x0
 	001cd5fc mov bx,ax
 	001cd608 mov mar,0x31ef20
 	001cd614 mov ax,mar
 	001cd620 push op
 	001cd628 mov op,ax
 	001cd630 farpush bx
 	001cd638 setfuncargs 0x1
 	001cd640 mov ax,0x3a6f20
 	001cd64c farcall ax
 	001cd654 farsubsp 0x1
 	001cd65c pop op
 	001cd664 sourceline 0x24e8
 	001cd66c mov ax,0x14
 	001cd678 farpush ax
 	001cd680 setfuncargs 0x1
 	001cd688 mov ax,0x426f20
 	001cd694 farcall ax
 	001cd69c farsubsp 0x1
 	001cd6a4 sourceline 0x24e9
 	001cd6ac push op
 	001cd6b4 mov ax,0x0
 	001cd6c0 farpush ax
 	001cd6c8 mov ax,0x32
 	001cd6d4 farpush ax
 	001cd6dc mov mar,0xdcef20
 	001cd6e8 mov ax,mar
 	001cd6f4 mov op,ax
 	001cd6fc setfuncargs 0x2
 	001cd704 mov ax,0x2fef20
 	001cd710 farcall ax
 	001cd718 farsubsp 0x2
 	001cd720 pop op
 	001cd728 sourceline 0x24ea
 	001cd730 mov ax,0x46
 	001cd73c farpush ax
 	001cd744 setfuncargs 0x1
 	001cd74c mov ax,0x426f20
 	001cd758 farcall ax
 	001cd760 farsubsp 0x1
 	001cd768 sourceline 0x24eb
 	001cd770 push op
 	001cd778 mov ax,0x426
 	001cd784 farpush ax
 	001cd78c mov ax,0x397
 	001cd798 farpush ax
 	001cd7a0 mov ax,0x0
 	001cd7ac farpush ax
 	001cd7b4 mov ax,0x3
 	001cd7c0 farpush ax
 	001cd7c8 mov ax,0x1
 	001cd7d4 farpush ax
 	001cd7dc mov mar,0x3cef20
 	001cd7e8 mov ax,mar
 	001cd7f4 mov op,ax
 	001cd7fc setfuncargs 0x5
 	001cd804 mov ax,0x536f20
 	001cd810 farcall ax
 	001cd818 farsubsp 0x5
 	001cd820 pop op
 	001cd828 sourceline 0x24ec
 	001cd830 mov ax,0x19
 	001cd83c farpush ax
 	001cd844 setfuncargs 0x1
 	001cd84c mov ax,0x426f20
 	001cd858 farcall ax
 	001cd860 farsubsp 0x1
 	001cd868 sourceline 0x24ed
 	001cd870 push op
 	001cd878 mov ax,0x0
 	001cd884 farpush ax
 	001cd88c mov ax,0x32
 	001cd898 farpush ax
 	001cd8a0 mov mar,0xdd6f20
 	001cd8ac mov ax,mar
 	001cd8b8 mov op,ax
 	001cd8c0 setfuncargs 0x2
 	001cd8c8 mov ax,0x2fef20
 	001cd8d4 farcall ax
 	001cd8dc farsubsp 0x2
 	001cd8e4 pop op
 	001cd8ec sourceline 0x24ee
 	001cd8f4 mov ax,0x10e
 	001cd900 farpush ax
 	001cd908 setfuncargs 0x1
 	001cd910 mov ax,0x426f20
 	001cd91c farcall ax
 	001cd924 farsubsp 0x1
 	001cd92c sourceline 0x24ef
 	001cd934 push op
 	001cd93c mov mar,0xddef20
 	001cd948 mov ax,mar
 	001cd954 mov op,ax
 	001cd95c setfuncargs 0x0
 	001cd964 mov ax,0x71ef20
 	001cd970 farcall ax
 	001cd978 pop op
 	001cd980 sourceline 0x24f0
 	001cd988 push op
 	001cd990 mov ax,0x7cfe
 	001cd99c farpush ax
 	001cd9a4 mov ax,0x7cfe
 	001cd9b0 farpush ax
 	001cd9b8 mov ax,0x7cfe
 	001cd9c4 farpush ax
 	001cd9cc mov mar,0x42ef20
 	001cd9d8 push mar
 	001cd9e0 pop mar
 	001cd9e8 memread.ptr ax
 	001cd9f0 push ax
 	001cd9f8 pop mar
 	001cda00 mov ax,mar
 	001cda0c push op
 	001cda14 mov op,ax
 	001cda1c setfuncargs 0x0
 	001cda24 mov ax,0x3d6f20
 	001cda30 farcall ax
 	001cda38 pop op
 	001cda40 farpush ax
 	001cda48 mov mar,0x506f20
 	001cda54 mov ax,mar
 	001cda60 mov op,ax
 	001cda68 setfuncargs 0x4
 	001cda70 mov ax,0xc16f20
 	001cda7c farcall ax
 	001cda84 farsubsp 0x4
 	001cda8c pop op
 	001cda94 sourceline 0x24f1
 	001cda9c mov ax,0x64
 	001cdaa8 mov bx,ax
 	001cdab4 mov mar,0x506f20
 	001cdac0 mov ax,mar
 	001cdacc push op
 	001cdad4 mov op,ax
 	001cdadc farpush bx
 	001cdae4 setfuncargs 0x1
 	001cdaec mov ax,0xd0ef20
 	001cdaf8 farcall ax
 	001cdb00 farsubsp 0x1
 	001cdb08 pop op
 	001cdb10 sourceline 0x24f2
 	001cdb18 jmp 0x001d4708
		001d4708: UNCONDITIONAL_JUMP

	[001cdb20]
		001cd444: CONDITIONAL_JUMP
 	001cdb20 sourceline 0x24f5
 	001cdb28 mov mar,0xa56f20
 	001cdb34 memread4 ax
 	001cdb3c jz 0x001d3354
		001d3354: CONDITIONAL_JUMP
		001cdb44: FALL_THROUGH

	[001cdb44]
		001cdb20: FALL_THROUGH
 	001cdb44 sourceline 0x24f7
 	001cdb4c mov mar,0xa5ef20
 	001cdb58 memread4 ax
 	001cdb60 lnot ax
 	001cdb68 jz 0x001cee6c
		001cee6c: CONDITIONAL_JUMP
		001cdb70: FALL_THROUGH

	[001cdb70]
		001cdb44: FALL_THROUGH
 	001cdb70 sourceline 0x24f9
 	001cdb78 mov mar,0x506f20
 	001cdb84 mov ax,mar
 	001cdb90 push op
 	001cdb98 mov op,ax
 	001cdba0 setfuncargs 0x0
 	001cdba8 mov ax,0x3d6f20
 	001cdbb4 farcall ax
 	001cdbbc pop op
 	001cdbc4 push ax
 	001cdbcc mov mar,0x3cef20
 	001cdbd8 mov ax,mar
 	001cdbe4 push op
 	001cdbec mov op,ax
 	001cdbf4 setfuncargs 0x0
 	001cdbfc mov ax,0x3d6f20
 	001cdc08 farcall ax
 	001cdc10 pop op
 	001cdc18 pop bx
 	001cdc20 cmpneq bx,ax
 	001cdc2c mov ax,bx
 	001cdc38 jz 0x001cedb0
		001cedb0: CONDITIONAL_JUMP
		001cdc40: FALL_THROUGH

	[001cdc40]
		001cdb70: FALL_THROUGH
 	001cdc40 sourceline 0x24fb
 	001cdc48 mov ax,0x0
 	001cdc54 mov bx,ax
 	001cdc60 mov mar,0x336f20
 	001cdc6c mov ax,mar
 	001cdc78 farpush bx
 	001cdc80 setfuncargs 0x1
 	001cdc88 mov ax,0x43ef20
 	001cdc94 farcall ax
 	001cdc9c farsubsp 0x1
 	001cdca4 sourceline 0x24fc
 	001cdcac mov ax,0x0
 	001cdcb8 mov bx,ax
 	001cdcc4 mov mar,0x31ef20
 	001cdcd0 mov ax,mar
 	001cdcdc push op
 	001cdce4 mov op,ax
 	001cdcec farpush bx
 	001cdcf4 setfuncargs 0x1
 	001cdcfc mov ax,0x3a6f20
 	001cdd08 farcall ax
 	001cdd10 farsubsp 0x1
 	001cdd18 pop op
 	001cdd20 sourceline 0x24fd
 	001cdd28 mov ax,0x14
 	001cdd34 farpush ax
 	001cdd3c setfuncargs 0x1
 	001cdd44 mov ax,0x426f20
 	001cdd50 farcall ax
 	001cdd58 farsubsp 0x1
 	001cdd60 sourceline 0x24fe
 	001cdd68 push op
 	001cdd70 mov ax,0x0
 	001cdd7c farpush ax
 	001cdd84 mov ax,0x32
 	001cdd90 farpush ax
 	001cdd98 mov mar,0xdcef20
 	001cdda4 mov ax,mar
 	001cddb0 mov op,ax
 	001cddb8 setfuncargs 0x2
 	001cddc0 mov ax,0x2fef20
 	001cddcc farcall ax
 	001cddd4 farsubsp 0x2
 	001cdddc pop op
 	001cdde4 sourceline 0x24ff
 	001cddec mov ax,0x46
 	001cddf8 farpush ax
 	001cde00 setfuncargs 0x1
 	001cde08 mov ax,0x426f20
 	001cde14 farcall ax
 	001cde1c farsubsp 0x1
 	001cde24 sourceline 0x2500
 	001cde2c mov ax,0x3
 	001cde38 mov bx,ax
 	001cde44 mov mar,0x3cef20
 	001cde50 mov ax,mar
 	001cde5c push op
 	001cde64 mov op,ax
 	001cde6c farpush bx
 	001cde74 setfuncargs 0x1
 	001cde7c mov ax,0x69ef20
 	001cde88 farcall ax
 	001cde90 farsubsp 0x1
 	001cde98 pop op
 	001cdea0 sourceline 0x2501
 	001cdea8 mov ax,0x17
 	001cdeb4 mov bx,ax
 	001cdec0 mov mar,0x506f20
 	001cdecc mov ax,mar
 	001cded8 push op
 	001cdee0 mov op,ax
 	001cdee8 farpush bx
 	001cdef0 setfuncargs 0x1
 	001cdef8 mov ax,0x69ef20
 	001cdf04 farcall ax
 	001cdf0c farsubsp 0x1
 	001cdf14 pop op
 	001cdf1c sourceline 0x2502
 	001cdf24 push op
 	001cdf2c mov ax,0x426
 	001cdf38 farpush ax
 	001cdf40 mov ax,0x397
 	001cdf4c farpush ax
 	001cdf54 mov ax,0x0
 	001cdf60 farpush ax
 	001cdf68 mov ax,0x3
 	001cdf74 farpush ax
 	001cdf7c mov ax,0x1
 	001cdf88 farpush ax
 	001cdf90 mov mar,0x3cef20
 	001cdf9c mov ax,mar
 	001cdfa8 mov op,ax
 	001cdfb0 setfuncargs 0x5
 	001cdfb8 mov ax,0x536f20
 	001cdfc4 farcall ax
 	001cdfcc farsubsp 0x5
 	001cdfd4 pop op
 	001cdfdc sourceline 0x2503
 	001cdfe4 mov ax,0x19
 	001cdff0 farpush ax
 	001cdff8 setfuncargs 0x1
 	001ce000 mov ax,0x426f20
 	001ce00c farcall ax
 	001ce014 farsubsp 0x1
 	001ce01c sourceline 0x2504
 	001ce024 push op
 	001ce02c mov ax,0x0
 	001ce038 farpush ax
 	001ce040 mov ax,0x32
 	001ce04c farpush ax
 	001ce054 mov mar,0xdd6f20
 	001ce060 mov ax,mar
 	001ce06c mov op,ax
 	001ce074 setfuncargs 0x2
 	001ce07c mov ax,0x2fef20
 	001ce088 farcall ax
 	001ce090 farsubsp 0x2
 	001ce098 pop op
 	001ce0a0 sourceline 0x2505
 	001ce0a8 mov ax,0x10e
 	001ce0b4 farpush ax
 	001ce0bc setfuncargs 0x1
 	001ce0c4 mov ax,0x426f20
 	001ce0d0 farcall ax
 	001ce0d8 farsubsp 0x1
 	001ce0e0 sourceline 0x2506
 	001ce0e8 push op
 	001ce0f0 mov ax,0x7cfe
 	001ce0fc farpush ax
 	001ce104 mov ax,0x7cfe
 	001ce110 farpush ax
 	001ce118 mov ax,0x7cfe
 	001ce124 farpush ax
 	001ce12c mov mar,0x42ef20
 	001ce138 push mar
 	001ce140 pop mar
 	001ce148 memread.ptr ax
 	001ce150 push ax
 	001ce158 pop mar
 	001ce160 mov ax,mar
 	001ce16c push op
 	001ce174 mov op,ax
 	001ce17c setfuncargs 0x0
 	001ce184 mov ax,0x3d6f20
 	001ce190 farcall ax
 	001ce198 pop op
 	001ce1a0 farpush ax
 	001ce1a8 mov mar,0x506f20
 	001ce1b4 mov ax,mar
 	001ce1c0 mov op,ax
 	001ce1c8 setfuncargs 0x4
 	001ce1d0 mov ax,0xc16f20
 	001ce1dc farcall ax
 	001ce1e4 farsubsp 0x4
 	001ce1ec pop op
 	001ce1f4 sourceline 0x2507
 	001ce1fc mov ax,0x64
 	001ce208 mov bx,ax
 	001ce214 mov mar,0x506f20
 	001ce220 mov ax,mar
 	001ce22c push op
 	001ce234 mov op,ax
 	001ce23c farpush bx
 	001ce244 setfuncargs 0x1
 	001ce24c mov ax,0xd0ef20
 	001ce258 farcall ax
 	001ce260 farsubsp 0x1
 	001ce268 pop op
 	001ce270 sourceline 0x2508
 	001ce278 push op
 	001ce280 mov ax,0x2c5b78
 	001ce28c farpush ax
 	001ce294 mov mar,0x3cef20
 	001ce2a0 mov ax,mar
 	001ce2ac mov op,ax
 	001ce2b4 setfuncargs 0x1
 	001ce2bc mov ax,0x6f6f20
 	001ce2c8 farcall ax
 	001ce2d0 farsubsp 0x1
 	001ce2d8 pop op
 	001ce2e0 sourceline 0x2509
 	001ce2e8 push op
 	001ce2f0 mov ax,0x2c5ba3
 	001ce2fc farpush ax
 	001ce304 mov mar,0x506f20
 	001ce310 mov ax,mar
 	001ce31c mov op,ax
 	001ce324 setfuncargs 0x1
 	001ce32c mov ax,0x6f6f20
 	001ce338 farcall ax
 	001ce340 farsubsp 0x1
 	001ce348 pop op
 	001ce350 sourceline 0x250a
 	001ce358 push op
 	001ce360 mov ax,0x2c5bb3
 	001ce36c farpush ax
 	001ce374 mov mar,0x3cef20
 	001ce380 mov ax,mar
 	001ce38c mov op,ax
 	001ce394 setfuncargs 0x1
 	001ce39c mov ax,0x6f6f20
 	001ce3a8 farcall ax
 	001ce3b0 farsubsp 0x1
 	001ce3b8 pop op
 	001ce3c0 sourceline 0x250b
 	001ce3c8 push op
 	001ce3d0 mov ax,0x2c5c19
 	001ce3dc farpush ax
 	001ce3e4 mov mar,0x506f20
 	001ce3f0 mov ax,mar
 	001ce3fc mov op,ax
 	001ce404 setfuncargs 0x1
 	001ce40c mov ax,0x6f6f20
 	001ce418 farcall ax
 	001ce420 farsubsp 0x1
 	001ce428 pop op
 	001ce430 sourceline 0x250c
 	001ce438 push op
 	001ce440 mov ax,0x2c5c45
 	001ce44c farpush ax
 	001ce454 mov mar,0x3cef20
 	001ce460 mov ax,mar
 	001ce46c mov op,ax
 	001ce474 setfuncargs 0x1
 	001ce47c mov ax,0x6f6f20
 	001ce488 farcall ax
 	001ce490 farsubsp 0x1
 	001ce498 pop op
 	001ce4a0 sourceline 0x250d
 	001ce4a8 push op
 	001ce4b0 mov ax,0x2c5c98
 	001ce4bc farpush ax
 	001ce4c4 mov mar,0x506f20
 	001ce4d0 mov ax,mar
 	001ce4dc mov op,ax
 	001ce4e4 setfuncargs 0x1
 	001ce4ec mov ax,0x6f6f20
 	001ce4f8 farcall ax
 	001ce500 farsubsp 0x1
 	001ce508 pop op
 	001ce510 sourceline 0x250e
 	001ce518 mov ax,0x1e
 	001ce524 farpush ax
 	001ce52c setfuncargs 0x1
 	001ce534 mov ax,0x426f20
 	001ce540 farcall ax
 	001ce548 farsubsp 0x1
 	001ce550 sourceline 0x250f
 	001ce558 push op
 	001ce560 mov ax,0x2c5cac
 	001ce56c farpush ax
 	001ce574 mov mar,0x506f20
 	001ce580 mov ax,mar
 	001ce58c mov op,ax
 	001ce594 setfuncargs 0x1
 	001ce59c mov ax,0x6f6f20
 	001ce5a8 farcall ax
 	001ce5b0 farsubsp 0x1
 	001ce5b8 pop op
 	001ce5c0 sourceline 0x2510
 	001ce5c8 mov ax,0x1e
 	001ce5d4 farpush ax
 	001ce5dc setfuncargs 0x1
 	001ce5e4 mov ax,0x426f20
 	001ce5f0 farcall ax
 	001ce5f8 farsubsp 0x1
 	001ce600 sourceline 0x2511
 	001ce608 push op
 	001ce610 mov ax,0x2c5d35
 	001ce61c farpush ax
 	001ce624 mov mar,0x506f20
 	001ce630 mov ax,mar
 	001ce63c mov op,ax
 	001ce644 setfuncargs 0x1
 	001ce64c mov ax,0x6f6f20
 	001ce658 farcall ax
 	001ce660 farsubsp 0x1
 	001ce668 pop op
 	001ce670 sourceline 0x2512
 	001ce678 push op
 	001ce680 mov ax,0x2c5d5c
 	001ce68c farpush ax
 	001ce694 mov mar,0x506f20
 	001ce6a0 mov ax,mar
 	001ce6ac mov op,ax
 	001ce6b4 setfuncargs 0x1
 	001ce6bc mov ax,0x6f6f20
 	001ce6c8 farcall ax
 	001ce6d0 farsubsp 0x1
 	001ce6d8 pop op
 	001ce6e0 sourceline 0x2513
 	001ce6e8 push op
 	001ce6f0 mov ax,0x2c5d84
 	001ce6fc farpush ax
 	001ce704 mov mar,0x3cef20
 	001ce710 mov ax,mar
 	001ce71c mov op,ax
 	001ce724 setfuncargs 0x1
 	001ce72c mov ax,0x6f6f20
 	001ce738 farcall ax
 	001ce740 farsubsp 0x1
 	001ce748 pop op
 	001ce750 sourceline 0x2514
 	001ce758 push op
 	001ce760 mov ax,0x2c5dbf
 	001ce76c farpush ax
 	001ce774 mov mar,0x506f20
 	001ce780 mov ax,mar
 	001ce78c mov op,ax
 	001ce794 setfuncargs 0x1
 	001ce79c mov ax,0x6f6f20
 	001ce7a8 farcall ax
 	001ce7b0 farsubsp 0x1
 	001ce7b8 pop op
 	001ce7c0 sourceline 0x2515
 	001ce7c8 push op
 	001ce7d0 mov ax,0x0
 	001ce7dc farpush ax
 	001ce7e4 mov ax,0x32
 	001ce7f0 farpush ax
 	001ce7f8 mov mar,0xd16f20
 	001ce804 mov ax,mar
 	001ce810 mov op,ax
 	001ce818 setfuncargs 0x2
 	001ce820 mov ax,0x2fef20
 	001ce82c farcall ax
 	001ce834 farsubsp 0x2
 	001ce83c pop op
 	001ce844 sourceline 0x2516
 	001ce84c push op
 	001ce854 mov ax,0x426
 	001ce860 farpush ax
 	001ce868 mov ax,0x397
 	001ce874 farpush ax
 	001ce87c mov ax,0x0
 	001ce888 farpush ax
 	001ce890 mov ax,0x3
 	001ce89c farpush ax
 	001ce8a4 mov ax,0x2
 	001ce8b0 farpush ax
 	001ce8b8 mov mar,0x3cef20
 	001ce8c4 mov ax,mar
 	001ce8d0 mov op,ax
 	001ce8d8 setfuncargs 0x5
 	001ce8e0 mov ax,0x536f20
 	001ce8ec farcall ax
 	001ce8f4 farsubsp 0x5
 	001ce8fc pop op
 	001ce904 sourceline 0x2517
 	001ce90c push op
 	001ce914 mov ax,0x2
 	001ce920 farpush ax
 	001ce928 mov mar,0x3cef20
 	001ce934 mov ax,mar
 	001ce940 mov op,ax
 	001ce948 setfuncargs 0x1
 	001ce950 mov ax,0x51ef20
 	001ce95c farcall ax
 	001ce964 farsubsp 0x1
 	001ce96c pop op
 	001ce974 sourceline 0x2518
 	001ce97c mov ax,0x0
 	001ce988 mov bx,ax
 	001ce994 mov mar,0x3cef20
 	001ce9a0 mov ax,mar
 	001ce9ac push op
 	001ce9b4 mov op,ax
 	001ce9bc farpush bx
 	001ce9c4 setfuncargs 0x1
 	001ce9cc mov ax,0x766f20
 	001ce9d8 farcall ax
 	001ce9e0 farsubsp 0x1
 	001ce9e8 pop op
 	001ce9f0 sourceline 0x2519
 	001ce9f8 mov mar,0x3cef20
 	001cea04 mov ax,mar
 	001cea10 push op
 	001cea18 mov op,ax
 	001cea20 setfuncargs 0x0
 	001cea28 mov ax,0x78ef20
 	001cea34 farcall ax
 	001cea3c pop op
 	001cea44 push ax
 	001cea4c mov ax,0x7
 	001cea58 pop bx
 	001cea60 add bx,ax
 	001cea6c mov ax,bx
 	001cea78 mov bx,ax
 	001cea84 mov mar,0x3cef20
 	001cea90 mov ax,mar
 	001cea9c push op
 	001ceaa4 mov op,ax
 	001ceaac farpush bx
 	001ceab4 setfuncargs 0x1
 	001ceabc mov ax,0x526f20
 	001ceac8 farcall ax
 	001cead0 farsubsp 0x1
 	001cead8 pop op
 	001ceae0 sourceline 0x251a
 	001ceae8 push op
 	001ceaf0 mov ax,0x7cfe
 	001ceafc farpush ax
 	001ceb04 mov mar,0xa7ef20
 	001ceb10 mov ax,mar
 	001ceb1c farpush ax
 	001ceb24 mov mar,0x81ef20
 	001ceb30 mov ax,mar
 	001ceb3c mov op,ax
 	001ceb44 setfuncargs 0x2
 	001ceb4c mov ax,0x7e6f20
 	001ceb58 farcall ax
 	001ceb60 farsubsp 0x2
 	001ceb68 pop op
 	001ceb70 sourceline 0x251b
 	001ceb78 push op
 	001ceb80 mov ax,0x7cfe
 	001ceb8c farpush ax
 	001ceb94 mov ax,0x7e
 	001ceba0 farpush ax
 	001ceba8 mov ax,0x5b
 	001cebb4 farpush ax
 	001cebbc mov ax,0x5
 	001cebc8 farpush ax
 	001cebd0 mov mar,0x506f20
 	001cebdc mov ax,mar
 	001cebe8 mov op,ax
 	001cebf0 setfuncargs 0x4
 	001cebf8 mov ax,0xc16f20
 	001cec04 farcall ax
 	001cec0c farsubsp 0x4
 	001cec14 pop op
 	001cec1c sourceline 0x251c
 	001cec24 mov ax,0x0
 	001cec30 mov bx,ax
 	001cec3c mov mar,0x506f20
 	001cec48 mov ax,mar
 	001cec54 push op
 	001cec5c mov op,ax
 	001cec64 farpush bx
 	001cec6c setfuncargs 0x1
 	001cec74 mov ax,0xd0ef20
 	001cec80 farcall ax
 	001cec88 farsubsp 0x1
 	001cec90 pop op
 	001cec98 sourceline 0x251d
 	001ceca0 mov ax,0x1
 	001cecac mov bx,ax
 	001cecb8 mov mar,0x336f20
 	001cecc4 mov ax,mar
 	001cecd0 farpush bx
 	001cecd8 setfuncargs 0x1
 	001cece0 mov ax,0x43ef20
 	001cecec farcall ax
 	001cecf4 farsubsp 0x1
 	001cecfc sourceline 0x251e
 	001ced04 mov ax,0x1
 	001ced10 mov mar,0xa5ef20
 	001ced1c memwrite4 ax
 	001ced24 sourceline 0x251f
 	001ced2c mov ax,0x1
 	001ced38 mov bx,ax
 	001ced44 mov mar,0x3cef20
 	001ced50 mov ax,mar
 	001ced5c push op
 	001ced64 mov op,ax
 	001ced6c farpush bx
 	001ced74 setfuncargs 0x1
 	001ced7c mov ax,0x69ef20
 	001ced88 farcall ax
 	001ced90 farsubsp 0x1
 	001ced98 pop op
 	001ceda0 sourceline 0x2520
 	001ceda8 jmp 0x001cee5c
		001cee5c: UNCONDITIONAL_JUMP

	[001cedb0]
		001cdb70: CONDITIONAL_JUMP
 	001cedb0 sourceline 0x2523
 	001cedb8 push op
 	001cedc0 mov ax,0x2c6b54
 	001cedcc farpush ax
 	001cedd4 mov ax,0x138
 	001cede0 farpush ax
 	001cede8 mov ax,0x92
 	001cedf4 farpush ax
 	001cedfc mov ax,0x0
 	001cee08 farpush ax
 	001cee10 mov mar,0x3cef20
 	001cee1c mov ax,mar
 	001cee28 mov op,ax
 	001cee30 setfuncargs 0x4
 	001cee38 mov ax,0x6aef20
 	001cee44 farcall ax
 	001cee4c farsubsp 0x4
 	001cee54 pop op
		001cee5c: FALL_THROUGH

	[001cee5c]
		001cdc40: UNCONDITIONAL_JUMP
		001cedb0: FALL_THROUGH
 	001cee5c sourceline 0x2525
 	001cee64 jmp 0x001d3344
		001d3344: UNCONDITIONAL_JUMP

	[001cee6c]
		001cdb44: CONDITIONAL_JUMP
 	001cee6c sourceline 0x2528
 	001cee74 mov mar,0xa9ef20
 	001cee80 memread4 ax
 	001cee88 jz 0x001d1f90
		001d1f90: CONDITIONAL_JUMP
		001cee90: FALL_THROUGH

	[001cee90]
		001cee6c: FALL_THROUGH
 	001cee90 sourceline 0x252a
 	001cee98 mov mar,0xaa6f20
 	001ceea4 memread4 ax
 	001ceeac lnot ax
 	001ceeb4 jz 0x001d0688
		001d0688: CONDITIONAL_JUMP
		001ceebc: FALL_THROUGH

	[001ceebc]
		001cee90: FALL_THROUGH
 	001ceebc sourceline 0x252c
 	001ceec4 mov mar,0x506f20
 	001ceed0 mov ax,mar
 	001ceedc push op
 	001ceee4 mov op,ax
 	001ceeec setfuncargs 0x0
 	001ceef4 mov ax,0x3d6f20
 	001cef00 farcall ax
 	001cef08 pop op
 	001cef10 push ax
 	001cef18 mov mar,0x3cef20
 	001cef24 mov ax,mar
 	001cef30 push op
 	001cef38 mov op,ax
 	001cef40 setfuncargs 0x0
 	001cef48 mov ax,0x3d6f20
 	001cef54 farcall ax
 	001cef5c pop op
 	001cef64 pop bx
 	001cef6c cmpneq bx,ax
 	001cef78 mov ax,bx
 	001cef84 jz 0x001d05cc
		001d05cc: CONDITIONAL_JUMP
		001cef8c: FALL_THROUGH

	[001cef8c]
		001ceebc: FALL_THROUGH
 	001cef8c sourceline 0x252e
 	001cef94 mov ax,0x0
 	001cefa0 mov bx,ax
 	001cefac mov mar,0x336f20
 	001cefb8 mov ax,mar
 	001cefc4 farpush bx
 	001cefcc setfuncargs 0x1
 	001cefd4 mov ax,0x43ef20
 	001cefe0 farcall ax
 	001cefe8 farsubsp 0x1
 	001ceff0 sourceline 0x252f
 	001ceff8 mov ax,0x0
 	001cf004 mov bx,ax
 	001cf010 mov mar,0x31ef20
 	001cf01c mov ax,mar
 	001cf028 push op
 	001cf030 mov op,ax
 	001cf038 farpush bx
 	001cf040 setfuncargs 0x1
 	001cf048 mov ax,0x3a6f20
 	001cf054 farcall ax
 	001cf05c farsubsp 0x1
 	001cf064 pop op
 	001cf06c sourceline 0x2530
 	001cf074 mov ax,0x14
 	001cf080 farpush ax
 	001cf088 setfuncargs 0x1
 	001cf090 mov ax,0x426f20
 	001cf09c farcall ax
 	001cf0a4 farsubsp 0x1
 	001cf0ac sourceline 0x2531
 	001cf0b4 push op
 	001cf0bc mov ax,0x0
 	001cf0c8 farpush ax
 	001cf0d0 mov ax,0x32
 	001cf0dc farpush ax
 	001cf0e4 mov mar,0xdcef20
 	001cf0f0 mov ax,mar
 	001cf0fc mov op,ax
 	001cf104 setfuncargs 0x2
 	001cf10c mov ax,0x2fef20
 	001cf118 farcall ax
 	001cf120 farsubsp 0x2
 	001cf128 pop op
 	001cf130 sourceline 0x2532
 	001cf138 mov ax,0x46
 	001cf144 farpush ax
 	001cf14c setfuncargs 0x1
 	001cf154 mov ax,0x426f20
 	001cf160 farcall ax
 	001cf168 farsubsp 0x1
 	001cf170 sourceline 0x2533
 	001cf178 mov ax,0x3
 	001cf184 mov bx,ax
 	001cf190 mov mar,0x3cef20
 	001cf19c mov ax,mar
 	001cf1a8 push op
 	001cf1b0 mov op,ax
 	001cf1b8 farpush bx
 	001cf1c0 setfuncargs 0x1
 	001cf1c8 mov ax,0x69ef20
 	001cf1d4 farcall ax
 	001cf1dc farsubsp 0x1
 	001cf1e4 pop op
 	001cf1ec sourceline 0x2534
 	001cf1f4 mov ax,0x17
 	001cf200 mov bx,ax
 	001cf20c mov mar,0x506f20
 	001cf218 mov ax,mar
 	001cf224 push op
 	001cf22c mov op,ax
 	001cf234 farpush bx
 	001cf23c setfuncargs 0x1
 	001cf244 mov ax,0x69ef20
 	001cf250 farcall ax
 	001cf258 farsubsp 0x1
 	001cf260 pop op
 	001cf268 sourceline 0x2535
 	001cf270 push op
 	001cf278 mov ax,0x426
 	001cf284 farpush ax
 	001cf28c mov ax,0x397
 	001cf298 farpush ax
 	001cf2a0 mov ax,0x0
 	001cf2ac farpush ax
 	001cf2b4 mov ax,0x3
 	001cf2c0 farpush ax
 	001cf2c8 mov ax,0x1
 	001cf2d4 farpush ax
 	001cf2dc mov mar,0x3cef20
 	001cf2e8 mov ax,mar
 	001cf2f4 mov op,ax
 	001cf2fc setfuncargs 0x5
 	001cf304 mov ax,0x536f20
 	001cf310 farcall ax
 	001cf318 farsubsp 0x5
 	001cf320 pop op
 	001cf328 sourceline 0x2536
 	001cf330 mov ax,0x19
 	001cf33c farpush ax
 	001cf344 setfuncargs 0x1
 	001cf34c mov ax,0x426f20
 	001cf358 farcall ax
 	001cf360 farsubsp 0x1
 	001cf368 sourceline 0x2537
 	001cf370 push op
 	001cf378 mov ax,0x0
 	001cf384 farpush ax
 	001cf38c mov ax,0x32
 	001cf398 farpush ax
 	001cf3a0 mov mar,0xdd6f20
 	001cf3ac mov ax,mar
 	001cf3b8 mov op,ax
 	001cf3c0 setfuncargs 0x2
 	001cf3c8 mov ax,0x2fef20
 	001cf3d4 farcall ax
 	001cf3dc farsubsp 0x2
 	001cf3e4 pop op
 	001cf3ec sourceline 0x2538
 	001cf3f4 mov ax,0x10e
 	001cf400 farpush ax
 	001cf408 setfuncargs 0x1
 	001cf410 mov ax,0x426f20
 	001cf41c farcall ax
 	001cf424 farsubsp 0x1
 	001cf42c sourceline 0x2539
 	001cf434 push op
 	001cf43c mov ax,0x7cfe
 	001cf448 farpush ax
 	001cf450 mov ax,0x7cfe
 	001cf45c farpush ax
 	001cf464 mov ax,0x7cfe
 	001cf470 farpush ax
 	001cf478 mov mar,0x42ef20
 	001cf484 push mar
 	001cf48c pop mar
 	001cf494 memread.ptr ax
 	001cf49c push ax
 	001cf4a4 pop mar
 	001cf4ac mov ax,mar
 	001cf4b8 push op
 	001cf4c0 mov op,ax
 	001cf4c8 setfuncargs 0x0
 	001cf4d0 mov ax,0x3d6f20
 	001cf4dc farcall ax
 	001cf4e4 pop op
 	001cf4ec farpush ax
 	001cf4f4 mov mar,0x506f20
 	001cf500 mov ax,mar
 	001cf50c mov op,ax
 	001cf514 setfuncargs 0x4
 	001cf51c mov ax,0xc16f20
 	001cf528 farcall ax
 	001cf530 farsubsp 0x4
 	001cf538 pop op
 	001cf540 sourceline 0x253a
 	001cf548 mov ax,0x64
 	001cf554 mov bx,ax
 	001cf560 mov mar,0x506f20
 	001cf56c mov ax,mar
 	001cf578 push op
 	001cf580 mov op,ax
 	001cf588 farpush bx
 	001cf590 setfuncargs 0x1
 	001cf598 mov ax,0xd0ef20
 	001cf5a4 farcall ax
 	001cf5ac farsubsp 0x1
 	001cf5b4 pop op
 	001cf5bc sourceline 0x253b
 	001cf5c4 push op
 	001cf5cc mov ax,0x2c5e12
 	001cf5d8 farpush ax
 	001cf5e0 mov mar,0x3cef20
 	001cf5ec mov ax,mar
 	001cf5f8 mov op,ax
 	001cf600 setfuncargs 0x1
 	001cf608 mov ax,0x6f6f20
 	001cf614 farcall ax
 	001cf61c farsubsp 0x1
 	001cf624 pop op
 	001cf62c sourceline 0x253c
 	001cf634 push op
 	001cf63c mov ax,0x2c5e25
 	001cf648 farpush ax
 	001cf650 mov mar,0x506f20
 	001cf65c mov ax,mar
 	001cf668 mov op,ax
 	001cf670 setfuncargs 0x1
 	001cf678 mov ax,0x6f6f20
 	001cf684 farcall ax
 	001cf68c farsubsp 0x1
 	001cf694 pop op
 	001cf69c sourceline 0x253d
 	001cf6a4 push op
 	001cf6ac mov ax,0x2c5e8f
 	001cf6b8 farpush ax
 	001cf6c0 mov mar,0x3cef20
 	001cf6cc mov ax,mar
 	001cf6d8 mov op,ax
 	001cf6e0 setfuncargs 0x1
 	001cf6e8 mov ax,0x6f6f20
 	001cf6f4 farcall ax
 	001cf6fc farsubsp 0x1
 	001cf704 pop op
 	001cf70c sourceline 0x253e
 	001cf714 push op
 	001cf71c mov ax,0x2c5e9e
 	001cf728 farpush ax
 	001cf730 mov mar,0x506f20
 	001cf73c mov ax,mar
 	001cf748 mov op,ax
 	001cf750 setfuncargs 0x1
 	001cf758 mov ax,0x6f6f20
 	001cf764 farcall ax
 	001cf76c farsubsp 0x1
 	001cf774 pop op
 	001cf77c sourceline 0x253f
 	001cf784 push op
 	001cf78c mov ax,0x2c5ec3
 	001cf798 farpush ax
 	001cf7a0 mov mar,0x3cef20
 	001cf7ac mov ax,mar
 	001cf7b8 mov op,ax
 	001cf7c0 setfuncargs 0x1
 	001cf7c8 mov ax,0x6f6f20
 	001cf7d4 farcall ax
 	001cf7dc farsubsp 0x1
 	001cf7e4 pop op
 	001cf7ec sourceline 0x2540
 	001cf7f4 push op
 	001cf7fc mov ax,0x2c5f85
 	001cf808 farpush ax
 	001cf810 mov mar,0x3cef20
 	001cf81c mov ax,mar
 	001cf828 mov op,ax
 	001cf830 setfuncargs 0x1
 	001cf838 mov ax,0x6f6f20
 	001cf844 farcall ax
 	001cf84c farsubsp 0x1
 	001cf854 pop op
 	001cf85c sourceline 0x2541
 	001cf864 push op
 	001cf86c mov ax,0x2c5fb1
 	001cf878 farpush ax
 	001cf880 mov mar,0x506f20
 	001cf88c mov ax,mar
 	001cf898 mov op,ax
 	001cf8a0 setfuncargs 0x1
 	001cf8a8 mov ax,0x6f6f20
 	001cf8b4 farcall ax
 	001cf8bc farsubsp 0x1
 	001cf8c4 pop op
 	001cf8cc sourceline 0x2542
 	001cf8d4 push op
 	001cf8dc mov ax,0x2c6007
 	001cf8e8 farpush ax
 	001cf8f0 mov mar,0x3cef20
 	001cf8fc mov ax,mar
 	001cf908 mov op,ax
 	001cf910 setfuncargs 0x1
 	001cf918 mov ax,0x6f6f20
 	001cf924 farcall ax
 	001cf92c farsubsp 0x1
 	001cf934 pop op
 	001cf93c sourceline 0x2543
 	001cf944 push op
 	001cf94c mov ax,0x2c6044
 	001cf958 farpush ax
 	001cf960 mov mar,0x506f20
 	001cf96c mov ax,mar
 	001cf978 mov op,ax
 	001cf980 setfuncargs 0x1
 	001cf988 mov ax,0x6f6f20
 	001cf994 farcall ax
 	001cf99c farsubsp 0x1
 	001cf9a4 pop op
 	001cf9ac sourceline 0x2544
 	001cf9b4 mov ax,0x14
 	001cf9c0 farpush ax
 	001cf9c8 setfuncargs 0x1
 	001cf9d0 mov ax,0x426f20
 	001cf9dc farcall ax
 	001cf9e4 farsubsp 0x1
 	001cf9ec sourceline 0x2545
 	001cf9f4 push op
 	001cf9fc mov ax,0x2c6091
 	001cfa08 farpush ax
 	001cfa10 mov mar,0x506f20
 	001cfa1c mov ax,mar
 	001cfa28 mov op,ax
 	001cfa30 setfuncargs 0x1
 	001cfa38 mov ax,0x6f6f20
 	001cfa44 farcall ax
 	001cfa4c farsubsp 0x1
 	001cfa54 pop op
 	001cfa5c sourceline 0x2546
 	001cfa64 push op
 	001cfa6c mov ax,0x2c615c
 	001cfa78 farpush ax
 	001cfa80 mov mar,0x506f20
 	001cfa8c mov ax,mar
 	001cfa98 mov op,ax
 	001cfaa0 setfuncargs 0x1
 	001cfaa8 mov ax,0x6f6f20
 	001cfab4 farcall ax
 	001cfabc farsubsp 0x1
 	001cfac4 pop op
 	001cfacc sourceline 0x2547
 	001cfad4 mov ax,0xa
 	001cfae0 farpush ax
 	001cfae8 setfuncargs 0x1
 	001cfaf0 mov ax,0x426f20
 	001cfafc farcall ax
 	001cfb04 farsubsp 0x1
 	001cfb0c sourceline 0x2548
 	001cfb14 push op
 	001cfb1c mov ax,0x2c61a1
 	001cfb28 farpush ax
 	001cfb30 mov mar,0x506f20
 	001cfb3c mov ax,mar
 	001cfb48 mov op,ax
 	001cfb50 setfuncargs 0x1
 	001cfb58 mov ax,0x6f6f20
 	001cfb64 farcall ax
 	001cfb6c farsubsp 0x1
 	001cfb74 pop op
 	001cfb7c sourceline 0x2549
 	001cfb84 push op
 	001cfb8c mov ax,0x2c620a
 	001cfb98 farpush ax
 	001cfba0 mov mar,0x3cef20
 	001cfbac mov ax,mar
 	001cfbb8 mov op,ax
 	001cfbc0 setfuncargs 0x1
 	001cfbc8 mov ax,0x6f6f20
 	001cfbd4 farcall ax
 	001cfbdc farsubsp 0x1
 	001cfbe4 pop op
 	001cfbec sourceline 0x254a
 	001cfbf4 push op
 	001cfbfc mov ax,0x2c621f
 	001cfc08 farpush ax
 	001cfc10 mov mar,0x506f20
 	001cfc1c mov ax,mar
 	001cfc28 mov op,ax
 	001cfc30 setfuncargs 0x1
 	001cfc38 mov ax,0x6f6f20
 	001cfc44 farcall ax
 	001cfc4c farsubsp 0x1
 	001cfc54 pop op
 	001cfc5c sourceline 0x254b
 	001cfc64 push op
 	001cfc6c mov ax,0x2c6230
 	001cfc78 farpush ax
 	001cfc80 mov mar,0x3cef20
 	001cfc8c mov ax,mar
 	001cfc98 mov op,ax
 	001cfca0 setfuncargs 0x1
 	001cfca8 mov ax,0x6f6f20
 	001cfcb4 farcall ax
 	001cfcbc farsubsp 0x1
 	001cfcc4 pop op
 	001cfccc sourceline 0x254c
 	001cfcd4 push op
 	001cfcdc mov ax,0x2c623b
 	001cfce8 farpush ax
 	001cfcf0 mov mar,0x506f20
 	001cfcfc mov ax,mar
 	001cfd08 mov op,ax
 	001cfd10 setfuncargs 0x1
 	001cfd18 mov ax,0x6f6f20
 	001cfd24 farcall ax
 	001cfd2c farsubsp 0x1
 	001cfd34 pop op
 	001cfd3c sourceline 0x254d
 	001cfd44 push op
 	001cfd4c mov ax,0x2c62f9
 	001cfd58 farpush ax
 	001cfd60 mov mar,0x3cef20
 	001cfd6c mov ax,mar
 	001cfd78 mov op,ax
 	001cfd80 setfuncargs 0x1
 	001cfd88 mov ax,0x6f6f20
 	001cfd94 farcall ax
 	001cfd9c farsubsp 0x1
 	001cfda4 pop op
 	001cfdac sourceline 0x254e
 	001cfdb4 push op
 	001cfdbc mov ax,0x2c631e
 	001cfdc8 farpush ax
 	001cfdd0 mov mar,0x506f20
 	001cfddc mov ax,mar
 	001cfde8 mov op,ax
 	001cfdf0 setfuncargs 0x1
 	001cfdf8 mov ax,0x6f6f20
 	001cfe04 farcall ax
 	001cfe0c farsubsp 0x1
 	001cfe14 pop op
 	001cfe1c sourceline 0x254f
 	001cfe24 push op
 	001cfe2c mov ax,0x2c639f
 	001cfe38 farpush ax
 	001cfe40 mov mar,0x3cef20
 	001cfe4c mov ax,mar
 	001cfe58 mov op,ax
 	001cfe60 setfuncargs 0x1
 	001cfe68 mov ax,0x6f6f20
 	001cfe74 farcall ax
 	001cfe7c farsubsp 0x1
 	001cfe84 pop op
 	001cfe8c sourceline 0x2550
 	001cfe94 push op
 	001cfe9c mov ax,0x2c63b3
 	001cfea8 farpush ax
 	001cfeb0 mov mar,0x506f20
 	001cfebc mov ax,mar
 	001cfec8 mov op,ax
 	001cfed0 setfuncargs 0x1
 	001cfed8 mov ax,0x6f6f20
 	001cfee4 farcall ax
 	001cfeec farsubsp 0x1
 	001cfef4 pop op
 	001cfefc sourceline 0x2551
 	001cff04 push op
 	001cff0c mov ax,0x2c641b
 	001cff18 farpush ax
 	001cff20 mov mar,0x3cef20
 	001cff2c mov ax,mar
 	001cff38 mov op,ax
 	001cff40 setfuncargs 0x1
 	001cff48 mov ax,0x6f6f20
 	001cff54 farcall ax
 	001cff5c farsubsp 0x1
 	001cff64 pop op
 	001cff6c sourceline 0x2552
 	001cff74 push op
 	001cff7c mov ax,0x2c6442
 	001cff88 farpush ax
 	001cff90 mov mar,0x506f20
 	001cff9c mov ax,mar
 	001cffa8 mov op,ax
 	001cffb0 setfuncargs 0x1
 	001cffb8 mov ax,0x6f6f20
 	001cffc4 farcall ax
 	001cffcc farsubsp 0x1
 	001cffd4 pop op
 	001cffdc sourceline 0x2553
 	001cffe4 push op
 	001cffec mov ax,0x0
 	001cfff8 farpush ax
 	001d0000 mov ax,0x32
 	001d000c farpush ax
 	001d0014 mov mar,0xd16f20
 	001d0020 mov ax,mar
 	001d002c mov op,ax
 	001d0034 setfuncargs 0x2
 	001d003c mov ax,0x2fef20
 	001d0048 farcall ax
 	001d0050 farsubsp 0x2
 	001d0058 pop op
 	001d0060 sourceline 0x2554
 	001d0068 push op
 	001d0070 mov ax,0x426
 	001d007c farpush ax
 	001d0084 mov ax,0x397
 	001d0090 farpush ax
 	001d0098 mov ax,0x0
 	001d00a4 farpush ax
 	001d00ac mov ax,0x3
 	001d00b8 farpush ax
 	001d00c0 mov ax,0x2
 	001d00cc farpush ax
 	001d00d4 mov mar,0x3cef20
 	001d00e0 mov ax,mar
 	001d00ec mov op,ax
 	001d00f4 setfuncargs 0x5
 	001d00fc mov ax,0x536f20
 	001d0108 farcall ax
 	001d0110 farsubsp 0x5
 	001d0118 pop op
 	001d0120 sourceline 0x2555
 	001d0128 push op
 	001d0130 mov ax,0x2
 	001d013c farpush ax
 	001d0144 mov mar,0x3cef20
 	001d0150 mov ax,mar
 	001d015c mov op,ax
 	001d0164 setfuncargs 0x1
 	001d016c mov ax,0x51ef20
 	001d0178 farcall ax
 	001d0180 farsubsp 0x1
 	001d0188 pop op
 	001d0190 sourceline 0x2556
 	001d0198 mov ax,0x0
 	001d01a4 mov bx,ax
 	001d01b0 mov mar,0x3cef20
 	001d01bc mov ax,mar
 	001d01c8 push op
 	001d01d0 mov op,ax
 	001d01d8 farpush bx
 	001d01e0 setfuncargs 0x1
 	001d01e8 mov ax,0x766f20
 	001d01f4 farcall ax
 	001d01fc farsubsp 0x1
 	001d0204 pop op
 	001d020c sourceline 0x2557
 	001d0214 mov mar,0x3cef20
 	001d0220 mov ax,mar
 	001d022c push op
 	001d0234 mov op,ax
 	001d023c setfuncargs 0x0
 	001d0244 mov ax,0x78ef20
 	001d0250 farcall ax
 	001d0258 pop op
 	001d0260 push ax
 	001d0268 mov ax,0x7
 	001d0274 pop bx
 	001d027c add bx,ax
 	001d0288 mov ax,bx
 	001d0294 mov bx,ax
 	001d02a0 mov mar,0x3cef20
 	001d02ac mov ax,mar
 	001d02b8 push op
 	001d02c0 mov op,ax
 	001d02c8 farpush bx
 	001d02d0 setfuncargs 0x1
 	001d02d8 mov ax,0x526f20
 	001d02e4 farcall ax
 	001d02ec farsubsp 0x1
 	001d02f4 pop op
 	001d02fc sourceline 0x2558
 	001d0304 push op
 	001d030c mov ax,0x7cfe
 	001d0318 farpush ax
 	001d0320 mov mar,0xab6f20
 	001d032c mov ax,mar
 	001d0338 farpush ax
 	001d0340 mov mar,0x81ef20
 	001d034c mov ax,mar
 	001d0358 mov op,ax
 	001d0360 setfuncargs 0x2
 	001d0368 mov ax,0x7e6f20
 	001d0374 farcall ax
 	001d037c farsubsp 0x2
 	001d0384 pop op
 	001d038c sourceline 0x2559
 	001d0394 push op
 	001d039c mov ax,0x7cfe
 	001d03a8 farpush ax
 	001d03b0 mov ax,0x7e
 	001d03bc farpush ax
 	001d03c4 mov ax,0x5b
 	001d03d0 farpush ax
 	001d03d8 mov ax,0x5
 	001d03e4 farpush ax
 	001d03ec mov mar,0x506f20
 	001d03f8 mov ax,mar
 	001d0404 mov op,ax
 	001d040c setfuncargs 0x4
 	001d0414 mov ax,0xc16f20
 	001d0420 farcall ax
 	001d0428 farsubsp 0x4
 	001d0430 pop op
 	001d0438 sourceline 0x255a
 	001d0440 mov ax,0x0
 	001d044c mov bx,ax
 	001d0458 mov mar,0x506f20
 	001d0464 mov ax,mar
 	001d0470 push op
 	001d0478 mov op,ax
 	001d0480 farpush bx
 	001d0488 setfuncargs 0x1
 	001d0490 mov ax,0xd0ef20
 	001d049c farcall ax
 	001d04a4 farsubsp 0x1
 	001d04ac pop op
 	001d04b4 sourceline 0x255b
 	001d04bc mov ax,0x1
 	001d04c8 mov bx,ax
 	001d04d4 mov mar,0x336f20
 	001d04e0 mov ax,mar
 	001d04ec farpush bx
 	001d04f4 setfuncargs 0x1
 	001d04fc mov ax,0x43ef20
 	001d0508 farcall ax
 	001d0510 farsubsp 0x1
 	001d0518 sourceline 0x255c
 	001d0520 mov ax,0x1
 	001d052c mov mar,0xaa6f20
 	001d0538 memwrite4 ax
 	001d0540 sourceline 0x255d
 	001d0548 mov ax,0x1
 	001d0554 mov bx,ax
 	001d0560 mov mar,0x3cef20
 	001d056c mov ax,mar
 	001d0578 push op
 	001d0580 mov op,ax
 	001d0588 farpush bx
 	001d0590 setfuncargs 0x1
 	001d0598 mov ax,0x69ef20
 	001d05a4 farcall ax
 	001d05ac farsubsp 0x1
 	001d05b4 pop op
 	001d05bc sourceline 0x255e
 	001d05c4 jmp 0x001d0678
		001d0678: UNCONDITIONAL_JUMP

	[001d05cc]
		001ceebc: CONDITIONAL_JUMP
 	001d05cc sourceline 0x255f
 	001d05d4 push op
 	001d05dc mov ax,0x2c6b54
 	001d05e8 farpush ax
 	001d05f0 mov ax,0x138
 	001d05fc farpush ax
 	001d0604 mov ax,0x92
 	001d0610 farpush ax
 	001d0618 mov ax,0x0
 	001d0624 farpush ax
 	001d062c mov mar,0x3cef20
 	001d0638 mov ax,mar
 	001d0644 mov op,ax
 	001d064c setfuncargs 0x4
 	001d0654 mov ax,0x6aef20
 	001d0660 farcall ax
 	001d0668 farsubsp 0x4
 	001d0670 pop op
		001d0678: FALL_THROUGH

	[001d0678]
		001cef8c: UNCONDITIONAL_JUMP
		001d05cc: FALL_THROUGH
 	001d0678 sourceline 0x2560
 	001d0680 jmp 0x001d1f80
		001d1f80: UNCONDITIONAL_JUMP

	[001d0688]
		001cee90: CONDITIONAL_JUMP
 	001d0688 sourceline 0x2563
 	001d0690 mov mar,0x506f20
 	001d069c mov ax,mar
 	001d06a8 push op
 	001d06b0 mov op,ax
 	001d06b8 setfuncargs 0x0
 	001d06c0 mov ax,0x3d6f20
 	001d06cc farcall ax
 	001d06d4 pop op
 	001d06dc push ax
 	001d06e4 mov mar,0x3cef20
 	001d06f0 mov ax,mar
 	001d06fc push op
 	001d0704 mov op,ax
 	001d070c setfuncargs 0x0
 	001d0714 mov ax,0x3d6f20
 	001d0720 farcall ax
 	001d0728 pop op
 	001d0730 pop bx
 	001d0738 cmpneq bx,ax
 	001d0744 mov ax,bx
 	001d0750 jz 0x001d1ed4
		001d1ed4: CONDITIONAL_JUMP
		001d0758: FALL_THROUGH

	[001d0758]
		001d0688: FALL_THROUGH
 	001d0758 sourceline 0x2565
 	001d0760 mov mar,0xde6f20
 	001d076c memread4 ax
 	001d0774 lnot ax
 	001d077c jz 0x001d19bc
		001d19bc: CONDITIONAL_JUMP
		001d0784: FALL_THROUGH

	[001d0784]
		001d0758: FALL_THROUGH
 	001d0784 sourceline 0x2567
 	001d078c mov ax,0x0
 	001d0798 mov bx,ax
 	001d07a4 mov mar,0x336f20
 	001d07b0 mov ax,mar
 	001d07bc farpush bx
 	001d07c4 setfuncargs 0x1
 	001d07cc mov ax,0x43ef20
 	001d07d8 farcall ax
 	001d07e0 farsubsp 0x1
 	001d07e8 sourceline 0x2568
 	001d07f0 mov ax,0x0
 	001d07fc mov bx,ax
 	001d0808 mov mar,0x31ef20
 	001d0814 mov ax,mar
 	001d0820 push op
 	001d0828 mov op,ax
 	001d0830 farpush bx
 	001d0838 setfuncargs 0x1
 	001d0840 mov ax,0x3a6f20
 	001d084c farcall ax
 	001d0854 farsubsp 0x1
 	001d085c pop op
 	001d0864 sourceline 0x2569
 	001d086c mov ax,0x14
 	001d0878 farpush ax
 	001d0880 setfuncargs 0x1
 	001d0888 mov ax,0x426f20
 	001d0894 farcall ax
 	001d089c farsubsp 0x1
 	001d08a4 sourceline 0x256a
 	001d08ac push op
 	001d08b4 mov ax,0x0
 	001d08c0 farpush ax
 	001d08c8 mov ax,0x32
 	001d08d4 farpush ax
 	001d08dc mov mar,0xdcef20
 	001d08e8 mov ax,mar
 	001d08f4 mov op,ax
 	001d08fc setfuncargs 0x2
 	001d0904 mov ax,0x2fef20
 	001d0910 farcall ax
 	001d0918 farsubsp 0x2
 	001d0920 pop op
 	001d0928 sourceline 0x256b
 	001d0930 mov ax,0x46
 	001d093c farpush ax
 	001d0944 setfuncargs 0x1
 	001d094c mov ax,0x426f20
 	001d0958 farcall ax
 	001d0960 farsubsp 0x1
 	001d0968 sourceline 0x256c
 	001d0970 push op
 	001d0978 mov ax,0x426
 	001d0984 farpush ax
 	001d098c mov ax,0x397
 	001d0998 farpush ax
 	001d09a0 mov ax,0x0
 	001d09ac farpush ax
 	001d09b4 mov ax,0x3
 	001d09c0 farpush ax
 	001d09c8 mov ax,0x1
 	001d09d4 farpush ax
 	001d09dc mov mar,0x3cef20
 	001d09e8 mov ax,mar
 	001d09f4 mov op,ax
 	001d09fc setfuncargs 0x5
 	001d0a04 mov ax,0x536f20
 	001d0a10 farcall ax
 	001d0a18 farsubsp 0x5
 	001d0a20 pop op
 	001d0a28 sourceline 0x256d
 	001d0a30 push op
 	001d0a38 mov ax,0x0
 	001d0a44 farpush ax
 	001d0a4c mov ax,0x32
 	001d0a58 farpush ax
 	001d0a60 mov mar,0xdeef20
 	001d0a6c mov ax,mar
 	001d0a78 mov op,ax
 	001d0a80 setfuncargs 0x2
 	001d0a88 mov ax,0x2fef20
 	001d0a94 farcall ax
 	001d0a9c farsubsp 0x2
 	001d0aa4 pop op
 	001d0aac sourceline 0x256e
 	001d0ab4 mov ax,0x190
 	001d0ac0 farpush ax
 	001d0ac8 setfuncargs 0x1
 	001d0ad0 mov ax,0x426f20
 	001d0adc farcall ax
 	001d0ae4 farsubsp 0x1
 	001d0aec sourceline 0x2570
 	001d0af4 mov mar,0x3cef20
 	001d0b00 mov ax,mar
 	001d0b0c push op
 	001d0b14 mov op,ax
 	001d0b1c setfuncargs 0x0
 	001d0b24 mov ax,0x3d6f20
 	001d0b30 farcall ax
 	001d0b38 pop op
 	001d0b40 push ax
 	001d0b48 mov ax,0x7
 	001d0b54 pop bx
 	001d0b5c cmpeq bx,ax
 	001d0b68 mov ax,bx
 	001d0b74 jz 0x001d0ca8
		001d0ca8: CONDITIONAL_JUMP
		001d0b7c: FALL_THROUGH

	[001d0b7c]
		001d0784: FALL_THROUGH
 	001d0b7c sourceline 0x2572
 	001d0b84 mov mar,0x776f20
 	001d0b90 memread4 ax
 	001d0b98 jz 0x001d0c1c
		001d0c1c: CONDITIONAL_JUMP
		001d0ba0: FALL_THROUGH

	[001d0ba0]
		001d0b7c: FALL_THROUGH
 	001d0ba0 mov ax,0x1d
 	001d0bac mov bx,ax
 	001d0bb8 mov mar,0x3cef20
 	001d0bc4 mov ax,mar
 	001d0bd0 push op
 	001d0bd8 mov op,ax
 	001d0be0 farpush bx
 	001d0be8 setfuncargs 0x1
 	001d0bf0 mov ax,0x69ef20
 	001d0bfc farcall ax
 	001d0c04 farsubsp 0x1
 	001d0c0c pop op
 	001d0c14 jmp 0x001d0c98
		001d0c98: UNCONDITIONAL_JUMP

	[001d0c1c]
		001d0b7c: CONDITIONAL_JUMP
 	001d0c1c sourceline 0x2573
 	001d0c24 mov ax,0x3
 	001d0c30 mov bx,ax
 	001d0c3c mov mar,0x3cef20
 	001d0c48 mov ax,mar
 	001d0c54 push op
 	001d0c5c mov op,ax
 	001d0c64 farpush bx
 	001d0c6c setfuncargs 0x1
 	001d0c74 mov ax,0x69ef20
 	001d0c80 farcall ax
 	001d0c88 farsubsp 0x1
 	001d0c90 pop op
		001d0c98: FALL_THROUGH

	[001d0c98]
		001d0ba0: UNCONDITIONAL_JUMP
		001d0c1c: FALL_THROUGH
 	001d0c98 sourceline 0x2574
 	001d0ca0 jmp 0x001d0ffc
		001d0ffc: UNCONDITIONAL_JUMP

	[001d0ca8]
		001d0784: CONDITIONAL_JUMP
 	001d0ca8 sourceline 0x2575
 	001d0cb0 mov mar,0x3cef20
 	001d0cbc mov ax,mar
 	001d0cc8 push op
 	001d0cd0 mov op,ax
 	001d0cd8 setfuncargs 0x0
 	001d0ce0 mov ax,0x3d6f20
 	001d0cec farcall ax
 	001d0cf4 pop op
 	001d0cfc push ax
 	001d0d04 mov ax,0x8
 	001d0d10 pop bx
 	001d0d18 cmpeq bx,ax
 	001d0d24 mov ax,bx
 	001d0d30 jz 0x001d0e64
		001d0e64: CONDITIONAL_JUMP
		001d0d38: FALL_THROUGH

	[001d0d38]
		001d0ca8: FALL_THROUGH
 	001d0d38 sourceline 0x2577
 	001d0d40 mov mar,0xdf6f20
 	001d0d4c memread4 ax
 	001d0d54 jz 0x001d0dd8
		001d0dd8: CONDITIONAL_JUMP
		001d0d5c: FALL_THROUGH

	[001d0d5c]
		001d0d38: FALL_THROUGH
 	001d0d5c mov ax,0x3
 	001d0d68 mov bx,ax
 	001d0d74 mov mar,0x3cef20
 	001d0d80 mov ax,mar
 	001d0d8c push op
 	001d0d94 mov op,ax
 	001d0d9c farpush bx
 	001d0da4 setfuncargs 0x1
 	001d0dac mov ax,0x69ef20
 	001d0db8 farcall ax
 	001d0dc0 farsubsp 0x1
 	001d0dc8 pop op
 	001d0dd0 jmp 0x001d0e54
		001d0e54: UNCONDITIONAL_JUMP

	[001d0dd8]
		001d0d38: CONDITIONAL_JUMP
 	001d0dd8 sourceline 0x2578
 	001d0de0 mov ax,0xe6
 	001d0dec mov bx,ax
 	001d0df8 mov mar,0x3cef20
 	001d0e04 mov ax,mar
 	001d0e10 push op
 	001d0e18 mov op,ax
 	001d0e20 farpush bx
 	001d0e28 setfuncargs 0x1
 	001d0e30 mov ax,0x69ef20
 	001d0e3c farcall ax
 	001d0e44 farsubsp 0x1
 	001d0e4c pop op
		001d0e54: FALL_THROUGH

	[001d0e54]
		001d0d5c: UNCONDITIONAL_JUMP
		001d0dd8: FALL_THROUGH
 	001d0e54 sourceline 0x2579
 	001d0e5c jmp 0x001d0ffc
		001d0ffc: UNCONDITIONAL_JUMP

	[001d0e64]
		001d0ca8: CONDITIONAL_JUMP
 	001d0e64 sourceline 0x257a
 	001d0e6c mov mar,0x3cef20
 	001d0e78 mov ax,mar
 	001d0e84 push op
 	001d0e8c mov op,ax
 	001d0e94 setfuncargs 0x0
 	001d0e9c mov ax,0x3d6f20
 	001d0ea8 farcall ax
 	001d0eb0 pop op
 	001d0eb8 push ax
 	001d0ec0 mov ax,0x12
 	001d0ecc pop bx
 	001d0ed4 cmpeq bx,ax
 	001d0ee0 mov ax,bx
 	001d0eec jz 0x001d0f80
		001d0f80: CONDITIONAL_JUMP
		001d0ef4: FALL_THROUGH

	[001d0ef4]
		001d0e64: FALL_THROUGH
 	001d0ef4 sourceline 0x257c
 	001d0efc mov ax,0xe5
 	001d0f08 mov bx,ax
 	001d0f14 mov mar,0x3cef20
 	001d0f20 mov ax,mar
 	001d0f2c push op
 	001d0f34 mov op,ax
 	001d0f3c farpush bx
 	001d0f44 setfuncargs 0x1
 	001d0f4c mov ax,0x69ef20
 	001d0f58 farcall ax
 	001d0f60 farsubsp 0x1
 	001d0f68 pop op
 	001d0f70 sourceline 0x257d
 	001d0f78 jmp 0x001d0ffc
		001d0ffc: UNCONDITIONAL_JUMP

	[001d0f80]
		001d0e64: CONDITIONAL_JUMP
 	001d0f80 sourceline 0x2580
 	001d0f88 mov ax,0x3
 	001d0f94 mov bx,ax
 	001d0fa0 mov mar,0x3cef20
 	001d0fac mov ax,mar
 	001d0fb8 push op
 	001d0fc0 mov op,ax
 	001d0fc8 farpush bx
 	001d0fd0 setfuncargs 0x1
 	001d0fd8 mov ax,0x69ef20
 	001d0fe4 farcall ax
 	001d0fec farsubsp 0x1
 	001d0ff4 pop op
		001d0ffc: FALL_THROUGH

	[001d0ffc]
		001d0c98: UNCONDITIONAL_JUMP
		001d0e54: UNCONDITIONAL_JUMP
		001d0ef4: UNCONDITIONAL_JUMP
		001d0f80: FALL_THROUGH
 	001d0ffc sourceline 0x2583
 	001d1004 mov mar,0xdfef20
 	001d1010 memread4 ax
 	001d1018 jz 0x001d16e4
		001d16e4: CONDITIONAL_JUMP
		001d1020: FALL_THROUGH

	[001d1020]
		001d0ffc: FALL_THROUGH
 	001d1020 sourceline 0x2585
 	001d1028 mov ax,0x17
 	001d1034 mov bx,ax
 	001d1040 mov mar,0x506f20
 	001d104c mov ax,mar
 	001d1058 push op
 	001d1060 mov op,ax
 	001d1068 farpush bx
 	001d1070 setfuncargs 0x1
 	001d1078 mov ax,0x69ef20
 	001d1084 farcall ax
 	001d108c farsubsp 0x1
 	001d1094 pop op
 	001d109c sourceline 0x2586
 	001d10a4 push op
 	001d10ac mov ax,0x7cfe
 	001d10b8 farpush ax
 	001d10c0 mov ax,0x7cfe
 	001d10cc farpush ax
 	001d10d4 mov ax,0x7cfe
 	001d10e0 farpush ax
 	001d10e8 mov mar,0x42ef20
 	001d10f4 push mar
 	001d10fc pop mar
 	001d1104 memread.ptr ax
 	001d110c push ax
 	001d1114 pop mar
 	001d111c mov ax,mar
 	001d1128 push op
 	001d1130 mov op,ax
 	001d1138 setfuncargs 0x0
 	001d1140 mov ax,0x3d6f20
 	001d114c farcall ax
 	001d1154 pop op
 	001d115c farpush ax
 	001d1164 mov mar,0x506f20
 	001d1170 mov ax,mar
 	001d117c mov op,ax
 	001d1184 setfuncargs 0x4
 	001d118c mov ax,0xc16f20
 	001d1198 farcall ax
 	001d11a0 farsubsp 0x4
 	001d11a8 pop op
 	001d11b0 sourceline 0x2587
 	001d11b8 mov ax,0x64
 	001d11c4 mov bx,ax
 	001d11d0 mov mar,0x506f20
 	001d11dc mov ax,mar
 	001d11e8 push op
 	001d11f0 mov op,ax
 	001d11f8 farpush bx
 	001d1200 setfuncargs 0x1
 	001d1208 mov ax,0xd0ef20
 	001d1214 farcall ax
 	001d121c farsubsp 0x1
 	001d1224 pop op
 	001d122c sourceline 0x2588
 	001d1234 push op
 	001d123c mov ax,0x2c673c
 	001d1248 farpush ax
 	001d1250 mov mar,0x506f20
 	001d125c mov ax,mar
 	001d1268 mov op,ax
 	001d1270 setfuncargs 0x1
 	001d1278 mov ax,0x6f6f20
 	001d1284 farcall ax
 	001d128c farsubsp 0x1
 	001d1294 pop op
 	001d129c sourceline 0x2589
 	001d12a4 push op
 	001d12ac mov ax,0x2c6748
 	001d12b8 farpush ax
 	001d12c0 mov mar,0x3cef20
 	001d12cc mov ax,mar
 	001d12d8 mov op,ax
 	001d12e0 setfuncargs 0x1
 	001d12e8 mov ax,0x6f6f20
 	001d12f4 farcall ax
 	001d12fc farsubsp 0x1
 	001d1304 pop op
 	001d130c sourceline 0x258a
 	001d1314 push op
 	001d131c mov ax,0x2c6766
 	001d1328 farpush ax
 	001d1330 mov mar,0x506f20
 	001d133c mov ax,mar
 	001d1348 mov op,ax
 	001d1350 setfuncargs 0x1
 	001d1358 mov ax,0x6f6f20
 	001d1364 farcall ax
 	001d136c farsubsp 0x1
 	001d1374 pop op
 	001d137c sourceline 0x258b
 	001d1384 push op
 	001d138c mov ax,0x2c6780
 	001d1398 farpush ax
 	001d13a0 mov mar,0x3cef20
 	001d13ac mov ax,mar
 	001d13b8 mov op,ax
 	001d13c0 setfuncargs 0x1
 	001d13c8 mov ax,0x6f6f20
 	001d13d4 farcall ax
 	001d13dc farsubsp 0x1
 	001d13e4 pop op
 	001d13ec sourceline 0x258c
 	001d13f4 push op
 	001d13fc mov ax,0x2c67a2
 	001d1408 farpush ax
 	001d1410 mov mar,0x506f20
 	001d141c mov ax,mar
 	001d1428 mov op,ax
 	001d1430 setfuncargs 0x1
 	001d1438 mov ax,0x6f6f20
 	001d1444 farcall ax
 	001d144c farsubsp 0x1
 	001d1454 pop op
 	001d145c sourceline 0x258d
 	001d1464 push op
 	001d146c mov ax,0x2c67d1
 	001d1478 farpush ax
 	001d1480 mov mar,0x3cef20
 	001d148c mov ax,mar
 	001d1498 mov op,ax
 	001d14a0 setfuncargs 0x1
 	001d14a8 mov ax,0x6f6f20
 	001d14b4 farcall ax
 	001d14bc farsubsp 0x1
 	001d14c4 pop op
 	001d14cc sourceline 0x258e
 	001d14d4 push op
 	001d14dc mov ax,0x2c67fe
 	001d14e8 farpush ax
 	001d14f0 mov mar,0x506f20
 	001d14fc mov ax,mar
 	001d1508 mov op,ax
 	001d1510 setfuncargs 0x1
 	001d1518 mov ax,0x6f6f20
 	001d1524 farcall ax
 	001d152c farsubsp 0x1
 	001d1534 pop op
 	001d153c sourceline 0x258f
 	001d1544 push op
 	001d154c mov ax,0x2c682c
 	001d1558 farpush ax
 	001d1560 mov mar,0x3cef20
 	001d156c mov ax,mar
 	001d1578 mov op,ax
 	001d1580 setfuncargs 0x1
 	001d1588 mov ax,0x6f6f20
 	001d1594 farcall ax
 	001d159c farsubsp 0x1
 	001d15a4 pop op
 	001d15ac sourceline 0x2590
 	001d15b4 push op
 	001d15bc mov ax,0x7cfe
 	001d15c8 farpush ax
 	001d15d0 mov ax,0x7e
 	001d15dc farpush ax
 	001d15e4 mov ax,0x5b
 	001d15f0 farpush ax
 	001d15f8 mov ax,0x5
 	001d1604 farpush ax
 	001d160c mov mar,0x506f20
 	001d1618 mov ax,mar
 	001d1624 mov op,ax
 	001d162c setfuncargs 0x4
 	001d1634 mov ax,0xc16f20
 	001d1640 farcall ax
 	001d1648 farsubsp 0x4
 	001d1650 pop op
 	001d1658 sourceline 0x2591
 	001d1660 mov ax,0x0
 	001d166c mov bx,ax
 	001d1678 mov mar,0x506f20
 	001d1684 mov ax,mar
 	001d1690 push op
 	001d1698 mov op,ax
 	001d16a0 farpush bx
 	001d16a8 setfuncargs 0x1
 	001d16b0 mov ax,0xd0ef20
 	001d16bc farcall ax
 	001d16c4 farsubsp 0x1
 	001d16cc pop op
 	001d16d4 sourceline 0x2592
 	001d16dc jmp 0x001d180c
		001d180c: UNCONDITIONAL_JUMP

	[001d16e4]
		001d0ffc: CONDITIONAL_JUMP
 	001d16e4 sourceline 0x2595
 	001d16ec mov ax,0x1
 	001d16f8 mov bx,ax
 	001d1704 mov mar,0x3cef20
 	001d1710 mov ax,mar
 	001d171c push op
 	001d1724 mov op,ax
 	001d172c farpush bx
 	001d1734 setfuncargs 0x1
 	001d173c mov ax,0x69ef20
 	001d1748 farcall ax
 	001d1750 farsubsp 0x1
 	001d1758 pop op
 	001d1760 sourceline 0x2596
 	001d1768 push op
 	001d1770 mov ax,0x2c683d
 	001d177c farpush ax
 	001d1784 mov ax,0x138
 	001d1790 farpush ax
 	001d1798 mov ax,0x92
 	001d17a4 farpush ax
 	001d17ac mov ax,0x0
 	001d17b8 farpush ax
 	001d17c0 mov mar,0x3cef20
 	001d17cc mov ax,mar
 	001d17d8 mov op,ax
 	001d17e0 setfuncargs 0x4
 	001d17e8 mov ax,0x6aef20
 	001d17f4 farcall ax
 	001d17fc farsubsp 0x4
 	001d1804 pop op
		001d180c: FALL_THROUGH

	[001d180c]
		001d1020: UNCONDITIONAL_JUMP
		001d16e4: FALL_THROUGH
 	001d180c sourceline 0x2599
 	001d1814 push op
 	001d181c mov ax,0x427
 	001d1828 farpush ax
 	001d1830 mov ax,0x397
 	001d183c farpush ax
 	001d1844 mov ax,0x0
 	001d1850 farpush ax
 	001d1858 mov ax,0x3
 	001d1864 farpush ax
 	001d186c mov ax,0x1
 	001d1878 farpush ax
 	001d1880 mov mar,0x3cef20
 	001d188c mov ax,mar
 	001d1898 mov op,ax
 	001d18a0 setfuncargs 0x5
 	001d18a8 mov ax,0x536f20
 	001d18b4 farcall ax
 	001d18bc farsubsp 0x5
 	001d18c4 pop op
 	001d18cc sourceline 0x259a
 	001d18d4 mov ax,0x1
 	001d18e0 mov bx,ax
 	001d18ec mov mar,0x336f20
 	001d18f8 mov ax,mar
 	001d1904 farpush bx
 	001d190c setfuncargs 0x1
 	001d1914 mov ax,0x43ef20
 	001d1920 farcall ax
 	001d1928 farsubsp 0x1
 	001d1930 sourceline 0x259b
 	001d1938 mov ax,0x1
 	001d1944 mov bx,ax
 	001d1950 mov mar,0x31ef20
 	001d195c mov ax,mar
 	001d1968 push op
 	001d1970 mov op,ax
 	001d1978 farpush bx
 	001d1980 setfuncargs 0x1
 	001d1988 mov ax,0x3a6f20
 	001d1994 farcall ax
 	001d199c farsubsp 0x1
 	001d19a4 pop op
 	001d19ac sourceline 0x259c
 	001d19b4 jmp 0x001d1ec4
		001d1ec4: UNCONDITIONAL_JUMP

	[001d19bc]
		001d0758: CONDITIONAL_JUMP
 	001d19bc sourceline 0x259f
 	001d19c4 mov ax,0x0
 	001d19d0 mov bx,ax
 	001d19dc mov mar,0x336f20
 	001d19e8 mov ax,mar
 	001d19f4 farpush bx
 	001d19fc setfuncargs 0x1
 	001d1a04 mov ax,0x43ef20
 	001d1a10 farcall ax
 	001d1a18 farsubsp 0x1
 	001d1a20 sourceline 0x25a0
 	001d1a28 mov ax,0x0
 	001d1a34 mov bx,ax
 	001d1a40 mov mar,0x31ef20
 	001d1a4c mov ax,mar
 	001d1a58 push op
 	001d1a60 mov op,ax
 	001d1a68 farpush bx
 	001d1a70 setfuncargs 0x1
 	001d1a78 mov ax,0x3a6f20
 	001d1a84 farcall ax
 	001d1a8c farsubsp 0x1
 	001d1a94 pop op
 	001d1a9c sourceline 0x25a1
 	001d1aa4 mov ax,0x14
 	001d1ab0 farpush ax
 	001d1ab8 setfuncargs 0x1
 	001d1ac0 mov ax,0x426f20
 	001d1acc farcall ax
 	001d1ad4 farsubsp 0x1
 	001d1adc sourceline 0x25a2
 	001d1ae4 push op
 	001d1aec mov ax,0x0
 	001d1af8 farpush ax
 	001d1b00 mov ax,0x32
 	001d1b0c farpush ax
 	001d1b14 mov mar,0xdcef20
 	001d1b20 mov ax,mar
 	001d1b2c mov op,ax
 	001d1b34 setfuncargs 0x2
 	001d1b3c mov ax,0x2fef20
 	001d1b48 farcall ax
 	001d1b50 farsubsp 0x2
 	001d1b58 pop op
 	001d1b60 sourceline 0x25a3
 	001d1b68 mov ax,0x46
 	001d1b74 farpush ax
 	001d1b7c setfuncargs 0x1
 	001d1b84 mov ax,0x426f20
 	001d1b90 farcall ax
 	001d1b98 farsubsp 0x1
 	001d1ba0 sourceline 0x25a4
 	001d1ba8 push op
 	001d1bb0 mov ax,0x426
 	001d1bbc farpush ax
 	001d1bc4 mov ax,0x397
 	001d1bd0 farpush ax
 	001d1bd8 mov ax,0x0
 	001d1be4 farpush ax
 	001d1bec mov ax,0x3
 	001d1bf8 farpush ax
 	001d1c00 mov ax,0x1
 	001d1c0c farpush ax
 	001d1c14 mov mar,0x3cef20
 	001d1c20 mov ax,mar
 	001d1c2c mov op,ax
 	001d1c34 setfuncargs 0x5
 	001d1c3c mov ax,0x536f20
 	001d1c48 farcall ax
 	001d1c50 farsubsp 0x5
 	001d1c58 pop op
 	001d1c60 sourceline 0x25a5
 	001d1c68 push op
 	001d1c70 mov ax,0x0
 	001d1c7c farpush ax
 	001d1c84 mov ax,0x32
 	001d1c90 farpush ax
 	001d1c98 mov mar,0xdeef20
 	001d1ca4 mov ax,mar
 	001d1cb0 mov op,ax
 	001d1cb8 setfuncargs 0x2
 	001d1cc0 mov ax,0x2fef20
 	001d1ccc farcall ax
 	001d1cd4 farsubsp 0x2
 	001d1cdc pop op
 	001d1ce4 sourceline 0x25a6
 	001d1cec mov ax,0x190
 	001d1cf8 farpush ax
 	001d1d00 setfuncargs 0x1
 	001d1d08 mov ax,0x426f20
 	001d1d14 farcall ax
 	001d1d1c farsubsp 0x1
 	001d1d24 sourceline 0x25a7
 	001d1d2c push op
 	001d1d34 mov ax,0x427
 	001d1d40 farpush ax
 	001d1d48 mov ax,0x397
 	001d1d54 farpush ax
 	001d1d5c mov ax,0x0
 	001d1d68 farpush ax
 	001d1d70 mov ax,0x3
 	001d1d7c farpush ax
 	001d1d84 mov ax,0x1
 	001d1d90 farpush ax
 	001d1d98 mov mar,0x3cef20
 	001d1da4 mov ax,mar
 	001d1db0 mov op,ax
 	001d1db8 setfuncargs 0x5
 	001d1dc0 mov ax,0x536f20
 	001d1dcc farcall ax
 	001d1dd4 farsubsp 0x5
 	001d1ddc pop op
 	001d1de4 sourceline 0x25a8
 	001d1dec mov ax,0x1
 	001d1df8 mov bx,ax
 	001d1e04 mov mar,0x336f20
 	001d1e10 mov ax,mar
 	001d1e1c farpush bx
 	001d1e24 setfuncargs 0x1
 	001d1e2c mov ax,0x43ef20
 	001d1e38 farcall ax
 	001d1e40 farsubsp 0x1
 	001d1e48 sourceline 0x25a9
 	001d1e50 mov ax,0x1
 	001d1e5c mov bx,ax
 	001d1e68 mov mar,0x31ef20
 	001d1e74 mov ax,mar
 	001d1e80 push op
 	001d1e88 mov op,ax
 	001d1e90 farpush bx
 	001d1e98 setfuncargs 0x1
 	001d1ea0 mov ax,0x3a6f20
 	001d1eac farcall ax
 	001d1eb4 farsubsp 0x1
 	001d1ebc pop op
		001d1ec4: FALL_THROUGH

	[001d1ec4]
		001d180c: UNCONDITIONAL_JUMP
		001d19bc: FALL_THROUGH
 	001d1ec4 sourceline 0x25ab
 	001d1ecc jmp 0x001d1f80
		001d1f80: UNCONDITIONAL_JUMP

	[001d1ed4]
		001d0688: CONDITIONAL_JUMP
 	001d1ed4 sourceline 0x25ac
 	001d1edc push op
 	001d1ee4 mov ax,0x2c6b54
 	001d1ef0 farpush ax
 	001d1ef8 mov ax,0x138
 	001d1f04 farpush ax
 	001d1f0c mov ax,0x92
 	001d1f18 farpush ax
 	001d1f20 mov ax,0x0
 	001d1f2c farpush ax
 	001d1f34 mov mar,0x3cef20
 	001d1f40 mov ax,mar
 	001d1f4c mov op,ax
 	001d1f54 setfuncargs 0x4
 	001d1f5c mov ax,0x6aef20
 	001d1f68 farcall ax
 	001d1f70 farsubsp 0x4
 	001d1f78 pop op
		001d1f80: FALL_THROUGH

	[001d1f80]
		001d0678: UNCONDITIONAL_JUMP
		001d1ec4: UNCONDITIONAL_JUMP
		001d1ed4: FALL_THROUGH
 	001d1f80 sourceline 0x25ae
 	001d1f88 jmp 0x001d3344
		001d3344: UNCONDITIONAL_JUMP

	[001d1f90]
		001cee6c: CONDITIONAL_JUMP
 	001d1f90 sourceline 0x25b1
 	001d1f98 mov mar,0x506f20
 	001d1fa4 mov ax,mar
 	001d1fb0 push op
 	001d1fb8 mov op,ax
 	001d1fc0 setfuncargs 0x0
 	001d1fc8 mov ax,0x3d6f20
 	001d1fd4 farcall ax
 	001d1fdc pop op
 	001d1fe4 push ax
 	001d1fec mov mar,0x3cef20
 	001d1ff8 mov ax,mar
 	001d2004 push op
 	001d200c mov op,ax
 	001d2014 setfuncargs 0x0
 	001d201c mov ax,0x3d6f20
 	001d2028 farcall ax
 	001d2030 pop op
 	001d2038 pop bx
 	001d2040 cmpneq bx,ax
 	001d204c mov ax,bx
 	001d2058 jz 0x001d3298
		001d3298: CONDITIONAL_JUMP
		001d2060: FALL_THROUGH

	[001d2060]
		001d1f90: FALL_THROUGH
 	001d2060 sourceline 0x25b3
 	001d2068 mov ax,0x0
 	001d2074 mov bx,ax
 	001d2080 mov mar,0x336f20
 	001d208c mov ax,mar
 	001d2098 farpush bx
 	001d20a0 setfuncargs 0x1
 	001d20a8 mov ax,0x43ef20
 	001d20b4 farcall ax
 	001d20bc farsubsp 0x1
 	001d20c4 sourceline 0x25b4
 	001d20cc mov ax,0x0
 	001d20d8 mov bx,ax
 	001d20e4 mov mar,0x31ef20
 	001d20f0 mov ax,mar
 	001d20fc push op
 	001d2104 mov op,ax
 	001d210c farpush bx
 	001d2114 setfuncargs 0x1
 	001d211c mov ax,0x3a6f20
 	001d2128 farcall ax
 	001d2130 farsubsp 0x1
 	001d2138 pop op
 	001d2140 sourceline 0x25b5
 	001d2148 mov ax,0x14
 	001d2154 farpush ax
 	001d215c setfuncargs 0x1
 	001d2164 mov ax,0x426f20
 	001d2170 farcall ax
 	001d2178 farsubsp 0x1
 	001d2180 sourceline 0x25b6
 	001d2188 push op
 	001d2190 mov ax,0x0
 	001d219c farpush ax
 	001d21a4 mov ax,0x32
 	001d21b0 farpush ax
 	001d21b8 mov mar,0xdcef20
 	001d21c4 mov ax,mar
 	001d21d0 mov op,ax
 	001d21d8 setfuncargs 0x2
 	001d21e0 mov ax,0x2fef20
 	001d21ec farcall ax
 	001d21f4 farsubsp 0x2
 	001d21fc pop op
 	001d2204 sourceline 0x25b7
 	001d220c mov ax,0x46
 	001d2218 farpush ax
 	001d2220 setfuncargs 0x1
 	001d2228 mov ax,0x426f20
 	001d2234 farcall ax
 	001d223c farsubsp 0x1
 	001d2244 sourceline 0x25b8
 	001d224c push op
 	001d2254 mov ax,0x426
 	001d2260 farpush ax
 	001d2268 mov ax,0x397
 	001d2274 farpush ax
 	001d227c mov ax,0x0
 	001d2288 farpush ax
 	001d2290 mov ax,0x3
 	001d229c farpush ax
 	001d22a4 mov ax,0x1
 	001d22b0 farpush ax
 	001d22b8 mov mar,0x3cef20
 	001d22c4 mov ax,mar
 	001d22d0 mov op,ax
 	001d22d8 setfuncargs 0x5
 	001d22e0 mov ax,0x536f20
 	001d22ec farcall ax
 	001d22f4 farsubsp 0x5
 	001d22fc pop op
 	001d2304 sourceline 0x25b9
 	001d230c push op
 	001d2314 mov ax,0x0
 	001d2320 farpush ax
 	001d2328 mov ax,0x32
 	001d2334 farpush ax
 	001d233c mov mar,0xdeef20
 	001d2348 mov ax,mar
 	001d2354 mov op,ax
 	001d235c setfuncargs 0x2
 	001d2364 mov ax,0x2fef20
 	001d2370 farcall ax
 	001d2378 farsubsp 0x2
 	001d2380 pop op
 	001d2388 sourceline 0x25ba
 	001d2390 mov ax,0x190
 	001d239c farpush ax
 	001d23a4 setfuncargs 0x1
 	001d23ac mov ax,0x426f20
 	001d23b8 farcall ax
 	001d23c0 farsubsp 0x1
 	001d23c8 sourceline 0x25bc
 	001d23d0 mov mar,0x3cef20
 	001d23dc mov ax,mar
 	001d23e8 push op
 	001d23f0 mov op,ax
 	001d23f8 setfuncargs 0x0
 	001d2400 mov ax,0x3d6f20
 	001d240c farcall ax
 	001d2414 pop op
 	001d241c push ax
 	001d2424 mov ax,0x7
 	001d2430 pop bx
 	001d2438 cmpeq bx,ax
 	001d2444 mov ax,bx
 	001d2450 jz 0x001d2584
		001d2584: CONDITIONAL_JUMP
		001d2458: FALL_THROUGH

	[001d2458]
		001d2060: FALL_THROUGH
 	001d2458 sourceline 0x25be
 	001d2460 mov mar,0x776f20
 	001d246c memread4 ax
 	001d2474 jz 0x001d24f8
		001d24f8: CONDITIONAL_JUMP
		001d247c: FALL_THROUGH

	[001d247c]
		001d2458: FALL_THROUGH
 	001d247c mov ax,0x1d
 	001d2488 mov bx,ax
 	001d2494 mov mar,0x3cef20
 	001d24a0 mov ax,mar
 	001d24ac push op
 	001d24b4 mov op,ax
 	001d24bc farpush bx
 	001d24c4 setfuncargs 0x1
 	001d24cc mov ax,0x69ef20
 	001d24d8 farcall ax
 	001d24e0 farsubsp 0x1
 	001d24e8 pop op
 	001d24f0 jmp 0x001d2574
		001d2574: UNCONDITIONAL_JUMP

	[001d24f8]
		001d2458: CONDITIONAL_JUMP
 	001d24f8 sourceline 0x25bf
 	001d2500 mov ax,0x3
 	001d250c mov bx,ax
 	001d2518 mov mar,0x3cef20
 	001d2524 mov ax,mar
 	001d2530 push op
 	001d2538 mov op,ax
 	001d2540 farpush bx
 	001d2548 setfuncargs 0x1
 	001d2550 mov ax,0x69ef20
 	001d255c farcall ax
 	001d2564 farsubsp 0x1
 	001d256c pop op
		001d2574: FALL_THROUGH

	[001d2574]
		001d247c: UNCONDITIONAL_JUMP
		001d24f8: FALL_THROUGH
 	001d2574 sourceline 0x25c0
 	001d257c jmp 0x001d28d8
		001d28d8: UNCONDITIONAL_JUMP

	[001d2584]
		001d2060: CONDITIONAL_JUMP
 	001d2584 sourceline 0x25c1
 	001d258c mov mar,0x3cef20
 	001d2598 mov ax,mar
 	001d25a4 push op
 	001d25ac mov op,ax
 	001d25b4 setfuncargs 0x0
 	001d25bc mov ax,0x3d6f20
 	001d25c8 farcall ax
 	001d25d0 pop op
 	001d25d8 push ax
 	001d25e0 mov ax,0x8
 	001d25ec pop bx
 	001d25f4 cmpeq bx,ax
 	001d2600 mov ax,bx
 	001d260c jz 0x001d2740
		001d2740: CONDITIONAL_JUMP
		001d2614: FALL_THROUGH

	[001d2614]
		001d2584: FALL_THROUGH
 	001d2614 sourceline 0x25c3
 	001d261c mov mar,0xdf6f20
 	001d2628 memread4 ax
 	001d2630 jz 0x001d26b4
		001d26b4: CONDITIONAL_JUMP
		001d2638: FALL_THROUGH

	[001d2638]
		001d2614: FALL_THROUGH
 	001d2638 mov ax,0x3
 	001d2644 mov bx,ax
 	001d2650 mov mar,0x3cef20
 	001d265c mov ax,mar
 	001d2668 push op
 	001d2670 mov op,ax
 	001d2678 farpush bx
 	001d2680 setfuncargs 0x1
 	001d2688 mov ax,0x69ef20
 	001d2694 farcall ax
 	001d269c farsubsp 0x1
 	001d26a4 pop op
 	001d26ac jmp 0x001d2730
		001d2730: UNCONDITIONAL_JUMP

	[001d26b4]
		001d2614: CONDITIONAL_JUMP
 	001d26b4 sourceline 0x25c4
 	001d26bc mov ax,0xe6
 	001d26c8 mov bx,ax
 	001d26d4 mov mar,0x3cef20
 	001d26e0 mov ax,mar
 	001d26ec push op
 	001d26f4 mov op,ax
 	001d26fc farpush bx
 	001d2704 setfuncargs 0x1
 	001d270c mov ax,0x69ef20
 	001d2718 farcall ax
 	001d2720 farsubsp 0x1
 	001d2728 pop op
		001d2730: FALL_THROUGH

	[001d2730]
		001d2638: UNCONDITIONAL_JUMP
		001d26b4: FALL_THROUGH
 	001d2730 sourceline 0x25c5
 	001d2738 jmp 0x001d28d8
		001d28d8: UNCONDITIONAL_JUMP

	[001d2740]
		001d2584: CONDITIONAL_JUMP
 	001d2740 sourceline 0x25c6
 	001d2748 mov mar,0x3cef20
 	001d2754 mov ax,mar
 	001d2760 push op
 	001d2768 mov op,ax
 	001d2770 setfuncargs 0x0
 	001d2778 mov ax,0x3d6f20
 	001d2784 farcall ax
 	001d278c pop op
 	001d2794 push ax
 	001d279c mov ax,0x12
 	001d27a8 pop bx
 	001d27b0 cmpeq bx,ax
 	001d27bc mov ax,bx
 	001d27c8 jz 0x001d285c
		001d285c: CONDITIONAL_JUMP
		001d27d0: FALL_THROUGH

	[001d27d0]
		001d2740: FALL_THROUGH
 	001d27d0 sourceline 0x25c8
 	001d27d8 mov ax,0xe5
 	001d27e4 mov bx,ax
 	001d27f0 mov mar,0x3cef20
 	001d27fc mov ax,mar
 	001d2808 push op
 	001d2810 mov op,ax
 	001d2818 farpush bx
 	001d2820 setfuncargs 0x1
 	001d2828 mov ax,0x69ef20
 	001d2834 farcall ax
 	001d283c farsubsp 0x1
 	001d2844 pop op
 	001d284c sourceline 0x25c9
 	001d2854 jmp 0x001d28d8
		001d28d8: UNCONDITIONAL_JUMP

	[001d285c]
		001d2740: CONDITIONAL_JUMP
 	001d285c sourceline 0x25cc
 	001d2864 mov ax,0x3
 	001d2870 mov bx,ax
 	001d287c mov mar,0x3cef20
 	001d2888 mov ax,mar
 	001d2894 push op
 	001d289c mov op,ax
 	001d28a4 farpush bx
 	001d28ac setfuncargs 0x1
 	001d28b4 mov ax,0x69ef20
 	001d28c0 farcall ax
 	001d28c8 farsubsp 0x1
 	001d28d0 pop op
		001d28d8: FALL_THROUGH

	[001d28d8]
		001d2574: UNCONDITIONAL_JUMP
		001d2730: UNCONDITIONAL_JUMP
		001d27d0: UNCONDITIONAL_JUMP
		001d285c: FALL_THROUGH
 	001d28d8 sourceline 0x25cf
 	001d28e0 mov mar,0xdfef20
 	001d28ec memread4 ax
 	001d28f4 jz 0x001d2fc0
		001d2fc0: CONDITIONAL_JUMP
		001d28fc: FALL_THROUGH

	[001d28fc]
		001d28d8: FALL_THROUGH
 	001d28fc sourceline 0x25d1
 	001d2904 mov ax,0x17
 	001d2910 mov bx,ax
 	001d291c mov mar,0x506f20
 	001d2928 mov ax,mar
 	001d2934 push op
 	001d293c mov op,ax
 	001d2944 farpush bx
 	001d294c setfuncargs 0x1
 	001d2954 mov ax,0x69ef20
 	001d2960 farcall ax
 	001d2968 farsubsp 0x1
 	001d2970 pop op
 	001d2978 sourceline 0x25d2
 	001d2980 push op
 	001d2988 mov ax,0x7cfe
 	001d2994 farpush ax
 	001d299c mov ax,0x7cfe
 	001d29a8 farpush ax
 	001d29b0 mov ax,0x7cfe
 	001d29bc farpush ax
 	001d29c4 mov mar,0x42ef20
 	001d29d0 push mar
 	001d29d8 pop mar
 	001d29e0 memread.ptr ax
 	001d29e8 push ax
 	001d29f0 pop mar
 	001d29f8 mov ax,mar
 	001d2a04 push op
 	001d2a0c mov op,ax
 	001d2a14 setfuncargs 0x0
 	001d2a1c mov ax,0x3d6f20
 	001d2a28 farcall ax
 	001d2a30 pop op
 	001d2a38 farpush ax
 	001d2a40 mov mar,0x506f20
 	001d2a4c mov ax,mar
 	001d2a58 mov op,ax
 	001d2a60 setfuncargs 0x4
 	001d2a68 mov ax,0xc16f20
 	001d2a74 farcall ax
 	001d2a7c farsubsp 0x4
 	001d2a84 pop op
 	001d2a8c sourceline 0x25d3
 	001d2a94 mov ax,0x64
 	001d2aa0 mov bx,ax
 	001d2aac mov mar,0x506f20
 	001d2ab8 mov ax,mar
 	001d2ac4 push op
 	001d2acc mov op,ax
 	001d2ad4 farpush bx
 	001d2adc setfuncargs 0x1
 	001d2ae4 mov ax,0xd0ef20
 	001d2af0 farcall ax
 	001d2af8 farsubsp 0x1
 	001d2b00 pop op
 	001d2b08 sourceline 0x25d4
 	001d2b10 push op
 	001d2b18 mov ax,0x2c673c
 	001d2b24 farpush ax
 	001d2b2c mov mar,0x506f20
 	001d2b38 mov ax,mar
 	001d2b44 mov op,ax
 	001d2b4c setfuncargs 0x1
 	001d2b54 mov ax,0x6f6f20
 	001d2b60 farcall ax
 	001d2b68 farsubsp 0x1
 	001d2b70 pop op
 	001d2b78 sourceline 0x25d5
 	001d2b80 push op
 	001d2b88 mov ax,0x2c6748
 	001d2b94 farpush ax
 	001d2b9c mov mar,0x3cef20
 	001d2ba8 mov ax,mar
 	001d2bb4 mov op,ax
 	001d2bbc setfuncargs 0x1
 	001d2bc4 mov ax,0x6f6f20
 	001d2bd0 farcall ax
 	001d2bd8 farsubsp 0x1
 	001d2be0 pop op
 	001d2be8 sourceline 0x25d6
 	001d2bf0 push op
 	001d2bf8 mov ax,0x2c6766
 	001d2c04 farpush ax
 	001d2c0c mov mar,0x506f20
 	001d2c18 mov ax,mar
 	001d2c24 mov op,ax
 	001d2c2c setfuncargs 0x1
 	001d2c34 mov ax,0x6f6f20
 	001d2c40 farcall ax
 	001d2c48 farsubsp 0x1
 	001d2c50 pop op
 	001d2c58 sourceline 0x25d7
 	001d2c60 push op
 	001d2c68 mov ax,0x2c6780
 	001d2c74 farpush ax
 	001d2c7c mov mar,0x3cef20
 	001d2c88 mov ax,mar
 	001d2c94 mov op,ax
 	001d2c9c setfuncargs 0x1
 	001d2ca4 mov ax,0x6f6f20
 	001d2cb0 farcall ax
 	001d2cb8 farsubsp 0x1
 	001d2cc0 pop op
 	001d2cc8 sourceline 0x25d8
 	001d2cd0 push op
 	001d2cd8 mov ax,0x2c67a2
 	001d2ce4 farpush ax
 	001d2cec mov mar,0x506f20
 	001d2cf8 mov ax,mar
 	001d2d04 mov op,ax
 	001d2d0c setfuncargs 0x1
 	001d2d14 mov ax,0x6f6f20
 	001d2d20 farcall ax
 	001d2d28 farsubsp 0x1
 	001d2d30 pop op
 	001d2d38 sourceline 0x25d9
 	001d2d40 push op
 	001d2d48 mov ax,0x2c67d1
 	001d2d54 farpush ax
 	001d2d5c mov mar,0x3cef20
 	001d2d68 mov ax,mar
 	001d2d74 mov op,ax
 	001d2d7c setfuncargs 0x1
 	001d2d84 mov ax,0x6f6f20
 	001d2d90 farcall ax
 	001d2d98 farsubsp 0x1
 	001d2da0 pop op
 	001d2da8 sourceline 0x25da
 	001d2db0 push op
 	001d2db8 mov ax,0x2c67fe
 	001d2dc4 farpush ax
 	001d2dcc mov mar,0x506f20
 	001d2dd8 mov ax,mar
 	001d2de4 mov op,ax
 	001d2dec setfuncargs 0x1
 	001d2df4 mov ax,0x6f6f20
 	001d2e00 farcall ax
 	001d2e08 farsubsp 0x1
 	001d2e10 pop op
 	001d2e18 sourceline 0x25db
 	001d2e20 push op
 	001d2e28 mov ax,0x2c682c
 	001d2e34 farpush ax
 	001d2e3c mov mar,0x3cef20
 	001d2e48 mov ax,mar
 	001d2e54 mov op,ax
 	001d2e5c setfuncargs 0x1
 	001d2e64 mov ax,0x6f6f20
 	001d2e70 farcall ax
 	001d2e78 farsubsp 0x1
 	001d2e80 pop op
 	001d2e88 sourceline 0x25dc
 	001d2e90 push op
 	001d2e98 mov ax,0x7cfe
 	001d2ea4 farpush ax
 	001d2eac mov ax,0x7e
 	001d2eb8 farpush ax
 	001d2ec0 mov ax,0x5b
 	001d2ecc farpush ax
 	001d2ed4 mov ax,0x5
 	001d2ee0 farpush ax
 	001d2ee8 mov mar,0x506f20
 	001d2ef4 mov ax,mar
 	001d2f00 mov op,ax
 	001d2f08 setfuncargs 0x4
 	001d2f10 mov ax,0xc16f20
 	001d2f1c farcall ax
 	001d2f24 farsubsp 0x4
 	001d2f2c pop op
 	001d2f34 sourceline 0x25dd
 	001d2f3c mov ax,0x0
 	001d2f48 mov bx,ax
 	001d2f54 mov mar,0x506f20
 	001d2f60 mov ax,mar
 	001d2f6c push op
 	001d2f74 mov op,ax
 	001d2f7c farpush bx
 	001d2f84 setfuncargs 0x1
 	001d2f8c mov ax,0xd0ef20
 	001d2f98 farcall ax
 	001d2fa0 farsubsp 0x1
 	001d2fa8 pop op
 	001d2fb0 sourceline 0x25de
 	001d2fb8 jmp 0x001d30e8
		001d30e8: UNCONDITIONAL_JUMP

	[001d2fc0]
		001d28d8: CONDITIONAL_JUMP
 	001d2fc0 sourceline 0x25e1
 	001d2fc8 mov ax,0x1
 	001d2fd4 mov bx,ax
 	001d2fe0 mov mar,0x3cef20
 	001d2fec mov ax,mar
 	001d2ff8 push op
 	001d3000 mov op,ax
 	001d3008 farpush bx
 	001d3010 setfuncargs 0x1
 	001d3018 mov ax,0x69ef20
 	001d3024 farcall ax
 	001d302c farsubsp 0x1
 	001d3034 pop op
 	001d303c sourceline 0x25e2
 	001d3044 push op
 	001d304c mov ax,0x2c683d
 	001d3058 farpush ax
 	001d3060 mov ax,0x138
 	001d306c farpush ax
 	001d3074 mov ax,0x92
 	001d3080 farpush ax
 	001d3088 mov ax,0x0
 	001d3094 farpush ax
 	001d309c mov mar,0x3cef20
 	001d30a8 mov ax,mar
 	001d30b4 mov op,ax
 	001d30bc setfuncargs 0x4
 	001d30c4 mov ax,0x6aef20
 	001d30d0 farcall ax
 	001d30d8 farsubsp 0x4
 	001d30e0 pop op
		001d30e8: FALL_THROUGH

	[001d30e8]
		001d28fc: UNCONDITIONAL_JUMP
		001d2fc0: FALL_THROUGH
 	001d30e8 sourceline 0x25e5
 	001d30f0 push op
 	001d30f8 mov ax,0x427
 	001d3104 farpush ax
 	001d310c mov ax,0x397
 	001d3118 farpush ax
 	001d3120 mov ax,0x0
 	001d312c farpush ax
 	001d3134 mov ax,0x3
 	001d3140 farpush ax
 	001d3148 mov ax,0x1
 	001d3154 farpush ax
 	001d315c mov mar,0x3cef20
 	001d3168 mov ax,mar
 	001d3174 mov op,ax
 	001d317c setfuncargs 0x5
 	001d3184 mov ax,0x536f20
 	001d3190 farcall ax
 	001d3198 farsubsp 0x5
 	001d31a0 pop op
 	001d31a8 sourceline 0x25e6
 	001d31b0 mov ax,0x1
 	001d31bc mov bx,ax
 	001d31c8 mov mar,0x336f20
 	001d31d4 mov ax,mar
 	001d31e0 farpush bx
 	001d31e8 setfuncargs 0x1
 	001d31f0 mov ax,0x43ef20
 	001d31fc farcall ax
 	001d3204 farsubsp 0x1
 	001d320c sourceline 0x25e7
 	001d3214 mov ax,0x1
 	001d3220 mov bx,ax
 	001d322c mov mar,0x31ef20
 	001d3238 mov ax,mar
 	001d3244 push op
 	001d324c mov op,ax
 	001d3254 farpush bx
 	001d325c setfuncargs 0x1
 	001d3264 mov ax,0x3a6f20
 	001d3270 farcall ax
 	001d3278 farsubsp 0x1
 	001d3280 pop op
 	001d3288 sourceline 0x25e8
 	001d3290 jmp 0x001d3344
		001d3344: UNCONDITIONAL_JUMP

	[001d3298]
		001d1f90: CONDITIONAL_JUMP
 	001d3298 sourceline 0x25e9
 	001d32a0 push op
 	001d32a8 mov ax,0x2c6b54
 	001d32b4 farpush ax
 	001d32bc mov ax,0x138
 	001d32c8 farpush ax
 	001d32d0 mov ax,0x92
 	001d32dc farpush ax
 	001d32e4 mov ax,0x0
 	001d32f0 farpush ax
 	001d32f8 mov mar,0x3cef20
 	001d3304 mov ax,mar
 	001d3310 mov op,ax
 	001d3318 setfuncargs 0x4
 	001d3320 mov ax,0x6aef20
 	001d332c farcall ax
 	001d3334 farsubsp 0x4
 	001d333c pop op
		001d3344: FALL_THROUGH

	[001d3344]
		001cee5c: UNCONDITIONAL_JUMP
		001d1f80: UNCONDITIONAL_JUMP
		001d30e8: UNCONDITIONAL_JUMP
		001d3298: FALL_THROUGH
 	001d3344 sourceline 0x25ec
 	001d334c jmp 0x001d4708
		001d4708: UNCONDITIONAL_JUMP

	[001d3354]
		001cdb20: CONDITIONAL_JUMP
 	001d3354 sourceline 0x25ef
 	001d335c mov mar,0x506f20
 	001d3368 mov ax,mar
 	001d3374 push op
 	001d337c mov op,ax
 	001d3384 setfuncargs 0x0
 	001d338c mov ax,0x3d6f20
 	001d3398 farcall ax
 	001d33a0 pop op
 	001d33a8 push ax
 	001d33b0 mov mar,0x3cef20
 	001d33bc mov ax,mar
 	001d33c8 push op
 	001d33d0 mov op,ax
 	001d33d8 setfuncargs 0x0
 	001d33e0 mov ax,0x3d6f20
 	001d33ec farcall ax
 	001d33f4 pop op
 	001d33fc pop bx
 	001d3404 cmpneq bx,ax
 	001d3410 mov ax,bx
 	001d341c jz 0x001d465c
		001d465c: CONDITIONAL_JUMP
		001d3424: FALL_THROUGH

	[001d3424]
		001d3354: FALL_THROUGH
 	001d3424 sourceline 0x25f1
 	001d342c mov ax,0x0
 	001d3438 mov bx,ax
 	001d3444 mov mar,0x336f20
 	001d3450 mov ax,mar
 	001d345c farpush bx
 	001d3464 setfuncargs 0x1
 	001d346c mov ax,0x43ef20
 	001d3478 farcall ax
 	001d3480 farsubsp 0x1
 	001d3488 sourceline 0x25f2
 	001d3490 mov ax,0x0
 	001d349c mov bx,ax
 	001d34a8 mov mar,0x31ef20
 	001d34b4 mov ax,mar
 	001d34c0 push op
 	001d34c8 mov op,ax
 	001d34d0 farpush bx
 	001d34d8 setfuncargs 0x1
 	001d34e0 mov ax,0x3a6f20
 	001d34ec farcall ax
 	001d34f4 farsubsp 0x1
 	001d34fc pop op
 	001d3504 sourceline 0x25f3
 	001d350c mov ax,0x14
 	001d3518 farpush ax
 	001d3520 setfuncargs 0x1
 	001d3528 mov ax,0x426f20
 	001d3534 farcall ax
 	001d353c farsubsp 0x1
 	001d3544 sourceline 0x25f4
 	001d354c push op
 	001d3554 mov ax,0x0
 	001d3560 farpush ax
 	001d3568 mov ax,0x32
 	001d3574 farpush ax
 	001d357c mov mar,0xdcef20
 	001d3588 mov ax,mar
 	001d3594 mov op,ax
 	001d359c setfuncargs 0x2
 	001d35a4 mov ax,0x2fef20
 	001d35b0 farcall ax
 	001d35b8 farsubsp 0x2
 	001d35c0 pop op
 	001d35c8 sourceline 0x25f5
 	001d35d0 mov ax,0x46
 	001d35dc farpush ax
 	001d35e4 setfuncargs 0x1
 	001d35ec mov ax,0x426f20
 	001d35f8 farcall ax
 	001d3600 farsubsp 0x1
 	001d3608 sourceline 0x25f6
 	001d3610 push op
 	001d3618 mov ax,0x426
 	001d3624 farpush ax
 	001d362c mov ax,0x397
 	001d3638 farpush ax
 	001d3640 mov ax,0x0
 	001d364c farpush ax
 	001d3654 mov ax,0x3
 	001d3660 farpush ax
 	001d3668 mov ax,0x1
 	001d3674 farpush ax
 	001d367c mov mar,0x3cef20
 	001d3688 mov ax,mar
 	001d3694 mov op,ax
 	001d369c setfuncargs 0x5
 	001d36a4 mov ax,0x536f20
 	001d36b0 farcall ax
 	001d36b8 farsubsp 0x5
 	001d36c0 pop op
 	001d36c8 sourceline 0x25f7
 	001d36d0 push op
 	001d36d8 mov ax,0x0
 	001d36e4 farpush ax
 	001d36ec mov ax,0x32
 	001d36f8 farpush ax
 	001d3700 mov mar,0xdeef20
 	001d370c mov ax,mar
 	001d3718 mov op,ax
 	001d3720 setfuncargs 0x2
 	001d3728 mov ax,0x2fef20
 	001d3734 farcall ax
 	001d373c farsubsp 0x2
 	001d3744 pop op
 	001d374c sourceline 0x25f8
 	001d3754 mov ax,0x190
 	001d3760 farpush ax
 	001d3768 setfuncargs 0x1
 	001d3770 mov ax,0x426f20
 	001d377c farcall ax
 	001d3784 farsubsp 0x1
 	001d378c sourceline 0x25f9
 	001d3794 mov mar,0x3cef20
 	001d37a0 mov ax,mar
 	001d37ac push op
 	001d37b4 mov op,ax
 	001d37bc setfuncargs 0x0
 	001d37c4 mov ax,0x3d6f20
 	001d37d0 farcall ax
 	001d37d8 pop op
 	001d37e0 push ax
 	001d37e8 mov ax,0x7
 	001d37f4 pop bx
 	001d37fc cmpeq bx,ax
 	001d3808 mov ax,bx
 	001d3814 jz 0x001d3948
		001d3948: CONDITIONAL_JUMP
		001d381c: FALL_THROUGH

	[001d381c]
		001d3424: FALL_THROUGH
 	001d381c sourceline 0x25fb
 	001d3824 mov mar,0x776f20
 	001d3830 memread4 ax
 	001d3838 jz 0x001d38bc
		001d38bc: CONDITIONAL_JUMP
		001d3840: FALL_THROUGH

	[001d3840]
		001d381c: FALL_THROUGH
 	001d3840 mov ax,0x1d
 	001d384c mov bx,ax
 	001d3858 mov mar,0x3cef20
 	001d3864 mov ax,mar
 	001d3870 push op
 	001d3878 mov op,ax
 	001d3880 farpush bx
 	001d3888 setfuncargs 0x1
 	001d3890 mov ax,0x69ef20
 	001d389c farcall ax
 	001d38a4 farsubsp 0x1
 	001d38ac pop op
 	001d38b4 jmp 0x001d3938
		001d3938: UNCONDITIONAL_JUMP

	[001d38bc]
		001d381c: CONDITIONAL_JUMP
 	001d38bc sourceline 0x25fc
 	001d38c4 mov ax,0x3
 	001d38d0 mov bx,ax
 	001d38dc mov mar,0x3cef20
 	001d38e8 mov ax,mar
 	001d38f4 push op
 	001d38fc mov op,ax
 	001d3904 farpush bx
 	001d390c setfuncargs 0x1
 	001d3914 mov ax,0x69ef20
 	001d3920 farcall ax
 	001d3928 farsubsp 0x1
 	001d3930 pop op
		001d3938: FALL_THROUGH

	[001d3938]
		001d3840: UNCONDITIONAL_JUMP
		001d38bc: FALL_THROUGH
 	001d3938 sourceline 0x25fd
 	001d3940 jmp 0x001d3c9c
		001d3c9c: UNCONDITIONAL_JUMP

	[001d3948]
		001d3424: CONDITIONAL_JUMP
 	001d3948 sourceline 0x25fe
 	001d3950 mov mar,0x3cef20
 	001d395c mov ax,mar
 	001d3968 push op
 	001d3970 mov op,ax
 	001d3978 setfuncargs 0x0
 	001d3980 mov ax,0x3d6f20
 	001d398c farcall ax
 	001d3994 pop op
 	001d399c push ax
 	001d39a4 mov ax,0x8
 	001d39b0 pop bx
 	001d39b8 cmpeq bx,ax
 	001d39c4 mov ax,bx
 	001d39d0 jz 0x001d3b04
		001d3b04: CONDITIONAL_JUMP
		001d39d8: FALL_THROUGH

	[001d39d8]
		001d3948: FALL_THROUGH
 	001d39d8 sourceline 0x2600
 	001d39e0 mov mar,0xdf6f20
 	001d39ec memread4 ax
 	001d39f4 jz 0x001d3a78
		001d3a78: CONDITIONAL_JUMP
		001d39fc: FALL_THROUGH

	[001d39fc]
		001d39d8: FALL_THROUGH
 	001d39fc mov ax,0x3
 	001d3a08 mov bx,ax
 	001d3a14 mov mar,0x3cef20
 	001d3a20 mov ax,mar
 	001d3a2c push op
 	001d3a34 mov op,ax
 	001d3a3c farpush bx
 	001d3a44 setfuncargs 0x1
 	001d3a4c mov ax,0x69ef20
 	001d3a58 farcall ax
 	001d3a60 farsubsp 0x1
 	001d3a68 pop op
 	001d3a70 jmp 0x001d3af4
		001d3af4: UNCONDITIONAL_JUMP

	[001d3a78]
		001d39d8: CONDITIONAL_JUMP
 	001d3a78 sourceline 0x2601
 	001d3a80 mov ax,0xe6
 	001d3a8c mov bx,ax
 	001d3a98 mov mar,0x3cef20
 	001d3aa4 mov ax,mar
 	001d3ab0 push op
 	001d3ab8 mov op,ax
 	001d3ac0 farpush bx
 	001d3ac8 setfuncargs 0x1
 	001d3ad0 mov ax,0x69ef20
 	001d3adc farcall ax
 	001d3ae4 farsubsp 0x1
 	001d3aec pop op
		001d3af4: FALL_THROUGH

	[001d3af4]
		001d39fc: UNCONDITIONAL_JUMP
		001d3a78: FALL_THROUGH
 	001d3af4 sourceline 0x2602
 	001d3afc jmp 0x001d3c9c
		001d3c9c: UNCONDITIONAL_JUMP

	[001d3b04]
		001d3948: CONDITIONAL_JUMP
 	001d3b04 sourceline 0x2603
 	001d3b0c mov mar,0x3cef20
 	001d3b18 mov ax,mar
 	001d3b24 push op
 	001d3b2c mov op,ax
 	001d3b34 setfuncargs 0x0
 	001d3b3c mov ax,0x3d6f20
 	001d3b48 farcall ax
 	001d3b50 pop op
 	001d3b58 push ax
 	001d3b60 mov ax,0x12
 	001d3b6c pop bx
 	001d3b74 cmpeq bx,ax
 	001d3b80 mov ax,bx
 	001d3b8c jz 0x001d3c20
		001d3c20: CONDITIONAL_JUMP
		001d3b94: FALL_THROUGH

	[001d3b94]
		001d3b04: FALL_THROUGH
 	001d3b94 sourceline 0x2605
 	001d3b9c mov ax,0xe5
 	001d3ba8 mov bx,ax
 	001d3bb4 mov mar,0x3cef20
 	001d3bc0 mov ax,mar
 	001d3bcc push op
 	001d3bd4 mov op,ax
 	001d3bdc farpush bx
 	001d3be4 setfuncargs 0x1
 	001d3bec mov ax,0x69ef20
 	001d3bf8 farcall ax
 	001d3c00 farsubsp 0x1
 	001d3c08 pop op
 	001d3c10 sourceline 0x2606
 	001d3c18 jmp 0x001d3c9c
		001d3c9c: UNCONDITIONAL_JUMP

	[001d3c20]
		001d3b04: CONDITIONAL_JUMP
 	001d3c20 sourceline 0x2609
 	001d3c28 mov ax,0x3
 	001d3c34 mov bx,ax
 	001d3c40 mov mar,0x3cef20
 	001d3c4c mov ax,mar
 	001d3c58 push op
 	001d3c60 mov op,ax
 	001d3c68 farpush bx
 	001d3c70 setfuncargs 0x1
 	001d3c78 mov ax,0x69ef20
 	001d3c84 farcall ax
 	001d3c8c farsubsp 0x1
 	001d3c94 pop op
		001d3c9c: FALL_THROUGH

	[001d3c9c]
		001d3938: UNCONDITIONAL_JUMP
		001d3af4: UNCONDITIONAL_JUMP
		001d3b94: UNCONDITIONAL_JUMP
		001d3c20: FALL_THROUGH
 	001d3c9c sourceline 0x260c
 	001d3ca4 mov mar,0xdfef20
 	001d3cb0 memread4 ax
 	001d3cb8 jz 0x001d4384
		001d4384: CONDITIONAL_JUMP
		001d3cc0: FALL_THROUGH

	[001d3cc0]
		001d3c9c: FALL_THROUGH
 	001d3cc0 sourceline 0x260e
 	001d3cc8 mov ax,0x17
 	001d3cd4 mov bx,ax
 	001d3ce0 mov mar,0x506f20
 	001d3cec mov ax,mar
 	001d3cf8 push op
 	001d3d00 mov op,ax
 	001d3d08 farpush bx
 	001d3d10 setfuncargs 0x1
 	001d3d18 mov ax,0x69ef20
 	001d3d24 farcall ax
 	001d3d2c farsubsp 0x1
 	001d3d34 pop op
 	001d3d3c sourceline 0x260f
 	001d3d44 push op
 	001d3d4c mov ax,0x7cfe
 	001d3d58 farpush ax
 	001d3d60 mov ax,0x7cfe
 	001d3d6c farpush ax
 	001d3d74 mov ax,0x7cfe
 	001d3d80 farpush ax
 	001d3d88 mov mar,0x42ef20
 	001d3d94 push mar
 	001d3d9c pop mar
 	001d3da4 memread.ptr ax
 	001d3dac push ax
 	001d3db4 pop mar
 	001d3dbc mov ax,mar
 	001d3dc8 push op
 	001d3dd0 mov op,ax
 	001d3dd8 setfuncargs 0x0
 	001d3de0 mov ax,0x3d6f20
 	001d3dec farcall ax
 	001d3df4 pop op
 	001d3dfc farpush ax
 	001d3e04 mov mar,0x506f20
 	001d3e10 mov ax,mar
 	001d3e1c mov op,ax
 	001d3e24 setfuncargs 0x4
 	001d3e2c mov ax,0xc16f20
 	001d3e38 farcall ax
 	001d3e40 farsubsp 0x4
 	001d3e48 pop op
 	001d3e50 sourceline 0x2610
 	001d3e58 mov ax,0x64
 	001d3e64 mov bx,ax
 	001d3e70 mov mar,0x506f20
 	001d3e7c mov ax,mar
 	001d3e88 push op
 	001d3e90 mov op,ax
 	001d3e98 farpush bx
 	001d3ea0 setfuncargs 0x1
 	001d3ea8 mov ax,0xd0ef20
 	001d3eb4 farcall ax
 	001d3ebc farsubsp 0x1
 	001d3ec4 pop op
 	001d3ecc sourceline 0x2611
 	001d3ed4 push op
 	001d3edc mov ax,0x2c673c
 	001d3ee8 farpush ax
 	001d3ef0 mov mar,0x506f20
 	001d3efc mov ax,mar
 	001d3f08 mov op,ax
 	001d3f10 setfuncargs 0x1
 	001d3f18 mov ax,0x6f6f20
 	001d3f24 farcall ax
 	001d3f2c farsubsp 0x1
 	001d3f34 pop op
 	001d3f3c sourceline 0x2612
 	001d3f44 push op
 	001d3f4c mov ax,0x2c6748
 	001d3f58 farpush ax
 	001d3f60 mov mar,0x3cef20
 	001d3f6c mov ax,mar
 	001d3f78 mov op,ax
 	001d3f80 setfuncargs 0x1
 	001d3f88 mov ax,0x6f6f20
 	001d3f94 farcall ax
 	001d3f9c farsubsp 0x1
 	001d3fa4 pop op
 	001d3fac sourceline 0x2613
 	001d3fb4 push op
 	001d3fbc mov ax,0x2c6766
 	001d3fc8 farpush ax
 	001d3fd0 mov mar,0x506f20
 	001d3fdc mov ax,mar
 	001d3fe8 mov op,ax
 	001d3ff0 setfuncargs 0x1
 	001d3ff8 mov ax,0x6f6f20
 	001d4004 farcall ax
 	001d400c farsubsp 0x1
 	001d4014 pop op
 	001d401c sourceline 0x2614
 	001d4024 push op
 	001d402c mov ax,0x2c6780
 	001d4038 farpush ax
 	001d4040 mov mar,0x3cef20
 	001d404c mov ax,mar
 	001d4058 mov op,ax
 	001d4060 setfuncargs 0x1
 	001d4068 mov ax,0x6f6f20
 	001d4074 farcall ax
 	001d407c farsubsp 0x1
 	001d4084 pop op
 	001d408c sourceline 0x2615
 	001d4094 push op
 	001d409c mov ax,0x2c67a2
 	001d40a8 farpush ax
 	001d40b0 mov mar,0x506f20
 	001d40bc mov ax,mar
 	001d40c8 mov op,ax
 	001d40d0 setfuncargs 0x1
 	001d40d8 mov ax,0x6f6f20
 	001d40e4 farcall ax
 	001d40ec farsubsp 0x1
 	001d40f4 pop op
 	001d40fc sourceline 0x2616
 	001d4104 push op
 	001d410c mov ax,0x2c67d1
 	001d4118 farpush ax
 	001d4120 mov mar,0x3cef20
 	001d412c mov ax,mar
 	001d4138 mov op,ax
 	001d4140 setfuncargs 0x1
 	001d4148 mov ax,0x6f6f20
 	001d4154 farcall ax
 	001d415c farsubsp 0x1
 	001d4164 pop op
 	001d416c sourceline 0x2617
 	001d4174 push op
 	001d417c mov ax,0x2c67fe
 	001d4188 farpush ax
 	001d4190 mov mar,0x506f20
 	001d419c mov ax,mar
 	001d41a8 mov op,ax
 	001d41b0 setfuncargs 0x1
 	001d41b8 mov ax,0x6f6f20
 	001d41c4 farcall ax
 	001d41cc farsubsp 0x1
 	001d41d4 pop op
 	001d41dc sourceline 0x2618
 	001d41e4 push op
 	001d41ec mov ax,0x2c682c
 	001d41f8 farpush ax
 	001d4200 mov mar,0x3cef20
 	001d420c mov ax,mar
 	001d4218 mov op,ax
 	001d4220 setfuncargs 0x1
 	001d4228 mov ax,0x6f6f20
 	001d4234 farcall ax
 	001d423c farsubsp 0x1
 	001d4244 pop op
 	001d424c sourceline 0x2619
 	001d4254 push op
 	001d425c mov ax,0x7cfe
 	001d4268 farpush ax
 	001d4270 mov ax,0x7e
 	001d427c farpush ax
 	001d4284 mov ax,0x5b
 	001d4290 farpush ax
 	001d4298 mov ax,0x5
 	001d42a4 farpush ax
 	001d42ac mov mar,0x506f20
 	001d42b8 mov ax,mar
 	001d42c4 mov op,ax
 	001d42cc setfuncargs 0x4
 	001d42d4 mov ax,0xc16f20
 	001d42e0 farcall ax
 	001d42e8 farsubsp 0x4
 	001d42f0 pop op
 	001d42f8 sourceline 0x261a
 	001d4300 mov ax,0x0
 	001d430c mov bx,ax
 	001d4318 mov mar,0x506f20
 	001d4324 mov ax,mar
 	001d4330 push op
 	001d4338 mov op,ax
 	001d4340 farpush bx
 	001d4348 setfuncargs 0x1
 	001d4350 mov ax,0xd0ef20
 	001d435c farcall ax
 	001d4364 farsubsp 0x1
 	001d436c pop op
 	001d4374 sourceline 0x261b
 	001d437c jmp 0x001d44ac
		001d44ac: UNCONDITIONAL_JUMP

	[001d4384]
		001d3c9c: CONDITIONAL_JUMP
 	001d4384 sourceline 0x261e
 	001d438c mov ax,0x1
 	001d4398 mov bx,ax
 	001d43a4 mov mar,0x3cef20
 	001d43b0 mov ax,mar
 	001d43bc push op
 	001d43c4 mov op,ax
 	001d43cc farpush bx
 	001d43d4 setfuncargs 0x1
 	001d43dc mov ax,0x69ef20
 	001d43e8 farcall ax
 	001d43f0 farsubsp 0x1
 	001d43f8 pop op
 	001d4400 sourceline 0x261f
 	001d4408 push op
 	001d4410 mov ax,0x2c683d
 	001d441c farpush ax
 	001d4424 mov ax,0x138
 	001d4430 farpush ax
 	001d4438 mov ax,0x92
 	001d4444 farpush ax
 	001d444c mov ax,0x0
 	001d4458 farpush ax
 	001d4460 mov mar,0x3cef20
 	001d446c mov ax,mar
 	001d4478 mov op,ax
 	001d4480 setfuncargs 0x4
 	001d4488 mov ax,0x6aef20
 	001d4494 farcall ax
 	001d449c farsubsp 0x4
 	001d44a4 pop op
		001d44ac: FALL_THROUGH

	[001d44ac]
		001d3cc0: UNCONDITIONAL_JUMP
		001d4384: FALL_THROUGH
 	001d44ac sourceline 0x2622
 	001d44b4 push op
 	001d44bc mov ax,0x427
 	001d44c8 farpush ax
 	001d44d0 mov ax,0x397
 	001d44dc farpush ax
 	001d44e4 mov ax,0x0
 	001d44f0 farpush ax
 	001d44f8 mov ax,0x3
 	001d4504 farpush ax
 	001d450c mov ax,0x1
 	001d4518 farpush ax
 	001d4520 mov mar,0x3cef20
 	001d452c mov ax,mar
 	001d4538 mov op,ax
 	001d4540 setfuncargs 0x5
 	001d4548 mov ax,0x536f20
 	001d4554 farcall ax
 	001d455c farsubsp 0x5
 	001d4564 pop op
 	001d456c sourceline 0x2623
 	001d4574 mov ax,0x1
 	001d4580 mov bx,ax
 	001d458c mov mar,0x336f20
 	001d4598 mov ax,mar
 	001d45a4 farpush bx
 	001d45ac setfuncargs 0x1
 	001d45b4 mov ax,0x43ef20
 	001d45c0 farcall ax
 	001d45c8 farsubsp 0x1
 	001d45d0 sourceline 0x2624
 	001d45d8 mov ax,0x1
 	001d45e4 mov bx,ax
 	001d45f0 mov mar,0x31ef20
 	001d45fc mov ax,mar
 	001d4608 push op
 	001d4610 mov op,ax
 	001d4618 farpush bx
 	001d4620 setfuncargs 0x1
 	001d4628 mov ax,0x3a6f20
 	001d4634 farcall ax
 	001d463c farsubsp 0x1
 	001d4644 pop op
 	001d464c sourceline 0x2625
 	001d4654 jmp 0x001d4708
		001d4708: UNCONDITIONAL_JUMP

	[001d465c]
		001d3354: CONDITIONAL_JUMP
 	001d465c sourceline 0x2626
 	001d4664 push op
 	001d466c mov ax,0x2c6b54
 	001d4678 farpush ax
 	001d4680 mov ax,0x138
 	001d468c farpush ax
 	001d4694 mov ax,0x92
 	001d46a0 farpush ax
 	001d46a8 mov ax,0x0
 	001d46b4 farpush ax
 	001d46bc mov mar,0x3cef20
 	001d46c8 mov ax,mar
 	001d46d4 mov op,ax
 	001d46dc setfuncargs 0x4
 	001d46e4 mov ax,0x6aef20
 	001d46f0 farcall ax
 	001d46f8 farsubsp 0x4
 	001d4700 pop op
		001d4708: FALL_THROUGH

	[001d4708]
		001cd48c: UNCONDITIONAL_JUMP
		001d3344: UNCONDITIONAL_JUMP
		001d44ac: UNCONDITIONAL_JUMP
		001d465c: FALL_THROUGH
 	001d4708 sourceline 0x2629
 	001d4710 jmp 0x001dc30c
		001dc30c: UNCONDITIONAL_JUMP

	[001d4718]
		001cd330: CONDITIONAL_JUMP
 	001d4718 sourceline 0x262b
 	001d4720 mov mar,0x7b6f20
 	001d472c mov ax,mar
 	001d4738 push op
 	001d4740 mov op,ax
 	001d4748 setfuncargs 0x0
 	001d4750 mov ax,0x346f20
 	001d475c farcall ax
 	001d4764 pop op
 	001d476c push ax
 	001d4774 mov ax,0x8ee
 	001d4780 pop bx
 	001d4788 cmpeq bx,ax
 	001d4794 mov ax,bx
 	001d47a0 jz 0x001d7e9c
		001d7e9c: CONDITIONAL_JUMP
		001d47a8: FALL_THROUGH

	[001d47a8]
		001d4718: FALL_THROUGH
 	001d47a8 sourceline 0x262d
 	001d47b0 mov mar,0x3cef20
 	001d47bc mov ax,mar
 	001d47c8 push op
 	001d47d0 mov op,ax
 	001d47d8 setfuncargs 0x0
 	001d47e0 mov ax,0x3d6f20
 	001d47ec farcall ax
 	001d47f4 pop op
 	001d47fc push ax
 	001d4804 mov ax,0x14
 	001d4810 pop bx
 	001d4818 cmpneq bx,ax
 	001d4824 mov ax,bx
 	001d4830 jz 0x001d56c8
		001d56c8: CONDITIONAL_JUMP
		001d4838: FALL_THROUGH

	[001d4838]
		001d47a8: FALL_THROUGH
 	001d4838 sourceline 0x262f
 	001d4840 mov mar,0xb8ef20
 	001d484c memread4 ax
 	001d4854 push ax
 	001d485c mov ax,0x3
 	001d4868 pop bx
 	001d4870 cmpeq bx,ax
 	001d487c mov ax,bx
 	001d4888 jz 0x001d4bf8
		001d4bf8: CONDITIONAL_JUMP
		001d4890: FALL_THROUGH

	[001d4890]
		001d4838: FALL_THROUGH
 	001d4890 sourceline 0x2631
 	001d4898 mov mar,0x42ef20
 	001d48a4 push mar
 	001d48ac pop mar
 	001d48b4 memread.ptr ax
 	001d48bc push ax
 	001d48c4 pop mar
 	001d48cc mov ax,mar
 	001d48d8 push op
 	001d48e0 mov op,ax
 	001d48e8 setfuncargs 0x0
 	001d48f0 mov ax,0x3d6f20
 	001d48fc farcall ax
 	001d4904 pop op
 	001d490c push ax
 	001d4914 mov mar,0xb9ef20
 	001d4920 mov ax,mar
 	001d492c push op
 	001d4934 mov op,ax
 	001d493c setfuncargs 0x0
 	001d4944 mov ax,0x3d6f20
 	001d4950 farcall ax
 	001d4958 pop op
 	001d4960 pop bx
 	001d4968 cmpneq bx,ax
 	001d4974 mov ax,bx
 	001d4980 jz 0x001d4ac0
		001d4ac0: CONDITIONAL_JUMP
		001d4988: FALL_THROUGH

	[001d4988]
		001d4890: FALL_THROUGH
 	001d4988 sourceline 0x2633
 	001d4990 mov ax,0x1
 	001d499c mov bx,ax
 	001d49a8 mov mar,0x3cef20
 	001d49b4 mov ax,mar
 	001d49c0 push op
 	001d49c8 mov op,ax
 	001d49d0 farpush bx
 	001d49d8 setfuncargs 0x1
 	001d49e0 mov ax,0x69ef20
 	001d49ec farcall ax
 	001d49f4 farsubsp 0x1
 	001d49fc pop op
 	001d4a04 sourceline 0x2634
 	001d4a0c push op
 	001d4a14 mov ax,0x2c6899
 	001d4a20 farpush ax
 	001d4a28 mov ax,0x138
 	001d4a34 farpush ax
 	001d4a3c mov ax,0x92
 	001d4a48 farpush ax
 	001d4a50 mov ax,0x0
 	001d4a5c farpush ax
 	001d4a64 mov mar,0x3cef20
 	001d4a70 mov ax,mar
 	001d4a7c mov op,ax
 	001d4a84 setfuncargs 0x4
 	001d4a8c mov ax,0x6aef20
 	001d4a98 farcall ax
 	001d4aa0 farsubsp 0x4
 	001d4aa8 pop op
 	001d4ab0 sourceline 0x2635
 	001d4ab8 jmp 0x001d4be8
		001d4be8: UNCONDITIONAL_JUMP

	[001d4ac0]
		001d4890: CONDITIONAL_JUMP
 	001d4ac0 sourceline 0x2638
 	001d4ac8 mov ax,0x1
 	001d4ad4 mov bx,ax
 	001d4ae0 mov mar,0x3cef20
 	001d4aec mov ax,mar
 	001d4af8 push op
 	001d4b00 mov op,ax
 	001d4b08 farpush bx
 	001d4b10 setfuncargs 0x1
 	001d4b18 mov ax,0x69ef20
 	001d4b24 farcall ax
 	001d4b2c farsubsp 0x1
 	001d4b34 pop op
 	001d4b3c sourceline 0x2639
 	001d4b44 push op
 	001d4b4c mov ax,0x2c6903
 	001d4b58 farpush ax
 	001d4b60 mov ax,0x138
 	001d4b6c farpush ax
 	001d4b74 mov ax,0x92
 	001d4b80 farpush ax
 	001d4b88 mov ax,0x0
 	001d4b94 farpush ax
 	001d4b9c mov mar,0x3cef20
 	001d4ba8 mov ax,mar
 	001d4bb4 mov op,ax
 	001d4bbc setfuncargs 0x4
 	001d4bc4 mov ax,0x6aef20
 	001d4bd0 farcall ax
 	001d4bd8 farsubsp 0x4
 	001d4be0 pop op
		001d4be8: FALL_THROUGH

	[001d4be8]
		001d4988: UNCONDITIONAL_JUMP
		001d4ac0: FALL_THROUGH
 	001d4be8 sourceline 0x263b
 	001d4bf0 jmp 0x001d56b8
		001d56b8: UNCONDITIONAL_JUMP

	[001d4bf8]
		001d4838: CONDITIONAL_JUMP
 	001d4bf8 sourceline 0x263e
 	001d4c00 mov mar,0x42ef20
 	001d4c0c push mar
 	001d4c14 pop mar
 	001d4c1c memread.ptr ax
 	001d4c24 push ax
 	001d4c2c pop mar
 	001d4c34 mov ax,mar
 	001d4c40 push op
 	001d4c48 mov op,ax
 	001d4c50 setfuncargs 0x0
 	001d4c58 mov ax,0x3d6f20
 	001d4c64 farcall ax
 	001d4c6c pop op
 	001d4c74 push ax
 	001d4c7c mov mar,0xb9ef20
 	001d4c88 mov ax,mar
 	001d4c94 push op
 	001d4c9c mov op,ax
 	001d4ca4 setfuncargs 0x0
 	001d4cac mov ax,0x3d6f20
 	001d4cb8 farcall ax
 	001d4cc0 pop op
 	001d4cc8 pop bx
 	001d4cd0 cmpneq bx,ax
 	001d4cdc mov ax,bx
 	001d4ce8 jz 0x001d5590
		001d5590: CONDITIONAL_JUMP
		001d4cf0: FALL_THROUGH

	[001d4cf0]
		001d4bf8: FALL_THROUGH
 	001d4cf0 sourceline 0x2640
 	001d4cf8 mov mar,0xb8ef20
 	001d4d04 memread4 ax
 	001d4d0c push ax
 	001d4d14 mov ax,0x4
 	001d4d20 pop bx
 	001d4d28 cmpneq bx,ax
 	001d4d34 mov ax,bx
 	001d4d40 jz 0x001d5388
		001d5388: CONDITIONAL_JUMP
		001d4d48: FALL_THROUGH

	[001d4d48]
		001d4cf0: FALL_THROUGH
 	001d4d48 sourceline 0x2642
 	001d4d50 mov ax,0x0
 	001d4d5c mov bx,ax
 	001d4d68 mov mar,0x336f20
 	001d4d74 mov ax,mar
 	001d4d80 farpush bx
 	001d4d88 setfuncargs 0x1
 	001d4d90 mov ax,0x43ef20
 	001d4d9c farcall ax
 	001d4da4 farsubsp 0x1
 	001d4dac sourceline 0x2643
 	001d4db4 mov ax,0x0
 	001d4dc0 mov bx,ax
 	001d4dcc mov mar,0x31ef20
 	001d4dd8 mov ax,mar
 	001d4de4 push op
 	001d4dec mov op,ax
 	001d4df4 farpush bx
 	001d4dfc setfuncargs 0x1
 	001d4e04 mov ax,0x3a6f20
 	001d4e10 farcall ax
 	001d4e18 farsubsp 0x1
 	001d4e20 pop op
 	001d4e28 sourceline 0x2644
 	001d4e30 mov ax,0x14
 	001d4e3c farpush ax
 	001d4e44 setfuncargs 0x1
 	001d4e4c mov ax,0x426f20
 	001d4e58 farcall ax
 	001d4e60 farsubsp 0x1
 	001d4e68 sourceline 0x2645
 	001d4e70 push op
 	001d4e78 mov ax,0x0
 	001d4e84 farpush ax
 	001d4e8c mov ax,0x32
 	001d4e98 farpush ax
 	001d4ea0 mov mar,0xdcef20
 	001d4eac mov ax,mar
 	001d4eb8 mov op,ax
 	001d4ec0 setfuncargs 0x2
 	001d4ec8 mov ax,0x2fef20
 	001d4ed4 farcall ax
 	001d4edc farsubsp 0x2
 	001d4ee4 pop op
 	001d4eec sourceline 0x2646
 	001d4ef4 mov ax,0x46
 	001d4f00 farpush ax
 	001d4f08 setfuncargs 0x1
 	001d4f10 mov ax,0x426f20
 	001d4f1c farcall ax
 	001d4f24 farsubsp 0x1
 	001d4f2c sourceline 0x2647
 	001d4f34 push op
 	001d4f3c mov ax,0x426
 	001d4f48 farpush ax
 	001d4f50 mov ax,0x397
 	001d4f5c farpush ax
 	001d4f64 mov ax,0x0
 	001d4f70 farpush ax
 	001d4f78 mov ax,0x3
 	001d4f84 farpush ax
 	001d4f8c mov ax,0x1
 	001d4f98 farpush ax
 	001d4fa0 mov mar,0x3cef20
 	001d4fac mov ax,mar
 	001d4fb8 mov op,ax
 	001d4fc0 setfuncargs 0x5
 	001d4fc8 mov ax,0x536f20
 	001d4fd4 farcall ax
 	001d4fdc farsubsp 0x5
 	001d4fe4 pop op
 	001d4fec sourceline 0x2648
 	001d4ff4 push op
 	001d4ffc mov ax,0x0
 	001d5008 farpush ax
 	001d5010 mov ax,0x32
 	001d501c farpush ax
 	001d5024 mov mar,0xdeef20
 	001d5030 mov ax,mar
 	001d503c mov op,ax
 	001d5044 setfuncargs 0x2
 	001d504c mov ax,0x2fef20
 	001d5058 farcall ax
 	001d5060 farsubsp 0x2
 	001d5068 pop op
 	001d5070 sourceline 0x2649
 	001d5078 mov ax,0x190
 	001d5084 farpush ax
 	001d508c setfuncargs 0x1
 	001d5094 mov ax,0x426f20
 	001d50a0 farcall ax
 	001d50a8 farsubsp 0x1
 	001d50b0 sourceline 0x264a
 	001d50b8 mov ax,0x1
 	001d50c4 mov bx,ax
 	001d50d0 mov mar,0x3cef20
 	001d50dc mov ax,mar
 	001d50e8 push op
 	001d50f0 mov op,ax
 	001d50f8 farpush bx
 	001d5100 setfuncargs 0x1
 	001d5108 mov ax,0x69ef20
 	001d5114 farcall ax
 	001d511c farsubsp 0x1
 	001d5124 pop op
 	001d512c sourceline 0x264b
 	001d5134 push op
 	001d513c mov ax,0x2c6dfc
 	001d5148 farpush ax
 	001d5150 mov ax,0x138
 	001d515c farpush ax
 	001d5164 mov ax,0x92
 	001d5170 farpush ax
 	001d5178 mov ax,0x0
 	001d5184 farpush ax
 	001d518c mov mar,0x3cef20
 	001d5198 mov ax,mar
 	001d51a4 mov op,ax
 	001d51ac setfuncargs 0x4
 	001d51b4 mov ax,0x6aef20
 	001d51c0 farcall ax
 	001d51c8 farsubsp 0x4
 	001d51d0 pop op
 	001d51d8 sourceline 0x264c
 	001d51e0 push op
 	001d51e8 mov ax,0x427
 	001d51f4 farpush ax
 	001d51fc mov ax,0x397
 	001d5208 farpush ax
 	001d5210 mov ax,0x0
 	001d521c farpush ax
 	001d5224 mov ax,0x3
 	001d5230 farpush ax
 	001d5238 mov ax,0x1
 	001d5244 farpush ax
 	001d524c mov mar,0x3cef20
 	001d5258 mov ax,mar
 	001d5264 mov op,ax
 	001d526c setfuncargs 0x5
 	001d5274 mov ax,0x536f20
 	001d5280 farcall ax
 	001d5288 farsubsp 0x5
 	001d5290 pop op
 	001d5298 sourceline 0x264d
 	001d52a0 mov ax,0x1
 	001d52ac mov bx,ax
 	001d52b8 mov mar,0x336f20
 	001d52c4 mov ax,mar
 	001d52d0 farpush bx
 	001d52d8 setfuncargs 0x1
 	001d52e0 mov ax,0x43ef20
 	001d52ec farcall ax
 	001d52f4 farsubsp 0x1
 	001d52fc sourceline 0x264e
 	001d5304 mov ax,0x1
 	001d5310 mov bx,ax
 	001d531c mov mar,0x31ef20
 	001d5328 mov ax,mar
 	001d5334 push op
 	001d533c mov op,ax
 	001d5344 farpush bx
 	001d534c setfuncargs 0x1
 	001d5354 mov ax,0x3a6f20
 	001d5360 farcall ax
 	001d5368 farsubsp 0x1
 	001d5370 pop op
 	001d5378 sourceline 0x264f
 	001d5380 jmp 0x001d5580
		001d5580: UNCONDITIONAL_JUMP

	[001d5388]
		001d4cf0: CONDITIONAL_JUMP
 	001d5388 sourceline 0x2652
 	001d5390 mov ax,0x1
 	001d539c mov bx,ax
 	001d53a8 mov mar,0x3cef20
 	001d53b4 mov ax,mar
 	001d53c0 push op
 	001d53c8 mov op,ax
 	001d53d0 farpush bx
 	001d53d8 setfuncargs 0x1
 	001d53e0 mov ax,0x69ef20
 	001d53ec farcall ax
 	001d53f4 farsubsp 0x1
 	001d53fc pop op
 	001d5404 sourceline 0x2653
 	001d540c mov mar,0xd1ef20
 	001d5418 memread4 ax
 	001d5420 jz 0x001d54d4
		001d54d4: CONDITIONAL_JUMP
		001d5428: FALL_THROUGH

	[001d5428]
		001d5388: FALL_THROUGH
 	001d5428 push op
 	001d5430 mov ax,0x2c694c
 	001d543c farpush ax
 	001d5444 mov ax,0x138
 	001d5450 farpush ax
 	001d5458 mov ax,0x92
 	001d5464 farpush ax
 	001d546c mov ax,0x0
 	001d5478 farpush ax
 	001d5480 mov mar,0x3cef20
 	001d548c mov ax,mar
 	001d5498 mov op,ax
 	001d54a0 setfuncargs 0x4
 	001d54a8 mov ax,0x6aef20
 	001d54b4 farcall ax
 	001d54bc farsubsp 0x4
 	001d54c4 pop op
 	001d54cc jmp 0x001d5580
		001d5580: UNCONDITIONAL_JUMP

	[001d54d4]
		001d5388: CONDITIONAL_JUMP
 	001d54d4 sourceline 0x2654
 	001d54dc push op
 	001d54e4 mov ax,0x2c6b18
 	001d54f0 farpush ax
 	001d54f8 mov ax,0x138
 	001d5504 farpush ax
 	001d550c mov ax,0x92
 	001d5518 farpush ax
 	001d5520 mov ax,0x0
 	001d552c farpush ax
 	001d5534 mov mar,0x3cef20
 	001d5540 mov ax,mar
 	001d554c mov op,ax
 	001d5554 setfuncargs 0x4
 	001d555c mov ax,0x6aef20
 	001d5568 farcall ax
 	001d5570 farsubsp 0x4
 	001d5578 pop op
		001d5580: FALL_THROUGH

	[001d5580]
		001d4d48: UNCONDITIONAL_JUMP
		001d5428: UNCONDITIONAL_JUMP
		001d54d4: FALL_THROUGH
 	001d5580 sourceline 0x2656
 	001d5588 jmp 0x001d56b8
		001d56b8: UNCONDITIONAL_JUMP

	[001d5590]
		001d4bf8: CONDITIONAL_JUMP
 	001d5590 sourceline 0x2659
 	001d5598 mov ax,0x1
 	001d55a4 mov bx,ax
 	001d55b0 mov mar,0x3cef20
 	001d55bc mov ax,mar
 	001d55c8 push op
 	001d55d0 mov op,ax
 	001d55d8 farpush bx
 	001d55e0 setfuncargs 0x1
 	001d55e8 mov ax,0x69ef20
 	001d55f4 farcall ax
 	001d55fc farsubsp 0x1
 	001d5604 pop op
 	001d560c sourceline 0x265a
 	001d5614 push op
 	001d561c mov ax,0x2c6b2a
 	001d5628 farpush ax
 	001d5630 mov ax,0x138
 	001d563c farpush ax
 	001d5644 mov ax,0x92
 	001d5650 farpush ax
 	001d5658 mov ax,0x0
 	001d5664 farpush ax
 	001d566c mov mar,0x3cef20
 	001d5678 mov ax,mar
 	001d5684 mov op,ax
 	001d568c setfuncargs 0x4
 	001d5694 mov ax,0x6aef20
 	001d56a0 farcall ax
 	001d56a8 farsubsp 0x4
 	001d56b0 pop op
		001d56b8: FALL_THROUGH

	[001d56b8]
		001d4be8: UNCONDITIONAL_JUMP
		001d5580: UNCONDITIONAL_JUMP
		001d5590: FALL_THROUGH
 	001d56b8 sourceline 0x265d
 	001d56c0 jmp 0x001d7e8c
		001d7e8c: UNCONDITIONAL_JUMP

	[001d56c8]
		001d47a8: CONDITIONAL_JUMP
 	001d56c8 sourceline 0x2660
 	001d56d0 mov mar,0xb8ef20
 	001d56dc memread4 ax
 	001d56e4 push ax
 	001d56ec mov ax,0x3
 	001d56f8 pop bx
 	001d5700 cmpeq bx,ax
 	001d570c mov ax,bx
 	001d5718 jz 0x001d749c
		001d749c: CONDITIONAL_JUMP
		001d5720: FALL_THROUGH

	[001d5720]
		001d56c8: FALL_THROUGH
 	001d5720 sourceline 0x2662
 	001d5728 mov ax,0x1
 	001d5734 mov mar,0x5eef20
 	001d5740 memwrite4 ax
 	001d5748 sourceline 0x2663
 	001d5750 mov ax,0x3
 	001d575c mov bx,ax
 	001d5768 mov mar,0x3cef20
 	001d5774 mov ax,mar
 	001d5780 push op
 	001d5788 mov op,ax
 	001d5790 farpush bx
 	001d5798 setfuncargs 0x1
 	001d57a0 mov ax,0x69ef20
 	001d57ac farcall ax
 	001d57b4 farsubsp 0x1
 	001d57bc pop op
 	001d57c4 sourceline 0x2664
 	001d57cc mov ax,0x0
 	001d57d8 mov bx,ax
 	001d57e4 mov mar,0x336f20
 	001d57f0 mov ax,mar
 	001d57fc farpush bx
 	001d5804 setfuncargs 0x1
 	001d580c mov ax,0x43ef20
 	001d5818 farcall ax
 	001d5820 farsubsp 0x1
 	001d5828 sourceline 0x2665
 	001d5830 mov ax,0x0
 	001d583c mov bx,ax
 	001d5848 mov mar,0x31ef20
 	001d5854 mov ax,mar
 	001d5860 push op
 	001d5868 mov op,ax
 	001d5870 farpush bx
 	001d5878 setfuncargs 0x1
 	001d5880 mov ax,0x3a6f20
 	001d588c farcall ax
 	001d5894 farsubsp 0x1
 	001d589c pop op
 	001d58a4 sourceline 0x2666
 	001d58ac mov ax,0x14
 	001d58b8 farpush ax
 	001d58c0 setfuncargs 0x1
 	001d58c8 mov ax,0x426f20
 	001d58d4 farcall ax
 	001d58dc farsubsp 0x1
 	001d58e4 sourceline 0x2667
 	001d58ec push op
 	001d58f4 mov ax,0x0
 	001d5900 farpush ax
 	001d5908 mov ax,0x32
 	001d5914 farpush ax
 	001d591c mov mar,0xdcef20
 	001d5928 mov ax,mar
 	001d5934 mov op,ax
 	001d593c setfuncargs 0x2
 	001d5944 mov ax,0x2fef20
 	001d5950 farcall ax
 	001d5958 farsubsp 0x2
 	001d5960 pop op
 	001d5968 sourceline 0x2668
 	001d5970 mov ax,0x46
 	001d597c farpush ax
 	001d5984 setfuncargs 0x1
 	001d598c mov ax,0x426f20
 	001d5998 farcall ax
 	001d59a0 farsubsp 0x1
 	001d59a8 sourceline 0x2669
 	001d59b0 push op
 	001d59b8 mov ax,0x426
 	001d59c4 farpush ax
 	001d59cc mov ax,0x397
 	001d59d8 farpush ax
 	001d59e0 mov ax,0x0
 	001d59ec farpush ax
 	001d59f4 mov ax,0x3
 	001d5a00 farpush ax
 	001d5a08 mov ax,0x1
 	001d5a14 farpush ax
 	001d5a1c mov mar,0x3cef20
 	001d5a28 mov ax,mar
 	001d5a34 mov op,ax
 	001d5a3c setfuncargs 0x5
 	001d5a44 mov ax,0x536f20
 	001d5a50 farcall ax
 	001d5a58 farsubsp 0x5
 	001d5a60 pop op
 	001d5a68 sourceline 0x266a
 	001d5a70 mov ax,0x19
 	001d5a7c farpush ax
 	001d5a84 setfuncargs 0x1
 	001d5a8c mov ax,0x426f20
 	001d5a98 farcall ax
 	001d5aa0 farsubsp 0x1
 	001d5aa8 sourceline 0x266b
 	001d5ab0 push op
 	001d5ab8 mov ax,0x0
 	001d5ac4 farpush ax
 	001d5acc mov ax,0x32
 	001d5ad8 farpush ax
 	001d5ae0 mov mar,0xdd6f20
 	001d5aec mov ax,mar
 	001d5af8 mov op,ax
 	001d5b00 setfuncargs 0x2
 	001d5b08 mov ax,0x2fef20
 	001d5b14 farcall ax
 	001d5b1c farsubsp 0x2
 	001d5b24 pop op
 	001d5b2c sourceline 0x266c
 	001d5b34 mov ax,0x10e
 	001d5b40 farpush ax
 	001d5b48 setfuncargs 0x1
 	001d5b50 mov ax,0x426f20
 	001d5b5c farcall ax
 	001d5b64 farsubsp 0x1
 	001d5b6c sourceline 0x266d
 	001d5b74 mov ax,0x64
 	001d5b80 mov bx,ax
 	001d5b8c mov mar,0xb9ef20
 	001d5b98 mov ax,mar
 	001d5ba4 push op
 	001d5bac mov op,ax
 	001d5bb4 farpush bx
 	001d5bbc setfuncargs 0x1
 	001d5bc4 mov ax,0xd0ef20
 	001d5bd0 farcall ax
 	001d5bd8 farsubsp 0x1
 	001d5be0 pop op
 	001d5be8 sourceline 0x266e
 	001d5bf0 push op
 	001d5bf8 mov ax,0x7cfe
 	001d5c04 farpush ax
 	001d5c0c mov ax,0x7cfe
 	001d5c18 farpush ax
 	001d5c20 mov ax,0x7cfe
 	001d5c2c farpush ax
 	001d5c34 mov mar,0x42ef20
 	001d5c40 push mar
 	001d5c48 pop mar
 	001d5c50 memread.ptr ax
 	001d5c58 push ax
 	001d5c60 pop mar
 	001d5c68 mov ax,mar
 	001d5c74 push op
 	001d5c7c mov op,ax
 	001d5c84 setfuncargs 0x0
 	001d5c8c mov ax,0x3d6f20
 	001d5c98 farcall ax
 	001d5ca0 pop op
 	001d5ca8 farpush ax
 	001d5cb0 mov mar,0xb9ef20
 	001d5cbc mov ax,mar
 	001d5cc8 mov op,ax
 	001d5cd0 setfuncargs 0x4
 	001d5cd8 mov ax,0xc16f20
 	001d5ce4 farcall ax
 	001d5cec farsubsp 0x4
 	001d5cf4 pop op
 	001d5cfc sourceline 0x266f
 	001d5d04 mov ax,0x14
 	001d5d10 farpush ax
 	001d5d18 setfuncargs 0x1
 	001d5d20 mov ax,0x426f20
 	001d5d2c farcall ax
 	001d5d34 farsubsp 0x1
 	001d5d3c sourceline 0x2670
 	001d5d44 push op
 	001d5d4c mov ax,0x2c69b1
 	001d5d58 farpush ax
 	001d5d60 mov mar,0xb9ef20
 	001d5d6c mov ax,mar
 	001d5d78 mov op,ax
 	001d5d80 setfuncargs 0x1
 	001d5d88 mov ax,0x6f6f20
 	001d5d94 farcall ax
 	001d5d9c farsubsp 0x1
 	001d5da4 pop op
 	001d5dac sourceline 0x2671
 	001d5db4 push op
 	001d5dbc mov ax,0x2c69bc
 	001d5dc8 farpush ax
 	001d5dd0 mov mar,0x3cef20
 	001d5ddc mov ax,mar
 	001d5de8 mov op,ax
 	001d5df0 setfuncargs 0x1
 	001d5df8 mov ax,0x6f6f20
 	001d5e04 farcall ax
 	001d5e0c farsubsp 0x1
 	001d5e14 pop op
 	001d5e1c sourceline 0x2672
 	001d5e24 push op
 	001d5e2c mov ax,0x2c69db
 	001d5e38 farpush ax
 	001d5e40 mov mar,0xb9ef20
 	001d5e4c mov ax,mar
 	001d5e58 mov op,ax
 	001d5e60 setfuncargs 0x1
 	001d5e68 mov ax,0x6f6f20
 	001d5e74 farcall ax
 	001d5e7c farsubsp 0x1
 	001d5e84 pop op
 	001d5e8c sourceline 0x2673
 	001d5e94 push op
 	001d5e9c mov ax,0x2c69f1
 	001d5ea8 farpush ax
 	001d5eb0 mov mar,0x3cef20
 	001d5ebc mov ax,mar
 	001d5ec8 mov op,ax
 	001d5ed0 setfuncargs 0x1
 	001d5ed8 mov ax,0x6f6f20
 	001d5ee4 farcall ax
 	001d5eec farsubsp 0x1
 	001d5ef4 pop op
 	001d5efc sourceline 0x2674
 	001d5f04 push op
 	001d5f0c mov ax,0x2c6a7b
 	001d5f18 farpush ax
 	001d5f20 mov mar,0xb9ef20
 	001d5f2c mov ax,mar
 	001d5f38 mov op,ax
 	001d5f40 setfuncargs 0x1
 	001d5f48 mov ax,0x6f6f20
 	001d5f54 farcall ax
 	001d5f5c farsubsp 0x1
 	001d5f64 pop op
 	001d5f6c sourceline 0x2675
 	001d5f74 push op
 	001d5f7c mov ax,0x2c6a9f
 	001d5f88 farpush ax
 	001d5f90 mov mar,0x3cef20
 	001d5f9c mov ax,mar
 	001d5fa8 mov op,ax
 	001d5fb0 setfuncargs 0x1
 	001d5fb8 mov ax,0x6f6f20
 	001d5fc4 farcall ax
 	001d5fcc farsubsp 0x1
 	001d5fd4 pop op
 	001d5fdc sourceline 0x2676
 	001d5fe4 push op
 	001d5fec mov ax,0x0
 	001d5ff8 farpush ax
 	001d6000 mov ax,0x32
 	001d600c farpush ax
 	001d6014 mov mar,0xd16f20
 	001d6020 mov ax,mar
 	001d602c mov op,ax
 	001d6034 setfuncargs 0x2
 	001d603c mov ax,0x2fef20
 	001d6048 farcall ax
 	001d6050 farsubsp 0x2
 	001d6058 pop op
 	001d6060 sourceline 0x2677
 	001d6068 push op
 	001d6070 mov ax,0x426
 	001d607c farpush ax
 	001d6084 mov ax,0x397
 	001d6090 farpush ax
 	001d6098 mov ax,0x0
 	001d60a4 farpush ax
 	001d60ac mov ax,0x2
 	001d60b8 farpush ax
 	001d60c0 mov ax,0x2
 	001d60cc farpush ax
 	001d60d4 mov mar,0x3cef20
 	001d60e0 mov ax,mar
 	001d60ec mov op,ax
 	001d60f4 setfuncargs 0x5
 	001d60fc mov ax,0x536f20
 	001d6108 farcall ax
 	001d6110 farsubsp 0x5
 	001d6118 pop op
 	001d6120 sourceline 0x2678
 	001d6128 push op
 	001d6130 mov ax,0x2
 	001d613c farpush ax
 	001d6144 mov mar,0x3cef20
 	001d6150 mov ax,mar
 	001d615c mov op,ax
 	001d6164 setfuncargs 0x1
 	001d616c mov ax,0x51ef20
 	001d6178 farcall ax
 	001d6180 farsubsp 0x1
 	001d6188 pop op
 	001d6190 sourceline 0x2679
 	001d6198 mov ax,0x0
 	001d61a4 mov bx,ax
 	001d61b0 mov mar,0x3cef20
 	001d61bc mov ax,mar
 	001d61c8 push op
 	001d61d0 mov op,ax
 	001d61d8 farpush bx
 	001d61e0 setfuncargs 0x1
 	001d61e8 mov ax,0x766f20
 	001d61f4 farcall ax
 	001d61fc farsubsp 0x1
 	001d6204 pop op
 	001d620c sourceline 0x267a
 	001d6214 mov mar,0x3cef20
 	001d6220 mov ax,mar
 	001d622c push op
 	001d6234 mov op,ax
 	001d623c setfuncargs 0x0
 	001d6244 mov ax,0x78ef20
 	001d6250 farcall ax
 	001d6258 pop op
 	001d6260 push ax
 	001d6268 mov ax,0x7
 	001d6274 pop bx
 	001d627c add bx,ax
 	001d6288 mov ax,bx
 	001d6294 mov bx,ax
 	001d62a0 mov mar,0x3cef20
 	001d62ac mov ax,mar
 	001d62b8 push op
 	001d62c0 mov op,ax
 	001d62c8 farpush bx
 	001d62d0 setfuncargs 0x1
 	001d62d8 mov ax,0x526f20
 	001d62e4 farcall ax
 	001d62ec farsubsp 0x1
 	001d62f4 pop op
 	001d62fc sourceline 0x267b
 	001d6304 mov ax,0x1
 	001d6310 mov bx,ax
 	001d631c mov mar,0x3cef20
 	001d6328 mov ax,mar
 	001d6334 push op
 	001d633c mov op,ax
 	001d6344 farpush bx
 	001d634c setfuncargs 0x1
 	001d6354 mov ax,0x69ef20
 	001d6360 farcall ax
 	001d6368 farsubsp 0x1
 	001d6370 pop op
 	001d6378 sourceline 0x267c
 	001d6380 push op
 	001d6388 mov ax,0x2c6ab9
 	001d6394 farpush ax
 	001d639c mov ax,0x138
 	001d63a8 farpush ax
 	001d63b0 mov ax,0x92
 	001d63bc farpush ax
 	001d63c4 mov ax,0x0
 	001d63d0 farpush ax
 	001d63d8 mov mar,0x3cef20
 	001d63e4 mov ax,mar
 	001d63f0 mov op,ax
 	001d63f8 setfuncargs 0x4
 	001d6400 mov ax,0x6aef20
 	001d640c farcall ax
 	001d6414 farsubsp 0x4
 	001d641c pop op
 	001d6424 sourceline 0x267d
 	001d642c mov ax,0x5
 	001d6438 farpush ax
 	001d6440 setfuncargs 0x1
 	001d6448 mov ax,0x426f20
 	001d6454 farcall ax
 	001d645c farsubsp 0x1
 	001d6464 sourceline 0x267e
 	001d646c push op
 	001d6474 mov ax,0x131
 	001d6480 farpush ax
 	001d6488 mov ax,0x397
 	001d6494 farpush ax
 	001d649c mov ax,0x92
 	001d64a8 farpush ax
 	001d64b0 mov ax,0x130
 	001d64bc farpush ax
 	001d64c4 mov mar,0x3cef20
 	001d64d0 mov ax,mar
 	001d64dc mov op,ax
 	001d64e4 setfuncargs 0x4
 	001d64ec mov ax,0xb2ef20
 	001d64f8 farcall ax
 	001d6500 farsubsp 0x4
 	001d6508 pop op
 	001d6510 sourceline 0x267f
 	001d6518 push op
 	001d6520 mov ax,0x397
 	001d652c farpush ax
 	001d6534 mov ax,0x2
 	001d6540 farpush ax
 	001d6548 mov mar,0x3cef20
 	001d6554 mov ax,mar
 	001d6560 mov op,ax
 	001d6568 setfuncargs 0x2
 	001d6570 mov ax,0x6eef20
 	001d657c farcall ax
 	001d6584 farsubsp 0x2
 	001d658c pop op
 	001d6594 sourceline 0x2680
 	001d659c push op
 	001d65a4 mov ax,0x1
 	001d65b0 farpush ax
 	001d65b8 mov ax,0x0
 	001d65c4 farpush ax
 	001d65cc mov ax,0x2
 	001d65d8 farpush ax
 	001d65e0 mov ax,0x1
 	001d65ec farpush ax
 	001d65f4 mov ax,0x0
 	001d6600 farpush ax
 	001d6608 mov ax,0x40200000
 	001d6614 farpush ax
 	001d661c mov mar,0xe06f20
 	001d6628 mov ax,mar
 	001d6634 mov op,ax
 	001d663c setfuncargs 0x6
 	001d6644 mov ax,0xe0ef20
 	001d6650 farcall ax
 	001d6658 farsubsp 0x6
 	001d6660 pop op
 	001d6668 sourceline 0x2681
 	001d6670 mov ax,0x1
 	001d667c mov bx,ax
 	001d6688 mov mar,0xe06f20
 	001d6694 mov ax,mar
 	001d66a0 push op
 	001d66a8 mov op,ax
 	001d66b0 farpush bx
 	001d66b8 setfuncargs 0x1
 	001d66c0 mov ax,0x3a6f20
 	001d66cc farcall ax
 	001d66d4 farsubsp 0x1
 	001d66dc pop op
 	001d66e4 sourceline 0x2682
 	001d66ec push op
 	001d66f4 mov ax,0x130
 	001d6700 farpush ax
 	001d6708 mov ax,0x397
 	001d6714 farpush ax
 	001d671c mov mar,0x3cef20
 	001d6728 mov ax,mar
 	001d6734 push op
 	001d673c mov op,ax
 	001d6744 setfuncargs 0x0
 	001d674c mov ax,0x78ef20
 	001d6758 farcall ax
 	001d6760 pop op
 	001d6768 farpush ax
 	001d6770 mov ax,0x154
 	001d677c farpush ax
 	001d6784 mov mar,0x3cef20
 	001d6790 mov ax,mar
 	001d679c mov op,ax
 	001d67a4 setfuncargs 0x4
 	001d67ac mov ax,0xb2ef20
 	001d67b8 farcall ax
 	001d67c0 farsubsp 0x4
 	001d67c8 pop op
 	001d67d0 sourceline 0x2683
 	001d67d8 mov ax,0x96
 	001d67e4 farpush ax
 	001d67ec setfuncargs 0x1
 	001d67f4 mov ax,0x426f20
 	001d6800 farcall ax
 	001d6808 farsubsp 0x1
 	001d6810 sourceline 0x2684
 	001d6818 mov ax,0x0
 	001d6824 mov bx,ax
 	001d6830 mov mar,0xb9ef20
 	001d683c mov ax,mar
 	001d6848 push op
 	001d6850 mov op,ax
 	001d6858 farpush bx
 	001d6860 setfuncargs 0x1
 	001d6868 mov ax,0xd0ef20
 	001d6874 farcall ax
 	001d687c farsubsp 0x1
 	001d6884 pop op
 	001d688c sourceline 0x2685
 	001d6894 push op
 	001d689c mov ax,0x77
 	001d68a8 farpush ax
 	001d68b0 mov mar,0xb9ef20
 	001d68bc mov ax,mar
 	001d68c8 mov op,ax
 	001d68d0 setfuncargs 0x1
 	001d68d8 mov ax,0x51ef20
 	001d68e4 farcall ax
 	001d68ec farsubsp 0x1
 	001d68f4 pop op
 	001d68fc sourceline 0x2686
 	001d6904 mov ax,0x50
 	001d6910 mov bx,ax
 	001d691c mov mar,0xb9ef20
 	001d6928 mov ax,mar
 	001d6934 push op
 	001d693c mov op,ax
 	001d6944 farpush bx
 	001d694c setfuncargs 0x1
 	001d6954 mov ax,0x70ef20
 	001d6960 farcall ax
 	001d6968 farsubsp 0x1
 	001d6970 pop op
 	001d6978 sourceline 0x2687
 	001d6980 mov ax,0x7f
 	001d698c mov bx,ax
 	001d6998 mov mar,0xb9ef20
 	001d69a4 mov ax,mar
 	001d69b0 push op
 	001d69b8 mov op,ax
 	001d69c0 farpush bx
 	001d69c8 setfuncargs 0x1
 	001d69d0 mov ax,0x526f20
 	001d69dc farcall ax
 	001d69e4 farsubsp 0x1
 	001d69ec pop op
 	001d69f4 sourceline 0x2688
 	001d69fc push op
 	001d6a04 mov ax,0x1
 	001d6a10 farpush ax
 	001d6a18 mov ax,0x0
 	001d6a24 farpush ax
 	001d6a2c mov ax,0x1
 	001d6a38 farpush ax
 	001d6a40 mov ax,0x1
 	001d6a4c farpush ax
 	001d6a54 mov ax,0x64
 	001d6a60 farpush ax
 	001d6a68 mov ax,0x3fc00000
 	001d6a74 farpush ax
 	001d6a7c mov mar,0xe06f20
 	001d6a88 mov ax,mar
 	001d6a94 mov op,ax
 	001d6a9c setfuncargs 0x6
 	001d6aa4 mov ax,0xe16f20
 	001d6ab0 farcall ax
 	001d6ab8 farsubsp 0x6
 	001d6ac0 pop op
 	001d6ac8 sourceline 0x2689
 	001d6ad0 mov ax,0x0
 	001d6adc mov bx,ax
 	001d6ae8 mov mar,0xe06f20
 	001d6af4 mov ax,mar
 	001d6b00 push op
 	001d6b08 mov op,ax
 	001d6b10 farpush bx
 	001d6b18 setfuncargs 0x1
 	001d6b20 mov ax,0x3a6f20
 	001d6b2c farcall ax
 	001d6b34 farsubsp 0x1
 	001d6b3c pop op
 	001d6b44 sourceline 0x268a
 	001d6b4c mov ax,0xa
 	001d6b58 farpush ax
 	001d6b60 setfuncargs 0x1
 	001d6b68 mov ax,0x426f20
 	001d6b74 farcall ax
 	001d6b7c farsubsp 0x1
 	001d6b84 sourceline 0x268b
 	001d6b8c push op
 	001d6b94 mov ax,0x426
 	001d6ba0 farpush ax
 	001d6ba8 mov ax,0x397
 	001d6bb4 farpush ax
 	001d6bbc mov ax,0x0
 	001d6bc8 farpush ax
 	001d6bd0 mov ax,0x3
 	001d6bdc farpush ax
 	001d6be4 mov ax,0x0
 	001d6bf0 farpush ax
 	001d6bf8 mov mar,0xb9ef20
 	001d6c04 mov ax,mar
 	001d6c10 mov op,ax
 	001d6c18 setfuncargs 0x5
 	001d6c20 mov ax,0x536f20
 	001d6c2c farcall ax
 	001d6c34 farsubsp 0x5
 	001d6c3c pop op
 	001d6c44 sourceline 0x268c
 	001d6c4c push op
 	001d6c54 mov ax,0x78
 	001d6c60 farpush ax
 	001d6c68 mov mar,0xb9ef20
 	001d6c74 mov ax,mar
 	001d6c80 mov op,ax
 	001d6c88 setfuncargs 0x1
 	001d6c90 mov ax,0x51ef20
 	001d6c9c farcall ax
 	001d6ca4 farsubsp 0x1
 	001d6cac pop op
 	001d6cb4 sourceline 0x268d
 	001d6cbc mov ax,0x74
 	001d6cc8 mov bx,ax
 	001d6cd4 mov mar,0xb9ef20
 	001d6ce0 mov ax,mar
 	001d6cec push op
 	001d6cf4 mov op,ax
 	001d6cfc farpush bx
 	001d6d04 setfuncargs 0x1
 	001d6d0c mov ax,0xcaef20
 	001d6d18 farcall ax
 	001d6d20 farsubsp 0x1
 	001d6d28 pop op
 	001d6d30 sourceline 0x268e
 	001d6d38 mov ax,0x80
 	001d6d44 mov bx,ax
 	001d6d50 mov mar,0xb9ef20
 	001d6d5c mov ax,mar
 	001d6d68 push op
 	001d6d70 mov op,ax
 	001d6d78 farpush bx
 	001d6d80 setfuncargs 0x1
 	001d6d88 mov ax,0x526f20
 	001d6d94 farcall ax
 	001d6d9c farsubsp 0x1
 	001d6da4 pop op
 	001d6dac sourceline 0x268f
 	001d6db4 mov ax,0x3
 	001d6dc0 mov bx,ax
 	001d6dcc mov mar,0xb9ef20
 	001d6dd8 mov ax,mar
 	001d6de4 push op
 	001d6dec mov op,ax
 	001d6df4 farpush bx
 	001d6dfc setfuncargs 0x1
 	001d6e04 mov ax,0xe1ef20
 	001d6e10 farcall ax
 	001d6e18 farsubsp 0x1
 	001d6e20 pop op
 	001d6e28 sourceline 0x2690
 	001d6e30 push op
 	001d6e38 mov ax,0x2
 	001d6e44 farpush ax
 	001d6e4c mov ax,0x2
 	001d6e58 farpush ax
 	001d6e60 mov mar,0xb9ef20
 	001d6e6c mov ax,mar
 	001d6e78 mov op,ax
 	001d6e80 setfuncargs 0x2
 	001d6e88 mov ax,0xe26f20
 	001d6e94 farcall ax
 	001d6e9c farsubsp 0x2
 	001d6ea4 pop op
 	001d6eac sourceline 0x2691
 	001d6eb4 mov ax,0x2
 	001d6ec0 farpush ax
 	001d6ec8 setfuncargs 0x1
 	001d6ed0 mov ax,0xbd6f20
 	001d6edc farcall ax
 	001d6ee4 farsubsp 0x1
 	001d6eec sourceline 0x2692
 	001d6ef4 mov ax,0x87
 	001d6f00 farpush ax
 	001d6f08 mov ax,0x11
 	001d6f14 farpush ax
 	001d6f1c setfuncargs 0x2
 	001d6f24 mov ax,0xc0ef20
 	001d6f30 farcall ax
 	001d6f38 farsubsp 0x2
 	001d6f40 sourceline 0x2693
 	001d6f48 push op
 	001d6f50 mov ax,0x131
 	001d6f5c farpush ax
 	001d6f64 mov ax,0x397
 	001d6f70 farpush ax
 	001d6f78 mov ax,0x1c1
 	001d6f84 farpush ax
 	001d6f8c mov ax,-0x270f
 	001d6f98 farpush ax
 	001d6fa0 mov mar,0xb9ef20
 	001d6fac mov ax,mar
 	001d6fb8 mov op,ax
 	001d6fc0 setfuncargs 0x4
 	001d6fc8 mov ax,0xb2ef20
 	001d6fd4 farcall ax
 	001d6fdc farsubsp 0x4
 	001d6fe4 pop op
 	001d6fec sourceline 0x2694
 	001d6ff4 mov ax,0x50
 	001d7000 farpush ax
 	001d7008 setfuncargs 0x1
 	001d7010 mov ax,0x426f20
 	001d701c farcall ax
 	001d7024 farsubsp 0x1
 	001d702c sourceline 0x2695
 	001d7034 push op
 	001d703c mov ax,0x7cfe
 	001d7048 farpush ax
 	001d7050 mov ax,0x7cfe
 	001d705c farpush ax
 	001d7064 mov ax,0x7cfe
 	001d7070 farpush ax
 	001d7078 mov ax,0x0
 	001d7084 farpush ax
 	001d708c mov mar,0xb9ef20
 	001d7098 mov ax,mar
 	001d70a4 mov op,ax
 	001d70ac setfuncargs 0x4
 	001d70b4 mov ax,0xc16f20
 	001d70c0 farcall ax
 	001d70c8 farsubsp 0x4
 	001d70d0 pop op
 	001d70d8 sourceline 0x2696
 	001d70e0 push op
 	001d70e8 mov ax,0x1
 	001d70f4 farpush ax
 	001d70fc mov ax,0x0
 	001d7108 farpush ax
 	001d7110 mov ax,0x1
 	001d711c farpush ax
 	001d7124 mov ax,0x1
 	001d7130 farpush ax
 	001d7138 mov ax,0x64
 	001d7144 farpush ax
 	001d714c mov ax,0x3fc00000
 	001d7158 farpush ax
 	001d7160 mov mar,0xe06f20
 	001d716c mov ax,mar
 	001d7178 mov op,ax
 	001d7180 setfuncargs 0x6
 	001d7188 mov ax,0xe16f20
 	001d7194 farcall ax
 	001d719c farsubsp 0x6
 	001d71a4 pop op
 	001d71ac sourceline 0x2697
 	001d71b4 mov ax,0x2
 	001d71c0 farpush ax
 	001d71c8 setfuncargs 0x1
 	001d71d0 mov ax,0xc1ef20
 	001d71dc farcall ax
 	001d71e4 farsubsp 0x1
 	001d71ec sourceline 0x2698
 	001d71f4 push op
 	001d71fc mov ax,0x397
 	001d7208 farpush ax
 	001d7210 mov ax,0x1
 	001d721c farpush ax
 	001d7224 mov mar,0x3cef20
 	001d7230 mov ax,mar
 	001d723c mov op,ax
 	001d7244 setfuncargs 0x2
 	001d724c mov ax,0x6eef20
 	001d7258 farcall ax
 	001d7260 farsubsp 0x2
 	001d7268 pop op
 	001d7270 sourceline 0x2699
 	001d7278 push op
 	001d7280 mov ax,0x130
 	001d728c farpush ax
 	001d7294 mov ax,0x397
 	001d72a0 farpush ax
 	001d72a8 mov mar,0x3cef20
 	001d72b4 mov ax,mar
 	001d72c0 push op
 	001d72c8 mov op,ax
 	001d72d0 setfuncargs 0x0
 	001d72d8 mov ax,0x78ef20
 	001d72e4 farcall ax
 	001d72ec pop op
 	001d72f4 farpush ax
 	001d72fc mov ax,0x119
 	001d7308 farpush ax
 	001d7310 mov mar,0x3cef20
 	001d731c mov ax,mar
 	001d7328 mov op,ax
 	001d7330 setfuncargs 0x4
 	001d7338 mov ax,0xb2ef20
 	001d7344 farcall ax
 	001d734c farsubsp 0x4
 	001d7354 pop op
 	001d735c sourceline 0x269a
 	001d7364 mov ax,0x0
 	001d7370 mov bx,ax
 	001d737c mov mar,0xe06f20
 	001d7388 mov ax,mar
 	001d7394 push op
 	001d739c mov op,ax
 	001d73a4 farpush bx
 	001d73ac setfuncargs 0x1
 	001d73b4 mov ax,0x3a6f20
 	001d73c0 farcall ax
 	001d73c8 farsubsp 0x1
 	001d73d0 pop op
 	001d73d8 sourceline 0x269b
 	001d73e0 mov ax,0x1
 	001d73ec mov bx,ax
 	001d73f8 mov mar,0x336f20
 	001d7404 mov ax,mar
 	001d7410 farpush bx
 	001d7418 setfuncargs 0x1
 	001d7420 mov ax,0x43ef20
 	001d742c farcall ax
 	001d7434 farsubsp 0x1
 	001d743c sourceline 0x269c
 	001d7444 mov ax,0x4
 	001d7450 mov mar,0xb8ef20
 	001d745c memwrite4 ax
 	001d7464 sourceline 0x269d
 	001d746c mov ax,0x0
 	001d7478 mov mar,0x5eef20
 	001d7484 memwrite4 ax
 	001d748c sourceline 0x269e
 	001d7494 jmp 0x001d7e8c
		001d7e8c: UNCONDITIONAL_JUMP

	[001d749c]
		001d56c8: CONDITIONAL_JUMP
 	001d749c sourceline 0x26a1
 	001d74a4 mov mar,0x42ef20
 	001d74b0 push mar
 	001d74b8 pop mar
 	001d74c0 memread.ptr ax
 	001d74c8 push ax
 	001d74d0 pop mar
 	001d74d8 mov ax,mar
 	001d74e4 push op
 	001d74ec mov op,ax
 	001d74f4 setfuncargs 0x0
 	001d74fc mov ax,0x3d6f20
 	001d7508 farcall ax
 	001d7510 pop op
 	001d7518 push ax
 	001d7520 mov mar,0xb9ef20
 	001d752c mov ax,mar
 	001d7538 push op
 	001d7540 mov op,ax
 	001d7548 setfuncargs 0x0
 	001d7550 mov ax,0x3d6f20
 	001d755c farcall ax
 	001d7564 pop op
 	001d756c pop bx
 	001d7574 cmpneq bx,ax
 	001d7580 mov ax,bx
 	001d758c jz 0x001d7d64
		001d7d64: CONDITIONAL_JUMP
		001d7594: FALL_THROUGH

	[001d7594]
		001d749c: FALL_THROUGH
 	001d7594 sourceline 0x26a3
 	001d759c mov mar,0xb8ef20
 	001d75a8 memread4 ax
 	001d75b0 push ax
 	001d75b8 mov ax,0x4
 	001d75c4 pop bx
 	001d75cc cmpneq bx,ax
 	001d75d8 mov ax,bx
 	001d75e4 jz 0x001d7c2c
		001d7c2c: CONDITIONAL_JUMP
		001d75ec: FALL_THROUGH

	[001d75ec]
		001d7594: FALL_THROUGH
 	001d75ec sourceline 0x26a5
 	001d75f4 mov ax,0x0
 	001d7600 mov bx,ax
 	001d760c mov mar,0x336f20
 	001d7618 mov ax,mar
 	001d7624 farpush bx
 	001d762c setfuncargs 0x1
 	001d7634 mov ax,0x43ef20
 	001d7640 farcall ax
 	001d7648 farsubsp 0x1
 	001d7650 sourceline 0x26a6
 	001d7658 mov ax,0x0
 	001d7664 mov bx,ax
 	001d7670 mov mar,0x31ef20
 	001d767c mov ax,mar
 	001d7688 push op
 	001d7690 mov op,ax
 	001d7698 farpush bx
 	001d76a0 setfuncargs 0x1
 	001d76a8 mov ax,0x3a6f20
 	001d76b4 farcall ax
 	001d76bc farsubsp 0x1
 	001d76c4 pop op
 	001d76cc sourceline 0x26a7
 	001d76d4 mov ax,0x14
 	001d76e0 farpush ax
 	001d76e8 setfuncargs 0x1
 	001d76f0 mov ax,0x426f20
 	001d76fc farcall ax
 	001d7704 farsubsp 0x1
 	001d770c sourceline 0x26a8
 	001d7714 push op
 	001d771c mov ax,0x0
 	001d7728 farpush ax
 	001d7730 mov ax,0x32
 	001d773c farpush ax
 	001d7744 mov mar,0xdcef20
 	001d7750 mov ax,mar
 	001d775c mov op,ax
 	001d7764 setfuncargs 0x2
 	001d776c mov ax,0x2fef20
 	001d7778 farcall ax
 	001d7780 farsubsp 0x2
 	001d7788 pop op
 	001d7790 sourceline 0x26a9
 	001d7798 mov ax,0x46
 	001d77a4 farpush ax
 	001d77ac setfuncargs 0x1
 	001d77b4 mov ax,0x426f20
 	001d77c0 farcall ax
 	001d77c8 farsubsp 0x1
 	001d77d0 sourceline 0x26aa
 	001d77d8 push op
 	001d77e0 mov ax,0x426
 	001d77ec farpush ax
 	001d77f4 mov ax,0x397
 	001d7800 farpush ax
 	001d7808 mov ax,0x0
 	001d7814 farpush ax
 	001d781c mov ax,0x3
 	001d7828 farpush ax
 	001d7830 mov ax,0x1
 	001d783c farpush ax
 	001d7844 mov mar,0x3cef20
 	001d7850 mov ax,mar
 	001d785c mov op,ax
 	001d7864 setfuncargs 0x5
 	001d786c mov ax,0x536f20
 	001d7878 farcall ax
 	001d7880 farsubsp 0x5
 	001d7888 pop op
 	001d7890 sourceline 0x26ab
 	001d7898 push op
 	001d78a0 mov ax,0x0
 	001d78ac farpush ax
 	001d78b4 mov ax,0x32
 	001d78c0 farpush ax
 	001d78c8 mov mar,0xdeef20
 	001d78d4 mov ax,mar
 	001d78e0 mov op,ax
 	001d78e8 setfuncargs 0x2
 	001d78f0 mov ax,0x2fef20
 	001d78fc farcall ax
 	001d7904 farsubsp 0x2
 	001d790c pop op
 	001d7914 sourceline 0x26ac
 	001d791c mov ax,0x190
 	001d7928 farpush ax
 	001d7930 setfuncargs 0x1
 	001d7938 mov ax,0x426f20
 	001d7944 farcall ax
 	001d794c farsubsp 0x1
 	001d7954 sourceline 0x26ad
 	001d795c mov ax,0x1
 	001d7968 mov bx,ax
 	001d7974 mov mar,0x3cef20
 	001d7980 mov ax,mar
 	001d798c push op
 	001d7994 mov op,ax
 	001d799c farpush bx
 	001d79a4 setfuncargs 0x1
 	001d79ac mov ax,0x69ef20
 	001d79b8 farcall ax
 	001d79c0 farsubsp 0x1
 	001d79c8 pop op
 	001d79d0 sourceline 0x26ae
 	001d79d8 push op
 	001d79e0 mov ax,0x2c6dfc
 	001d79ec farpush ax
 	001d79f4 mov ax,0x138
 	001d7a00 farpush ax
 	001d7a08 mov ax,0x92
 	001d7a14 farpush ax
 	001d7a1c mov ax,0x0
 	001d7a28 farpush ax
 	001d7a30 mov mar,0x3cef20
 	001d7a3c mov ax,mar
 	001d7a48 mov op,ax
 	001d7a50 setfuncargs 0x4
 	001d7a58 mov ax,0x6aef20
 	001d7a64 farcall ax
 	001d7a6c farsubsp 0x4
 	001d7a74 pop op
 	001d7a7c sourceline 0x26af
 	001d7a84 push op
 	001d7a8c mov ax,0x427
 	001d7a98 farpush ax
 	001d7aa0 mov ax,0x397
 	001d7aac farpush ax
 	001d7ab4 mov ax,0x0
 	001d7ac0 farpush ax
 	001d7ac8 mov ax,0x3
 	001d7ad4 farpush ax
 	001d7adc mov ax,0x1
 	001d7ae8 farpush ax
 	001d7af0 mov mar,0x3cef20
 	001d7afc mov ax,mar
 	001d7b08 mov op,ax
 	001d7b10 setfuncargs 0x5
 	001d7b18 mov ax,0x536f20
 	001d7b24 farcall ax
 	001d7b2c farsubsp 0x5
 	001d7b34 pop op
 	001d7b3c sourceline 0x26b0
 	001d7b44 mov ax,0x1
 	001d7b50 mov bx,ax
 	001d7b5c mov mar,0x336f20
 	001d7b68 mov ax,mar
 	001d7b74 farpush bx
 	001d7b7c setfuncargs 0x1
 	001d7b84 mov ax,0x43ef20
 	001d7b90 farcall ax
 	001d7b98 farsubsp 0x1
 	001d7ba0 sourceline 0x26b1
 	001d7ba8 mov ax,0x1
 	001d7bb4 mov bx,ax
 	001d7bc0 mov mar,0x31ef20
 	001d7bcc mov ax,mar
 	001d7bd8 push op
 	001d7be0 mov op,ax
 	001d7be8 farpush bx
 	001d7bf0 setfuncargs 0x1
 	001d7bf8 mov ax,0x3a6f20
 	001d7c04 farcall ax
 	001d7c0c farsubsp 0x1
 	001d7c14 pop op
 	001d7c1c sourceline 0x26b2
 	001d7c24 jmp 0x001d7d54
		001d7d54: UNCONDITIONAL_JUMP

	[001d7c2c]
		001d7594: CONDITIONAL_JUMP
 	001d7c2c sourceline 0x26b5
 	001d7c34 mov ax,0x1
 	001d7c40 mov bx,ax
 	001d7c4c mov mar,0x3cef20
 	001d7c58 mov ax,mar
 	001d7c64 push op
 	001d7c6c mov op,ax
 	001d7c74 farpush bx
 	001d7c7c setfuncargs 0x1
 	001d7c84 mov ax,0x69ef20
 	001d7c90 farcall ax
 	001d7c98 farsubsp 0x1
 	001d7ca0 pop op
 	001d7ca8 sourceline 0x26b6
 	001d7cb0 push op
 	001d7cb8 mov ax,0x2c6b18
 	001d7cc4 farpush ax
 	001d7ccc mov ax,0x138
 	001d7cd8 farpush ax
 	001d7ce0 mov ax,0x92
 	001d7cec farpush ax
 	001d7cf4 mov ax,0x0
 	001d7d00 farpush ax
 	001d7d08 mov mar,0x3cef20
 	001d7d14 mov ax,mar
 	001d7d20 mov op,ax
 	001d7d28 setfuncargs 0x4
 	001d7d30 mov ax,0x6aef20
 	001d7d3c farcall ax
 	001d7d44 farsubsp 0x4
 	001d7d4c pop op
		001d7d54: FALL_THROUGH

	[001d7d54]
		001d75ec: UNCONDITIONAL_JUMP
		001d7c2c: FALL_THROUGH
 	001d7d54 sourceline 0x26b8
 	001d7d5c jmp 0x001d7e8c
		001d7e8c: UNCONDITIONAL_JUMP

	[001d7d64]
		001d749c: CONDITIONAL_JUMP
 	001d7d64 sourceline 0x26bb
 	001d7d6c mov ax,0x1
 	001d7d78 mov bx,ax
 	001d7d84 mov mar,0x3cef20
 	001d7d90 mov ax,mar
 	001d7d9c push op
 	001d7da4 mov op,ax
 	001d7dac farpush bx
 	001d7db4 setfuncargs 0x1
 	001d7dbc mov ax,0x69ef20
 	001d7dc8 farcall ax
 	001d7dd0 farsubsp 0x1
 	001d7dd8 pop op
 	001d7de0 sourceline 0x26bc
 	001d7de8 push op
 	001d7df0 mov ax,0x2c6b2a
 	001d7dfc farpush ax
 	001d7e04 mov ax,0x138
 	001d7e10 farpush ax
 	001d7e18 mov ax,0x92
 	001d7e24 farpush ax
 	001d7e2c mov ax,0x0
 	001d7e38 farpush ax
 	001d7e40 mov mar,0x3cef20
 	001d7e4c mov ax,mar
 	001d7e58 mov op,ax
 	001d7e60 setfuncargs 0x4
 	001d7e68 mov ax,0x6aef20
 	001d7e74 farcall ax
 	001d7e7c farsubsp 0x4
 	001d7e84 pop op
		001d7e8c: FALL_THROUGH

	[001d7e8c]
		001d56b8: UNCONDITIONAL_JUMP
		001d5720: UNCONDITIONAL_JUMP
		001d7d54: UNCONDITIONAL_JUMP
		001d7d64: FALL_THROUGH
 	001d7e8c sourceline 0x26c0
 	001d7e94 jmp 0x001dc30c
		001dc30c: UNCONDITIONAL_JUMP

	[001d7e9c]
		001d4718: CONDITIONAL_JUMP
 	001d7e9c sourceline 0x26c2
 	001d7ea4 mov mar,0x7a6f20
 	001d7eb0 mov ax,mar
 	001d7ebc push op
 	001d7ec4 mov op,ax
 	001d7ecc setfuncargs 0x0
 	001d7ed4 mov ax,0x346f20
 	001d7ee0 farcall ax
 	001d7ee8 pop op
 	001d7ef0 push ax
 	001d7ef8 mov ax,0x8ef
 	001d7f04 pop bx
 	001d7f0c cmpeq bx,ax
 	001d7f18 mov ax,bx
 	001d7f24 jz 0x001d8cb8
		001d8cb8: CONDITIONAL_JUMP
		001d7f2c: FALL_THROUGH

	[001d7f2c]
		001d7e9c: FALL_THROUGH
 	001d7f2c sourceline 0x26c4
 	001d7f34 mov mar,0xb76f20
 	001d7f40 mov ax,mar
 	001d7f4c push op
 	001d7f54 mov op,ax
 	001d7f5c setfuncargs 0x0
 	001d7f64 mov ax,0x3d6f20
 	001d7f70 farcall ax
 	001d7f78 pop op
 	001d7f80 push ax
 	001d7f88 mov mar,0x3cef20
 	001d7f94 mov ax,mar
 	001d7fa0 push op
 	001d7fa8 mov op,ax
 	001d7fb0 setfuncargs 0x0
 	001d7fb8 mov ax,0x3d6f20
 	001d7fc4 farcall ax
 	001d7fcc pop op
 	001d7fd4 pop bx
 	001d7fdc cmpeq bx,ax
 	001d7fe8 mov ax,bx
 	001d7ff4 jz 0x001d8134
		001d8134: CONDITIONAL_JUMP
		001d7ffc: FALL_THROUGH

	[001d7ffc]
		001d7f2c: FALL_THROUGH
 	001d7ffc sourceline 0x26c6
 	001d8004 mov ax,0x1
 	001d8010 mov bx,ax
 	001d801c mov mar,0x3cef20
 	001d8028 mov ax,mar
 	001d8034 push op
 	001d803c mov op,ax
 	001d8044 farpush bx
 	001d804c setfuncargs 0x1
 	001d8054 mov ax,0x69ef20
 	001d8060 farcall ax
 	001d8068 farsubsp 0x1
 	001d8070 pop op
 	001d8078 sourceline 0x26c7
 	001d8080 push op
 	001d8088 mov ax,0x2c6b54
 	001d8094 farpush ax
 	001d809c mov ax,0x138
 	001d80a8 farpush ax
 	001d80b0 mov ax,0x92
 	001d80bc farpush ax
 	001d80c4 mov ax,0x0
 	001d80d0 farpush ax
 	001d80d8 mov mar,0x3cef20
 	001d80e4 mov ax,mar
 	001d80f0 mov op,ax
 	001d80f8 setfuncargs 0x4
 	001d8100 mov ax,0x6aef20
 	001d810c farcall ax
 	001d8114 farsubsp 0x4
 	001d811c pop op
 	001d8124 sourceline 0x26c8
 	001d812c jmp 0x001d8ca8
		001d8ca8: UNCONDITIONAL_JUMP

	[001d8134]
		001d7f2c: CONDITIONAL_JUMP
 	001d8134 sourceline 0x26cb
 	001d813c mov mar,0xde6f20
 	001d8148 memread4 ax
 	001d8150 lnot ax
 	001d8158 jz 0x001d87a0
		001d87a0: CONDITIONAL_JUMP
		001d8160: FALL_THROUGH

	[001d8160]
		001d8134: FALL_THROUGH
 	001d8160 sourceline 0x26cd
 	001d8168 mov ax,0x0
 	001d8174 mov bx,ax
 	001d8180 mov mar,0x336f20
 	001d818c mov ax,mar
 	001d8198 farpush bx
 	001d81a0 setfuncargs 0x1
 	001d81a8 mov ax,0x43ef20
 	001d81b4 farcall ax
 	001d81bc farsubsp 0x1
 	001d81c4 sourceline 0x26ce
 	001d81cc mov ax,0x0
 	001d81d8 mov bx,ax
 	001d81e4 mov mar,0x31ef20
 	001d81f0 mov ax,mar
 	001d81fc push op
 	001d8204 mov op,ax
 	001d820c farpush bx
 	001d8214 setfuncargs 0x1
 	001d821c mov ax,0x3a6f20
 	001d8228 farcall ax
 	001d8230 farsubsp 0x1
 	001d8238 pop op
 	001d8240 sourceline 0x26cf
 	001d8248 mov ax,0x14
 	001d8254 farpush ax
 	001d825c setfuncargs 0x1
 	001d8264 mov ax,0x426f20
 	001d8270 farcall ax
 	001d8278 farsubsp 0x1
 	001d8280 sourceline 0x26d0
 	001d8288 push op
 	001d8290 mov ax,0x0
 	001d829c farpush ax
 	001d82a4 mov ax,0x32
 	001d82b0 farpush ax
 	001d82b8 mov mar,0xdcef20
 	001d82c4 mov ax,mar
 	001d82d0 mov op,ax
 	001d82d8 setfuncargs 0x2
 	001d82e0 mov ax,0x2fef20
 	001d82ec farcall ax
 	001d82f4 farsubsp 0x2
 	001d82fc pop op
 	001d8304 sourceline 0x26d1
 	001d830c mov ax,0x46
 	001d8318 farpush ax
 	001d8320 setfuncargs 0x1
 	001d8328 mov ax,0x426f20
 	001d8334 farcall ax
 	001d833c farsubsp 0x1
 	001d8344 sourceline 0x26d2
 	001d834c push op
 	001d8354 mov ax,0x426
 	001d8360 farpush ax
 	001d8368 mov ax,0x397
 	001d8374 farpush ax
 	001d837c mov ax,0x0
 	001d8388 farpush ax
 	001d8390 mov ax,0x3
 	001d839c farpush ax
 	001d83a4 mov ax,0x1
 	001d83b0 farpush ax
 	001d83b8 mov mar,0x3cef20
 	001d83c4 mov ax,mar
 	001d83d0 mov op,ax
 	001d83d8 setfuncargs 0x5
 	001d83e0 mov ax,0x536f20
 	001d83ec farcall ax
 	001d83f4 farsubsp 0x5
 	001d83fc pop op
 	001d8404 sourceline 0x26d3
 	001d840c push op
 	001d8414 mov ax,0x0
 	001d8420 farpush ax
 	001d8428 mov ax,0x32
 	001d8434 farpush ax
 	001d843c mov mar,0xdeef20
 	001d8448 mov ax,mar
 	001d8454 mov op,ax
 	001d845c setfuncargs 0x2
 	001d8464 mov ax,0x2fef20
 	001d8470 farcall ax
 	001d8478 farsubsp 0x2
 	001d8480 pop op
 	001d8488 sourceline 0x26d4
 	001d8490 mov ax,0x190
 	001d849c farpush ax
 	001d84a4 setfuncargs 0x1
 	001d84ac mov ax,0x426f20
 	001d84b8 farcall ax
 	001d84c0 farsubsp 0x1
 	001d84c8 sourceline 0x26d5
 	001d84d0 mov ax,0x1
 	001d84dc mov bx,ax
 	001d84e8 mov mar,0x3cef20
 	001d84f4 mov ax,mar
 	001d8500 push op
 	001d8508 mov op,ax
 	001d8510 farpush bx
 	001d8518 setfuncargs 0x1
 	001d8520 mov ax,0x69ef20
 	001d852c farcall ax
 	001d8534 farsubsp 0x1
 	001d853c pop op
 	001d8544 sourceline 0x26d6
 	001d854c push op
 	001d8554 mov ax,0x2c6b81
 	001d8560 farpush ax
 	001d8568 mov ax,0x138
 	001d8574 farpush ax
 	001d857c mov ax,0x92
 	001d8588 farpush ax
 	001d8590 mov ax,0x0
 	001d859c farpush ax
 	001d85a4 mov mar,0x3cef20
 	001d85b0 mov ax,mar
 	001d85bc mov op,ax
 	001d85c4 setfuncargs 0x4
 	001d85cc mov ax,0x6aef20
 	001d85d8 farcall ax
 	001d85e0 farsubsp 0x4
 	001d85e8 pop op
 	001d85f0 sourceline 0x26d7
 	001d85f8 push op
 	001d8600 mov ax,0x427
 	001d860c farpush ax
 	001d8614 mov ax,0x397
 	001d8620 farpush ax
 	001d8628 mov ax,0x0
 	001d8634 farpush ax
 	001d863c mov ax,0x3
 	001d8648 farpush ax
 	001d8650 mov ax,0x1
 	001d865c farpush ax
 	001d8664 mov mar,0x3cef20
 	001d8670 mov ax,mar
 	001d867c mov op,ax
 	001d8684 setfuncargs 0x5
 	001d868c mov ax,0x536f20
 	001d8698 farcall ax
 	001d86a0 farsubsp 0x5
 	001d86a8 pop op
 	001d86b0 sourceline 0x26d8
 	001d86b8 mov ax,0x1
 	001d86c4 mov bx,ax
 	001d86d0 mov mar,0x336f20
 	001d86dc mov ax,mar
 	001d86e8 farpush bx
 	001d86f0 setfuncargs 0x1
 	001d86f8 mov ax,0x43ef20
 	001d8704 farcall ax
 	001d870c farsubsp 0x1
 	001d8714 sourceline 0x26d9
 	001d871c mov ax,0x1
 	001d8728 mov bx,ax
 	001d8734 mov mar,0x31ef20
 	001d8740 mov ax,mar
 	001d874c push op
 	001d8754 mov op,ax
 	001d875c farpush bx
 	001d8764 setfuncargs 0x1
 	001d876c mov ax,0x3a6f20
 	001d8778 farcall ax
 	001d8780 farsubsp 0x1
 	001d8788 pop op
 	001d8790 sourceline 0x26da
 	001d8798 jmp 0x001d8ca8
		001d8ca8: UNCONDITIONAL_JUMP

	[001d87a0]
		001d8134: CONDITIONAL_JUMP
 	001d87a0 sourceline 0x26dd
 	001d87a8 mov ax,0x0
 	001d87b4 mov bx,ax
 	001d87c0 mov mar,0x336f20
 	001d87cc mov ax,mar
 	001d87d8 farpush bx
 	001d87e0 setfuncargs 0x1
 	001d87e8 mov ax,0x43ef20
 	001d87f4 farcall ax
 	001d87fc farsubsp 0x1
 	001d8804 sourceline 0x26de
 	001d880c mov ax,0x0
 	001d8818 mov bx,ax
 	001d8824 mov mar,0x31ef20
 	001d8830 mov ax,mar
 	001d883c push op
 	001d8844 mov op,ax
 	001d884c farpush bx
 	001d8854 setfuncargs 0x1
 	001d885c mov ax,0x3a6f20
 	001d8868 farcall ax
 	001d8870 farsubsp 0x1
 	001d8878 pop op
 	001d8880 sourceline 0x26df
 	001d8888 mov ax,0x14
 	001d8894 farpush ax
 	001d889c setfuncargs 0x1
 	001d88a4 mov ax,0x426f20
 	001d88b0 farcall ax
 	001d88b8 farsubsp 0x1
 	001d88c0 sourceline 0x26e0
 	001d88c8 push op
 	001d88d0 mov ax,0x0
 	001d88dc farpush ax
 	001d88e4 mov ax,0x32
 	001d88f0 farpush ax
 	001d88f8 mov mar,0xdcef20
 	001d8904 mov ax,mar
 	001d8910 mov op,ax
 	001d8918 setfuncargs 0x2
 	001d8920 mov ax,0x2fef20
 	001d892c farcall ax
 	001d8934 farsubsp 0x2
 	001d893c pop op
 	001d8944 sourceline 0x26e1
 	001d894c mov ax,0x46
 	001d8958 farpush ax
 	001d8960 setfuncargs 0x1
 	001d8968 mov ax,0x426f20
 	001d8974 farcall ax
 	001d897c farsubsp 0x1
 	001d8984 sourceline 0x26e2
 	001d898c push op
 	001d8994 mov ax,0x426
 	001d89a0 farpush ax
 	001d89a8 mov ax,0x397
 	001d89b4 farpush ax
 	001d89bc mov ax,0x0
 	001d89c8 farpush ax
 	001d89d0 mov ax,0x3
 	001d89dc farpush ax
 	001d89e4 mov ax,0x1
 	001d89f0 farpush ax
 	001d89f8 mov mar,0x3cef20
 	001d8a04 mov ax,mar
 	001d8a10 mov op,ax
 	001d8a18 setfuncargs 0x5
 	001d8a20 mov ax,0x536f20
 	001d8a2c farcall ax
 	001d8a34 farsubsp 0x5
 	001d8a3c pop op
 	001d8a44 sourceline 0x26e3
 	001d8a4c push op
 	001d8a54 mov ax,0x0
 	001d8a60 farpush ax
 	001d8a68 mov ax,0x32
 	001d8a74 farpush ax
 	001d8a7c mov mar,0xdeef20
 	001d8a88 mov ax,mar
 	001d8a94 mov op,ax
 	001d8a9c setfuncargs 0x2
 	001d8aa4 mov ax,0x2fef20
 	001d8ab0 farcall ax
 	001d8ab8 farsubsp 0x2
 	001d8ac0 pop op
 	001d8ac8 sourceline 0x26e4
 	001d8ad0 mov ax,0x190
 	001d8adc farpush ax
 	001d8ae4 setfuncargs 0x1
 	001d8aec mov ax,0x426f20
 	001d8af8 farcall ax
 	001d8b00 farsubsp 0x1
 	001d8b08 sourceline 0x26e5
 	001d8b10 push op
 	001d8b18 mov ax,0x427
 	001d8b24 farpush ax
 	001d8b2c mov ax,0x397
 	001d8b38 farpush ax
 	001d8b40 mov ax,0x0
 	001d8b4c farpush ax
 	001d8b54 mov ax,0x3
 	001d8b60 farpush ax
 	001d8b68 mov ax,0x1
 	001d8b74 farpush ax
 	001d8b7c mov mar,0x3cef20
 	001d8b88 mov ax,mar
 	001d8b94 mov op,ax
 	001d8b9c setfuncargs 0x5
 	001d8ba4 mov ax,0x536f20
 	001d8bb0 farcall ax
 	001d8bb8 farsubsp 0x5
 	001d8bc0 pop op
 	001d8bc8 sourceline 0x26e6
 	001d8bd0 mov ax,0x1
 	001d8bdc mov bx,ax
 	001d8be8 mov mar,0x336f20
 	001d8bf4 mov ax,mar
 	001d8c00 farpush bx
 	001d8c08 setfuncargs 0x1
 	001d8c10 mov ax,0x43ef20
 	001d8c1c farcall ax
 	001d8c24 farsubsp 0x1
 	001d8c2c sourceline 0x26e7
 	001d8c34 mov ax,0x1
 	001d8c40 mov bx,ax
 	001d8c4c mov mar,0x31ef20
 	001d8c58 mov ax,mar
 	001d8c64 push op
 	001d8c6c mov op,ax
 	001d8c74 farpush bx
 	001d8c7c setfuncargs 0x1
 	001d8c84 mov ax,0x3a6f20
 	001d8c90 farcall ax
 	001d8c98 farsubsp 0x1
 	001d8ca0 pop op
		001d8ca8: FALL_THROUGH

	[001d8ca8]
		001d7ffc: UNCONDITIONAL_JUMP
		001d8160: UNCONDITIONAL_JUMP
		001d87a0: FALL_THROUGH
 	001d8ca8 sourceline 0x26ea
 	001d8cb0 jmp 0x001dc30c
		001dc30c: UNCONDITIONAL_JUMP

	[001d8cb8]
		001d7e9c: CONDITIONAL_JUMP
 	001d8cb8 sourceline 0x26ec
 	001d8cc0 mov mar,0x7bef20
 	001d8ccc mov ax,mar
 	001d8cd8 push op
 	001d8ce0 mov op,ax
 	001d8ce8 setfuncargs 0x0
 	001d8cf0 mov ax,0x346f20
 	001d8cfc farcall ax
 	001d8d04 pop op
 	001d8d0c push ax
 	001d8d14 mov ax,0x8ed
 	001d8d20 pop bx
 	001d8d28 cmpeq bx,ax
 	001d8d34 mov ax,bx
 	001d8d40 jz 0x001dc30c
		001dc30c: CONDITIONAL_JUMP
		001d8d48: FALL_THROUGH

	[001d8d48]
		001d8cb8: FALL_THROUGH
 	001d8d48 sourceline 0x26ee
 	001d8d50 mov mar,0xb8ef20
 	001d8d5c memread4 ax
 	001d8d64 push ax
 	001d8d6c mov ax,0x4
 	001d8d78 pop bx
 	001d8d80 cmpeq bx,ax
 	001d8d8c mov ax,bx
 	001d8d98 jz 0x001dc1e4
		001dc1e4: CONDITIONAL_JUMP
		001d8da0: FALL_THROUGH

	[001d8da0]
		001d8d48: FALL_THROUGH
 	001d8da0 sourceline 0x26f0
 	001d8da8 push op
 	001d8db0 mov mar,0x906f20
 	001d8dbc mov ax,mar
 	001d8dc8 farpush ax
 	001d8dd0 mov mar,0x3cef20
 	001d8ddc mov ax,mar
 	001d8de8 mov op,ax
 	001d8df0 setfuncargs 0x1
 	001d8df8 mov ax,0x996f20
 	001d8e04 farcall ax
 	001d8e0c farsubsp 0x1
 	001d8e14 pop op
 	001d8e1c jz 0x001dc0ac
		001dc0ac: CONDITIONAL_JUMP
		001d8e24: FALL_THROUGH

	[001d8e24]
		001d8da0: FALL_THROUGH
 	001d8e24 sourceline 0x26f2
 	001d8e2c mov mar,0x3cef20
 	001d8e38 mov ax,mar
 	001d8e44 push op
 	001d8e4c mov op,ax
 	001d8e54 setfuncargs 0x0
 	001d8e5c mov ax,0x3d6f20
 	001d8e68 farcall ax
 	001d8e70 pop op
 	001d8e78 push ax
 	001d8e80 mov ax,0xa
 	001d8e8c pop bx
 	001d8e94 cmpeq bx,ax
 	001d8ea0 mov ax,bx
 	001d8eac jz 0x001daeec
		001daeec: CONDITIONAL_JUMP
		001d8eb4: FALL_THROUGH

	[001d8eb4]
		001d8e24: FALL_THROUGH
 	001d8eb4 sourceline 0x26f4
 	001d8ebc mov ax,0x2c6e41
 	001d8ec8 farpush ax
 	001d8ed0 setfuncargs 0x1
 	001d8ed8 mov ax,0x7f6f20
 	001d8ee4 farcall ax
 	001d8eec farsubsp 0x1
 	001d8ef4 jz 0x001da6a4
		001da6a4: CONDITIONAL_JUMP
		001d8efc: FALL_THROUGH

	[001d8efc]
		001d8eb4: FALL_THROUGH
 	001d8efc sourceline 0x26f6
 	001d8f04 mov ax,0x1
 	001d8f10 mov mar,0xe2ef20
 	001d8f1c memwrite4 ax
 	001d8f24 sourceline 0x26f7
 	001d8f2c mov ax,0x1
 	001d8f38 mov mar,0x5eef20
 	001d8f44 memwrite4 ax
 	001d8f4c sourceline 0x26f8
 	001d8f54 mov ax,0x3
 	001d8f60 mov bx,ax
 	001d8f6c mov mar,0x3cef20
 	001d8f78 mov ax,mar
 	001d8f84 push op
 	001d8f8c mov op,ax
 	001d8f94 farpush bx
 	001d8f9c setfuncargs 0x1
 	001d8fa4 mov ax,0x69ef20
 	001d8fb0 farcall ax
 	001d8fb8 farsubsp 0x1
 	001d8fc0 pop op
 	001d8fc8 sourceline 0x26f9
 	001d8fd0 mov ax,0x7b
 	001d8fdc mov bx,ax
 	001d8fe8 mov mar,0xbaef20
 	001d8ff4 mov ax,mar
 	001d9000 push op
 	001d9008 mov op,ax
 	001d9010 farpush bx
 	001d9018 setfuncargs 0x1
 	001d9020 mov ax,0x69ef20
 	001d902c farcall ax
 	001d9034 farsubsp 0x1
 	001d903c pop op
 	001d9044 sourceline 0x26fa
 	001d904c mov ax,0x0
 	001d9058 mov bx,ax
 	001d9064 mov mar,0x336f20
 	001d9070 mov ax,mar
 	001d907c farpush bx
 	001d9084 setfuncargs 0x1
 	001d908c mov ax,0x43ef20
 	001d9098 farcall ax
 	001d90a0 farsubsp 0x1
 	001d90a8 sourceline 0x26fb
 	001d90b0 mov ax,0x0
 	001d90bc mov bx,ax
 	001d90c8 mov mar,0x31ef20
 	001d90d4 mov ax,mar
 	001d90e0 push op
 	001d90e8 mov op,ax
 	001d90f0 farpush bx
 	001d90f8 setfuncargs 0x1
 	001d9100 mov ax,0x3a6f20
 	001d910c farcall ax
 	001d9114 farsubsp 0x1
 	001d911c pop op
 	001d9124 sourceline 0x26fc
 	001d912c mov ax,0x14
 	001d9138 farpush ax
 	001d9140 setfuncargs 0x1
 	001d9148 mov ax,0x426f20
 	001d9154 farcall ax
 	001d915c farsubsp 0x1
 	001d9164 sourceline 0x26fd
 	001d916c push op
 	001d9174 mov ax,0x0
 	001d9180 farpush ax
 	001d9188 mov ax,0x32
 	001d9194 farpush ax
 	001d919c mov mar,0xdcef20
 	001d91a8 mov ax,mar
 	001d91b4 mov op,ax
 	001d91bc setfuncargs 0x2
 	001d91c4 mov ax,0x2fef20
 	001d91d0 farcall ax
 	001d91d8 farsubsp 0x2
 	001d91e0 pop op
 	001d91e8 sourceline 0x26fe
 	001d91f0 mov ax,0x46
 	001d91fc farpush ax
 	001d9204 setfuncargs 0x1
 	001d920c mov ax,0x426f20
 	001d9218 farcall ax
 	001d9220 farsubsp 0x1
 	001d9228 sourceline 0x26ff
 	001d9230 push op
 	001d9238 mov ax,0x426
 	001d9244 farpush ax
 	001d924c mov ax,0x397
 	001d9258 farpush ax
 	001d9260 mov ax,0x0
 	001d926c farpush ax
 	001d9274 mov ax,0x3
 	001d9280 farpush ax
 	001d9288 mov ax,0x1
 	001d9294 farpush ax
 	001d929c mov mar,0x3cef20
 	001d92a8 mov ax,mar
 	001d92b4 mov op,ax
 	001d92bc setfuncargs 0x5
 	001d92c4 mov ax,0x536f20
 	001d92d0 farcall ax
 	001d92d8 farsubsp 0x5
 	001d92e0 pop op
 	001d92e8 sourceline 0x2700
 	001d92f0 mov ax,0x19
 	001d92fc farpush ax
 	001d9304 setfuncargs 0x1
 	001d930c mov ax,0x426f20
 	001d9318 farcall ax
 	001d9320 farsubsp 0x1
 	001d9328 sourceline 0x2701
 	001d9330 push op
 	001d9338 mov ax,0x0
 	001d9344 farpush ax
 	001d934c mov ax,0x32
 	001d9358 farpush ax
 	001d9360 mov mar,0xdd6f20
 	001d936c mov ax,mar
 	001d9378 mov op,ax
 	001d9380 setfuncargs 0x2
 	001d9388 mov ax,0x2fef20
 	001d9394 farcall ax
 	001d939c farsubsp 0x2
 	001d93a4 pop op
 	001d93ac sourceline 0x2702
 	001d93b4 mov ax,0x10e
 	001d93c0 farpush ax
 	001d93c8 setfuncargs 0x1
 	001d93d0 mov ax,0x426f20
 	001d93dc farcall ax
 	001d93e4 farsubsp 0x1
 	001d93ec sourceline 0x2703
 	001d93f4 push op
 	001d93fc mov ax,0x7cfe
 	001d9408 farpush ax
 	001d9410 mov ax,0x87
 	001d941c farpush ax
 	001d9424 mov ax,0xa
 	001d9430 farpush ax
 	001d9438 mov mar,0x42ef20
 	001d9444 push mar
 	001d944c pop mar
 	001d9454 memread.ptr ax
 	001d945c push ax
 	001d9464 pop mar
 	001d946c mov ax,mar
 	001d9478 push op
 	001d9480 mov op,ax
 	001d9488 setfuncargs 0x0
 	001d9490 mov ax,0x3d6f20
 	001d949c farcall ax
 	001d94a4 pop op
 	001d94ac farpush ax
 	001d94b4 mov mar,0xbaef20
 	001d94c0 mov ax,mar
 	001d94cc mov op,ax
 	001d94d4 setfuncargs 0x4
 	001d94dc mov ax,0xc16f20
 	001d94e8 farcall ax
 	001d94f0 farsubsp 0x4
 	001d94f8 pop op
 	001d9500 sourceline 0x2704
 	001d9508 push op
 	001d9510 mov ax,0x2c6e4d
 	001d951c farpush ax
 	001d9524 mov mar,0xbaef20
 	001d9530 mov ax,mar
 	001d953c mov op,ax
 	001d9544 setfuncargs 0x1
 	001d954c mov ax,0x6f6f20
 	001d9558 farcall ax
 	001d9560 farsubsp 0x1
 	001d9568 pop op
 	001d9570 sourceline 0x2705
 	001d9578 push op
 	001d9580 mov ax,0x2c6e57
 	001d958c farpush ax
 	001d9594 mov mar,0x3cef20
 	001d95a0 mov ax,mar
 	001d95ac mov op,ax
 	001d95b4 setfuncargs 0x1
 	001d95bc mov ax,0x6f6f20
 	001d95c8 farcall ax
 	001d95d0 farsubsp 0x1
 	001d95d8 pop op
 	001d95e0 sourceline 0x2706
 	001d95e8 push op
 	001d95f0 mov ax,0x2c6e98
 	001d95fc farpush ax
 	001d9604 mov mar,0xbaef20
 	001d9610 mov ax,mar
 	001d961c mov op,ax
 	001d9624 setfuncargs 0x1
 	001d962c mov ax,0x6f6f20
 	001d9638 farcall ax
 	001d9640 farsubsp 0x1
 	001d9648 pop op
 	001d9650 sourceline 0x2707
 	001d9658 push op
 	001d9660 mov ax,0x2c6ec0
 	001d966c farpush ax
 	001d9674 mov mar,0x3cef20
 	001d9680 mov ax,mar
 	001d968c mov op,ax
 	001d9694 setfuncargs 0x1
 	001d969c mov ax,0x6f6f20
 	001d96a8 farcall ax
 	001d96b0 farsubsp 0x1
 	001d96b8 pop op
 	001d96c0 sourceline 0x2708
 	001d96c8 push op
 	001d96d0 mov ax,0x2c6f10
 	001d96dc farpush ax
 	001d96e4 mov mar,0xbaef20
 	001d96f0 mov ax,mar
 	001d96fc mov op,ax
 	001d9704 setfuncargs 0x1
 	001d970c mov ax,0x6f6f20
 	001d9718 farcall ax
 	001d9720 farsubsp 0x1
 	001d9728 pop op
 	001d9730 sourceline 0x2709
 	001d9738 push op
 	001d9740 mov ax,0x2c6f8f
 	001d974c farpush ax
 	001d9754 mov mar,0x3cef20
 	001d9760 mov ax,mar
 	001d976c mov op,ax
 	001d9774 setfuncargs 0x1
 	001d977c mov ax,0x6f6f20
 	001d9788 farcall ax
 	001d9790 farsubsp 0x1
 	001d9798 pop op
 	001d97a0 sourceline 0x270a
 	001d97a8 push op
 	001d97b0 mov ax,0x2c6fa0
 	001d97bc farpush ax
 	001d97c4 mov mar,0xbaef20
 	001d97d0 mov ax,mar
 	001d97dc mov op,ax
 	001d97e4 setfuncargs 0x1
 	001d97ec mov ax,0x6f6f20
 	001d97f8 farcall ax
 	001d9800 farsubsp 0x1
 	001d9808 pop op
 	001d9810 sourceline 0x270b
 	001d9818 push op
 	001d9820 mov ax,0x2c6fe5
 	001d982c farpush ax
 	001d9834 mov mar,0x3cef20
 	001d9840 mov ax,mar
 	001d984c mov op,ax
 	001d9854 setfuncargs 0x1
 	001d985c mov ax,0x6f6f20
 	001d9868 farcall ax
 	001d9870 farsubsp 0x1
 	001d9878 pop op
 	001d9880 sourceline 0x270c
 	001d9888 push op
 	001d9890 mov ax,0x2c6ffb
 	001d989c farpush ax
 	001d98a4 mov mar,0xbaef20
 	001d98b0 mov ax,mar
 	001d98bc mov op,ax
 	001d98c4 setfuncargs 0x1
 	001d98cc mov ax,0x6f6f20
 	001d98d8 farcall ax
 	001d98e0 farsubsp 0x1
 	001d98e8 pop op
 	001d98f0 sourceline 0x270d
 	001d98f8 push op
 	001d9900 mov ax,0x2c7012
 	001d990c farpush ax
 	001d9914 mov mar,0x3cef20
 	001d9920 mov ax,mar
 	001d992c mov op,ax
 	001d9934 setfuncargs 0x1
 	001d993c mov ax,0x6f6f20
 	001d9948 farcall ax
 	001d9950 farsubsp 0x1
 	001d9958 pop op
 	001d9960 sourceline 0x270e
 	001d9968 push op
 	001d9970 mov ax,0x0
 	001d997c farpush ax
 	001d9984 mov ax,0x32
 	001d9990 farpush ax
 	001d9998 mov mar,0xd16f20
 	001d99a4 mov ax,mar
 	001d99b0 mov op,ax
 	001d99b8 setfuncargs 0x2
 	001d99c0 mov ax,0x2fef20
 	001d99cc farcall ax
 	001d99d4 farsubsp 0x2
 	001d99dc pop op
 	001d99e4 sourceline 0x270f
 	001d99ec push op
 	001d99f4 mov ax,0x426
 	001d9a00 farpush ax
 	001d9a08 mov ax,0x397
 	001d9a14 farpush ax
 	001d9a1c mov ax,0x0
 	001d9a28 farpush ax
 	001d9a30 mov ax,0x2
 	001d9a3c farpush ax
 	001d9a44 mov ax,0x2
 	001d9a50 farpush ax
 	001d9a58 mov mar,0x3cef20
 	001d9a64 mov ax,mar
 	001d9a70 mov op,ax
 	001d9a78 setfuncargs 0x5
 	001d9a80 mov ax,0x536f20
 	001d9a8c farcall ax
 	001d9a94 farsubsp 0x5
 	001d9a9c pop op
 	001d9aa4 sourceline 0x2710
 	001d9aac push op
 	001d9ab4 mov ax,0x2
 	001d9ac0 farpush ax
 	001d9ac8 mov mar,0x3cef20
 	001d9ad4 mov ax,mar
 	001d9ae0 mov op,ax
 	001d9ae8 setfuncargs 0x1
 	001d9af0 mov ax,0x51ef20
 	001d9afc farcall ax
 	001d9b04 farsubsp 0x1
 	001d9b0c pop op
 	001d9b14 sourceline 0x2711
 	001d9b1c mov ax,0x0
 	001d9b28 mov bx,ax
 	001d9b34 mov mar,0x3cef20
 	001d9b40 mov ax,mar
 	001d9b4c push op
 	001d9b54 mov op,ax
 	001d9b5c farpush bx
 	001d9b64 setfuncargs 0x1
 	001d9b6c mov ax,0x766f20
 	001d9b78 farcall ax
 	001d9b80 farsubsp 0x1
 	001d9b88 pop op
 	001d9b90 sourceline 0x2712
 	001d9b98 mov mar,0x3cef20
 	001d9ba4 mov ax,mar
 	001d9bb0 push op
 	001d9bb8 mov op,ax
 	001d9bc0 setfuncargs 0x0
 	001d9bc8 mov ax,0x78ef20
 	001d9bd4 farcall ax
 	001d9bdc pop op
 	001d9be4 push ax
 	001d9bec mov ax,0x7
 	001d9bf8 pop bx
 	001d9c00 add bx,ax
 	001d9c0c mov ax,bx
 	001d9c18 mov bx,ax
 	001d9c24 mov mar,0x3cef20
 	001d9c30 mov ax,mar
 	001d9c3c push op
 	001d9c44 mov op,ax
 	001d9c4c farpush bx
 	001d9c54 setfuncargs 0x1
 	001d9c5c mov ax,0x526f20
 	001d9c68 farcall ax
 	001d9c70 farsubsp 0x1
 	001d9c78 pop op
 	001d9c80 sourceline 0x2713
 	001d9c88 mov ax,0x1
 	001d9c94 mov bx,ax
 	001d9ca0 mov mar,0x3cef20
 	001d9cac mov ax,mar
 	001d9cb8 push op
 	001d9cc0 mov op,ax
 	001d9cc8 farpush bx
 	001d9cd0 setfuncargs 0x1
 	001d9cd8 mov ax,0x69ef20
 	001d9ce4 farcall ax
 	001d9cec farsubsp 0x1
 	001d9cf4 pop op
 	001d9cfc sourceline 0x2714
 	001d9d04 push op
 	001d9d0c mov ax,0x2c6dc6
 	001d9d18 farpush ax
 	001d9d20 mov ax,0x138
 	001d9d2c farpush ax
 	001d9d34 mov ax,0x92
 	001d9d40 farpush ax
 	001d9d48 mov ax,0x0
 	001d9d54 farpush ax
 	001d9d5c mov mar,0x3cef20
 	001d9d68 mov ax,mar
 	001d9d74 mov op,ax
 	001d9d7c setfuncargs 0x4
 	001d9d84 mov ax,0x6aef20
 	001d9d90 farcall ax
 	001d9d98 farsubsp 0x4
 	001d9da0 pop op
 	001d9da8 sourceline 0x2715
 	001d9db0 mov ax,0xa
 	001d9dbc farpush ax
 	001d9dc4 setfuncargs 0x1
 	001d9dcc mov ax,0x426f20
 	001d9dd8 farcall ax
 	001d9de0 farsubsp 0x1
 	001d9de8 sourceline 0x2716
 	001d9df0 push op
 	001d9df8 mov ax,0x1
 	001d9e04 farpush ax
 	001d9e0c mov ax,0x0
 	001d9e18 farpush ax
 	001d9e20 mov ax,0x1
 	001d9e2c farpush ax
 	001d9e34 mov ax,0x1
 	001d9e40 farpush ax
 	001d9e48 mov ax,0x0
 	001d9e54 farpush ax
 	001d9e5c mov ax,0x3fc00000
 	001d9e68 farpush ax
 	001d9e70 mov mar,0xe06f20
 	001d9e7c mov ax,mar
 	001d9e88 mov op,ax
 	001d9e90 setfuncargs 0x6
 	001d9e98 mov ax,0xe0ef20
 	001d9ea4 farcall ax
 	001d9eac farsubsp 0x6
 	001d9eb4 pop op
 	001d9ebc sourceline 0x2717
 	001d9ec4 mov ax,0x1
 	001d9ed0 mov bx,ax
 	001d9edc mov mar,0xe06f20
 	001d9ee8 mov ax,mar
 	001d9ef4 push op
 	001d9efc mov op,ax
 	001d9f04 farpush bx
 	001d9f0c setfuncargs 0x1
 	001d9f14 mov ax,0x3a6f20
 	001d9f20 farcall ax
 	001d9f28 farsubsp 0x1
 	001d9f30 pop op
 	001d9f38 sourceline 0x2718
 	001d9f40 push op
 	001d9f48 mov ax,0x79
 	001d9f54 farpush ax
 	001d9f5c mov mar,0xbaef20
 	001d9f68 mov ax,mar
 	001d9f74 mov op,ax
 	001d9f7c setfuncargs 0x1
 	001d9f84 mov ax,0x51ef20
 	001d9f90 farcall ax
 	001d9f98 farsubsp 0x1
 	001d9fa0 pop op
 	001d9fa8 sourceline 0x2719
 	001d9fb0 mov ax,0x3c
 	001d9fbc farpush ax
 	001d9fc4 setfuncargs 0x1
 	001d9fcc mov ax,0x426f20
 	001d9fd8 farcall ax
 	001d9fe0 farsubsp 0x1
 	001d9fe8 sourceline 0x271a
 	001d9ff0 mov ax,0xc8
 	001d9ffc mov bx,ax
 	001da008 mov mar,0x3cef20
 	001da014 mov ax,mar
 	001da020 push op
 	001da028 mov op,ax
 	001da030 farpush bx
 	001da038 setfuncargs 0x1
 	001da040 mov ax,0x70ef20
 	001da04c farcall ax
 	001da054 farsubsp 0x1
 	001da05c pop op
 	001da064 sourceline 0x271b
 	001da06c mov ax,0x7e
 	001da078 mov bx,ax
 	001da084 mov mar,0x3cef20
 	001da090 mov ax,mar
 	001da09c push op
 	001da0a4 mov op,ax
 	001da0ac farpush bx
 	001da0b4 setfuncargs 0x1
 	001da0bc mov ax,0x526f20
 	001da0c8 farcall ax
 	001da0d0 farsubsp 0x1
 	001da0d8 pop op
 	001da0e0 sourceline 0x271c
 	001da0e8 mov ax,0x3
 	001da0f4 mov bx,ax
 	001da100 mov mar,0x3cef20
 	001da10c mov ax,mar
 	001da118 push op
 	001da120 mov op,ax
 	001da128 farpush bx
 	001da130 setfuncargs 0x1
 	001da138 mov ax,0x766f20
 	001da144 farcall ax
 	001da14c farsubsp 0x1
 	001da154 pop op
 	001da15c sourceline 0x271d
 	001da164 push op
 	001da16c mov ax,0x1
 	001da178 farpush ax
 	001da180 mov ax,0x0
 	001da18c farpush ax
 	001da194 mov ax,0x1
 	001da1a0 farpush ax
 	001da1a8 mov ax,0x1
 	001da1b4 farpush ax
 	001da1bc mov ax,0x0
 	001da1c8 farpush ax
 	001da1d0 mov ax,0x3fc00000
 	001da1dc farpush ax
 	001da1e4 mov mar,0xe06f20
 	001da1f0 mov ax,mar
 	001da1fc mov op,ax
 	001da204 setfuncargs 0x6
 	001da20c mov ax,0xe16f20
 	001da218 farcall ax
 	001da220 farsubsp 0x6
 	001da228 pop op
 	001da230 sourceline 0x271e
 	001da238 mov ax,0x0
 	001da244 mov bx,ax
 	001da250 mov mar,0xe06f20
 	001da25c mov ax,mar
 	001da268 push op
 	001da270 mov op,ax
 	001da278 farpush bx
 	001da280 setfuncargs 0x1
 	001da288 mov ax,0x3a6f20
 	001da294 farcall ax
 	001da29c farsubsp 0x1
 	001da2a4 pop op
 	001da2ac sourceline 0x271f
 	001da2b4 push op
 	001da2bc mov ax,0x130
 	001da2c8 farpush ax
 	001da2d0 mov ax,0x397
 	001da2dc farpush ax
 	001da2e4 mov ax,0x85
 	001da2f0 farpush ax
 	001da2f8 mov ax,0x2c
 	001da304 farpush ax
 	001da30c mov mar,0xbaef20
 	001da318 mov ax,mar
 	001da324 mov op,ax
 	001da32c setfuncargs 0x4
 	001da334 mov ax,0xb2ef20
 	001da340 farcall ax
 	001da348 farsubsp 0x4
 	001da350 pop op
 	001da358 sourceline 0x2720
 	001da360 push op
 	001da368 mov ax,0x130
 	001da374 farpush ax
 	001da37c mov ax,0x397
 	001da388 farpush ax
 	001da390 mov ax,0x85
 	001da39c farpush ax
 	001da3a4 mov ax,0xdb
 	001da3b0 farpush ax
 	001da3b8 mov mar,0xbaef20
 	001da3c4 mov ax,mar
 	001da3d0 mov op,ax
 	001da3d8 setfuncargs 0x4
 	001da3e0 mov ax,0xb2ef20
 	001da3ec farcall ax
 	001da3f4 farsubsp 0x4
 	001da3fc pop op
 	001da404 sourceline 0x2721
 	001da40c mov ax,0x7c
 	001da418 mov bx,ax
 	001da424 mov mar,0xbaef20
 	001da430 mov ax,mar
 	001da43c push op
 	001da444 mov op,ax
 	001da44c farpush bx
 	001da454 setfuncargs 0x1
 	001da45c mov ax,0x69ef20
 	001da468 farcall ax
 	001da470 farsubsp 0x1
 	001da478 pop op
 	001da480 sourceline 0x2722
 	001da488 mov ax,0x0
 	001da494 mov bx,ax
 	001da4a0 mov mar,0xbaef20
 	001da4ac mov ax,mar
 	001da4b8 push op
 	001da4c0 mov op,ax
 	001da4c8 farpush bx
 	001da4d0 setfuncargs 0x1
 	001da4d8 mov ax,0x766f20
 	001da4e4 farcall ax
 	001da4ec farsubsp 0x1
 	001da4f4 pop op
 	001da4fc sourceline 0x2723
 	001da504 mov ax,0x0
 	001da510 mov mar,0x5eef20
 	001da51c memwrite4 ax
 	001da524 sourceline 0x2724
 	001da52c mov ax,0x1
 	001da538 mov bx,ax
 	001da544 mov mar,0x336f20
 	001da550 mov ax,mar
 	001da55c farpush bx
 	001da564 setfuncargs 0x1
 	001da56c mov ax,0x43ef20
 	001da578 farcall ax
 	001da580 farsubsp 0x1
 	001da588 sourceline 0x2725
 	001da590 mov ax,0x1
 	001da59c mov bx,ax
 	001da5a8 mov mar,0x67ef20
 	001da5b4 mov ax,mar
 	001da5c0 push op
 	001da5c8 mov op,ax
 	001da5d0 farpush bx
 	001da5d8 setfuncargs 0x1
 	001da5e0 mov ax,0x3a6f20
 	001da5ec farcall ax
 	001da5f4 farsubsp 0x1
 	001da5fc pop op
 	001da604 sourceline 0x2726
 	001da60c mov ax,0x1
 	001da618 mov mar,0x856f20
 	001da624 memwrite4 ax
 	001da62c sourceline 0x2727
 	001da634 mov ax,0x0
 	001da640 mov mar,0xe2ef20
 	001da64c memwrite4 ax
 	001da654 sourceline 0x2728
 	001da65c mov ax,0x2
 	001da668 farpush ax
 	001da670 setfuncargs 0x1
 	001da678 mov ax,0xc1ef20
 	001da684 farcall ax
 	001da68c farsubsp 0x1
 	001da694 sourceline 0x2729
 	001da69c jmp 0x001daedc
		001daedc: UNCONDITIONAL_JUMP

	[001da6a4]
		001d8eb4: CONDITIONAL_JUMP
 	001da6a4 sourceline 0x272c
 	001da6ac mov mar,0x3cef20
 	001da6b8 mov ax,mar
 	001da6c4 push op
 	001da6cc mov op,ax
 	001da6d4 setfuncargs 0x0
 	001da6dc mov ax,0x3d6f20
 	001da6e8 farcall ax
 	001da6f0 pop op
 	001da6f8 push ax
 	001da700 mov mar,0xbaef20
 	001da70c mov ax,mar
 	001da718 push op
 	001da720 mov op,ax
 	001da728 setfuncargs 0x0
 	001da730 mov ax,0x3d6f20
 	001da73c farcall ax
 	001da744 pop op
 	001da74c pop bx
 	001da754 cmpneq bx,ax
 	001da760 mov ax,bx
 	001da76c jz 0x001dadb4
		001dadb4: CONDITIONAL_JUMP
		001da774: FALL_THROUGH

	[001da774]
		001da6a4: FALL_THROUGH
 	001da774 sourceline 0x272e
 	001da77c mov ax,0x0
 	001da788 mov bx,ax
 	001da794 mov mar,0x336f20
 	001da7a0 mov ax,mar
 	001da7ac farpush bx
 	001da7b4 setfuncargs 0x1
 	001da7bc mov ax,0x43ef20
 	001da7c8 farcall ax
 	001da7d0 farsubsp 0x1
 	001da7d8 sourceline 0x272f
 	001da7e0 mov ax,0x0
 	001da7ec mov bx,ax
 	001da7f8 mov mar,0x31ef20
 	001da804 mov ax,mar
 	001da810 push op
 	001da818 mov op,ax
 	001da820 farpush bx
 	001da828 setfuncargs 0x1
 	001da830 mov ax,0x3a6f20
 	001da83c farcall ax
 	001da844 farsubsp 0x1
 	001da84c pop op
 	001da854 sourceline 0x2730
 	001da85c mov ax,0x14
 	001da868 farpush ax
 	001da870 setfuncargs 0x1
 	001da878 mov ax,0x426f20
 	001da884 farcall ax
 	001da88c farsubsp 0x1
 	001da894 sourceline 0x2731
 	001da89c push op
 	001da8a4 mov ax,0x0
 	001da8b0 farpush ax
 	001da8b8 mov ax,0x32
 	001da8c4 farpush ax
 	001da8cc mov mar,0xdcef20
 	001da8d8 mov ax,mar
 	001da8e4 mov op,ax
 	001da8ec setfuncargs 0x2
 	001da8f4 mov ax,0x2fef20
 	001da900 farcall ax
 	001da908 farsubsp 0x2
 	001da910 pop op
 	001da918 sourceline 0x2732
 	001da920 mov ax,0x46
 	001da92c farpush ax
 	001da934 setfuncargs 0x1
 	001da93c mov ax,0x426f20
 	001da948 farcall ax
 	001da950 farsubsp 0x1
 	001da958 sourceline 0x2733
 	001da960 push op
 	001da968 mov ax,0x426
 	001da974 farpush ax
 	001da97c mov ax,0x397
 	001da988 farpush ax
 	001da990 mov ax,0x0
 	001da99c farpush ax
 	001da9a4 mov ax,0x3
 	001da9b0 farpush ax
 	001da9b8 mov ax,0x1
 	001da9c4 farpush ax
 	001da9cc mov mar,0x3cef20
 	001da9d8 mov ax,mar
 	001da9e4 mov op,ax
 	001da9ec setfuncargs 0x5
 	001da9f4 mov ax,0x536f20
 	001daa00 farcall ax
 	001daa08 farsubsp 0x5
 	001daa10 pop op
 	001daa18 sourceline 0x2734
 	001daa20 push op
 	001daa28 mov ax,0x0
 	001daa34 farpush ax
 	001daa3c mov ax,0x32
 	001daa48 farpush ax
 	001daa50 mov mar,0xdeef20
 	001daa5c mov ax,mar
 	001daa68 mov op,ax
 	001daa70 setfuncargs 0x2
 	001daa78 mov ax,0x2fef20
 	001daa84 farcall ax
 	001daa8c farsubsp 0x2
 	001daa94 pop op
 	001daa9c sourceline 0x2735
 	001daaa4 mov ax,0x190
 	001daab0 farpush ax
 	001daab8 setfuncargs 0x1
 	001daac0 mov ax,0x426f20
 	001daacc farcall ax
 	001daad4 farsubsp 0x1
 	001daadc sourceline 0x2736
 	001daae4 mov ax,0x1
 	001daaf0 mov bx,ax
 	001daafc mov mar,0x3cef20
 	001dab08 mov ax,mar
 	001dab14 push op
 	001dab1c mov op,ax
 	001dab24 farpush bx
 	001dab2c setfuncargs 0x1
 	001dab34 mov ax,0x69ef20
 	001dab40 farcall ax
 	001dab48 farsubsp 0x1
 	001dab50 pop op
 	001dab58 sourceline 0x2737
 	001dab60 push op
 	001dab68 mov ax,0x2c6dfc
 	001dab74 farpush ax
 	001dab7c mov ax,0x138
 	001dab88 farpush ax
 	001dab90 mov ax,0x92
 	001dab9c farpush ax
 	001daba4 mov ax,0x0
 	001dabb0 farpush ax
 	001dabb8 mov mar,0x3cef20
 	001dabc4 mov ax,mar
 	001dabd0 mov op,ax
 	001dabd8 setfuncargs 0x4
 	001dabe0 mov ax,0x6aef20
 	001dabec farcall ax
 	001dabf4 farsubsp 0x4
 	001dabfc pop op
 	001dac04 sourceline 0x2738
 	001dac0c push op
 	001dac14 mov ax,0x427
 	001dac20 farpush ax
 	001dac28 mov ax,0x397
 	001dac34 farpush ax
 	001dac3c mov ax,0x0
 	001dac48 farpush ax
 	001dac50 mov ax,0x3
 	001dac5c farpush ax
 	001dac64 mov ax,0x1
 	001dac70 farpush ax
 	001dac78 mov mar,0x3cef20
 	001dac84 mov ax,mar
 	001dac90 mov op,ax
 	001dac98 setfuncargs 0x5
 	001daca0 mov ax,0x536f20
 	001dacac farcall ax
 	001dacb4 farsubsp 0x5
 	001dacbc pop op
 	001dacc4 sourceline 0x2739
 	001daccc mov ax,0x1
 	001dacd8 mov bx,ax
 	001dace4 mov mar,0x336f20
 	001dacf0 mov ax,mar
 	001dacfc farpush bx
 	001dad04 setfuncargs 0x1
 	001dad0c mov ax,0x43ef20
 	001dad18 farcall ax
 	001dad20 farsubsp 0x1
 	001dad28 sourceline 0x273a
 	001dad30 mov ax,0x1
 	001dad3c mov bx,ax
 	001dad48 mov mar,0x31ef20
 	001dad54 mov ax,mar
 	001dad60 push op
 	001dad68 mov op,ax
 	001dad70 farpush bx
 	001dad78 setfuncargs 0x1
 	001dad80 mov ax,0x3a6f20
 	001dad8c farcall ax
 	001dad94 farsubsp 0x1
 	001dad9c pop op
 	001dada4 sourceline 0x273b
 	001dadac jmp 0x001daedc
		001daedc: UNCONDITIONAL_JUMP

	[001dadb4]
		001da6a4: CONDITIONAL_JUMP
 	001dadb4 sourceline 0x273e
 	001dadbc mov ax,0x1
 	001dadc8 mov bx,ax
 	001dadd4 mov mar,0x3cef20
 	001dade0 mov ax,mar
 	001dadec push op
 	001dadf4 mov op,ax
 	001dadfc farpush bx
 	001dae04 setfuncargs 0x1
 	001dae0c mov ax,0x69ef20
 	001dae18 farcall ax
 	001dae20 farsubsp 0x1
 	001dae28 pop op
 	001dae30 sourceline 0x273f
 	001dae38 push op
 	001dae40 mov ax,0x2c6e14
 	001dae4c farpush ax
 	001dae54 mov ax,0x138
 	001dae60 farpush ax
 	001dae68 mov ax,0x92
 	001dae74 farpush ax
 	001dae7c mov ax,0x0
 	001dae88 farpush ax
 	001dae90 mov mar,0x3cef20
 	001dae9c mov ax,mar
 	001daea8 mov op,ax
 	001daeb0 setfuncargs 0x4
 	001daeb8 mov ax,0x6aef20
 	001daec4 farcall ax
 	001daecc farsubsp 0x4
 	001daed4 pop op
		001daedc: FALL_THROUGH

	[001daedc]
		001d8efc: UNCONDITIONAL_JUMP
		001da774: UNCONDITIONAL_JUMP
		001dadb4: FALL_THROUGH
 	001daedc sourceline 0x2742
 	001daee4 jmp 0x001dc09c
		001dc09c: UNCONDITIONAL_JUMP

	[001daeec]
		001d8e24: CONDITIONAL_JUMP
 	001daeec sourceline 0x2745
 	001daef4 mov ax,0x2c6e41
 	001daf00 farpush ax
 	001daf08 setfuncargs 0x1
 	001daf10 mov ax,0x7f6f20
 	001daf1c farcall ax
 	001daf24 farsubsp 0x1
 	001daf2c jz 0x001dbf74
		001dbf74: CONDITIONAL_JUMP
		001daf34: FALL_THROUGH

	[001daf34]
		001daeec: FALL_THROUGH
 	001daf34 sourceline 0x2747
 	001daf3c mov ax,0x1
 	001daf48 mov mar,0x5eef20
 	001daf54 memwrite4 ax
 	001daf5c sourceline 0x2748
 	001daf64 mov ax,0x3
 	001daf70 mov bx,ax
 	001daf7c mov mar,0x3cef20
 	001daf88 mov ax,mar
 	001daf94 push op
 	001daf9c mov op,ax
 	001dafa4 farpush bx
 	001dafac setfuncargs 0x1
 	001dafb4 mov ax,0x69ef20
 	001dafc0 farcall ax
 	001dafc8 farsubsp 0x1
 	001dafd0 pop op
 	001dafd8 sourceline 0x2749
 	001dafe0 mov ax,0x7b
 	001dafec mov bx,ax
 	001daff8 mov mar,0xbaef20
 	001db004 mov ax,mar
 	001db010 push op
 	001db018 mov op,ax
 	001db020 farpush bx
 	001db028 setfuncargs 0x1
 	001db030 mov ax,0x69ef20
 	001db03c farcall ax
 	001db044 farsubsp 0x1
 	001db04c pop op
 	001db054 sourceline 0x274a
 	001db05c mov ax,0x0
 	001db068 mov bx,ax
 	001db074 mov mar,0x336f20
 	001db080 mov ax,mar
 	001db08c farpush bx
 	001db094 setfuncargs 0x1
 	001db09c mov ax,0x43ef20
 	001db0a8 farcall ax
 	001db0b0 farsubsp 0x1
 	001db0b8 sourceline 0x274b
 	001db0c0 mov ax,0x0
 	001db0cc mov bx,ax
 	001db0d8 mov mar,0x31ef20
 	001db0e4 mov ax,mar
 	001db0f0 push op
 	001db0f8 mov op,ax
 	001db100 farpush bx
 	001db108 setfuncargs 0x1
 	001db110 mov ax,0x3a6f20
 	001db11c farcall ax
 	001db124 farsubsp 0x1
 	001db12c pop op
 	001db134 sourceline 0x274c
 	001db13c mov ax,0x14
 	001db148 farpush ax
 	001db150 setfuncargs 0x1
 	001db158 mov ax,0x426f20
 	001db164 farcall ax
 	001db16c farsubsp 0x1
 	001db174 sourceline 0x274d
 	001db17c push op
 	001db184 mov ax,0x0
 	001db190 farpush ax
 	001db198 mov ax,0x32
 	001db1a4 farpush ax
 	001db1ac mov mar,0xdcef20
 	001db1b8 mov ax,mar
 	001db1c4 mov op,ax
 	001db1cc setfuncargs 0x2
 	001db1d4 mov ax,0x2fef20
 	001db1e0 farcall ax
 	001db1e8 farsubsp 0x2
 	001db1f0 pop op
 	001db1f8 sourceline 0x274e
 	001db200 mov ax,0x46
 	001db20c farpush ax
 	001db214 setfuncargs 0x1
 	001db21c mov ax,0x426f20
 	001db228 farcall ax
 	001db230 farsubsp 0x1
 	001db238 sourceline 0x274f
 	001db240 push op
 	001db248 mov ax,0x426
 	001db254 farpush ax
 	001db25c mov ax,0x397
 	001db268 farpush ax
 	001db270 mov ax,0x0
 	001db27c farpush ax
 	001db284 mov ax,0x3
 	001db290 farpush ax
 	001db298 mov ax,0x1
 	001db2a4 farpush ax
 	001db2ac mov mar,0x3cef20
 	001db2b8 mov ax,mar
 	001db2c4 mov op,ax
 	001db2cc setfuncargs 0x5
 	001db2d4 mov ax,0x536f20
 	001db2e0 farcall ax
 	001db2e8 farsubsp 0x5
 	001db2f0 pop op
 	001db2f8 sourceline 0x2750
 	001db300 mov ax,0x19
 	001db30c farpush ax
 	001db314 setfuncargs 0x1
 	001db31c mov ax,0x426f20
 	001db328 farcall ax
 	001db330 farsubsp 0x1
 	001db338 sourceline 0x2751
 	001db340 push op
 	001db348 mov ax,0x0
 	001db354 farpush ax
 	001db35c mov ax,0x32
 	001db368 farpush ax
 	001db370 mov mar,0xdd6f20
 	001db37c mov ax,mar
 	001db388 mov op,ax
 	001db390 setfuncargs 0x2
 	001db398 mov ax,0x2fef20
 	001db3a4 farcall ax
 	001db3ac farsubsp 0x2
 	001db3b4 pop op
 	001db3bc sourceline 0x2752
 	001db3c4 mov ax,0x10e
 	001db3d0 farpush ax
 	001db3d8 setfuncargs 0x1
 	001db3e0 mov ax,0x426f20
 	001db3ec farcall ax
 	001db3f4 farsubsp 0x1
 	001db3fc sourceline 0x2753
 	001db404 push op
 	001db40c mov ax,0x7cfe
 	001db418 farpush ax
 	001db420 mov ax,-0x1
 	001db42c farpush ax
 	001db434 mov ax,-0x1
 	001db440 farpush ax
 	001db448 mov mar,0x42ef20
 	001db454 push mar
 	001db45c pop mar
 	001db464 memread.ptr ax
 	001db46c push ax
 	001db474 pop mar
 	001db47c mov ax,mar
 	001db488 push op
 	001db490 mov op,ax
 	001db498 setfuncargs 0x0
 	001db4a0 mov ax,0x3d6f20
 	001db4ac farcall ax
 	001db4b4 pop op
 	001db4bc farpush ax
 	001db4c4 mov mar,0xbaef20
 	001db4d0 mov ax,mar
 	001db4dc mov op,ax
 	001db4e4 setfuncargs 0x4
 	001db4ec mov ax,0xc16f20
 	001db4f8 farcall ax
 	001db500 farsubsp 0x4
 	001db508 pop op
 	001db510 sourceline 0x2754
 	001db518 push op
 	001db520 mov ax,0x2c6e4d
 	001db52c farpush ax
 	001db534 mov mar,0xbaef20
 	001db540 mov ax,mar
 	001db54c mov op,ax
 	001db554 setfuncargs 0x1
 	001db55c mov ax,0x6f6f20
 	001db568 farcall ax
 	001db570 farsubsp 0x1
 	001db578 pop op
 	001db580 sourceline 0x2755
 	001db588 push op
 	001db590 mov ax,0x2c6e57
 	001db59c farpush ax
 	001db5a4 mov mar,0x3cef20
 	001db5b0 mov ax,mar
 	001db5bc mov op,ax
 	001db5c4 setfuncargs 0x1
 	001db5cc mov ax,0x6f6f20
 	001db5d8 farcall ax
 	001db5e0 farsubsp 0x1
 	001db5e8 pop op
 	001db5f0 sourceline 0x2756
 	001db5f8 push op
 	001db600 mov ax,0x2c6e98
 	001db60c farpush ax
 	001db614 mov mar,0xbaef20
 	001db620 mov ax,mar
 	001db62c mov op,ax
 	001db634 setfuncargs 0x1
 	001db63c mov ax,0x6f6f20
 	001db648 farcall ax
 	001db650 farsubsp 0x1
 	001db658 pop op
 	001db660 sourceline 0x2757
 	001db668 push op
 	001db670 mov ax,0x2c6ec0
 	001db67c farpush ax
 	001db684 mov mar,0x3cef20
 	001db690 mov ax,mar
 	001db69c mov op,ax
 	001db6a4 setfuncargs 0x1
 	001db6ac mov ax,0x6f6f20
 	001db6b8 farcall ax
 	001db6c0 farsubsp 0x1
 	001db6c8 pop op
 	001db6d0 sourceline 0x2758
 	001db6d8 push op
 	001db6e0 mov ax,0x2c6f10
 	001db6ec farpush ax
 	001db6f4 mov mar,0xbaef20
 	001db700 mov ax,mar
 	001db70c mov op,ax
 	001db714 setfuncargs 0x1
 	001db71c mov ax,0x6f6f20
 	001db728 farcall ax
 	001db730 farsubsp 0x1
 	001db738 pop op
 	001db740 sourceline 0x2759
 	001db748 push op
 	001db750 mov ax,0x2c6f8f
 	001db75c farpush ax
 	001db764 mov mar,0x3cef20
 	001db770 mov ax,mar
 	001db77c mov op,ax
 	001db784 setfuncargs 0x1
 	001db78c mov ax,0x6f6f20
 	001db798 farcall ax
 	001db7a0 farsubsp 0x1
 	001db7a8 pop op
 	001db7b0 sourceline 0x275a
 	001db7b8 push op
 	001db7c0 mov ax,0x2c6fa0
 	001db7cc farpush ax
 	001db7d4 mov mar,0xbaef20
 	001db7e0 mov ax,mar
 	001db7ec mov op,ax
 	001db7f4 setfuncargs 0x1
 	001db7fc mov ax,0x6f6f20
 	001db808 farcall ax
 	001db810 farsubsp 0x1
 	001db818 pop op
 	001db820 sourceline 0x275b
 	001db828 push op
 	001db830 mov ax,0x2c6fe5
 	001db83c farpush ax
 	001db844 mov mar,0x3cef20
 	001db850 mov ax,mar
 	001db85c mov op,ax
 	001db864 setfuncargs 0x1
 	001db86c mov ax,0x6f6f20
 	001db878 farcall ax
 	001db880 farsubsp 0x1
 	001db888 pop op
 	001db890 sourceline 0x275c
 	001db898 push op
 	001db8a0 mov ax,0x2c6ffb
 	001db8ac farpush ax
 	001db8b4 mov mar,0xbaef20
 	001db8c0 mov ax,mar
 	001db8cc mov op,ax
 	001db8d4 setfuncargs 0x1
 	001db8dc mov ax,0x6f6f20
 	001db8e8 farcall ax
 	001db8f0 farsubsp 0x1
 	001db8f8 pop op
 	001db900 sourceline 0x275d
 	001db908 push op
 	001db910 mov ax,0x2c7012
 	001db91c farpush ax
 	001db924 mov mar,0x3cef20
 	001db930 mov ax,mar
 	001db93c mov op,ax
 	001db944 setfuncargs 0x1
 	001db94c mov ax,0x6f6f20
 	001db958 farcall ax
 	001db960 farsubsp 0x1
 	001db968 pop op
 	001db970 sourceline 0x275e
 	001db978 push op
 	001db980 mov ax,0x0
 	001db98c farpush ax
 	001db994 mov ax,0x32
 	001db9a0 farpush ax
 	001db9a8 mov mar,0xd16f20
 	001db9b4 mov ax,mar
 	001db9c0 mov op,ax
 	001db9c8 setfuncargs 0x2
 	001db9d0 mov ax,0x2fef20
 	001db9dc farcall ax
 	001db9e4 farsubsp 0x2
 	001db9ec pop op
 	001db9f4 sourceline 0x275f
 	001db9fc push op
 	001dba04 mov ax,0x426
 	001dba10 farpush ax
 	001dba18 mov ax,0x397
 	001dba24 farpush ax
 	001dba2c mov ax,0x0
 	001dba38 farpush ax
 	001dba40 mov ax,0x2
 	001dba4c farpush ax
 	001dba54 mov ax,0x2
 	001dba60 farpush ax
 	001dba68 mov mar,0x3cef20
 	001dba74 mov ax,mar
 	001dba80 mov op,ax
 	001dba88 setfuncargs 0x5
 	001dba90 mov ax,0x536f20
 	001dba9c farcall ax
 	001dbaa4 farsubsp 0x5
 	001dbaac pop op
 	001dbab4 sourceline 0x2760
 	001dbabc push op
 	001dbac4 mov ax,0x2
 	001dbad0 farpush ax
 	001dbad8 mov mar,0x3cef20
 	001dbae4 mov ax,mar
 	001dbaf0 mov op,ax
 	001dbaf8 setfuncargs 0x1
 	001dbb00 mov ax,0x51ef20
 	001dbb0c farcall ax
 	001dbb14 farsubsp 0x1
 	001dbb1c pop op
 	001dbb24 sourceline 0x2761
 	001dbb2c mov ax,0x0
 	001dbb38 mov bx,ax
 	001dbb44 mov mar,0x3cef20
 	001dbb50 mov ax,mar
 	001dbb5c push op
 	001dbb64 mov op,ax
 	001dbb6c farpush bx
 	001dbb74 setfuncargs 0x1
 	001dbb7c mov ax,0x766f20
 	001dbb88 farcall ax
 	001dbb90 farsubsp 0x1
 	001dbb98 pop op
 	001dbba0 sourceline 0x2762
 	001dbba8 mov mar,0x3cef20
 	001dbbb4 mov ax,mar
 	001dbbc0 push op
 	001dbbc8 mov op,ax
 	001dbbd0 setfuncargs 0x0
 	001dbbd8 mov ax,0x78ef20
 	001dbbe4 farcall ax
 	001dbbec pop op
 	001dbbf4 push ax
 	001dbbfc mov ax,0x7
 	001dbc08 pop bx
 	001dbc10 add bx,ax
 	001dbc1c mov ax,bx
 	001dbc28 mov bx,ax
 	001dbc34 mov mar,0x3cef20
 	001dbc40 mov ax,mar
 	001dbc4c push op
 	001dbc54 mov op,ax
 	001dbc5c farpush bx
 	001dbc64 setfuncargs 0x1
 	001dbc6c mov ax,0x526f20
 	001dbc78 farcall ax
 	001dbc80 farsubsp 0x1
 	001dbc88 pop op
 	001dbc90 sourceline 0x2763
 	001dbc98 mov ax,0x1
 	001dbca4 mov bx,ax
 	001dbcb0 mov mar,0x3cef20
 	001dbcbc mov ax,mar
 	001dbcc8 push op
 	001dbcd0 mov op,ax
 	001dbcd8 farpush bx
 	001dbce0 setfuncargs 0x1
 	001dbce8 mov ax,0x69ef20
 	001dbcf4 farcall ax
 	001dbcfc farsubsp 0x1
 	001dbd04 pop op
 	001dbd0c sourceline 0x2764
 	001dbd14 mov ax,0x0
 	001dbd20 mov mar,0x5eef20
 	001dbd2c memwrite4 ax
 	001dbd34 sourceline 0x2765
 	001dbd3c mov ax,0x1
 	001dbd48 mov bx,ax
 	001dbd54 mov mar,0x336f20
 	001dbd60 mov ax,mar
 	001dbd6c farpush bx
 	001dbd74 setfuncargs 0x1
 	001dbd7c mov ax,0x43ef20
 	001dbd88 farcall ax
 	001dbd90 farsubsp 0x1
 	001dbd98 sourceline 0x2766
 	001dbda0 mov ax,0x1
 	001dbdac mov bx,ax
 	001dbdb8 mov mar,0x67ef20
 	001dbdc4 mov ax,mar
 	001dbdd0 push op
 	001dbdd8 mov op,ax
 	001dbde0 farpush bx
 	001dbde8 setfuncargs 0x1
 	001dbdf0 mov ax,0x3a6f20
 	001dbdfc farcall ax
 	001dbe04 farsubsp 0x1
 	001dbe0c pop op
 	001dbe14 sourceline 0x2767
 	001dbe1c mov ax,0x1
 	001dbe28 mov mar,0x856f20
 	001dbe34 memwrite4 ax
 	001dbe3c sourceline 0x2768
 	001dbe44 mov ax,0x7c
 	001dbe50 mov bx,ax
 	001dbe5c mov mar,0xbaef20
 	001dbe68 mov ax,mar
 	001dbe74 push op
 	001dbe7c mov op,ax
 	001dbe84 farpush bx
 	001dbe8c setfuncargs 0x1
 	001dbe94 mov ax,0x69ef20
 	001dbea0 farcall ax
 	001dbea8 farsubsp 0x1
 	001dbeb0 pop op
 	001dbeb8 sourceline 0x2769
 	001dbec0 push op
 	001dbec8 mov ax,0x7cfe
 	001dbed4 farpush ax
 	001dbedc mov ax,0x85
 	001dbee8 farpush ax
 	001dbef0 mov ax,0xdb
 	001dbefc farpush ax
 	001dbf04 mov ax,0xa
 	001dbf10 farpush ax
 	001dbf18 mov mar,0xbaef20
 	001dbf24 mov ax,mar
 	001dbf30 mov op,ax
 	001dbf38 setfuncargs 0x4
 	001dbf40 mov ax,0xc16f20
 	001dbf4c farcall ax
 	001dbf54 farsubsp 0x4
 	001dbf5c pop op
 	001dbf64 sourceline 0x276a
 	001dbf6c jmp 0x001dc09c
		001dc09c: UNCONDITIONAL_JUMP

	[001dbf74]
		001daeec: CONDITIONAL_JUMP
 	001dbf74 sourceline 0x276d
 	001dbf7c mov ax,0x1
 	001dbf88 mov bx,ax
 	001dbf94 mov mar,0x3cef20
 	001dbfa0 mov ax,mar
 	001dbfac push op
 	001dbfb4 mov op,ax
 	001dbfbc farpush bx
 	001dbfc4 setfuncargs 0x1
 	001dbfcc mov ax,0x69ef20
 	001dbfd8 farcall ax
 	001dbfe0 farsubsp 0x1
 	001dbfe8 pop op
 	001dbff0 sourceline 0x276e
 	001dbff8 push op
 	001dc000 mov ax,0x2c7081
 	001dc00c farpush ax
 	001dc014 mov ax,0x138
 	001dc020 farpush ax
 	001dc028 mov ax,0x92
 	001dc034 farpush ax
 	001dc03c mov ax,0x0
 	001dc048 farpush ax
 	001dc050 mov mar,0x3cef20
 	001dc05c mov ax,mar
 	001dc068 mov op,ax
 	001dc070 setfuncargs 0x4
 	001dc078 mov ax,0x6aef20
 	001dc084 farcall ax
 	001dc08c farsubsp 0x4
 	001dc094 pop op
		001dc09c: FALL_THROUGH

	[001dc09c]
		001daedc: UNCONDITIONAL_JUMP
		001daf34: UNCONDITIONAL_JUMP
		001dbf74: FALL_THROUGH
 	001dc09c sourceline 0x2771
 	001dc0a4 jmp 0x001dc1d4
		001dc1d4: UNCONDITIONAL_JUMP

	[001dc0ac]
		001d8da0: CONDITIONAL_JUMP
 	001dc0ac sourceline 0x2774
 	001dc0b4 mov ax,0x1
 	001dc0c0 mov bx,ax
 	001dc0cc mov mar,0x3cef20
 	001dc0d8 mov ax,mar
 	001dc0e4 push op
 	001dc0ec mov op,ax
 	001dc0f4 farpush bx
 	001dc0fc setfuncargs 0x1
 	001dc104 mov ax,0x69ef20
 	001dc110 farcall ax
 	001dc118 farsubsp 0x1
 	001dc120 pop op
 	001dc128 sourceline 0x2775
 	001dc130 push op
 	001dc138 mov ax,0x2c7081
 	001dc144 farpush ax
 	001dc14c mov ax,0x138
 	001dc158 farpush ax
 	001dc160 mov ax,0x92
 	001dc16c farpush ax
 	001dc174 mov ax,0x0
 	001dc180 farpush ax
 	001dc188 mov mar,0x3cef20
 	001dc194 mov ax,mar
 	001dc1a0 mov op,ax
 	001dc1a8 setfuncargs 0x4
 	001dc1b0 mov ax,0x6aef20
 	001dc1bc farcall ax
 	001dc1c4 farsubsp 0x4
 	001dc1cc pop op
		001dc1d4: FALL_THROUGH

	[001dc1d4]
		001dc09c: UNCONDITIONAL_JUMP
		001dc0ac: FALL_THROUGH
 	001dc1d4 sourceline 0x2777
 	001dc1dc jmp 0x001dc30c
		001dc30c: UNCONDITIONAL_JUMP

	[001dc1e4]
		001d8d48: CONDITIONAL_JUMP
 	001dc1e4 sourceline 0x277a
 	001dc1ec mov ax,0x1
 	001dc1f8 mov bx,ax
 	001dc204 mov mar,0x3cef20
 	001dc210 mov ax,mar
 	001dc21c push op
 	001dc224 mov op,ax
 	001dc22c farpush bx
 	001dc234 setfuncargs 0x1
 	001dc23c mov ax,0x69ef20
 	001dc248 farcall ax
 	001dc250 farsubsp 0x1
 	001dc258 pop op
 	001dc260 sourceline 0x277b
 	001dc268 push op
 	001dc270 mov ax,0x2c7081
 	001dc27c farpush ax
 	001dc284 mov ax,0x138
 	001dc290 farpush ax
 	001dc298 mov ax,0x92
 	001dc2a4 farpush ax
 	001dc2ac mov ax,0x0
 	001dc2b8 farpush ax
 	001dc2c0 mov mar,0x3cef20
 	001dc2cc mov ax,mar
 	001dc2d8 mov op,ax
 	001dc2e0 setfuncargs 0x4
 	001dc2e8 mov ax,0x6aef20
 	001dc2f4 farcall ax
 	001dc2fc farsubsp 0x4
 	001dc304 pop op
		001dc30c: FALL_THROUGH

	[001dc30c]
		001cd2b4: CONDITIONAL_JUMP
		001d4708: UNCONDITIONAL_JUMP
		001d7e8c: UNCONDITIONAL_JUMP
		001d8ca8: UNCONDITIONAL_JUMP
		001d8cb8: CONDITIONAL_JUMP
		001dc1d4: UNCONDITIONAL_JUMP
		001dc1e4: FALL_THROUGH
 	001dc30c sourceline 0x277f
 	001dc314 mov ax,0x0
 	001dc320 stackptr 0x8
 	001dc328 memzerond
 	001dc32c ret

SliderInventory_OnChange$1:
	[001dc330]
 	001dc330 sourceline 0x2785
 	001dc338 thisaddr
 	001dc340 stackptr 0x8
 	001dc348 memread4 ax
 	001dc350 meminit ax
 	001dc358 sourceline 0x2786
*	001dc360 mov mar,0x64ef20
 	001dc36c mov ax,mar
 	001dc378 push op
 	001dc380 mov op,ax
 	001dc388 setfuncargs 0x0
 	001dc390 mov ax,0xd86f20
 	001dc39c farcall ax
 	001dc3a4 pop op
 	001dc3ac push ax
 	001dc3b4 mov mar,0x64ef20
 	001dc3c0 mov ax,mar
 	001dc3cc push op
 	001dc3d4 mov op,ax
 	001dc3dc setfuncargs 0x0
 	001dc3e4 mov ax,0xe36f20
 	001dc3f0 farcall ax
 	001dc3f8 pop op
 	001dc400 pop bx
 	001dc408 sub bx,ax
 	001dc414 mov ax,bx
 	001dc420 push ax
 	001dc428 mov mar,0x63ef20
 	001dc434 mov ax,mar
 	001dc440 push op
 	001dc448 mov op,ax
 	001dc450 setfuncargs 0x0
 	001dc458 mov ax,0xd96f20
 	001dc464 farcall ax
 	001dc46c pop op
 	001dc474 pop bx
 	001dc47c mul bx,ax
 	001dc488 mov ax,bx
 	001dc494 mov bx,ax
 	001dc4a0 mov mar,0x63ef20
 	001dc4ac mov ax,mar
 	001dc4b8 push op
 	001dc4c0 mov op,ax
 	001dc4c8 farpush bx
 	001dc4d0 setfuncargs 0x1
 	001dc4d8 mov ax,0xdaef20
 	001dc4e4 farcall ax
 	001dc4ec farsubsp 0x1
 	001dc4f4 pop op
 	001dc4fc sourceline 0x2787
 	001dc504 mov ax,0x0
 	001dc510 stackptr 0x8
 	001dc518 memzerond
 	001dc51c ret

btnContinue_OnClick$2:
	[001dc520]
 	001dc520 sourceline 0x278f
 	001dc528 thisaddr
 	001dc530 stackptr 0x8
 	001dc538 memread4 ax
 	001dc540 meminit ax
 	001dc548 sourceline 0x2790
 	001dc550 mov ax,0x0
 	001dc55c mov bx,ax
*	001dc568 mov mar,0x326f20
 	001dc574 mov ax,mar
 	001dc580 push op
 	001dc588 mov op,ax
 	001dc590 farpush bx
 	001dc598 setfuncargs 0x1
 	001dc5a0 mov ax,0x3a6f20
 	001dc5ac farcall ax
 	001dc5b4 farsubsp 0x1
 	001dc5bc pop op
 	001dc5c4 sourceline 0x2791
 	001dc5cc setfuncargs 0x0
 	001dc5d4 mov ax,0x75ef20
 	001dc5e0 farcall ax
 	001dc5e8 sourceline 0x2792
 	001dc5f0 mov ax,0x11
 	001dc5fc mov mar,0x3c6f20
 	001dc608 memwrite4 ax
 	001dc610 sourceline 0x2793
 	001dc618 mov mar,0x47ef20
 	001dc624 memread4 ax
 	001dc62c jz 0x001dc73c
		001dc73c: CONDITIONAL_JUMP
		001dc634: FALL_THROUGH

	[001dc634]
		001dc520: FALL_THROUGH
 	001dc634 mov ax,0x1
 	001dc640 mov bx,ax
 	001dc64c mov mar,0x36ef20
 	001dc658 mov ax,mar
 	001dc664 push op
 	001dc66c mov op,ax
 	001dc674 farpush bx
 	001dc67c setfuncargs 0x1
 	001dc684 mov ax,0x3a6f20
 	001dc690 farcall ax
 	001dc698 farsubsp 0x1
 	001dc6a0 pop op
 	001dc6a8 mov ax,0x1
 	001dc6b4 mov bx,ax
 	001dc6c0 mov mar,0x486f20
 	001dc6cc mov ax,mar
 	001dc6d8 push op
 	001dc6e0 mov op,ax
 	001dc6e8 farpush bx
 	001dc6f0 setfuncargs 0x1
 	001dc6f8 mov ax,0x3a6f20
 	001dc704 farcall ax
 	001dc70c farsubsp 0x1
 	001dc714 pop op
 	001dc71c mov ax,0x1
 	001dc728 mov mar,0x48ef20
 	001dc734 memwrite4 ax
		001dc73c: FALL_THROUGH

	[001dc73c]
		001dc520: CONDITIONAL_JUMP
		001dc634: FALL_THROUGH
 	001dc73c sourceline 0x2794
 	001dc744 mov ax,0x0
 	001dc750 stackptr 0x8
 	001dc758 memzerond
 	001dc75c ret

BtnQuitGame_OnClick$2:
	[001dc760]
 	001dc760 sourceline 0x2799
 	001dc768 thisaddr
 	001dc770 stackptr 0x8
 	001dc778 memread4 ax
 	001dc780 meminit ax
 	001dc788 sourceline 0x279a
 	001dc790 mov ax,0x0
 	001dc79c mov bx,ax
*	001dc7a8 mov mar,0x326f20
 	001dc7b4 mov ax,mar
 	001dc7c0 push op
 	001dc7c8 mov op,ax
 	001dc7d0 farpush bx
 	001dc7d8 setfuncargs 0x1
 	001dc7e0 mov ax,0xe3ef20
 	001dc7ec farcall ax
 	001dc7f4 farsubsp 0x1
 	001dc7fc pop op
 	001dc804 sourceline 0x279b
 	001dc80c mov ax,0x0
 	001dc818 setfuncargs 0x0
 	001dc820 mov ax,0x3e6f20
 	001dc82c farcall ax
 	001dc834 push ax
 	001dc83c mov ax,0x2c787b
 	001dc848 pop bx
 	001dc850 streq bx,ax
 	001dc85c mov ax,bx
 	001dc868 jz 0x001dcbe4
		001dcbe4: CONDITIONAL_JUMP
		001dc870: FALL_THROUGH

	[001dc870]
		001dc760: FALL_THROUGH
 	001dc870 sourceline 0x279d
 	001dc878 mov ax,0xe23
 	001dc884 mov bx,ax
 	001dc890 mov mar,0xe46f20
 	001dc89c mov ax,mar
 	001dc8a8 push op
 	001dc8b0 mov op,ax
 	001dc8b8 farpush bx
 	001dc8c0 setfuncargs 0x1
 	001dc8c8 mov ax,0x356f20
 	001dc8d4 farcall ax
 	001dc8dc farsubsp 0x1
 	001dc8e4 pop op
 	001dc8ec sourceline 0x279e
 	001dc8f4 mov ax,0xe22
 	001dc900 mov bx,ax
 	001dc90c mov mar,0xe46f20
 	001dc918 mov ax,mar
 	001dc924 push op
 	001dc92c mov op,ax
 	001dc934 farpush bx
 	001dc93c setfuncargs 0x1
 	001dc944 mov ax,0x3f6f20
 	001dc950 farcall ax
 	001dc958 farsubsp 0x1
 	001dc960 pop op
 	001dc968 sourceline 0x279f
 	001dc970 mov ax,0xe22
 	001dc97c mov bx,ax
 	001dc988 mov mar,0xe46f20
 	001dc994 mov ax,mar
 	001dc9a0 push op
 	001dc9a8 mov op,ax
 	001dc9b0 farpush bx
 	001dc9b8 setfuncargs 0x1
 	001dc9c0 mov ax,0x3fef20
 	001dc9cc farcall ax
 	001dc9d4 farsubsp 0x1
 	001dc9dc pop op
 	001dc9e4 sourceline 0x27a0
 	001dc9ec mov ax,0xe21
 	001dc9f8 mov bx,ax
 	001dca04 mov mar,0xe4ef20
 	001dca10 mov ax,mar
 	001dca1c push op
 	001dca24 mov op,ax
 	001dca2c farpush bx
 	001dca34 setfuncargs 0x1
 	001dca3c mov ax,0x356f20
 	001dca48 farcall ax
 	001dca50 farsubsp 0x1
 	001dca58 pop op
 	001dca60 sourceline 0x27a1
 	001dca68 mov ax,0xe20
 	001dca74 mov bx,ax
 	001dca80 mov mar,0xe4ef20
 	001dca8c mov ax,mar
 	001dca98 push op
 	001dcaa0 mov op,ax
 	001dcaa8 farpush bx
 	001dcab0 setfuncargs 0x1
 	001dcab8 mov ax,0x3f6f20
 	001dcac4 farcall ax
 	001dcacc farsubsp 0x1
 	001dcad4 pop op
 	001dcadc sourceline 0x27a2
 	001dcae4 mov ax,0xe20
 	001dcaf0 mov bx,ax
 	001dcafc mov mar,0xe4ef20
 	001dcb08 mov ax,mar
 	001dcb14 push op
 	001dcb1c mov op,ax
 	001dcb24 farpush bx
 	001dcb2c setfuncargs 0x1
 	001dcb34 mov ax,0x3fef20
 	001dcb40 farcall ax
 	001dcb48 farsubsp 0x1
 	001dcb50 pop op
 	001dcb58 sourceline 0x27a3
 	001dcb60 mov ax,0xe1a
 	001dcb6c mov bx,ax
 	001dcb78 mov mar,0xe56f20
 	001dcb84 mov ax,mar
 	001dcb90 push op
 	001dcb98 mov op,ax
 	001dcba0 farpush bx
 	001dcba8 setfuncargs 0x1
 	001dcbb0 mov ax,0x356f20
 	001dcbbc farcall ax
 	001dcbc4 farsubsp 0x1
 	001dcbcc pop op
 	001dcbd4 sourceline 0x27a4
 	001dcbdc jmp 0x001dcf48
		001dcf48: UNCONDITIONAL_JUMP

	[001dcbe4]
		001dc760: CONDITIONAL_JUMP
 	001dcbe4 sourceline 0x27a7
 	001dcbec mov ax,0xe1d
 	001dcbf8 mov bx,ax
 	001dcc04 mov mar,0xe46f20
 	001dcc10 mov ax,mar
 	001dcc1c push op
 	001dcc24 mov op,ax
 	001dcc2c farpush bx
 	001dcc34 setfuncargs 0x1
 	001dcc3c mov ax,0x356f20
 	001dcc48 farcall ax
 	001dcc50 farsubsp 0x1
 	001dcc58 pop op
 	001dcc60 sourceline 0x27a8
 	001dcc68 mov ax,0xe1c
 	001dcc74 mov bx,ax
 	001dcc80 mov mar,0xe46f20
 	001dcc8c mov ax,mar
 	001dcc98 push op
 	001dcca0 mov op,ax
 	001dcca8 farpush bx
 	001dccb0 setfuncargs 0x1
 	001dccb8 mov ax,0x3f6f20
 	001dccc4 farcall ax
 	001dcccc farsubsp 0x1
 	001dccd4 pop op
 	001dccdc sourceline 0x27a9
 	001dcce4 mov ax,0xe1c
 	001dccf0 mov bx,ax
 	001dccfc mov mar,0xe46f20
 	001dcd08 mov ax,mar
 	001dcd14 push op
 	001dcd1c mov op,ax
 	001dcd24 farpush bx
 	001dcd2c setfuncargs 0x1
 	001dcd34 mov ax,0x3fef20
 	001dcd40 farcall ax
 	001dcd48 farsubsp 0x1
 	001dcd50 pop op
 	001dcd58 sourceline 0x27aa
 	001dcd60 mov ax,0xe1f
 	001dcd6c mov bx,ax
 	001dcd78 mov mar,0xe4ef20
 	001dcd84 mov ax,mar
 	001dcd90 push op
 	001dcd98 mov op,ax
 	001dcda0 farpush bx
 	001dcda8 setfuncargs 0x1
 	001dcdb0 mov ax,0x356f20
 	001dcdbc farcall ax
 	001dcdc4 farsubsp 0x1
 	001dcdcc pop op
 	001dcdd4 sourceline 0x27ab
 	001dcddc mov ax,0xe1e
 	001dcde8 mov bx,ax
 	001dcdf4 mov mar,0xe4ef20
 	001dce00 mov ax,mar
 	001dce0c push op
 	001dce14 mov op,ax
 	001dce1c farpush bx
 	001dce24 setfuncargs 0x1
 	001dce2c mov ax,0x3f6f20
 	001dce38 farcall ax
 	001dce40 farsubsp 0x1
 	001dce48 pop op
 	001dce50 sourceline 0x27ac
 	001dce58 mov ax,0xe1e
 	001dce64 mov bx,ax
 	001dce70 mov mar,0xe4ef20
 	001dce7c mov ax,mar
 	001dce88 push op
 	001dce90 mov op,ax
 	001dce98 farpush bx
 	001dcea0 setfuncargs 0x1
 	001dcea8 mov ax,0x3fef20
 	001dceb4 farcall ax
 	001dcebc farsubsp 0x1
 	001dcec4 pop op
 	001dcecc sourceline 0x27ad
 	001dced4 mov ax,0xe1b
 	001dcee0 mov bx,ax
 	001dceec mov mar,0xe56f20
 	001dcef8 mov ax,mar
 	001dcf04 push op
 	001dcf0c mov op,ax
 	001dcf14 farpush bx
 	001dcf1c setfuncargs 0x1
 	001dcf24 mov ax,0x356f20
 	001dcf30 farcall ax
 	001dcf38 farsubsp 0x1
 	001dcf40 pop op
		001dcf48: FALL_THROUGH

	[001dcf48]
		001dc870: UNCONDITIONAL_JUMP
		001dcbe4: FALL_THROUGH
 	001dcf48 sourceline 0x27af
 	001dcf50 mov mar,0x42ef20
 	001dcf5c push mar
 	001dcf64 pop mar
 	001dcf6c memread.ptr ax
 	001dcf74 push ax
 	001dcf7c pop mar
 	001dcf84 mov ax,mar
 	001dcf90 push op
 	001dcf98 mov op,ax
 	001dcfa0 setfuncargs 0x0
 	001dcfa8 mov ax,0x3d6f20
 	001dcfb4 farcall ax
 	001dcfbc pop op
 	001dcfc4 push ax
 	001dcfcc mov ax,0x2a
 	001dcfd8 pop bx
 	001dcfe0 cmpeq bx,ax
 	001dcfec mov ax,bx
 	001dcff8 jz 0x001dd084
		001dd084: CONDITIONAL_JUMP
		001dd000: FALL_THROUGH

	[001dd000]
		001dcf48: FALL_THROUGH
 	001dd000 push op
 	001dd008 mov ax,0x14
 	001dd014 farpush ax
 	001dd01c mov ax,0x1
 	001dd028 farpush ax
 	001dd030 mov mar,0x54ef20
 	001dd03c mov ax,mar
 	001dd048 mov op,ax
 	001dd050 setfuncargs 0x2
 	001dd058 mov ax,0xe5ef20
 	001dd064 farcall ax
 	001dd06c farsubsp 0x2
 	001dd074 pop op
 	001dd07c jmp 0x001dd108
		001dd108: UNCONDITIONAL_JUMP

	[001dd084]
		001dcf48: CONDITIONAL_JUMP
 	001dd084 sourceline 0x27b0
 	001dd08c push op
 	001dd094 mov ax,0x0
 	001dd0a0 farpush ax
 	001dd0a8 mov ax,0x0
 	001dd0b4 farpush ax
 	001dd0bc mov mar,0x54ef20
 	001dd0c8 mov ax,mar
 	001dd0d4 mov op,ax
 	001dd0dc setfuncargs 0x2
 	001dd0e4 mov ax,0xe5ef20
 	001dd0f0 farcall ax
 	001dd0f8 farsubsp 0x2
 	001dd100 pop op
		001dd108: FALL_THROUGH

	[001dd108]
		001dd000: UNCONDITIONAL_JUMP
		001dd084: FALL_THROUGH
 	001dd108 sourceline 0x27b1
 	001dd110 mov ax,0x1
 	001dd11c mov bx,ax
 	001dd128 mov mar,0x54ef20
 	001dd134 mov ax,mar
 	001dd140 push op
 	001dd148 mov op,ax
 	001dd150 farpush bx
 	001dd158 setfuncargs 0x1
 	001dd160 mov ax,0x3a6f20
 	001dd16c farcall ax
 	001dd174 farsubsp 0x1
 	001dd17c pop op
 	001dd184 sourceline 0x27b2
 	001dd18c mov ax,0x0
 	001dd198 stackptr 0x8
 	001dd1a0 memzerond
 	001dd1a4 ret

btnOptions_OnClick$2:
	[001dd1a8]
 	001dd1a8 sourceline 0x27b7
 	001dd1b0 thisaddr
 	001dd1b8 stackptr 0x8
 	001dd1c0 memread4 ax
 	001dd1c8 meminit ax
 	001dd1d0 sourceline 0x27b8
*	001dd1d8 mov mar,0xe66f20
 	001dd1e4 memread4 ax
 	001dd1ec mov bx,ax
 	001dd1f8 mov mar,0xe6ef20
 	001dd204 mov ax,mar
 	001dd210 push op
 	001dd218 mov op,ax
 	001dd220 farpush bx
 	001dd228 setfuncargs 0x1
 	001dd230 mov ax,0xd9ef20
 	001dd23c farcall ax
 	001dd244 farsubsp 0x1
 	001dd24c pop op
 	001dd254 sourceline 0x27b9
 	001dd25c mov mar,0xe76f20
 	001dd268 memread4 ax
 	001dd270 mov bx,ax
 	001dd27c mov mar,0xe7ef20
 	001dd288 mov ax,mar
 	001dd294 push op
 	001dd29c mov op,ax
 	001dd2a4 farpush bx
 	001dd2ac setfuncargs 0x1
 	001dd2b4 mov ax,0xd9ef20
 	001dd2c0 farcall ax
 	001dd2c8 farsubsp 0x1
 	001dd2d0 pop op
 	001dd2d8 sourceline 0x27ba
 	001dd2e0 mov mar,0xe86f20
 	001dd2ec memread4 ax
 	001dd2f4 mov bx,ax
 	001dd300 mov mar,0xe8ef20
 	001dd30c mov ax,mar
 	001dd318 push op
 	001dd320 mov op,ax
 	001dd328 farpush bx
 	001dd330 setfuncargs 0x1
 	001dd338 mov ax,0xd9ef20
 	001dd344 farcall ax
 	001dd34c farsubsp 0x1
 	001dd354 pop op
 	001dd35c sourceline 0x27bb
 	001dd364 mov mar,0xe96f20
 	001dd370 memread4 ax
 	001dd378 jz 0x001dd3fc
		001dd3fc: CONDITIONAL_JUMP
		001dd380: FALL_THROUGH

	[001dd380]
		001dd1a8: FALL_THROUGH
 	001dd380 mov ax,0xe79
 	001dd38c mov bx,ax
 	001dd398 mov mar,0xe9ef20
 	001dd3a4 mov ax,mar
 	001dd3b0 push op
 	001dd3b8 mov op,ax
 	001dd3c0 farpush bx
 	001dd3c8 setfuncargs 0x1
 	001dd3d0 mov ax,0x356f20
 	001dd3dc farcall ax
 	001dd3e4 farsubsp 0x1
 	001dd3ec pop op
 	001dd3f4 jmp 0x001dd478
		001dd478: UNCONDITIONAL_JUMP

	[001dd3fc]
		001dd1a8: CONDITIONAL_JUMP
 	001dd3fc sourceline 0x27bc
 	001dd404 mov ax,0xe7a
 	001dd410 mov bx,ax
 	001dd41c mov mar,0xe9ef20
 	001dd428 mov ax,mar
 	001dd434 push op
 	001dd43c mov op,ax
 	001dd444 farpush bx
 	001dd44c setfuncargs 0x1
 	001dd454 mov ax,0x356f20
 	001dd460 farcall ax
 	001dd468 farsubsp 0x1
 	001dd470 pop op
		001dd478: FALL_THROUGH

	[001dd478]
		001dd380: UNCONDITIONAL_JUMP
		001dd3fc: FALL_THROUGH
 	001dd478 sourceline 0x27bd
 	001dd480 mov ax,0x0
 	001dd48c setfuncargs 0x0
 	001dd494 mov ax,0x3e6f20
 	001dd4a0 farcall ax
 	001dd4a8 push ax
 	001dd4b0 mov ax,0x2c70be
 	001dd4bc pop bx
 	001dd4c4 streq bx,ax
 	001dd4d0 mov ax,bx
 	001dd4dc jz 0x001dd7dc
		001dd7dc: CONDITIONAL_JUMP
		001dd4e4: FALL_THROUGH

	[001dd4e4]
		001dd478: FALL_THROUGH
 	001dd4e4 sourceline 0x27bf
 	001dd4ec mov ax,0x7af
 	001dd4f8 mov bx,ax
 	001dd504 mov mar,0xea6f20
 	001dd510 mov ax,mar
 	001dd51c push op
 	001dd524 mov op,ax
 	001dd52c farpush bx
 	001dd534 setfuncargs 0x1
 	001dd53c mov ax,0x356f20
 	001dd548 farcall ax
 	001dd550 farsubsp 0x1
 	001dd558 pop op
 	001dd560 sourceline 0x27c0
 	001dd568 mov ax,0x7bc
 	001dd574 mov bx,ax
 	001dd580 mov mar,0xeaef20
 	001dd58c mov ax,mar
 	001dd598 push op
 	001dd5a0 mov op,ax
 	001dd5a8 farpush bx
 	001dd5b0 setfuncargs 0x1
 	001dd5b8 mov ax,0x836f20
 	001dd5c4 farcall ax
 	001dd5cc farsubsp 0x1
 	001dd5d4 pop op
 	001dd5dc sourceline 0x27c1
 	001dd5e4 mov ax,0x7bd
 	001dd5f0 mov bx,ax
 	001dd5fc mov mar,0xeb6f20
 	001dd608 mov ax,mar
 	001dd614 push op
 	001dd61c mov op,ax
 	001dd624 farpush bx
 	001dd62c setfuncargs 0x1
 	001dd634 mov ax,0x356f20
 	001dd640 farcall ax
 	001dd648 farsubsp 0x1
 	001dd650 pop op
 	001dd658 sourceline 0x27c2
 	001dd660 mov ax,0x7be
 	001dd66c mov bx,ax
 	001dd678 mov mar,0xeb6f20
 	001dd684 mov ax,mar
 	001dd690 push op
 	001dd698 mov op,ax
 	001dd6a0 farpush bx
 	001dd6a8 setfuncargs 0x1
 	001dd6b0 mov ax,0x3f6f20
 	001dd6bc farcall ax
 	001dd6c4 farsubsp 0x1
 	001dd6cc pop op
 	001dd6d4 sourceline 0x27c3
 	001dd6dc mov ax,0x7be
 	001dd6e8 mov bx,ax
 	001dd6f4 mov mar,0xeb6f20
 	001dd700 mov ax,mar
 	001dd70c push op
 	001dd714 mov op,ax
 	001dd71c farpush bx
 	001dd724 setfuncargs 0x1
 	001dd72c mov ax,0x3fef20
 	001dd738 farcall ax
 	001dd740 farsubsp 0x1
 	001dd748 pop op
 	001dd750 sourceline 0x27c4
 	001dd758 mov ax,0x7bf
 	001dd764 mov bx,ax
 	001dd770 mov mar,0xebef20
 	001dd77c mov ax,mar
 	001dd788 push op
 	001dd790 mov op,ax
 	001dd798 farpush bx
 	001dd7a0 setfuncargs 0x1
 	001dd7a8 mov ax,0x356f20
 	001dd7b4 farcall ax
 	001dd7bc farsubsp 0x1
 	001dd7c4 pop op
 	001dd7cc sourceline 0x27c5
 	001dd7d4 jmp 0x001ddac4
		001ddac4: UNCONDITIONAL_JUMP

	[001dd7dc]
		001dd478: CONDITIONAL_JUMP
 	001dd7dc sourceline 0x27c8
 	001dd7e4 mov ax,0x7ae
 	001dd7f0 mov bx,ax
 	001dd7fc mov mar,0xea6f20
 	001dd808 mov ax,mar
 	001dd814 push op
 	001dd81c mov op,ax
 	001dd824 farpush bx
 	001dd82c setfuncargs 0x1
 	001dd834 mov ax,0x356f20
 	001dd840 farcall ax
 	001dd848 farsubsp 0x1
 	001dd850 pop op
 	001dd858 sourceline 0x27c9
 	001dd860 mov ax,0x7a4
 	001dd86c mov bx,ax
 	001dd878 mov mar,0xeaef20
 	001dd884 mov ax,mar
 	001dd890 push op
 	001dd898 mov op,ax
 	001dd8a0 farpush bx
 	001dd8a8 setfuncargs 0x1
 	001dd8b0 mov ax,0x836f20
 	001dd8bc farcall ax
 	001dd8c4 farsubsp 0x1
 	001dd8cc pop op
 	001dd8d4 sourceline 0x27ca
 	001dd8dc mov ax,0x7a5
 	001dd8e8 mov bx,ax
 	001dd8f4 mov mar,0xeb6f20
 	001dd900 mov ax,mar
 	001dd90c push op
 	001dd914 mov op,ax
 	001dd91c farpush bx
 	001dd924 setfuncargs 0x1
 	001dd92c mov ax,0x356f20
 	001dd938 farcall ax
 	001dd940 farsubsp 0x1
 	001dd948 pop op
 	001dd950 sourceline 0x27cb
 	001dd958 mov ax,0x7a6
 	001dd964 mov bx,ax
 	001dd970 mov mar,0xeb6f20
 	001dd97c mov ax,mar
 	001dd988 push op
 	001dd990 mov op,ax
 	001dd998 farpush bx
 	001dd9a0 setfuncargs 0x1
 	001dd9a8 mov ax,0x3f6f20
 	001dd9b4 farcall ax
 	001dd9bc farsubsp 0x1
 	001dd9c4 pop op
 	001dd9cc sourceline 0x27cc
 	001dd9d4 mov ax,0x7a6
 	001dd9e0 mov bx,ax
 	001dd9ec mov mar,0xeb6f20
 	001dd9f8 mov ax,mar
 	001dda04 push op
 	001dda0c mov op,ax
 	001dda14 farpush bx
 	001dda1c setfuncargs 0x1
 	001dda24 mov ax,0x3fef20
 	001dda30 farcall ax
 	001dda38 farsubsp 0x1
 	001dda40 pop op
 	001dda48 sourceline 0x27cd
 	001dda50 mov ax,0x7a9
 	001dda5c mov bx,ax
 	001dda68 mov mar,0xebef20
 	001dda74 mov ax,mar
 	001dda80 push op
 	001dda88 mov op,ax
 	001dda90 farpush bx
 	001dda98 setfuncargs 0x1
 	001ddaa0 mov ax,0x356f20
 	001ddaac farcall ax
 	001ddab4 farsubsp 0x1
 	001ddabc pop op
		001ddac4: FALL_THROUGH

	[001ddac4]
		001dd4e4: UNCONDITIONAL_JUMP
		001dd7dc: FALL_THROUGH
 	001ddac4 sourceline 0x27cf
 	001ddacc mov ax,0x1
 	001ddad8 mov bx,ax
 	001ddae4 mov mar,0xeaef20
 	001ddaf0 mov ax,mar
 	001ddafc push op
 	001ddb04 mov op,ax
 	001ddb0c farpush bx
 	001ddb14 setfuncargs 0x1
 	001ddb1c mov ax,0x3a6f20
 	001ddb28 farcall ax
 	001ddb30 farsubsp 0x1
 	001ddb38 pop op
 	001ddb40 sourceline 0x27d0
 	001ddb48 mov ax,0x0
 	001ddb54 stackptr 0x8
 	001ddb5c memzerond
 	001ddb60 ret

btnSaveGame_OnClick$2:
	[001ddb64]
 	001ddb64 sourceline 0x27d5
 	001ddb6c thisaddr
 	001ddb74 stackptr 0x8
 	001ddb7c memread4 ax
 	001ddb84 meminit ax
 	001ddb8c sourceline 0x27d6
 	001ddb94 mov ax,0x0
 	001ddba0 setfuncargs 0x0
 	001ddba8 mov ax,0x3e6f20
 	001ddbb4 farcall ax
 	001ddbbc push ax
 	001ddbc4 mov ax,0x2c787b
 	001ddbd0 pop bx
 	001ddbd8 streq bx,ax
 	001ddbe4 mov ax,bx
 	001ddbf0 jz 0x001de15c
		001de15c: CONDITIONAL_JUMP
		001ddbf8: FALL_THROUGH

	[001ddbf8]
		001ddb64: FALL_THROUGH
 	001ddbf8 sourceline 0x27d8
 	001ddc00 mov ax,0x7a5
 	001ddc0c mov bx,ax
*	001ddc18 mov mar,0x556f20
 	001ddc24 mov ax,mar
 	001ddc30 push op
 	001ddc38 mov op,ax
 	001ddc40 farpush bx
 	001ddc48 setfuncargs 0x1
 	001ddc50 mov ax,0x356f20
 	001ddc5c farcall ax
 	001ddc64 farsubsp 0x1
 	001ddc6c pop op
 	001ddc74 sourceline 0x27d9
 	001ddc7c mov ax,0x7a6
 	001ddc88 mov bx,ax
 	001ddc94 mov mar,0x556f20
 	001ddca0 mov ax,mar
 	001ddcac push op
 	001ddcb4 mov op,ax
 	001ddcbc farpush bx
 	001ddcc4 setfuncargs 0x1
 	001ddccc mov ax,0x3f6f20
 	001ddcd8 farcall ax
 	001ddce0 farsubsp 0x1
 	001ddce8 pop op
 	001ddcf0 sourceline 0x27da
 	001ddcf8 mov ax,0x7a6
 	001ddd04 mov bx,ax
 	001ddd10 mov mar,0x556f20
 	001ddd1c mov ax,mar
 	001ddd28 push op
 	001ddd30 mov op,ax
 	001ddd38 farpush bx
 	001ddd40 setfuncargs 0x1
 	001ddd48 mov ax,0x3fef20
 	001ddd54 farcall ax
 	001ddd5c farsubsp 0x1
 	001ddd64 pop op
 	001ddd6c sourceline 0x27db
 	001ddd74 mov ax,0x7c1
 	001ddd80 mov bx,ax
 	001ddd8c mov mar,0x55ef20
 	001ddd98 mov ax,mar
 	001ddda4 push op
 	001dddac mov op,ax
 	001dddb4 farpush bx
 	001dddbc setfuncargs 0x1
 	001dddc4 mov ax,0x356f20
 	001dddd0 farcall ax
 	001dddd8 farsubsp 0x1
 	001ddde0 pop op
 	001ddde8 sourceline 0x27dc
 	001dddf0 mov ax,0x7c2
 	001dddfc mov bx,ax
 	001dde08 mov mar,0x55ef20
 	001dde14 mov ax,mar
 	001dde20 push op
 	001dde28 mov op,ax
 	001dde30 farpush bx
 	001dde38 setfuncargs 0x1
 	001dde40 mov ax,0x3f6f20
 	001dde4c farcall ax
 	001dde54 farsubsp 0x1
 	001dde5c pop op
 	001dde64 sourceline 0x27dd
 	001dde6c mov ax,0x7c2
 	001dde78 mov bx,ax
 	001dde84 mov mar,0x55ef20
 	001dde90 mov ax,mar
 	001dde9c push op
 	001ddea4 mov op,ax
 	001ddeac farpush bx
 	001ddeb4 setfuncargs 0x1
 	001ddebc mov ax,0x3fef20
 	001ddec8 farcall ax
 	001dded0 farsubsp 0x1
 	001dded8 pop op
 	001ddee0 sourceline 0x27de
 	001ddee8 mov ax,0x7c5
 	001ddef4 mov bx,ax
 	001ddf00 mov mar,0x566f20
 	001ddf0c mov ax,mar
 	001ddf18 push op
 	001ddf20 mov op,ax
 	001ddf28 farpush bx
 	001ddf30 setfuncargs 0x1
 	001ddf38 mov ax,0x356f20
 	001ddf44 farcall ax
 	001ddf4c farsubsp 0x1
 	001ddf54 pop op
 	001ddf5c sourceline 0x27df
 	001ddf64 mov ax,0x7c6
 	001ddf70 mov bx,ax
 	001ddf7c mov mar,0x566f20
 	001ddf88 mov ax,mar
 	001ddf94 push op
 	001ddf9c mov op,ax
 	001ddfa4 farpush bx
 	001ddfac setfuncargs 0x1
 	001ddfb4 mov ax,0x3f6f20
 	001ddfc0 farcall ax
 	001ddfc8 farsubsp 0x1
 	001ddfd0 pop op
 	001ddfd8 sourceline 0x27e0
 	001ddfe0 mov ax,0x7c6
 	001ddfec mov bx,ax
 	001ddff8 mov mar,0x566f20
 	001de004 mov ax,mar
 	001de010 push op
 	001de018 mov op,ax
 	001de020 farpush bx
 	001de028 setfuncargs 0x1
 	001de030 mov ax,0x3fef20
 	001de03c farcall ax
 	001de044 farsubsp 0x1
 	001de04c pop op
 	001de054 sourceline 0x27e1
 	001de05c mov ax,0x7c9
 	001de068 mov bx,ax
 	001de074 mov mar,0x56ef20
 	001de080 mov ax,mar
 	001de08c push op
 	001de094 mov op,ax
 	001de09c farpush bx
 	001de0a4 setfuncargs 0x1
 	001de0ac mov ax,0x356f20
 	001de0b8 farcall ax
 	001de0c0 farsubsp 0x1
 	001de0c8 pop op
 	001de0d0 sourceline 0x27e2
 	001de0d8 mov ax,0x7c0
 	001de0e4 mov bx,ax
 	001de0f0 mov mar,0x546f20
 	001de0fc mov ax,mar
 	001de108 push op
 	001de110 mov op,ax
 	001de118 farpush bx
 	001de120 setfuncargs 0x1
 	001de128 mov ax,0x836f20
 	001de134 farcall ax
 	001de13c farsubsp 0x1
 	001de144 pop op
 	001de14c sourceline 0x27e3
 	001de154 jmp 0x001de6b0
		001de6b0: UNCONDITIONAL_JUMP

	[001de15c]
		001ddb64: CONDITIONAL_JUMP
 	001de15c sourceline 0x27e6
 	001de164 mov ax,0x7bd
 	001de170 mov bx,ax
 	001de17c mov mar,0x556f20
 	001de188 mov ax,mar
 	001de194 push op
 	001de19c mov op,ax
 	001de1a4 farpush bx
 	001de1ac setfuncargs 0x1
 	001de1b4 mov ax,0x356f20
 	001de1c0 farcall ax
 	001de1c8 farsubsp 0x1
 	001de1d0 pop op
 	001de1d8 sourceline 0x27e7
 	001de1e0 mov ax,0x7be
 	001de1ec mov bx,ax
 	001de1f8 mov mar,0x556f20
 	001de204 mov ax,mar
 	001de210 push op
 	001de218 mov op,ax
 	001de220 farpush bx
 	001de228 setfuncargs 0x1
 	001de230 mov ax,0x3f6f20
 	001de23c farcall ax
 	001de244 farsubsp 0x1
 	001de24c pop op
 	001de254 sourceline 0x27e8
 	001de25c mov ax,0x7be
 	001de268 mov bx,ax
 	001de274 mov mar,0x556f20
 	001de280 mov ax,mar
 	001de28c push op
 	001de294 mov op,ax
 	001de29c farpush bx
 	001de2a4 setfuncargs 0x1
 	001de2ac mov ax,0x3fef20
 	001de2b8 farcall ax
 	001de2c0 farsubsp 0x1
 	001de2c8 pop op
 	001de2d0 sourceline 0x27e9
 	001de2d8 mov ax,0x7c3
 	001de2e4 mov bx,ax
 	001de2f0 mov mar,0x55ef20
 	001de2fc mov ax,mar
 	001de308 push op
 	001de310 mov op,ax
 	001de318 farpush bx
 	001de320 setfuncargs 0x1
 	001de328 mov ax,0x356f20
 	001de334 farcall ax
 	001de33c farsubsp 0x1
 	001de344 pop op
 	001de34c sourceline 0x27ea
 	001de354 mov ax,0x7c4
 	001de360 mov bx,ax
 	001de36c mov mar,0x55ef20
 	001de378 mov ax,mar
 	001de384 push op
 	001de38c mov op,ax
 	001de394 farpush bx
 	001de39c setfuncargs 0x1
 	001de3a4 mov ax,0x3f6f20
 	001de3b0 farcall ax
 	001de3b8 farsubsp 0x1
 	001de3c0 pop op
 	001de3c8 sourceline 0x27eb
 	001de3d0 mov ax,0x7c4
 	001de3dc mov bx,ax
 	001de3e8 mov mar,0x55ef20
 	001de3f4 mov ax,mar
 	001de400 push op
 	001de408 mov op,ax
 	001de410 farpush bx
 	001de418 setfuncargs 0x1
 	001de420 mov ax,0x3fef20
 	001de42c farcall ax
 	001de434 farsubsp 0x1
 	001de43c pop op
 	001de444 sourceline 0x27ec
 	001de44c mov ax,0x7c7
 	001de458 mov bx,ax
 	001de464 mov mar,0x566f20
 	001de470 mov ax,mar
 	001de47c push op
 	001de484 mov op,ax
 	001de48c farpush bx
 	001de494 setfuncargs 0x1
 	001de49c mov ax,0x356f20
 	001de4a8 farcall ax
 	001de4b0 farsubsp 0x1
 	001de4b8 pop op
 	001de4c0 sourceline 0x27ed
 	001de4c8 mov ax,0x7c8
 	001de4d4 mov bx,ax
 	001de4e0 mov mar,0x566f20
 	001de4ec mov ax,mar
 	001de4f8 push op
 	001de500 mov op,ax
 	001de508 farpush bx
 	001de510 setfuncargs 0x1
 	001de518 mov ax,0x3f6f20
 	001de524 farcall ax
 	001de52c farsubsp 0x1
 	001de534 pop op
 	001de53c sourceline 0x27ee
 	001de544 mov ax,0x7c8
 	001de550 mov bx,ax
 	001de55c mov mar,0x566f20
 	001de568 mov ax,mar
 	001de574 push op
 	001de57c mov op,ax
 	001de584 farpush bx
 	001de58c setfuncargs 0x1
 	001de594 mov ax,0x3fef20
 	001de5a0 farcall ax
 	001de5a8 farsubsp 0x1
 	001de5b0 pop op
 	001de5b8 sourceline 0x27ef
 	001de5c0 mov ax,0x7ca
 	001de5cc mov bx,ax
 	001de5d8 mov mar,0x56ef20
 	001de5e4 mov ax,mar
 	001de5f0 push op
 	001de5f8 mov op,ax
 	001de600 farpush bx
 	001de608 setfuncargs 0x1
 	001de610 mov ax,0x356f20
 	001de61c farcall ax
 	001de624 farsubsp 0x1
 	001de62c pop op
 	001de634 sourceline 0x27f0
 	001de63c mov ax,0x7cf
 	001de648 mov bx,ax
 	001de654 mov mar,0x546f20
 	001de660 mov ax,mar
 	001de66c push op
 	001de674 mov op,ax
 	001de67c farpush bx
 	001de684 setfuncargs 0x1
 	001de68c mov ax,0x836f20
 	001de698 farcall ax
 	001de6a0 farsubsp 0x1
 	001de6a8 pop op
		001de6b0: FALL_THROUGH

	[001de6b0]
		001ddbf8: UNCONDITIONAL_JUMP
		001de15c: FALL_THROUGH
 	001de6b0 sourceline 0x27f2
 	001de6b8 push op
 	001de6c0 mov mar,0x5def20
 	001de6cc mov ax,mar
 	001de6d8 mov op,ax
 	001de6e0 setfuncargs 0x0
 	001de6e8 mov ax,0xec6f20
 	001de6f4 farcall ax
 	001de6fc pop op
 	001de704 sourceline 0x27f3
 	001de70c mov ax,0x2c787b
 	001de718 strnew ax
 	001de720 mov bx,ax
 	001de72c mov mar,0xecef20
 	001de738 mov ax,mar
 	001de744 push op
 	001de74c mov op,ax
 	001de754 farpush bx
 	001de75c setfuncargs 0x1
 	001de764 mov ax,0xed6f20
 	001de770 farcall ax
 	001de778 farsubsp 0x1
 	001de780 pop op
 	001de788 sourceline 0x27f4
 	001de790 mov ax,0x0
 	001de79c mov bx,ax
 	001de7a8 mov mar,0x5def20
 	001de7b4 mov ax,mar
 	001de7c0 push op
 	001de7c8 mov op,ax
 	001de7d0 farpush bx
 	001de7d8 setfuncargs 0x1
 	001de7e0 mov ax,0xedef20
 	001de7ec farcall ax
 	001de7f4 farsubsp 0x1
 	001de7fc pop op
 	001de804 sourceline 0x27f5
 	001de80c mov ax,-0x1
 	001de818 mov bx,ax
 	001de824 mov mar,0x5def20
 	001de830 mov ax,mar
 	001de83c push op
 	001de844 mov op,ax
 	001de84c farpush bx
 	001de854 setfuncargs 0x1
 	001de85c mov ax,0xee6f20
 	001de868 farcall ax
 	001de870 farsubsp 0x1
 	001de878 pop op
 	001de880 sourceline 0x27f6
 	001de888 mov mar,0x666f20
 	001de894 mov ax,mar
 	001de8a0 push op
 	001de8a8 mov op,ax
 	001de8b0 setfuncargs 0x0
 	001de8b8 mov ax,0xd86f20
 	001de8c4 farcall ax
 	001de8cc pop op
 	001de8d4 mov bx,ax
 	001de8e0 mov mar,0x666f20
 	001de8ec mov ax,mar
 	001de8f8 push op
 	001de900 mov op,ax
 	001de908 farpush bx
 	001de910 setfuncargs 0x1
 	001de918 mov ax,0xd9ef20
 	001de924 farcall ax
 	001de92c farsubsp 0x1
 	001de934 pop op
 	001de93c sourceline 0x27f7
 	001de944 mov mar,0x5def20
 	001de950 mov ax,mar
 	001de95c push op
 	001de964 mov op,ax
 	001de96c setfuncargs 0x0
 	001de974 mov ax,0x5aef20
 	001de980 farcall ax
 	001de988 pop op
 	001de990 push ax
 	001de998 mov ax,0x0
 	001de9a4 pop bx
 	001de9ac cmpgt bx,ax
 	001de9b8 mov ax,bx
 	001de9c4 jz 0x001dee18
		001dee18: CONDITIONAL_JUMP
		001de9cc: FALL_THROUGH

	[001de9cc]
		001de6b0: FALL_THROUGH
 	001de9cc sourceline 0x27f9
 	001de9d4 mov ax,0x56
 	001de9e0 farpush ax
 	001de9e8 mov ax,0x7f
 	001de9f4 farpush ax
 	001de9fc mov mar,0x5def20
 	001dea08 mov ax,mar
 	001dea14 push op
 	001dea1c mov op,ax
 	001dea24 setfuncargs 0x0
 	001dea2c mov ax,0x5aef20
 	001dea38 farcall ax
 	001dea40 pop op
 	001dea48 mov dx,ax
 	001dea54 mov mar,0x5def20
 	001dea60 mov ax,mar
 	001dea6c push op
 	001dea74 mov op,ax
 	001dea7c farpush dx
 	001dea84 setfuncargs 0x1
 	001dea8c mov ax,0xeeef20
 	001dea98 farcall ax
 	001deaa0 farsubsp 0x1
 	001deaa8 pop op
 	001deab0 farpush ax
 	001deab8 setfuncargs 0x3
 	001deac0 mov ax,0x466f20
 	001deacc farcall ax
 	001dead4 farsubsp 0x3
 	001deadc mov mar,0x100158
 	001deae8 push mar
 	001deaf0 pop mar
 	001deaf8 memwrite.ptr ax
 	001deb00 sourceline 0x27fa
 	001deb08 mov mar,0x100158
 	001deb14 push mar
 	001deb1c pop mar
 	001deb24 memread.ptr ax
 	001deb2c push ax
 	001deb34 mov ax,0x0
 	001deb40 pop bx
 	001deb48 cmpneq bx,ax
 	001deb54 mov ax,bx
 	001deb60 jz 0x001ded08
		001ded08: CONDITIONAL_JUMP
		001deb68: FALL_THROUGH

	[001deb68]
		001de9cc: FALL_THROUGH
 	001deb68 push op
 	001deb70 mov ax,0x0
 	001deb7c farpush ax
 	001deb84 mov ax,0xf
 	001deb90 farpush ax
 	001deb98 mov ax,0x0
 	001deba4 farpush ax
 	001debac mov ax,0x0
 	001debb8 farpush ax
 	001debc0 mov ax,0x0
 	001debcc farpush ax
 	001debd4 mov mar,0x100158
 	001debe0 push mar
 	001debe8 pop mar
 	001debf0 memread.ptr ax
 	001debf8 mov op,ax
 	001dec00 setfuncargs 0x5
 	001dec08 mov ax,0xef6f20
 	001dec14 farcall ax
 	001dec1c farsubsp 0x5
 	001dec24 pop op
 	001dec2c mov mar,0x100158
 	001dec38 push mar
 	001dec40 pop mar
 	001dec48 memread.ptr ax
 	001dec50 push ax
 	001dec58 pop mar
 	001dec60 mov ax,mar
 	001dec6c push op
 	001dec74 mov op,ax
 	001dec7c setfuncargs 0x0
 	001dec84 mov ax,0xefef20
 	001dec90 farcall ax
 	001dec98 pop op
 	001deca0 mov bx,ax
 	001decac mov mar,0xf06f20
 	001decb8 mov ax,mar
 	001decc4 push op
 	001deccc mov op,ax
 	001decd4 farpush bx
 	001decdc setfuncargs 0x1
 	001dece4 mov ax,0x356f20
 	001decf0 farcall ax
 	001decf8 farsubsp 0x1
 	001ded00 pop op
		001ded08: FALL_THROUGH

	[001ded08]
		001de9cc: CONDITIONAL_JUMP
		001deb68: FALL_THROUGH
 	001ded08 sourceline 0x27fb
 	001ded10 push op
 	001ded18 mov ax,0x3b
 	001ded24 farpush ax
 	001ded2c mov ax,0x14
 	001ded38 farpush ax
 	001ded40 mov mar,0x5e6f20
 	001ded4c mov ax,mar
 	001ded58 mov op,ax
 	001ded60 setfuncargs 0x2
 	001ded68 mov ax,0x5d6f20
 	001ded74 farcall ax
 	001ded7c farsubsp 0x2
 	001ded84 pop op
 	001ded8c sourceline 0x27fc
 	001ded94 mov ax,0x1
 	001deda0 mov bx,ax
 	001dedac mov mar,0x5e6f20
 	001dedb8 mov ax,mar
 	001dedc4 push op
 	001dedcc mov op,ax
 	001dedd4 farpush bx
 	001deddc setfuncargs 0x1
 	001dede4 mov ax,0x5cef20
 	001dedf0 farcall ax
 	001dedf8 farsubsp 0x1
 	001dee00 pop op
 	001dee08 sourceline 0x27fd
 	001dee10 jmp 0x001df0d0
		001df0d0: UNCONDITIONAL_JUMP

	[001dee18]
		001de6b0: CONDITIONAL_JUMP
 	001dee18 sourceline 0x2800
 	001dee20 mov ax,0x0
 	001dee2c mov bx,ax
 	001dee38 mov mar,0x5e6f20
 	001dee44 mov ax,mar
 	001dee50 push op
 	001dee58 mov op,ax
 	001dee60 farpush bx
 	001dee68 setfuncargs 0x1
 	001dee70 mov ax,0x5cef20
 	001dee7c farcall ax
 	001dee84 farsubsp 0x1
 	001dee8c pop op
 	001dee94 sourceline 0x2801
 	001dee9c mov ax,0x56
 	001deea8 farpush ax
 	001deeb0 mov ax,0x7f
 	001deebc farpush ax
 	001deec4 mov ax,0x3e6
 	001deed0 farpush ax
 	001deed8 setfuncargs 0x3
 	001deee0 mov ax,0x466f20
 	001deeec farcall ax
 	001deef4 farsubsp 0x3
 	001deefc mov mar,0x100160
 	001def08 push mar
 	001def10 pop mar
 	001def18 memwrite.ptr ax
 	001def20 sourceline 0x2802
 	001def28 push op
 	001def30 mov ax,0x0
 	001def3c farpush ax
 	001def44 mov ax,0xf
 	001def50 farpush ax
 	001def58 mov ax,0x0
 	001def64 farpush ax
 	001def6c mov ax,0x0
 	001def78 farpush ax
 	001def80 mov ax,0x0
 	001def8c farpush ax
 	001def94 mov mar,0x100160
 	001defa0 push mar
 	001defa8 pop mar
 	001defb0 memread.ptr ax
 	001defb8 mov op,ax
 	001defc0 setfuncargs 0x5
 	001defc8 mov ax,0xef6f20
 	001defd4 farcall ax
 	001defdc farsubsp 0x5
 	001defe4 pop op
 	001defec sourceline 0x2803
 	001deff4 mov mar,0x100160
 	001df000 push mar
 	001df008 pop mar
 	001df010 memread.ptr ax
 	001df018 push ax
 	001df020 pop mar
 	001df028 mov ax,mar
 	001df034 push op
 	001df03c mov op,ax
 	001df044 setfuncargs 0x0
 	001df04c mov ax,0xefef20
 	001df058 farcall ax
 	001df060 pop op
 	001df068 mov bx,ax
 	001df074 mov mar,0xf06f20
 	001df080 mov ax,mar
 	001df08c push op
 	001df094 mov op,ax
 	001df09c farpush bx
 	001df0a4 setfuncargs 0x1
 	001df0ac mov ax,0x356f20
 	001df0b8 farcall ax
 	001df0c0 farsubsp 0x1
 	001df0c8 pop op
		001df0d0: FALL_THROUGH

	[001df0d0]
		001ded08: UNCONDITIONAL_JUMP
		001dee18: FALL_THROUGH
 	001df0d0 sourceline 0x2805
 	001df0d8 mov ax,0x5
 	001df0e4 farpush ax
 	001df0ec setfuncargs 0x1
 	001df0f4 mov ax,0x426f20
 	001df100 farcall ax
 	001df108 farsubsp 0x1
 	001df110 sourceline 0x2806
 	001df118 mov ax,0x1
 	001df124 mov bx,ax
 	001df130 mov mar,0x546f20
 	001df13c mov ax,mar
 	001df148 push op
 	001df150 mov op,ax
 	001df158 farpush bx
 	001df160 setfuncargs 0x1
 	001df168 mov ax,0x3a6f20
 	001df174 farcall ax
 	001df17c farsubsp 0x1
 	001df184 pop op
 	001df18c sourceline 0x2807
 	001df194 mov ax,0x0
 	001df1a0 stackptr 0x8
 	001df1a8 memzerond
 	001df1ac ret

btnLoadGame_OnClick$2:
	[001df1b0]
 	001df1b0 sourceline 0x280c
 	001df1b8 thisaddr
 	001df1c0 stackptr 0x8
 	001df1c8 memread4 ax
 	001df1d0 meminit ax
 	001df1d8 sourceline 0x280d
 	001df1e0 mov ax,0x0
 	001df1ec setfuncargs 0x0
 	001df1f4 mov ax,0x3e6f20
 	001df200 farcall ax
 	001df208 push ax
 	001df210 mov ax,0x2c787b
 	001df21c pop bx
 	001df224 streq bx,ax
 	001df230 mov ax,bx
 	001df23c jz 0x001df7a8
		001df7a8: CONDITIONAL_JUMP
		001df244: FALL_THROUGH

	[001df244]
		001df1b0: FALL_THROUGH
 	001df244 sourceline 0x280f
 	001df24c mov ax,0x7d0
 	001df258 mov bx,ax
*	001df264 mov mar,0x576f20
 	001df270 mov ax,mar
 	001df27c push op
 	001df284 mov op,ax
 	001df28c farpush bx
 	001df294 setfuncargs 0x1
 	001df29c mov ax,0x836f20
 	001df2a8 farcall ax
 	001df2b0 farsubsp 0x1
 	001df2b8 pop op
 	001df2c0 sourceline 0x2810
 	001df2c8 mov ax,0x7a5
 	001df2d4 mov bx,ax
 	001df2e0 mov mar,0x57ef20
 	001df2ec mov ax,mar
 	001df2f8 push op
 	001df300 mov op,ax
 	001df308 farpush bx
 	001df310 setfuncargs 0x1
 	001df318 mov ax,0x356f20
 	001df324 farcall ax
 	001df32c farsubsp 0x1
 	001df334 pop op
 	001df33c sourceline 0x2811
 	001df344 mov ax,0x7a6
 	001df350 mov bx,ax
 	001df35c mov mar,0x57ef20
 	001df368 mov ax,mar
 	001df374 push op
 	001df37c mov op,ax
 	001df384 farpush bx
 	001df38c setfuncargs 0x1
 	001df394 mov ax,0x3f6f20
 	001df3a0 farcall ax
 	001df3a8 farsubsp 0x1
 	001df3b0 pop op
 	001df3b8 sourceline 0x2812
 	001df3c0 mov ax,0x7a6
 	001df3cc mov bx,ax
 	001df3d8 mov mar,0x57ef20
 	001df3e4 mov ax,mar
 	001df3f0 push op
 	001df3f8 mov op,ax
 	001df400 farpush bx
 	001df408 setfuncargs 0x1
 	001df410 mov ax,0x3fef20
 	001df41c farcall ax
 	001df424 farsubsp 0x1
 	001df42c pop op
 	001df434 sourceline 0x2813
 	001df43c mov ax,0x7d2
 	001df448 mov bx,ax
 	001df454 mov mar,0x586f20
 	001df460 mov ax,mar
 	001df46c push op
 	001df474 mov op,ax
 	001df47c farpush bx
 	001df484 setfuncargs 0x1
 	001df48c mov ax,0x356f20
 	001df498 farcall ax
 	001df4a0 farsubsp 0x1
 	001df4a8 pop op
 	001df4b0 sourceline 0x2814
 	001df4b8 mov ax,0x7d3
 	001df4c4 mov bx,ax
 	001df4d0 mov mar,0x586f20
 	001df4dc mov ax,mar
 	001df4e8 push op
 	001df4f0 mov op,ax
 	001df4f8 farpush bx
 	001df500 setfuncargs 0x1
 	001df508 mov ax,0x3f6f20
 	001df514 farcall ax
 	001df51c farsubsp 0x1
 	001df524 pop op
 	001df52c sourceline 0x2815
 	001df534 mov ax,0x7d3
 	001df540 mov bx,ax
 	001df54c mov mar,0x586f20
 	001df558 mov ax,mar
 	001df564 push op
 	001df56c mov op,ax
 	001df574 farpush bx
 	001df57c setfuncargs 0x1
 	001df584 mov ax,0x3fef20
 	001df590 farcall ax
 	001df598 farsubsp 0x1
 	001df5a0 pop op
 	001df5a8 sourceline 0x2816
 	001df5b0 mov ax,0x7c5
 	001df5bc mov bx,ax
 	001df5c8 mov mar,0x58ef20
 	001df5d4 mov ax,mar
 	001df5e0 push op
 	001df5e8 mov op,ax
 	001df5f0 farpush bx
 	001df5f8 setfuncargs 0x1
 	001df600 mov ax,0x356f20
 	001df60c farcall ax
 	001df614 farsubsp 0x1
 	001df61c pop op
 	001df624 sourceline 0x2817
 	001df62c mov ax,0x7c6
 	001df638 mov bx,ax
 	001df644 mov mar,0x58ef20
 	001df650 mov ax,mar
 	001df65c push op
 	001df664 mov op,ax
 	001df66c farpush bx
 	001df674 setfuncargs 0x1
 	001df67c mov ax,0x3f6f20
 	001df688 farcall ax
 	001df690 farsubsp 0x1
 	001df698 pop op
 	001df6a0 sourceline 0x2818
 	001df6a8 mov ax,0x7c6
 	001df6b4 mov bx,ax
 	001df6c0 mov mar,0x58ef20
 	001df6cc mov ax,mar
 	001df6d8 push op
 	001df6e0 mov op,ax
 	001df6e8 farpush bx
 	001df6f0 setfuncargs 0x1
 	001df6f8 mov ax,0x3fef20
 	001df704 farcall ax
 	001df70c farsubsp 0x1
 	001df714 pop op
 	001df71c sourceline 0x2819
 	001df724 mov ax,0x7d6
 	001df730 mov bx,ax
 	001df73c mov mar,0x596f20
 	001df748 mov ax,mar
 	001df754 push op
 	001df75c mov op,ax
 	001df764 farpush bx
 	001df76c setfuncargs 0x1
 	001df774 mov ax,0x356f20
 	001df780 farcall ax
 	001df788 farsubsp 0x1
 	001df790 pop op
 	001df798 sourceline 0x281a
 	001df7a0 jmp 0x001dfcfc
		001dfcfc: UNCONDITIONAL_JUMP

	[001df7a8]
		001df1b0: CONDITIONAL_JUMP
 	001df7a8 sourceline 0x281d
 	001df7b0 mov ax,0x7d1
 	001df7bc mov bx,ax
 	001df7c8 mov mar,0x576f20
 	001df7d4 mov ax,mar
 	001df7e0 push op
 	001df7e8 mov op,ax
 	001df7f0 farpush bx
 	001df7f8 setfuncargs 0x1
 	001df800 mov ax,0x836f20
 	001df80c farcall ax
 	001df814 farsubsp 0x1
 	001df81c pop op
 	001df824 sourceline 0x281e
 	001df82c mov ax,0x7bd
 	001df838 mov bx,ax
 	001df844 mov mar,0x57ef20
 	001df850 mov ax,mar
 	001df85c push op
 	001df864 mov op,ax
 	001df86c farpush bx
 	001df874 setfuncargs 0x1
 	001df87c mov ax,0x356f20
 	001df888 farcall ax
 	001df890 farsubsp 0x1
 	001df898 pop op
 	001df8a0 sourceline 0x281f
 	001df8a8 mov ax,0x7be
 	001df8b4 mov bx,ax
 	001df8c0 mov mar,0x57ef20
 	001df8cc mov ax,mar
 	001df8d8 push op
 	001df8e0 mov op,ax
 	001df8e8 farpush bx
 	001df8f0 setfuncargs 0x1
 	001df8f8 mov ax,0x3f6f20
 	001df904 farcall ax
 	001df90c farsubsp 0x1
 	001df914 pop op
 	001df91c sourceline 0x2820
 	001df924 mov ax,0x7be
 	001df930 mov bx,ax
 	001df93c mov mar,0x57ef20
 	001df948 mov ax,mar
 	001df954 push op
 	001df95c mov op,ax
 	001df964 farpush bx
 	001df96c setfuncargs 0x1
 	001df974 mov ax,0x3fef20
 	001df980 farcall ax
 	001df988 farsubsp 0x1
 	001df990 pop op
 	001df998 sourceline 0x2821
 	001df9a0 mov ax,0x7d4
 	001df9ac mov bx,ax
 	001df9b8 mov mar,0x586f20
 	001df9c4 mov ax,mar
 	001df9d0 push op
 	001df9d8 mov op,ax
 	001df9e0 farpush bx
 	001df9e8 setfuncargs 0x1
 	001df9f0 mov ax,0x356f20
 	001df9fc farcall ax
 	001dfa04 farsubsp 0x1
 	001dfa0c pop op
 	001dfa14 sourceline 0x2822
 	001dfa1c mov ax,0x7d5
 	001dfa28 mov bx,ax
 	001dfa34 mov mar,0x586f20
 	001dfa40 mov ax,mar
 	001dfa4c push op
 	001dfa54 mov op,ax
 	001dfa5c farpush bx
 	001dfa64 setfuncargs 0x1
 	001dfa6c mov ax,0x3f6f20
 	001dfa78 farcall ax
 	001dfa80 farsubsp 0x1
 	001dfa88 pop op
 	001dfa90 sourceline 0x2823
 	001dfa98 mov ax,0x7d5
 	001dfaa4 mov bx,ax
 	001dfab0 mov mar,0x586f20
 	001dfabc mov ax,mar
 	001dfac8 push op
 	001dfad0 mov op,ax
 	001dfad8 farpush bx
 	001dfae0 setfuncargs 0x1
 	001dfae8 mov ax,0x3fef20
 	001dfaf4 farcall ax
 	001dfafc farsubsp 0x1
 	001dfb04 pop op
 	001dfb0c sourceline 0x2824
 	001dfb14 mov ax,0x7c7
 	001dfb20 mov bx,ax
 	001dfb2c mov mar,0x58ef20
 	001dfb38 mov ax,mar
 	001dfb44 push op
 	001dfb4c mov op,ax
 	001dfb54 farpush bx
 	001dfb5c setfuncargs 0x1
 	001dfb64 mov ax,0x356f20
 	001dfb70 farcall ax
 	001dfb78 farsubsp 0x1
 	001dfb80 pop op
 	001dfb88 sourceline 0x2825
 	001dfb90 mov ax,0x7c8
 	001dfb9c mov bx,ax
 	001dfba8 mov mar,0x58ef20
 	001dfbb4 mov ax,mar
 	001dfbc0 push op
 	001dfbc8 mov op,ax
 	001dfbd0 farpush bx
 	001dfbd8 setfuncargs 0x1
 	001dfbe0 mov ax,0x3f6f20
 	001dfbec farcall ax
 	001dfbf4 farsubsp 0x1
 	001dfbfc pop op
 	001dfc04 sourceline 0x2826
 	001dfc0c mov ax,0x7c8
 	001dfc18 mov bx,ax
 	001dfc24 mov mar,0x58ef20
 	001dfc30 mov ax,mar
 	001dfc3c push op
 	001dfc44 mov op,ax
 	001dfc4c farpush bx
 	001dfc54 setfuncargs 0x1
 	001dfc5c mov ax,0x3fef20
 	001dfc68 farcall ax
 	001dfc70 farsubsp 0x1
 	001dfc78 pop op
 	001dfc80 sourceline 0x2827
 	001dfc88 mov ax,0x7d7
 	001dfc94 mov bx,ax
 	001dfca0 mov mar,0x596f20
 	001dfcac mov ax,mar
 	001dfcb8 push op
 	001dfcc0 mov op,ax
 	001dfcc8 farpush bx
 	001dfcd0 setfuncargs 0x1
 	001dfcd8 mov ax,0x356f20
 	001dfce4 farcall ax
 	001dfcec farsubsp 0x1
 	001dfcf4 pop op
		001dfcfc: FALL_THROUGH

	[001dfcfc]
		001df244: UNCONDITIONAL_JUMP
		001df7a8: FALL_THROUGH
 	001dfcfc sourceline 0x2829
 	001dfd04 push op
 	001dfd0c mov mar,0x5a6f20
 	001dfd18 mov ax,mar
 	001dfd24 mov op,ax
 	001dfd2c setfuncargs 0x0
 	001dfd34 mov ax,0xec6f20
 	001dfd40 farcall ax
 	001dfd48 pop op
 	001dfd50 sourceline 0x282a
 	001dfd58 mov ax,0x0
 	001dfd64 mov bx,ax
 	001dfd70 mov mar,0x5a6f20
 	001dfd7c mov ax,mar
 	001dfd88 push op
 	001dfd90 mov op,ax
 	001dfd98 farpush bx
 	001dfda0 setfuncargs 0x1
 	001dfda8 mov ax,0xedef20
 	001dfdb4 farcall ax
 	001dfdbc farsubsp 0x1
 	001dfdc4 pop op
 	001dfdcc sourceline 0x282b
 	001dfdd4 mov mar,0x65ef20
 	001dfde0 mov ax,mar
 	001dfdec push op
 	001dfdf4 mov op,ax
 	001dfdfc setfuncargs 0x0
 	001dfe04 mov ax,0xd86f20
 	001dfe10 farcall ax
 	001dfe18 pop op
 	001dfe20 mov bx,ax
 	001dfe2c mov mar,0x65ef20
 	001dfe38 mov ax,mar
 	001dfe44 push op
 	001dfe4c mov op,ax
 	001dfe54 farpush bx
 	001dfe5c setfuncargs 0x1
 	001dfe64 mov ax,0xd9ef20
 	001dfe70 farcall ax
 	001dfe78 farsubsp 0x1
 	001dfe80 pop op
 	001dfe88 sourceline 0x282c
 	001dfe90 mov mar,0x5a6f20
 	001dfe9c mov ax,mar
 	001dfea8 push op
 	001dfeb0 mov op,ax
 	001dfeb8 setfuncargs 0x0
 	001dfec0 mov ax,0x656f20
 	001dfecc farcall ax
 	001dfed4 pop op
 	001dfedc push ax
 	001dfee4 mov ax,0x0
 	001dfef0 pop bx
 	001dfef8 cmpgt bx,ax
 	001dff04 mov ax,bx
 	001dff10 jz 0x001e0364
		001e0364: CONDITIONAL_JUMP
		001dff18: FALL_THROUGH

	[001dff18]
		001dfcfc: FALL_THROUGH
 	001dff18 sourceline 0x282e
 	001dff20 mov ax,0x56
 	001dff2c farpush ax
 	001dff34 mov ax,0x7f
 	001dff40 farpush ax
 	001dff48 mov mar,0x5a6f20
 	001dff54 mov ax,mar
 	001dff60 push op
 	001dff68 mov op,ax
 	001dff70 setfuncargs 0x0
 	001dff78 mov ax,0x5aef20
 	001dff84 farcall ax
 	001dff8c pop op
 	001dff94 mov dx,ax
 	001dffa0 mov mar,0x5a6f20
 	001dffac mov ax,mar
 	001dffb8 push op
 	001dffc0 mov op,ax
 	001dffc8 farpush dx
 	001dffd0 setfuncargs 0x1
 	001dffd8 mov ax,0xeeef20
 	001dffe4 farcall ax
 	001dffec farsubsp 0x1
 	001dfff4 pop op
 	001dfffc farpush ax
 	001e0004 setfuncargs 0x3
 	001e000c mov ax,0x466f20
 	001e0018 farcall ax
 	001e0020 farsubsp 0x3
 	001e0028 mov mar,0x10015c
 	001e0034 push mar
 	001e003c pop mar
 	001e0044 memwrite.ptr ax
 	001e004c sourceline 0x282f
 	001e0054 mov mar,0x10015c
 	001e0060 push mar
 	001e0068 pop mar
 	001e0070 memread.ptr ax
 	001e0078 push ax
 	001e0080 mov ax,0x0
 	001e008c pop bx
 	001e0094 cmpneq bx,ax
 	001e00a0 mov ax,bx
 	001e00ac jz 0x001e0254
		001e0254: CONDITIONAL_JUMP
		001e00b4: FALL_THROUGH

	[001e00b4]
		001dff18: FALL_THROUGH
 	001e00b4 push op
 	001e00bc mov ax,0x0
 	001e00c8 farpush ax
 	001e00d0 mov ax,0xf
 	001e00dc farpush ax
 	001e00e4 mov ax,0x0
 	001e00f0 farpush ax
 	001e00f8 mov ax,0x0
 	001e0104 farpush ax
 	001e010c mov ax,0x0
 	001e0118 farpush ax
 	001e0120 mov mar,0x10015c
 	001e012c push mar
 	001e0134 pop mar
 	001e013c memread.ptr ax
 	001e0144 mov op,ax
 	001e014c setfuncargs 0x5
 	001e0154 mov ax,0xef6f20
 	001e0160 farcall ax
 	001e0168 farsubsp 0x5
 	001e0170 pop op
 	001e0178 mov mar,0x10015c
 	001e0184 push mar
 	001e018c pop mar
 	001e0194 memread.ptr ax
 	001e019c push ax
 	001e01a4 pop mar
 	001e01ac mov ax,mar
 	001e01b8 push op
 	001e01c0 mov op,ax
 	001e01c8 setfuncargs 0x0
 	001e01d0 mov ax,0xefef20
 	001e01dc farcall ax
 	001e01e4 pop op
 	001e01ec mov bx,ax
 	001e01f8 mov mar,0xf0ef20
 	001e0204 mov ax,mar
 	001e0210 push op
 	001e0218 mov op,ax
 	001e0220 farpush bx
 	001e0228 setfuncargs 0x1
 	001e0230 mov ax,0x356f20
 	001e023c farcall ax
 	001e0244 farsubsp 0x1
 	001e024c pop op
		001e0254: FALL_THROUGH

	[001e0254]
		001dff18: CONDITIONAL_JUMP
		001e00b4: FALL_THROUGH
 	001e0254 sourceline 0x2830
 	001e025c push op
 	001e0264 mov ax,0x32
 	001e0270 farpush ax
 	001e0278 mov ax,0x14
 	001e0284 farpush ax
 	001e028c mov mar,0x5c6f20
 	001e0298 mov ax,mar
 	001e02a4 mov op,ax
 	001e02ac setfuncargs 0x2
 	001e02b4 mov ax,0x5d6f20
 	001e02c0 farcall ax
 	001e02c8 farsubsp 0x2
 	001e02d0 pop op
 	001e02d8 sourceline 0x2831
 	001e02e0 mov ax,0x1
 	001e02ec mov bx,ax
 	001e02f8 mov mar,0x5c6f20
 	001e0304 mov ax,mar
 	001e0310 push op
 	001e0318 mov op,ax
 	001e0320 farpush bx
 	001e0328 setfuncargs 0x1
 	001e0330 mov ax,0x5cef20
 	001e033c farcall ax
 	001e0344 farsubsp 0x1
 	001e034c pop op
 	001e0354 sourceline 0x2832
 	001e035c jmp 0x001e045c
		001e045c: UNCONDITIONAL_JUMP

	[001e0364]
		001dfcfc: CONDITIONAL_JUMP
 	001e0364 sourceline 0x2835
 	001e036c mov ax,0x0
 	001e0378 mov bx,ax
 	001e0384 mov mar,0x5c6f20
 	001e0390 mov ax,mar
 	001e039c push op
 	001e03a4 mov op,ax
 	001e03ac farpush bx
 	001e03b4 setfuncargs 0x1
 	001e03bc mov ax,0x5cef20
 	001e03c8 farcall ax
 	001e03d0 farsubsp 0x1
 	001e03d8 pop op
 	001e03e0 sourceline 0x2836
 	001e03e8 mov ax,0x0
 	001e03f4 mov bx,ax
 	001e0400 mov mar,0xf0ef20
 	001e040c mov ax,mar
 	001e0418 push op
 	001e0420 mov op,ax
 	001e0428 farpush bx
 	001e0430 setfuncargs 0x1
 	001e0438 mov ax,0x356f20
 	001e0444 farcall ax
 	001e044c farsubsp 0x1
 	001e0454 pop op
		001e045c: FALL_THROUGH

	[001e045c]
		001e0254: UNCONDITIONAL_JUMP
		001e0364: FALL_THROUGH
 	001e045c sourceline 0x2838
 	001e0464 mov ax,0x1
 	001e0470 mov bx,ax
 	001e047c mov mar,0x576f20
 	001e0488 mov ax,mar
 	001e0494 push op
 	001e049c mov op,ax
 	001e04a4 farpush bx
 	001e04ac setfuncargs 0x1
 	001e04b4 mov ax,0x3a6f20
 	001e04c0 farcall ax
 	001e04c8 farsubsp 0x1
 	001e04d0 pop op
 	001e04d8 sourceline 0x2839
 	001e04e0 mov ax,0x0
 	001e04ec stackptr 0x8
 	001e04f4 memzerond
 	001e04f8 ret

ConfirmToEnglish$0:
	[001e04fc]
 	001e04fc sourceline 0x283f
 	001e0504 thisaddr
 	001e050c sourceline 0x2840
 	001e0514 mov ax,0x7ae
 	001e0520 mov bx,ax
*	001e052c mov mar,0xea6f20
 	001e0538 mov ax,mar
 	001e0544 push op
 	001e054c mov op,ax
 	001e0554 farpush bx
 	001e055c setfuncargs 0x1
 	001e0564 mov ax,0x356f20
 	001e0570 farcall ax
 	001e0578 farsubsp 0x1
 	001e0580 pop op
 	001e0588 sourceline 0x2841
 	001e0590 mov ax,0x7a0
 	001e059c mov bx,ax
 	001e05a8 mov mar,0x3eef20
 	001e05b4 mov ax,mar
 	001e05c0 push op
 	001e05c8 mov op,ax
 	001e05d0 farpush bx
 	001e05d8 setfuncargs 0x1
 	001e05e0 mov ax,0x356f20
 	001e05ec farcall ax
 	001e05f4 farsubsp 0x1
 	001e05fc pop op
 	001e0604 sourceline 0x2842
 	001e060c mov ax,0x7a1
 	001e0618 mov bx,ax
 	001e0624 mov mar,0x3eef20
 	001e0630 mov ax,mar
 	001e063c push op
 	001e0644 mov op,ax
 	001e064c farpush bx
 	001e0654 setfuncargs 0x1
 	001e065c mov ax,0x3f6f20
 	001e0668 farcall ax
 	001e0670 farsubsp 0x1
 	001e0678 pop op
 	001e0680 sourceline 0x2843
 	001e0688 mov ax,0x7a1
 	001e0694 mov bx,ax
 	001e06a0 mov mar,0x3eef20
 	001e06ac mov ax,mar
 	001e06b8 push op
 	001e06c0 mov op,ax
 	001e06c8 farpush bx
 	001e06d0 setfuncargs 0x1
 	001e06d8 mov ax,0x3fef20
 	001e06e4 farcall ax
 	001e06ec farsubsp 0x1
 	001e06f4 pop op
 	001e06fc sourceline 0x2844
 	001e0704 mov ax,0x7a2
 	001e0710 mov bx,ax
 	001e071c mov mar,0x406f20
 	001e0728 mov ax,mar
 	001e0734 push op
 	001e073c mov op,ax
 	001e0744 farpush bx
 	001e074c setfuncargs 0x1
 	001e0754 mov ax,0x356f20
 	001e0760 farcall ax
 	001e0768 farsubsp 0x1
 	001e0770 pop op
 	001e0778 sourceline 0x2845
 	001e0780 mov ax,0x7a3
 	001e078c mov bx,ax
 	001e0798 mov mar,0x406f20
 	001e07a4 mov ax,mar
 	001e07b0 push op
 	001e07b8 mov op,ax
 	001e07c0 farpush bx
 	001e07c8 setfuncargs 0x1
 	001e07d0 mov ax,0x3f6f20
 	001e07dc farcall ax
 	001e07e4 farsubsp 0x1
 	001e07ec pop op
 	001e07f4 sourceline 0x2846
 	001e07fc mov ax,0x7a3
 	001e0808 mov bx,ax
 	001e0814 mov mar,0x406f20
 	001e0820 mov ax,mar
 	001e082c push op
 	001e0834 mov op,ax
 	001e083c farpush bx
 	001e0844 setfuncargs 0x1
 	001e084c mov ax,0x3fef20
 	001e0858 farcall ax
 	001e0860 farsubsp 0x1
 	001e0868 pop op
 	001e0870 sourceline 0x2847
 	001e0878 mov ax,0x79a
 	001e0884 mov bx,ax
 	001e0890 mov mar,0x40ef20
 	001e089c mov ax,mar
 	001e08a8 push op
 	001e08b0 mov op,ax
 	001e08b8 farpush bx
 	001e08c0 setfuncargs 0x1
 	001e08c8 mov ax,0x356f20
 	001e08d4 farcall ax
 	001e08dc farsubsp 0x1
 	001e08e4 pop op
 	001e08ec sourceline 0x2848
 	001e08f4 mov ax,0x79b
 	001e0900 mov bx,ax
 	001e090c mov mar,0x40ef20
 	001e0918 mov ax,mar
 	001e0924 push op
 	001e092c mov op,ax
 	001e0934 farpush bx
 	001e093c setfuncargs 0x1
 	001e0944 mov ax,0x3f6f20
 	001e0950 farcall ax
 	001e0958 farsubsp 0x1
 	001e0960 pop op
 	001e0968 sourceline 0x2849
 	001e0970 mov ax,0x79b
 	001e097c mov bx,ax
 	001e0988 mov mar,0x40ef20
 	001e0994 mov ax,mar
 	001e09a0 push op
 	001e09a8 mov op,ax
 	001e09b0 farpush bx
 	001e09b8 setfuncargs 0x1
 	001e09c0 mov ax,0x3fef20
 	001e09cc farcall ax
 	001e09d4 farsubsp 0x1
 	001e09dc pop op
 	001e09e4 sourceline 0x284a
 	001e09ec mov ax,0x79c
 	001e09f8 mov bx,ax
 	001e0a04 mov mar,0x416f20
 	001e0a10 mov ax,mar
 	001e0a1c push op
 	001e0a24 mov op,ax
 	001e0a2c farpush bx
 	001e0a34 setfuncargs 0x1
 	001e0a3c mov ax,0x356f20
 	001e0a48 farcall ax
 	001e0a50 farsubsp 0x1
 	001e0a58 pop op
 	001e0a60 sourceline 0x284b
 	001e0a68 mov ax,0x79d
 	001e0a74 mov bx,ax
 	001e0a80 mov mar,0x416f20
 	001e0a8c mov ax,mar
 	001e0a98 push op
 	001e0aa0 mov op,ax
 	001e0aa8 farpush bx
 	001e0ab0 setfuncargs 0x1
 	001e0ab8 mov ax,0x3f6f20
 	001e0ac4 farcall ax
 	001e0acc farsubsp 0x1
 	001e0ad4 pop op
 	001e0adc sourceline 0x284c
 	001e0ae4 mov ax,0x79d
 	001e0af0 mov bx,ax
 	001e0afc mov mar,0x416f20
 	001e0b08 mov ax,mar
 	001e0b14 push op
 	001e0b1c mov op,ax
 	001e0b24 farpush bx
 	001e0b2c setfuncargs 0x1
 	001e0b34 mov ax,0x3fef20
 	001e0b40 farcall ax
 	001e0b48 farsubsp 0x1
 	001e0b50 pop op
 	001e0b58 sourceline 0x284d
 	001e0b60 mov ax,0x79e
 	001e0b6c mov bx,ax
 	001e0b78 mov mar,0x41ef20
 	001e0b84 mov ax,mar
 	001e0b90 push op
 	001e0b98 mov op,ax
 	001e0ba0 farpush bx
 	001e0ba8 setfuncargs 0x1
 	001e0bb0 mov ax,0x356f20
 	001e0bbc farcall ax
 	001e0bc4 farsubsp 0x1
 	001e0bcc pop op
 	001e0bd4 sourceline 0x284e
 	001e0bdc mov ax,0x79f
 	001e0be8 mov bx,ax
 	001e0bf4 mov mar,0x41ef20
 	001e0c00 mov ax,mar
 	001e0c0c push op
 	001e0c14 mov op,ax
 	001e0c1c farpush bx
 	001e0c24 setfuncargs 0x1
 	001e0c2c mov ax,0x3f6f20
 	001e0c38 farcall ax
 	001e0c40 farsubsp 0x1
 	001e0c48 pop op
 	001e0c50 sourceline 0x284f
 	001e0c58 mov ax,0x79f
 	001e0c64 mov bx,ax
 	001e0c70 mov mar,0x41ef20
 	001e0c7c mov ax,mar
 	001e0c88 push op
 	001e0c90 mov op,ax
 	001e0c98 farpush bx
 	001e0ca0 setfuncargs 0x1
 	001e0ca8 mov ax,0x3fef20
 	001e0cb4 farcall ax
 	001e0cbc farsubsp 0x1
 	001e0cc4 pop op
 	001e0ccc sourceline 0x2850
 	001e0cd4 mov ax,0x7a4
 	001e0ce0 mov bx,ax
 	001e0cec mov mar,0xeaef20
 	001e0cf8 mov ax,mar
 	001e0d04 push op
 	001e0d0c mov op,ax
 	001e0d14 farpush bx
 	001e0d1c setfuncargs 0x1
 	001e0d24 mov ax,0x836f20
 	001e0d30 farcall ax
 	001e0d38 farsubsp 0x1
 	001e0d40 pop op
 	001e0d48 sourceline 0x2851
 	001e0d50 mov ax,0x7a5
 	001e0d5c mov bx,ax
 	001e0d68 mov mar,0xeb6f20
 	001e0d74 mov ax,mar
 	001e0d80 push op
 	001e0d88 mov op,ax
 	001e0d90 farpush bx
 	001e0d98 setfuncargs 0x1
 	001e0da0 mov ax,0x356f20
 	001e0dac farcall ax
 	001e0db4 farsubsp 0x1
 	001e0dbc pop op
 	001e0dc4 sourceline 0x2852
 	001e0dcc mov ax,0x7a6
 	001e0dd8 mov bx,ax
 	001e0de4 mov mar,0xeb6f20
 	001e0df0 mov ax,mar
 	001e0dfc push op
 	001e0e04 mov op,ax
 	001e0e0c farpush bx
 	001e0e14 setfuncargs 0x1
 	001e0e1c mov ax,0x3f6f20
 	001e0e28 farcall ax
 	001e0e30 farsubsp 0x1
 	001e0e38 pop op
 	001e0e40 sourceline 0x2853
 	001e0e48 mov ax,0x7a6
 	001e0e54 mov bx,ax
 	001e0e60 mov mar,0xeb6f20
 	001e0e6c mov ax,mar
 	001e0e78 push op
 	001e0e80 mov op,ax
 	001e0e88 farpush bx
 	001e0e90 setfuncargs 0x1
 	001e0e98 mov ax,0x3fef20
 	001e0ea4 farcall ax
 	001e0eac farsubsp 0x1
 	001e0eb4 pop op
 	001e0ebc sourceline 0x2854
 	001e0ec4 mov ax,0x7a9
 	001e0ed0 mov bx,ax
 	001e0edc mov mar,0xebef20
 	001e0ee8 mov ax,mar
 	001e0ef4 push op
 	001e0efc mov op,ax
 	001e0f04 farpush bx
 	001e0f0c setfuncargs 0x1
 	001e0f14 mov ax,0x356f20
 	001e0f20 farcall ax
 	001e0f28 farsubsp 0x1
 	001e0f30 pop op
 	001e0f38 sourceline 0x2855
 	001e0f40 mov ax,0x7a5
 	001e0f4c mov bx,ax
 	001e0f58 mov mar,0x556f20
 	001e0f64 mov ax,mar
 	001e0f70 push op
 	001e0f78 mov op,ax
 	001e0f80 farpush bx
 	001e0f88 setfuncargs 0x1
 	001e0f90 mov ax,0x356f20
 	001e0f9c farcall ax
 	001e0fa4 farsubsp 0x1
 	001e0fac pop op
 	001e0fb4 sourceline 0x2856
 	001e0fbc mov ax,0x7a6
 	001e0fc8 mov bx,ax
 	001e0fd4 mov mar,0x556f20
 	001e0fe0 mov ax,mar
 	001e0fec push op
 	001e0ff4 mov op,ax
 	001e0ffc farpush bx
 	001e1004 setfuncargs 0x1
 	001e100c mov ax,0x3f6f20
 	001e1018 farcall ax
 	001e1020 farsubsp 0x1
 	001e1028 pop op
 	001e1030 sourceline 0x2857
 	001e1038 mov ax,0x7a6
 	001e1044 mov bx,ax
 	001e1050 mov mar,0x556f20
 	001e105c mov ax,mar
 	001e1068 push op
 	001e1070 mov op,ax
 	001e1078 farpush bx
 	001e1080 setfuncargs 0x1
 	001e1088 mov ax,0x3fef20
 	001e1094 farcall ax
 	001e109c farsubsp 0x1
 	001e10a4 pop op
 	001e10ac sourceline 0x2858
 	001e10b4 mov ax,0x7c1
 	001e10c0 mov bx,ax
 	001e10cc mov mar,0x55ef20
 	001e10d8 mov ax,mar
 	001e10e4 push op
 	001e10ec mov op,ax
 	001e10f4 farpush bx
 	001e10fc setfuncargs 0x1
 	001e1104 mov ax,0x356f20
 	001e1110 farcall ax
 	001e1118 farsubsp 0x1
 	001e1120 pop op
 	001e1128 sourceline 0x2859
 	001e1130 mov ax,0x7c2
 	001e113c mov bx,ax
 	001e1148 mov mar,0x55ef20
 	001e1154 mov ax,mar
 	001e1160 push op
 	001e1168 mov op,ax
 	001e1170 farpush bx
 	001e1178 setfuncargs 0x1
 	001e1180 mov ax,0x3f6f20
 	001e118c farcall ax
 	001e1194 farsubsp 0x1
 	001e119c pop op
 	001e11a4 sourceline 0x285a
 	001e11ac mov ax,0x7c2
 	001e11b8 mov bx,ax
 	001e11c4 mov mar,0x55ef20
 	001e11d0 mov ax,mar
 	001e11dc push op
 	001e11e4 mov op,ax
 	001e11ec farpush bx
 	001e11f4 setfuncargs 0x1
 	001e11fc mov ax,0x3fef20
 	001e1208 farcall ax
 	001e1210 farsubsp 0x1
 	001e1218 pop op
 	001e1220 sourceline 0x285b
 	001e1228 mov ax,0x7c5
 	001e1234 mov bx,ax
 	001e1240 mov mar,0x566f20
 	001e124c mov ax,mar
 	001e1258 push op
 	001e1260 mov op,ax
 	001e1268 farpush bx
 	001e1270 setfuncargs 0x1
 	001e1278 mov ax,0x356f20
 	001e1284 farcall ax
 	001e128c farsubsp 0x1
 	001e1294 pop op
 	001e129c sourceline 0x285c
 	001e12a4 mov ax,0x7c6
 	001e12b0 mov bx,ax
 	001e12bc mov mar,0x566f20
 	001e12c8 mov ax,mar
 	001e12d4 push op
 	001e12dc mov op,ax
 	001e12e4 farpush bx
 	001e12ec setfuncargs 0x1
 	001e12f4 mov ax,0x3f6f20
 	001e1300 farcall ax
 	001e1308 farsubsp 0x1
 	001e1310 pop op
 	001e1318 sourceline 0x285d
 	001e1320 mov ax,0x7c6
 	001e132c mov bx,ax
 	001e1338 mov mar,0x566f20
 	001e1344 mov ax,mar
 	001e1350 push op
 	001e1358 mov op,ax
 	001e1360 farpush bx
 	001e1368 setfuncargs 0x1
 	001e1370 mov ax,0x3fef20
 	001e137c farcall ax
 	001e1384 farsubsp 0x1
 	001e138c pop op
 	001e1394 sourceline 0x285f
 	001e139c mov ax,0xe3
 	001e13a8 mov bx,ax
 	001e13b4 mov mar,0xf16f20
 	001e13c0 mov ax,mar
 	001e13cc push op
 	001e13d4 mov op,ax
 	001e13dc farpush bx
 	001e13e4 setfuncargs 0x1
 	001e13ec mov ax,0xf1ef20
 	001e13f8 farcall ax
 	001e1400 farsubsp 0x1
 	001e1408 pop op
 	001e1410 sourceline 0x2860
 	001e1418 mov mar,0xf16f20
 	001e1424 mov ax,mar
 	001e1430 push op
 	001e1438 mov op,ax
 	001e1440 setfuncargs 0x0
 	001e1448 mov ax,0xf26f20
 	001e1454 farcall ax
 	001e145c pop op
 	001e1464 mov bx,ax
 	001e1470 mov mar,0xf16f20
 	001e147c mov ax,mar
 	001e1488 push op
 	001e1490 mov op,ax
 	001e1498 farpush bx
 	001e14a0 setfuncargs 0x1
 	001e14a8 mov ax,0xf2ef20
 	001e14b4 farcall ax
 	001e14bc farsubsp 0x1
 	001e14c4 pop op
 	001e14cc sourceline 0x2861
 	001e14d4 mov ax,0xe6
 	001e14e0 mov bx,ax
 	001e14ec mov mar,0xf36f20
 	001e14f8 mov ax,mar
 	001e1504 push op
 	001e150c mov op,ax
 	001e1514 farpush bx
 	001e151c setfuncargs 0x1
 	001e1524 mov ax,0xf1ef20
 	001e1530 farcall ax
 	001e1538 farsubsp 0x1
 	001e1540 pop op
 	001e1548 sourceline 0x2862
 	001e1550 mov mar,0xf36f20
 	001e155c mov ax,mar
 	001e1568 push op
 	001e1570 mov op,ax
 	001e1578 setfuncargs 0x0
 	001e1580 mov ax,0xf26f20
 	001e158c farcall ax
 	001e1594 pop op
 	001e159c mov bx,ax
 	001e15a8 mov mar,0xf36f20
 	001e15b4 mov ax,mar
 	001e15c0 push op
 	001e15c8 mov op,ax
 	001e15d0 farpush bx
 	001e15d8 setfuncargs 0x1
 	001e15e0 mov ax,0xf2ef20
 	001e15ec farcall ax
 	001e15f4 farsubsp 0x1
 	001e15fc pop op
 	001e1604 sourceline 0x2863
 	001e160c mov ax,0xe4
 	001e1618 mov bx,ax
 	001e1624 mov mar,0xf3ef20
 	001e1630 mov ax,mar
 	001e163c push op
 	001e1644 mov op,ax
 	001e164c farpush bx
 	001e1654 setfuncargs 0x1
 	001e165c mov ax,0xf1ef20
 	001e1668 farcall ax
 	001e1670 farsubsp 0x1
 	001e1678 pop op
 	001e1680 sourceline 0x2864
 	001e1688 mov mar,0xf3ef20
 	001e1694 mov ax,mar
 	001e16a0 push op
 	001e16a8 mov op,ax
 	001e16b0 setfuncargs 0x0
 	001e16b8 mov ax,0xf26f20
 	001e16c4 farcall ax
 	001e16cc pop op
 	001e16d4 mov bx,ax
 	001e16e0 mov mar,0xf3ef20
 	001e16ec mov ax,mar
 	001e16f8 push op
 	001e1700 mov op,ax
 	001e1708 farpush bx
 	001e1710 setfuncargs 0x1
 	001e1718 mov ax,0xf2ef20
 	001e1724 farcall ax
 	001e172c farsubsp 0x1
 	001e1734 pop op
 	001e173c sourceline 0x2865
 	001e1744 mov ax,0xe8
 	001e1750 mov bx,ax
 	001e175c mov mar,0xf46f20
 	001e1768 mov ax,mar
 	001e1774 push op
 	001e177c mov op,ax
 	001e1784 farpush bx
 	001e178c setfuncargs 0x1
 	001e1794 mov ax,0xf1ef20
 	001e17a0 farcall ax
 	001e17a8 farsubsp 0x1
 	001e17b0 pop op
 	001e17b8 sourceline 0x2866
 	001e17c0 mov mar,0xf46f20
 	001e17cc mov ax,mar
 	001e17d8 push op
 	001e17e0 mov op,ax
 	001e17e8 setfuncargs 0x0
 	001e17f0 mov ax,0xf26f20
 	001e17fc farcall ax
 	001e1804 pop op
 	001e180c mov bx,ax
 	001e1818 mov mar,0xf46f20
 	001e1824 mov ax,mar
 	001e1830 push op
 	001e1838 mov op,ax
 	001e1840 farpush bx
 	001e1848 setfuncargs 0x1
 	001e1850 mov ax,0xf2ef20
 	001e185c farcall ax
 	001e1864 farsubsp 0x1
 	001e186c pop op
 	001e1874 sourceline 0x2867
 	001e187c mov ax,0xea
 	001e1888 mov bx,ax
 	001e1894 mov mar,0xf4ef20
 	001e18a0 mov ax,mar
 	001e18ac push op
 	001e18b4 mov op,ax
 	001e18bc farpush bx
 	001e18c4 setfuncargs 0x1
 	001e18cc mov ax,0xf1ef20
 	001e18d8 farcall ax
 	001e18e0 farsubsp 0x1
 	001e18e8 pop op
 	001e18f0 sourceline 0x2868
 	001e18f8 mov mar,0xf4ef20
 	001e1904 mov ax,mar
 	001e1910 push op
 	001e1918 mov op,ax
 	001e1920 setfuncargs 0x0
 	001e1928 mov ax,0xf26f20
 	001e1934 farcall ax
 	001e193c pop op
 	001e1944 mov bx,ax
 	001e1950 mov mar,0xf4ef20
 	001e195c mov ax,mar
 	001e1968 push op
 	001e1970 mov op,ax
 	001e1978 farpush bx
 	001e1980 setfuncargs 0x1
 	001e1988 mov ax,0xf2ef20
 	001e1994 farcall ax
 	001e199c farsubsp 0x1
 	001e19a4 pop op
 	001e19ac sourceline 0x2869
 	001e19b4 mov ax,0xeb
 	001e19c0 mov bx,ax
 	001e19cc mov mar,0xf56f20
 	001e19d8 mov ax,mar
 	001e19e4 push op
 	001e19ec mov op,ax
 	001e19f4 farpush bx
 	001e19fc setfuncargs 0x1
 	001e1a04 mov ax,0xf1ef20
 	001e1a10 farcall ax
 	001e1a18 farsubsp 0x1
 	001e1a20 pop op
 	001e1a28 sourceline 0x286a
 	001e1a30 mov mar,0xf56f20
 	001e1a3c mov ax,mar
 	001e1a48 push op
 	001e1a50 mov op,ax
 	001e1a58 setfuncargs 0x0
 	001e1a60 mov ax,0xf26f20
 	001e1a6c farcall ax
 	001e1a74 pop op
 	001e1a7c mov bx,ax
 	001e1a88 mov mar,0xf56f20
 	001e1a94 mov ax,mar
 	001e1aa0 push op
 	001e1aa8 mov op,ax
 	001e1ab0 farpush bx
 	001e1ab8 setfuncargs 0x1
 	001e1ac0 mov ax,0xf2ef20
 	001e1acc farcall ax
 	001e1ad4 farsubsp 0x1
 	001e1adc pop op
 	001e1ae4 sourceline 0x286b
 	001e1aec mov ax,0xe7
 	001e1af8 mov bx,ax
 	001e1b04 mov mar,0xab6f20
 	001e1b10 mov ax,mar
 	001e1b1c push op
 	001e1b24 mov op,ax
 	001e1b2c farpush bx
 	001e1b34 setfuncargs 0x1
 	001e1b3c mov ax,0xf1ef20
 	001e1b48 farcall ax
 	001e1b50 farsubsp 0x1
 	001e1b58 pop op
 	001e1b60 sourceline 0x286c
 	001e1b68 mov mar,0xab6f20
 	001e1b74 mov ax,mar
 	001e1b80 push op
 	001e1b88 mov op,ax
 	001e1b90 setfuncargs 0x0
 	001e1b98 mov ax,0xf26f20
 	001e1ba4 farcall ax
 	001e1bac pop op
 	001e1bb4 mov bx,ax
 	001e1bc0 mov mar,0xab6f20
 	001e1bcc mov ax,mar
 	001e1bd8 push op
 	001e1be0 mov op,ax
 	001e1be8 farpush bx
 	001e1bf0 setfuncargs 0x1
 	001e1bf8 mov ax,0xf2ef20
 	001e1c04 farcall ax
 	001e1c0c farsubsp 0x1
 	001e1c14 pop op
 	001e1c1c sourceline 0x286d
 	001e1c24 mov ax,0xec
 	001e1c30 mov bx,ax
 	001e1c3c mov mar,0xf5ef20
 	001e1c48 mov ax,mar
 	001e1c54 push op
 	001e1c5c mov op,ax
 	001e1c64 farpush bx
 	001e1c6c setfuncargs 0x1
 	001e1c74 mov ax,0xf1ef20
 	001e1c80 farcall ax
 	001e1c88 farsubsp 0x1
 	001e1c90 pop op
 	001e1c98 sourceline 0x286e
 	001e1ca0 mov mar,0xf5ef20
 	001e1cac mov ax,mar
 	001e1cb8 push op
 	001e1cc0 mov op,ax
 	001e1cc8 setfuncargs 0x0
 	001e1cd0 mov ax,0xf26f20
 	001e1cdc farcall ax
 	001e1ce4 pop op
 	001e1cec mov bx,ax
 	001e1cf8 mov mar,0xf5ef20
 	001e1d04 mov ax,mar
 	001e1d10 push op
 	001e1d18 mov op,ax
 	001e1d20 farpush bx
 	001e1d28 setfuncargs 0x1
 	001e1d30 mov ax,0xf2ef20
 	001e1d3c farcall ax
 	001e1d44 farsubsp 0x1
 	001e1d4c pop op
 	001e1d54 sourceline 0x286f
 	001e1d5c mov ax,0xed
 	001e1d68 mov bx,ax
 	001e1d74 mov mar,0xf66f20
 	001e1d80 mov ax,mar
 	001e1d8c push op
 	001e1d94 mov op,ax
 	001e1d9c farpush bx
 	001e1da4 setfuncargs 0x1
 	001e1dac mov ax,0xf1ef20
 	001e1db8 farcall ax
 	001e1dc0 farsubsp 0x1
 	001e1dc8 pop op
 	001e1dd0 sourceline 0x2870
 	001e1dd8 mov mar,0xf66f20
 	001e1de4 mov ax,mar
 	001e1df0 push op
 	001e1df8 mov op,ax
 	001e1e00 setfuncargs 0x0
 	001e1e08 mov ax,0xf26f20
 	001e1e14 farcall ax
 	001e1e1c pop op
 	001e1e24 mov bx,ax
 	001e1e30 mov mar,0xf66f20
 	001e1e3c mov ax,mar
 	001e1e48 push op
 	001e1e50 mov op,ax
 	001e1e58 farpush bx
 	001e1e60 setfuncargs 0x1
 	001e1e68 mov ax,0xf2ef20
 	001e1e74 farcall ax
 	001e1e7c farsubsp 0x1
 	001e1e84 pop op
 	001e1e8c sourceline 0x2871
 	001e1e94 mov ax,0xe5
 	001e1ea0 mov bx,ax
 	001e1eac mov mar,0x816f20
 	001e1eb8 mov ax,mar
 	001e1ec4 push op
 	001e1ecc mov op,ax
 	001e1ed4 farpush bx
 	001e1edc setfuncargs 0x1
 	001e1ee4 mov ax,0xf1ef20
 	001e1ef0 farcall ax
 	001e1ef8 farsubsp 0x1
 	001e1f00 pop op
 	001e1f08 sourceline 0x2872
 	001e1f10 mov mar,0x816f20
 	001e1f1c mov ax,mar
 	001e1f28 push op
 	001e1f30 mov op,ax
 	001e1f38 setfuncargs 0x0
 	001e1f40 mov ax,0xf26f20
 	001e1f4c farcall ax
 	001e1f54 pop op
 	001e1f5c mov bx,ax
 	001e1f68 mov mar,0x816f20
 	001e1f74 mov ax,mar
 	001e1f80 push op
 	001e1f88 mov op,ax
 	001e1f90 farpush bx
 	001e1f98 setfuncargs 0x1
 	001e1fa0 mov ax,0xf2ef20
 	001e1fac farcall ax
 	001e1fb4 farsubsp 0x1
 	001e1fbc pop op
 	001e1fc4 sourceline 0x2873
 	001e1fcc mov ax,0xba4
 	001e1fd8 mov bx,ax
 	001e1fe4 mov mar,0xf6ef20
 	001e1ff0 mov ax,mar
 	001e1ffc push op
 	001e2004 mov op,ax
 	001e200c farpush bx
 	001e2014 setfuncargs 0x1
 	001e201c mov ax,0xf1ef20
 	001e2028 farcall ax
 	001e2030 farsubsp 0x1
 	001e2038 pop op
 	001e2040 sourceline 0x2874
 	001e2048 mov mar,0xf6ef20
 	001e2054 mov ax,mar
 	001e2060 push op
 	001e2068 mov op,ax
 	001e2070 setfuncargs 0x0
 	001e2078 mov ax,0xf26f20
 	001e2084 farcall ax
 	001e208c pop op
 	001e2094 mov bx,ax
 	001e20a0 mov mar,0xf6ef20
 	001e20ac mov ax,mar
 	001e20b8 push op
 	001e20c0 mov op,ax
 	001e20c8 farpush bx
 	001e20d0 setfuncargs 0x1
 	001e20d8 mov ax,0xf2ef20
 	001e20e4 farcall ax
 	001e20ec farsubsp 0x1
 	001e20f4 pop op
 	001e20fc sourceline 0x2876
 	001e2104 mov ax,0x2c787b
 	001e2110 farpush ax
 	001e2118 setfuncargs 0x1
 	001e2120 mov ax,0xf76f20
 	001e212c farcall ax
 	001e2134 farsubsp 0x1
 	001e213c sourceline 0x2877
 	001e2144 mov ax,0x0
 	001e2150 ret

ConfirmToGerman$0:
	[001e2154]
 	001e2154 sourceline 0x287b
 	001e215c thisaddr
 	001e2164 sourceline 0x287c
 	001e216c mov ax,0x7af
 	001e2178 mov bx,ax
*	001e2184 mov mar,0xea6f20
 	001e2190 mov ax,mar
 	001e219c push op
 	001e21a4 mov op,ax
 	001e21ac farpush bx
 	001e21b4 setfuncargs 0x1
 	001e21bc mov ax,0x356f20
 	001e21c8 farcall ax
 	001e21d0 farsubsp 0x1
 	001e21d8 pop op
 	001e21e0 sourceline 0x287d
 	001e21e8 mov ax,0x7b2
 	001e21f4 mov bx,ax
 	001e2200 mov mar,0x3eef20
 	001e220c mov ax,mar
 	001e2218 push op
 	001e2220 mov op,ax
 	001e2228 farpush bx
 	001e2230 setfuncargs 0x1
 	001e2238 mov ax,0x356f20
 	001e2244 farcall ax
 	001e224c farsubsp 0x1
 	001e2254 pop op
 	001e225c sourceline 0x287e
 	001e2264 mov ax,0x7b3
 	001e2270 mov bx,ax
 	001e227c mov mar,0x3eef20
 	001e2288 mov ax,mar
 	001e2294 push op
 	001e229c mov op,ax
 	001e22a4 farpush bx
 	001e22ac setfuncargs 0x1
 	001e22b4 mov ax,0x3f6f20
 	001e22c0 farcall ax
 	001e22c8 farsubsp 0x1
 	001e22d0 pop op
 	001e22d8 sourceline 0x287f
 	001e22e0 mov ax,0x7b3
 	001e22ec mov bx,ax
 	001e22f8 mov mar,0x3eef20
 	001e2304 mov ax,mar
 	001e2310 push op
 	001e2318 mov op,ax
 	001e2320 farpush bx
 	001e2328 setfuncargs 0x1
 	001e2330 mov ax,0x3fef20
 	001e233c farcall ax
 	001e2344 farsubsp 0x1
 	001e234c pop op
 	001e2354 sourceline 0x2880
 	001e235c mov ax,0x7b4
 	001e2368 mov bx,ax
 	001e2374 mov mar,0x406f20
 	001e2380 mov ax,mar
 	001e238c push op
 	001e2394 mov op,ax
 	001e239c farpush bx
 	001e23a4 setfuncargs 0x1
 	001e23ac mov ax,0x356f20
 	001e23b8 farcall ax
 	001e23c0 farsubsp 0x1
 	001e23c8 pop op
 	001e23d0 sourceline 0x2881
 	001e23d8 mov ax,0x7b5
 	001e23e4 mov bx,ax
 	001e23f0 mov mar,0x406f20
 	001e23fc mov ax,mar
 	001e2408 push op
 	001e2410 mov op,ax
 	001e2418 farpush bx
 	001e2420 setfuncargs 0x1
 	001e2428 mov ax,0x3f6f20
 	001e2434 farcall ax
 	001e243c farsubsp 0x1
 	001e2444 pop op
 	001e244c sourceline 0x2882
 	001e2454 mov ax,0x7b5
 	001e2460 mov bx,ax
 	001e246c mov mar,0x406f20
 	001e2478 mov ax,mar
 	001e2484 push op
 	001e248c mov op,ax
 	001e2494 farpush bx
 	001e249c setfuncargs 0x1
 	001e24a4 mov ax,0x3fef20
 	001e24b0 farcall ax
 	001e24b8 farsubsp 0x1
 	001e24c0 pop op
 	001e24c8 sourceline 0x2883
 	001e24d0 mov ax,0x7b6
 	001e24dc mov bx,ax
 	001e24e8 mov mar,0x40ef20
 	001e24f4 mov ax,mar
 	001e2500 push op
 	001e2508 mov op,ax
 	001e2510 farpush bx
 	001e2518 setfuncargs 0x1
 	001e2520 mov ax,0x356f20
 	001e252c farcall ax
 	001e2534 farsubsp 0x1
 	001e253c pop op
 	001e2544 sourceline 0x2884
 	001e254c mov ax,0x7b7
 	001e2558 mov bx,ax
 	001e2564 mov mar,0x40ef20
 	001e2570 mov ax,mar
 	001e257c push op
 	001e2584 mov op,ax
 	001e258c farpush bx
 	001e2594 setfuncargs 0x1
 	001e259c mov ax,0x3f6f20
 	001e25a8 farcall ax
 	001e25b0 farsubsp 0x1
 	001e25b8 pop op
 	001e25c0 sourceline 0x2885
 	001e25c8 mov ax,0x7b7
 	001e25d4 mov bx,ax
 	001e25e0 mov mar,0x40ef20
 	001e25ec mov ax,mar
 	001e25f8 push op
 	001e2600 mov op,ax
 	001e2608 farpush bx
 	001e2610 setfuncargs 0x1
 	001e2618 mov ax,0x3fef20
 	001e2624 farcall ax
 	001e262c farsubsp 0x1
 	001e2634 pop op
 	001e263c sourceline 0x2886
 	001e2644 mov ax,0x7b8
 	001e2650 mov bx,ax
 	001e265c mov mar,0x416f20
 	001e2668 mov ax,mar
 	001e2674 push op
 	001e267c mov op,ax
 	001e2684 farpush bx
 	001e268c setfuncargs 0x1
 	001e2694 mov ax,0x356f20
 	001e26a0 farcall ax
 	001e26a8 farsubsp 0x1
 	001e26b0 pop op
 	001e26b8 sourceline 0x2887
 	001e26c0 mov ax,0x7b9
 	001e26cc mov bx,ax
 	001e26d8 mov mar,0x416f20
 	001e26e4 mov ax,mar
 	001e26f0 push op
 	001e26f8 mov op,ax
 	001e2700 farpush bx
 	001e2708 setfuncargs 0x1
 	001e2710 mov ax,0x3f6f20
 	001e271c farcall ax
 	001e2724 farsubsp 0x1
 	001e272c pop op
 	001e2734 sourceline 0x2888
 	001e273c mov ax,0x7b9
 	001e2748 mov bx,ax
 	001e2754 mov mar,0x416f20
 	001e2760 mov ax,mar
 	001e276c push op
 	001e2774 mov op,ax
 	001e277c farpush bx
 	001e2784 setfuncargs 0x1
 	001e278c mov ax,0x3fef20
 	001e2798 farcall ax
 	001e27a0 farsubsp 0x1
 	001e27a8 pop op
 	001e27b0 sourceline 0x2889
 	001e27b8 mov ax,0x7ba
 	001e27c4 mov bx,ax
 	001e27d0 mov mar,0x41ef20
 	001e27dc mov ax,mar
 	001e27e8 push op
 	001e27f0 mov op,ax
 	001e27f8 farpush bx
 	001e2800 setfuncargs 0x1
 	001e2808 mov ax,0x356f20
 	001e2814 farcall ax
 	001e281c farsubsp 0x1
 	001e2824 pop op
 	001e282c sourceline 0x288a
 	001e2834 mov ax,0x7bb
 	001e2840 mov bx,ax
 	001e284c mov mar,0x41ef20
 	001e2858 mov ax,mar
 	001e2864 push op
 	001e286c mov op,ax
 	001e2874 farpush bx
 	001e287c setfuncargs 0x1
 	001e2884 mov ax,0x3f6f20
 	001e2890 farcall ax
 	001e2898 farsubsp 0x1
 	001e28a0 pop op
 	001e28a8 sourceline 0x288b
 	001e28b0 mov ax,0x7bb
 	001e28bc mov bx,ax
 	001e28c8 mov mar,0x41ef20
 	001e28d4 mov ax,mar
 	001e28e0 push op
 	001e28e8 mov op,ax
 	001e28f0 farpush bx
 	001e28f8 setfuncargs 0x1
 	001e2900 mov ax,0x3fef20
 	001e290c farcall ax
 	001e2914 farsubsp 0x1
 	001e291c pop op
 	001e2924 sourceline 0x288c
 	001e292c mov ax,0x7bc
 	001e2938 mov bx,ax
 	001e2944 mov mar,0xeaef20
 	001e2950 mov ax,mar
 	001e295c push op
 	001e2964 mov op,ax
 	001e296c farpush bx
 	001e2974 setfuncargs 0x1
 	001e297c mov ax,0x836f20
 	001e2988 farcall ax
 	001e2990 farsubsp 0x1
 	001e2998 pop op
 	001e29a0 sourceline 0x288d
 	001e29a8 mov ax,0x7bd
 	001e29b4 mov bx,ax
 	001e29c0 mov mar,0xeb6f20
 	001e29cc mov ax,mar
 	001e29d8 push op
 	001e29e0 mov op,ax
 	001e29e8 farpush bx
 	001e29f0 setfuncargs 0x1
 	001e29f8 mov ax,0x356f20
 	001e2a04 farcall ax
 	001e2a0c farsubsp 0x1
 	001e2a14 pop op
 	001e2a1c sourceline 0x288e
 	001e2a24 mov ax,0x7be
 	001e2a30 mov bx,ax
 	001e2a3c mov mar,0xeb6f20
 	001e2a48 mov ax,mar
 	001e2a54 push op
 	001e2a5c mov op,ax
 	001e2a64 farpush bx
 	001e2a6c setfuncargs 0x1
 	001e2a74 mov ax,0x3f6f20
 	001e2a80 farcall ax
 	001e2a88 farsubsp 0x1
 	001e2a90 pop op
 	001e2a98 sourceline 0x288f
 	001e2aa0 mov ax,0x7be
 	001e2aac mov bx,ax
 	001e2ab8 mov mar,0xeb6f20
 	001e2ac4 mov ax,mar
 	001e2ad0 push op
 	001e2ad8 mov op,ax
 	001e2ae0 farpush bx
 	001e2ae8 setfuncargs 0x1
 	001e2af0 mov ax,0x3fef20
 	001e2afc farcall ax
 	001e2b04 farsubsp 0x1
 	001e2b0c pop op
 	001e2b14 sourceline 0x2890
 	001e2b1c mov ax,0x7bf
 	001e2b28 mov bx,ax
 	001e2b34 mov mar,0xebef20
 	001e2b40 mov ax,mar
 	001e2b4c push op
 	001e2b54 mov op,ax
 	001e2b5c farpush bx
 	001e2b64 setfuncargs 0x1
 	001e2b6c mov ax,0x356f20
 	001e2b78 farcall ax
 	001e2b80 farsubsp 0x1
 	001e2b88 pop op
 	001e2b90 sourceline 0x2891
 	001e2b98 mov ax,0x7bd
 	001e2ba4 mov bx,ax
 	001e2bb0 mov mar,0x556f20
 	001e2bbc mov ax,mar
 	001e2bc8 push op
 	001e2bd0 mov op,ax
 	001e2bd8 farpush bx
 	001e2be0 setfuncargs 0x1
 	001e2be8 mov ax,0x356f20
 	001e2bf4 farcall ax
 	001e2bfc farsubsp 0x1
 	001e2c04 pop op
 	001e2c0c sourceline 0x2892
 	001e2c14 mov ax,0x7be
 	001e2c20 mov bx,ax
 	001e2c2c mov mar,0x556f20
 	001e2c38 mov ax,mar
 	001e2c44 push op
 	001e2c4c mov op,ax
 	001e2c54 farpush bx
 	001e2c5c setfuncargs 0x1
 	001e2c64 mov ax,0x3f6f20
 	001e2c70 farcall ax
 	001e2c78 farsubsp 0x1
 	001e2c80 pop op
 	001e2c88 sourceline 0x2893
 	001e2c90 mov ax,0x7be
 	001e2c9c mov bx,ax
 	001e2ca8 mov mar,0x556f20
 	001e2cb4 mov ax,mar
 	001e2cc0 push op
 	001e2cc8 mov op,ax
 	001e2cd0 farpush bx
 	001e2cd8 setfuncargs 0x1
 	001e2ce0 mov ax,0x3fef20
 	001e2cec farcall ax
 	001e2cf4 farsubsp 0x1
 	001e2cfc pop op
 	001e2d04 sourceline 0x2894
 	001e2d0c mov ax,0x7c3
 	001e2d18 mov bx,ax
 	001e2d24 mov mar,0x55ef20
 	001e2d30 mov ax,mar
 	001e2d3c push op
 	001e2d44 mov op,ax
 	001e2d4c farpush bx
 	001e2d54 setfuncargs 0x1
 	001e2d5c mov ax,0x356f20
 	001e2d68 farcall ax
 	001e2d70 farsubsp 0x1
 	001e2d78 pop op
 	001e2d80 sourceline 0x2895
 	001e2d88 mov ax,0x7c4
 	001e2d94 mov bx,ax
 	001e2da0 mov mar,0x55ef20
 	001e2dac mov ax,mar
 	001e2db8 push op
 	001e2dc0 mov op,ax
 	001e2dc8 farpush bx
 	001e2dd0 setfuncargs 0x1
 	001e2dd8 mov ax,0x3f6f20
 	001e2de4 farcall ax
 	001e2dec farsubsp 0x1
 	001e2df4 pop op
 	001e2dfc sourceline 0x2896
 	001e2e04 mov ax,0x7c4
 	001e2e10 mov bx,ax
 	001e2e1c mov mar,0x55ef20
 	001e2e28 mov ax,mar
 	001e2e34 push op
 	001e2e3c mov op,ax
 	001e2e44 farpush bx
 	001e2e4c setfuncargs 0x1
 	001e2e54 mov ax,0x3fef20
 	001e2e60 farcall ax
 	001e2e68 farsubsp 0x1
 	001e2e70 pop op
 	001e2e78 sourceline 0x2897
 	001e2e80 mov ax,0x7c7
 	001e2e8c mov bx,ax
 	001e2e98 mov mar,0x566f20
 	001e2ea4 mov ax,mar
 	001e2eb0 push op
 	001e2eb8 mov op,ax
 	001e2ec0 farpush bx
 	001e2ec8 setfuncargs 0x1
 	001e2ed0 mov ax,0x356f20
 	001e2edc farcall ax
 	001e2ee4 farsubsp 0x1
 	001e2eec pop op
 	001e2ef4 sourceline 0x2898
 	001e2efc mov ax,0x7c8
 	001e2f08 mov bx,ax
 	001e2f14 mov mar,0x566f20
 	001e2f20 mov ax,mar
 	001e2f2c push op
 	001e2f34 mov op,ax
 	001e2f3c farpush bx
 	001e2f44 setfuncargs 0x1
 	001e2f4c mov ax,0x3f6f20
 	001e2f58 farcall ax
 	001e2f60 farsubsp 0x1
 	001e2f68 pop op
 	001e2f70 sourceline 0x2899
 	001e2f78 mov ax,0x7c8
 	001e2f84 mov bx,ax
 	001e2f90 mov mar,0x566f20
 	001e2f9c mov ax,mar
 	001e2fa8 push op
 	001e2fb0 mov op,ax
 	001e2fb8 farpush bx
 	001e2fc0 setfuncargs 0x1
 	001e2fc8 mov ax,0x3fef20
 	001e2fd4 farcall ax
 	001e2fdc farsubsp 0x1
 	001e2fe4 pop op
 	001e2fec sourceline 0x289b
 	001e2ff4 mov ax,0xaf8
 	001e3000 mov bx,ax
 	001e300c mov mar,0xf16f20
 	001e3018 mov ax,mar
 	001e3024 push op
 	001e302c mov op,ax
 	001e3034 farpush bx
 	001e303c setfuncargs 0x1
 	001e3044 mov ax,0xf1ef20
 	001e3050 farcall ax
 	001e3058 farsubsp 0x1
 	001e3060 pop op
 	001e3068 sourceline 0x289c
 	001e3070 mov mar,0xf16f20
 	001e307c mov ax,mar
 	001e3088 push op
 	001e3090 mov op,ax
 	001e3098 setfuncargs 0x0
 	001e30a0 mov ax,0xf26f20
 	001e30ac farcall ax
 	001e30b4 pop op
 	001e30bc mov bx,ax
 	001e30c8 mov mar,0xf16f20
 	001e30d4 mov ax,mar
 	001e30e0 push op
 	001e30e8 mov op,ax
 	001e30f0 farpush bx
 	001e30f8 setfuncargs 0x1
 	001e3100 mov ax,0xf2ef20
 	001e310c farcall ax
 	001e3114 farsubsp 0x1
 	001e311c pop op
 	001e3124 sourceline 0x289d
 	001e312c mov ax,0x9c0
 	001e3138 mov bx,ax
 	001e3144 mov mar,0xf36f20
 	001e3150 mov ax,mar
 	001e315c push op
 	001e3164 mov op,ax
 	001e316c farpush bx
 	001e3174 setfuncargs 0x1
 	001e317c mov ax,0xf1ef20
 	001e3188 farcall ax
 	001e3190 farsubsp 0x1
 	001e3198 pop op
 	001e31a0 sourceline 0x289e
 	001e31a8 mov mar,0xf36f20
 	001e31b4 mov ax,mar
 	001e31c0 push op
 	001e31c8 mov op,ax
 	001e31d0 setfuncargs 0x0
 	001e31d8 mov ax,0xf26f20
 	001e31e4 farcall ax
 	001e31ec pop op
 	001e31f4 mov bx,ax
 	001e3200 mov mar,0xf36f20
 	001e320c mov ax,mar
 	001e3218 push op
 	001e3220 mov op,ax
 	001e3228 farpush bx
 	001e3230 setfuncargs 0x1
 	001e3238 mov ax,0xf2ef20
 	001e3244 farcall ax
 	001e324c farsubsp 0x1
 	001e3254 pop op
 	001e325c sourceline 0x289f
 	001e3264 mov ax,0x5b7
 	001e3270 mov bx,ax
 	001e327c mov mar,0xf3ef20
 	001e3288 mov ax,mar
 	001e3294 push op
 	001e329c mov op,ax
 	001e32a4 farpush bx
 	001e32ac setfuncargs 0x1
 	001e32b4 mov ax,0xf1ef20
 	001e32c0 farcall ax
 	001e32c8 farsubsp 0x1
 	001e32d0 pop op
 	001e32d8 sourceline 0x28a0
 	001e32e0 mov mar,0xf3ef20
 	001e32ec mov ax,mar
 	001e32f8 push op
 	001e3300 mov op,ax
 	001e3308 setfuncargs 0x0
 	001e3310 mov ax,0xf26f20
 	001e331c farcall ax
 	001e3324 pop op
 	001e332c mov bx,ax
 	001e3338 mov mar,0xf3ef20
 	001e3344 mov ax,mar
 	001e3350 push op
 	001e3358 mov op,ax
 	001e3360 farpush bx
 	001e3368 setfuncargs 0x1
 	001e3370 mov ax,0xf2ef20
 	001e337c farcall ax
 	001e3384 farsubsp 0x1
 	001e338c pop op
 	001e3394 sourceline 0x28a1
 	001e339c mov ax,0x9c1
 	001e33a8 mov bx,ax
 	001e33b4 mov mar,0xf46f20
 	001e33c0 mov ax,mar
 	001e33cc push op
 	001e33d4 mov op,ax
 	001e33dc farpush bx
 	001e33e4 setfuncargs 0x1
 	001e33ec mov ax,0xf1ef20
 	001e33f8 farcall ax
 	001e3400 farsubsp 0x1
 	001e3408 pop op
 	001e3410 sourceline 0x28a2
 	001e3418 mov mar,0xf46f20
 	001e3424 mov ax,mar
 	001e3430 push op
 	001e3438 mov op,ax
 	001e3440 setfuncargs 0x0
 	001e3448 mov ax,0xf26f20
 	001e3454 farcall ax
 	001e345c pop op
 	001e3464 mov bx,ax
 	001e3470 mov mar,0xf46f20
 	001e347c mov ax,mar
 	001e3488 push op
 	001e3490 mov op,ax
 	001e3498 farpush bx
 	001e34a0 setfuncargs 0x1
 	001e34a8 mov ax,0xf2ef20
 	001e34b4 farcall ax
 	001e34bc farsubsp 0x1
 	001e34c4 pop op
 	001e34cc sourceline 0x28a3
 	001e34d4 mov ax,0x9c2
 	001e34e0 mov bx,ax
 	001e34ec mov mar,0xf4ef20
 	001e34f8 mov ax,mar
 	001e3504 push op
 	001e350c mov op,ax
 	001e3514 farpush bx
 	001e351c setfuncargs 0x1
 	001e3524 mov ax,0xf1ef20
 	001e3530 farcall ax
 	001e3538 farsubsp 0x1
 	001e3540 pop op
 	001e3548 sourceline 0x28a4
 	001e3550 mov mar,0xf4ef20
 	001e355c mov ax,mar
 	001e3568 push op
 	001e3570 mov op,ax
 	001e3578 setfuncargs 0x0
 	001e3580 mov ax,0xf26f20
 	001e358c farcall ax
 	001e3594 pop op
 	001e359c mov bx,ax
 	001e35a8 mov mar,0xf4ef20
 	001e35b4 mov ax,mar
 	001e35c0 push op
 	001e35c8 mov op,ax
 	001e35d0 farpush bx
 	001e35d8 setfuncargs 0x1
 	001e35e0 mov ax,0xf2ef20
 	001e35ec farcall ax
 	001e35f4 farsubsp 0x1
 	001e35fc pop op
 	001e3604 sourceline 0x28a5
 	001e360c mov ax,0xe44
 	001e3618 mov bx,ax
 	001e3624 mov mar,0xf56f20
 	001e3630 mov ax,mar
 	001e363c push op
 	001e3644 mov op,ax
 	001e364c farpush bx
 	001e3654 setfuncargs 0x1
 	001e365c mov ax,0xf1ef20
 	001e3668 farcall ax
 	001e3670 farsubsp 0x1
 	001e3678 pop op
 	001e3680 sourceline 0x28a6
 	001e3688 mov mar,0xf56f20
 	001e3694 mov ax,mar
 	001e36a0 push op
 	001e36a8 mov op,ax
 	001e36b0 setfuncargs 0x0
 	001e36b8 mov ax,0xf26f20
 	001e36c4 farcall ax
 	001e36cc pop op
 	001e36d4 mov bx,ax
 	001e36e0 mov mar,0xf56f20
 	001e36ec mov ax,mar
 	001e36f8 push op
 	001e3700 mov op,ax
 	001e3708 farpush bx
 	001e3710 setfuncargs 0x1
 	001e3718 mov ax,0xf2ef20
 	001e3724 farcall ax
 	001e372c farsubsp 0x1
 	001e3734 pop op
 	001e373c sourceline 0x28a7
 	001e3744 mov ax,0x9c4
 	001e3750 mov bx,ax
 	001e375c mov mar,0xab6f20
 	001e3768 mov ax,mar
 	001e3774 push op
 	001e377c mov op,ax
 	001e3784 farpush bx
 	001e378c setfuncargs 0x1
 	001e3794 mov ax,0xf1ef20
 	001e37a0 farcall ax
 	001e37a8 farsubsp 0x1
 	001e37b0 pop op
 	001e37b8 sourceline 0x28a8
 	001e37c0 mov mar,0xab6f20
 	001e37cc mov ax,mar
 	001e37d8 push op
 	001e37e0 mov op,ax
 	001e37e8 setfuncargs 0x0
 	001e37f0 mov ax,0xf26f20
 	001e37fc farcall ax
 	001e3804 pop op
 	001e380c mov bx,ax
 	001e3818 mov mar,0xab6f20
 	001e3824 mov ax,mar
 	001e3830 push op
 	001e3838 mov op,ax
 	001e3840 farpush bx
 	001e3848 setfuncargs 0x1
 	001e3850 mov ax,0xf2ef20
 	001e385c farcall ax
 	001e3864 farsubsp 0x1
 	001e386c pop op
 	001e3874 sourceline 0x28a9
 	001e387c mov ax,0x9c5
 	001e3888 mov bx,ax
 	001e3894 mov mar,0xf5ef20
 	001e38a0 mov ax,mar
 	001e38ac push op
 	001e38b4 mov op,ax
 	001e38bc farpush bx
 	001e38c4 setfuncargs 0x1
 	001e38cc mov ax,0xf1ef20
 	001e38d8 farcall ax
 	001e38e0 farsubsp 0x1
 	001e38e8 pop op
 	001e38f0 sourceline 0x28aa
 	001e38f8 mov mar,0xf5ef20
 	001e3904 mov ax,mar
 	001e3910 push op
 	001e3918 mov op,ax
 	001e3920 setfuncargs 0x0
 	001e3928 mov ax,0xf26f20
 	001e3934 farcall ax
 	001e393c pop op
 	001e3944 mov bx,ax
 	001e3950 mov mar,0xf5ef20
 	001e395c mov ax,mar
 	001e3968 push op
 	001e3970 mov op,ax
 	001e3978 farpush bx
 	001e3980 setfuncargs 0x1
 	001e3988 mov ax,0xf2ef20
 	001e3994 farcall ax
 	001e399c farsubsp 0x1
 	001e39a4 pop op
 	001e39ac sourceline 0x28ab
 	001e39b4 mov ax,0x9c6
 	001e39c0 mov bx,ax
 	001e39cc mov mar,0xf66f20
 	001e39d8 mov ax,mar
 	001e39e4 push op
 	001e39ec mov op,ax
 	001e39f4 farpush bx
 	001e39fc setfuncargs 0x1
 	001e3a04 mov ax,0xf1ef20
 	001e3a10 farcall ax
 	001e3a18 farsubsp 0x1
 	001e3a20 pop op
 	001e3a28 sourceline 0x28ac
 	001e3a30 mov mar,0xf66f20
 	001e3a3c mov ax,mar
 	001e3a48 push op
 	001e3a50 mov op,ax
 	001e3a58 setfuncargs 0x0
 	001e3a60 mov ax,0xf26f20
 	001e3a6c farcall ax
 	001e3a74 pop op
 	001e3a7c mov bx,ax
 	001e3a88 mov mar,0xf66f20
 	001e3a94 mov ax,mar
 	001e3aa0 push op
 	001e3aa8 mov op,ax
 	001e3ab0 farpush bx
 	001e3ab8 setfuncargs 0x1
 	001e3ac0 mov ax,0xf2ef20
 	001e3acc farcall ax
 	001e3ad4 farsubsp 0x1
 	001e3adc pop op
 	001e3ae4 sourceline 0x28ad
 	001e3aec mov ax,0x9c7
 	001e3af8 mov bx,ax
 	001e3b04 mov mar,0x816f20
 	001e3b10 mov ax,mar
 	001e3b1c push op
 	001e3b24 mov op,ax
 	001e3b2c farpush bx
 	001e3b34 setfuncargs 0x1
 	001e3b3c mov ax,0xf1ef20
 	001e3b48 farcall ax
 	001e3b50 farsubsp 0x1
 	001e3b58 pop op
 	001e3b60 sourceline 0x28ae
 	001e3b68 mov mar,0x816f20
 	001e3b74 mov ax,mar
 	001e3b80 push op
 	001e3b88 mov op,ax
 	001e3b90 setfuncargs 0x0
 	001e3b98 mov ax,0xf26f20
 	001e3ba4 farcall ax
 	001e3bac pop op
 	001e3bb4 mov bx,ax
 	001e3bc0 mov mar,0x816f20
 	001e3bcc mov ax,mar
 	001e3bd8 push op
 	001e3be0 mov op,ax
 	001e3be8 farpush bx
 	001e3bf0 setfuncargs 0x1
 	001e3bf8 mov ax,0xf2ef20
 	001e3c04 farcall ax
 	001e3c0c farsubsp 0x1
 	001e3c14 pop op
 	001e3c1c sourceline 0x28af
 	001e3c24 mov ax,0xba6
 	001e3c30 mov bx,ax
 	001e3c3c mov mar,0xf6ef20
 	001e3c48 mov ax,mar
 	001e3c54 push op
 	001e3c5c mov op,ax
 	001e3c64 farpush bx
 	001e3c6c setfuncargs 0x1
 	001e3c74 mov ax,0xf1ef20
 	001e3c80 farcall ax
 	001e3c88 farsubsp 0x1
 	001e3c90 pop op
 	001e3c98 sourceline 0x28b0
 	001e3ca0 mov mar,0xf6ef20
 	001e3cac mov ax,mar
 	001e3cb8 push op
 	001e3cc0 mov op,ax
 	001e3cc8 setfuncargs 0x0
 	001e3cd0 mov ax,0xf26f20
 	001e3cdc farcall ax
 	001e3ce4 pop op
 	001e3cec mov bx,ax
 	001e3cf8 mov mar,0xf6ef20
 	001e3d04 mov ax,mar
 	001e3d10 push op
 	001e3d18 mov op,ax
 	001e3d20 farpush bx
 	001e3d28 setfuncargs 0x1
 	001e3d30 mov ax,0xf2ef20
 	001e3d3c farcall ax
 	001e3d44 farsubsp 0x1
 	001e3d4c pop op
 	001e3d54 sourceline 0x28b2
 	001e3d5c mov ax,0x2c70be
 	001e3d68 farpush ax
 	001e3d70 setfuncargs 0x1
 	001e3d78 mov ax,0xf76f20
 	001e3d84 farcall ax
 	001e3d8c farsubsp 0x1
 	001e3d94 sourceline 0x28b3
 	001e3d9c mov ax,0x0
 	001e3da8 ret

ConfirmSubtitles$0:
	[001e3dac]
 	001e3dac sourceline 0x28b7
 	001e3db4 thisaddr
 	001e3dbc sourceline 0x28b8
*	001e3dc4 mov mar,0xe9ef20
 	001e3dd0 mov ax,mar
 	001e3ddc push op
 	001e3de4 mov op,ax
 	001e3dec setfuncargs 0x0
 	001e3df4 mov ax,0xf7ef20
 	001e3e00 farcall ax
 	001e3e08 pop op
 	001e3e10 push ax
 	001e3e18 mov ax,0xe7a
 	001e3e24 pop bx
 	001e3e2c cmpeq bx,ax
 	001e3e38 mov ax,bx
 	001e3e44 jz 0x001e3f50
		001e3f50: CONDITIONAL_JUMP
		001e3e4c: FALL_THROUGH

	[001e3e4c]
		001e3dac: FALL_THROUGH
 	001e3e4c sourceline 0x28bb
 	001e3e54 mov mar,0xe96f20
 	001e3e60 memread4 ax
 	001e3e68 jz 0x001e3e90
		001e3e90: CONDITIONAL_JUMP
		001e3e70: FALL_THROUGH

	[001e3e70]
		001e3e4c: FALL_THROUGH
 	001e3e70 mov ax,0x0
 	001e3e7c mov mar,0xe96f20
 	001e3e88 memwrite4 ax
		001e3e90: FALL_THROUGH

	[001e3e90]
		001e3e4c: CONDITIONAL_JUMP
		001e3e70: FALL_THROUGH
 	001e3e90 sourceline 0x28bc
 	001e3e98 setfuncargs 0x0
 	001e3ea0 mov ax,0xf86f20
 	001e3eac farcall ax
 	001e3eb4 push ax
 	001e3ebc mov ax,0x1
 	001e3ec8 pop bx
 	001e3ed0 cmpeq bx,ax
 	001e3edc mov ax,bx
 	001e3ee8 jz 0x001e3f40
		001e3f40: CONDITIONAL_JUMP
		001e3ef0: FALL_THROUGH

	[001e3ef0]
		001e3e90: FALL_THROUGH
 	001e3ef0 mov ax,0x2
 	001e3efc mov bx,ax
 	001e3f08 mov ax,0x0
 	001e3f14 farpush bx
 	001e3f1c setfuncargs 0x1
 	001e3f24 mov ax,0xf8ef20
 	001e3f30 farcall ax
 	001e3f38 farsubsp 0x1
		001e3f40: FALL_THROUGH

	[001e3f40]
		001e3e90: CONDITIONAL_JUMP
		001e3ef0: FALL_THROUGH
 	001e3f40 sourceline 0x28be
 	001e3f48 jmp 0x001e3ff4
		001e3ff4: UNCONDITIONAL_JUMP

	[001e3f50]
		001e3dac: CONDITIONAL_JUMP
 	001e3f50 sourceline 0x28c3
 	001e3f58 mov mar,0xe96f20
 	001e3f64 memread4 ax
 	001e3f6c lnot ax
 	001e3f74 jz 0x001e3f9c
		001e3f9c: CONDITIONAL_JUMP
		001e3f7c: FALL_THROUGH

	[001e3f7c]
		001e3f50: FALL_THROUGH
 	001e3f7c mov ax,0x1
 	001e3f88 mov mar,0xe96f20
 	001e3f94 memwrite4 ax
		001e3f9c: FALL_THROUGH

	[001e3f9c]
		001e3f50: CONDITIONAL_JUMP
		001e3f7c: FALL_THROUGH
 	001e3f9c sourceline 0x28c4
 	001e3fa4 mov ax,0x1
 	001e3fb0 mov bx,ax
 	001e3fbc mov ax,0x0
 	001e3fc8 farpush bx
 	001e3fd0 setfuncargs 0x1
 	001e3fd8 mov ax,0xf8ef20
 	001e3fe4 farcall ax
 	001e3fec farsubsp 0x1
		001e3ff4: FALL_THROUGH

	[001e3ff4]
		001e3f40: UNCONDITIONAL_JUMP
		001e3f9c: FALL_THROUGH
 	001e3ff4 sourceline 0x28c6
 	001e3ffc mov ax,0x0
 	001e4008 ret

BtnCancel1_OnClick$2:
	[001e400c]
 	001e400c sourceline 0x28ca
 	001e4014 thisaddr
 	001e401c stackptr 0x8
 	001e4024 memread4 ax
 	001e402c meminit ax
 	001e4034 sourceline 0x28cb
 	001e403c mov ax,0x0
 	001e4048 mov bx,ax
*	001e4054 mov mar,0xeaef20
 	001e4060 mov ax,mar
 	001e406c push op
 	001e4074 mov op,ax
 	001e407c farpush bx
 	001e4084 setfuncargs 0x1
 	001e408c mov ax,0x3a6f20
 	001e4098 farcall ax
 	001e40a0 farsubsp 0x1
 	001e40a8 pop op
 	001e40b0 sourceline 0x28cc
 	001e40b8 mov ax,0x690
 	001e40c4 farpush ax
 	001e40cc mov mar,0xe66f20
 	001e40d8 memread4 ax
 	001e40e0 farpush ax
 	001e40e8 mov ax,0x2
 	001e40f4 farpush ax
 	001e40fc setfuncargs 0x3
 	001e4104 mov ax,0xf96f20
 	001e4110 farcall ax
 	001e4118 farsubsp 0x3
 	001e4120 sourceline 0x28cd
 	001e4128 mov ax,0x690
 	001e4134 farpush ax
 	001e413c mov mar,0xe76f20
 	001e4148 memread4 ax
 	001e4150 farpush ax
 	001e4158 mov ax,0x3
 	001e4164 farpush ax
 	001e416c setfuncargs 0x3
 	001e4174 mov ax,0xf96f20
 	001e4180 farcall ax
 	001e4188 farsubsp 0x3
 	001e4190 sourceline 0x28ce
 	001e4198 mov mar,0xe86f20
 	001e41a4 memread4 ax
 	001e41ac farpush ax
 	001e41b4 setfuncargs 0x1
 	001e41bc mov ax,0xf9ef20
 	001e41c8 farcall ax
 	001e41d0 farsubsp 0x1
 	001e41d8 sourceline 0x28cf
 	001e41e0 mov ax,0x0
 	001e41ec stackptr 0x8
 	001e41f4 memzerond
 	001e41f8 ret

SliderMusic_OnChange$1:
	[001e41fc]
 	001e41fc sourceline 0x28d3
 	001e4204 thisaddr
 	001e420c stackptr 0x8
 	001e4214 memread4 ax
 	001e421c meminit ax
 	001e4224 sourceline 0x28d4
 	001e422c mov ax,0x690
 	001e4238 farpush ax
*	001e4240 mov mar,0xe6ef20
 	001e424c mov ax,mar
 	001e4258 push op
 	001e4260 mov op,ax
 	001e4268 setfuncargs 0x0
 	001e4270 mov ax,0xe36f20
 	001e427c farcall ax
 	001e4284 pop op
 	001e428c farpush ax
 	001e4294 mov ax,0x2
 	001e42a0 farpush ax
 	001e42a8 setfuncargs 0x3
 	001e42b0 mov ax,0xf96f20
 	001e42bc farcall ax
 	001e42c4 farsubsp 0x3
 	001e42cc sourceline 0x28d5
 	001e42d4 mov ax,0x0
 	001e42e0 stackptr 0x8
 	001e42e8 memzerond
 	001e42ec ret

SliderSound_OnChange$1:
	[001e42f0]
 	001e42f0 sourceline 0x28d9
 	001e42f8 thisaddr
 	001e4300 stackptr 0x8
 	001e4308 memread4 ax
 	001e4310 meminit ax
 	001e4318 sourceline 0x28da
 	001e4320 mov ax,0x690
 	001e432c farpush ax
*	001e4334 mov mar,0xe7ef20
 	001e4340 mov ax,mar
 	001e434c push op
 	001e4354 mov op,ax
 	001e435c setfuncargs 0x0
 	001e4364 mov ax,0xe36f20
 	001e4370 farcall ax
 	001e4378 pop op
 	001e4380 farpush ax
 	001e4388 mov ax,0x3
 	001e4394 farpush ax
 	001e439c setfuncargs 0x3
 	001e43a4 mov ax,0xf96f20
 	001e43b0 farcall ax
 	001e43b8 farsubsp 0x3
 	001e43c0 sourceline 0x28db
 	001e43c8 mov ax,0x0
 	001e43d4 stackptr 0x8
 	001e43dc memzerond
 	001e43e0 ret

SliderVoice_OnChange$1:
	[001e43e4]
 	001e43e4 sourceline 0x28df
 	001e43ec thisaddr
 	001e43f4 stackptr 0x8
 	001e43fc memread4 ax
 	001e4404 meminit ax
 	001e440c sourceline 0x28e0
*	001e4414 mov mar,0xe8ef20
 	001e4420 mov ax,mar
 	001e442c push op
 	001e4434 mov op,ax
 	001e443c setfuncargs 0x0
 	001e4444 mov ax,0xe36f20
 	001e4450 farcall ax
 	001e4458 pop op
 	001e4460 farpush ax
 	001e4468 setfuncargs 0x1
 	001e4470 mov ax,0xf9ef20
 	001e447c farcall ax
 	001e4484 farsubsp 0x1
 	001e448c sourceline 0x28e1
 	001e4494 mov ax,0x0
 	001e44a0 stackptr 0x8
 	001e44a8 memzerond
 	001e44ac ret

BtnOkay1_OnClick$2:
	[001e44b0]
 	001e44b0 sourceline 0x28e5
 	001e44b8 thisaddr
 	001e44c0 stackptr 0x8
 	001e44c8 memread4 ax
 	001e44d0 meminit ax
 	001e44d8 sourceline 0x28e6
*	001e44e0 mov mar,0xe6ef20
 	001e44ec mov ax,mar
 	001e44f8 push op
 	001e4500 mov op,ax
 	001e4508 setfuncargs 0x0
 	001e4510 mov ax,0xe36f20
 	001e451c farcall ax
 	001e4524 pop op
 	001e452c mov mar,0xe66f20
 	001e4538 memwrite4 ax
 	001e4540 sourceline 0x28e7
 	001e4548 mov mar,0xe7ef20
 	001e4554 mov ax,mar
 	001e4560 push op
 	001e4568 mov op,ax
 	001e4570 setfuncargs 0x0
 	001e4578 mov ax,0xe36f20
 	001e4584 farcall ax
 	001e458c pop op
 	001e4594 mov mar,0xe76f20
 	001e45a0 memwrite4 ax
 	001e45a8 sourceline 0x28e8
 	001e45b0 mov mar,0xe8ef20
 	001e45bc mov ax,mar
 	001e45c8 push op
 	001e45d0 mov op,ax
 	001e45d8 setfuncargs 0x0
 	001e45e0 mov ax,0xe36f20
 	001e45ec farcall ax
 	001e45f4 pop op
 	001e45fc mov mar,0xe86f20
 	001e4608 memwrite4 ax
 	001e4610 sourceline 0x28e9
 	001e4618 mov mar,0xea6f20
 	001e4624 mov ax,mar
 	001e4630 push op
 	001e4638 mov op,ax
 	001e4640 setfuncargs 0x0
 	001e4648 mov ax,0x346f20
 	001e4654 farcall ax
 	001e465c pop op
 	001e4664 push ax
 	001e466c mov ax,0x7ae
 	001e4678 pop bx
 	001e4680 cmpeq bx,ax
 	001e468c mov ax,bx
 	001e4698 jz 0x001e46bc
		001e46bc: CONDITIONAL_JUMP
		001e46a0: FALL_THROUGH

	[001e46a0]
		001e44b0: FALL_THROUGH
 	001e46a0 mov ax,0x1e04fc
 	001e46ac call ax
 	001e46b4 jmp 0x001e46d8
		001e46d8: UNCONDITIONAL_JUMP

	[001e46bc]
		001e44b0: CONDITIONAL_JUMP
 	001e46bc sourceline 0x28ea
 	001e46c4 mov ax,0x1e2154
 	001e46d0 call ax
		001e46d8: FALL_THROUGH

	[001e46d8]
		001e46a0: UNCONDITIONAL_JUMP
		001e46bc: FALL_THROUGH
 	001e46d8 sourceline 0x28eb
 	001e46e0 mov ax,0x1e3dac
 	001e46ec call ax
 	001e46f4 sourceline 0x28ec
 	001e46fc mov ax,0x0
 	001e4708 mov bx,ax
 	001e4714 mov mar,0xeaef20
 	001e4720 mov ax,mar
 	001e472c push op
 	001e4734 mov op,ax
 	001e473c farpush bx
 	001e4744 setfuncargs 0x1
 	001e474c mov ax,0x3a6f20
 	001e4758 farcall ax
 	001e4760 farsubsp 0x1
 	001e4768 pop op
 	001e4770 sourceline 0x28ee
 	001e4778 mov mar,0xe86f20
 	001e4784 memread4 ax
 	001e478c push ax
 	001e4794 mov ax,0x0
 	001e47a0 pop bx
 	001e47a8 cmple bx,ax
 	001e47b4 mov ax,bx
 	001e47c0 jz 0x001e4830
		001e4830: CONDITIONAL_JUMP
		001e47c8: FALL_THROUGH

	[001e47c8]
		001e46d8: FALL_THROUGH
 	001e47c8 sourceline 0x28f0
 	001e47d0 mov ax,0x0
 	001e47dc mov bx,ax
 	001e47e8 mov ax,0x0
 	001e47f4 farpush bx
 	001e47fc setfuncargs 0x1
 	001e4804 mov ax,0xf8ef20
 	001e4810 farcall ax
 	001e4818 farsubsp 0x1
 	001e4820 sourceline 0x28f1
 	001e4828 jmp 0x001e495c
		001e495c: UNCONDITIONAL_JUMP

	[001e4830]
		001e46d8: CONDITIONAL_JUMP
 	001e4830 sourceline 0x28f4
 	001e4838 mov mar,0xe96f20
 	001e4844 memread4 ax
 	001e484c jz 0x001e48ac
		001e48ac: CONDITIONAL_JUMP
		001e4854: FALL_THROUGH

	[001e4854]
		001e4830: FALL_THROUGH
 	001e4854 mov ax,0x1
 	001e4860 mov bx,ax
 	001e486c mov ax,0x0
 	001e4878 farpush bx
 	001e4880 setfuncargs 0x1
 	001e4888 mov ax,0xf8ef20
 	001e4894 farcall ax
 	001e489c farsubsp 0x1
 	001e48a4 jmp 0x001e495c
		001e495c: UNCONDITIONAL_JUMP

	[001e48ac]
		001e4830: CONDITIONAL_JUMP
 	001e48ac sourceline 0x28f7
 	001e48b4 setfuncargs 0x0
 	001e48bc mov ax,0xf86f20
 	001e48c8 farcall ax
 	001e48d0 push ax
 	001e48d8 mov ax,0x1
 	001e48e4 pop bx
 	001e48ec cmpeq bx,ax
 	001e48f8 mov ax,bx
 	001e4904 jz 0x001e495c
		001e495c: CONDITIONAL_JUMP
		001e490c: FALL_THROUGH

	[001e490c]
		001e48ac: FALL_THROUGH
 	001e490c mov ax,0x2
 	001e4918 mov bx,ax
 	001e4924 mov ax,0x0
 	001e4930 farpush bx
 	001e4938 setfuncargs 0x1
 	001e4940 mov ax,0xf8ef20
 	001e494c farcall ax
 	001e4954 farsubsp 0x1
		001e495c: FALL_THROUGH

	[001e495c]
		001e47c8: UNCONDITIONAL_JUMP
		001e4854: UNCONDITIONAL_JUMP
		001e48ac: CONDITIONAL_JUMP
		001e490c: FALL_THROUGH
 	001e495c sourceline 0x28fa
 	001e4964 mov ax,0x0
 	001e4970 stackptr 0x8
 	001e4978 memzerond
 	001e497c ret

BtnCancel2_OnClick$2:
	[001e4a18]
 	001e4a18 sourceline 0x2921
 	001e4a20 thisaddr
 	001e4a28 stackptr 0x8
 	001e4a30 memread4 ax
 	001e4a38 meminit ax
 	001e4a40 sourceline 0x2922
 	001e4a48 mov ax,0x0
 	001e4a54 mov bx,ax
*	001e4a60 mov mar,0x546f20
 	001e4a6c mov ax,mar
 	001e4a78 push op
 	001e4a80 mov op,ax
 	001e4a88 farpush bx
 	001e4a90 setfuncargs 0x1
 	001e4a98 mov ax,0x3a6f20
 	001e4aa4 farcall ax
 	001e4aac farsubsp 0x1
 	001e4ab4 pop op
 	001e4abc sourceline 0x2923
 	001e4ac4 mov ax,0x0
 	001e4ad0 stackptr 0x8
 	001e4ad8 memzerond
 	001e4adc ret

BtnSave_OnClick$2:
	[001e4ae0]
 	001e4ae0 sourceline 0x2928
 	001e4ae8 thisaddr
 	001e4af0 stackptr 0x8
 	001e4af8 memread4 ax
 	001e4b00 meminit ax
 	001e4b08 sourceline 0x2929
*	001e4b10 mov mar,0xecef20
 	001e4b1c mov ax,mar
 	001e4b28 push op
 	001e4b30 mov op,ax
 	001e4b38 setfuncargs 0x0
 	001e4b40 mov ax,0xfa6f20
 	001e4b4c farcall ax
 	001e4b54 pop op
 	001e4b5c push ax
 	001e4b64 mov ax,0x2c787b
 	001e4b70 pop bx
 	001e4b78 streq bx,ax
 	001e4b84 mov ax,bx
 	001e4b90 jz 0x001e4bb4
		001e4bb4: CONDITIONAL_JUMP
		001e4b98: FALL_THROUGH

	[001e4b98]
		001e4ae0: FALL_THROUGH
 	001e4b98 mov ax,0x0
 	001e4ba4 stackptr 0x8
 	001e4bac memzerond
 	001e4bb0 ret

	[001e4bb4]
		001e4ae0: CONDITIONAL_JUMP
 	001e4bb4 sourceline 0x292a
 	001e4bbc mov mar,0x5def20
 	001e4bc8 mov ax,mar
 	001e4bd4 push op
 	001e4bdc mov op,ax
 	001e4be4 setfuncargs 0x0
 	001e4bec mov ax,0x656f20
 	001e4bf8 farcall ax
 	001e4c00 pop op
 	001e4c08 push ax
 	001e4c10 mov ax,0x1
 	001e4c1c pop bx
 	001e4c24 add bx,ax
 	001e4c30 mov ax,bx
 	001e4c3c mov mar,0xfaef20
 	001e4c48 memwrite4 ax
 	001e4c50 sourceline 0x292b
 	001e4c58 mov ax,0x0
 	001e4c64 mov mar,sp
 	001e4c70 memwrite4 ax
 	001e4c78 add sp,0x4
		001e4c84: FALL_THROUGH

	[001e4c84]
		001e5798: UNCONDITIONAL_JUMP
		001e4bb4: FALL_THROUGH
 	001e4c84 sourceline 0x292c
 	001e4c8c stackptr 0x4
 	001e4c94 memread4 ax
 	001e4c9c push ax
 	001e4ca4 mov mar,0x5def20
 	001e4cb0 mov ax,mar
 	001e4cbc push op
 	001e4cc4 mov op,ax
 	001e4ccc setfuncargs 0x0
 	001e4cd4 mov ax,0x656f20
 	001e4ce0 farcall ax
 	001e4ce8 pop op
 	001e4cf0 pop bx
 	001e4cf8 cmplt bx,ax
 	001e4d04 mov ax,bx
 	001e4d10 jz 0x001e57d4
		001e57d4: CONDITIONAL_JUMP
		001e4d18: FALL_THROUGH

	[001e4d18]
		001e4c84: FALL_THROUGH
 	001e4d18 sourceline 0x292e
 	001e4d20 stackptr 0x4
 	001e4d28 memread4 ax
 	001e4d30 mov dx,ax
 	001e4d3c mov mar,0x5def20
 	001e4d48 mov ax,mar
 	001e4d54 push op
 	001e4d5c mov op,ax
 	001e4d64 farpush dx
 	001e4d6c setfuncargs 0x1
 	001e4d74 mov ax,0xfb6f20
 	001e4d80 farcall ax
 	001e4d88 farsubsp 0x1
 	001e4d90 pop op
 	001e4d98 push ax
 	001e4da0 mov mar,0xecef20
 	001e4dac mov ax,mar
 	001e4db8 push op
 	001e4dc0 mov op,ax
 	001e4dc8 setfuncargs 0x0
 	001e4dd0 mov ax,0xfa6f20
 	001e4ddc farcall ax
 	001e4de4 pop op
 	001e4dec pop bx
 	001e4df4 streq bx,ax
 	001e4e00 mov ax,bx
 	001e4e0c jz 0x001e5798
		001e5798: CONDITIONAL_JUMP
		001e4e14: FALL_THROUGH

	[001e4e14]
		001e4d18: FALL_THROUGH
 	001e4e14 sourceline 0x2930
 	001e4e1c stackptr 0x4
 	001e4e24 memread4 ax
 	001e4e2c mov dx,ax
 	001e4e38 mov mar,0x5def20
 	001e4e44 mov ax,mar
 	001e4e50 push op
 	001e4e58 mov op,ax
 	001e4e60 farpush dx
 	001e4e68 setfuncargs 0x1
 	001e4e70 mov ax,0xeeef20
 	001e4e7c farcall ax
 	001e4e84 farsubsp 0x1
 	001e4e8c pop op
 	001e4e94 mov mar,0xfaef20
 	001e4ea0 memwrite4 ax
 	001e4ea8 sourceline 0x2931
 	001e4eb0 mov ax,0x0
 	001e4ebc mov bx,ax
 	001e4ec8 mov mar,0x546f20
 	001e4ed4 mov ax,mar
 	001e4ee0 push op
 	001e4ee8 mov op,ax
 	001e4ef0 farpush bx
 	001e4ef8 setfuncargs 0x1
 	001e4f00 mov ax,0xe3ef20
 	001e4f0c farcall ax
 	001e4f14 farsubsp 0x1
 	001e4f1c pop op
 	001e4f24 sourceline 0x2932
 	001e4f2c mov ax,0x0
 	001e4f38 setfuncargs 0x0
 	001e4f40 mov ax,0x3e6f20
 	001e4f4c farcall ax
 	001e4f54 push ax
 	001e4f5c mov ax,0x2c787b
 	001e4f68 pop bx
 	001e4f70 streq bx,ax
 	001e4f7c mov ax,bx
 	001e4f88 jz 0x001e5304
		001e5304: CONDITIONAL_JUMP
		001e4f90: FALL_THROUGH

	[001e4f90]
		001e4e14: FALL_THROUGH
 	001e4f90 sourceline 0x2934
 	001e4f98 mov ax,0xe23
 	001e4fa4 mov bx,ax
 	001e4fb0 mov mar,0xe46f20
 	001e4fbc mov ax,mar
 	001e4fc8 push op
 	001e4fd0 mov op,ax
 	001e4fd8 farpush bx
 	001e4fe0 setfuncargs 0x1
 	001e4fe8 mov ax,0x356f20
 	001e4ff4 farcall ax
 	001e4ffc farsubsp 0x1
 	001e5004 pop op
 	001e500c sourceline 0x2935
 	001e5014 mov ax,0xe22
 	001e5020 mov bx,ax
 	001e502c mov mar,0xe46f20
 	001e5038 mov ax,mar
 	001e5044 push op
 	001e504c mov op,ax
 	001e5054 farpush bx
 	001e505c setfuncargs 0x1
 	001e5064 mov ax,0x3f6f20
 	001e5070 farcall ax
 	001e5078 farsubsp 0x1
 	001e5080 pop op
 	001e5088 sourceline 0x2936
 	001e5090 mov ax,0xe22
 	001e509c mov bx,ax
 	001e50a8 mov mar,0xe46f20
 	001e50b4 mov ax,mar
 	001e50c0 push op
 	001e50c8 mov op,ax
 	001e50d0 farpush bx
 	001e50d8 setfuncargs 0x1
 	001e50e0 mov ax,0x3fef20
 	001e50ec farcall ax
 	001e50f4 farsubsp 0x1
 	001e50fc pop op
 	001e5104 sourceline 0x2937
 	001e510c mov ax,0xe21
 	001e5118 mov bx,ax
 	001e5124 mov mar,0xe4ef20
 	001e5130 mov ax,mar
 	001e513c push op
 	001e5144 mov op,ax
 	001e514c farpush bx
 	001e5154 setfuncargs 0x1
 	001e515c mov ax,0x356f20
 	001e5168 farcall ax
 	001e5170 farsubsp 0x1
 	001e5178 pop op
 	001e5180 sourceline 0x2938
 	001e5188 mov ax,0xe20
 	001e5194 mov bx,ax
 	001e51a0 mov mar,0xe4ef20
 	001e51ac mov ax,mar
 	001e51b8 push op
 	001e51c0 mov op,ax
 	001e51c8 farpush bx
 	001e51d0 setfuncargs 0x1
 	001e51d8 mov ax,0x3f6f20
 	001e51e4 farcall ax
 	001e51ec farsubsp 0x1
 	001e51f4 pop op
 	001e51fc sourceline 0x2939
 	001e5204 mov ax,0xe20
 	001e5210 mov bx,ax
 	001e521c mov mar,0xe4ef20
 	001e5228 mov ax,mar
 	001e5234 push op
 	001e523c mov op,ax
 	001e5244 farpush bx
 	001e524c setfuncargs 0x1
 	001e5254 mov ax,0x3fef20
 	001e5260 farcall ax
 	001e5268 farsubsp 0x1
 	001e5270 pop op
 	001e5278 sourceline 0x293a
 	001e5280 mov ax,0xe24
 	001e528c mov bx,ax
 	001e5298 mov mar,0xe56f20
 	001e52a4 mov ax,mar
 	001e52b0 push op
 	001e52b8 mov op,ax
 	001e52c0 farpush bx
 	001e52c8 setfuncargs 0x1
 	001e52d0 mov ax,0x356f20
 	001e52dc farcall ax
 	001e52e4 farsubsp 0x1
 	001e52ec pop op
 	001e52f4 sourceline 0x293b
 	001e52fc jmp 0x001e5668
		001e5668: UNCONDITIONAL_JUMP

	[001e5304]
		001e4e14: CONDITIONAL_JUMP
 	001e5304 sourceline 0x293e
 	001e530c mov ax,0xe1d
 	001e5318 mov bx,ax
 	001e5324 mov mar,0xe46f20
 	001e5330 mov ax,mar
 	001e533c push op
 	001e5344 mov op,ax
 	001e534c farpush bx
 	001e5354 setfuncargs 0x1
 	001e535c mov ax,0x356f20
 	001e5368 farcall ax
 	001e5370 farsubsp 0x1
 	001e5378 pop op
 	001e5380 sourceline 0x293f
 	001e5388 mov ax,0xe1c
 	001e5394 mov bx,ax
 	001e53a0 mov mar,0xe46f20
 	001e53ac mov ax,mar
 	001e53b8 push op
 	001e53c0 mov op,ax
 	001e53c8 farpush bx
 	001e53d0 setfuncargs 0x1
 	001e53d8 mov ax,0x3f6f20
 	001e53e4 farcall ax
 	001e53ec farsubsp 0x1
 	001e53f4 pop op
 	001e53fc sourceline 0x2940
 	001e5404 mov ax,0xe1c
 	001e5410 mov bx,ax
 	001e541c mov mar,0xe46f20
 	001e5428 mov ax,mar
 	001e5434 push op
 	001e543c mov op,ax
 	001e5444 farpush bx
 	001e544c setfuncargs 0x1
 	001e5454 mov ax,0x3fef20
 	001e5460 farcall ax
 	001e5468 farsubsp 0x1
 	001e5470 pop op
 	001e5478 sourceline 0x2941
 	001e5480 mov ax,0xe1f
 	001e548c mov bx,ax
 	001e5498 mov mar,0xe4ef20
 	001e54a4 mov ax,mar
 	001e54b0 push op
 	001e54b8 mov op,ax
 	001e54c0 farpush bx
 	001e54c8 setfuncargs 0x1
 	001e54d0 mov ax,0x356f20
 	001e54dc farcall ax
 	001e54e4 farsubsp 0x1
 	001e54ec pop op
 	001e54f4 sourceline 0x2942
 	001e54fc mov ax,0xe1e
 	001e5508 mov bx,ax
 	001e5514 mov mar,0xe4ef20
 	001e5520 mov ax,mar
 	001e552c push op
 	001e5534 mov op,ax
 	001e553c farpush bx
 	001e5544 setfuncargs 0x1
 	001e554c mov ax,0x3f6f20
 	001e5558 farcall ax
 	001e5560 farsubsp 0x1
 	001e5568 pop op
 	001e5570 sourceline 0x2943
 	001e5578 mov ax,0xe1e
 	001e5584 mov bx,ax
 	001e5590 mov mar,0xe4ef20
 	001e559c mov ax,mar
 	001e55a8 push op
 	001e55b0 mov op,ax
 	001e55b8 farpush bx
 	001e55c0 setfuncargs 0x1
 	001e55c8 mov ax,0x3fef20
 	001e55d4 farcall ax
 	001e55dc farsubsp 0x1
 	001e55e4 pop op
 	001e55ec sourceline 0x2944
 	001e55f4 mov ax,0xe25
 	001e5600 mov bx,ax
 	001e560c mov mar,0xe56f20
 	001e5618 mov ax,mar
 	001e5624 push op
 	001e562c mov op,ax
 	001e5634 farpush bx
 	001e563c setfuncargs 0x1
 	001e5644 mov ax,0x356f20
 	001e5650 farcall ax
 	001e5658 farsubsp 0x1
 	001e5660 pop op
		001e5668: FALL_THROUGH

	[001e5668]
		001e4f90: UNCONDITIONAL_JUMP
		001e5304: FALL_THROUGH
 	001e5668 sourceline 0x2946
 	001e5670 push op
 	001e5678 mov ax,0x0
 	001e5684 farpush ax
 	001e568c mov ax,0x0
 	001e5698 farpush ax
 	001e56a0 mov mar,0x54ef20
 	001e56ac mov ax,mar
 	001e56b8 mov op,ax
 	001e56c0 setfuncargs 0x2
 	001e56c8 mov ax,0xe5ef20
 	001e56d4 farcall ax
 	001e56dc farsubsp 0x2
 	001e56e4 pop op
 	001e56ec sourceline 0x2947
 	001e56f4 mov ax,0x1
 	001e5700 mov bx,ax
 	001e570c mov mar,0x54ef20
 	001e5718 mov ax,mar
 	001e5724 push op
 	001e572c mov op,ax
 	001e5734 farpush bx
 	001e573c setfuncargs 0x1
 	001e5744 mov ax,0x3a6f20
 	001e5750 farcall ax
 	001e5758 farsubsp 0x1
 	001e5760 pop op
 	001e5768 sourceline 0x2948
 	001e5770 mov ax,0x0
 	001e577c stackptr 0xc
 	001e5784 memzerond
 	001e5788 sub sp,0x4
 	001e5794 ret

	[001e5798]
		001e4d18: CONDITIONAL_JUMP
 	001e5798 sourceline 0x294a
 	001e57a0 stackptr 0x4
 	001e57a8 memread4 ax
 	001e57b0 add ax,0x1
 	001e57bc memwrite4 ax
 	001e57c4 sourceline 0x294b
 	001e57cc jmp 0x001e4c84
		001e4c84: UNCONDITIONAL_JUMP

	[001e57d4]
		001e4c84: CONDITIONAL_JUMP
 	001e57d4 sourceline 0x294d
 	001e57dc mov ax,0x0
 	001e57e8 mov bx,ax
 	001e57f4 mov mar,0x546f20
 	001e5800 mov ax,mar
 	001e580c push op
 	001e5814 mov op,ax
 	001e581c farpush bx
 	001e5824 setfuncargs 0x1
 	001e582c mov ax,0x3a6f20
 	001e5838 farcall ax
 	001e5840 farsubsp 0x1
 	001e5848 pop op
 	001e5850 sourceline 0x294e
 	001e5858 mov mar,0x47ef20
 	001e5864 memread4 ax
 	001e586c jz 0x001e597c
		001e597c: CONDITIONAL_JUMP
		001e5874: FALL_THROUGH

	[001e5874]
		001e57d4: FALL_THROUGH
 	001e5874 mov ax,0x1
 	001e5880 mov bx,ax
 	001e588c mov mar,0x36ef20
 	001e5898 mov ax,mar
 	001e58a4 push op
 	001e58ac mov op,ax
 	001e58b4 farpush bx
 	001e58bc setfuncargs 0x1
 	001e58c4 mov ax,0x3a6f20
 	001e58d0 farcall ax
 	001e58d8 farsubsp 0x1
 	001e58e0 pop op
 	001e58e8 mov ax,0x1
 	001e58f4 mov bx,ax
 	001e5900 mov mar,0x486f20
 	001e590c mov ax,mar
 	001e5918 push op
 	001e5920 mov op,ax
 	001e5928 farpush bx
 	001e5930 setfuncargs 0x1
 	001e5938 mov ax,0x3a6f20
 	001e5944 farcall ax
 	001e594c farsubsp 0x1
 	001e5954 pop op
 	001e595c mov ax,0x1
 	001e5968 mov mar,0x48ef20
 	001e5974 memwrite4 ax
		001e597c: FALL_THROUGH

	[001e597c]
		001e57d4: CONDITIONAL_JUMP
		001e5874: FALL_THROUGH
 	001e597c sourceline 0x294f
 	001e5984 mov ax,0x0
 	001e5990 mov bx,ax
 	001e599c mov mar,0x326f20
 	001e59a8 mov ax,mar
 	001e59b4 push op
 	001e59bc mov op,ax
 	001e59c4 farpush bx
 	001e59cc setfuncargs 0x1
 	001e59d4 mov ax,0x3a6f20
 	001e59e0 farcall ax
 	001e59e8 farsubsp 0x1
 	001e59f0 pop op
 	001e59f8 sourceline 0x2950
 	001e5a00 mov ax,0x1
 	001e5a0c farpush ax
 	001e5a14 setfuncargs 0x1
 	001e5a1c mov ax,0x426f20
 	001e5a28 farcall ax
 	001e5a30 farsubsp 0x1
 	001e5a38 sourceline 0x2951
 	001e5a40 mov mar,0xecef20
 	001e5a4c mov ax,mar
 	001e5a58 push op
 	001e5a60 mov op,ax
 	001e5a68 setfuncargs 0x0
 	001e5a70 mov ax,0xfa6f20
 	001e5a7c farcall ax
 	001e5a84 pop op
 	001e5a8c assert ax
 	001e5a94 farpush ax
 	001e5a9c mov mar,0xfaef20
 	001e5aa8 memread4 ax
 	001e5ab0 farpush ax
 	001e5ab8 setfuncargs 0x2
 	001e5ac0 mov ax,0x45ef20
 	001e5acc farcall ax
 	001e5ad4 farsubsp 0x2
 	001e5adc sourceline 0x2952
 	001e5ae4 setfuncargs 0x0
 	001e5aec mov ax,0x476f20
 	001e5af8 farcall ax
 	001e5b00 sourceline 0x2953
 	001e5b08 setfuncargs 0x0
 	001e5b10 mov ax,0x75ef20
 	001e5b1c farcall ax
 	001e5b24 sourceline 0x2954
 	001e5b2c mov ax,0x11
 	001e5b38 mov mar,0x3c6f20
 	001e5b44 memwrite4 ax
 	001e5b4c sourceline 0x2956
 	001e5b54 mov ax,0x0
 	001e5b60 stackptr 0xc
 	001e5b68 memzerond
 	001e5b6c sub sp,0x4
 	001e5b78 ret

BtnDelete_OnClick$2:
	[001e5b7c]
 	001e5b7c sourceline 0x295b
 	001e5b84 thisaddr
 	001e5b8c stackptr 0x8
 	001e5b94 memread4 ax
 	001e5b9c meminit ax
 	001e5ba4 sourceline 0x295c
*	001e5bac mov mar,0x5def20
 	001e5bb8 mov ax,mar
 	001e5bc4 push op
 	001e5bcc mov op,ax
 	001e5bd4 setfuncargs 0x0
 	001e5bdc mov ax,0x5aef20
 	001e5be8 farcall ax
 	001e5bf0 pop op
 	001e5bf8 push ax
 	001e5c00 mov ax,0x0
 	001e5c0c pop bx
 	001e5c14 cmpge bx,ax
 	001e5c20 mov ax,bx
 	001e5c2c jz 0x001e64f4
		001e64f4: CONDITIONAL_JUMP
		001e5c34: FALL_THROUGH

	[001e5c34]
		001e5b7c: FALL_THROUGH
 	001e5c34 sourceline 0x295e
 	001e5c3c mov ax,0x0
 	001e5c48 mov bx,ax
 	001e5c54 mov mar,0x546f20
 	001e5c60 mov ax,mar
 	001e5c6c push op
 	001e5c74 mov op,ax
 	001e5c7c farpush bx
 	001e5c84 setfuncargs 0x1
 	001e5c8c mov ax,0xe3ef20
 	001e5c98 farcall ax
 	001e5ca0 farsubsp 0x1
 	001e5ca8 pop op
 	001e5cb0 sourceline 0x295f
 	001e5cb8 mov ax,0x0
 	001e5cc4 setfuncargs 0x0
 	001e5ccc mov ax,0x3e6f20
 	001e5cd8 farcall ax
 	001e5ce0 push ax
 	001e5ce8 mov ax,0x2c787b
 	001e5cf4 pop bx
 	001e5cfc streq bx,ax
 	001e5d08 mov ax,bx
 	001e5d14 jz 0x001e6090
		001e6090: CONDITIONAL_JUMP
		001e5d1c: FALL_THROUGH

	[001e5d1c]
		001e5c34: FALL_THROUGH
 	001e5d1c sourceline 0x2961
 	001e5d24 mov ax,0xe23
 	001e5d30 mov bx,ax
 	001e5d3c mov mar,0xe46f20
 	001e5d48 mov ax,mar
 	001e5d54 push op
 	001e5d5c mov op,ax
 	001e5d64 farpush bx
 	001e5d6c setfuncargs 0x1
 	001e5d74 mov ax,0x356f20
 	001e5d80 farcall ax
 	001e5d88 farsubsp 0x1
 	001e5d90 pop op
 	001e5d98 sourceline 0x2962
 	001e5da0 mov ax,0xe22
 	001e5dac mov bx,ax
 	001e5db8 mov mar,0xe46f20
 	001e5dc4 mov ax,mar
 	001e5dd0 push op
 	001e5dd8 mov op,ax
 	001e5de0 farpush bx
 	001e5de8 setfuncargs 0x1
 	001e5df0 mov ax,0x3f6f20
 	001e5dfc farcall ax
 	001e5e04 farsubsp 0x1
 	001e5e0c pop op
 	001e5e14 sourceline 0x2963
 	001e5e1c mov ax,0xe22
 	001e5e28 mov bx,ax
 	001e5e34 mov mar,0xe46f20
 	001e5e40 mov ax,mar
 	001e5e4c push op
 	001e5e54 mov op,ax
 	001e5e5c farpush bx
 	001e5e64 setfuncargs 0x1
 	001e5e6c mov ax,0x3fef20
 	001e5e78 farcall ax
 	001e5e80 farsubsp 0x1
 	001e5e88 pop op
 	001e5e90 sourceline 0x2964
 	001e5e98 mov ax,0xe21
 	001e5ea4 mov bx,ax
 	001e5eb0 mov mar,0xe4ef20
 	001e5ebc mov ax,mar
 	001e5ec8 push op
 	001e5ed0 mov op,ax
 	001e5ed8 farpush bx
 	001e5ee0 setfuncargs 0x1
 	001e5ee8 mov ax,0x356f20
 	001e5ef4 farcall ax
 	001e5efc farsubsp 0x1
 	001e5f04 pop op
 	001e5f0c sourceline 0x2965
 	001e5f14 mov ax,0xe20
 	001e5f20 mov bx,ax
 	001e5f2c mov mar,0xe4ef20
 	001e5f38 mov ax,mar
 	001e5f44 push op
 	001e5f4c mov op,ax
 	001e5f54 farpush bx
 	001e5f5c setfuncargs 0x1
 	001e5f64 mov ax,0x3f6f20
 	001e5f70 farcall ax
 	001e5f78 farsubsp 0x1
 	001e5f80 pop op
 	001e5f88 sourceline 0x2966
 	001e5f90 mov ax,0xe20
 	001e5f9c mov bx,ax
 	001e5fa8 mov mar,0xe4ef20
 	001e5fb4 mov ax,mar
 	001e5fc0 push op
 	001e5fc8 mov op,ax
 	001e5fd0 farpush bx
 	001e5fd8 setfuncargs 0x1
 	001e5fe0 mov ax,0x3fef20
 	001e5fec farcall ax
 	001e5ff4 farsubsp 0x1
 	001e5ffc pop op
 	001e6004 sourceline 0x2967
 	001e600c mov ax,0xe18
 	001e6018 mov bx,ax
 	001e6024 mov mar,0xe56f20
 	001e6030 mov ax,mar
 	001e603c push op
 	001e6044 mov op,ax
 	001e604c farpush bx
 	001e6054 setfuncargs 0x1
 	001e605c mov ax,0x356f20
 	001e6068 farcall ax
 	001e6070 farsubsp 0x1
 	001e6078 pop op
 	001e6080 sourceline 0x2968
 	001e6088 jmp 0x001e63f4
		001e63f4: UNCONDITIONAL_JUMP

	[001e6090]
		001e5c34: CONDITIONAL_JUMP
 	001e6090 sourceline 0x296b
 	001e6098 mov ax,0xe1d
 	001e60a4 mov bx,ax
 	001e60b0 mov mar,0xe46f20
 	001e60bc mov ax,mar
 	001e60c8 push op
 	001e60d0 mov op,ax
 	001e60d8 farpush bx
 	001e60e0 setfuncargs 0x1
 	001e60e8 mov ax,0x356f20
 	001e60f4 farcall ax
 	001e60fc farsubsp 0x1
 	001e6104 pop op
 	001e610c sourceline 0x296c
 	001e6114 mov ax,0xe1c
 	001e6120 mov bx,ax
 	001e612c mov mar,0xe46f20
 	001e6138 mov ax,mar
 	001e6144 push op
 	001e614c mov op,ax
 	001e6154 farpush bx
 	001e615c setfuncargs 0x1
 	001e6164 mov ax,0x3f6f20
 	001e6170 farcall ax
 	001e6178 farsubsp 0x1
 	001e6180 pop op
 	001e6188 sourceline 0x296d
 	001e6190 mov ax,0xe1c
 	001e619c mov bx,ax
 	001e61a8 mov mar,0xe46f20
 	001e61b4 mov ax,mar
 	001e61c0 push op
 	001e61c8 mov op,ax
 	001e61d0 farpush bx
 	001e61d8 setfuncargs 0x1
 	001e61e0 mov ax,0x3fef20
 	001e61ec farcall ax
 	001e61f4 farsubsp 0x1
 	001e61fc pop op
 	001e6204 sourceline 0x296e
 	001e620c mov ax,0xe1f
 	001e6218 mov bx,ax
 	001e6224 mov mar,0xe4ef20
 	001e6230 mov ax,mar
 	001e623c push op
 	001e6244 mov op,ax
 	001e624c farpush bx
 	001e6254 setfuncargs 0x1
 	001e625c mov ax,0x356f20
 	001e6268 farcall ax
 	001e6270 farsubsp 0x1
 	001e6278 pop op
 	001e6280 sourceline 0x296f
 	001e6288 mov ax,0xe1e
 	001e6294 mov bx,ax
 	001e62a0 mov mar,0xe4ef20
 	001e62ac mov ax,mar
 	001e62b8 push op
 	001e62c0 mov op,ax
 	001e62c8 farpush bx
 	001e62d0 setfuncargs 0x1
 	001e62d8 mov ax,0x3f6f20
 	001e62e4 farcall ax
 	001e62ec farsubsp 0x1
 	001e62f4 pop op
 	001e62fc sourceline 0x2970
 	001e6304 mov ax,0xe1e
 	001e6310 mov bx,ax
 	001e631c mov mar,0xe4ef20
 	001e6328 mov ax,mar
 	001e6334 push op
 	001e633c mov op,ax
 	001e6344 farpush bx
 	001e634c setfuncargs 0x1
 	001e6354 mov ax,0x3fef20
 	001e6360 farcall ax
 	001e6368 farsubsp 0x1
 	001e6370 pop op
 	001e6378 sourceline 0x2971
 	001e6380 mov ax,0xe19
 	001e638c mov bx,ax
 	001e6398 mov mar,0xe56f20
 	001e63a4 mov ax,mar
 	001e63b0 push op
 	001e63b8 mov op,ax
 	001e63c0 farpush bx
 	001e63c8 setfuncargs 0x1
 	001e63d0 mov ax,0x356f20
 	001e63dc farcall ax
 	001e63e4 farsubsp 0x1
 	001e63ec pop op
		001e63f4: FALL_THROUGH

	[001e63f4]
		001e5d1c: UNCONDITIONAL_JUMP
		001e6090: FALL_THROUGH
 	001e63f4 sourceline 0x2973
 	001e63fc push op
 	001e6404 mov ax,0x0
 	001e6410 farpush ax
 	001e6418 mov ax,0x0
 	001e6424 farpush ax
 	001e642c mov mar,0x54ef20
 	001e6438 mov ax,mar
 	001e6444 mov op,ax
 	001e644c setfuncargs 0x2
 	001e6454 mov ax,0xe5ef20
 	001e6460 farcall ax
 	001e6468 farsubsp 0x2
 	001e6470 pop op
 	001e6478 sourceline 0x2974
 	001e6480 mov ax,0x1
 	001e648c mov bx,ax
 	001e6498 mov mar,0x54ef20
 	001e64a4 mov ax,mar
 	001e64b0 push op
 	001e64b8 mov op,ax
 	001e64c0 farpush bx
 	001e64c8 setfuncargs 0x1
 	001e64d0 mov ax,0x3a6f20
 	001e64dc farcall ax
 	001e64e4 farsubsp 0x1
 	001e64ec pop op
		001e64f4: FALL_THROUGH

	[001e64f4]
		001e5b7c: CONDITIONAL_JUMP
		001e63f4: FALL_THROUGH
 	001e64f4 sourceline 0x2976
 	001e64fc mov ax,0x0
 	001e6508 stackptr 0x8
 	001e6510 memzerond
 	001e6514 ret

BtnDown1_OnClick$2:
	[001e6518]
 	001e6518 sourceline 0x297b
 	001e6520 thisaddr
 	001e6528 stackptr 0x8
 	001e6530 memread4 ax
 	001e6538 meminit ax
 	001e6540 sourceline 0x297c
 	001e6548 push op
*	001e6550 mov mar,0x5def20
 	001e655c mov ax,mar
 	001e6568 mov op,ax
 	001e6570 setfuncargs 0x0
 	001e6578 mov ax,0xfbef20
 	001e6584 farcall ax
 	001e658c pop op
 	001e6594 sourceline 0x297d
 	001e659c mov mar,0x666f20
 	001e65a8 mov ax,mar
 	001e65b4 push op
 	001e65bc mov op,ax
 	001e65c4 setfuncargs 0x0
 	001e65cc mov ax,0xd86f20
 	001e65d8 farcall ax
 	001e65e0 pop op
 	001e65e8 push ax
 	001e65f0 mov mar,0x5def20
 	001e65fc mov ax,mar
 	001e6608 push op
 	001e6610 mov op,ax
 	001e6618 setfuncargs 0x0
 	001e6620 mov ax,0x5b6f20
 	001e662c farcall ax
 	001e6634 pop op
 	001e663c pop bx
 	001e6644 sub bx,ax
 	001e6650 mov ax,bx
 	001e665c mov bx,ax
 	001e6668 mov mar,0x666f20
 	001e6674 mov ax,mar
 	001e6680 push op
 	001e6688 mov op,ax
 	001e6690 farpush bx
 	001e6698 setfuncargs 0x1
 	001e66a0 mov ax,0xd9ef20
 	001e66ac farcall ax
 	001e66b4 farsubsp 0x1
 	001e66bc pop op
 	001e66c4 sourceline 0x297e
 	001e66cc mov ax,0x1081f8
 	001e66d8 call ax
 	001e66e0 sourceline 0x297f
 	001e66e8 mov ax,0x0
 	001e66f4 stackptr 0x8
 	001e66fc memzerond
 	001e6700 ret

BtnUp1_OnClick$2:
	[001e6704]
 	001e6704 sourceline 0x2984
 	001e670c thisaddr
 	001e6714 stackptr 0x8
 	001e671c memread4 ax
 	001e6724 meminit ax
 	001e672c sourceline 0x2985
 	001e6734 push op
*	001e673c mov mar,0x5def20
 	001e6748 mov ax,mar
 	001e6754 mov op,ax
 	001e675c setfuncargs 0x0
 	001e6764 mov ax,0xfc6f20
 	001e6770 farcall ax
 	001e6778 pop op
 	001e6780 sourceline 0x2986
 	001e6788 mov mar,0x666f20
 	001e6794 mov ax,mar
 	001e67a0 push op
 	001e67a8 mov op,ax
 	001e67b0 setfuncargs 0x0
 	001e67b8 mov ax,0xd86f20
 	001e67c4 farcall ax
 	001e67cc pop op
 	001e67d4 push ax
 	001e67dc mov mar,0x5def20
 	001e67e8 mov ax,mar
 	001e67f4 push op
 	001e67fc mov op,ax
 	001e6804 setfuncargs 0x0
 	001e680c mov ax,0x5b6f20
 	001e6818 farcall ax
 	001e6820 pop op
 	001e6828 pop bx
 	001e6830 sub bx,ax
 	001e683c mov ax,bx
 	001e6848 mov bx,ax
 	001e6854 mov mar,0x666f20
 	001e6860 mov ax,mar
 	001e686c push op
 	001e6874 mov op,ax
 	001e687c farpush bx
 	001e6884 setfuncargs 0x1
 	001e688c mov ax,0xd9ef20
 	001e6898 farcall ax
 	001e68a0 farsubsp 0x1
 	001e68a8 pop op
 	001e68b0 sourceline 0x2987
 	001e68b8 mov ax,0x1081f8
 	001e68c4 call ax
 	001e68cc sourceline 0x2988
 	001e68d4 mov ax,0x0
 	001e68e0 stackptr 0x8
 	001e68e8 memzerond
 	001e68ec ret

ListSave_OnSelectionChanged$1:
	[001e68f0]
 	001e68f0 sourceline 0x298e
 	001e68f8 thisaddr
 	001e6900 stackptr 0x8
 	001e6908 memread4 ax
 	001e6910 meminit ax
 	001e6918 sourceline 0x298f
*	001e6920 mov mar,0x5def20
 	001e692c mov ax,mar
 	001e6938 push op
 	001e6940 mov op,ax
 	001e6948 setfuncargs 0x0
 	001e6950 mov ax,0x5aef20
 	001e695c farcall ax
 	001e6964 pop op
 	001e696c mov dx,ax
 	001e6978 mov mar,0x5def20
 	001e6984 mov ax,mar
 	001e6990 push op
 	001e6998 mov op,ax
 	001e69a0 farpush dx
 	001e69a8 setfuncargs 0x1
 	001e69b0 mov ax,0xfb6f20
 	001e69bc farcall ax
 	001e69c4 farsubsp 0x1
 	001e69cc pop op
 	001e69d4 mov bx,ax
 	001e69e0 mov mar,0xecef20
 	001e69ec mov ax,mar
 	001e69f8 push op
 	001e6a00 mov op,ax
 	001e6a08 farpush bx
 	001e6a10 setfuncargs 0x1
 	001e6a18 mov ax,0xed6f20
 	001e6a24 farcall ax
 	001e6a2c farsubsp 0x1
 	001e6a34 pop op
 	001e6a3c sourceline 0x2990
 	001e6a44 setfuncargs 0x0
 	001e6a4c mov ax,0x476f20
 	001e6a58 farcall ax
 	001e6a60 sourceline 0x2991
 	001e6a68 mov mar,0x5def20
 	001e6a74 mov ax,mar
 	001e6a80 push op
 	001e6a88 mov op,ax
 	001e6a90 setfuncargs 0x0
 	001e6a98 mov ax,0x656f20
 	001e6aa4 farcall ax
 	001e6aac pop op
 	001e6ab4 push ax
 	001e6abc mov ax,0x0
 	001e6ac8 pop bx
 	001e6ad0 cmpgt bx,ax
 	001e6adc mov ax,bx
 	001e6ae8 jz 0x001e6e2c
		001e6e2c: CONDITIONAL_JUMP
		001e6af0: FALL_THROUGH

	[001e6af0]
		001e68f0: FALL_THROUGH
 	001e6af0 sourceline 0x2993
 	001e6af8 mov ax,0x56
 	001e6b04 farpush ax
 	001e6b0c mov ax,0x7f
 	001e6b18 farpush ax
 	001e6b20 mov mar,0x5def20
 	001e6b2c mov ax,mar
 	001e6b38 push op
 	001e6b40 mov op,ax
 	001e6b48 setfuncargs 0x0
 	001e6b50 mov ax,0x5aef20
 	001e6b5c farcall ax
 	001e6b64 pop op
 	001e6b6c mov dx,ax
 	001e6b78 mov mar,0x5def20
 	001e6b84 mov ax,mar
 	001e6b90 push op
 	001e6b98 mov op,ax
 	001e6ba0 farpush dx
 	001e6ba8 setfuncargs 0x1
 	001e6bb0 mov ax,0xeeef20
 	001e6bbc farcall ax
 	001e6bc4 farsubsp 0x1
 	001e6bcc pop op
 	001e6bd4 farpush ax
 	001e6bdc setfuncargs 0x3
 	001e6be4 mov ax,0x466f20
 	001e6bf0 farcall ax
 	001e6bf8 farsubsp 0x3
 	001e6c00 mov mar,0x100158
 	001e6c0c push mar
 	001e6c14 pop mar
 	001e6c1c memwrite.ptr ax
 	001e6c24 sourceline 0x2994
 	001e6c2c mov mar,0x100158
 	001e6c38 push mar
 	001e6c40 pop mar
 	001e6c48 memread.ptr ax
 	001e6c50 push ax
 	001e6c58 mov ax,0x0
 	001e6c64 pop bx
 	001e6c6c cmpneq bx,ax
 	001e6c78 mov ax,bx
 	001e6c84 jz 0x001e6e2c
		001e6e2c: CONDITIONAL_JUMP
		001e6c8c: FALL_THROUGH

	[001e6c8c]
		001e6af0: FALL_THROUGH
 	001e6c8c push op
 	001e6c94 mov ax,0x0
 	001e6ca0 farpush ax
 	001e6ca8 mov ax,0xf
 	001e6cb4 farpush ax
 	001e6cbc mov ax,0x0
 	001e6cc8 farpush ax
 	001e6cd0 mov ax,0x0
 	001e6cdc farpush ax
 	001e6ce4 mov ax,0x0
 	001e6cf0 farpush ax
 	001e6cf8 mov mar,0x100158
 	001e6d04 push mar
 	001e6d0c pop mar
 	001e6d14 memread.ptr ax
 	001e6d1c mov op,ax
 	001e6d24 setfuncargs 0x5
 	001e6d2c mov ax,0xef6f20
 	001e6d38 farcall ax
 	001e6d40 farsubsp 0x5
 	001e6d48 pop op
 	001e6d50 mov mar,0x100158
 	001e6d5c push mar
 	001e6d64 pop mar
 	001e6d6c memread.ptr ax
 	001e6d74 push ax
 	001e6d7c pop mar
 	001e6d84 mov ax,mar
 	001e6d90 push op
 	001e6d98 mov op,ax
 	001e6da0 setfuncargs 0x0
 	001e6da8 mov ax,0xefef20
 	001e6db4 farcall ax
 	001e6dbc pop op
 	001e6dc4 mov bx,ax
 	001e6dd0 mov mar,0xf06f20
 	001e6ddc mov ax,mar
 	001e6de8 push op
 	001e6df0 mov op,ax
 	001e6df8 farpush bx
 	001e6e00 setfuncargs 0x1
 	001e6e08 mov ax,0x356f20
 	001e6e14 farcall ax
 	001e6e1c farsubsp 0x1
 	001e6e24 pop op
		001e6e2c: FALL_THROUGH

	[001e6e2c]
		001e68f0: CONDITIONAL_JUMP
		001e6af0: CONDITIONAL_JUMP
		001e6c8c: FALL_THROUGH
 	001e6e2c sourceline 0x2996
 	001e6e34 mov ax,0x0
 	001e6e40 stackptr 0x8
 	001e6e48 memzerond
 	001e6e4c ret

BtnCancel3_OnClick$2:
	[001e6e50]
 	001e6e50 sourceline 0x299d
 	001e6e58 thisaddr
 	001e6e60 stackptr 0x8
 	001e6e68 memread4 ax
 	001e6e70 meminit ax
 	001e6e78 sourceline 0x299e
 	001e6e80 mov ax,0x0
 	001e6e8c mov bx,ax
*	001e6e98 mov mar,0x576f20
 	001e6ea4 mov ax,mar
 	001e6eb0 push op
 	001e6eb8 mov op,ax
 	001e6ec0 farpush bx
 	001e6ec8 setfuncargs 0x1
 	001e6ed0 mov ax,0x3a6f20
 	001e6edc farcall ax
 	001e6ee4 farsubsp 0x1
 	001e6eec pop op
 	001e6ef4 sourceline 0x299f
 	001e6efc mov ax,0x0
 	001e6f08 stackptr 0x8
 	001e6f10 memzerond
 	001e6f14 ret

BtnLoad_OnClick$2:
	[001e6f18]
 	001e6f18 sourceline 0x29a3
 	001e6f20 thisaddr
 	001e6f28 stackptr 0x8
 	001e6f30 memread4 ax
 	001e6f38 meminit ax
 	001e6f40 sourceline 0x29a4
*	001e6f48 mov mar,0x5a6f20
 	001e6f54 mov ax,mar
 	001e6f60 push op
 	001e6f68 mov op,ax
 	001e6f70 setfuncargs 0x0
 	001e6f78 mov ax,0x5aef20
 	001e6f84 farcall ax
 	001e6f8c pop op
 	001e6f94 push ax
 	001e6f9c mov ax,0x0
 	001e6fa8 pop bx
 	001e6fb0 cmpge bx,ax
 	001e6fbc mov ax,bx
 	001e6fc8 jz 0x001e70b8
		001e70b8: CONDITIONAL_JUMP
		001e6fd0: FALL_THROUGH

	[001e6fd0]
		001e6f18: FALL_THROUGH
 	001e6fd0 sourceline 0x29a6
 	001e6fd8 mov mar,0x5a6f20
 	001e6fe4 mov ax,mar
 	001e6ff0 push op
 	001e6ff8 mov op,ax
 	001e7000 setfuncargs 0x0
 	001e7008 mov ax,0x5aef20
 	001e7014 farcall ax
 	001e701c pop op
 	001e7024 mov dx,ax
 	001e7030 mov mar,0x5a6f20
 	001e703c mov ax,mar
 	001e7048 push op
 	001e7050 mov op,ax
 	001e7058 farpush dx
 	001e7060 setfuncargs 0x1
 	001e7068 mov ax,0xeeef20
 	001e7074 farcall ax
 	001e707c farsubsp 0x1
 	001e7084 pop op
 	001e708c farpush ax
 	001e7094 setfuncargs 0x1
 	001e709c mov ax,0xfcef20
 	001e70a8 farcall ax
 	001e70b0 farsubsp 0x1
		001e70b8: FALL_THROUGH

	[001e70b8]
		001e6f18: CONDITIONAL_JUMP
		001e6fd0: FALL_THROUGH
 	001e70b8 sourceline 0x29a8
 	001e70c0 mov ax,0x0
 	001e70cc stackptr 0x8
 	001e70d4 memzerond
 	001e70d8 ret

BtnUp2_OnClick$2:
	[001e70dc]
 	001e70dc sourceline 0x29ac
 	001e70e4 thisaddr
 	001e70ec stackptr 0x8
 	001e70f4 memread4 ax
 	001e70fc meminit ax
 	001e7104 sourceline 0x29ad
 	001e710c push op
*	001e7114 mov mar,0x5a6f20
 	001e7120 mov ax,mar
 	001e712c mov op,ax
 	001e7134 setfuncargs 0x0
 	001e713c mov ax,0xfc6f20
 	001e7148 farcall ax
 	001e7150 pop op
 	001e7158 sourceline 0x29ae
 	001e7160 mov mar,0x65ef20
 	001e716c mov ax,mar
 	001e7178 push op
 	001e7180 mov op,ax
 	001e7188 setfuncargs 0x0
 	001e7190 mov ax,0xd86f20
 	001e719c farcall ax
 	001e71a4 pop op
 	001e71ac push ax
 	001e71b4 mov mar,0x5a6f20
 	001e71c0 mov ax,mar
 	001e71cc push op
 	001e71d4 mov op,ax
 	001e71dc setfuncargs 0x0
 	001e71e4 mov ax,0x5b6f20
 	001e71f0 farcall ax
 	001e71f8 pop op
 	001e7200 pop bx
 	001e7208 sub bx,ax
 	001e7214 mov ax,bx
 	001e7220 mov bx,ax
 	001e722c mov mar,0x65ef20
 	001e7238 mov ax,mar
 	001e7244 push op
 	001e724c mov op,ax
 	001e7254 farpush bx
 	001e725c setfuncargs 0x1
 	001e7264 mov ax,0xd9ef20
 	001e7270 farcall ax
 	001e7278 farsubsp 0x1
 	001e7280 pop op
 	001e7288 sourceline 0x29af
 	001e7290 mov ax,0x107c00
 	001e729c call ax
 	001e72a4 sourceline 0x29b0
 	001e72ac mov ax,0x0
 	001e72b8 stackptr 0x8
 	001e72c0 memzerond
 	001e72c4 ret

BtnDown2_OnClick$2:
	[001e72c8]
 	001e72c8 sourceline 0x29b4
 	001e72d0 thisaddr
 	001e72d8 stackptr 0x8
 	001e72e0 memread4 ax
 	001e72e8 meminit ax
 	001e72f0 sourceline 0x29b5
 	001e72f8 push op
*	001e7300 mov mar,0x5a6f20
 	001e730c mov ax,mar
 	001e7318 mov op,ax
 	001e7320 setfuncargs 0x0
 	001e7328 mov ax,0xfbef20
 	001e7334 farcall ax
 	001e733c pop op
 	001e7344 sourceline 0x29b6
 	001e734c mov mar,0x65ef20
 	001e7358 mov ax,mar
 	001e7364 push op
 	001e736c mov op,ax
 	001e7374 setfuncargs 0x0
 	001e737c mov ax,0xd86f20
 	001e7388 farcall ax
 	001e7390 pop op
 	001e7398 push ax
 	001e73a0 mov mar,0x5a6f20
 	001e73ac mov ax,mar
 	001e73b8 push op
 	001e73c0 mov op,ax
 	001e73c8 setfuncargs 0x0
 	001e73d0 mov ax,0x5b6f20
 	001e73dc farcall ax
 	001e73e4 pop op
 	001e73ec pop bx
 	001e73f4 sub bx,ax
 	001e7400 mov ax,bx
 	001e740c mov bx,ax
 	001e7418 mov mar,0x65ef20
 	001e7424 mov ax,mar
 	001e7430 push op
 	001e7438 mov op,ax
 	001e7440 farpush bx
 	001e7448 setfuncargs 0x1
 	001e7450 mov ax,0xd9ef20
 	001e745c farcall ax
 	001e7464 farsubsp 0x1
 	001e746c pop op
 	001e7474 sourceline 0x29b7
 	001e747c mov ax,0x107c00
 	001e7488 call ax
 	001e7490 sourceline 0x29b8
 	001e7498 mov ax,0x0
 	001e74a4 stackptr 0x8
 	001e74ac memzerond
 	001e74b0 ret

ListLoad_OnSelectionChanged$1:
	[001e74b4]
 	001e74b4 sourceline 0x29bc
 	001e74bc thisaddr
 	001e74c4 stackptr 0x8
 	001e74cc memread4 ax
 	001e74d4 meminit ax
 	001e74dc sourceline 0x29bd
*	001e74e4 mov mar,0x5a6f20
 	001e74f0 mov ax,mar
 	001e74fc push op
 	001e7504 mov op,ax
 	001e750c setfuncargs 0x0
 	001e7514 mov ax,0x656f20
 	001e7520 farcall ax
 	001e7528 pop op
 	001e7530 push ax
 	001e7538 mov ax,0x0
 	001e7544 pop bx
 	001e754c cmpgt bx,ax
 	001e7558 mov ax,bx
 	001e7564 jz 0x001e78a8
		001e78a8: CONDITIONAL_JUMP
		001e756c: FALL_THROUGH

	[001e756c]
		001e74b4: FALL_THROUGH
 	001e756c sourceline 0x29bf
 	001e7574 mov ax,0x56
 	001e7580 farpush ax
 	001e7588 mov ax,0x7f
 	001e7594 farpush ax
 	001e759c mov mar,0x5a6f20
 	001e75a8 mov ax,mar
 	001e75b4 push op
 	001e75bc mov op,ax
 	001e75c4 setfuncargs 0x0
 	001e75cc mov ax,0x5aef20
 	001e75d8 farcall ax
 	001e75e0 pop op
 	001e75e8 mov dx,ax
 	001e75f4 mov mar,0x5a6f20
 	001e7600 mov ax,mar
 	001e760c push op
 	001e7614 mov op,ax
 	001e761c farpush dx
 	001e7624 setfuncargs 0x1
 	001e762c mov ax,0xeeef20
 	001e7638 farcall ax
 	001e7640 farsubsp 0x1
 	001e7648 pop op
 	001e7650 farpush ax
 	001e7658 setfuncargs 0x3
 	001e7660 mov ax,0x466f20
 	001e766c farcall ax
 	001e7674 farsubsp 0x3
 	001e767c mov mar,0x10015c
 	001e7688 push mar
 	001e7690 pop mar
 	001e7698 memwrite.ptr ax
 	001e76a0 sourceline 0x29c0
 	001e76a8 mov mar,0x10015c
 	001e76b4 push mar
 	001e76bc pop mar
 	001e76c4 memread.ptr ax
 	001e76cc push ax
 	001e76d4 mov ax,0x0
 	001e76e0 pop bx
 	001e76e8 cmpneq bx,ax
 	001e76f4 mov ax,bx
 	001e7700 jz 0x001e78a8
		001e78a8: CONDITIONAL_JUMP
		001e7708: FALL_THROUGH

	[001e7708]
		001e756c: FALL_THROUGH
 	001e7708 push op
 	001e7710 mov ax,0x0
 	001e771c farpush ax
 	001e7724 mov ax,0xf
 	001e7730 farpush ax
 	001e7738 mov ax,0x0
 	001e7744 farpush ax
 	001e774c mov ax,0x0
 	001e7758 farpush ax
 	001e7760 mov ax,0x0
 	001e776c farpush ax
 	001e7774 mov mar,0x10015c
 	001e7780 push mar
 	001e7788 pop mar
 	001e7790 memread.ptr ax
 	001e7798 mov op,ax
 	001e77a0 setfuncargs 0x5
 	001e77a8 mov ax,0xef6f20
 	001e77b4 farcall ax
 	001e77bc farsubsp 0x5
 	001e77c4 pop op
 	001e77cc mov mar,0x10015c
 	001e77d8 push mar
 	001e77e0 pop mar
 	001e77e8 memread.ptr ax
 	001e77f0 push ax
 	001e77f8 pop mar
 	001e7800 mov ax,mar
 	001e780c push op
 	001e7814 mov op,ax
 	001e781c setfuncargs 0x0
 	001e7824 mov ax,0xefef20
 	001e7830 farcall ax
 	001e7838 pop op
 	001e7840 mov bx,ax
 	001e784c mov mar,0xf0ef20
 	001e7858 mov ax,mar
 	001e7864 push op
 	001e786c mov op,ax
 	001e7874 farpush bx
 	001e787c setfuncargs 0x1
 	001e7884 mov ax,0x356f20
 	001e7890 farcall ax
 	001e7898 farsubsp 0x1
 	001e78a0 pop op
		001e78a8: FALL_THROUGH

	[001e78a8]
		001e74b4: CONDITIONAL_JUMP
		001e756c: CONDITIONAL_JUMP
		001e7708: FALL_THROUGH
 	001e78a8 sourceline 0x29c2
 	001e78b0 setfuncargs 0x0
 	001e78b8 mov ax,0x46ef20
 	001e78c4 farcall ax
 	001e78cc sourceline 0x29c3
 	001e78d4 mov ax,0x0
 	001e78e0 stackptr 0x8
 	001e78e8 memzerond
 	001e78ec ret

BtnDelete2_OnClick$2:
	[001e78f0]
 	001e78f0 sourceline 0x29c8
 	001e78f8 thisaddr
 	001e7900 stackptr 0x8
 	001e7908 memread4 ax
 	001e7910 meminit ax
 	001e7918 sourceline 0x29c9
*	001e7920 mov mar,0x5a6f20
 	001e792c mov ax,mar
 	001e7938 push op
 	001e7940 mov op,ax
 	001e7948 setfuncargs 0x0
 	001e7950 mov ax,0x5aef20
 	001e795c farcall ax
 	001e7964 pop op
 	001e796c push ax
 	001e7974 mov ax,0x0
 	001e7980 pop bx
 	001e7988 cmpge bx,ax
 	001e7994 mov ax,bx
 	001e79a0 jz 0x001e8268
		001e8268: CONDITIONAL_JUMP
		001e79a8: FALL_THROUGH

	[001e79a8]
		001e78f0: FALL_THROUGH
 	001e79a8 sourceline 0x29cb
 	001e79b0 mov ax,0x0
 	001e79bc mov bx,ax
 	001e79c8 mov mar,0x576f20
 	001e79d4 mov ax,mar
 	001e79e0 push op
 	001e79e8 mov op,ax
 	001e79f0 farpush bx
 	001e79f8 setfuncargs 0x1
 	001e7a00 mov ax,0xe3ef20
 	001e7a0c farcall ax
 	001e7a14 farsubsp 0x1
 	001e7a1c pop op
 	001e7a24 sourceline 0x29cc
 	001e7a2c mov ax,0x0
 	001e7a38 setfuncargs 0x0
 	001e7a40 mov ax,0x3e6f20
 	001e7a4c farcall ax
 	001e7a54 push ax
 	001e7a5c mov ax,0x2c787b
 	001e7a68 pop bx
 	001e7a70 streq bx,ax
 	001e7a7c mov ax,bx
 	001e7a88 jz 0x001e7e04
		001e7e04: CONDITIONAL_JUMP
		001e7a90: FALL_THROUGH

	[001e7a90]
		001e79a8: FALL_THROUGH
 	001e7a90 sourceline 0x29ce
 	001e7a98 mov ax,0xe23
 	001e7aa4 mov bx,ax
 	001e7ab0 mov mar,0xe46f20
 	001e7abc mov ax,mar
 	001e7ac8 push op
 	001e7ad0 mov op,ax
 	001e7ad8 farpush bx
 	001e7ae0 setfuncargs 0x1
 	001e7ae8 mov ax,0x356f20
 	001e7af4 farcall ax
 	001e7afc farsubsp 0x1
 	001e7b04 pop op
 	001e7b0c sourceline 0x29cf
 	001e7b14 mov ax,0xe22
 	001e7b20 mov bx,ax
 	001e7b2c mov mar,0xe46f20
 	001e7b38 mov ax,mar
 	001e7b44 push op
 	001e7b4c mov op,ax
 	001e7b54 farpush bx
 	001e7b5c setfuncargs 0x1
 	001e7b64 mov ax,0x3f6f20
 	001e7b70 farcall ax
 	001e7b78 farsubsp 0x1
 	001e7b80 pop op
 	001e7b88 sourceline 0x29d0
 	001e7b90 mov ax,0xe22
 	001e7b9c mov bx,ax
 	001e7ba8 mov mar,0xe46f20
 	001e7bb4 mov ax,mar
 	001e7bc0 push op
 	001e7bc8 mov op,ax
 	001e7bd0 farpush bx
 	001e7bd8 setfuncargs 0x1
 	001e7be0 mov ax,0x3fef20
 	001e7bec farcall ax
 	001e7bf4 farsubsp 0x1
 	001e7bfc pop op
 	001e7c04 sourceline 0x29d1
 	001e7c0c mov ax,0xe21
 	001e7c18 mov bx,ax
 	001e7c24 mov mar,0xe4ef20
 	001e7c30 mov ax,mar
 	001e7c3c push op
 	001e7c44 mov op,ax
 	001e7c4c farpush bx
 	001e7c54 setfuncargs 0x1
 	001e7c5c mov ax,0x356f20
 	001e7c68 farcall ax
 	001e7c70 farsubsp 0x1
 	001e7c78 pop op
 	001e7c80 sourceline 0x29d2
 	001e7c88 mov ax,0xe20
 	001e7c94 mov bx,ax
 	001e7ca0 mov mar,0xe4ef20
 	001e7cac mov ax,mar
 	001e7cb8 push op
 	001e7cc0 mov op,ax
 	001e7cc8 farpush bx
 	001e7cd0 setfuncargs 0x1
 	001e7cd8 mov ax,0x3f6f20
 	001e7ce4 farcall ax
 	001e7cec farsubsp 0x1
 	001e7cf4 pop op
 	001e7cfc sourceline 0x29d3
 	001e7d04 mov ax,0xe20
 	001e7d10 mov bx,ax
 	001e7d1c mov mar,0xe4ef20
 	001e7d28 mov ax,mar
 	001e7d34 push op
 	001e7d3c mov op,ax
 	001e7d44 farpush bx
 	001e7d4c setfuncargs 0x1
 	001e7d54 mov ax,0x3fef20
 	001e7d60 farcall ax
 	001e7d68 farsubsp 0x1
 	001e7d70 pop op
 	001e7d78 sourceline 0x29d4
 	001e7d80 mov ax,0xe18
 	001e7d8c mov bx,ax
 	001e7d98 mov mar,0xe56f20
 	001e7da4 mov ax,mar
 	001e7db0 push op
 	001e7db8 mov op,ax
 	001e7dc0 farpush bx
 	001e7dc8 setfuncargs 0x1
 	001e7dd0 mov ax,0x356f20
 	001e7ddc farcall ax
 	001e7de4 farsubsp 0x1
 	001e7dec pop op
 	001e7df4 sourceline 0x29d5
 	001e7dfc jmp 0x001e8168
		001e8168: UNCONDITIONAL_JUMP

	[001e7e04]
		001e79a8: CONDITIONAL_JUMP
 	001e7e04 sourceline 0x29d8
 	001e7e0c mov ax,0xe1d
 	001e7e18 mov bx,ax
 	001e7e24 mov mar,0xe46f20
 	001e7e30 mov ax,mar
 	001e7e3c push op
 	001e7e44 mov op,ax
 	001e7e4c farpush bx
 	001e7e54 setfuncargs 0x1
 	001e7e5c mov ax,0x356f20
 	001e7e68 farcall ax
 	001e7e70 farsubsp 0x1
 	001e7e78 pop op
 	001e7e80 sourceline 0x29d9
 	001e7e88 mov ax,0xe1c
 	001e7e94 mov bx,ax
 	001e7ea0 mov mar,0xe46f20
 	001e7eac mov ax,mar
 	001e7eb8 push op
 	001e7ec0 mov op,ax
 	001e7ec8 farpush bx
 	001e7ed0 setfuncargs 0x1
 	001e7ed8 mov ax,0x3f6f20
 	001e7ee4 farcall ax
 	001e7eec farsubsp 0x1
 	001e7ef4 pop op
 	001e7efc sourceline 0x29da
 	001e7f04 mov ax,0xe1c
 	001e7f10 mov bx,ax
 	001e7f1c mov mar,0xe46f20
 	001e7f28 mov ax,mar
 	001e7f34 push op
 	001e7f3c mov op,ax
 	001e7f44 farpush bx
 	001e7f4c setfuncargs 0x1
 	001e7f54 mov ax,0x3fef20
 	001e7f60 farcall ax
 	001e7f68 farsubsp 0x1
 	001e7f70 pop op
 	001e7f78 sourceline 0x29db
 	001e7f80 mov ax,0xe1f
 	001e7f8c mov bx,ax
 	001e7f98 mov mar,0xe4ef20
 	001e7fa4 mov ax,mar
 	001e7fb0 push op
 	001e7fb8 mov op,ax
 	001e7fc0 farpush bx
 	001e7fc8 setfuncargs 0x1
 	001e7fd0 mov ax,0x356f20
 	001e7fdc farcall ax
 	001e7fe4 farsubsp 0x1
 	001e7fec pop op
 	001e7ff4 sourceline 0x29dc
 	001e7ffc mov ax,0xe1e
 	001e8008 mov bx,ax
 	001e8014 mov mar,0xe4ef20
 	001e8020 mov ax,mar
 	001e802c push op
 	001e8034 mov op,ax
 	001e803c farpush bx
 	001e8044 setfuncargs 0x1
 	001e804c mov ax,0x3f6f20
 	001e8058 farcall ax
 	001e8060 farsubsp 0x1
 	001e8068 pop op
 	001e8070 sourceline 0x29dd
 	001e8078 mov ax,0xe1e
 	001e8084 mov bx,ax
 	001e8090 mov mar,0xe4ef20
 	001e809c mov ax,mar
 	001e80a8 push op
 	001e80b0 mov op,ax
 	001e80b8 farpush bx
 	001e80c0 setfuncargs 0x1
 	001e80c8 mov ax,0x3fef20
 	001e80d4 farcall ax
 	001e80dc farsubsp 0x1
 	001e80e4 pop op
 	001e80ec sourceline 0x29de
 	001e80f4 mov ax,0xe19
 	001e8100 mov bx,ax
 	001e810c mov mar,0xe56f20
 	001e8118 mov ax,mar
 	001e8124 push op
 	001e812c mov op,ax
 	001e8134 farpush bx
 	001e813c setfuncargs 0x1
 	001e8144 mov ax,0x356f20
 	001e8150 farcall ax
 	001e8158 farsubsp 0x1
 	001e8160 pop op
		001e8168: FALL_THROUGH

	[001e8168]
		001e7a90: UNCONDITIONAL_JUMP
		001e7e04: FALL_THROUGH
 	001e8168 sourceline 0x29e0
 	001e8170 push op
 	001e8178 mov ax,0x0
 	001e8184 farpush ax
 	001e818c mov ax,0x0
 	001e8198 farpush ax
 	001e81a0 mov mar,0x54ef20
 	001e81ac mov ax,mar
 	001e81b8 mov op,ax
 	001e81c0 setfuncargs 0x2
 	001e81c8 mov ax,0xe5ef20
 	001e81d4 farcall ax
 	001e81dc farsubsp 0x2
 	001e81e4 pop op
 	001e81ec sourceline 0x29e1
 	001e81f4 mov ax,0x1
 	001e8200 mov bx,ax
 	001e820c mov mar,0x54ef20
 	001e8218 mov ax,mar
 	001e8224 push op
 	001e822c mov op,ax
 	001e8234 farpush bx
 	001e823c setfuncargs 0x1
 	001e8244 mov ax,0x3a6f20
 	001e8250 farcall ax
 	001e8258 farsubsp 0x1
 	001e8260 pop op
		001e8268: FALL_THROUGH

	[001e8268]
		001e78f0: CONDITIONAL_JUMP
		001e8168: FALL_THROUGH
 	001e8268 sourceline 0x29e3
 	001e8270 mov ax,0x0
 	001e827c stackptr 0x8
 	001e8284 memzerond
 	001e8288 ret

SliderSaveSroll_OnChange$1:
	[001e828c]
 	001e828c sourceline 0x29e8
 	001e8294 thisaddr
 	001e829c stackptr 0x8
 	001e82a4 memread4 ax
 	001e82ac meminit ax
 	001e82b4 sourceline 0x29e9
 	001e82bc mov ax,0x5
 	001e82c8 mov mar,0x100168
 	001e82d4 memwrite4 ax
 	001e82dc sourceline 0x29ea
 	001e82e4 mov ax,0x1
 	001e82f0 mov mar,0x100164
 	001e82fc memwrite4 ax
 	001e8304 sourceline 0x29eb
*	001e830c mov mar,0x666f20
 	001e8318 mov ax,mar
 	001e8324 push op
 	001e832c mov op,ax
 	001e8334 setfuncargs 0x0
 	001e833c mov ax,0xd86f20
 	001e8348 farcall ax
 	001e8350 pop op
 	001e8358 push ax
 	001e8360 mov mar,0x666f20
 	001e836c mov ax,mar
 	001e8378 push op
 	001e8380 mov op,ax
 	001e8388 setfuncargs 0x0
 	001e8390 mov ax,0xe36f20
 	001e839c farcall ax
 	001e83a4 pop op
 	001e83ac pop bx
 	001e83b4 sub bx,ax
 	001e83c0 mov ax,bx
 	001e83cc mov bx,ax
 	001e83d8 mov mar,0x5def20
 	001e83e4 mov ax,mar
 	001e83f0 push op
 	001e83f8 mov op,ax
 	001e8400 farpush bx
 	001e8408 setfuncargs 0x1
 	001e8410 mov ax,0xedef20
 	001e841c farcall ax
 	001e8424 farsubsp 0x1
 	001e842c pop op
 	001e8434 sourceline 0x29ec
 	001e843c mov ax,0x0
 	001e8448 stackptr 0x8
 	001e8450 memzerond
 	001e8454 ret

SliderLoadScroll_OnChange$1:
	[001e8458]
 	001e8458 sourceline 0x29f3
 	001e8460 thisaddr
 	001e8468 stackptr 0x8
 	001e8470 memread4 ax
 	001e8478 meminit ax
 	001e8480 sourceline 0x29f4
 	001e8488 mov ax,0x5
 	001e8494 mov mar,0x100168
 	001e84a0 memwrite4 ax
 	001e84a8 sourceline 0x29f5
 	001e84b0 mov ax,0x1
 	001e84bc mov mar,0x100164
 	001e84c8 memwrite4 ax
 	001e84d0 sourceline 0x29f6
*	001e84d8 mov mar,0x65ef20
 	001e84e4 mov ax,mar
 	001e84f0 push op
 	001e84f8 mov op,ax
 	001e8500 setfuncargs 0x0
 	001e8508 mov ax,0xd86f20
 	001e8514 farcall ax
 	001e851c pop op
 	001e8524 push ax
 	001e852c mov mar,0x65ef20
 	001e8538 mov ax,mar
 	001e8544 push op
 	001e854c mov op,ax
 	001e8554 setfuncargs 0x0
 	001e855c mov ax,0xe36f20
 	001e8568 farcall ax
 	001e8570 pop op
 	001e8578 pop bx
 	001e8580 sub bx,ax
 	001e858c mov ax,bx
 	001e8598 mov bx,ax
 	001e85a4 mov mar,0x5a6f20
 	001e85b0 mov ax,mar
 	001e85bc push op
 	001e85c4 mov op,ax
 	001e85cc farpush bx
 	001e85d4 setfuncargs 0x1
 	001e85dc mov ax,0xedef20
 	001e85e8 farcall ax
 	001e85f0 farsubsp 0x1
 	001e85f8 pop op
 	001e8600 sourceline 0x29f7
 	001e8608 mov ax,0x0
 	001e8614 stackptr 0x8
 	001e861c memzerond
 	001e8620 ret

gSumerianPuzzle_OnClick$2:
	[001e8624]
 	001e8624 sourceline 0x29fd
 	001e862c thisaddr
 	001e8634 stackptr 0x8
 	001e863c memread4 ax
 	001e8644 meminit ax
 	001e864c sourceline 0x29fe
 	001e8654 mov ax,0x0
 	001e8660 mov bx,ax
*	001e866c mov mar,0x30ef20
 	001e8678 mov ax,mar
 	001e8684 push op
 	001e868c mov op,ax
 	001e8694 farpush bx
 	001e869c setfuncargs 0x1
 	001e86a4 mov ax,0x3a6f20
 	001e86b0 farcall ax
 	001e86b8 farsubsp 0x1
 	001e86c0 pop op
 	001e86c8 sourceline 0x2a00
 	001e86d0 mov ax,0x0
 	001e86dc stackptr 0x8
 	001e86e4 memzerond
 	001e86e8 ret

iAtelier_Interact$0:
	[001e8714]
 	001e8714 sourceline 0x2a18
 	001e871c thisaddr
 	001e8724 sourceline 0x2a19
*	001e872c mov mar,0xfd6f20
 	001e8738 memread4 ax
 	001e8740 lnot ax
 	001e8748 jz 0x001e8a44
		001e8a44: CONDITIONAL_JUMP
		001e8750: FALL_THROUGH

	[001e8750]
		001e8714: FALL_THROUGH
 	001e8750 sourceline 0x2a1b
 	001e8758 push op
 	001e8760 mov mar,0xf5ef20
 	001e876c mov ax,mar
 	001e8778 farpush ax
 	001e8780 mov mar,0x81ef20
 	001e878c mov ax,mar
 	001e8798 mov op,ax
 	001e87a0 setfuncargs 0x1
 	001e87a8 mov ax,0x996f20
 	001e87b4 farcall ax
 	001e87bc farsubsp 0x1
 	001e87c4 pop op
 	001e87cc jz 0x001e890c
		001e890c: CONDITIONAL_JUMP
		001e87d4: FALL_THROUGH

	[001e87d4]
		001e8750: FALL_THROUGH
 	001e87d4 sourceline 0x2a1d
 	001e87dc mov ax,0x1
 	001e87e8 mov bx,ax
 	001e87f4 mov mar,0x3cef20
 	001e8800 mov ax,mar
 	001e880c push op
 	001e8814 mov op,ax
 	001e881c farpush bx
 	001e8824 setfuncargs 0x1
 	001e882c mov ax,0x69ef20
 	001e8838 farcall ax
 	001e8840 farsubsp 0x1
 	001e8848 pop op
 	001e8850 sourceline 0x2a1e
 	001e8858 push op
 	001e8860 mov ax,0x2c717a
 	001e886c farpush ax
 	001e8874 mov ax,0x138
 	001e8880 farpush ax
 	001e8888 mov ax,0x92
 	001e8894 farpush ax
 	001e889c mov ax,0x0
 	001e88a8 farpush ax
 	001e88b0 mov mar,0x3cef20
 	001e88bc mov ax,mar
 	001e88c8 mov op,ax
 	001e88d0 setfuncargs 0x4
 	001e88d8 mov ax,0x6aef20
 	001e88e4 farcall ax
 	001e88ec farsubsp 0x4
 	001e88f4 pop op
 	001e88fc sourceline 0x2a1f
 	001e8904 jmp 0x001e8a34
		001e8a34: UNCONDITIONAL_JUMP

	[001e890c]
		001e8750: CONDITIONAL_JUMP
 	001e890c sourceline 0x2a22
 	001e8914 push op
 	001e891c mov ax,0x1
 	001e8928 farpush ax
 	001e8930 mov ax,0x80
 	001e893c farpush ax
 	001e8944 mov ax,0x114
 	001e8950 farpush ax
 	001e8958 mov ax,0x2
 	001e8964 farpush ax
 	001e896c mov mar,0x3cef20
 	001e8978 mov ax,mar
 	001e8984 mov op,ax
 	001e898c setfuncargs 0x4
 	001e8994 mov ax,0xc16f20
 	001e89a0 farcall ax
 	001e89a8 farsubsp 0x4
 	001e89b0 pop op
 	001e89b8 sourceline 0x2a23
 	001e89c0 mov ax,0x0
 	001e89cc mov bx,ax
 	001e89d8 mov mar,0xfdef20
 	001e89e4 mov ax,mar
 	001e89f0 push op
 	001e89f8 mov op,ax
 	001e8a00 farpush bx
 	001e8a08 setfuncargs 0x1
 	001e8a10 mov ax,0x3a6f20
 	001e8a1c farcall ax
 	001e8a24 farsubsp 0x1
 	001e8a2c pop op
		001e8a34: FALL_THROUGH

	[001e8a34]
		001e87d4: UNCONDITIONAL_JUMP
		001e890c: FALL_THROUGH
 	001e8a34 sourceline 0x2a25
 	001e8a3c jmp 0x001e8bdc
		001e8bdc: UNCONDITIONAL_JUMP

	[001e8a44]
		001e8714: CONDITIONAL_JUMP
 	001e8a44 sourceline 0x2a2a
 	001e8a4c push op
 	001e8a54 mov ax,0x2
 	001e8a60 farpush ax
 	001e8a68 mov mar,0x3cef20
 	001e8a74 mov ax,mar
 	001e8a80 mov op,ax
 	001e8a88 setfuncargs 0x1
 	001e8a90 mov ax,0x51ef20
 	001e8a9c farcall ax
 	001e8aa4 farsubsp 0x1
 	001e8aac pop op
 	001e8ab4 sourceline 0x2a2b
 	001e8abc push op
 	001e8ac4 mov ax,0x1
 	001e8ad0 farpush ax
 	001e8ad8 mov ax,0x80
 	001e8ae4 farpush ax
 	001e8aec mov ax,0x114
 	001e8af8 farpush ax
 	001e8b00 mov ax,0x20
 	001e8b0c farpush ax
 	001e8b14 mov mar,0x3cef20
 	001e8b20 mov ax,mar
 	001e8b2c mov op,ax
 	001e8b34 setfuncargs 0x4
 	001e8b3c mov ax,0xc16f20
 	001e8b48 farcall ax
 	001e8b50 farsubsp 0x4
 	001e8b58 pop op
 	001e8b60 sourceline 0x2a2c
 	001e8b68 mov ax,0x0
 	001e8b74 mov bx,ax
 	001e8b80 mov mar,0xfdef20
 	001e8b8c mov ax,mar
 	001e8b98 push op
 	001e8ba0 mov op,ax
 	001e8ba8 farpush bx
 	001e8bb0 setfuncargs 0x1
 	001e8bb8 mov ax,0x3a6f20
 	001e8bc4 farcall ax
 	001e8bcc farsubsp 0x1
 	001e8bd4 pop op
		001e8bdc: FALL_THROUGH

	[001e8bdc]
		001e8a34: UNCONDITIONAL_JUMP
		001e8a44: FALL_THROUGH
 	001e8bdc sourceline 0x2a2e
 	001e8be4 mov ax,0x0
 	001e8bf0 ret

iFatherOffice_Interact$0:
	[001e8bf4]
 	001e8bf4 sourceline 0x2a32
 	001e8bfc thisaddr
 	001e8c04 sourceline 0x2a33
 	001e8c0c push op
*	001e8c14 mov mar,0xf5ef20
 	001e8c20 mov ax,mar
 	001e8c2c farpush ax
 	001e8c34 mov mar,0x81ef20
 	001e8c40 mov ax,mar
 	001e8c4c mov op,ax
 	001e8c54 setfuncargs 0x1
 	001e8c5c mov ax,0x996f20
 	001e8c68 farcall ax
 	001e8c70 farsubsp 0x1
 	001e8c78 pop op
 	001e8c80 jz 0x001e8dc0
		001e8dc0: CONDITIONAL_JUMP
		001e8c88: FALL_THROUGH

	[001e8c88]
		001e8bf4: FALL_THROUGH
 	001e8c88 sourceline 0x2a35
 	001e8c90 mov ax,0x1
 	001e8c9c mov bx,ax
 	001e8ca8 mov mar,0x3cef20
 	001e8cb4 mov ax,mar
 	001e8cc0 push op
 	001e8cc8 mov op,ax
 	001e8cd0 farpush bx
 	001e8cd8 setfuncargs 0x1
 	001e8ce0 mov ax,0x69ef20
 	001e8cec farcall ax
 	001e8cf4 farsubsp 0x1
 	001e8cfc pop op
 	001e8d04 sourceline 0x2a36
 	001e8d0c push op
 	001e8d14 mov ax,0x2c717a
 	001e8d20 farpush ax
 	001e8d28 mov ax,0x138
 	001e8d34 farpush ax
 	001e8d3c mov ax,0x92
 	001e8d48 farpush ax
 	001e8d50 mov ax,0x0
 	001e8d5c farpush ax
 	001e8d64 mov mar,0x3cef20
 	001e8d70 mov ax,mar
 	001e8d7c mov op,ax
 	001e8d84 setfuncargs 0x4
 	001e8d8c mov ax,0x6aef20
 	001e8d98 farcall ax
 	001e8da0 farsubsp 0x4
 	001e8da8 pop op
 	001e8db0 sourceline 0x2a37
 	001e8db8 jmp 0x001e8ee8
		001e8ee8: UNCONDITIONAL_JUMP

	[001e8dc0]
		001e8bf4: CONDITIONAL_JUMP
 	001e8dc0 sourceline 0x2a3a
 	001e8dc8 push op
 	001e8dd0 mov ax,0x4
 	001e8ddc farpush ax
 	001e8de4 mov ax,0x61
 	001e8df0 farpush ax
 	001e8df8 mov ax,0xbf
 	001e8e04 farpush ax
 	001e8e0c mov ax,0x3
 	001e8e18 farpush ax
 	001e8e20 mov mar,0x3cef20
 	001e8e2c mov ax,mar
 	001e8e38 mov op,ax
 	001e8e40 setfuncargs 0x4
 	001e8e48 mov ax,0xc16f20
 	001e8e54 farcall ax
 	001e8e5c farsubsp 0x4
 	001e8e64 pop op
 	001e8e6c sourceline 0x2a3b
 	001e8e74 mov ax,0x0
 	001e8e80 mov bx,ax
 	001e8e8c mov mar,0xfdef20
 	001e8e98 mov ax,mar
 	001e8ea4 push op
 	001e8eac mov op,ax
 	001e8eb4 farpush bx
 	001e8ebc setfuncargs 0x1
 	001e8ec4 mov ax,0x3a6f20
 	001e8ed0 farcall ax
 	001e8ed8 farsubsp 0x1
 	001e8ee0 pop op
		001e8ee8: FALL_THROUGH

	[001e8ee8]
		001e8c88: UNCONDITIONAL_JUMP
		001e8dc0: FALL_THROUGH
 	001e8ee8 sourceline 0x2a3d
 	001e8ef0 mov ax,0x0
 	001e8efc ret

iJudyHome_Interact$0:
	[001e8f00]
 	001e8f00 sourceline 0x2a41
 	001e8f08 thisaddr
 	001e8f10 sourceline 0x2a42
 	001e8f18 push op
*	001e8f20 mov mar,0xf5ef20
 	001e8f2c mov ax,mar
 	001e8f38 farpush ax
 	001e8f40 mov mar,0x81ef20
 	001e8f4c mov ax,mar
 	001e8f58 mov op,ax
 	001e8f60 setfuncargs 0x1
 	001e8f68 mov ax,0x996f20
 	001e8f74 farcall ax
 	001e8f7c farsubsp 0x1
 	001e8f84 pop op
 	001e8f8c jz 0x001e90cc
		001e90cc: CONDITIONAL_JUMP
		001e8f94: FALL_THROUGH

	[001e8f94]
		001e8f00: FALL_THROUGH
 	001e8f94 sourceline 0x2a44
 	001e8f9c mov ax,0x1
 	001e8fa8 mov bx,ax
 	001e8fb4 mov mar,0x3cef20
 	001e8fc0 mov ax,mar
 	001e8fcc push op
 	001e8fd4 mov op,ax
 	001e8fdc farpush bx
 	001e8fe4 setfuncargs 0x1
 	001e8fec mov ax,0x69ef20
 	001e8ff8 farcall ax
 	001e9000 farsubsp 0x1
 	001e9008 pop op
 	001e9010 sourceline 0x2a45
 	001e9018 push op
 	001e9020 mov ax,0x2c717a
 	001e902c farpush ax
 	001e9034 mov ax,0x138
 	001e9040 farpush ax
 	001e9048 mov ax,0x92
 	001e9054 farpush ax
 	001e905c mov ax,0x0
 	001e9068 farpush ax
 	001e9070 mov mar,0x3cef20
 	001e907c mov ax,mar
 	001e9088 mov op,ax
 	001e9090 setfuncargs 0x4
 	001e9098 mov ax,0x6aef20
 	001e90a4 farcall ax
 	001e90ac farsubsp 0x4
 	001e90b4 pop op
 	001e90bc sourceline 0x2a46
 	001e90c4 jmp 0x001e931c
		001e931c: UNCONDITIONAL_JUMP

	[001e90cc]
		001e8f00: CONDITIONAL_JUMP
 	001e90cc sourceline 0x2a49
 	001e90d4 push op
 	001e90dc mov ax,0x1
 	001e90e8 farpush ax
 	001e90f0 mov ax,0x8f
 	001e90fc farpush ax
 	001e9104 mov ax,0x13a
 	001e9110 farpush ax
 	001e9118 mov ax,0x5
 	001e9124 farpush ax
 	001e912c mov mar,0x3cef20
 	001e9138 mov ax,mar
 	001e9144 mov op,ax
 	001e914c setfuncargs 0x4
 	001e9154 mov ax,0xc16f20
 	001e9160 farcall ax
 	001e9168 farsubsp 0x4
 	001e9170 pop op
 	001e9178 sourceline 0x2a4a
 	001e9180 push op
 	001e9188 mov ax,0x7cfe
 	001e9194 farpush ax
 	001e919c mov ax,0x7e
 	001e91a8 farpush ax
 	001e91b0 mov ax,0x5b
 	001e91bc farpush ax
 	001e91c4 mov ax,0x5
 	001e91d0 farpush ax
 	001e91d8 mov mar,0x506f20
 	001e91e4 mov ax,mar
 	001e91f0 mov op,ax
 	001e91f8 setfuncargs 0x4
 	001e9200 mov ax,0xc16f20
 	001e920c farcall ax
 	001e9214 farsubsp 0x4
 	001e921c pop op
 	001e9224 sourceline 0x2a4b
 	001e922c mov ax,0x0
 	001e9238 mov bx,ax
 	001e9244 mov mar,0x506f20
 	001e9250 mov ax,mar
 	001e925c push op
 	001e9264 mov op,ax
 	001e926c farpush bx
 	001e9274 setfuncargs 0x1
 	001e927c mov ax,0xd0ef20
 	001e9288 farcall ax
 	001e9290 farsubsp 0x1
 	001e9298 pop op
 	001e92a0 sourceline 0x2a4c
 	001e92a8 mov ax,0x0
 	001e92b4 mov bx,ax
 	001e92c0 mov mar,0xfdef20
 	001e92cc mov ax,mar
 	001e92d8 push op
 	001e92e0 mov op,ax
 	001e92e8 farpush bx
 	001e92f0 setfuncargs 0x1
 	001e92f8 mov ax,0x3a6f20
 	001e9304 farcall ax
 	001e930c farsubsp 0x1
 	001e9314 pop op
		001e931c: FALL_THROUGH

	[001e931c]
		001e8f94: UNCONDITIONAL_JUMP
		001e90cc: FALL_THROUGH
 	001e931c sourceline 0x2a4e
 	001e9324 mov ax,0x0
 	001e9330 ret

iEdwardHQ_Interact$0:
	[001e9334]
 	001e9334 sourceline 0x2a52
 	001e933c thisaddr
 	001e9344 sourceline 0x2a53
 	001e934c push op
 	001e9354 mov ax,0x3
 	001e9360 farpush ax
 	001e9368 mov ax,0xd2
 	001e9374 farpush ax
 	001e937c mov ax,0x89
 	001e9388 farpush ax
 	001e9390 mov ax,0x7
 	001e939c farpush ax
*	001e93a4 mov mar,0x3cef20
 	001e93b0 mov ax,mar
 	001e93bc mov op,ax
 	001e93c4 setfuncargs 0x4
 	001e93cc mov ax,0xc16f20
 	001e93d8 farcall ax
 	001e93e0 farsubsp 0x4
 	001e93e8 pop op
 	001e93f0 sourceline 0x2a54
 	001e93f8 mov ax,0x0
 	001e9404 mov bx,ax
 	001e9410 mov mar,0xfdef20
 	001e941c mov ax,mar
 	001e9428 push op
 	001e9430 mov op,ax
 	001e9438 farpush bx
 	001e9440 setfuncargs 0x1
 	001e9448 mov ax,0x3a6f20
 	001e9454 farcall ax
 	001e945c farsubsp 0x1
 	001e9464 pop op
 	001e946c sourceline 0x2a55
 	001e9474 mov ax,0x0
 	001e9480 ret

iPrisonHospital_Interact$0:
	[001e9484]
 	001e9484 sourceline 0x2a59
 	001e948c thisaddr
 	001e9494 sourceline 0x2a5a
 	001e949c push op
 	001e94a4 mov ax,0x4
 	001e94b0 farpush ax
 	001e94b8 mov ax,0x7f
 	001e94c4 farpush ax
 	001e94cc mov ax,0x36
 	001e94d8 farpush ax
 	001e94e0 mov ax,0xe
 	001e94ec farpush ax
*	001e94f4 mov mar,0x3cef20
 	001e9500 mov ax,mar
 	001e950c mov op,ax
 	001e9514 setfuncargs 0x4
 	001e951c mov ax,0xc16f20
 	001e9528 farcall ax
 	001e9530 farsubsp 0x4
 	001e9538 pop op
 	001e9540 sourceline 0x2a5b
 	001e9548 mov ax,0x0
 	001e9554 mov bx,ax
 	001e9560 mov mar,0xfdef20
 	001e956c mov ax,mar
 	001e9578 push op
 	001e9580 mov op,ax
 	001e9588 farpush bx
 	001e9590 setfuncargs 0x1
 	001e9598 mov ax,0x3a6f20
 	001e95a4 farcall ax
 	001e95ac farsubsp 0x1
 	001e95b4 pop op
 	001e95bc sourceline 0x2a5c
 	001e95c4 mov ax,0x0
 	001e95d0 ret

iLibrary_Interact$0:
	[001e95d4]
 	001e95d4 sourceline 0x2a60
 	001e95dc thisaddr
 	001e95e4 sourceline 0x2a61
 	001e95ec push op
*	001e95f4 mov mar,0xf5ef20
 	001e9600 mov ax,mar
 	001e960c farpush ax
 	001e9614 mov mar,0x81ef20
 	001e9620 mov ax,mar
 	001e962c mov op,ax
 	001e9634 setfuncargs 0x1
 	001e963c mov ax,0x996f20
 	001e9648 farcall ax
 	001e9650 farsubsp 0x1
 	001e9658 pop op
 	001e9660 jz 0x001e97a0
		001e97a0: CONDITIONAL_JUMP
		001e9668: FALL_THROUGH

	[001e9668]
		001e95d4: FALL_THROUGH
 	001e9668 sourceline 0x2a63
 	001e9670 mov ax,0x1
 	001e967c mov bx,ax
 	001e9688 mov mar,0x3cef20
 	001e9694 mov ax,mar
 	001e96a0 push op
 	001e96a8 mov op,ax
 	001e96b0 farpush bx
 	001e96b8 setfuncargs 0x1
 	001e96c0 mov ax,0x69ef20
 	001e96cc farcall ax
 	001e96d4 farsubsp 0x1
 	001e96dc pop op
 	001e96e4 sourceline 0x2a64
 	001e96ec push op
 	001e96f4 mov ax,0x2c717a
 	001e9700 farpush ax
 	001e9708 mov ax,0x138
 	001e9714 farpush ax
 	001e971c mov ax,0x92
 	001e9728 farpush ax
 	001e9730 mov ax,0x0
 	001e973c farpush ax
 	001e9744 mov mar,0x3cef20
 	001e9750 mov ax,mar
 	001e975c mov op,ax
 	001e9764 setfuncargs 0x4
 	001e976c mov ax,0x6aef20
 	001e9778 farcall ax
 	001e9780 farsubsp 0x4
 	001e9788 pop op
 	001e9790 sourceline 0x2a65
 	001e9798 jmp 0x001e98c8
		001e98c8: UNCONDITIONAL_JUMP

	[001e97a0]
		001e95d4: CONDITIONAL_JUMP
 	001e97a0 sourceline 0x2a68
 	001e97a8 push op
 	001e97b0 mov ax,0x2
 	001e97bc farpush ax
 	001e97c4 mov ax,0x86
 	001e97d0 farpush ax
 	001e97d8 mov ax,0x0
 	001e97e4 farpush ax
 	001e97ec mov ax,0xa
 	001e97f8 farpush ax
 	001e9800 mov mar,0x3cef20
 	001e980c mov ax,mar
 	001e9818 mov op,ax
 	001e9820 setfuncargs 0x4
 	001e9828 mov ax,0xc16f20
 	001e9834 farcall ax
 	001e983c farsubsp 0x4
 	001e9844 pop op
 	001e984c sourceline 0x2a69
 	001e9854 mov ax,0x0
 	001e9860 mov bx,ax
 	001e986c mov mar,0xfdef20
 	001e9878 mov ax,mar
 	001e9884 push op
 	001e988c mov op,ax
 	001e9894 farpush bx
 	001e989c setfuncargs 0x1
 	001e98a4 mov ax,0x3a6f20
 	001e98b0 farcall ax
 	001e98b8 farsubsp 0x1
 	001e98c0 pop op
		001e98c8: FALL_THROUGH

	[001e98c8]
		001e9668: UNCONDITIONAL_JUMP
		001e97a0: FALL_THROUGH
 	001e98c8 sourceline 0x2a6b
 	001e98d0 mov ax,0x0
 	001e98dc ret

iProcterFront_Interact$0:
	[001e98e0]
 	001e98e0 sourceline 0x2a6f
 	001e98e8 thisaddr
 	001e98f0 sourceline 0x2a70
 	001e98f8 push op
 	001e9900 mov ax,0x1
 	001e990c farpush ax
 	001e9914 mov ax,0x8f
 	001e9920 farpush ax
 	001e9928 mov ax,0x144
 	001e9934 farpush ax
 	001e993c mov ax,0xb
 	001e9948 farpush ax
*	001e9950 mov mar,0x3cef20
 	001e995c mov ax,mar
 	001e9968 mov op,ax
 	001e9970 setfuncargs 0x4
 	001e9978 mov ax,0xc16f20
 	001e9984 farcall ax
 	001e998c farsubsp 0x4
 	001e9994 pop op
 	001e999c sourceline 0x2a71
 	001e99a4 mov ax,0x0
 	001e99b0 mov bx,ax
 	001e99bc mov mar,0xfdef20
 	001e99c8 mov ax,mar
 	001e99d4 push op
 	001e99dc mov op,ax
 	001e99e4 farpush bx
 	001e99ec setfuncargs 0x1
 	001e99f4 mov ax,0x3a6f20
 	001e9a00 farcall ax
 	001e9a08 farsubsp 0x1
 	001e9a10 pop op
 	001e9a18 sourceline 0x2a72
 	001e9a20 mov ax,0x0
 	001e9a2c ret

iPharmacy_Interact$0:
	[001e9a30]
 	001e9a30 sourceline 0x2a77
 	001e9a38 thisaddr
 	001e9a40 sourceline 0x2a78
 	001e9a48 push op
 	001e9a50 mov ax,0x1
 	001e9a5c farpush ax
 	001e9a64 mov ax,0x8c
 	001e9a70 farpush ax
 	001e9a78 mov ax,0x154
 	001e9a84 farpush ax
 	001e9a8c mov ax,0xc
 	001e9a98 farpush ax
*	001e9aa0 mov mar,0x3cef20
 	001e9aac mov ax,mar
 	001e9ab8 mov op,ax
 	001e9ac0 setfuncargs 0x4
 	001e9ac8 mov ax,0xc16f20
 	001e9ad4 farcall ax
 	001e9adc farsubsp 0x4
 	001e9ae4 pop op
 	001e9aec sourceline 0x2a79
 	001e9af4 mov ax,0x0
 	001e9b00 mov bx,ax
 	001e9b0c mov mar,0xfdef20
 	001e9b18 mov ax,mar
 	001e9b24 push op
 	001e9b2c mov op,ax
 	001e9b34 farpush bx
 	001e9b3c setfuncargs 0x1
 	001e9b44 mov ax,0x3a6f20
 	001e9b50 farcall ax
 	001e9b58 farsubsp 0x1
 	001e9b60 pop op
 	001e9b68 sourceline 0x2a7a
 	001e9b70 mov ax,0x0
 	001e9b7c ret

iMikeApartment_Interact$0:
	[001e9b80]
 	001e9b80 sourceline 0x2a7f
 	001e9b88 thisaddr
 	001e9b90 sourceline 0x2a80
 	001e9b98 push op
 	001e9ba0 mov ax,0x0
 	001e9bac farpush ax
 	001e9bb4 mov ax,0x75
 	001e9bc0 farpush ax
 	001e9bc8 mov ax,0xaa
 	001e9bd4 farpush ax
 	001e9bdc mov ax,0xf
 	001e9be8 farpush ax
*	001e9bf0 mov mar,0x3cef20
 	001e9bfc mov ax,mar
 	001e9c08 mov op,ax
 	001e9c10 setfuncargs 0x4
 	001e9c18 mov ax,0xc16f20
 	001e9c24 farcall ax
 	001e9c2c farsubsp 0x4
 	001e9c34 pop op
 	001e9c3c sourceline 0x2a81
 	001e9c44 mov ax,0x0
 	001e9c50 mov bx,ax
 	001e9c5c mov mar,0xfdef20
 	001e9c68 mov ax,mar
 	001e9c74 push op
 	001e9c7c mov op,ax
 	001e9c84 farpush bx
 	001e9c8c setfuncargs 0x1
 	001e9c94 mov ax,0x3a6f20
 	001e9ca0 farcall ax
 	001e9ca8 farsubsp 0x1
 	001e9cb0 pop op
 	001e9cb8 sourceline 0x2a82
 	001e9cc0 mov ax,0x0
 	001e9ccc ret

iHut_Interact$0:
	[001e9cd0]
 	001e9cd0 sourceline 0x2a87
 	001e9cd8 thisaddr
 	001e9ce0 sourceline 0x2a88
 	001e9ce8 push op
 	001e9cf0 mov ax,0x2
 	001e9cfc farpush ax
 	001e9d04 mov ax,0x8d
 	001e9d10 farpush ax
 	001e9d18 mov ax,-0xa
 	001e9d24 farpush ax
 	001e9d2c mov ax,0x10
 	001e9d38 farpush ax
*	001e9d40 mov mar,0x3cef20
 	001e9d4c mov ax,mar
 	001e9d58 mov op,ax
 	001e9d60 setfuncargs 0x4
 	001e9d68 mov ax,0xc16f20
 	001e9d74 farcall ax
 	001e9d7c farsubsp 0x4
 	001e9d84 pop op
 	001e9d8c sourceline 0x2a89
 	001e9d94 mov ax,0x0
 	001e9da0 mov bx,ax
 	001e9dac mov mar,0xfdef20
 	001e9db8 mov ax,mar
 	001e9dc4 push op
 	001e9dcc mov op,ax
 	001e9dd4 farpush bx
 	001e9ddc setfuncargs 0x1
 	001e9de4 mov ax,0x3a6f20
 	001e9df0 farcall ax
 	001e9df8 farsubsp 0x1
 	001e9e00 pop op
 	001e9e08 sourceline 0x2a8a
 	001e9e10 mov ax,0x0
 	001e9e1c ret

iUniversity_Interact$0:
	[001e9e20]
 	001e9e20 sourceline 0x2a8f
 	001e9e28 thisaddr
 	001e9e30 sourceline 0x2a90
 	001e9e38 mov ax,0x2c71b5
 	001e9e44 farpush ax
 	001e9e4c setfuncargs 0x1
 	001e9e54 mov ax,0x7f6f20
 	001e9e60 farcall ax
 	001e9e68 farsubsp 0x1
 	001e9e70 jz 0x001e9f34
		001e9f34: CONDITIONAL_JUMP
		001e9e78: FALL_THROUGH

	[001e9e78]
		001e9e20: FALL_THROUGH
 	001e9e78 sourceline 0x2a92
 	001e9e80 push op
 	001e9e88 mov ax,0x3
 	001e9e94 farpush ax
 	001e9e9c mov ax,0xc7
 	001e9ea8 farpush ax
 	001e9eb0 mov ax,0x9d
 	001e9ebc farpush ax
 	001e9ec4 mov ax,0x13
 	001e9ed0 farpush ax
*	001e9ed8 mov mar,0x3cef20
 	001e9ee4 mov ax,mar
 	001e9ef0 mov op,ax
 	001e9ef8 setfuncargs 0x4
 	001e9f00 mov ax,0xc16f20
 	001e9f0c farcall ax
 	001e9f14 farsubsp 0x4
 	001e9f1c pop op
 	001e9f24 sourceline 0x2a93
 	001e9f2c jmp 0x001e9fe0
		001e9fe0: UNCONDITIONAL_JUMP

	[001e9f34]
		001e9e20: CONDITIONAL_JUMP
 	001e9f34 sourceline 0x2a96
 	001e9f3c push op
 	001e9f44 mov ax,0x1
 	001e9f50 farpush ax
 	001e9f58 mov ax,0x92
 	001e9f64 farpush ax
 	001e9f6c mov ax,0x154
 	001e9f78 farpush ax
 	001e9f80 mov ax,0x14
 	001e9f8c farpush ax
 	001e9f94 mov mar,0x3cef20
 	001e9fa0 mov ax,mar
 	001e9fac mov op,ax
 	001e9fb4 setfuncargs 0x4
 	001e9fbc mov ax,0xc16f20
 	001e9fc8 farcall ax
 	001e9fd0 farsubsp 0x4
 	001e9fd8 pop op
		001e9fe0: FALL_THROUGH

	[001e9fe0]
		001e9e78: UNCONDITIONAL_JUMP
		001e9f34: FALL_THROUGH
 	001e9fe0 sourceline 0x2a98
 	001e9fe8 mov ax,0x0
 	001e9ff4 mov bx,ax
 	001ea000 mov mar,0xfdef20
 	001ea00c mov ax,mar
 	001ea018 push op
 	001ea020 mov op,ax
 	001ea028 farpush bx
 	001ea030 setfuncargs 0x1
 	001ea038 mov ax,0x3a6f20
 	001ea044 farcall ax
 	001ea04c farsubsp 0x1
 	001ea054 pop op
 	001ea05c sourceline 0x2a99
 	001ea064 mov ax,0x0
 	001ea070 ret

iAirport_Interact$0:
	[001ea074]
 	001ea074 sourceline 0x2aa0
 	001ea07c thisaddr
 	001ea084 sourceline 0x2aa1
 	001ea08c mov ax,0x64
 	001ea098 mov bx,ax
*	001ea0a4 mov mar,0xe06f20
 	001ea0b0 mov ax,mar
 	001ea0bc push op
 	001ea0c4 mov op,ax
 	001ea0cc farpush bx
 	001ea0d4 setfuncargs 0x1
 	001ea0dc mov ax,0xfe6f20
 	001ea0e8 farcall ax
 	001ea0f0 farsubsp 0x1
 	001ea0f8 pop op
 	001ea100 sourceline 0x2aa2
 	001ea108 push op
 	001ea110 mov ax,0x1
 	001ea11c farpush ax
 	001ea124 mov ax,0x0
 	001ea130 farpush ax
 	001ea138 mov ax,0x1
 	001ea144 farpush ax
 	001ea14c mov ax,0x1
 	001ea158 farpush ax
 	001ea160 mov ax,0x0
 	001ea16c farpush ax
 	001ea174 mov ax,0x3f99999a
 	001ea180 farpush ax
 	001ea188 mov mar,0xe06f20
 	001ea194 mov ax,mar
 	001ea1a0 mov op,ax
 	001ea1a8 setfuncargs 0x6
 	001ea1b0 mov ax,0xe0ef20
 	001ea1bc farcall ax
 	001ea1c4 farsubsp 0x6
 	001ea1cc pop op
 	001ea1d4 sourceline 0x2aa3
 	001ea1dc mov ax,0x0
 	001ea1e8 mov bx,ax
 	001ea1f4 mov mar,0x336f20
 	001ea200 mov ax,mar
 	001ea20c farpush bx
 	001ea214 setfuncargs 0x1
 	001ea21c mov ax,0x43ef20
 	001ea228 farcall ax
 	001ea230 farsubsp 0x1
 	001ea238 sourceline 0x2aa4
 	001ea240 mov ax,0x1
 	001ea24c mov mar,0x5eef20
 	001ea258 memwrite4 ax
 	001ea260 sourceline 0x2aa5
 	001ea268 mov ax,0x0
 	001ea274 mov bx,ax
 	001ea280 mov mar,0xfdef20
 	001ea28c mov ax,mar
 	001ea298 push op
 	001ea2a0 mov op,ax
 	001ea2a8 farpush bx
 	001ea2b0 setfuncargs 0x1
 	001ea2b8 mov ax,0x3a6f20
 	001ea2c4 farcall ax
 	001ea2cc farsubsp 0x1
 	001ea2d4 pop op
 	001ea2dc sourceline 0x2aa6
 	001ea2e4 push op
 	001ea2ec mov ax,0x7cfe
 	001ea2f8 farpush ax
 	001ea300 mov ax,0x7cfe
 	001ea30c farpush ax
 	001ea314 mov ax,0x7cfe
 	001ea320 farpush ax
 	001ea328 mov ax,0x17
 	001ea334 farpush ax
 	001ea33c mov mar,0x3cef20
 	001ea348 mov ax,mar
 	001ea354 mov op,ax
 	001ea35c setfuncargs 0x4
 	001ea364 mov ax,0xc16f20
 	001ea370 farcall ax
 	001ea378 farsubsp 0x4
 	001ea380 pop op
 	001ea388 sourceline 0x2aa7
 	001ea390 mov ax,0x0
 	001ea39c ret

iDocks_Interact$0:
	[001ea3a0]
 	001ea3a0 sourceline 0x2aae
 	001ea3a8 thisaddr
 	001ea3b0 sourceline 0x2aaf
 	001ea3b8 push op
 	001ea3c0 mov ax,0x4
 	001ea3cc farpush ax
 	001ea3d4 mov ax,0x54
 	001ea3e0 farpush ax
 	001ea3e8 mov ax,-0xf
 	001ea3f4 farpush ax
 	001ea3fc mov ax,0x22
 	001ea408 farpush ax
*	001ea410 mov mar,0x3cef20
 	001ea41c mov ax,mar
 	001ea428 mov op,ax
 	001ea430 setfuncargs 0x4
 	001ea438 mov ax,0xc16f20
 	001ea444 farcall ax
 	001ea44c farsubsp 0x4
 	001ea454 pop op
 	001ea45c sourceline 0x2ab0
 	001ea464 mov ax,0x0
 	001ea470 mov bx,ax
 	001ea47c mov mar,0xfdef20
 	001ea488 mov ax,mar
 	001ea494 push op
 	001ea49c mov op,ax
 	001ea4a4 farpush bx
 	001ea4ac setfuncargs 0x1
 	001ea4b4 mov ax,0x3a6f20
 	001ea4c0 farcall ax
 	001ea4c8 farsubsp 0x1
 	001ea4d0 pop op
 	001ea4d8 sourceline 0x2ab1
 	001ea4e0 mov ax,0x0
 	001ea4ec ret

PlayRandomSoundFuturisticPuzzle$0:
	[001ea4f0]
 	001ea4f0 sourceline 0x2ab7
 	001ea4f8 thisaddr
 	001ea500 sourceline 0x2ab8
*	001ea508 mov mar,0xfeef20
 	001ea514 mov ax,mar
 	001ea520 push op
 	001ea528 mov op,ax
 	001ea530 setfuncargs 0x0
 	001ea538 mov ax,0xf7ef20
 	001ea544 farcall ax
 	001ea54c pop op
 	001ea554 push ax
 	001ea55c mov ax,0x98
 	001ea568 pop bx
 	001ea570 cmpeq bx,ax
 	001ea57c mov ax,bx
 	001ea588 jnz 0x001ea638
		001ea638: CONDITIONAL_JUMP
		001ea590: FALL_THROUGH

	[001ea590]
		001ea4f0: FALL_THROUGH
 	001ea590 push ax
 	001ea598 mov mar,0xff6f20
 	001ea5a4 mov ax,mar
 	001ea5b0 push op
 	001ea5b8 mov op,ax
 	001ea5c0 setfuncargs 0x0
 	001ea5c8 mov ax,0xf7ef20
 	001ea5d4 farcall ax
 	001ea5dc pop op
 	001ea5e4 push ax
 	001ea5ec mov ax,0x9a
 	001ea5f8 pop bx
 	001ea600 cmpeq bx,ax
 	001ea60c mov ax,bx
 	001ea618 pop bx
 	001ea620 lor bx,ax
 	001ea62c mov ax,bx
		001ea638: FALL_THROUGH

	[001ea638]
		001ea4f0: CONDITIONAL_JUMP
		001ea590: FALL_THROUGH
 	001ea638 jnz 0x001ea6e8
		001ea6e8: CONDITIONAL_JUMP
		001ea640: FALL_THROUGH

	[001ea640]
		001ea638: FALL_THROUGH
 	001ea640 push ax
 	001ea648 mov mar,0xffef20
 	001ea654 mov ax,mar
 	001ea660 push op
 	001ea668 mov op,ax
 	001ea670 setfuncargs 0x0
 	001ea678 mov ax,0xf7ef20
 	001ea684 farcall ax
 	001ea68c pop op
 	001ea694 push ax
 	001ea69c mov ax,0x9c
 	001ea6a8 pop bx
 	001ea6b0 cmpeq bx,ax
 	001ea6bc mov ax,bx
 	001ea6c8 pop bx
 	001ea6d0 lor bx,ax
 	001ea6dc mov ax,bx
		001ea6e8: FALL_THROUGH

	[001ea6e8]
		001ea638: CONDITIONAL_JUMP
		001ea640: FALL_THROUGH
 	001ea6e8 jnz 0x001ea798
		001ea798: CONDITIONAL_JUMP
		001ea6f0: FALL_THROUGH

	[001ea6f0]
		001ea6e8: FALL_THROUGH
 	001ea6f0 push ax
 	001ea6f8 mov mar,0x1006f20
 	001ea704 mov ax,mar
 	001ea710 push op
 	001ea718 mov op,ax
 	001ea720 setfuncargs 0x0
 	001ea728 mov ax,0xf7ef20
 	001ea734 farcall ax
 	001ea73c pop op
 	001ea744 push ax
 	001ea74c mov ax,0x9e
 	001ea758 pop bx
 	001ea760 cmpeq bx,ax
 	001ea76c mov ax,bx
 	001ea778 pop bx
 	001ea780 lor bx,ax
 	001ea78c mov ax,bx
		001ea798: FALL_THROUGH

	[001ea798]
		001ea6e8: CONDITIONAL_JUMP
		001ea6f0: FALL_THROUGH
 	001ea798 jnz 0x001ea848
		001ea848: CONDITIONAL_JUMP
		001ea7a0: FALL_THROUGH

	[001ea7a0]
		001ea798: FALL_THROUGH
 	001ea7a0 push ax
 	001ea7a8 mov mar,0x100ef20
 	001ea7b4 mov ax,mar
 	001ea7c0 push op
 	001ea7c8 mov op,ax
 	001ea7d0 setfuncargs 0x0
 	001ea7d8 mov ax,0xf7ef20
 	001ea7e4 farcall ax
 	001ea7ec pop op
 	001ea7f4 push ax
 	001ea7fc mov ax,0xa0
 	001ea808 pop bx
 	001ea810 cmpeq bx,ax
 	001ea81c mov ax,bx
 	001ea828 pop bx
 	001ea830 lor bx,ax
 	001ea83c mov ax,bx
		001ea848: FALL_THROUGH

	[001ea848]
		001ea798: CONDITIONAL_JUMP
		001ea7a0: FALL_THROUGH
 	001ea848 jnz 0x001ea8f8
		001ea8f8: CONDITIONAL_JUMP
		001ea850: FALL_THROUGH

	[001ea850]
		001ea848: FALL_THROUGH
 	001ea850 push ax
 	001ea858 mov mar,0x1016f20
 	001ea864 mov ax,mar
 	001ea870 push op
 	001ea878 mov op,ax
 	001ea880 setfuncargs 0x0
 	001ea888 mov ax,0xf7ef20
 	001ea894 farcall ax
 	001ea89c pop op
 	001ea8a4 push ax
 	001ea8ac mov ax,0xa2
 	001ea8b8 pop bx
 	001ea8c0 cmpeq bx,ax
 	001ea8cc mov ax,bx
 	001ea8d8 pop bx
 	001ea8e0 lor bx,ax
 	001ea8ec mov ax,bx
		001ea8f8: FALL_THROUGH

	[001ea8f8]
		001ea848: CONDITIONAL_JUMP
		001ea850: FALL_THROUGH
 	001ea8f8 jnz 0x001ea9a8
		001ea9a8: CONDITIONAL_JUMP
		001ea900: FALL_THROUGH

	[001ea900]
		001ea8f8: FALL_THROUGH
 	001ea900 push ax
 	001ea908 mov mar,0x101ef20
 	001ea914 mov ax,mar
 	001ea920 push op
 	001ea928 mov op,ax
 	001ea930 setfuncargs 0x0
 	001ea938 mov ax,0xf7ef20
 	001ea944 farcall ax
 	001ea94c pop op
 	001ea954 push ax
 	001ea95c mov ax,0xa4
 	001ea968 pop bx
 	001ea970 cmpeq bx,ax
 	001ea97c mov ax,bx
 	001ea988 pop bx
 	001ea990 lor bx,ax
 	001ea99c mov ax,bx
		001ea9a8: FALL_THROUGH

	[001ea9a8]
		001ea8f8: CONDITIONAL_JUMP
		001ea900: FALL_THROUGH
 	001ea9a8 jnz 0x001eaa58
		001eaa58: CONDITIONAL_JUMP
		001ea9b0: FALL_THROUGH

	[001ea9b0]
		001ea9a8: FALL_THROUGH
 	001ea9b0 push ax
 	001ea9b8 mov mar,0x1026f20
 	001ea9c4 mov ax,mar
 	001ea9d0 push op
 	001ea9d8 mov op,ax
 	001ea9e0 setfuncargs 0x0
 	001ea9e8 mov ax,0xf7ef20
 	001ea9f4 farcall ax
 	001ea9fc pop op
 	001eaa04 push ax
 	001eaa0c mov ax,0xa6
 	001eaa18 pop bx
 	001eaa20 cmpeq bx,ax
 	001eaa2c mov ax,bx
 	001eaa38 pop bx
 	001eaa40 lor bx,ax
 	001eaa4c mov ax,bx
		001eaa58: FALL_THROUGH

	[001eaa58]
		001ea9a8: CONDITIONAL_JUMP
		001ea9b0: FALL_THROUGH
 	001eaa58 jnz 0x001eab08
		001eab08: CONDITIONAL_JUMP
		001eaa60: FALL_THROUGH

	[001eaa60]
		001eaa58: FALL_THROUGH
 	001eaa60 push ax
 	001eaa68 mov mar,0x102ef20
 	001eaa74 mov ax,mar
 	001eaa80 push op
 	001eaa88 mov op,ax
 	001eaa90 setfuncargs 0x0
 	001eaa98 mov ax,0xf7ef20
 	001eaaa4 farcall ax
 	001eaaac pop op
 	001eaab4 push ax
 	001eaabc mov ax,0xa8
 	001eaac8 pop bx
 	001eaad0 cmpeq bx,ax
 	001eaadc mov ax,bx
 	001eaae8 pop bx
 	001eaaf0 lor bx,ax
 	001eaafc mov ax,bx
		001eab08: FALL_THROUGH

	[001eab08]
		001eaa58: CONDITIONAL_JUMP
		001eaa60: FALL_THROUGH
 	001eab08 jz 0x001ead4c
		001ead4c: CONDITIONAL_JUMP
		001eab10: FALL_THROUGH

	[001eab10]
		001eab08: FALL_THROUGH
 	001eab10 sourceline 0x2abc
 	001eab18 mov mar,0x1036f20
 	001eab24 memread4 ax
 	001eab2c push ax
 	001eab34 mov ax,0x0
 	001eab40 pop bx
 	001eab48 cmpeq bx,ax
 	001eab54 mov ax,bx
 	001eab60 jz 0x001eabec
		001eabec: CONDITIONAL_JUMP
		001eab68: FALL_THROUGH

	[001eab68]
		001eab10: FALL_THROUGH
 	001eab68 push op
 	001eab70 mov ax,0x0
 	001eab7c farpush ax
 	001eab84 mov ax,0x32
 	001eab90 farpush ax
 	001eab98 mov mar,0x103ef20
 	001eaba4 mov ax,mar
 	001eabb0 mov op,ax
 	001eabb8 setfuncargs 0x2
 	001eabc0 mov ax,0x2fef20
 	001eabcc farcall ax
 	001eabd4 farsubsp 0x2
 	001eabdc pop op
 	001eabe4 jmp 0x001ead4c
		001ead4c: UNCONDITIONAL_JUMP

	[001eabec]
		001eab10: CONDITIONAL_JUMP
 	001eabec sourceline 0x2abd
 	001eabf4 mov mar,0x1036f20
 	001eac00 memread4 ax
 	001eac08 push ax
 	001eac10 mov ax,0x1
 	001eac1c pop bx
 	001eac24 cmpeq bx,ax
 	001eac30 mov ax,bx
 	001eac3c jz 0x001eacc8
		001eacc8: CONDITIONAL_JUMP
		001eac44: FALL_THROUGH

	[001eac44]
		001eabec: FALL_THROUGH
 	001eac44 push op
 	001eac4c mov ax,0x0
 	001eac58 farpush ax
 	001eac60 mov ax,0x32
 	001eac6c farpush ax
 	001eac74 mov mar,0x1046f20
 	001eac80 mov ax,mar
 	001eac8c mov op,ax
 	001eac94 setfuncargs 0x2
 	001eac9c mov ax,0x2fef20
 	001eaca8 farcall ax
 	001eacb0 farsubsp 0x2
 	001eacb8 pop op
 	001eacc0 jmp 0x001ead4c
		001ead4c: UNCONDITIONAL_JUMP

	[001eacc8]
		001eabec: CONDITIONAL_JUMP
 	001eacc8 sourceline 0x2abe
 	001eacd0 push op
 	001eacd8 mov ax,0x0
 	001eace4 farpush ax
 	001eacec mov ax,0x32
 	001eacf8 farpush ax
 	001ead00 mov mar,0x104ef20
 	001ead0c mov ax,mar
 	001ead18 mov op,ax
 	001ead20 setfuncargs 0x2
 	001ead28 mov ax,0x2fef20
 	001ead34 farcall ax
 	001ead3c farsubsp 0x2
 	001ead44 pop op
		001ead4c: FALL_THROUGH

	[001ead4c]
		001eab08: CONDITIONAL_JUMP
		001eab68: UNCONDITIONAL_JUMP
		001eac44: UNCONDITIONAL_JUMP
		001eacc8: FALL_THROUGH
 	001ead4c sourceline 0x2ac0
 	001ead54 mov ax,0x0
 	001ead60 ret

btnTopLeft_OnClick$2:
	[001ead64]
 	001ead64 sourceline 0x2ac8
 	001ead6c thisaddr
 	001ead74 stackptr 0x8
 	001ead7c memread4 ax
 	001ead84 meminit ax
 	001ead8c sourceline 0x2ac9
 	001ead94 stackptr 0xc
 	001ead9c memread4 ax
 	001eada4 push ax
 	001eadac mov ax,0x1
 	001eadb8 pop bx
 	001eadc0 cmpeq bx,ax
 	001eadcc mov ax,bx
 	001eadd8 jz 0x001edad8
		001edad8: CONDITIONAL_JUMP
		001eade0: FALL_THROUGH

	[001eade0]
		001ead64: FALL_THROUGH
 	001eade0 sourceline 0x2acb
*	001eade8 mov mar,0x1056f20
 	001eadf4 memread4 ax
 	001eadfc push ax
 	001eae04 mov mar,0x105ef20
 	001eae10 memread4 ax
 	001eae18 pop bx
 	001eae20 add bx,ax
 	001eae2c mov ax,bx
 	001eae38 push ax
 	001eae40 mov ax,0x14
 	001eae4c pop bx
 	001eae54 cmplt bx,ax
 	001eae60 mov ax,bx
 	001eae6c jz 0x001eae90
		001eae90: CONDITIONAL_JUMP
		001eae74: FALL_THROUGH

	[001eae74]
		001eade0: FALL_THROUGH
 	001eae74 mov ax,0x0
 	001eae80 stackptr 0x8
 	001eae88 memzerond
 	001eae8c ret

	[001eae90]
		001eade0: CONDITIONAL_JUMP
 	001eae90 sourceline 0x2acc
 	001eae98 mov mar,0x626f20
 	001eaea4 mov ax,mar
 	001eaeb0 push op
 	001eaeb8 mov op,ax
 	001eaec0 setfuncargs 0x0
 	001eaec8 mov ax,0x606f20
 	001eaed4 farcall ax
 	001eaedc pop op
 	001eaee4 jz 0x001ed984
		001ed984: CONDITIONAL_JUMP
		001eaeec: FALL_THROUGH

	[001eaeec]
		001eae90: FALL_THROUGH
 	001eaeec sourceline 0x2ace
 	001eaef4 mov mar,0x100000
 	001eaf00 memread4 ax
 	001eaf08 lnot ax
 	001eaf10 jz 0x001eaf5c
		001eaf5c: CONDITIONAL_JUMP
		001eaf18: FALL_THROUGH

	[001eaf18]
		001eaeec: FALL_THROUGH
 	001eaf18 push ax
 	001eaf20 mov mar,0x100004
 	001eaf2c memread4 ax
 	001eaf34 lnot ax
 	001eaf3c pop bx
 	001eaf44 land bx,ax
 	001eaf50 mov ax,bx
		001eaf5c: FALL_THROUGH

	[001eaf5c]
		001eaeec: CONDITIONAL_JUMP
		001eaf18: FALL_THROUGH
 	001eaf5c jz 0x001eafa8
		001eafa8: CONDITIONAL_JUMP
		001eaf64: FALL_THROUGH

	[001eaf64]
		001eaf5c: FALL_THROUGH
 	001eaf64 push ax
 	001eaf6c mov mar,0x100008
 	001eaf78 memread4 ax
 	001eaf80 lnot ax
 	001eaf88 pop bx
 	001eaf90 land bx,ax
 	001eaf9c mov ax,bx
		001eafa8: FALL_THROUGH

	[001eafa8]
		001eaf5c: CONDITIONAL_JUMP
		001eaf64: FALL_THROUGH
 	001eafa8 jz 0x001eaff4
		001eaff4: CONDITIONAL_JUMP
		001eafb0: FALL_THROUGH

	[001eafb0]
		001eafa8: FALL_THROUGH
 	001eafb0 push ax
 	001eafb8 mov mar,0x10000c
 	001eafc4 memread4 ax
 	001eafcc lnot ax
 	001eafd4 pop bx
 	001eafdc land bx,ax
 	001eafe8 mov ax,bx
		001eaff4: FALL_THROUGH

	[001eaff4]
		001eafa8: CONDITIONAL_JUMP
		001eafb0: FALL_THROUGH
 	001eaff4 jz 0x001eb040
		001eb040: CONDITIONAL_JUMP
		001eaffc: FALL_THROUGH

	[001eaffc]
		001eaff4: FALL_THROUGH
 	001eaffc push ax
 	001eb004 mov mar,0x100010
 	001eb010 memread4 ax
 	001eb018 lnot ax
 	001eb020 pop bx
 	001eb028 land bx,ax
 	001eb034 mov ax,bx
		001eb040: FALL_THROUGH

	[001eb040]
		001eaff4: CONDITIONAL_JUMP
		001eaffc: FALL_THROUGH
 	001eb040 jz 0x001eb08c
		001eb08c: CONDITIONAL_JUMP
		001eb048: FALL_THROUGH

	[001eb048]
		001eb040: FALL_THROUGH
 	001eb048 push ax
 	001eb050 mov mar,0x100014
 	001eb05c memread4 ax
 	001eb064 lnot ax
 	001eb06c pop bx
 	001eb074 land bx,ax
 	001eb080 mov ax,bx
		001eb08c: FALL_THROUGH

	[001eb08c]
		001eb040: CONDITIONAL_JUMP
		001eb048: FALL_THROUGH
 	001eb08c jz 0x001eb0d8
		001eb0d8: CONDITIONAL_JUMP
		001eb094: FALL_THROUGH

	[001eb094]
		001eb08c: FALL_THROUGH
 	001eb094 push ax
 	001eb09c mov mar,0x100018
 	001eb0a8 memread4 ax
 	001eb0b0 lnot ax
 	001eb0b8 pop bx
 	001eb0c0 land bx,ax
 	001eb0cc mov ax,bx
		001eb0d8: FALL_THROUGH

	[001eb0d8]
		001eb08c: CONDITIONAL_JUMP
		001eb094: FALL_THROUGH
 	001eb0d8 jz 0x001eb124
		001eb124: CONDITIONAL_JUMP
		001eb0e0: FALL_THROUGH

	[001eb0e0]
		001eb0d8: FALL_THROUGH
 	001eb0e0 push ax
 	001eb0e8 mov mar,0x10001c
 	001eb0f4 memread4 ax
 	001eb0fc lnot ax
 	001eb104 pop bx
 	001eb10c land bx,ax
 	001eb118 mov ax,bx
		001eb124: FALL_THROUGH

	[001eb124]
		001eb0d8: CONDITIONAL_JUMP
		001eb0e0: FALL_THROUGH
 	001eb124 jz 0x001eb170
		001eb170: CONDITIONAL_JUMP
		001eb12c: FALL_THROUGH

	[001eb12c]
		001eb124: FALL_THROUGH
 	001eb12c push ax
 	001eb134 mov mar,0x100020
 	001eb140 memread4 ax
 	001eb148 lnot ax
 	001eb150 pop bx
 	001eb158 land bx,ax
 	001eb164 mov ax,bx
		001eb170: FALL_THROUGH

	[001eb170]
		001eb124: CONDITIONAL_JUMP
		001eb12c: FALL_THROUGH
 	001eb170 jz 0x001eb1bc
		001eb1bc: CONDITIONAL_JUMP
		001eb178: FALL_THROUGH

	[001eb178]
		001eb170: FALL_THROUGH
 	001eb178 push ax
 	001eb180 mov mar,0x100024
 	001eb18c memread4 ax
 	001eb194 lnot ax
 	001eb19c pop bx
 	001eb1a4 land bx,ax
 	001eb1b0 mov ax,bx
		001eb1bc: FALL_THROUGH

	[001eb1bc]
		001eb170: CONDITIONAL_JUMP
		001eb178: FALL_THROUGH
 	001eb1bc jz 0x001eb208
		001eb208: CONDITIONAL_JUMP
		001eb1c4: FALL_THROUGH

	[001eb1c4]
		001eb1bc: FALL_THROUGH
 	001eb1c4 push ax
 	001eb1cc mov mar,0x100028
 	001eb1d8 memread4 ax
 	001eb1e0 lnot ax
 	001eb1e8 pop bx
 	001eb1f0 land bx,ax
 	001eb1fc mov ax,bx
		001eb208: FALL_THROUGH

	[001eb208]
		001eb1bc: CONDITIONAL_JUMP
		001eb1c4: FALL_THROUGH
 	001eb208 jz 0x001eb254
		001eb254: CONDITIONAL_JUMP
		001eb210: FALL_THROUGH

	[001eb210]
		001eb208: FALL_THROUGH
 	001eb210 push ax
 	001eb218 mov mar,0x10002c
 	001eb224 memread4 ax
 	001eb22c lnot ax
 	001eb234 pop bx
 	001eb23c land bx,ax
 	001eb248 mov ax,bx
		001eb254: FALL_THROUGH

	[001eb254]
		001eb208: CONDITIONAL_JUMP
		001eb210: FALL_THROUGH
 	001eb254 jz 0x001eb2a4
		001eb2a4: CONDITIONAL_JUMP
		001eb25c: FALL_THROUGH

	[001eb25c]
		001eb254: FALL_THROUGH
 	001eb25c mov ax,0x1
 	001eb268 mov mar,0x100000
 	001eb274 memwrite4 ax
 	001eb27c mov ax,0x1
 	001eb288 mov mar,0x1000ac
 	001eb294 memwrite4 ax
 	001eb29c jmp 0x001ed974
		001ed974: UNCONDITIONAL_JUMP

	[001eb2a4]
		001eb254: CONDITIONAL_JUMP
 	001eb2a4 sourceline 0x2ad3
 	001eb2ac mov mar,0x100000
 	001eb2b8 memread4 ax
 	001eb2c0 jz 0x001eb30c
		001eb30c: CONDITIONAL_JUMP
		001eb2c8: FALL_THROUGH

	[001eb2c8]
		001eb2a4: FALL_THROUGH
 	001eb2c8 push ax
 	001eb2d0 mov mar,0x100004
 	001eb2dc memread4 ax
 	001eb2e4 lnot ax
 	001eb2ec pop bx
 	001eb2f4 land bx,ax
 	001eb300 mov ax,bx
		001eb30c: FALL_THROUGH

	[001eb30c]
		001eb2a4: CONDITIONAL_JUMP
		001eb2c8: FALL_THROUGH
 	001eb30c jz 0x001eb358
		001eb358: CONDITIONAL_JUMP
		001eb314: FALL_THROUGH

	[001eb314]
		001eb30c: FALL_THROUGH
 	001eb314 push ax
 	001eb31c mov mar,0x100008
 	001eb328 memread4 ax
 	001eb330 lnot ax
 	001eb338 pop bx
 	001eb340 land bx,ax
 	001eb34c mov ax,bx
		001eb358: FALL_THROUGH

	[001eb358]
		001eb30c: CONDITIONAL_JUMP
		001eb314: FALL_THROUGH
 	001eb358 jz 0x001eb3a4
		001eb3a4: CONDITIONAL_JUMP
		001eb360: FALL_THROUGH

	[001eb360]
		001eb358: FALL_THROUGH
 	001eb360 push ax
 	001eb368 mov mar,0x10000c
 	001eb374 memread4 ax
 	001eb37c lnot ax
 	001eb384 pop bx
 	001eb38c land bx,ax
 	001eb398 mov ax,bx
		001eb3a4: FALL_THROUGH

	[001eb3a4]
		001eb358: CONDITIONAL_JUMP
		001eb360: FALL_THROUGH
 	001eb3a4 jz 0x001eb3f0
		001eb3f0: CONDITIONAL_JUMP
		001eb3ac: FALL_THROUGH

	[001eb3ac]
		001eb3a4: FALL_THROUGH
 	001eb3ac push ax
 	001eb3b4 mov mar,0x100010
 	001eb3c0 memread4 ax
 	001eb3c8 lnot ax
 	001eb3d0 pop bx
 	001eb3d8 land bx,ax
 	001eb3e4 mov ax,bx
		001eb3f0: FALL_THROUGH

	[001eb3f0]
		001eb3a4: CONDITIONAL_JUMP
		001eb3ac: FALL_THROUGH
 	001eb3f0 jz 0x001eb43c
		001eb43c: CONDITIONAL_JUMP
		001eb3f8: FALL_THROUGH

	[001eb3f8]
		001eb3f0: FALL_THROUGH
 	001eb3f8 push ax
 	001eb400 mov mar,0x100014
 	001eb40c memread4 ax
 	001eb414 lnot ax
 	001eb41c pop bx
 	001eb424 land bx,ax
 	001eb430 mov ax,bx
		001eb43c: FALL_THROUGH

	[001eb43c]
		001eb3f0: CONDITIONAL_JUMP
		001eb3f8: FALL_THROUGH
 	001eb43c jz 0x001eb488
		001eb488: CONDITIONAL_JUMP
		001eb444: FALL_THROUGH

	[001eb444]
		001eb43c: FALL_THROUGH
 	001eb444 push ax
 	001eb44c mov mar,0x100018
 	001eb458 memread4 ax
 	001eb460 lnot ax
 	001eb468 pop bx
 	001eb470 land bx,ax
 	001eb47c mov ax,bx
		001eb488: FALL_THROUGH

	[001eb488]
		001eb43c: CONDITIONAL_JUMP
		001eb444: FALL_THROUGH
 	001eb488 jz 0x001eb4d4
		001eb4d4: CONDITIONAL_JUMP
		001eb490: FALL_THROUGH

	[001eb490]
		001eb488: FALL_THROUGH
 	001eb490 push ax
 	001eb498 mov mar,0x10001c
 	001eb4a4 memread4 ax
 	001eb4ac lnot ax
 	001eb4b4 pop bx
 	001eb4bc land bx,ax
 	001eb4c8 mov ax,bx
		001eb4d4: FALL_THROUGH

	[001eb4d4]
		001eb488: CONDITIONAL_JUMP
		001eb490: FALL_THROUGH
 	001eb4d4 jz 0x001eb520
		001eb520: CONDITIONAL_JUMP
		001eb4dc: FALL_THROUGH

	[001eb4dc]
		001eb4d4: FALL_THROUGH
 	001eb4dc push ax
 	001eb4e4 mov mar,0x100020
 	001eb4f0 memread4 ax
 	001eb4f8 lnot ax
 	001eb500 pop bx
 	001eb508 land bx,ax
 	001eb514 mov ax,bx
		001eb520: FALL_THROUGH

	[001eb520]
		001eb4d4: CONDITIONAL_JUMP
		001eb4dc: FALL_THROUGH
 	001eb520 jz 0x001eb56c
		001eb56c: CONDITIONAL_JUMP
		001eb528: FALL_THROUGH

	[001eb528]
		001eb520: FALL_THROUGH
 	001eb528 push ax
 	001eb530 mov mar,0x100024
 	001eb53c memread4 ax
 	001eb544 lnot ax
 	001eb54c pop bx
 	001eb554 land bx,ax
 	001eb560 mov ax,bx
		001eb56c: FALL_THROUGH

	[001eb56c]
		001eb520: CONDITIONAL_JUMP
		001eb528: FALL_THROUGH
 	001eb56c jz 0x001eb5b8
		001eb5b8: CONDITIONAL_JUMP
		001eb574: FALL_THROUGH

	[001eb574]
		001eb56c: FALL_THROUGH
 	001eb574 push ax
 	001eb57c mov mar,0x100028
 	001eb588 memread4 ax
 	001eb590 lnot ax
 	001eb598 pop bx
 	001eb5a0 land bx,ax
 	001eb5ac mov ax,bx
		001eb5b8: FALL_THROUGH

	[001eb5b8]
		001eb56c: CONDITIONAL_JUMP
		001eb574: FALL_THROUGH
 	001eb5b8 jz 0x001eb604
		001eb604: CONDITIONAL_JUMP
		001eb5c0: FALL_THROUGH

	[001eb5c0]
		001eb5b8: FALL_THROUGH
 	001eb5c0 push ax
 	001eb5c8 mov mar,0x10002c
 	001eb5d4 memread4 ax
 	001eb5dc lnot ax
 	001eb5e4 pop bx
 	001eb5ec land bx,ax
 	001eb5f8 mov ax,bx
		001eb604: FALL_THROUGH

	[001eb604]
		001eb5b8: CONDITIONAL_JUMP
		001eb5c0: FALL_THROUGH
 	001eb604 jz 0x001eb654
		001eb654: CONDITIONAL_JUMP
		001eb60c: FALL_THROUGH

	[001eb60c]
		001eb604: FALL_THROUGH
 	001eb60c mov ax,0x1
 	001eb618 mov mar,0x100004
 	001eb624 memwrite4 ax
 	001eb62c mov ax,0x1
 	001eb638 mov mar,0x1000b0
 	001eb644 memwrite4 ax
 	001eb64c jmp 0x001ed974
		001ed974: UNCONDITIONAL_JUMP

	[001eb654]
		001eb604: CONDITIONAL_JUMP
 	001eb654 sourceline 0x2ad8
 	001eb65c mov mar,0x100000
 	001eb668 memread4 ax
 	001eb670 jz 0x001eb6b4
		001eb6b4: CONDITIONAL_JUMP
		001eb678: FALL_THROUGH

	[001eb678]
		001eb654: FALL_THROUGH
 	001eb678 push ax
 	001eb680 mov mar,0x100004
 	001eb68c memread4 ax
 	001eb694 pop bx
 	001eb69c land bx,ax
 	001eb6a8 mov ax,bx
		001eb6b4: FALL_THROUGH

	[001eb6b4]
		001eb654: CONDITIONAL_JUMP
		001eb678: FALL_THROUGH
 	001eb6b4 jz 0x001eb700
		001eb700: CONDITIONAL_JUMP
		001eb6bc: FALL_THROUGH

	[001eb6bc]
		001eb6b4: FALL_THROUGH
 	001eb6bc push ax
 	001eb6c4 mov mar,0x100008
 	001eb6d0 memread4 ax
 	001eb6d8 lnot ax
 	001eb6e0 pop bx
 	001eb6e8 land bx,ax
 	001eb6f4 mov ax,bx
		001eb700: FALL_THROUGH

	[001eb700]
		001eb6b4: CONDITIONAL_JUMP
		001eb6bc: FALL_THROUGH
 	001eb700 jz 0x001eb74c
		001eb74c: CONDITIONAL_JUMP
		001eb708: FALL_THROUGH

	[001eb708]
		001eb700: FALL_THROUGH
 	001eb708 push ax
 	001eb710 mov mar,0x10000c
 	001eb71c memread4 ax
 	001eb724 lnot ax
 	001eb72c pop bx
 	001eb734 land bx,ax
 	001eb740 mov ax,bx
		001eb74c: FALL_THROUGH

	[001eb74c]
		001eb700: CONDITIONAL_JUMP
		001eb708: FALL_THROUGH
 	001eb74c jz 0x001eb798
		001eb798: CONDITIONAL_JUMP
		001eb754: FALL_THROUGH

	[001eb754]
		001eb74c: FALL_THROUGH
 	001eb754 push ax
 	001eb75c mov mar,0x100010
 	001eb768 memread4 ax
 	001eb770 lnot ax
 	001eb778 pop bx
 	001eb780 land bx,ax
 	001eb78c mov ax,bx
		001eb798: FALL_THROUGH

	[001eb798]
		001eb74c: CONDITIONAL_JUMP
		001eb754: FALL_THROUGH
 	001eb798 jz 0x001eb7e4
		001eb7e4: CONDITIONAL_JUMP
		001eb7a0: FALL_THROUGH

	[001eb7a0]
		001eb798: FALL_THROUGH
 	001eb7a0 push ax
 	001eb7a8 mov mar,0x100014
 	001eb7b4 memread4 ax
 	001eb7bc lnot ax
 	001eb7c4 pop bx
 	001eb7cc land bx,ax
 	001eb7d8 mov ax,bx
		001eb7e4: FALL_THROUGH

	[001eb7e4]
		001eb798: CONDITIONAL_JUMP
		001eb7a0: FALL_THROUGH
 	001eb7e4 jz 0x001eb830
		001eb830: CONDITIONAL_JUMP
		001eb7ec: FALL_THROUGH

	[001eb7ec]
		001eb7e4: FALL_THROUGH
 	001eb7ec push ax
 	001eb7f4 mov mar,0x100018
 	001eb800 memread4 ax
 	001eb808 lnot ax
 	001eb810 pop bx
 	001eb818 land bx,ax
 	001eb824 mov ax,bx
		001eb830: FALL_THROUGH

	[001eb830]
		001eb7e4: CONDITIONAL_JUMP
		001eb7ec: FALL_THROUGH
 	001eb830 jz 0x001eb87c
		001eb87c: CONDITIONAL_JUMP
		001eb838: FALL_THROUGH

	[001eb838]
		001eb830: FALL_THROUGH
 	001eb838 push ax
 	001eb840 mov mar,0x10001c
 	001eb84c memread4 ax
 	001eb854 lnot ax
 	001eb85c pop bx
 	001eb864 land bx,ax
 	001eb870 mov ax,bx
		001eb87c: FALL_THROUGH

	[001eb87c]
		001eb830: CONDITIONAL_JUMP
		001eb838: FALL_THROUGH
 	001eb87c jz 0x001eb8c8
		001eb8c8: CONDITIONAL_JUMP
		001eb884: FALL_THROUGH

	[001eb884]
		001eb87c: FALL_THROUGH
 	001eb884 push ax
 	001eb88c mov mar,0x100020
 	001eb898 memread4 ax
 	001eb8a0 lnot ax
 	001eb8a8 pop bx
 	001eb8b0 land bx,ax
 	001eb8bc mov ax,bx
		001eb8c8: FALL_THROUGH

	[001eb8c8]
		001eb87c: CONDITIONAL_JUMP
		001eb884: FALL_THROUGH
 	001eb8c8 jz 0x001eb914
		001eb914: CONDITIONAL_JUMP
		001eb8d0: FALL_THROUGH

	[001eb8d0]
		001eb8c8: FALL_THROUGH
 	001eb8d0 push ax
 	001eb8d8 mov mar,0x100024
 	001eb8e4 memread4 ax
 	001eb8ec lnot ax
 	001eb8f4 pop bx
 	001eb8fc land bx,ax
 	001eb908 mov ax,bx
		001eb914: FALL_THROUGH

	[001eb914]
		001eb8c8: CONDITIONAL_JUMP
		001eb8d0: FALL_THROUGH
 	001eb914 jz 0x001eb960
		001eb960: CONDITIONAL_JUMP
		001eb91c: FALL_THROUGH

	[001eb91c]
		001eb914: FALL_THROUGH
 	001eb91c push ax
 	001eb924 mov mar,0x100028
 	001eb930 memread4 ax
 	001eb938 lnot ax
 	001eb940 pop bx
 	001eb948 land bx,ax
 	001eb954 mov ax,bx
		001eb960: FALL_THROUGH

	[001eb960]
		001eb914: CONDITIONAL_JUMP
		001eb91c: FALL_THROUGH
 	001eb960 jz 0x001eb9ac
		001eb9ac: CONDITIONAL_JUMP
		001eb968: FALL_THROUGH

	[001eb968]
		001eb960: FALL_THROUGH
 	001eb968 push ax
 	001eb970 mov mar,0x10002c
 	001eb97c memread4 ax
 	001eb984 lnot ax
 	001eb98c pop bx
 	001eb994 land bx,ax
 	001eb9a0 mov ax,bx
		001eb9ac: FALL_THROUGH

	[001eb9ac]
		001eb960: CONDITIONAL_JUMP
		001eb968: FALL_THROUGH
 	001eb9ac jz 0x001eb9fc
		001eb9fc: CONDITIONAL_JUMP
		001eb9b4: FALL_THROUGH

	[001eb9b4]
		001eb9ac: FALL_THROUGH
 	001eb9b4 mov ax,0x1
 	001eb9c0 mov mar,0x100008
 	001eb9cc memwrite4 ax
 	001eb9d4 mov ax,0x1
 	001eb9e0 mov mar,0x1000b4
 	001eb9ec memwrite4 ax
 	001eb9f4 jmp 0x001ed974
		001ed974: UNCONDITIONAL_JUMP

	[001eb9fc]
		001eb9ac: CONDITIONAL_JUMP
 	001eb9fc sourceline 0x2add
 	001eba04 mov mar,0x100000
 	001eba10 memread4 ax
 	001eba18 jz 0x001eba5c
		001eba5c: CONDITIONAL_JUMP
		001eba20: FALL_THROUGH

	[001eba20]
		001eb9fc: FALL_THROUGH
 	001eba20 push ax
 	001eba28 mov mar,0x100004
 	001eba34 memread4 ax
 	001eba3c pop bx
 	001eba44 land bx,ax
 	001eba50 mov ax,bx
		001eba5c: FALL_THROUGH

	[001eba5c]
		001eb9fc: CONDITIONAL_JUMP
		001eba20: FALL_THROUGH
 	001eba5c jz 0x001ebaa0
		001ebaa0: CONDITIONAL_JUMP
		001eba64: FALL_THROUGH

	[001eba64]
		001eba5c: FALL_THROUGH
 	001eba64 push ax
 	001eba6c mov mar,0x100008
 	001eba78 memread4 ax
 	001eba80 pop bx
 	001eba88 land bx,ax
 	001eba94 mov ax,bx
		001ebaa0: FALL_THROUGH

	[001ebaa0]
		001eba5c: CONDITIONAL_JUMP
		001eba64: FALL_THROUGH
 	001ebaa0 jz 0x001ebaec
		001ebaec: CONDITIONAL_JUMP
		001ebaa8: FALL_THROUGH

	[001ebaa8]
		001ebaa0: FALL_THROUGH
 	001ebaa8 push ax
 	001ebab0 mov mar,0x10000c
 	001ebabc memread4 ax
 	001ebac4 lnot ax
 	001ebacc pop bx
 	001ebad4 land bx,ax
 	001ebae0 mov ax,bx
		001ebaec: FALL_THROUGH

	[001ebaec]
		001ebaa0: CONDITIONAL_JUMP
		001ebaa8: FALL_THROUGH
 	001ebaec jz 0x001ebb38
		001ebb38: CONDITIONAL_JUMP
		001ebaf4: FALL_THROUGH

	[001ebaf4]
		001ebaec: FALL_THROUGH
 	001ebaf4 push ax
 	001ebafc mov mar,0x100010
 	001ebb08 memread4 ax
 	001ebb10 lnot ax
 	001ebb18 pop bx
 	001ebb20 land bx,ax
 	001ebb2c mov ax,bx
		001ebb38: FALL_THROUGH

	[001ebb38]
		001ebaec: CONDITIONAL_JUMP
		001ebaf4: FALL_THROUGH
 	001ebb38 jz 0x001ebb84
		001ebb84: CONDITIONAL_JUMP
		001ebb40: FALL_THROUGH

	[001ebb40]
		001ebb38: FALL_THROUGH
 	001ebb40 push ax
 	001ebb48 mov mar,0x100014
 	001ebb54 memread4 ax
 	001ebb5c lnot ax
 	001ebb64 pop bx
 	001ebb6c land bx,ax
 	001ebb78 mov ax,bx
		001ebb84: FALL_THROUGH

	[001ebb84]
		001ebb38: CONDITIONAL_JUMP
		001ebb40: FALL_THROUGH
 	001ebb84 jz 0x001ebbd0
		001ebbd0: CONDITIONAL_JUMP
		001ebb8c: FALL_THROUGH

	[001ebb8c]
		001ebb84: FALL_THROUGH
 	001ebb8c push ax
 	001ebb94 mov mar,0x100018
 	001ebba0 memread4 ax
 	001ebba8 lnot ax
 	001ebbb0 pop bx
 	001ebbb8 land bx,ax
 	001ebbc4 mov ax,bx
		001ebbd0: FALL_THROUGH

	[001ebbd0]
		001ebb84: CONDITIONAL_JUMP
		001ebb8c: FALL_THROUGH
 	001ebbd0 jz 0x001ebc1c
		001ebc1c: CONDITIONAL_JUMP
		001ebbd8: FALL_THROUGH

	[001ebbd8]
		001ebbd0: FALL_THROUGH
 	001ebbd8 push ax
 	001ebbe0 mov mar,0x10001c
 	001ebbec memread4 ax
 	001ebbf4 lnot ax
 	001ebbfc pop bx
 	001ebc04 land bx,ax
 	001ebc10 mov ax,bx
		001ebc1c: FALL_THROUGH

	[001ebc1c]
		001ebbd0: CONDITIONAL_JUMP
		001ebbd8: FALL_THROUGH
 	001ebc1c jz 0x001ebc68
		001ebc68: CONDITIONAL_JUMP
		001ebc24: FALL_THROUGH

	[001ebc24]
		001ebc1c: FALL_THROUGH
 	001ebc24 push ax
 	001ebc2c mov mar,0x100020
 	001ebc38 memread4 ax
 	001ebc40 lnot ax
 	001ebc48 pop bx
 	001ebc50 land bx,ax
 	001ebc5c mov ax,bx
		001ebc68: FALL_THROUGH

	[001ebc68]
		001ebc1c: CONDITIONAL_JUMP
		001ebc24: FALL_THROUGH
 	001ebc68 jz 0x001ebcb4
		001ebcb4: CONDITIONAL_JUMP
		001ebc70: FALL_THROUGH

	[001ebc70]
		001ebc68: FALL_THROUGH
 	001ebc70 push ax
 	001ebc78 mov mar,0x100024
 	001ebc84 memread4 ax
 	001ebc8c lnot ax
 	001ebc94 pop bx
 	001ebc9c land bx,ax
 	001ebca8 mov ax,bx
		001ebcb4: FALL_THROUGH

	[001ebcb4]
		001ebc68: CONDITIONAL_JUMP
		001ebc70: FALL_THROUGH
 	001ebcb4 jz 0x001ebd00
		001ebd00: CONDITIONAL_JUMP
		001ebcbc: FALL_THROUGH

	[001ebcbc]
		001ebcb4: FALL_THROUGH
 	001ebcbc push ax
 	001ebcc4 mov mar,0x100028
 	001ebcd0 memread4 ax
 	001ebcd8 lnot ax
 	001ebce0 pop bx
 	001ebce8 land bx,ax
 	001ebcf4 mov ax,bx
		001ebd00: FALL_THROUGH

	[001ebd00]
		001ebcb4: CONDITIONAL_JUMP
		001ebcbc: FALL_THROUGH
 	001ebd00 jz 0x001ebd4c
		001ebd4c: CONDITIONAL_JUMP
		001ebd08: FALL_THROUGH

	[001ebd08]
		001ebd00: FALL_THROUGH
 	001ebd08 push ax
 	001ebd10 mov mar,0x10002c
 	001ebd1c memread4 ax
 	001ebd24 lnot ax
 	001ebd2c pop bx
 	001ebd34 land bx,ax
 	001ebd40 mov ax,bx
		001ebd4c: FALL_THROUGH

	[001ebd4c]
		001ebd00: CONDITIONAL_JUMP
		001ebd08: FALL_THROUGH
 	001ebd4c jz 0x001ebd9c
		001ebd9c: CONDITIONAL_JUMP
		001ebd54: FALL_THROUGH

	[001ebd54]
		001ebd4c: FALL_THROUGH
 	001ebd54 mov ax,0x1
 	001ebd60 mov mar,0x10000c
 	001ebd6c memwrite4 ax
 	001ebd74 mov ax,0x1
 	001ebd80 mov mar,0x1000b8
 	001ebd8c memwrite4 ax
 	001ebd94 jmp 0x001ed974
		001ed974: UNCONDITIONAL_JUMP

	[001ebd9c]
		001ebd4c: CONDITIONAL_JUMP
 	001ebd9c sourceline 0x2ae2
 	001ebda4 mov mar,0x100000
 	001ebdb0 memread4 ax
 	001ebdb8 jz 0x001ebdfc
		001ebdfc: CONDITIONAL_JUMP
		001ebdc0: FALL_THROUGH

	[001ebdc0]
		001ebd9c: FALL_THROUGH
 	001ebdc0 push ax
 	001ebdc8 mov mar,0x100004
 	001ebdd4 memread4 ax
 	001ebddc pop bx
 	001ebde4 land bx,ax
 	001ebdf0 mov ax,bx
		001ebdfc: FALL_THROUGH

	[001ebdfc]
		001ebd9c: CONDITIONAL_JUMP
		001ebdc0: FALL_THROUGH
 	001ebdfc jz 0x001ebe40
		001ebe40: CONDITIONAL_JUMP
		001ebe04: FALL_THROUGH

	[001ebe04]
		001ebdfc: FALL_THROUGH
 	001ebe04 push ax
 	001ebe0c mov mar,0x100008
 	001ebe18 memread4 ax
 	001ebe20 pop bx
 	001ebe28 land bx,ax
 	001ebe34 mov ax,bx
		001ebe40: FALL_THROUGH

	[001ebe40]
		001ebdfc: CONDITIONAL_JUMP
		001ebe04: FALL_THROUGH
 	001ebe40 jz 0x001ebe84
		001ebe84: CONDITIONAL_JUMP
		001ebe48: FALL_THROUGH

	[001ebe48]
		001ebe40: FALL_THROUGH
 	001ebe48 push ax
 	001ebe50 mov mar,0x10000c
 	001ebe5c memread4 ax
 	001ebe64 pop bx
 	001ebe6c land bx,ax
 	001ebe78 mov ax,bx
		001ebe84: FALL_THROUGH

	[001ebe84]
		001ebe40: CONDITIONAL_JUMP
		001ebe48: FALL_THROUGH
 	001ebe84 jz 0x001ebed0
		001ebed0: CONDITIONAL_JUMP
		001ebe8c: FALL_THROUGH

	[001ebe8c]
		001ebe84: FALL_THROUGH
 	001ebe8c push ax
 	001ebe94 mov mar,0x100010
 	001ebea0 memread4 ax
 	001ebea8 lnot ax
 	001ebeb0 pop bx
 	001ebeb8 land bx,ax
 	001ebec4 mov ax,bx
		001ebed0: FALL_THROUGH

	[001ebed0]
		001ebe84: CONDITIONAL_JUMP
		001ebe8c: FALL_THROUGH
 	001ebed0 jz 0x001ebf1c
		001ebf1c: CONDITIONAL_JUMP
		001ebed8: FALL_THROUGH

	[001ebed8]
		001ebed0: FALL_THROUGH
 	001ebed8 push ax
 	001ebee0 mov mar,0x100014
 	001ebeec memread4 ax
 	001ebef4 lnot ax
 	001ebefc pop bx
 	001ebf04 land bx,ax
 	001ebf10 mov ax,bx
		001ebf1c: FALL_THROUGH

	[001ebf1c]
		001ebed0: CONDITIONAL_JUMP
		001ebed8: FALL_THROUGH
 	001ebf1c jz 0x001ebf68
		001ebf68: CONDITIONAL_JUMP
		001ebf24: FALL_THROUGH

	[001ebf24]
		001ebf1c: FALL_THROUGH
 	001ebf24 push ax
 	001ebf2c mov mar,0x100018
 	001ebf38 memread4 ax
 	001ebf40 lnot ax
 	001ebf48 pop bx
 	001ebf50 land bx,ax
 	001ebf5c mov ax,bx
		001ebf68: FALL_THROUGH

	[001ebf68]
		001ebf1c: CONDITIONAL_JUMP
		001ebf24: FALL_THROUGH
 	001ebf68 jz 0x001ebfb4
		001ebfb4: CONDITIONAL_JUMP
		001ebf70: FALL_THROUGH

	[001ebf70]
		001ebf68: FALL_THROUGH
 	001ebf70 push ax
 	001ebf78 mov mar,0x10001c
 	001ebf84 memread4 ax
 	001ebf8c lnot ax
 	001ebf94 pop bx
 	001ebf9c land bx,ax
 	001ebfa8 mov ax,bx
		001ebfb4: FALL_THROUGH

	[001ebfb4]
		001ebf68: CONDITIONAL_JUMP
		001ebf70: FALL_THROUGH
 	001ebfb4 jz 0x001ec000
		001ec000: CONDITIONAL_JUMP
		001ebfbc: FALL_THROUGH

	[001ebfbc]
		001ebfb4: FALL_THROUGH
 	001ebfbc push ax
 	001ebfc4 mov mar,0x100020
 	001ebfd0 memread4 ax
 	001ebfd8 lnot ax
 	001ebfe0 pop bx
 	001ebfe8 land bx,ax
 	001ebff4 mov ax,bx
		001ec000: FALL_THROUGH

	[001ec000]
		001ebfb4: CONDITIONAL_JUMP
		001ebfbc: FALL_THROUGH
 	001ec000 jz 0x001ec04c
		001ec04c: CONDITIONAL_JUMP
		001ec008: FALL_THROUGH

	[001ec008]
		001ec000: FALL_THROUGH
 	001ec008 push ax
 	001ec010 mov mar,0x100024
 	001ec01c memread4 ax
 	001ec024 lnot ax
 	001ec02c pop bx
 	001ec034 land bx,ax
 	001ec040 mov ax,bx
		001ec04c: FALL_THROUGH

	[001ec04c]
		001ec000: CONDITIONAL_JUMP
		001ec008: FALL_THROUGH
 	001ec04c jz 0x001ec098
		001ec098: CONDITIONAL_JUMP
		001ec054: FALL_THROUGH

	[001ec054]
		001ec04c: FALL_THROUGH
 	001ec054 push ax
 	001ec05c mov mar,0x100028
 	001ec068 memread4 ax
 	001ec070 lnot ax
 	001ec078 pop bx
 	001ec080 land bx,ax
 	001ec08c mov ax,bx
		001ec098: FALL_THROUGH

	[001ec098]
		001ec04c: CONDITIONAL_JUMP
		001ec054: FALL_THROUGH
 	001ec098 jz 0x001ec0e4
		001ec0e4: CONDITIONAL_JUMP
		001ec0a0: FALL_THROUGH

	[001ec0a0]
		001ec098: FALL_THROUGH
 	001ec0a0 push ax
 	001ec0a8 mov mar,0x10002c
 	001ec0b4 memread4 ax
 	001ec0bc lnot ax
 	001ec0c4 pop bx
 	001ec0cc land bx,ax
 	001ec0d8 mov ax,bx
		001ec0e4: FALL_THROUGH

	[001ec0e4]
		001ec098: CONDITIONAL_JUMP
		001ec0a0: FALL_THROUGH
 	001ec0e4 jz 0x001ec134
		001ec134: CONDITIONAL_JUMP
		001ec0ec: FALL_THROUGH

	[001ec0ec]
		001ec0e4: FALL_THROUGH
 	001ec0ec mov ax,0x1
 	001ec0f8 mov mar,0x100010
 	001ec104 memwrite4 ax
 	001ec10c mov ax,0x1
 	001ec118 mov mar,0x1000bc
 	001ec124 memwrite4 ax
 	001ec12c jmp 0x001ed974
		001ed974: UNCONDITIONAL_JUMP

	[001ec134]
		001ec0e4: CONDITIONAL_JUMP
 	001ec134 sourceline 0x2ae7
 	001ec13c mov mar,0x100000
 	001ec148 memread4 ax
 	001ec150 jz 0x001ec194
		001ec194: CONDITIONAL_JUMP
		001ec158: FALL_THROUGH

	[001ec158]
		001ec134: FALL_THROUGH
 	001ec158 push ax
 	001ec160 mov mar,0x100004
 	001ec16c memread4 ax
 	001ec174 pop bx
 	001ec17c land bx,ax
 	001ec188 mov ax,bx
		001ec194: FALL_THROUGH

	[001ec194]
		001ec134: CONDITIONAL_JUMP
		001ec158: FALL_THROUGH
 	001ec194 jz 0x001ec1d8
		001ec1d8: CONDITIONAL_JUMP
		001ec19c: FALL_THROUGH

	[001ec19c]
		001ec194: FALL_THROUGH
 	001ec19c push ax
 	001ec1a4 mov mar,0x100008
 	001ec1b0 memread4 ax
 	001ec1b8 pop bx
 	001ec1c0 land bx,ax
 	001ec1cc mov ax,bx
		001ec1d8: FALL_THROUGH

	[001ec1d8]
		001ec194: CONDITIONAL_JUMP
		001ec19c: FALL_THROUGH
 	001ec1d8 jz 0x001ec21c
		001ec21c: CONDITIONAL_JUMP
		001ec1e0: FALL_THROUGH

	[001ec1e0]
		001ec1d8: FALL_THROUGH
 	001ec1e0 push ax
 	001ec1e8 mov mar,0x10000c
 	001ec1f4 memread4 ax
 	001ec1fc pop bx
 	001ec204 land bx,ax
 	001ec210 mov ax,bx
		001ec21c: FALL_THROUGH

	[001ec21c]
		001ec1d8: CONDITIONAL_JUMP
		001ec1e0: FALL_THROUGH
 	001ec21c jz 0x001ec260
		001ec260: CONDITIONAL_JUMP
		001ec224: FALL_THROUGH

	[001ec224]
		001ec21c: FALL_THROUGH
 	001ec224 push ax
 	001ec22c mov mar,0x100010
 	001ec238 memread4 ax
 	001ec240 pop bx
 	001ec248 land bx,ax
 	001ec254 mov ax,bx
		001ec260: FALL_THROUGH

	[001ec260]
		001ec21c: CONDITIONAL_JUMP
		001ec224: FALL_THROUGH
 	001ec260 jz 0x001ec2ac
		001ec2ac: CONDITIONAL_JUMP
		001ec268: FALL_THROUGH

	[001ec268]
		001ec260: FALL_THROUGH
 	001ec268 push ax
 	001ec270 mov mar,0x100014
 	001ec27c memread4 ax
 	001ec284 lnot ax
 	001ec28c pop bx
 	001ec294 land bx,ax
 	001ec2a0 mov ax,bx
		001ec2ac: FALL_THROUGH

	[001ec2ac]
		001ec260: CONDITIONAL_JUMP
		001ec268: FALL_THROUGH
 	001ec2ac jz 0x001ec2f8
		001ec2f8: CONDITIONAL_JUMP
		001ec2b4: FALL_THROUGH

	[001ec2b4]
		001ec2ac: FALL_THROUGH
 	001ec2b4 push ax
 	001ec2bc mov mar,0x100018
 	001ec2c8 memread4 ax
 	001ec2d0 lnot ax
 	001ec2d8 pop bx
 	001ec2e0 land bx,ax
 	001ec2ec mov ax,bx
		001ec2f8: FALL_THROUGH

	[001ec2f8]
		001ec2ac: CONDITIONAL_JUMP
		001ec2b4: FALL_THROUGH
 	001ec2f8 jz 0x001ec344
		001ec344: CONDITIONAL_JUMP
		001ec300: FALL_THROUGH

	[001ec300]
		001ec2f8: FALL_THROUGH
 	001ec300 push ax
 	001ec308 mov mar,0x10001c
 	001ec314 memread4 ax
 	001ec31c lnot ax
 	001ec324 pop bx
 	001ec32c land bx,ax
 	001ec338 mov ax,bx
		001ec344: FALL_THROUGH

	[001ec344]
		001ec2f8: CONDITIONAL_JUMP
		001ec300: FALL_THROUGH
 	001ec344 jz 0x001ec390
		001ec390: CONDITIONAL_JUMP
		001ec34c: FALL_THROUGH

	[001ec34c]
		001ec344: FALL_THROUGH
 	001ec34c push ax
 	001ec354 mov mar,0x100020
 	001ec360 memread4 ax
 	001ec368 lnot ax
 	001ec370 pop bx
 	001ec378 land bx,ax
 	001ec384 mov ax,bx
		001ec390: FALL_THROUGH

	[001ec390]
		001ec344: CONDITIONAL_JUMP
		001ec34c: FALL_THROUGH
 	001ec390 jz 0x001ec3dc
		001ec3dc: CONDITIONAL_JUMP
		001ec398: FALL_THROUGH

	[001ec398]
		001ec390: FALL_THROUGH
 	001ec398 push ax
 	001ec3a0 mov mar,0x100024
 	001ec3ac memread4 ax
 	001ec3b4 lnot ax
 	001ec3bc pop bx
 	001ec3c4 land bx,ax
 	001ec3d0 mov ax,bx
		001ec3dc: FALL_THROUGH

	[001ec3dc]
		001ec390: CONDITIONAL_JUMP
		001ec398: FALL_THROUGH
 	001ec3dc jz 0x001ec428
		001ec428: CONDITIONAL_JUMP
		001ec3e4: FALL_THROUGH

	[001ec3e4]
		001ec3dc: FALL_THROUGH
 	001ec3e4 push ax
 	001ec3ec mov mar,0x100028
 	001ec3f8 memread4 ax
 	001ec400 lnot ax
 	001ec408 pop bx
 	001ec410 land bx,ax
 	001ec41c mov ax,bx
		001ec428: FALL_THROUGH

	[001ec428]
		001ec3dc: CONDITIONAL_JUMP
		001ec3e4: FALL_THROUGH
 	001ec428 jz 0x001ec474
		001ec474: CONDITIONAL_JUMP
		001ec430: FALL_THROUGH

	[001ec430]
		001ec428: FALL_THROUGH
 	001ec430 push ax
 	001ec438 mov mar,0x10002c
 	001ec444 memread4 ax
 	001ec44c lnot ax
 	001ec454 pop bx
 	001ec45c land bx,ax
 	001ec468 mov ax,bx
		001ec474: FALL_THROUGH

	[001ec474]
		001ec428: CONDITIONAL_JUMP
		001ec430: FALL_THROUGH
 	001ec474 jz 0x001ec4c4
		001ec4c4: CONDITIONAL_JUMP
		001ec47c: FALL_THROUGH

	[001ec47c]
		001ec474: FALL_THROUGH
 	001ec47c mov ax,0x1
 	001ec488 mov mar,0x100014
 	001ec494 memwrite4 ax
 	001ec49c mov ax,0x1
 	001ec4a8 mov mar,0x1000c0
 	001ec4b4 memwrite4 ax
 	001ec4bc jmp 0x001ed974
		001ed974: UNCONDITIONAL_JUMP

	[001ec4c4]
		001ec474: CONDITIONAL_JUMP
 	001ec4c4 sourceline 0x2aec
 	001ec4cc mov mar,0x100000
 	001ec4d8 memread4 ax
 	001ec4e0 jz 0x001ec524
		001ec524: CONDITIONAL_JUMP
		001ec4e8: FALL_THROUGH

	[001ec4e8]
		001ec4c4: FALL_THROUGH
 	001ec4e8 push ax
 	001ec4f0 mov mar,0x100004
 	001ec4fc memread4 ax
 	001ec504 pop bx
 	001ec50c land bx,ax
 	001ec518 mov ax,bx
		001ec524: FALL_THROUGH

	[001ec524]
		001ec4c4: CONDITIONAL_JUMP
		001ec4e8: FALL_THROUGH
 	001ec524 jz 0x001ec568
		001ec568: CONDITIONAL_JUMP
		001ec52c: FALL_THROUGH

	[001ec52c]
		001ec524: FALL_THROUGH
 	001ec52c push ax
 	001ec534 mov mar,0x100008
 	001ec540 memread4 ax
 	001ec548 pop bx
 	001ec550 land bx,ax
 	001ec55c mov ax,bx
		001ec568: FALL_THROUGH

	[001ec568]
		001ec524: CONDITIONAL_JUMP
		001ec52c: FALL_THROUGH
 	001ec568 jz 0x001ec5ac
		001ec5ac: CONDITIONAL_JUMP
		001ec570: FALL_THROUGH

	[001ec570]
		001ec568: FALL_THROUGH
 	001ec570 push ax
 	001ec578 mov mar,0x10000c
 	001ec584 memread4 ax
 	001ec58c pop bx
 	001ec594 land bx,ax
 	001ec5a0 mov ax,bx
		001ec5ac: FALL_THROUGH

	[001ec5ac]
		001ec568: CONDITIONAL_JUMP
		001ec570: FALL_THROUGH
 	001ec5ac jz 0x001ec5f0
		001ec5f0: CONDITIONAL_JUMP
		001ec5b4: FALL_THROUGH

	[001ec5b4]
		001ec5ac: FALL_THROUGH
 	001ec5b4 push ax
 	001ec5bc mov mar,0x100010
 	001ec5c8 memread4 ax
 	001ec5d0 pop bx
 	001ec5d8 land bx,ax
 	001ec5e4 mov ax,bx
		001ec5f0: FALL_THROUGH

	[001ec5f0]
		001ec5ac: CONDITIONAL_JUMP
		001ec5b4: FALL_THROUGH
 	001ec5f0 jz 0x001ec634
		001ec634: CONDITIONAL_JUMP
		001ec5f8: FALL_THROUGH

	[001ec5f8]
		001ec5f0: FALL_THROUGH
 	001ec5f8 push ax
 	001ec600 mov mar,0x100014
 	001ec60c memread4 ax
 	001ec614 pop bx
 	001ec61c land bx,ax
 	001ec628 mov ax,bx
		001ec634: FALL_THROUGH

	[001ec634]
		001ec5f0: CONDITIONAL_JUMP
		001ec5f8: FALL_THROUGH
 	001ec634 jz 0x001ec680
		001ec680: CONDITIONAL_JUMP
		001ec63c: FALL_THROUGH

	[001ec63c]
		001ec634: FALL_THROUGH
 	001ec63c push ax
 	001ec644 mov mar,0x100018
 	001ec650 memread4 ax
 	001ec658 lnot ax
 	001ec660 pop bx
 	001ec668 land bx,ax
 	001ec674 mov ax,bx
		001ec680: FALL_THROUGH

	[001ec680]
		001ec634: CONDITIONAL_JUMP
		001ec63c: FALL_THROUGH
 	001ec680 jz 0x001ec6cc
		001ec6cc: CONDITIONAL_JUMP
		001ec688: FALL_THROUGH

	[001ec688]
		001ec680: FALL_THROUGH
 	001ec688 push ax
 	001ec690 mov mar,0x10001c
 	001ec69c memread4 ax
 	001ec6a4 lnot ax
 	001ec6ac pop bx
 	001ec6b4 land bx,ax
 	001ec6c0 mov ax,bx
		001ec6cc: FALL_THROUGH

	[001ec6cc]
		001ec680: CONDITIONAL_JUMP
		001ec688: FALL_THROUGH
 	001ec6cc jz 0x001ec718
		001ec718: CONDITIONAL_JUMP
		001ec6d4: FALL_THROUGH

	[001ec6d4]
		001ec6cc: FALL_THROUGH
 	001ec6d4 push ax
 	001ec6dc mov mar,0x100020
 	001ec6e8 memread4 ax
 	001ec6f0 lnot ax
 	001ec6f8 pop bx
 	001ec700 land bx,ax
 	001ec70c mov ax,bx
		001ec718: FALL_THROUGH

	[001ec718]
		001ec6cc: CONDITIONAL_JUMP
		001ec6d4: FALL_THROUGH
 	001ec718 jz 0x001ec764
		001ec764: CONDITIONAL_JUMP
		001ec720: FALL_THROUGH

	[001ec720]
		001ec718: FALL_THROUGH
 	001ec720 push ax
 	001ec728 mov mar,0x100024
 	001ec734 memread4 ax
 	001ec73c lnot ax
 	001ec744 pop bx
 	001ec74c land bx,ax
 	001ec758 mov ax,bx
		001ec764: FALL_THROUGH

	[001ec764]
		001ec718: CONDITIONAL_JUMP
		001ec720: FALL_THROUGH
 	001ec764 jz 0x001ec7b0
		001ec7b0: CONDITIONAL_JUMP
		001ec76c: FALL_THROUGH

	[001ec76c]
		001ec764: FALL_THROUGH
 	001ec76c push ax
 	001ec774 mov mar,0x100028
 	001ec780 memread4 ax
 	001ec788 lnot ax
 	001ec790 pop bx
 	001ec798 land bx,ax
 	001ec7a4 mov ax,bx
		001ec7b0: FALL_THROUGH

	[001ec7b0]
		001ec764: CONDITIONAL_JUMP
		001ec76c: FALL_THROUGH
 	001ec7b0 jz 0x001ec7fc
		001ec7fc: CONDITIONAL_JUMP
		001ec7b8: FALL_THROUGH

	[001ec7b8]
		001ec7b0: FALL_THROUGH
 	001ec7b8 push ax
 	001ec7c0 mov mar,0x10002c
 	001ec7cc memread4 ax
 	001ec7d4 lnot ax
 	001ec7dc pop bx
 	001ec7e4 land bx,ax
 	001ec7f0 mov ax,bx
		001ec7fc: FALL_THROUGH

	[001ec7fc]
		001ec7b0: CONDITIONAL_JUMP
		001ec7b8: FALL_THROUGH
 	001ec7fc jz 0x001ec84c
		001ec84c: CONDITIONAL_JUMP
		001ec804: FALL_THROUGH

	[001ec804]
		001ec7fc: FALL_THROUGH
 	001ec804 mov ax,0x1
 	001ec810 mov mar,0x100018
 	001ec81c memwrite4 ax
 	001ec824 mov ax,0x1
 	001ec830 mov mar,0x1000c4
 	001ec83c memwrite4 ax
 	001ec844 jmp 0x001ed974
		001ed974: UNCONDITIONAL_JUMP

	[001ec84c]
		001ec7fc: CONDITIONAL_JUMP
 	001ec84c sourceline 0x2af1
 	001ec854 mov mar,0x100000
 	001ec860 memread4 ax
 	001ec868 jz 0x001ec8ac
		001ec8ac: CONDITIONAL_JUMP
		001ec870: FALL_THROUGH

	[001ec870]
		001ec84c: FALL_THROUGH
 	001ec870 push ax
 	001ec878 mov mar,0x100004
 	001ec884 memread4 ax
 	001ec88c pop bx
 	001ec894 land bx,ax
 	001ec8a0 mov ax,bx
		001ec8ac: FALL_THROUGH

	[001ec8ac]
		001ec84c: CONDITIONAL_JUMP
		001ec870: FALL_THROUGH
 	001ec8ac jz 0x001ec8f0
		001ec8f0: CONDITIONAL_JUMP
		001ec8b4: FALL_THROUGH

	[001ec8b4]
		001ec8ac: FALL_THROUGH
 	001ec8b4 push ax
 	001ec8bc mov mar,0x100008
 	001ec8c8 memread4 ax
 	001ec8d0 pop bx
 	001ec8d8 land bx,ax
 	001ec8e4 mov ax,bx
		001ec8f0: FALL_THROUGH

	[001ec8f0]
		001ec8ac: CONDITIONAL_JUMP
		001ec8b4: FALL_THROUGH
 	001ec8f0 jz 0x001ec934
		001ec934: CONDITIONAL_JUMP
		001ec8f8: FALL_THROUGH

	[001ec8f8]
		001ec8f0: FALL_THROUGH
 	001ec8f8 push ax
 	001ec900 mov mar,0x10000c
 	001ec90c memread4 ax
 	001ec914 pop bx
 	001ec91c land bx,ax
 	001ec928 mov ax,bx
		001ec934: FALL_THROUGH

	[001ec934]
		001ec8f0: CONDITIONAL_JUMP
		001ec8f8: FALL_THROUGH
 	001ec934 jz 0x001ec978
		001ec978: CONDITIONAL_JUMP
		001ec93c: FALL_THROUGH

	[001ec93c]
		001ec934: FALL_THROUGH
 	001ec93c push ax
 	001ec944 mov mar,0x100010
 	001ec950 memread4 ax
 	001ec958 pop bx
 	001ec960 land bx,ax
 	001ec96c mov ax,bx
		001ec978: FALL_THROUGH

	[001ec978]
		001ec934: CONDITIONAL_JUMP
		001ec93c: FALL_THROUGH
 	001ec978 jz 0x001ec9bc
		001ec9bc: CONDITIONAL_JUMP
		001ec980: FALL_THROUGH

	[001ec980]
		001ec978: FALL_THROUGH
 	001ec980 push ax
 	001ec988 mov mar,0x100014
 	001ec994 memread4 ax
 	001ec99c pop bx
 	001ec9a4 land bx,ax
 	001ec9b0 mov ax,bx
		001ec9bc: FALL_THROUGH

	[001ec9bc]
		001ec978: CONDITIONAL_JUMP
		001ec980: FALL_THROUGH
 	001ec9bc jz 0x001eca00
		001eca00: CONDITIONAL_JUMP
		001ec9c4: FALL_THROUGH

	[001ec9c4]
		001ec9bc: FALL_THROUGH
 	001ec9c4 push ax
 	001ec9cc mov mar,0x100018
 	001ec9d8 memread4 ax
 	001ec9e0 pop bx
 	001ec9e8 land bx,ax
 	001ec9f4 mov ax,bx
		001eca00: FALL_THROUGH

	[001eca00]
		001ec9bc: CONDITIONAL_JUMP
		001ec9c4: FALL_THROUGH
 	001eca00 jz 0x001eca4c
		001eca4c: CONDITIONAL_JUMP
		001eca08: FALL_THROUGH

	[001eca08]
		001eca00: FALL_THROUGH
 	001eca08 push ax
 	001eca10 mov mar,0x10001c
 	001eca1c memread4 ax
 	001eca24 lnot ax
 	001eca2c pop bx
 	001eca34 land bx,ax
 	001eca40 mov ax,bx
		001eca4c: FALL_THROUGH

	[001eca4c]
		001eca00: CONDITIONAL_JUMP
		001eca08: FALL_THROUGH
 	001eca4c jz 0x001eca98
		001eca98: CONDITIONAL_JUMP
		001eca54: FALL_THROUGH

	[001eca54]
		001eca4c: FALL_THROUGH
 	001eca54 push ax
 	001eca5c mov mar,0x100020
 	001eca68 memread4 ax
 	001eca70 lnot ax
 	001eca78 pop bx
 	001eca80 land bx,ax
 	001eca8c mov ax,bx
		001eca98: FALL_THROUGH

	[001eca98]
		001eca4c: CONDITIONAL_JUMP
		001eca54: FALL_THROUGH
 	001eca98 jz 0x001ecae4
		001ecae4: CONDITIONAL_JUMP
		001ecaa0: FALL_THROUGH

	[001ecaa0]
		001eca98: FALL_THROUGH
 	001ecaa0 push ax
 	001ecaa8 mov mar,0x100024
 	001ecab4 memread4 ax
 	001ecabc lnot ax
 	001ecac4 pop bx
 	001ecacc land bx,ax
 	001ecad8 mov ax,bx
		001ecae4: FALL_THROUGH

	[001ecae4]
		001eca98: CONDITIONAL_JUMP
		001ecaa0: FALL_THROUGH
 	001ecae4 jz 0x001ecb30
		001ecb30: CONDITIONAL_JUMP
		001ecaec: FALL_THROUGH

	[001ecaec]
		001ecae4: FALL_THROUGH
 	001ecaec push ax
 	001ecaf4 mov mar,0x100028
 	001ecb00 memread4 ax
 	001ecb08 lnot ax
 	001ecb10 pop bx
 	001ecb18 land bx,ax
 	001ecb24 mov ax,bx
		001ecb30: FALL_THROUGH

	[001ecb30]
		001ecae4: CONDITIONAL_JUMP
		001ecaec: FALL_THROUGH
 	001ecb30 jz 0x001ecb7c
		001ecb7c: CONDITIONAL_JUMP
		001ecb38: FALL_THROUGH

	[001ecb38]
		001ecb30: FALL_THROUGH
 	001ecb38 push ax
 	001ecb40 mov mar,0x10002c
 	001ecb4c memread4 ax
 	001ecb54 lnot ax
 	001ecb5c pop bx
 	001ecb64 land bx,ax
 	001ecb70 mov ax,bx
		001ecb7c: FALL_THROUGH

	[001ecb7c]
		001ecb30: CONDITIONAL_JUMP
		001ecb38: FALL_THROUGH
 	001ecb7c jz 0x001ecbcc
		001ecbcc: CONDITIONAL_JUMP
		001ecb84: FALL_THROUGH

	[001ecb84]
		001ecb7c: FALL_THROUGH
 	001ecb84 mov ax,0x1
 	001ecb90 mov mar,0x10001c
 	001ecb9c memwrite4 ax
 	001ecba4 mov ax,0x1
 	001ecbb0 mov mar,0x1000c8
 	001ecbbc memwrite4 ax
 	001ecbc4 jmp 0x001ed974
		001ed974: UNCONDITIONAL_JUMP

	[001ecbcc]
		001ecb7c: CONDITIONAL_JUMP
 	001ecbcc sourceline 0x2af6
 	001ecbd4 mov mar,0x100000
 	001ecbe0 memread4 ax
 	001ecbe8 jz 0x001ecc2c
		001ecc2c: CONDITIONAL_JUMP
		001ecbf0: FALL_THROUGH

	[001ecbf0]
		001ecbcc: FALL_THROUGH
 	001ecbf0 push ax
 	001ecbf8 mov mar,0x100004
 	001ecc04 memread4 ax
 	001ecc0c pop bx
 	001ecc14 land bx,ax
 	001ecc20 mov ax,bx
		001ecc2c: FALL_THROUGH

	[001ecc2c]
		001ecbcc: CONDITIONAL_JUMP
		001ecbf0: FALL_THROUGH
 	001ecc2c jz 0x001ecc70
		001ecc70: CONDITIONAL_JUMP
		001ecc34: FALL_THROUGH

	[001ecc34]
		001ecc2c: FALL_THROUGH
 	001ecc34 push ax
 	001ecc3c mov mar,0x100008
 	001ecc48 memread4 ax
 	001ecc50 pop bx
 	001ecc58 land bx,ax
 	001ecc64 mov ax,bx
		001ecc70: FALL_THROUGH

	[001ecc70]
		001ecc2c: CONDITIONAL_JUMP
		001ecc34: FALL_THROUGH
 	001ecc70 jz 0x001eccb4
		001eccb4: CONDITIONAL_JUMP
		001ecc78: FALL_THROUGH

	[001ecc78]
		001ecc70: FALL_THROUGH
 	001ecc78 push ax
 	001ecc80 mov mar,0x10000c
 	001ecc8c memread4 ax
 	001ecc94 pop bx
 	001ecc9c land bx,ax
 	001ecca8 mov ax,bx
		001eccb4: FALL_THROUGH

	[001eccb4]
		001ecc70: CONDITIONAL_JUMP
		001ecc78: FALL_THROUGH
 	001eccb4 jz 0x001eccf8
		001eccf8: CONDITIONAL_JUMP
		001eccbc: FALL_THROUGH

	[001eccbc]
		001eccb4: FALL_THROUGH
 	001eccbc push ax
 	001eccc4 mov mar,0x100010
 	001eccd0 memread4 ax
 	001eccd8 pop bx
 	001ecce0 land bx,ax
 	001eccec mov ax,bx
		001eccf8: FALL_THROUGH

	[001eccf8]
		001eccb4: CONDITIONAL_JUMP
		001eccbc: FALL_THROUGH
 	001eccf8 jz 0x001ecd3c
		001ecd3c: CONDITIONAL_JUMP
		001ecd00: FALL_THROUGH

	[001ecd00]
		001eccf8: FALL_THROUGH
 	001ecd00 push ax
 	001ecd08 mov mar,0x100014
 	001ecd14 memread4 ax
 	001ecd1c pop bx
 	001ecd24 land bx,ax
 	001ecd30 mov ax,bx
		001ecd3c: FALL_THROUGH

	[001ecd3c]
		001eccf8: CONDITIONAL_JUMP
		001ecd00: FALL_THROUGH
 	001ecd3c jz 0x001ecd80
		001ecd80: CONDITIONAL_JUMP
		001ecd44: FALL_THROUGH

	[001ecd44]
		001ecd3c: FALL_THROUGH
 	001ecd44 push ax
 	001ecd4c mov mar,0x100018
 	001ecd58 memread4 ax
 	001ecd60 pop bx
 	001ecd68 land bx,ax
 	001ecd74 mov ax,bx
		001ecd80: FALL_THROUGH

	[001ecd80]
		001ecd3c: CONDITIONAL_JUMP
		001ecd44: FALL_THROUGH
 	001ecd80 jz 0x001ecdc4
		001ecdc4: CONDITIONAL_JUMP
		001ecd88: FALL_THROUGH

	[001ecd88]
		001ecd80: FALL_THROUGH
 	001ecd88 push ax
 	001ecd90 mov mar,0x10001c
 	001ecd9c memread4 ax
 	001ecda4 pop bx
 	001ecdac land bx,ax
 	001ecdb8 mov ax,bx
		001ecdc4: FALL_THROUGH

	[001ecdc4]
		001ecd80: CONDITIONAL_JUMP
		001ecd88: FALL_THROUGH
 	001ecdc4 jz 0x001ece10
		001ece10: CONDITIONAL_JUMP
		001ecdcc: FALL_THROUGH

	[001ecdcc]
		001ecdc4: FALL_THROUGH
 	001ecdcc push ax
 	001ecdd4 mov mar,0x100020
 	001ecde0 memread4 ax
 	001ecde8 lnot ax
 	001ecdf0 pop bx
 	001ecdf8 land bx,ax
 	001ece04 mov ax,bx
		001ece10: FALL_THROUGH

	[001ece10]
		001ecdc4: CONDITIONAL_JUMP
		001ecdcc: FALL_THROUGH
 	001ece10 jz 0x001ece5c
		001ece5c: CONDITIONAL_JUMP
		001ece18: FALL_THROUGH

	[001ece18]
		001ece10: FALL_THROUGH
 	001ece18 push ax
 	001ece20 mov mar,0x100024
 	001ece2c memread4 ax
 	001ece34 lnot ax
 	001ece3c pop bx
 	001ece44 land bx,ax
 	001ece50 mov ax,bx
		001ece5c: FALL_THROUGH

	[001ece5c]
		001ece10: CONDITIONAL_JUMP
		001ece18: FALL_THROUGH
 	001ece5c jz 0x001ecea8
		001ecea8: CONDITIONAL_JUMP
		001ece64: FALL_THROUGH

	[001ece64]
		001ece5c: FALL_THROUGH
 	001ece64 push ax
 	001ece6c mov mar,0x100028
 	001ece78 memread4 ax
 	001ece80 lnot ax
 	001ece88 pop bx
 	001ece90 land bx,ax
 	001ece9c mov ax,bx
		001ecea8: FALL_THROUGH

	[001ecea8]
		001ece5c: CONDITIONAL_JUMP
		001ece64: FALL_THROUGH
 	001ecea8 jz 0x001ecef4
		001ecef4: CONDITIONAL_JUMP
		001eceb0: FALL_THROUGH

	[001eceb0]
		001ecea8: FALL_THROUGH
 	001eceb0 push ax
 	001eceb8 mov mar,0x10002c
 	001ecec4 memread4 ax
 	001ececc lnot ax
 	001eced4 pop bx
 	001ecedc land bx,ax
 	001ecee8 mov ax,bx
		001ecef4: FALL_THROUGH

	[001ecef4]
		001ecea8: CONDITIONAL_JUMP
		001eceb0: FALL_THROUGH
 	001ecef4 jz 0x001ecf44
		001ecf44: CONDITIONAL_JUMP
		001ecefc: FALL_THROUGH

	[001ecefc]
		001ecef4: FALL_THROUGH
 	001ecefc mov ax,0x1
 	001ecf08 mov mar,0x100020
 	001ecf14 memwrite4 ax
 	001ecf1c mov ax,0x1
 	001ecf28 mov mar,0x1000cc
 	001ecf34 memwrite4 ax
 	001ecf3c jmp 0x001ed974
		001ed974: UNCONDITIONAL_JUMP

	[001ecf44]
		001ecef4: CONDITIONAL_JUMP
 	001ecf44 sourceline 0x2afb
 	001ecf4c mov mar,0x100000
 	001ecf58 memread4 ax
 	001ecf60 jz 0x001ecfa4
		001ecfa4: CONDITIONAL_JUMP
		001ecf68: FALL_THROUGH

	[001ecf68]
		001ecf44: FALL_THROUGH
 	001ecf68 push ax
 	001ecf70 mov mar,0x100004
 	001ecf7c memread4 ax
 	001ecf84 pop bx
 	001ecf8c land bx,ax
 	001ecf98 mov ax,bx
		001ecfa4: FALL_THROUGH

	[001ecfa4]
		001ecf44: CONDITIONAL_JUMP
		001ecf68: FALL_THROUGH
 	001ecfa4 jz 0x001ecfe8
		001ecfe8: CONDITIONAL_JUMP
		001ecfac: FALL_THROUGH

	[001ecfac]
		001ecfa4: FALL_THROUGH
 	001ecfac push ax
 	001ecfb4 mov mar,0x100008
 	001ecfc0 memread4 ax
 	001ecfc8 pop bx
 	001ecfd0 land bx,ax
 	001ecfdc mov ax,bx
		001ecfe8: FALL_THROUGH

	[001ecfe8]
		001ecfa4: CONDITIONAL_JUMP
		001ecfac: FALL_THROUGH
 	001ecfe8 jz 0x001ed02c
		001ed02c: CONDITIONAL_JUMP
		001ecff0: FALL_THROUGH

	[001ecff0]
		001ecfe8: FALL_THROUGH
 	001ecff0 push ax
 	001ecff8 mov mar,0x10000c
 	001ed004 memread4 ax
 	001ed00c pop bx
 	001ed014 land bx,ax
 	001ed020 mov ax,bx
		001ed02c: FALL_THROUGH

	[001ed02c]
		001ecfe8: CONDITIONAL_JUMP
		001ecff0: FALL_THROUGH
 	001ed02c jz 0x001ed070
		001ed070: CONDITIONAL_JUMP
		001ed034: FALL_THROUGH

	[001ed034]
		001ed02c: FALL_THROUGH
 	001ed034 push ax
 	001ed03c mov mar,0x100010
 	001ed048 memread4 ax
 	001ed050 pop bx
 	001ed058 land bx,ax
 	001ed064 mov ax,bx
		001ed070: FALL_THROUGH

	[001ed070]
		001ed02c: CONDITIONAL_JUMP
		001ed034: FALL_THROUGH
 	001ed070 jz 0x001ed0b4
		001ed0b4: CONDITIONAL_JUMP
		001ed078: FALL_THROUGH

	[001ed078]
		001ed070: FALL_THROUGH
 	001ed078 push ax
 	001ed080 mov mar,0x100014
 	001ed08c memread4 ax
 	001ed094 pop bx
 	001ed09c land bx,ax
 	001ed0a8 mov ax,bx
		001ed0b4: FALL_THROUGH

	[001ed0b4]
		001ed070: CONDITIONAL_JUMP
		001ed078: FALL_THROUGH
 	001ed0b4 jz 0x001ed0f8
		001ed0f8: CONDITIONAL_JUMP
		001ed0bc: FALL_THROUGH

	[001ed0bc]
		001ed0b4: FALL_THROUGH
 	001ed0bc push ax
 	001ed0c4 mov mar,0x100018
 	001ed0d0 memread4 ax
 	001ed0d8 pop bx
 	001ed0e0 land bx,ax
 	001ed0ec mov ax,bx
		001ed0f8: FALL_THROUGH

	[001ed0f8]
		001ed0b4: CONDITIONAL_JUMP
		001ed0bc: FALL_THROUGH
 	001ed0f8 jz 0x001ed13c
		001ed13c: CONDITIONAL_JUMP
		001ed100: FALL_THROUGH

	[001ed100]
		001ed0f8: FALL_THROUGH
 	001ed100 push ax
 	001ed108 mov mar,0x10001c
 	001ed114 memread4 ax
 	001ed11c pop bx
 	001ed124 land bx,ax
 	001ed130 mov ax,bx
		001ed13c: FALL_THROUGH

	[001ed13c]
		001ed0f8: CONDITIONAL_JUMP
		001ed100: FALL_THROUGH
 	001ed13c jz 0x001ed180
		001ed180: CONDITIONAL_JUMP
		001ed144: FALL_THROUGH

	[001ed144]
		001ed13c: FALL_THROUGH
 	001ed144 push ax
 	001ed14c mov mar,0x100020
 	001ed158 memread4 ax
 	001ed160 pop bx
 	001ed168 land bx,ax
 	001ed174 mov ax,bx
		001ed180: FALL_THROUGH

	[001ed180]
		001ed13c: CONDITIONAL_JUMP
		001ed144: FALL_THROUGH
 	001ed180 jz 0x001ed1cc
		001ed1cc: CONDITIONAL_JUMP
		001ed188: FALL_THROUGH

	[001ed188]
		001ed180: FALL_THROUGH
 	001ed188 push ax
 	001ed190 mov mar,0x100024
 	001ed19c memread4 ax
 	001ed1a4 lnot ax
 	001ed1ac pop bx
 	001ed1b4 land bx,ax
 	001ed1c0 mov ax,bx
		001ed1cc: FALL_THROUGH

	[001ed1cc]
		001ed180: CONDITIONAL_JUMP
		001ed188: FALL_THROUGH
 	001ed1cc jz 0x001ed218
		001ed218: CONDITIONAL_JUMP
		001ed1d4: FALL_THROUGH

	[001ed1d4]
		001ed1cc: FALL_THROUGH
 	001ed1d4 push ax
 	001ed1dc mov mar,0x100028
 	001ed1e8 memread4 ax
 	001ed1f0 lnot ax
 	001ed1f8 pop bx
 	001ed200 land bx,ax
 	001ed20c mov ax,bx
		001ed218: FALL_THROUGH

	[001ed218]
		001ed1cc: CONDITIONAL_JUMP
		001ed1d4: FALL_THROUGH
 	001ed218 jz 0x001ed264
		001ed264: CONDITIONAL_JUMP
		001ed220: FALL_THROUGH

	[001ed220]
		001ed218: FALL_THROUGH
 	001ed220 push ax
 	001ed228 mov mar,0x10002c
 	001ed234 memread4 ax
 	001ed23c lnot ax
 	001ed244 pop bx
 	001ed24c land bx,ax
 	001ed258 mov ax,bx
		001ed264: FALL_THROUGH

	[001ed264]
		001ed218: CONDITIONAL_JUMP
		001ed220: FALL_THROUGH
 	001ed264 jz 0x001ed2b4
		001ed2b4: CONDITIONAL_JUMP
		001ed26c: FALL_THROUGH

	[001ed26c]
		001ed264: FALL_THROUGH
 	001ed26c mov ax,0x1
 	001ed278 mov mar,0x100024
 	001ed284 memwrite4 ax
 	001ed28c mov ax,0x1
 	001ed298 mov mar,0x1000d0
 	001ed2a4 memwrite4 ax
 	001ed2ac jmp 0x001ed974
		001ed974: UNCONDITIONAL_JUMP

	[001ed2b4]
		001ed264: CONDITIONAL_JUMP
 	001ed2b4 sourceline 0x2b00
 	001ed2bc mov mar,0x100000
 	001ed2c8 memread4 ax
 	001ed2d0 jz 0x001ed314
		001ed314: CONDITIONAL_JUMP
		001ed2d8: FALL_THROUGH

	[001ed2d8]
		001ed2b4: FALL_THROUGH
 	001ed2d8 push ax
 	001ed2e0 mov mar,0x100004
 	001ed2ec memread4 ax
 	001ed2f4 pop bx
 	001ed2fc land bx,ax
 	001ed308 mov ax,bx
		001ed314: FALL_THROUGH

	[001ed314]
		001ed2b4: CONDITIONAL_JUMP
		001ed2d8: FALL_THROUGH
 	001ed314 jz 0x001ed358
		001ed358: CONDITIONAL_JUMP
		001ed31c: FALL_THROUGH

	[001ed31c]
		001ed314: FALL_THROUGH
 	001ed31c push ax
 	001ed324 mov mar,0x100008
 	001ed330 memread4 ax
 	001ed338 pop bx
 	001ed340 land bx,ax
 	001ed34c mov ax,bx
		001ed358: FALL_THROUGH

	[001ed358]
		001ed314: CONDITIONAL_JUMP
		001ed31c: FALL_THROUGH
 	001ed358 jz 0x001ed39c
		001ed39c: CONDITIONAL_JUMP
		001ed360: FALL_THROUGH

	[001ed360]
		001ed358: FALL_THROUGH
 	001ed360 push ax
 	001ed368 mov mar,0x10000c
 	001ed374 memread4 ax
 	001ed37c pop bx
 	001ed384 land bx,ax
 	001ed390 mov ax,bx
		001ed39c: FALL_THROUGH

	[001ed39c]
		001ed358: CONDITIONAL_JUMP
		001ed360: FALL_THROUGH
 	001ed39c jz 0x001ed3e0
		001ed3e0: CONDITIONAL_JUMP
		001ed3a4: FALL_THROUGH

	[001ed3a4]
		001ed39c: FALL_THROUGH
 	001ed3a4 push ax
 	001ed3ac mov mar,0x100010
 	001ed3b8 memread4 ax
 	001ed3c0 pop bx
 	001ed3c8 land bx,ax
 	001ed3d4 mov ax,bx
		001ed3e0: FALL_THROUGH

	[001ed3e0]
		001ed39c: CONDITIONAL_JUMP
		001ed3a4: FALL_THROUGH
 	001ed3e0 jz 0x001ed424
		001ed424: CONDITIONAL_JUMP
		001ed3e8: FALL_THROUGH

	[001ed3e8]
		001ed3e0: FALL_THROUGH
 	001ed3e8 push ax
 	001ed3f0 mov mar,0x100014
 	001ed3fc memread4 ax
 	001ed404 pop bx
 	001ed40c land bx,ax
 	001ed418 mov ax,bx
		001ed424: FALL_THROUGH

	[001ed424]
		001ed3e0: CONDITIONAL_JUMP
		001ed3e8: FALL_THROUGH
 	001ed424 jz 0x001ed468
		001ed468: CONDITIONAL_JUMP
		001ed42c: FALL_THROUGH

	[001ed42c]
		001ed424: FALL_THROUGH
 	001ed42c push ax
 	001ed434 mov mar,0x100018
 	001ed440 memread4 ax
 	001ed448 pop bx
 	001ed450 land bx,ax
 	001ed45c mov ax,bx
		001ed468: FALL_THROUGH

	[001ed468]
		001ed424: CONDITIONAL_JUMP
		001ed42c: FALL_THROUGH
 	001ed468 jz 0x001ed4ac
		001ed4ac: CONDITIONAL_JUMP
		001ed470: FALL_THROUGH

	[001ed470]
		001ed468: FALL_THROUGH
 	001ed470 push ax
 	001ed478 mov mar,0x10001c
 	001ed484 memread4 ax
 	001ed48c pop bx
 	001ed494 land bx,ax
 	001ed4a0 mov ax,bx
		001ed4ac: FALL_THROUGH

	[001ed4ac]
		001ed468: CONDITIONAL_JUMP
		001ed470: FALL_THROUGH
 	001ed4ac jz 0x001ed4f0
		001ed4f0: CONDITIONAL_JUMP
		001ed4b4: FALL_THROUGH

	[001ed4b4]
		001ed4ac: FALL_THROUGH
 	001ed4b4 push ax
 	001ed4bc mov mar,0x100020
 	001ed4c8 memread4 ax
 	001ed4d0 pop bx
 	001ed4d8 land bx,ax
 	001ed4e4 mov ax,bx
		001ed4f0: FALL_THROUGH

	[001ed4f0]
		001ed4ac: CONDITIONAL_JUMP
		001ed4b4: FALL_THROUGH
 	001ed4f0 jz 0x001ed534
		001ed534: CONDITIONAL_JUMP
		001ed4f8: FALL_THROUGH

	[001ed4f8]
		001ed4f0: FALL_THROUGH
 	001ed4f8 push ax
 	001ed500 mov mar,0x100024
 	001ed50c memread4 ax
 	001ed514 pop bx
 	001ed51c land bx,ax
 	001ed528 mov ax,bx
		001ed534: FALL_THROUGH

	[001ed534]
		001ed4f0: CONDITIONAL_JUMP
		001ed4f8: FALL_THROUGH
 	001ed534 jz 0x001ed580
		001ed580: CONDITIONAL_JUMP
		001ed53c: FALL_THROUGH

	[001ed53c]
		001ed534: FALL_THROUGH
 	001ed53c push ax
 	001ed544 mov mar,0x100028
 	001ed550 memread4 ax
 	001ed558 lnot ax
 	001ed560 pop bx
 	001ed568 land bx,ax
 	001ed574 mov ax,bx
		001ed580: FALL_THROUGH

	[001ed580]
		001ed534: CONDITIONAL_JUMP
		001ed53c: FALL_THROUGH
 	001ed580 jz 0x001ed5cc
		001ed5cc: CONDITIONAL_JUMP
		001ed588: FALL_THROUGH

	[001ed588]
		001ed580: FALL_THROUGH
 	001ed588 push ax
 	001ed590 mov mar,0x10002c
 	001ed59c memread4 ax
 	001ed5a4 lnot ax
 	001ed5ac pop bx
 	001ed5b4 land bx,ax
 	001ed5c0 mov ax,bx
		001ed5cc: FALL_THROUGH

	[001ed5cc]
		001ed580: CONDITIONAL_JUMP
		001ed588: FALL_THROUGH
 	001ed5cc jz 0x001ed61c
		001ed61c: CONDITIONAL_JUMP
		001ed5d4: FALL_THROUGH

	[001ed5d4]
		001ed5cc: FALL_THROUGH
 	001ed5d4 mov ax,0x1
 	001ed5e0 mov mar,0x100028
 	001ed5ec memwrite4 ax
 	001ed5f4 mov ax,0x1
 	001ed600 mov mar,0x1000d4
 	001ed60c memwrite4 ax
 	001ed614 jmp 0x001ed974
		001ed974: UNCONDITIONAL_JUMP

	[001ed61c]
		001ed5cc: CONDITIONAL_JUMP
 	001ed61c sourceline 0x2b05
 	001ed624 mov mar,0x100000
 	001ed630 memread4 ax
 	001ed638 jz 0x001ed67c
		001ed67c: CONDITIONAL_JUMP
		001ed640: FALL_THROUGH

	[001ed640]
		001ed61c: FALL_THROUGH
 	001ed640 push ax
 	001ed648 mov mar,0x100004
 	001ed654 memread4 ax
 	001ed65c pop bx
 	001ed664 land bx,ax
 	001ed670 mov ax,bx
		001ed67c: FALL_THROUGH

	[001ed67c]
		001ed61c: CONDITIONAL_JUMP
		001ed640: FALL_THROUGH
 	001ed67c jz 0x001ed6c0
		001ed6c0: CONDITIONAL_JUMP
		001ed684: FALL_THROUGH

	[001ed684]
		001ed67c: FALL_THROUGH
 	001ed684 push ax
 	001ed68c mov mar,0x100008
 	001ed698 memread4 ax
 	001ed6a0 pop bx
 	001ed6a8 land bx,ax
 	001ed6b4 mov ax,bx
		001ed6c0: FALL_THROUGH

	[001ed6c0]
		001ed67c: CONDITIONAL_JUMP
		001ed684: FALL_THROUGH
 	001ed6c0 jz 0x001ed704
		001ed704: CONDITIONAL_JUMP
		001ed6c8: FALL_THROUGH

	[001ed6c8]
		001ed6c0: FALL_THROUGH
 	001ed6c8 push ax
 	001ed6d0 mov mar,0x10000c
 	001ed6dc memread4 ax
 	001ed6e4 pop bx
 	001ed6ec land bx,ax
 	001ed6f8 mov ax,bx
		001ed704: FALL_THROUGH

	[001ed704]
		001ed6c0: CONDITIONAL_JUMP
		001ed6c8: FALL_THROUGH
 	001ed704 jz 0x001ed748
		001ed748: CONDITIONAL_JUMP
		001ed70c: FALL_THROUGH

	[001ed70c]
		001ed704: FALL_THROUGH
 	001ed70c push ax
 	001ed714 mov mar,0x100010
 	001ed720 memread4 ax
 	001ed728 pop bx
 	001ed730 land bx,ax
 	001ed73c mov ax,bx
		001ed748: FALL_THROUGH

	[001ed748]
		001ed704: CONDITIONAL_JUMP
		001ed70c: FALL_THROUGH
 	001ed748 jz 0x001ed78c
		001ed78c: CONDITIONAL_JUMP
		001ed750: FALL_THROUGH

	[001ed750]
		001ed748: FALL_THROUGH
 	001ed750 push ax
 	001ed758 mov mar,0x100014
 	001ed764 memread4 ax
 	001ed76c pop bx
 	001ed774 land bx,ax
 	001ed780 mov ax,bx
		001ed78c: FALL_THROUGH

	[001ed78c]
		001ed748: CONDITIONAL_JUMP
		001ed750: FALL_THROUGH
 	001ed78c jz 0x001ed7d0
		001ed7d0: CONDITIONAL_JUMP
		001ed794: FALL_THROUGH

	[001ed794]
		001ed78c: FALL_THROUGH
 	001ed794 push ax
 	001ed79c mov mar,0x100018
 	001ed7a8 memread4 ax
 	001ed7b0 pop bx
 	001ed7b8 land bx,ax
 	001ed7c4 mov ax,bx
		001ed7d0: FALL_THROUGH

	[001ed7d0]
		001ed78c: CONDITIONAL_JUMP
		001ed794: FALL_THROUGH
 	001ed7d0 jz 0x001ed814
		001ed814: CONDITIONAL_JUMP
		001ed7d8: FALL_THROUGH

	[001ed7d8]
		001ed7d0: FALL_THROUGH
 	001ed7d8 push ax
 	001ed7e0 mov mar,0x10001c
 	001ed7ec memread4 ax
 	001ed7f4 pop bx
 	001ed7fc land bx,ax
 	001ed808 mov ax,bx
		001ed814: FALL_THROUGH

	[001ed814]
		001ed7d0: CONDITIONAL_JUMP
		001ed7d8: FALL_THROUGH
 	001ed814 jz 0x001ed858
		001ed858: CONDITIONAL_JUMP
		001ed81c: FALL_THROUGH

	[001ed81c]
		001ed814: FALL_THROUGH
 	001ed81c push ax
 	001ed824 mov mar,0x100020
 	001ed830 memread4 ax
 	001ed838 pop bx
 	001ed840 land bx,ax
 	001ed84c mov ax,bx
		001ed858: FALL_THROUGH

	[001ed858]
		001ed814: CONDITIONAL_JUMP
		001ed81c: FALL_THROUGH
 	001ed858 jz 0x001ed89c
		001ed89c: CONDITIONAL_JUMP
		001ed860: FALL_THROUGH

	[001ed860]
		001ed858: FALL_THROUGH
 	001ed860 push ax
 	001ed868 mov mar,0x100024
 	001ed874 memread4 ax
 	001ed87c pop bx
 	001ed884 land bx,ax
 	001ed890 mov ax,bx
		001ed89c: FALL_THROUGH

	[001ed89c]
		001ed858: CONDITIONAL_JUMP
		001ed860: FALL_THROUGH
 	001ed89c jz 0x001ed8e0
		001ed8e0: CONDITIONAL_JUMP
		001ed8a4: FALL_THROUGH

	[001ed8a4]
		001ed89c: FALL_THROUGH
 	001ed8a4 push ax
 	001ed8ac mov mar,0x100028
 	001ed8b8 memread4 ax
 	001ed8c0 pop bx
 	001ed8c8 land bx,ax
 	001ed8d4 mov ax,bx
		001ed8e0: FALL_THROUGH

	[001ed8e0]
		001ed89c: CONDITIONAL_JUMP
		001ed8a4: FALL_THROUGH
 	001ed8e0 jz 0x001ed92c
		001ed92c: CONDITIONAL_JUMP
		001ed8e8: FALL_THROUGH

	[001ed8e8]
		001ed8e0: FALL_THROUGH
 	001ed8e8 push ax
 	001ed8f0 mov mar,0x10002c
 	001ed8fc memread4 ax
 	001ed904 lnot ax
 	001ed90c pop bx
 	001ed914 land bx,ax
 	001ed920 mov ax,bx
		001ed92c: FALL_THROUGH

	[001ed92c]
		001ed8e0: CONDITIONAL_JUMP
		001ed8e8: FALL_THROUGH
 	001ed92c jz 0x001ed974
		001ed974: CONDITIONAL_JUMP
		001ed934: FALL_THROUGH

	[001ed934]
		001ed92c: FALL_THROUGH
 	001ed934 mov ax,0x1
 	001ed940 mov mar,0x10002c
 	001ed94c memwrite4 ax
 	001ed954 mov ax,0x1
 	001ed960 mov mar,0x1000d8
 	001ed96c memwrite4 ax
		001ed974: FALL_THROUGH

	[001ed974]
		001eb25c: UNCONDITIONAL_JUMP
		001eb60c: UNCONDITIONAL_JUMP
		001eb9b4: UNCONDITIONAL_JUMP
		001ebd54: UNCONDITIONAL_JUMP
		001ec0ec: UNCONDITIONAL_JUMP
		001ec47c: UNCONDITIONAL_JUMP
		001ec804: UNCONDITIONAL_JUMP
		001ecb84: UNCONDITIONAL_JUMP
		001ecefc: UNCONDITIONAL_JUMP
		001ed26c: UNCONDITIONAL_JUMP
		001ed5d4: UNCONDITIONAL_JUMP
		001ed92c: CONDITIONAL_JUMP
		001ed934: FALL_THROUGH
 	001ed974 sourceline 0x2b09
 	001ed97c jmp 0x001edad8
		001edad8: UNCONDITIONAL_JUMP

	[001ed984]
		001eae90: CONDITIONAL_JUMP
 	001ed984 sourceline 0x2b0c
 	001ed98c mov mar,0x32ef20
 	001ed998 memread4 ax
 	001ed9a0 lnot ax
 	001ed9a8 jz 0x001edad8
		001edad8: CONDITIONAL_JUMP
		001ed9b0: FALL_THROUGH

	[001ed9b0]
		001ed984: FALL_THROUGH
 	001ed9b0 sourceline 0x2b0e
 	001ed9b8 mov ax,0x1
 	001ed9c4 mov bx,ax
 	001ed9d0 mov mar,0x3cef20
 	001ed9dc mov ax,mar
 	001ed9e8 push op
 	001ed9f0 mov op,ax
 	001ed9f8 farpush bx
 	001eda00 setfuncargs 0x1
 	001eda08 mov ax,0x69ef20
 	001eda14 farcall ax
 	001eda1c farsubsp 0x1
 	001eda24 pop op
 	001eda2c sourceline 0x2b0f
 	001eda34 push op
 	001eda3c mov ax,0x2c77e7
 	001eda48 farpush ax
 	001eda50 mov ax,0x138
 	001eda5c farpush ax
 	001eda64 mov ax,0x92
 	001eda70 farpush ax
 	001eda78 mov ax,0x0
 	001eda84 farpush ax
 	001eda8c mov mar,0x3cef20
 	001eda98 mov ax,mar
 	001edaa4 mov op,ax
 	001edaac setfuncargs 0x4
 	001edab4 mov ax,0x6aef20
 	001edac0 farcall ax
 	001edac8 farsubsp 0x4
 	001edad0 pop op
		001edad8: FALL_THROUGH

	[001edad8]
		001ead64: CONDITIONAL_JUMP
		001ed974: UNCONDITIONAL_JUMP
		001ed984: CONDITIONAL_JUMP
		001ed9b0: FALL_THROUGH
 	001edad8 sourceline 0x2b15
 	001edae0 stackptr 0xc
 	001edae8 memread4 ax
 	001edaf0 push ax
 	001edaf8 mov ax,0x2
 	001edb04 pop bx
 	001edb0c cmpeq bx,ax
 	001edb18 mov ax,bx
 	001edb24 jz 0x001edce4
		001edce4: CONDITIONAL_JUMP
		001edb2c: FALL_THROUGH

	[001edb2c]
		001edad8: FALL_THROUGH
 	001edb2c sourceline 0x2b17
 	001edb34 mov mar,0x626f20
 	001edb40 mov ax,mar
 	001edb4c push op
 	001edb54 mov op,ax
 	001edb5c setfuncargs 0x0
 	001edb64 mov ax,0x606f20
 	001edb70 farcall ax
 	001edb78 pop op
 	001edb80 lnot ax
 	001edb88 jz 0x001edce4
		001edce4: CONDITIONAL_JUMP
		001edb90: FALL_THROUGH

	[001edb90]
		001edb2c: FALL_THROUGH
 	001edb90 sourceline 0x2b19
 	001edb98 mov mar,0x32ef20
 	001edba4 memread4 ax
 	001edbac lnot ax
 	001edbb4 jz 0x001edce4
		001edce4: CONDITIONAL_JUMP
		001edbbc: FALL_THROUGH

	[001edbbc]
		001edb90: FALL_THROUGH
 	001edbbc sourceline 0x2b1b
 	001edbc4 mov ax,0x1
 	001edbd0 mov bx,ax
 	001edbdc mov mar,0x3cef20
 	001edbe8 mov ax,mar
 	001edbf4 push op
 	001edbfc mov op,ax
 	001edc04 farpush bx
 	001edc0c setfuncargs 0x1
 	001edc14 mov ax,0x69ef20
 	001edc20 farcall ax
 	001edc28 farsubsp 0x1
 	001edc30 pop op
 	001edc38 sourceline 0x2b1c
 	001edc40 push op
 	001edc48 mov ax,0x2c7835
 	001edc54 farpush ax
 	001edc5c mov ax,0x138
 	001edc68 farpush ax
 	001edc70 mov ax,0x92
 	001edc7c farpush ax
 	001edc84 mov ax,0x0
 	001edc90 farpush ax
 	001edc98 mov mar,0x3cef20
 	001edca4 mov ax,mar
 	001edcb0 mov op,ax
 	001edcb8 setfuncargs 0x4
 	001edcc0 mov ax,0x6aef20
 	001edccc farcall ax
 	001edcd4 farsubsp 0x4
 	001edcdc pop op
		001edce4: FALL_THROUGH

	[001edce4]
		001edad8: CONDITIONAL_JUMP
		001edb2c: CONDITIONAL_JUMP
		001edb90: CONDITIONAL_JUMP
		001edbbc: FALL_THROUGH
 	001edce4 sourceline 0x2b20
 	001edcec mov ax,0x0
 	001edcf8 stackptr 0x8
 	001edd00 memzerond
 	001edd04 ret

btnTop_OnClick$2:
	[001edd08]
 	001edd08 sourceline 0x2b23
 	001edd10 thisaddr
 	001edd18 stackptr 0x8
 	001edd20 memread4 ax
 	001edd28 meminit ax
 	001edd30 sourceline 0x2b24
 	001edd38 stackptr 0xc
 	001edd40 memread4 ax
 	001edd48 push ax
 	001edd50 mov ax,0x1
 	001edd5c pop bx
 	001edd64 cmpeq bx,ax
 	001edd70 mov ax,bx
 	001edd7c jz 0x001f09cc
		001f09cc: CONDITIONAL_JUMP
		001edd84: FALL_THROUGH

	[001edd84]
		001edd08: FALL_THROUGH
 	001edd84 sourceline 0x2b26
*	001edd8c mov mar,0x626f20
 	001edd98 mov ax,mar
 	001edda4 push op
 	001eddac mov op,ax
 	001eddb4 setfuncargs 0x0
 	001eddbc mov ax,0x606f20
 	001eddc8 farcall ax
 	001eddd0 pop op
 	001eddd8 jz 0x001f0878
		001f0878: CONDITIONAL_JUMP
		001edde0: FALL_THROUGH

	[001edde0]
		001edd84: FALL_THROUGH
 	001edde0 sourceline 0x2b28
 	001edde8 mov mar,0x100000
 	001eddf4 memread4 ax
 	001eddfc lnot ax
 	001ede04 jz 0x001ede50
		001ede50: CONDITIONAL_JUMP
		001ede0c: FALL_THROUGH

	[001ede0c]
		001edde0: FALL_THROUGH
 	001ede0c push ax
 	001ede14 mov mar,0x100004
 	001ede20 memread4 ax
 	001ede28 lnot ax
 	001ede30 pop bx
 	001ede38 land bx,ax
 	001ede44 mov ax,bx
		001ede50: FALL_THROUGH

	[001ede50]
		001edde0: CONDITIONAL_JUMP
		001ede0c: FALL_THROUGH
 	001ede50 jz 0x001ede9c
		001ede9c: CONDITIONAL_JUMP
		001ede58: FALL_THROUGH

	[001ede58]
		001ede50: FALL_THROUGH
 	001ede58 push ax
 	001ede60 mov mar,0x100008
 	001ede6c memread4 ax
 	001ede74 lnot ax
 	001ede7c pop bx
 	001ede84 land bx,ax
 	001ede90 mov ax,bx
		001ede9c: FALL_THROUGH

	[001ede9c]
		001ede50: CONDITIONAL_JUMP
		001ede58: FALL_THROUGH
 	001ede9c jz 0x001edee8
		001edee8: CONDITIONAL_JUMP
		001edea4: FALL_THROUGH

	[001edea4]
		001ede9c: FALL_THROUGH
 	001edea4 push ax
 	001edeac mov mar,0x10000c
 	001edeb8 memread4 ax
 	001edec0 lnot ax
 	001edec8 pop bx
 	001eded0 land bx,ax
 	001ededc mov ax,bx
		001edee8: FALL_THROUGH

	[001edee8]
		001ede9c: CONDITIONAL_JUMP
		001edea4: FALL_THROUGH
 	001edee8 jz 0x001edf34
		001edf34: CONDITIONAL_JUMP
		001edef0: FALL_THROUGH

	[001edef0]
		001edee8: FALL_THROUGH
 	001edef0 push ax
 	001edef8 mov mar,0x100010
 	001edf04 memread4 ax
 	001edf0c lnot ax
 	001edf14 pop bx
 	001edf1c land bx,ax
 	001edf28 mov ax,bx
		001edf34: FALL_THROUGH

	[001edf34]
		001edee8: CONDITIONAL_JUMP
		001edef0: FALL_THROUGH
 	001edf34 jz 0x001edf80
		001edf80: CONDITIONAL_JUMP
		001edf3c: FALL_THROUGH

	[001edf3c]
		001edf34: FALL_THROUGH
 	001edf3c push ax
 	001edf44 mov mar,0x100014
 	001edf50 memread4 ax
 	001edf58 lnot ax
 	001edf60 pop bx
 	001edf68 land bx,ax
 	001edf74 mov ax,bx
		001edf80: FALL_THROUGH

	[001edf80]
		001edf34: CONDITIONAL_JUMP
		001edf3c: FALL_THROUGH
 	001edf80 jz 0x001edfcc
		001edfcc: CONDITIONAL_JUMP
		001edf88: FALL_THROUGH

	[001edf88]
		001edf80: FALL_THROUGH
 	001edf88 push ax
 	001edf90 mov mar,0x100018
 	001edf9c memread4 ax
 	001edfa4 lnot ax
 	001edfac pop bx
 	001edfb4 land bx,ax
 	001edfc0 mov ax,bx
		001edfcc: FALL_THROUGH

	[001edfcc]
		001edf80: CONDITIONAL_JUMP
		001edf88: FALL_THROUGH
 	001edfcc jz 0x001ee018
		001ee018: CONDITIONAL_JUMP
		001edfd4: FALL_THROUGH

	[001edfd4]
		001edfcc: FALL_THROUGH
 	001edfd4 push ax
 	001edfdc mov mar,0x10001c
 	001edfe8 memread4 ax
 	001edff0 lnot ax
 	001edff8 pop bx
 	001ee000 land bx,ax
 	001ee00c mov ax,bx
		001ee018: FALL_THROUGH

	[001ee018]
		001edfcc: CONDITIONAL_JUMP
		001edfd4: FALL_THROUGH
 	001ee018 jz 0x001ee064
		001ee064: CONDITIONAL_JUMP
		001ee020: FALL_THROUGH

	[001ee020]
		001ee018: FALL_THROUGH
 	001ee020 push ax
 	001ee028 mov mar,0x100020
 	001ee034 memread4 ax
 	001ee03c lnot ax
 	001ee044 pop bx
 	001ee04c land bx,ax
 	001ee058 mov ax,bx
		001ee064: FALL_THROUGH

	[001ee064]
		001ee018: CONDITIONAL_JUMP
		001ee020: FALL_THROUGH
 	001ee064 jz 0x001ee0b0
		001ee0b0: CONDITIONAL_JUMP
		001ee06c: FALL_THROUGH

	[001ee06c]
		001ee064: FALL_THROUGH
 	001ee06c push ax
 	001ee074 mov mar,0x100024
 	001ee080 memread4 ax
 	001ee088 lnot ax
 	001ee090 pop bx
 	001ee098 land bx,ax
 	001ee0a4 mov ax,bx
		001ee0b0: FALL_THROUGH

	[001ee0b0]
		001ee064: CONDITIONAL_JUMP
		001ee06c: FALL_THROUGH
 	001ee0b0 jz 0x001ee0fc
		001ee0fc: CONDITIONAL_JUMP
		001ee0b8: FALL_THROUGH

	[001ee0b8]
		001ee0b0: FALL_THROUGH
 	001ee0b8 push ax
 	001ee0c0 mov mar,0x100028
 	001ee0cc memread4 ax
 	001ee0d4 lnot ax
 	001ee0dc pop bx
 	001ee0e4 land bx,ax
 	001ee0f0 mov ax,bx
		001ee0fc: FALL_THROUGH

	[001ee0fc]
		001ee0b0: CONDITIONAL_JUMP
		001ee0b8: FALL_THROUGH
 	001ee0fc jz 0x001ee148
		001ee148: CONDITIONAL_JUMP
		001ee104: FALL_THROUGH

	[001ee104]
		001ee0fc: FALL_THROUGH
 	001ee104 push ax
 	001ee10c mov mar,0x10002c
 	001ee118 memread4 ax
 	001ee120 lnot ax
 	001ee128 pop bx
 	001ee130 land bx,ax
 	001ee13c mov ax,bx
		001ee148: FALL_THROUGH

	[001ee148]
		001ee0fc: CONDITIONAL_JUMP
		001ee104: FALL_THROUGH
 	001ee148 jz 0x001ee198
		001ee198: CONDITIONAL_JUMP
		001ee150: FALL_THROUGH

	[001ee150]
		001ee148: FALL_THROUGH
 	001ee150 mov ax,0x1
 	001ee15c mov mar,0x100000
 	001ee168 memwrite4 ax
 	001ee170 mov ax,0x2
 	001ee17c mov mar,0x1000ac
 	001ee188 memwrite4 ax
 	001ee190 jmp 0x001f0868
		001f0868: UNCONDITIONAL_JUMP

	[001ee198]
		001ee148: CONDITIONAL_JUMP
 	001ee198 sourceline 0x2b2d
 	001ee1a0 mov mar,0x100000
 	001ee1ac memread4 ax
 	001ee1b4 jz 0x001ee200
		001ee200: CONDITIONAL_JUMP
		001ee1bc: FALL_THROUGH

	[001ee1bc]
		001ee198: FALL_THROUGH
 	001ee1bc push ax
 	001ee1c4 mov mar,0x100004
 	001ee1d0 memread4 ax
 	001ee1d8 lnot ax
 	001ee1e0 pop bx
 	001ee1e8 land bx,ax
 	001ee1f4 mov ax,bx
		001ee200: FALL_THROUGH

	[001ee200]
		001ee198: CONDITIONAL_JUMP
		001ee1bc: FALL_THROUGH
 	001ee200 jz 0x001ee24c
		001ee24c: CONDITIONAL_JUMP
		001ee208: FALL_THROUGH

	[001ee208]
		001ee200: FALL_THROUGH
 	001ee208 push ax
 	001ee210 mov mar,0x100008
 	001ee21c memread4 ax
 	001ee224 lnot ax
 	001ee22c pop bx
 	001ee234 land bx,ax
 	001ee240 mov ax,bx
		001ee24c: FALL_THROUGH

	[001ee24c]
		001ee200: CONDITIONAL_JUMP
		001ee208: FALL_THROUGH
 	001ee24c jz 0x001ee298
		001ee298: CONDITIONAL_JUMP
		001ee254: FALL_THROUGH

	[001ee254]
		001ee24c: FALL_THROUGH
 	001ee254 push ax
 	001ee25c mov mar,0x10000c
 	001ee268 memread4 ax
 	001ee270 lnot ax
 	001ee278 pop bx
 	001ee280 land bx,ax
 	001ee28c mov ax,bx
		001ee298: FALL_THROUGH

	[001ee298]
		001ee24c: CONDITIONAL_JUMP
		001ee254: FALL_THROUGH
 	001ee298 jz 0x001ee2e4
		001ee2e4: CONDITIONAL_JUMP
		001ee2a0: FALL_THROUGH

	[001ee2a0]
		001ee298: FALL_THROUGH
 	001ee2a0 push ax
 	001ee2a8 mov mar,0x100010
 	001ee2b4 memread4 ax
 	001ee2bc lnot ax
 	001ee2c4 pop bx
 	001ee2cc land bx,ax
 	001ee2d8 mov ax,bx
		001ee2e4: FALL_THROUGH

	[001ee2e4]
		001ee298: CONDITIONAL_JUMP
		001ee2a0: FALL_THROUGH
 	001ee2e4 jz 0x001ee330
		001ee330: CONDITIONAL_JUMP
		001ee2ec: FALL_THROUGH

	[001ee2ec]
		001ee2e4: FALL_THROUGH
 	001ee2ec push ax
 	001ee2f4 mov mar,0x100014
 	001ee300 memread4 ax
 	001ee308 lnot ax
 	001ee310 pop bx
 	001ee318 land bx,ax
 	001ee324 mov ax,bx
		001ee330: FALL_THROUGH

	[001ee330]
		001ee2e4: CONDITIONAL_JUMP
		001ee2ec: FALL_THROUGH
 	001ee330 jz 0x001ee37c
		001ee37c: CONDITIONAL_JUMP
		001ee338: FALL_THROUGH

	[001ee338]
		001ee330: FALL_THROUGH
 	001ee338 push ax
 	001ee340 mov mar,0x100018
 	001ee34c memread4 ax
 	001ee354 lnot ax
 	001ee35c pop bx
 	001ee364 land bx,ax
 	001ee370 mov ax,bx
		001ee37c: FALL_THROUGH

	[001ee37c]
		001ee330: CONDITIONAL_JUMP
		001ee338: FALL_THROUGH
 	001ee37c jz 0x001ee3c8
		001ee3c8: CONDITIONAL_JUMP
		001ee384: FALL_THROUGH

	[001ee384]
		001ee37c: FALL_THROUGH
 	001ee384 push ax
 	001ee38c mov mar,0x10001c
 	001ee398 memread4 ax
 	001ee3a0 lnot ax
 	001ee3a8 pop bx
 	001ee3b0 land bx,ax
 	001ee3bc mov ax,bx
		001ee3c8: FALL_THROUGH

	[001ee3c8]
		001ee37c: CONDITIONAL_JUMP
		001ee384: FALL_THROUGH
 	001ee3c8 jz 0x001ee414
		001ee414: CONDITIONAL_JUMP
		001ee3d0: FALL_THROUGH

	[001ee3d0]
		001ee3c8: FALL_THROUGH
 	001ee3d0 push ax
 	001ee3d8 mov mar,0x100020
 	001ee3e4 memread4 ax
 	001ee3ec lnot ax
 	001ee3f4 pop bx
 	001ee3fc land bx,ax
 	001ee408 mov ax,bx
		001ee414: FALL_THROUGH

	[001ee414]
		001ee3c8: CONDITIONAL_JUMP
		001ee3d0: FALL_THROUGH
 	001ee414 jz 0x001ee460
		001ee460: CONDITIONAL_JUMP
		001ee41c: FALL_THROUGH

	[001ee41c]
		001ee414: FALL_THROUGH
 	001ee41c push ax
 	001ee424 mov mar,0x100024
 	001ee430 memread4 ax
 	001ee438 lnot ax
 	001ee440 pop bx
 	001ee448 land bx,ax
 	001ee454 mov ax,bx
		001ee460: FALL_THROUGH

	[001ee460]
		001ee414: CONDITIONAL_JUMP
		001ee41c: FALL_THROUGH
 	001ee460 jz 0x001ee4ac
		001ee4ac: CONDITIONAL_JUMP
		001ee468: FALL_THROUGH

	[001ee468]
		001ee460: FALL_THROUGH
 	001ee468 push ax
 	001ee470 mov mar,0x100028
 	001ee47c memread4 ax
 	001ee484 lnot ax
 	001ee48c pop bx
 	001ee494 land bx,ax
 	001ee4a0 mov ax,bx
		001ee4ac: FALL_THROUGH

	[001ee4ac]
		001ee460: CONDITIONAL_JUMP
		001ee468: FALL_THROUGH
 	001ee4ac jz 0x001ee4f8
		001ee4f8: CONDITIONAL_JUMP
		001ee4b4: FALL_THROUGH

	[001ee4b4]
		001ee4ac: FALL_THROUGH
 	001ee4b4 push ax
 	001ee4bc mov mar,0x10002c
 	001ee4c8 memread4 ax
 	001ee4d0 lnot ax
 	001ee4d8 pop bx
 	001ee4e0 land bx,ax
 	001ee4ec mov ax,bx
		001ee4f8: FALL_THROUGH

	[001ee4f8]
		001ee4ac: CONDITIONAL_JUMP
		001ee4b4: FALL_THROUGH
 	001ee4f8 jz 0x001ee548
		001ee548: CONDITIONAL_JUMP
		001ee500: FALL_THROUGH

	[001ee500]
		001ee4f8: FALL_THROUGH
 	001ee500 mov ax,0x1
 	001ee50c mov mar,0x100004
 	001ee518 memwrite4 ax
 	001ee520 mov ax,0x2
 	001ee52c mov mar,0x1000b0
 	001ee538 memwrite4 ax
 	001ee540 jmp 0x001f0868
		001f0868: UNCONDITIONAL_JUMP

	[001ee548]
		001ee4f8: CONDITIONAL_JUMP
 	001ee548 sourceline 0x2b32
 	001ee550 mov mar,0x100000
 	001ee55c memread4 ax
 	001ee564 jz 0x001ee5a8
		001ee5a8: CONDITIONAL_JUMP
		001ee56c: FALL_THROUGH

	[001ee56c]
		001ee548: FALL_THROUGH
 	001ee56c push ax
 	001ee574 mov mar,0x100004
 	001ee580 memread4 ax
 	001ee588 pop bx
 	001ee590 land bx,ax
 	001ee59c mov ax,bx
		001ee5a8: FALL_THROUGH

	[001ee5a8]
		001ee548: CONDITIONAL_JUMP
		001ee56c: FALL_THROUGH
 	001ee5a8 jz 0x001ee5f4
		001ee5f4: CONDITIONAL_JUMP
		001ee5b0: FALL_THROUGH

	[001ee5b0]
		001ee5a8: FALL_THROUGH
 	001ee5b0 push ax
 	001ee5b8 mov mar,0x100008
 	001ee5c4 memread4 ax
 	001ee5cc lnot ax
 	001ee5d4 pop bx
 	001ee5dc land bx,ax
 	001ee5e8 mov ax,bx
		001ee5f4: FALL_THROUGH

	[001ee5f4]
		001ee5a8: CONDITIONAL_JUMP
		001ee5b0: FALL_THROUGH
 	001ee5f4 jz 0x001ee640
		001ee640: CONDITIONAL_JUMP
		001ee5fc: FALL_THROUGH

	[001ee5fc]
		001ee5f4: FALL_THROUGH
 	001ee5fc push ax
 	001ee604 mov mar,0x10000c
 	001ee610 memread4 ax
 	001ee618 lnot ax
 	001ee620 pop bx
 	001ee628 land bx,ax
 	001ee634 mov ax,bx
		001ee640: FALL_THROUGH

	[001ee640]
		001ee5f4: CONDITIONAL_JUMP
		001ee5fc: FALL_THROUGH
 	001ee640 jz 0x001ee68c
		001ee68c: CONDITIONAL_JUMP
		001ee648: FALL_THROUGH

	[001ee648]
		001ee640: FALL_THROUGH
 	001ee648 push ax
 	001ee650 mov mar,0x100010
 	001ee65c memread4 ax
 	001ee664 lnot ax
 	001ee66c pop bx
 	001ee674 land bx,ax
 	001ee680 mov ax,bx
		001ee68c: FALL_THROUGH

	[001ee68c]
		001ee640: CONDITIONAL_JUMP
		001ee648: FALL_THROUGH
 	001ee68c jz 0x001ee6d8
		001ee6d8: CONDITIONAL_JUMP
		001ee694: FALL_THROUGH

	[001ee694]
		001ee68c: FALL_THROUGH
 	001ee694 push ax
 	001ee69c mov mar,0x100014
 	001ee6a8 memread4 ax
 	001ee6b0 lnot ax
 	001ee6b8 pop bx
 	001ee6c0 land bx,ax
 	001ee6cc mov ax,bx
		001ee6d8: FALL_THROUGH

	[001ee6d8]
		001ee68c: CONDITIONAL_JUMP
		001ee694: FALL_THROUGH
 	001ee6d8 jz 0x001ee724
		001ee724: CONDITIONAL_JUMP
		001ee6e0: FALL_THROUGH

	[001ee6e0]
		001ee6d8: FALL_THROUGH
 	001ee6e0 push ax
 	001ee6e8 mov mar,0x100018
 	001ee6f4 memread4 ax
 	001ee6fc lnot ax
 	001ee704 pop bx
 	001ee70c land bx,ax
 	001ee718 mov ax,bx
		001ee724: FALL_THROUGH

	[001ee724]
		001ee6d8: CONDITIONAL_JUMP
		001ee6e0: FALL_THROUGH
 	001ee724 jz 0x001ee770
		001ee770: CONDITIONAL_JUMP
		001ee72c: FALL_THROUGH

	[001ee72c]
		001ee724: FALL_THROUGH
 	001ee72c push ax
 	001ee734 mov mar,0x10001c
 	001ee740 memread4 ax
 	001ee748 lnot ax
 	001ee750 pop bx
 	001ee758 land bx,ax
 	001ee764 mov ax,bx
		001ee770: FALL_THROUGH

	[001ee770]
		001ee724: CONDITIONAL_JUMP
		001ee72c: FALL_THROUGH
 	001ee770 jz 0x001ee7bc
		001ee7bc: CONDITIONAL_JUMP
		001ee778: FALL_THROUGH

	[001ee778]
		001ee770: FALL_THROUGH
 	001ee778 push ax
 	001ee780 mov mar,0x100020
 	001ee78c memread4 ax
 	001ee794 lnot ax
 	001ee79c pop bx
 	001ee7a4 land bx,ax
 	001ee7b0 mov ax,bx
		001ee7bc: FALL_THROUGH

	[001ee7bc]
		001ee770: CONDITIONAL_JUMP
		001ee778: FALL_THROUGH
 	001ee7bc jz 0x001ee808
		001ee808: CONDITIONAL_JUMP
		001ee7c4: FALL_THROUGH

	[001ee7c4]
		001ee7bc: FALL_THROUGH
 	001ee7c4 push ax
 	001ee7cc mov mar,0x100024
 	001ee7d8 memread4 ax
 	001ee7e0 lnot ax
 	001ee7e8 pop bx
 	001ee7f0 land bx,ax
 	001ee7fc mov ax,bx
		001ee808: FALL_THROUGH

	[001ee808]
		001ee7bc: CONDITIONAL_JUMP
		001ee7c4: FALL_THROUGH
 	001ee808 jz 0x001ee854
		001ee854: CONDITIONAL_JUMP
		001ee810: FALL_THROUGH

	[001ee810]
		001ee808: FALL_THROUGH
 	001ee810 push ax
 	001ee818 mov mar,0x100028
 	001ee824 memread4 ax
 	001ee82c lnot ax
 	001ee834 pop bx
 	001ee83c land bx,ax
 	001ee848 mov ax,bx
		001ee854: FALL_THROUGH

	[001ee854]
		001ee808: CONDITIONAL_JUMP
		001ee810: FALL_THROUGH
 	001ee854 jz 0x001ee8a0
		001ee8a0: CONDITIONAL_JUMP
		001ee85c: FALL_THROUGH

	[001ee85c]
		001ee854: FALL_THROUGH
 	001ee85c push ax
 	001ee864 mov mar,0x10002c
 	001ee870 memread4 ax
 	001ee878 lnot ax
 	001ee880 pop bx
 	001ee888 land bx,ax
 	001ee894 mov ax,bx
		001ee8a0: FALL_THROUGH

	[001ee8a0]
		001ee854: CONDITIONAL_JUMP
		001ee85c: FALL_THROUGH
 	001ee8a0 jz 0x001ee8f0
		001ee8f0: CONDITIONAL_JUMP
		001ee8a8: FALL_THROUGH

	[001ee8a8]
		001ee8a0: FALL_THROUGH
 	001ee8a8 mov ax,0x1
 	001ee8b4 mov mar,0x100008
 	001ee8c0 memwrite4 ax
 	001ee8c8 mov ax,0x2
 	001ee8d4 mov mar,0x1000b4
 	001ee8e0 memwrite4 ax
 	001ee8e8 jmp 0x001f0868
		001f0868: UNCONDITIONAL_JUMP

	[001ee8f0]
		001ee8a0: CONDITIONAL_JUMP
 	001ee8f0 sourceline 0x2b37
 	001ee8f8 mov mar,0x100000
 	001ee904 memread4 ax
 	001ee90c jz 0x001ee950
		001ee950: CONDITIONAL_JUMP
		001ee914: FALL_THROUGH

	[001ee914]
		001ee8f0: FALL_THROUGH
 	001ee914 push ax
 	001ee91c mov mar,0x100004
 	001ee928 memread4 ax
 	001ee930 pop bx
 	001ee938 land bx,ax
 	001ee944 mov ax,bx
		001ee950: FALL_THROUGH

	[001ee950]
		001ee8f0: CONDITIONAL_JUMP
		001ee914: FALL_THROUGH
 	001ee950 jz 0x001ee994
		001ee994: CONDITIONAL_JUMP
		001ee958: FALL_THROUGH

	[001ee958]
		001ee950: FALL_THROUGH
 	001ee958 push ax
 	001ee960 mov mar,0x100008
 	001ee96c memread4 ax
 	001ee974 pop bx
 	001ee97c land bx,ax
 	001ee988 mov ax,bx
		001ee994: FALL_THROUGH

	[001ee994]
		001ee950: CONDITIONAL_JUMP
		001ee958: FALL_THROUGH
 	001ee994 jz 0x001ee9e0
		001ee9e0: CONDITIONAL_JUMP
		001ee99c: FALL_THROUGH

	[001ee99c]
		001ee994: FALL_THROUGH
 	001ee99c push ax
 	001ee9a4 mov mar,0x10000c
 	001ee9b0 memread4 ax
 	001ee9b8 lnot ax
 	001ee9c0 pop bx
 	001ee9c8 land bx,ax
 	001ee9d4 mov ax,bx
		001ee9e0: FALL_THROUGH

	[001ee9e0]
		001ee994: CONDITIONAL_JUMP
		001ee99c: FALL_THROUGH
 	001ee9e0 jz 0x001eea2c
		001eea2c: CONDITIONAL_JUMP
		001ee9e8: FALL_THROUGH

	[001ee9e8]
		001ee9e0: FALL_THROUGH
 	001ee9e8 push ax
 	001ee9f0 mov mar,0x100010
 	001ee9fc memread4 ax
 	001eea04 lnot ax
 	001eea0c pop bx
 	001eea14 land bx,ax
 	001eea20 mov ax,bx
		001eea2c: FALL_THROUGH

	[001eea2c]
		001ee9e0: CONDITIONAL_JUMP
		001ee9e8: FALL_THROUGH
 	001eea2c jz 0x001eea78
		001eea78: CONDITIONAL_JUMP
		001eea34: FALL_THROUGH

	[001eea34]
		001eea2c: FALL_THROUGH
 	001eea34 push ax
 	001eea3c mov mar,0x100014
 	001eea48 memread4 ax
 	001eea50 lnot ax
 	001eea58 pop bx
 	001eea60 land bx,ax
 	001eea6c mov ax,bx
		001eea78: FALL_THROUGH

	[001eea78]
		001eea2c: CONDITIONAL_JUMP
		001eea34: FALL_THROUGH
 	001eea78 jz 0x001eeac4
		001eeac4: CONDITIONAL_JUMP
		001eea80: FALL_THROUGH

	[001eea80]
		001eea78: FALL_THROUGH
 	001eea80 push ax
 	001eea88 mov mar,0x100018
 	001eea94 memread4 ax
 	001eea9c lnot ax
 	001eeaa4 pop bx
 	001eeaac land bx,ax
 	001eeab8 mov ax,bx
		001eeac4: FALL_THROUGH

	[001eeac4]
		001eea78: CONDITIONAL_JUMP
		001eea80: FALL_THROUGH
 	001eeac4 jz 0x001eeb10
		001eeb10: CONDITIONAL_JUMP
		001eeacc: FALL_THROUGH

	[001eeacc]
		001eeac4: FALL_THROUGH
 	001eeacc push ax
 	001eead4 mov mar,0x10001c
 	001eeae0 memread4 ax
 	001eeae8 lnot ax
 	001eeaf0 pop bx
 	001eeaf8 land bx,ax
 	001eeb04 mov ax,bx
		001eeb10: FALL_THROUGH

	[001eeb10]
		001eeac4: CONDITIONAL_JUMP
		001eeacc: FALL_THROUGH
 	001eeb10 jz 0x001eeb5c
		001eeb5c: CONDITIONAL_JUMP
		001eeb18: FALL_THROUGH

	[001eeb18]
		001eeb10: FALL_THROUGH
 	001eeb18 push ax
 	001eeb20 mov mar,0x100020
 	001eeb2c memread4 ax
 	001eeb34 lnot ax
 	001eeb3c pop bx
 	001eeb44 land bx,ax
 	001eeb50 mov ax,bx
		001eeb5c: FALL_THROUGH

	[001eeb5c]
		001eeb10: CONDITIONAL_JUMP
		001eeb18: FALL_THROUGH
 	001eeb5c jz 0x001eeba8
		001eeba8: CONDITIONAL_JUMP
		001eeb64: FALL_THROUGH

	[001eeb64]
		001eeb5c: FALL_THROUGH
 	001eeb64 push ax
 	001eeb6c mov mar,0x100024
 	001eeb78 memread4 ax
 	001eeb80 lnot ax
 	001eeb88 pop bx
 	001eeb90 land bx,ax
 	001eeb9c mov ax,bx
		001eeba8: FALL_THROUGH

	[001eeba8]
		001eeb5c: CONDITIONAL_JUMP
		001eeb64: FALL_THROUGH
 	001eeba8 jz 0x001eebf4
		001eebf4: CONDITIONAL_JUMP
		001eebb0: FALL_THROUGH

	[001eebb0]
		001eeba8: FALL_THROUGH
 	001eebb0 push ax
 	001eebb8 mov mar,0x100028
 	001eebc4 memread4 ax
 	001eebcc lnot ax
 	001eebd4 pop bx
 	001eebdc land bx,ax
 	001eebe8 mov ax,bx
		001eebf4: FALL_THROUGH

	[001eebf4]
		001eeba8: CONDITIONAL_JUMP
		001eebb0: FALL_THROUGH
 	001eebf4 jz 0x001eec40
		001eec40: CONDITIONAL_JUMP
		001eebfc: FALL_THROUGH

	[001eebfc]
		001eebf4: FALL_THROUGH
 	001eebfc push ax
 	001eec04 mov mar,0x10002c
 	001eec10 memread4 ax
 	001eec18 lnot ax
 	001eec20 pop bx
 	001eec28 land bx,ax
 	001eec34 mov ax,bx
		001eec40: FALL_THROUGH

	[001eec40]
		001eebf4: CONDITIONAL_JUMP
		001eebfc: FALL_THROUGH
 	001eec40 jz 0x001eec90
		001eec90: CONDITIONAL_JUMP
		001eec48: FALL_THROUGH

	[001eec48]
		001eec40: FALL_THROUGH
 	001eec48 mov ax,0x1
 	001eec54 mov mar,0x10000c
 	001eec60 memwrite4 ax
 	001eec68 mov ax,0x2
 	001eec74 mov mar,0x1000b8
 	001eec80 memwrite4 ax
 	001eec88 jmp 0x001f0868
		001f0868: UNCONDITIONAL_JUMP

	[001eec90]
		001eec40: CONDITIONAL_JUMP
 	001eec90 sourceline 0x2b3c
 	001eec98 mov mar,0x100000
 	001eeca4 memread4 ax
 	001eecac jz 0x001eecf0
		001eecf0: CONDITIONAL_JUMP
		001eecb4: FALL_THROUGH

	[001eecb4]
		001eec90: FALL_THROUGH
 	001eecb4 push ax
 	001eecbc mov mar,0x100004
 	001eecc8 memread4 ax
 	001eecd0 pop bx
 	001eecd8 land bx,ax
 	001eece4 mov ax,bx
		001eecf0: FALL_THROUGH

	[001eecf0]
		001eec90: CONDITIONAL_JUMP
		001eecb4: FALL_THROUGH
 	001eecf0 jz 0x001eed34
		001eed34: CONDITIONAL_JUMP
		001eecf8: FALL_THROUGH

	[001eecf8]
		001eecf0: FALL_THROUGH
 	001eecf8 push ax
 	001eed00 mov mar,0x100008
 	001eed0c memread4 ax
 	001eed14 pop bx
 	001eed1c land bx,ax
 	001eed28 mov ax,bx
		001eed34: FALL_THROUGH

	[001eed34]
		001eecf0: CONDITIONAL_JUMP
		001eecf8: FALL_THROUGH
 	001eed34 jz 0x001eed78
		001eed78: CONDITIONAL_JUMP
		001eed3c: FALL_THROUGH

	[001eed3c]
		001eed34: FALL_THROUGH
 	001eed3c push ax
 	001eed44 mov mar,0x10000c
 	001eed50 memread4 ax
 	001eed58 pop bx
 	001eed60 land bx,ax
 	001eed6c mov ax,bx
		001eed78: FALL_THROUGH

	[001eed78]
		001eed34: CONDITIONAL_JUMP
		001eed3c: FALL_THROUGH
 	001eed78 jz 0x001eedc4
		001eedc4: CONDITIONAL_JUMP
		001eed80: FALL_THROUGH

	[001eed80]
		001eed78: FALL_THROUGH
 	001eed80 push ax
 	001eed88 mov mar,0x100010
 	001eed94 memread4 ax
 	001eed9c lnot ax
 	001eeda4 pop bx
 	001eedac land bx,ax
 	001eedb8 mov ax,bx
		001eedc4: FALL_THROUGH

	[001eedc4]
		001eed78: CONDITIONAL_JUMP
		001eed80: FALL_THROUGH
 	001eedc4 jz 0x001eee10
		001eee10: CONDITIONAL_JUMP
		001eedcc: FALL_THROUGH

	[001eedcc]
		001eedc4: FALL_THROUGH
 	001eedcc push ax
 	001eedd4 mov mar,0x100014
 	001eede0 memread4 ax
 	001eede8 lnot ax
 	001eedf0 pop bx
 	001eedf8 land bx,ax
 	001eee04 mov ax,bx
		001eee10: FALL_THROUGH

	[001eee10]
		001eedc4: CONDITIONAL_JUMP
		001eedcc: FALL_THROUGH
 	001eee10 jz 0x001eee5c
		001eee5c: CONDITIONAL_JUMP
		001eee18: FALL_THROUGH

	[001eee18]
		001eee10: FALL_THROUGH
 	001eee18 push ax
 	001eee20 mov mar,0x100018
 	001eee2c memread4 ax
 	001eee34 lnot ax
 	001eee3c pop bx
 	001eee44 land bx,ax
 	001eee50 mov ax,bx
		001eee5c: FALL_THROUGH

	[001eee5c]
		001eee10: CONDITIONAL_JUMP
		001eee18: FALL_THROUGH
 	001eee5c jz 0x001eeea8
		001eeea8: CONDITIONAL_JUMP
		001eee64: FALL_THROUGH

	[001eee64]
		001eee5c: FALL_THROUGH
 	001eee64 push ax
 	001eee6c mov mar,0x10001c
 	001eee78 memread4 ax
 	001eee80 lnot ax
 	001eee88 pop bx
 	001eee90 land bx,ax
 	001eee9c mov ax,bx
		001eeea8: FALL_THROUGH

	[001eeea8]
		001eee5c: CONDITIONAL_JUMP
		001eee64: FALL_THROUGH
 	001eeea8 jz 0x001eeef4
		001eeef4: CONDITIONAL_JUMP
		001eeeb0: FALL_THROUGH

	[001eeeb0]
		001eeea8: FALL_THROUGH
 	001eeeb0 push ax
 	001eeeb8 mov mar,0x100020
 	001eeec4 memread4 ax
 	001eeecc lnot ax
 	001eeed4 pop bx
 	001eeedc land bx,ax
 	001eeee8 mov ax,bx
		001eeef4: FALL_THROUGH

	[001eeef4]
		001eeea8: CONDITIONAL_JUMP
		001eeeb0: FALL_THROUGH
 	001eeef4 jz 0x001eef40
		001eef40: CONDITIONAL_JUMP
		001eeefc: FALL_THROUGH

	[001eeefc]
		001eeef4: FALL_THROUGH
 	001eeefc push ax
 	001eef04 mov mar,0x100024
 	001eef10 memread4 ax
 	001eef18 lnot ax
 	001eef20 pop bx
 	001eef28 land bx,ax
 	001eef34 mov ax,bx
		001eef40: FALL_THROUGH

	[001eef40]
		001eeef4: CONDITIONAL_JUMP
		001eeefc: FALL_THROUGH
 	001eef40 jz 0x001eef8c
		001eef8c: CONDITIONAL_JUMP
		001eef48: FALL_THROUGH

	[001eef48]
		001eef40: FALL_THROUGH
 	001eef48 push ax
 	001eef50 mov mar,0x100028
 	001eef5c memread4 ax
 	001eef64 lnot ax
 	001eef6c pop bx
 	001eef74 land bx,ax
 	001eef80 mov ax,bx
		001eef8c: FALL_THROUGH

	[001eef8c]
		001eef40: CONDITIONAL_JUMP
		001eef48: FALL_THROUGH
 	001eef8c jz 0x001eefd8
		001eefd8: CONDITIONAL_JUMP
		001eef94: FALL_THROUGH

	[001eef94]
		001eef8c: FALL_THROUGH
 	001eef94 push ax
 	001eef9c mov mar,0x10002c
 	001eefa8 memread4 ax
 	001eefb0 lnot ax
 	001eefb8 pop bx
 	001eefc0 land bx,ax
 	001eefcc mov ax,bx
		001eefd8: FALL_THROUGH

	[001eefd8]
		001eef8c: CONDITIONAL_JUMP
		001eef94: FALL_THROUGH
 	001eefd8 jz 0x001ef028
		001ef028: CONDITIONAL_JUMP
		001eefe0: FALL_THROUGH

	[001eefe0]
		001eefd8: FALL_THROUGH
 	001eefe0 mov ax,0x1
 	001eefec mov mar,0x100010
 	001eeff8 memwrite4 ax
 	001ef000 mov ax,0x2
 	001ef00c mov mar,0x1000bc
 	001ef018 memwrite4 ax
 	001ef020 jmp 0x001f0868
		001f0868: UNCONDITIONAL_JUMP

	[001ef028]
		001eefd8: CONDITIONAL_JUMP
 	001ef028 sourceline 0x2b41
 	001ef030 mov mar,0x100000
 	001ef03c memread4 ax
 	001ef044 jz 0x001ef088
		001ef088: CONDITIONAL_JUMP
		001ef04c: FALL_THROUGH

	[001ef04c]
		001ef028: FALL_THROUGH
 	001ef04c push ax
 	001ef054 mov mar,0x100004
 	001ef060 memread4 ax
 	001ef068 pop bx
 	001ef070 land bx,ax
 	001ef07c mov ax,bx
		001ef088: FALL_THROUGH

	[001ef088]
		001ef028: CONDITIONAL_JUMP
		001ef04c: FALL_THROUGH
 	001ef088 jz 0x001ef0cc
		001ef0cc: CONDITIONAL_JUMP
		001ef090: FALL_THROUGH

	[001ef090]
		001ef088: FALL_THROUGH
 	001ef090 push ax
 	001ef098 mov mar,0x100008
 	001ef0a4 memread4 ax
 	001ef0ac pop bx
 	001ef0b4 land bx,ax
 	001ef0c0 mov ax,bx
		001ef0cc: FALL_THROUGH

	[001ef0cc]
		001ef088: CONDITIONAL_JUMP
		001ef090: FALL_THROUGH
 	001ef0cc jz 0x001ef110
		001ef110: CONDITIONAL_JUMP
		001ef0d4: FALL_THROUGH

	[001ef0d4]
		001ef0cc: FALL_THROUGH
 	001ef0d4 push ax
 	001ef0dc mov mar,0x10000c
 	001ef0e8 memread4 ax
 	001ef0f0 pop bx
 	001ef0f8 land bx,ax
 	001ef104 mov ax,bx
		001ef110: FALL_THROUGH

	[001ef110]
		001ef0cc: CONDITIONAL_JUMP
		001ef0d4: FALL_THROUGH
 	001ef110 jz 0x001ef154
		001ef154: CONDITIONAL_JUMP
		001ef118: FALL_THROUGH

	[001ef118]
		001ef110: FALL_THROUGH
 	001ef118 push ax
 	001ef120 mov mar,0x100010
 	001ef12c memread4 ax
 	001ef134 pop bx
 	001ef13c land bx,ax
 	001ef148 mov ax,bx
		001ef154: FALL_THROUGH

	[001ef154]
		001ef110: CONDITIONAL_JUMP
		001ef118: FALL_THROUGH
 	001ef154 jz 0x001ef1a0
		001ef1a0: CONDITIONAL_JUMP
		001ef15c: FALL_THROUGH

	[001ef15c]
		001ef154: FALL_THROUGH
 	001ef15c push ax
 	001ef164 mov mar,0x100014
 	001ef170 memread4 ax
 	001ef178 lnot ax
 	001ef180 pop bx
 	001ef188 land bx,ax
 	001ef194 mov ax,bx
		001ef1a0: FALL_THROUGH

	[001ef1a0]
		001ef154: CONDITIONAL_JUMP
		001ef15c: FALL_THROUGH
 	001ef1a0 jz 0x001ef1ec
		001ef1ec: CONDITIONAL_JUMP
		001ef1a8: FALL_THROUGH

	[001ef1a8]
		001ef1a0: FALL_THROUGH
 	001ef1a8 push ax
 	001ef1b0 mov mar,0x100018
 	001ef1bc memread4 ax
 	001ef1c4 lnot ax
 	001ef1cc pop bx
 	001ef1d4 land bx,ax
 	001ef1e0 mov ax,bx
		001ef1ec: FALL_THROUGH

	[001ef1ec]
		001ef1a0: CONDITIONAL_JUMP
		001ef1a8: FALL_THROUGH
 	001ef1ec jz 0x001ef238
		001ef238: CONDITIONAL_JUMP
		001ef1f4: FALL_THROUGH

	[001ef1f4]
		001ef1ec: FALL_THROUGH
 	001ef1f4 push ax
 	001ef1fc mov mar,0x10001c
 	001ef208 memread4 ax
 	001ef210 lnot ax
 	001ef218 pop bx
 	001ef220 land bx,ax
 	001ef22c mov ax,bx
		001ef238: FALL_THROUGH

	[001ef238]
		001ef1ec: CONDITIONAL_JUMP
		001ef1f4: FALL_THROUGH
 	001ef238 jz 0x001ef284
		001ef284: CONDITIONAL_JUMP
		001ef240: FALL_THROUGH

	[001ef240]
		001ef238: FALL_THROUGH
 	001ef240 push ax
 	001ef248 mov mar,0x100020
 	001ef254 memread4 ax
 	001ef25c lnot ax
 	001ef264 pop bx
 	001ef26c land bx,ax
 	001ef278 mov ax,bx
		001ef284: FALL_THROUGH

	[001ef284]
		001ef238: CONDITIONAL_JUMP
		001ef240: FALL_THROUGH
 	001ef284 jz 0x001ef2d0
		001ef2d0: CONDITIONAL_JUMP
		001ef28c: FALL_THROUGH

	[001ef28c]
		001ef284: FALL_THROUGH
 	001ef28c push ax
 	001ef294 mov mar,0x100024
 	001ef2a0 memread4 ax
 	001ef2a8 lnot ax
 	001ef2b0 pop bx
 	001ef2b8 land bx,ax
 	001ef2c4 mov ax,bx
		001ef2d0: FALL_THROUGH

	[001ef2d0]
		001ef284: CONDITIONAL_JUMP
		001ef28c: FALL_THROUGH
 	001ef2d0 jz 0x001ef31c
		001ef31c: CONDITIONAL_JUMP
		001ef2d8: FALL_THROUGH

	[001ef2d8]
		001ef2d0: FALL_THROUGH
 	001ef2d8 push ax
 	001ef2e0 mov mar,0x100028
 	001ef2ec memread4 ax
 	001ef2f4 lnot ax
 	001ef2fc pop bx
 	001ef304 land bx,ax
 	001ef310 mov ax,bx
		001ef31c: FALL_THROUGH

	[001ef31c]
		001ef2d0: CONDITIONAL_JUMP
		001ef2d8: FALL_THROUGH
 	001ef31c jz 0x001ef368
		001ef368: CONDITIONAL_JUMP
		001ef324: FALL_THROUGH

	[001ef324]
		001ef31c: FALL_THROUGH
 	001ef324 push ax
 	001ef32c mov mar,0x10002c
 	001ef338 memread4 ax
 	001ef340 lnot ax
 	001ef348 pop bx
 	001ef350 land bx,ax
 	001ef35c mov ax,bx
		001ef368: FALL_THROUGH

	[001ef368]
		001ef31c: CONDITIONAL_JUMP
		001ef324: FALL_THROUGH
 	001ef368 jz 0x001ef3b8
		001ef3b8: CONDITIONAL_JUMP
		001ef370: FALL_THROUGH

	[001ef370]
		001ef368: FALL_THROUGH
 	001ef370 mov ax,0x1
 	001ef37c mov mar,0x100014
 	001ef388 memwrite4 ax
 	001ef390 mov ax,0x2
 	001ef39c mov mar,0x1000c0
 	001ef3a8 memwrite4 ax
 	001ef3b0 jmp 0x001f0868
		001f0868: UNCONDITIONAL_JUMP

	[001ef3b8]
		001ef368: CONDITIONAL_JUMP
 	001ef3b8 sourceline 0x2b46
 	001ef3c0 mov mar,0x100000
 	001ef3cc memread4 ax
 	001ef3d4 jz 0x001ef418
		001ef418: CONDITIONAL_JUMP
		001ef3dc: FALL_THROUGH

	[001ef3dc]
		001ef3b8: FALL_THROUGH
 	001ef3dc push ax
 	001ef3e4 mov mar,0x100004
 	001ef3f0 memread4 ax
 	001ef3f8 pop bx
 	001ef400 land bx,ax
 	001ef40c mov ax,bx
		001ef418: FALL_THROUGH

	[001ef418]
		001ef3b8: CONDITIONAL_JUMP
		001ef3dc: FALL_THROUGH
 	001ef418 jz 0x001ef45c
		001ef45c: CONDITIONAL_JUMP
		001ef420: FALL_THROUGH

	[001ef420]
		001ef418: FALL_THROUGH
 	001ef420 push ax
 	001ef428 mov mar,0x100008
 	001ef434 memread4 ax
 	001ef43c pop bx
 	001ef444 land bx,ax
 	001ef450 mov ax,bx
		001ef45c: FALL_THROUGH

	[001ef45c]
		001ef418: CONDITIONAL_JUMP
		001ef420: FALL_THROUGH
 	001ef45c jz 0x001ef4a0
		001ef4a0: CONDITIONAL_JUMP
		001ef464: FALL_THROUGH

	[001ef464]
		001ef45c: FALL_THROUGH
 	001ef464 push ax
 	001ef46c mov mar,0x10000c
 	001ef478 memread4 ax
 	001ef480 pop bx
 	001ef488 land bx,ax
 	001ef494 mov ax,bx
		001ef4a0: FALL_THROUGH

	[001ef4a0]
		001ef45c: CONDITIONAL_JUMP
		001ef464: FALL_THROUGH
 	001ef4a0 jz 0x001ef4e4
		001ef4e4: CONDITIONAL_JUMP
		001ef4a8: FALL_THROUGH

	[001ef4a8]
		001ef4a0: FALL_THROUGH
 	001ef4a8 push ax
 	001ef4b0 mov mar,0x100010
 	001ef4bc memread4 ax
 	001ef4c4 pop bx
 	001ef4cc land bx,ax
 	001ef4d8 mov ax,bx
		001ef4e4: FALL_THROUGH

	[001ef4e4]
		001ef4a0: CONDITIONAL_JUMP
		001ef4a8: FALL_THROUGH
 	001ef4e4 jz 0x001ef528
		001ef528: CONDITIONAL_JUMP
		001ef4ec: FALL_THROUGH

	[001ef4ec]
		001ef4e4: FALL_THROUGH
 	001ef4ec push ax
 	001ef4f4 mov mar,0x100014
 	001ef500 memread4 ax
 	001ef508 pop bx
 	001ef510 land bx,ax
 	001ef51c mov ax,bx
		001ef528: FALL_THROUGH

	[001ef528]
		001ef4e4: CONDITIONAL_JUMP
		001ef4ec: FALL_THROUGH
 	001ef528 jz 0x001ef574
		001ef574: CONDITIONAL_JUMP
		001ef530: FALL_THROUGH

	[001ef530]
		001ef528: FALL_THROUGH
 	001ef530 push ax
 	001ef538 mov mar,0x100018
 	001ef544 memread4 ax
 	001ef54c lnot ax
 	001ef554 pop bx
 	001ef55c land bx,ax
 	001ef568 mov ax,bx
		001ef574: FALL_THROUGH

	[001ef574]
		001ef528: CONDITIONAL_JUMP
		001ef530: FALL_THROUGH
 	001ef574 jz 0x001ef5c0
		001ef5c0: CONDITIONAL_JUMP
		001ef57c: FALL_THROUGH

	[001ef57c]
		001ef574: FALL_THROUGH
 	001ef57c push ax
 	001ef584 mov mar,0x10001c
 	001ef590 memread4 ax
 	001ef598 lnot ax
 	001ef5a0 pop bx
 	001ef5a8 land bx,ax
 	001ef5b4 mov ax,bx
		001ef5c0: FALL_THROUGH

	[001ef5c0]
		001ef574: CONDITIONAL_JUMP
		001ef57c: FALL_THROUGH
 	001ef5c0 jz 0x001ef60c
		001ef60c: CONDITIONAL_JUMP
		001ef5c8: FALL_THROUGH

	[001ef5c8]
		001ef5c0: FALL_THROUGH
 	001ef5c8 push ax
 	001ef5d0 mov mar,0x100020
 	001ef5dc memread4 ax
 	001ef5e4 lnot ax
 	001ef5ec pop bx
 	001ef5f4 land bx,ax
 	001ef600 mov ax,bx
		001ef60c: FALL_THROUGH

	[001ef60c]
		001ef5c0: CONDITIONAL_JUMP
		001ef5c8: FALL_THROUGH
 	001ef60c jz 0x001ef658
		001ef658: CONDITIONAL_JUMP
		001ef614: FALL_THROUGH

	[001ef614]
		001ef60c: FALL_THROUGH
 	001ef614 push ax
 	001ef61c mov mar,0x100024
 	001ef628 memread4 ax
 	001ef630 lnot ax
 	001ef638 pop bx
 	001ef640 land bx,ax
 	001ef64c mov ax,bx
		001ef658: FALL_THROUGH

	[001ef658]
		001ef60c: CONDITIONAL_JUMP
		001ef614: FALL_THROUGH
 	001ef658 jz 0x001ef6a4
		001ef6a4: CONDITIONAL_JUMP
		001ef660: FALL_THROUGH

	[001ef660]
		001ef658: FALL_THROUGH
 	001ef660 push ax
 	001ef668 mov mar,0x100028
 	001ef674 memread4 ax
 	001ef67c lnot ax
 	001ef684 pop bx
 	001ef68c land bx,ax
 	001ef698 mov ax,bx
		001ef6a4: FALL_THROUGH

	[001ef6a4]
		001ef658: CONDITIONAL_JUMP
		001ef660: FALL_THROUGH
 	001ef6a4 jz 0x001ef6f0
		001ef6f0: CONDITIONAL_JUMP
		001ef6ac: FALL_THROUGH

	[001ef6ac]
		001ef6a4: FALL_THROUGH
 	001ef6ac push ax
 	001ef6b4 mov mar,0x10002c
 	001ef6c0 memread4 ax
 	001ef6c8 lnot ax
 	001ef6d0 pop bx
 	001ef6d8 land bx,ax
 	001ef6e4 mov ax,bx
		001ef6f0: FALL_THROUGH

	[001ef6f0]
		001ef6a4: CONDITIONAL_JUMP
		001ef6ac: FALL_THROUGH
 	001ef6f0 jz 0x001ef740
		001ef740: CONDITIONAL_JUMP
		001ef6f8: FALL_THROUGH

	[001ef6f8]
		001ef6f0: FALL_THROUGH
 	001ef6f8 mov ax,0x1
 	001ef704 mov mar,0x100018
 	001ef710 memwrite4 ax
 	001ef718 mov ax,0x2
 	001ef724 mov mar,0x1000c4
 	001ef730 memwrite4 ax
 	001ef738 jmp 0x001f0868
		001f0868: UNCONDITIONAL_JUMP

	[001ef740]
		001ef6f0: CONDITIONAL_JUMP
 	001ef740 sourceline 0x2b4b
 	001ef748 mov mar,0x100000
 	001ef754 memread4 ax
 	001ef75c jz 0x001ef7a0
		001ef7a0: CONDITIONAL_JUMP
		001ef764: FALL_THROUGH

	[001ef764]
		001ef740: FALL_THROUGH
 	001ef764 push ax
 	001ef76c mov mar,0x100004
 	001ef778 memread4 ax
 	001ef780 pop bx
 	001ef788 land bx,ax
 	001ef794 mov ax,bx
		001ef7a0: FALL_THROUGH

	[001ef7a0]
		001ef740: CONDITIONAL_JUMP
		001ef764: FALL_THROUGH
 	001ef7a0 jz 0x001ef7e4
		001ef7e4: CONDITIONAL_JUMP
		001ef7a8: FALL_THROUGH

	[001ef7a8]
		001ef7a0: FALL_THROUGH
 	001ef7a8 push ax
 	001ef7b0 mov mar,0x100008
 	001ef7bc memread4 ax
 	001ef7c4 pop bx
 	001ef7cc land bx,ax
 	001ef7d8 mov ax,bx
		001ef7e4: FALL_THROUGH

	[001ef7e4]
		001ef7a0: CONDITIONAL_JUMP
		001ef7a8: FALL_THROUGH
 	001ef7e4 jz 0x001ef828
		001ef828: CONDITIONAL_JUMP
		001ef7ec: FALL_THROUGH

	[001ef7ec]
		001ef7e4: FALL_THROUGH
 	001ef7ec push ax
 	001ef7f4 mov mar,0x10000c
 	001ef800 memread4 ax
 	001ef808 pop bx
 	001ef810 land bx,ax
 	001ef81c mov ax,bx
		001ef828: FALL_THROUGH

	[001ef828]
		001ef7e4: CONDITIONAL_JUMP
		001ef7ec: FALL_THROUGH
 	001ef828 jz 0x001ef86c
		001ef86c: CONDITIONAL_JUMP
		001ef830: FALL_THROUGH

	[001ef830]
		001ef828: FALL_THROUGH
 	001ef830 push ax
 	001ef838 mov mar,0x100010
 	001ef844 memread4 ax
 	001ef84c pop bx
 	001ef854 land bx,ax
 	001ef860 mov ax,bx
		001ef86c: FALL_THROUGH

	[001ef86c]
		001ef828: CONDITIONAL_JUMP
		001ef830: FALL_THROUGH
 	001ef86c jz 0x001ef8b0
		001ef8b0: CONDITIONAL_JUMP
		001ef874: FALL_THROUGH

	[001ef874]
		001ef86c: FALL_THROUGH
 	001ef874 push ax
 	001ef87c mov mar,0x100014
 	001ef888 memread4 ax
 	001ef890 pop bx
 	001ef898 land bx,ax
 	001ef8a4 mov ax,bx
		001ef8b0: FALL_THROUGH

	[001ef8b0]
		001ef86c: CONDITIONAL_JUMP
		001ef874: FALL_THROUGH
 	001ef8b0 jz 0x001ef8f4
		001ef8f4: CONDITIONAL_JUMP
		001ef8b8: FALL_THROUGH

	[001ef8b8]
		001ef8b0: FALL_THROUGH
 	001ef8b8 push ax
 	001ef8c0 mov mar,0x100018
 	001ef8cc memread4 ax
 	001ef8d4 pop bx
 	001ef8dc land bx,ax
 	001ef8e8 mov ax,bx
		001ef8f4: FALL_THROUGH

	[001ef8f4]
		001ef8b0: CONDITIONAL_JUMP
		001ef8b8: FALL_THROUGH
 	001ef8f4 jz 0x001ef940
		001ef940: CONDITIONAL_JUMP
		001ef8fc: FALL_THROUGH

	[001ef8fc]
		001ef8f4: FALL_THROUGH
 	001ef8fc push ax
 	001ef904 mov mar,0x10001c
 	001ef910 memread4 ax
 	001ef918 lnot ax
 	001ef920 pop bx
 	001ef928 land bx,ax
 	001ef934 mov ax,bx
		001ef940: FALL_THROUGH

	[001ef940]
		001ef8f4: CONDITIONAL_JUMP
		001ef8fc: FALL_THROUGH
 	001ef940 jz 0x001ef98c
		001ef98c: CONDITIONAL_JUMP
		001ef948: FALL_THROUGH

	[001ef948]
		001ef940: FALL_THROUGH
 	001ef948 push ax
 	001ef950 mov mar,0x100020
 	001ef95c memread4 ax
 	001ef964 lnot ax
 	001ef96c pop bx
 	001ef974 land bx,ax
 	001ef980 mov ax,bx
		001ef98c: FALL_THROUGH

	[001ef98c]
		001ef940: CONDITIONAL_JUMP
		001ef948: FALL_THROUGH
 	001ef98c jz 0x001ef9d8
		001ef9d8: CONDITIONAL_JUMP
		001ef994: FALL_THROUGH

	[001ef994]
		001ef98c: FALL_THROUGH
 	001ef994 push ax
 	001ef99c mov mar,0x100024
 	001ef9a8 memread4 ax
 	001ef9b0 lnot ax
 	001ef9b8 pop bx
 	001ef9c0 land bx,ax
 	001ef9cc mov ax,bx
		001ef9d8: FALL_THROUGH

	[001ef9d8]
		001ef98c: CONDITIONAL_JUMP
		001ef994: FALL_THROUGH
 	001ef9d8 jz 0x001efa24
		001efa24: CONDITIONAL_JUMP
		001ef9e0: FALL_THROUGH

	[001ef9e0]
		001ef9d8: FALL_THROUGH
 	001ef9e0 push ax
 	001ef9e8 mov mar,0x100028
 	001ef9f4 memread4 ax
 	001ef9fc lnot ax
 	001efa04 pop bx
 	001efa0c land bx,ax
 	001efa18 mov ax,bx
		001efa24: FALL_THROUGH

	[001efa24]
		001ef9d8: CONDITIONAL_JUMP
		001ef9e0: FALL_THROUGH
 	001efa24 jz 0x001efa70
		001efa70: CONDITIONAL_JUMP
		001efa2c: FALL_THROUGH

	[001efa2c]
		001efa24: FALL_THROUGH
 	001efa2c push ax
 	001efa34 mov mar,0x10002c
 	001efa40 memread4 ax
 	001efa48 lnot ax
 	001efa50 pop bx
 	001efa58 land bx,ax
 	001efa64 mov ax,bx
		001efa70: FALL_THROUGH

	[001efa70]
		001efa24: CONDITIONAL_JUMP
		001efa2c: FALL_THROUGH
 	001efa70 jz 0x001efac0
		001efac0: CONDITIONAL_JUMP
		001efa78: FALL_THROUGH

	[001efa78]
		001efa70: FALL_THROUGH
 	001efa78 mov ax,0x1
 	001efa84 mov mar,0x10001c
 	001efa90 memwrite4 ax
 	001efa98 mov ax,0x2
 	001efaa4 mov mar,0x1000c8
 	001efab0 memwrite4 ax
 	001efab8 jmp 0x001f0868
		001f0868: UNCONDITIONAL_JUMP

	[001efac0]
		001efa70: CONDITIONAL_JUMP
 	001efac0 sourceline 0x2b50
 	001efac8 mov mar,0x100000
 	001efad4 memread4 ax
 	001efadc jz 0x001efb20
		001efb20: CONDITIONAL_JUMP
		001efae4: FALL_THROUGH

	[001efae4]
		001efac0: FALL_THROUGH
 	001efae4 push ax
 	001efaec mov mar,0x100004
 	001efaf8 memread4 ax
 	001efb00 pop bx
 	001efb08 land bx,ax
 	001efb14 mov ax,bx
		001efb20: FALL_THROUGH

	[001efb20]
		001efac0: CONDITIONAL_JUMP
		001efae4: FALL_THROUGH
 	001efb20 jz 0x001efb64
		001efb64: CONDITIONAL_JUMP
		001efb28: FALL_THROUGH

	[001efb28]
		001efb20: FALL_THROUGH
 	001efb28 push ax
 	001efb30 mov mar,0x100008
 	001efb3c memread4 ax
 	001efb44 pop bx
 	001efb4c land bx,ax
 	001efb58 mov ax,bx
		001efb64: FALL_THROUGH

	[001efb64]
		001efb20: CONDITIONAL_JUMP
		001efb28: FALL_THROUGH
 	001efb64 jz 0x001efba8
		001efba8: CONDITIONAL_JUMP
		001efb6c: FALL_THROUGH

	[001efb6c]
		001efb64: FALL_THROUGH
 	001efb6c push ax
 	001efb74 mov mar,0x10000c
 	001efb80 memread4 ax
 	001efb88 pop bx
 	001efb90 land bx,ax
 	001efb9c mov ax,bx
		001efba8: FALL_THROUGH

	[001efba8]
		001efb64: CONDITIONAL_JUMP
		001efb6c: FALL_THROUGH
 	001efba8 jz 0x001efbec
		001efbec: CONDITIONAL_JUMP
		001efbb0: FALL_THROUGH

	[001efbb0]
		001efba8: FALL_THROUGH
 	001efbb0 push ax
 	001efbb8 mov mar,0x100010
 	001efbc4 memread4 ax
 	001efbcc pop bx
 	001efbd4 land bx,ax
 	001efbe0 mov ax,bx
		001efbec: FALL_THROUGH

	[001efbec]
		001efba8: CONDITIONAL_JUMP
		001efbb0: FALL_THROUGH
 	001efbec jz 0x001efc30
		001efc30: CONDITIONAL_JUMP
		001efbf4: FALL_THROUGH

	[001efbf4]
		001efbec: FALL_THROUGH
 	001efbf4 push ax
 	001efbfc mov mar,0x100014
 	001efc08 memread4 ax
 	001efc10 pop bx
 	001efc18 land bx,ax
 	001efc24 mov ax,bx
		001efc30: FALL_THROUGH

	[001efc30]
		001efbec: CONDITIONAL_JUMP
		001efbf4: FALL_THROUGH
 	001efc30 jz 0x001efc74
		001efc74: CONDITIONAL_JUMP
		001efc38: FALL_THROUGH

	[001efc38]
		001efc30: FALL_THROUGH
 	001efc38 push ax
 	001efc40 mov mar,0x100018
 	001efc4c memread4 ax
 	001efc54 pop bx
 	001efc5c land bx,ax
 	001efc68 mov ax,bx
		001efc74: FALL_THROUGH

	[001efc74]
		001efc30: CONDITIONAL_JUMP
		001efc38: FALL_THROUGH
 	001efc74 jz 0x001efcb8
		001efcb8: CONDITIONAL_JUMP
		001efc7c: FALL_THROUGH

	[001efc7c]
		001efc74: FALL_THROUGH
 	001efc7c push ax
 	001efc84 mov mar,0x10001c
 	001efc90 memread4 ax
 	001efc98 pop bx
 	001efca0 land bx,ax
 	001efcac mov ax,bx
		001efcb8: FALL_THROUGH

	[001efcb8]
		001efc74: CONDITIONAL_JUMP
		001efc7c: FALL_THROUGH
 	001efcb8 jz 0x001efd04
		001efd04: CONDITIONAL_JUMP
		001efcc0: FALL_THROUGH

	[001efcc0]
		001efcb8: FALL_THROUGH
 	001efcc0 push ax
 	001efcc8 mov mar,0x100020
 	001efcd4 memread4 ax
 	001efcdc lnot ax
 	001efce4 pop bx
 	001efcec land bx,ax
 	001efcf8 mov ax,bx
		001efd04: FALL_THROUGH

	[001efd04]
		001efcb8: CONDITIONAL_JUMP
		001efcc0: FALL_THROUGH
 	001efd04 jz 0x001efd50
		001efd50: CONDITIONAL_JUMP
		001efd0c: FALL_THROUGH

	[001efd0c]
		001efd04: FALL_THROUGH
 	001efd0c push ax
 	001efd14 mov mar,0x100024
 	001efd20 memread4 ax
 	001efd28 lnot ax
 	001efd30 pop bx
 	001efd38 land bx,ax
 	001efd44 mov ax,bx
		001efd50: FALL_THROUGH

	[001efd50]
		001efd04: CONDITIONAL_JUMP
		001efd0c: FALL_THROUGH
 	001efd50 jz 0x001efd9c
		001efd9c: CONDITIONAL_JUMP
		001efd58: FALL_THROUGH

	[001efd58]
		001efd50: FALL_THROUGH
 	001efd58 push ax
 	001efd60 mov mar,0x100028
 	001efd6c memread4 ax
 	001efd74 lnot ax
 	001efd7c pop bx
 	001efd84 land bx,ax
 	001efd90 mov ax,bx
		001efd9c: FALL_THROUGH

	[001efd9c]
		001efd50: CONDITIONAL_JUMP
		001efd58: FALL_THROUGH
 	001efd9c jz 0x001efde8
		001efde8: CONDITIONAL_JUMP
		001efda4: FALL_THROUGH

	[001efda4]
		001efd9c: FALL_THROUGH
 	001efda4 push ax
 	001efdac mov mar,0x10002c
 	001efdb8 memread4 ax
 	001efdc0 lnot ax
 	001efdc8 pop bx
 	001efdd0 land bx,ax
 	001efddc mov ax,bx
		001efde8: FALL_THROUGH

	[001efde8]
		001efd9c: CONDITIONAL_JUMP
		001efda4: FALL_THROUGH
 	001efde8 jz 0x001efe38
		001efe38: CONDITIONAL_JUMP
		001efdf0: FALL_THROUGH

	[001efdf0]
		001efde8: FALL_THROUGH
 	001efdf0 mov ax,0x1
 	001efdfc mov mar,0x100020
 	001efe08 memwrite4 ax
 	001efe10 mov ax,0x2
 	001efe1c mov mar,0x1000cc
 	001efe28 memwrite4 ax
 	001efe30 jmp 0x001f0868
		001f0868: UNCONDITIONAL_JUMP

	[001efe38]
		001efde8: CONDITIONAL_JUMP
 	001efe38 sourceline 0x2b55
 	001efe40 mov mar,0x100000
 	001efe4c memread4 ax
 	001efe54 jz 0x001efe98
		001efe98: CONDITIONAL_JUMP
		001efe5c: FALL_THROUGH

	[001efe5c]
		001efe38: FALL_THROUGH
 	001efe5c push ax
 	001efe64 mov mar,0x100004
 	001efe70 memread4 ax
 	001efe78 pop bx
 	001efe80 land bx,ax
 	001efe8c mov ax,bx
		001efe98: FALL_THROUGH

	[001efe98]
		001efe38: CONDITIONAL_JUMP
		001efe5c: FALL_THROUGH
 	001efe98 jz 0x001efedc
		001efedc: CONDITIONAL_JUMP
		001efea0: FALL_THROUGH

	[001efea0]
		001efe98: FALL_THROUGH
 	001efea0 push ax
 	001efea8 mov mar,0x100008
 	001efeb4 memread4 ax
 	001efebc pop bx
 	001efec4 land bx,ax
 	001efed0 mov ax,bx
		001efedc: FALL_THROUGH

	[001efedc]
		001efe98: CONDITIONAL_JUMP
		001efea0: FALL_THROUGH
 	001efedc jz 0x001eff20
		001eff20: CONDITIONAL_JUMP
		001efee4: FALL_THROUGH

	[001efee4]
		001efedc: FALL_THROUGH
 	001efee4 push ax
 	001efeec mov mar,0x10000c
 	001efef8 memread4 ax
 	001eff00 pop bx
 	001eff08 land bx,ax
 	001eff14 mov ax,bx
		001eff20: FALL_THROUGH

	[001eff20]
		001efedc: CONDITIONAL_JUMP
		001efee4: FALL_THROUGH
 	001eff20 jz 0x001eff64
		001eff64: CONDITIONAL_JUMP
		001eff28: FALL_THROUGH

	[001eff28]
		001eff20: FALL_THROUGH
 	001eff28 push ax
 	001eff30 mov mar,0x100010
 	001eff3c memread4 ax
 	001eff44 pop bx
 	001eff4c land bx,ax
 	001eff58 mov ax,bx
		001eff64: FALL_THROUGH

	[001eff64]
		001eff20: CONDITIONAL_JUMP
		001eff28: FALL_THROUGH
 	001eff64 jz 0x001effa8
		001effa8: CONDITIONAL_JUMP
		001eff6c: FALL_THROUGH

	[001eff6c]
		001eff64: FALL_THROUGH
 	001eff6c push ax
 	001eff74 mov mar,0x100014
 	001eff80 memread4 ax
 	001eff88 pop bx
 	001eff90 land bx,ax
 	001eff9c mov ax,bx
		001effa8: FALL_THROUGH

	[001effa8]
		001eff64: CONDITIONAL_JUMP
		001eff6c: FALL_THROUGH
 	001effa8 jz 0x001effec
		001effec: CONDITIONAL_JUMP
		001effb0: FALL_THROUGH

	[001effb0]
		001effa8: FALL_THROUGH
 	001effb0 push ax
 	001effb8 mov mar,0x100018
 	001effc4 memread4 ax
 	001effcc pop bx
 	001effd4 land bx,ax
 	001effe0 mov ax,bx
		001effec: FALL_THROUGH

	[001effec]
		001effa8: CONDITIONAL_JUMP
		001effb0: FALL_THROUGH
 	001effec jz 0x001f0030
		001f0030: CONDITIONAL_JUMP
		001efff4: FALL_THROUGH

	[001efff4]
		001effec: FALL_THROUGH
 	001efff4 push ax
 	001efffc mov mar,0x10001c
 	001f0008 memread4 ax
 	001f0010 pop bx
 	001f0018 land bx,ax
 	001f0024 mov ax,bx
		001f0030: FALL_THROUGH

	[001f0030]
		001effec: CONDITIONAL_JUMP
		001efff4: FALL_THROUGH
 	001f0030 jz 0x001f0074
		001f0074: CONDITIONAL_JUMP
		001f0038: FALL_THROUGH

	[001f0038]
		001f0030: FALL_THROUGH
 	001f0038 push ax
 	001f0040 mov mar,0x100020
 	001f004c memread4 ax
 	001f0054 pop bx
 	001f005c land bx,ax
 	001f0068 mov ax,bx
		001f0074: FALL_THROUGH

	[001f0074]
		001f0030: CONDITIONAL_JUMP
		001f0038: FALL_THROUGH
 	001f0074 jz 0x001f00c0
		001f00c0: CONDITIONAL_JUMP
		001f007c: FALL_THROUGH

	[001f007c]
		001f0074: FALL_THROUGH
 	001f007c push ax
 	001f0084 mov mar,0x100024
 	001f0090 memread4 ax
 	001f0098 lnot ax
 	001f00a0 pop bx
 	001f00a8 land bx,ax
 	001f00b4 mov ax,bx
		001f00c0: FALL_THROUGH

	[001f00c0]
		001f0074: CONDITIONAL_JUMP
		001f007c: FALL_THROUGH
 	001f00c0 jz 0x001f010c
		001f010c: CONDITIONAL_JUMP
		001f00c8: FALL_THROUGH

	[001f00c8]
		001f00c0: FALL_THROUGH
 	001f00c8 push ax
 	001f00d0 mov mar,0x100028
 	001f00dc memread4 ax
 	001f00e4 lnot ax
 	001f00ec pop bx
 	001f00f4 land bx,ax
 	001f0100 mov ax,bx
		001f010c: FALL_THROUGH

	[001f010c]
		001f00c0: CONDITIONAL_JUMP
		001f00c8: FALL_THROUGH
 	001f010c jz 0x001f0158
		001f0158: CONDITIONAL_JUMP
		001f0114: FALL_THROUGH

	[001f0114]
		001f010c: FALL_THROUGH
 	001f0114 push ax
 	001f011c mov mar,0x10002c
 	001f0128 memread4 ax
 	001f0130 lnot ax
 	001f0138 pop bx
 	001f0140 land bx,ax
 	001f014c mov ax,bx
		001f0158: FALL_THROUGH

	[001f0158]
		001f010c: CONDITIONAL_JUMP
		001f0114: FALL_THROUGH
 	001f0158 jz 0x001f01a8
		001f01a8: CONDITIONAL_JUMP
		001f0160: FALL_THROUGH

	[001f0160]
		001f0158: FALL_THROUGH
 	001f0160 mov ax,0x1
 	001f016c mov mar,0x100024
 	001f0178 memwrite4 ax
 	001f0180 mov ax,0x2
 	001f018c mov mar,0x1000d0
 	001f0198 memwrite4 ax
 	001f01a0 jmp 0x001f0868
		001f0868: UNCONDITIONAL_JUMP

	[001f01a8]
		001f0158: CONDITIONAL_JUMP
 	001f01a8 sourceline 0x2b5a
 	001f01b0 mov mar,0x100000
 	001f01bc memread4 ax
 	001f01c4 jz 0x001f0208
		001f0208: CONDITIONAL_JUMP
		001f01cc: FALL_THROUGH

	[001f01cc]
		001f01a8: FALL_THROUGH
 	001f01cc push ax
 	001f01d4 mov mar,0x100004
 	001f01e0 memread4 ax
 	001f01e8 pop bx
 	001f01f0 land bx,ax
 	001f01fc mov ax,bx
		001f0208: FALL_THROUGH

	[001f0208]
		001f01a8: CONDITIONAL_JUMP
		001f01cc: FALL_THROUGH
 	001f0208 jz 0x001f024c
		001f024c: CONDITIONAL_JUMP
		001f0210: FALL_THROUGH

	[001f0210]
		001f0208: FALL_THROUGH
 	001f0210 push ax
 	001f0218 mov mar,0x100008
 	001f0224 memread4 ax
 	001f022c pop bx
 	001f0234 land bx,ax
 	001f0240 mov ax,bx
		001f024c: FALL_THROUGH

	[001f024c]
		001f0208: CONDITIONAL_JUMP
		001f0210: FALL_THROUGH
 	001f024c jz 0x001f0290
		001f0290: CONDITIONAL_JUMP
		001f0254: FALL_THROUGH

	[001f0254]
		001f024c: FALL_THROUGH
 	001f0254 push ax
 	001f025c mov mar,0x10000c
 	001f0268 memread4 ax
 	001f0270 pop bx
 	001f0278 land bx,ax
 	001f0284 mov ax,bx
		001f0290: FALL_THROUGH

	[001f0290]
		001f024c: CONDITIONAL_JUMP
		001f0254: FALL_THROUGH
 	001f0290 jz 0x001f02d4
		001f02d4: CONDITIONAL_JUMP
		001f0298: FALL_THROUGH

	[001f0298]
		001f0290: FALL_THROUGH
 	001f0298 push ax
 	001f02a0 mov mar,0x100010
 	001f02ac memread4 ax
 	001f02b4 pop bx
 	001f02bc land bx,ax
 	001f02c8 mov ax,bx
		001f02d4: FALL_THROUGH

	[001f02d4]
		001f0290: CONDITIONAL_JUMP
		001f0298: FALL_THROUGH
 	001f02d4 jz 0x001f0318
		001f0318: CONDITIONAL_JUMP
		001f02dc: FALL_THROUGH

	[001f02dc]
		001f02d4: FALL_THROUGH
 	001f02dc push ax
 	001f02e4 mov mar,0x100014
 	001f02f0 memread4 ax
 	001f02f8 pop bx
 	001f0300 land bx,ax
 	001f030c mov ax,bx
		001f0318: FALL_THROUGH

	[001f0318]
		001f02d4: CONDITIONAL_JUMP
		001f02dc: FALL_THROUGH
 	001f0318 jz 0x001f035c
		001f035c: CONDITIONAL_JUMP
		001f0320: FALL_THROUGH

	[001f0320]
		001f0318: FALL_THROUGH
 	001f0320 push ax
 	001f0328 mov mar,0x100018
 	001f0334 memread4 ax
 	001f033c pop bx
 	001f0344 land bx,ax
 	001f0350 mov ax,bx
		001f035c: FALL_THROUGH

	[001f035c]
		001f0318: CONDITIONAL_JUMP
		001f0320: FALL_THROUGH
 	001f035c jz 0x001f03a0
		001f03a0: CONDITIONAL_JUMP
		001f0364: FALL_THROUGH

	[001f0364]
		001f035c: FALL_THROUGH
 	001f0364 push ax
 	001f036c mov mar,0x10001c
 	001f0378 memread4 ax
 	001f0380 pop bx
 	001f0388 land bx,ax
 	001f0394 mov ax,bx
		001f03a0: FALL_THROUGH

	[001f03a0]
		001f035c: CONDITIONAL_JUMP
		001f0364: FALL_THROUGH
 	001f03a0 jz 0x001f03e4
		001f03e4: CONDITIONAL_JUMP
		001f03a8: FALL_THROUGH

	[001f03a8]
		001f03a0: FALL_THROUGH
 	001f03a8 push ax
 	001f03b0 mov mar,0x100020
 	001f03bc memread4 ax
 	001f03c4 pop bx
 	001f03cc land bx,ax
 	001f03d8 mov ax,bx
		001f03e4: FALL_THROUGH

	[001f03e4]
		001f03a0: CONDITIONAL_JUMP
		001f03a8: FALL_THROUGH
 	001f03e4 jz 0x001f0428
		001f0428: CONDITIONAL_JUMP
		001f03ec: FALL_THROUGH

	[001f03ec]
		001f03e4: FALL_THROUGH
 	001f03ec push ax
 	001f03f4 mov mar,0x100024
 	001f0400 memread4 ax
 	001f0408 pop bx
 	001f0410 land bx,ax
 	001f041c mov ax,bx
		001f0428: FALL_THROUGH

	[001f0428]
		001f03e4: CONDITIONAL_JUMP
		001f03ec: FALL_THROUGH
 	001f0428 jz 0x001f0474
		001f0474: CONDITIONAL_JUMP
		001f0430: FALL_THROUGH

	[001f0430]
		001f0428: FALL_THROUGH
 	001f0430 push ax
 	001f0438 mov mar,0x100028
 	001f0444 memread4 ax
 	001f044c lnot ax
 	001f0454 pop bx
 	001f045c land bx,ax
 	001f0468 mov ax,bx
		001f0474: FALL_THROUGH

	[001f0474]
		001f0428: CONDITIONAL_JUMP
		001f0430: FALL_THROUGH
 	001f0474 jz 0x001f04c0
		001f04c0: CONDITIONAL_JUMP
		001f047c: FALL_THROUGH

	[001f047c]
		001f0474: FALL_THROUGH
 	001f047c push ax
 	001f0484 mov mar,0x10002c
 	001f0490 memread4 ax
 	001f0498 lnot ax
 	001f04a0 pop bx
 	001f04a8 land bx,ax
 	001f04b4 mov ax,bx
		001f04c0: FALL_THROUGH

	[001f04c0]
		001f0474: CONDITIONAL_JUMP
		001f047c: FALL_THROUGH
 	001f04c0 jz 0x001f0510
		001f0510: CONDITIONAL_JUMP
		001f04c8: FALL_THROUGH

	[001f04c8]
		001f04c0: FALL_THROUGH
 	001f04c8 mov ax,0x1
 	001f04d4 mov mar,0x100028
 	001f04e0 memwrite4 ax
 	001f04e8 mov ax,0x2
 	001f04f4 mov mar,0x1000d4
 	001f0500 memwrite4 ax
 	001f0508 jmp 0x001f0868
		001f0868: UNCONDITIONAL_JUMP

	[001f0510]
		001f04c0: CONDITIONAL_JUMP
 	001f0510 sourceline 0x2b5f
 	001f0518 mov mar,0x100000
 	001f0524 memread4 ax
 	001f052c jz 0x001f0570
		001f0570: CONDITIONAL_JUMP
		001f0534: FALL_THROUGH

	[001f0534]
		001f0510: FALL_THROUGH
 	001f0534 push ax
 	001f053c mov mar,0x100004
 	001f0548 memread4 ax
 	001f0550 pop bx
 	001f0558 land bx,ax
 	001f0564 mov ax,bx
		001f0570: FALL_THROUGH

	[001f0570]
		001f0510: CONDITIONAL_JUMP
		001f0534: FALL_THROUGH
 	001f0570 jz 0x001f05b4
		001f05b4: CONDITIONAL_JUMP
		001f0578: FALL_THROUGH

	[001f0578]
		001f0570: FALL_THROUGH
 	001f0578 push ax
 	001f0580 mov mar,0x100008
 	001f058c memread4 ax
 	001f0594 pop bx
 	001f059c land bx,ax
 	001f05a8 mov ax,bx
		001f05b4: FALL_THROUGH

	[001f05b4]
		001f0570: CONDITIONAL_JUMP
		001f0578: FALL_THROUGH
 	001f05b4 jz 0x001f05f8
		001f05f8: CONDITIONAL_JUMP
		001f05bc: FALL_THROUGH

	[001f05bc]
		001f05b4: FALL_THROUGH
 	001f05bc push ax
 	001f05c4 mov mar,0x10000c
 	001f05d0 memread4 ax
 	001f05d8 pop bx
 	001f05e0 land bx,ax
 	001f05ec mov ax,bx
		001f05f8: FALL_THROUGH

	[001f05f8]
		001f05b4: CONDITIONAL_JUMP
		001f05bc: FALL_THROUGH
 	001f05f8 jz 0x001f063c
		001f063c: CONDITIONAL_JUMP
		001f0600: FALL_THROUGH

	[001f0600]
		001f05f8: FALL_THROUGH
 	001f0600 push ax
 	001f0608 mov mar,0x100010
 	001f0614 memread4 ax
 	001f061c pop bx
 	001f0624 land bx,ax
 	001f0630 mov ax,bx
		001f063c: FALL_THROUGH

	[001f063c]
		001f05f8: CONDITIONAL_JUMP
		001f0600: FALL_THROUGH
 	001f063c jz 0x001f0680
		001f0680: CONDITIONAL_JUMP
		001f0644: FALL_THROUGH

	[001f0644]
		001f063c: FALL_THROUGH
 	001f0644 push ax
 	001f064c mov mar,0x100014
 	001f0658 memread4 ax
 	001f0660 pop bx
 	001f0668 land bx,ax
 	001f0674 mov ax,bx
		001f0680: FALL_THROUGH

	[001f0680]
		001f063c: CONDITIONAL_JUMP
		001f0644: FALL_THROUGH
 	001f0680 jz 0x001f06c4
		001f06c4: CONDITIONAL_JUMP
		001f0688: FALL_THROUGH

	[001f0688]
		001f0680: FALL_THROUGH
 	001f0688 push ax
 	001f0690 mov mar,0x100018
 	001f069c memread4 ax
 	001f06a4 pop bx
 	001f06ac land bx,ax
 	001f06b8 mov ax,bx
		001f06c4: FALL_THROUGH

	[001f06c4]
		001f0680: CONDITIONAL_JUMP
		001f0688: FALL_THROUGH
 	001f06c4 jz 0x001f0708
		001f0708: CONDITIONAL_JUMP
		001f06cc: FALL_THROUGH

	[001f06cc]
		001f06c4: FALL_THROUGH
 	001f06cc push ax
 	001f06d4 mov mar,0x10001c
 	001f06e0 memread4 ax
 	001f06e8 pop bx
 	001f06f0 land bx,ax
 	001f06fc mov ax,bx
		001f0708: FALL_THROUGH

	[001f0708]
		001f06c4: CONDITIONAL_JUMP
		001f06cc: FALL_THROUGH
 	001f0708 jz 0x001f074c
		001f074c: CONDITIONAL_JUMP
		001f0710: FALL_THROUGH

	[001f0710]
		001f0708: FALL_THROUGH
 	001f0710 push ax
 	001f0718 mov mar,0x100020
 	001f0724 memread4 ax
 	001f072c pop bx
 	001f0734 land bx,ax
 	001f0740 mov ax,bx
		001f074c: FALL_THROUGH

	[001f074c]
		001f0708: CONDITIONAL_JUMP
		001f0710: FALL_THROUGH
 	001f074c jz 0x001f0790
		001f0790: CONDITIONAL_JUMP
		001f0754: FALL_THROUGH

	[001f0754]
		001f074c: FALL_THROUGH
 	001f0754 push ax
 	001f075c mov mar,0x100024
 	001f0768 memread4 ax
 	001f0770 pop bx
 	001f0778 land bx,ax
 	001f0784 mov ax,bx
		001f0790: FALL_THROUGH

	[001f0790]
		001f074c: CONDITIONAL_JUMP
		001f0754: FALL_THROUGH
 	001f0790 jz 0x001f07d4
		001f07d4: CONDITIONAL_JUMP
		001f0798: FALL_THROUGH

	[001f0798]
		001f0790: FALL_THROUGH
 	001f0798 push ax
 	001f07a0 mov mar,0x100028
 	001f07ac memread4 ax
 	001f07b4 pop bx
 	001f07bc land bx,ax
 	001f07c8 mov ax,bx
		001f07d4: FALL_THROUGH

	[001f07d4]
		001f0790: CONDITIONAL_JUMP
		001f0798: FALL_THROUGH
 	001f07d4 jz 0x001f0820
		001f0820: CONDITIONAL_JUMP
		001f07dc: FALL_THROUGH

	[001f07dc]
		001f07d4: FALL_THROUGH
 	001f07dc push ax
 	001f07e4 mov mar,0x10002c
 	001f07f0 memread4 ax
 	001f07f8 lnot ax
 	001f0800 pop bx
 	001f0808 land bx,ax
 	001f0814 mov ax,bx
		001f0820: FALL_THROUGH

	[001f0820]
		001f07d4: CONDITIONAL_JUMP
		001f07dc: FALL_THROUGH
 	001f0820 jz 0x001f0868
		001f0868: CONDITIONAL_JUMP
		001f0828: FALL_THROUGH

	[001f0828]
		001f0820: FALL_THROUGH
 	001f0828 mov ax,0x1
 	001f0834 mov mar,0x10002c
 	001f0840 memwrite4 ax
 	001f0848 mov ax,0x2
 	001f0854 mov mar,0x1000d8
 	001f0860 memwrite4 ax
		001f0868: FALL_THROUGH

	[001f0868]
		001ee150: UNCONDITIONAL_JUMP
		001ee500: UNCONDITIONAL_JUMP
		001ee8a8: UNCONDITIONAL_JUMP
		001eec48: UNCONDITIONAL_JUMP
		001eefe0: UNCONDITIONAL_JUMP
		001ef370: UNCONDITIONAL_JUMP
		001ef6f8: UNCONDITIONAL_JUMP
		001efa78: UNCONDITIONAL_JUMP
		001efdf0: UNCONDITIONAL_JUMP
		001f0160: UNCONDITIONAL_JUMP
		001f04c8: UNCONDITIONAL_JUMP
		001f0820: CONDITIONAL_JUMP
		001f0828: FALL_THROUGH
 	001f0868 sourceline 0x2b63
 	001f0870 jmp 0x001f09cc
		001f09cc: UNCONDITIONAL_JUMP

	[001f0878]
		001edd84: CONDITIONAL_JUMP
 	001f0878 sourceline 0x2b66
 	001f0880 mov mar,0x32ef20
 	001f088c memread4 ax
 	001f0894 lnot ax
 	001f089c jz 0x001f09cc
		001f09cc: CONDITIONAL_JUMP
		001f08a4: FALL_THROUGH

	[001f08a4]
		001f0878: FALL_THROUGH
 	001f08a4 sourceline 0x2b68
 	001f08ac mov ax,0x1
 	001f08b8 mov bx,ax
 	001f08c4 mov mar,0x3cef20
 	001f08d0 mov ax,mar
 	001f08dc push op
 	001f08e4 mov op,ax
 	001f08ec farpush bx
 	001f08f4 setfuncargs 0x1
 	001f08fc mov ax,0x69ef20
 	001f0908 farcall ax
 	001f0910 farsubsp 0x1
 	001f0918 pop op
 	001f0920 sourceline 0x2b69
 	001f0928 push op
 	001f0930 mov ax,0x2c77e7
 	001f093c farpush ax
 	001f0944 mov ax,0x138
 	001f0950 farpush ax
 	001f0958 mov ax,0x92
 	001f0964 farpush ax
 	001f096c mov ax,0x0
 	001f0978 farpush ax
 	001f0980 mov mar,0x3cef20
 	001f098c mov ax,mar
 	001f0998 mov op,ax
 	001f09a0 setfuncargs 0x4
 	001f09a8 mov ax,0x6aef20
 	001f09b4 farcall ax
 	001f09bc farsubsp 0x4
 	001f09c4 pop op
		001f09cc: FALL_THROUGH

	[001f09cc]
		001edd08: CONDITIONAL_JUMP
		001f0868: UNCONDITIONAL_JUMP
		001f0878: CONDITIONAL_JUMP
		001f08a4: FALL_THROUGH
 	001f09cc sourceline 0x2b6d
 	001f09d4 stackptr 0xc
 	001f09dc memread4 ax
 	001f09e4 push ax
 	001f09ec mov ax,0x2
 	001f09f8 pop bx
 	001f0a00 cmpeq bx,ax
 	001f0a0c mov ax,bx
 	001f0a18 jz 0x001f0bd8
		001f0bd8: CONDITIONAL_JUMP
		001f0a20: FALL_THROUGH

	[001f0a20]
		001f09cc: FALL_THROUGH
 	001f0a20 sourceline 0x2b6f
 	001f0a28 mov mar,0x626f20
 	001f0a34 mov ax,mar
 	001f0a40 push op
 	001f0a48 mov op,ax
 	001f0a50 setfuncargs 0x0
 	001f0a58 mov ax,0x606f20
 	001f0a64 farcall ax
 	001f0a6c pop op
 	001f0a74 lnot ax
 	001f0a7c jz 0x001f0bd8
		001f0bd8: CONDITIONAL_JUMP
		001f0a84: FALL_THROUGH

	[001f0a84]
		001f0a20: FALL_THROUGH
 	001f0a84 sourceline 0x2b71
 	001f0a8c mov mar,0x32ef20
 	001f0a98 memread4 ax
 	001f0aa0 lnot ax
 	001f0aa8 jz 0x001f0bd8
		001f0bd8: CONDITIONAL_JUMP
		001f0ab0: FALL_THROUGH

	[001f0ab0]
		001f0a84: FALL_THROUGH
 	001f0ab0 sourceline 0x2b73
 	001f0ab8 mov ax,0x1
 	001f0ac4 mov bx,ax
 	001f0ad0 mov mar,0x3cef20
 	001f0adc mov ax,mar
 	001f0ae8 push op
 	001f0af0 mov op,ax
 	001f0af8 farpush bx
 	001f0b00 setfuncargs 0x1
 	001f0b08 mov ax,0x69ef20
 	001f0b14 farcall ax
 	001f0b1c farsubsp 0x1
 	001f0b24 pop op
 	001f0b2c sourceline 0x2b74
 	001f0b34 push op
 	001f0b3c mov ax,0x2c7835
 	001f0b48 farpush ax
 	001f0b50 mov ax,0x138
 	001f0b5c farpush ax
 	001f0b64 mov ax,0x92
 	001f0b70 farpush ax
 	001f0b78 mov ax,0x0
 	001f0b84 farpush ax
 	001f0b8c mov mar,0x3cef20
 	001f0b98 mov ax,mar
 	001f0ba4 mov op,ax
 	001f0bac setfuncargs 0x4
 	001f0bb4 mov ax,0x6aef20
 	001f0bc0 farcall ax
 	001f0bc8 farsubsp 0x4
 	001f0bd0 pop op
		001f0bd8: FALL_THROUGH

	[001f0bd8]
		001f09cc: CONDITIONAL_JUMP
		001f0a20: CONDITIONAL_JUMP
		001f0a84: CONDITIONAL_JUMP
		001f0ab0: FALL_THROUGH
 	001f0bd8 sourceline 0x2b78
 	001f0be0 mov ax,0x0
 	001f0bec stackptr 0x8
 	001f0bf4 memzerond
 	001f0bf8 ret

btnTopRight_OnClick$2:
	[001f0bfc]
 	001f0bfc sourceline 0x2b7c
 	001f0c04 thisaddr
 	001f0c0c stackptr 0x8
 	001f0c14 memread4 ax
 	001f0c1c meminit ax
 	001f0c24 sourceline 0x2b7d
 	001f0c2c stackptr 0xc
 	001f0c34 memread4 ax
 	001f0c3c push ax
 	001f0c44 mov ax,0x1
 	001f0c50 pop bx
 	001f0c58 cmpeq bx,ax
 	001f0c64 mov ax,bx
 	001f0c70 jz 0x001f3970
		001f3970: CONDITIONAL_JUMP
		001f0c78: FALL_THROUGH

	[001f0c78]
		001f0bfc: FALL_THROUGH
 	001f0c78 sourceline 0x2b7f
*	001f0c80 mov mar,0x1066f20
 	001f0c8c memread4 ax
 	001f0c94 push ax
 	001f0c9c mov mar,0x106ef20
 	001f0ca8 memread4 ax
 	001f0cb0 push ax
 	001f0cb8 mov ax,0x4
 	001f0cc4 pop bx
 	001f0ccc sub bx,ax
 	001f0cd8 mov ax,bx
 	001f0ce4 pop bx
 	001f0cec cmpgt bx,ax
 	001f0cf8 mov ax,bx
 	001f0d04 jz 0x001f0d28
		001f0d28: CONDITIONAL_JUMP
		001f0d0c: FALL_THROUGH

	[001f0d0c]
		001f0c78: FALL_THROUGH
 	001f0d0c mov ax,0x0
 	001f0d18 stackptr 0x8
 	001f0d20 memzerond
 	001f0d24 ret

	[001f0d28]
		001f0c78: CONDITIONAL_JUMP
 	001f0d28 sourceline 0x2b80
 	001f0d30 mov mar,0x626f20
 	001f0d3c mov ax,mar
 	001f0d48 push op
 	001f0d50 mov op,ax
 	001f0d58 setfuncargs 0x0
 	001f0d60 mov ax,0x606f20
 	001f0d6c farcall ax
 	001f0d74 pop op
 	001f0d7c jz 0x001f381c
		001f381c: CONDITIONAL_JUMP
		001f0d84: FALL_THROUGH

	[001f0d84]
		001f0d28: FALL_THROUGH
 	001f0d84 sourceline 0x2b82
 	001f0d8c mov mar,0x100000
 	001f0d98 memread4 ax
 	001f0da0 lnot ax
 	001f0da8 jz 0x001f0df4
		001f0df4: CONDITIONAL_JUMP
		001f0db0: FALL_THROUGH

	[001f0db0]
		001f0d84: FALL_THROUGH
 	001f0db0 push ax
 	001f0db8 mov mar,0x100004
 	001f0dc4 memread4 ax
 	001f0dcc lnot ax
 	001f0dd4 pop bx
 	001f0ddc land bx,ax
 	001f0de8 mov ax,bx
		001f0df4: FALL_THROUGH

	[001f0df4]
		001f0d84: CONDITIONAL_JUMP
		001f0db0: FALL_THROUGH
 	001f0df4 jz 0x001f0e40
		001f0e40: CONDITIONAL_JUMP
		001f0dfc: FALL_THROUGH

	[001f0dfc]
		001f0df4: FALL_THROUGH
 	001f0dfc push ax
 	001f0e04 mov mar,0x100008
 	001f0e10 memread4 ax
 	001f0e18 lnot ax
 	001f0e20 pop bx
 	001f0e28 land bx,ax
 	001f0e34 mov ax,bx
		001f0e40: FALL_THROUGH

	[001f0e40]
		001f0df4: CONDITIONAL_JUMP
		001f0dfc: FALL_THROUGH
 	001f0e40 jz 0x001f0e8c
		001f0e8c: CONDITIONAL_JUMP
		001f0e48: FALL_THROUGH

	[001f0e48]
		001f0e40: FALL_THROUGH
 	001f0e48 push ax
 	001f0e50 mov mar,0x10000c
 	001f0e5c memread4 ax
 	001f0e64 lnot ax
 	001f0e6c pop bx
 	001f0e74 land bx,ax
 	001f0e80 mov ax,bx
		001f0e8c: FALL_THROUGH

	[001f0e8c]
		001f0e40: CONDITIONAL_JUMP
		001f0e48: FALL_THROUGH
 	001f0e8c jz 0x001f0ed8
		001f0ed8: CONDITIONAL_JUMP
		001f0e94: FALL_THROUGH

	[001f0e94]
		001f0e8c: FALL_THROUGH
 	001f0e94 push ax
 	001f0e9c mov mar,0x100010
 	001f0ea8 memread4 ax
 	001f0eb0 lnot ax
 	001f0eb8 pop bx
 	001f0ec0 land bx,ax
 	001f0ecc mov ax,bx
		001f0ed8: FALL_THROUGH

	[001f0ed8]
		001f0e8c: CONDITIONAL_JUMP
		001f0e94: FALL_THROUGH
 	001f0ed8 jz 0x001f0f24
		001f0f24: CONDITIONAL_JUMP
		001f0ee0: FALL_THROUGH

	[001f0ee0]
		001f0ed8: FALL_THROUGH
 	001f0ee0 push ax
 	001f0ee8 mov mar,0x100014
 	001f0ef4 memread4 ax
 	001f0efc lnot ax
 	001f0f04 pop bx
 	001f0f0c land bx,ax
 	001f0f18 mov ax,bx
		001f0f24: FALL_THROUGH

	[001f0f24]
		001f0ed8: CONDITIONAL_JUMP
		001f0ee0: FALL_THROUGH
 	001f0f24 jz 0x001f0f70
		001f0f70: CONDITIONAL_JUMP
		001f0f2c: FALL_THROUGH

	[001f0f2c]
		001f0f24: FALL_THROUGH
 	001f0f2c push ax
 	001f0f34 mov mar,0x100018
 	001f0f40 memread4 ax
 	001f0f48 lnot ax
 	001f0f50 pop bx
 	001f0f58 land bx,ax
 	001f0f64 mov ax,bx
		001f0f70: FALL_THROUGH

	[001f0f70]
		001f0f24: CONDITIONAL_JUMP
		001f0f2c: FALL_THROUGH
 	001f0f70 jz 0x001f0fbc
		001f0fbc: CONDITIONAL_JUMP
		001f0f78: FALL_THROUGH

	[001f0f78]
		001f0f70: FALL_THROUGH
 	001f0f78 push ax
 	001f0f80 mov mar,0x10001c
 	001f0f8c memread4 ax
 	001f0f94 lnot ax
 	001f0f9c pop bx
 	001f0fa4 land bx,ax
 	001f0fb0 mov ax,bx
		001f0fbc: FALL_THROUGH

	[001f0fbc]
		001f0f70: CONDITIONAL_JUMP
		001f0f78: FALL_THROUGH
 	001f0fbc jz 0x001f1008
		001f1008: CONDITIONAL_JUMP
		001f0fc4: FALL_THROUGH

	[001f0fc4]
		001f0fbc: FALL_THROUGH
 	001f0fc4 push ax
 	001f0fcc mov mar,0x100020
 	001f0fd8 memread4 ax
 	001f0fe0 lnot ax
 	001f0fe8 pop bx
 	001f0ff0 land bx,ax
 	001f0ffc mov ax,bx
		001f1008: FALL_THROUGH

	[001f1008]
		001f0fbc: CONDITIONAL_JUMP
		001f0fc4: FALL_THROUGH
 	001f1008 jz 0x001f1054
		001f1054: CONDITIONAL_JUMP
		001f1010: FALL_THROUGH

	[001f1010]
		001f1008: FALL_THROUGH
 	001f1010 push ax
 	001f1018 mov mar,0x100024
 	001f1024 memread4 ax
 	001f102c lnot ax
 	001f1034 pop bx
 	001f103c land bx,ax
 	001f1048 mov ax,bx
		001f1054: FALL_THROUGH

	[001f1054]
		001f1008: CONDITIONAL_JUMP
		001f1010: FALL_THROUGH
 	001f1054 jz 0x001f10a0
		001f10a0: CONDITIONAL_JUMP
		001f105c: FALL_THROUGH

	[001f105c]
		001f1054: FALL_THROUGH
 	001f105c push ax
 	001f1064 mov mar,0x100028
 	001f1070 memread4 ax
 	001f1078 lnot ax
 	001f1080 pop bx
 	001f1088 land bx,ax
 	001f1094 mov ax,bx
		001f10a0: FALL_THROUGH

	[001f10a0]
		001f1054: CONDITIONAL_JUMP
		001f105c: FALL_THROUGH
 	001f10a0 jz 0x001f10ec
		001f10ec: CONDITIONAL_JUMP
		001f10a8: FALL_THROUGH

	[001f10a8]
		001f10a0: FALL_THROUGH
 	001f10a8 push ax
 	001f10b0 mov mar,0x10002c
 	001f10bc memread4 ax
 	001f10c4 lnot ax
 	001f10cc pop bx
 	001f10d4 land bx,ax
 	001f10e0 mov ax,bx
		001f10ec: FALL_THROUGH

	[001f10ec]
		001f10a0: CONDITIONAL_JUMP
		001f10a8: FALL_THROUGH
 	001f10ec jz 0x001f113c
		001f113c: CONDITIONAL_JUMP
		001f10f4: FALL_THROUGH

	[001f10f4]
		001f10ec: FALL_THROUGH
 	001f10f4 mov ax,0x1
 	001f1100 mov mar,0x100000
 	001f110c memwrite4 ax
 	001f1114 mov ax,0x3
 	001f1120 mov mar,0x1000ac
 	001f112c memwrite4 ax
 	001f1134 jmp 0x001f380c
		001f380c: UNCONDITIONAL_JUMP

	[001f113c]
		001f10ec: CONDITIONAL_JUMP
 	001f113c sourceline 0x2b87
 	001f1144 mov mar,0x100000
 	001f1150 memread4 ax
 	001f1158 jz 0x001f11a4
		001f11a4: CONDITIONAL_JUMP
		001f1160: FALL_THROUGH

	[001f1160]
		001f113c: FALL_THROUGH
 	001f1160 push ax
 	001f1168 mov mar,0x100004
 	001f1174 memread4 ax
 	001f117c lnot ax
 	001f1184 pop bx
 	001f118c land bx,ax
 	001f1198 mov ax,bx
		001f11a4: FALL_THROUGH

	[001f11a4]
		001f113c: CONDITIONAL_JUMP
		001f1160: FALL_THROUGH
 	001f11a4 jz 0x001f11f0
		001f11f0: CONDITIONAL_JUMP
		001f11ac: FALL_THROUGH

	[001f11ac]
		001f11a4: FALL_THROUGH
 	001f11ac push ax
 	001f11b4 mov mar,0x100008
 	001f11c0 memread4 ax
 	001f11c8 lnot ax
 	001f11d0 pop bx
 	001f11d8 land bx,ax
 	001f11e4 mov ax,bx
		001f11f0: FALL_THROUGH

	[001f11f0]
		001f11a4: CONDITIONAL_JUMP
		001f11ac: FALL_THROUGH
 	001f11f0 jz 0x001f123c
		001f123c: CONDITIONAL_JUMP
		001f11f8: FALL_THROUGH

	[001f11f8]
		001f11f0: FALL_THROUGH
 	001f11f8 push ax
 	001f1200 mov mar,0x10000c
 	001f120c memread4 ax
 	001f1214 lnot ax
 	001f121c pop bx
 	001f1224 land bx,ax
 	001f1230 mov ax,bx
		001f123c: FALL_THROUGH

	[001f123c]
		001f11f0: CONDITIONAL_JUMP
		001f11f8: FALL_THROUGH
 	001f123c jz 0x001f1288
		001f1288: CONDITIONAL_JUMP
		001f1244: FALL_THROUGH

	[001f1244]
		001f123c: FALL_THROUGH
 	001f1244 push ax
 	001f124c mov mar,0x100010
 	001f1258 memread4 ax
 	001f1260 lnot ax
 	001f1268 pop bx
 	001f1270 land bx,ax
 	001f127c mov ax,bx
		001f1288: FALL_THROUGH

	[001f1288]
		001f123c: CONDITIONAL_JUMP
		001f1244: FALL_THROUGH
 	001f1288 jz 0x001f12d4
		001f12d4: CONDITIONAL_JUMP
		001f1290: FALL_THROUGH

	[001f1290]
		001f1288: FALL_THROUGH
 	001f1290 push ax
 	001f1298 mov mar,0x100014
 	001f12a4 memread4 ax
 	001f12ac lnot ax
 	001f12b4 pop bx
 	001f12bc land bx,ax
 	001f12c8 mov ax,bx
		001f12d4: FALL_THROUGH

	[001f12d4]
		001f1288: CONDITIONAL_JUMP
		001f1290: FALL_THROUGH
 	001f12d4 jz 0x001f1320
		001f1320: CONDITIONAL_JUMP
		001f12dc: FALL_THROUGH

	[001f12dc]
		001f12d4: FALL_THROUGH
 	001f12dc push ax
 	001f12e4 mov mar,0x100018
 	001f12f0 memread4 ax
 	001f12f8 lnot ax
 	001f1300 pop bx
 	001f1308 land bx,ax
 	001f1314 mov ax,bx
		001f1320: FALL_THROUGH

	[001f1320]
		001f12d4: CONDITIONAL_JUMP
		001f12dc: FALL_THROUGH
 	001f1320 jz 0x001f136c
		001f136c: CONDITIONAL_JUMP
		001f1328: FALL_THROUGH

	[001f1328]
		001f1320: FALL_THROUGH
 	001f1328 push ax
 	001f1330 mov mar,0x10001c
 	001f133c memread4 ax
 	001f1344 lnot ax
 	001f134c pop bx
 	001f1354 land bx,ax
 	001f1360 mov ax,bx
		001f136c: FALL_THROUGH

	[001f136c]
		001f1320: CONDITIONAL_JUMP
		001f1328: FALL_THROUGH
 	001f136c jz 0x001f13b8
		001f13b8: CONDITIONAL_JUMP
		001f1374: FALL_THROUGH

	[001f1374]
		001f136c: FALL_THROUGH
 	001f1374 push ax
 	001f137c mov mar,0x100020
 	001f1388 memread4 ax
 	001f1390 lnot ax
 	001f1398 pop bx
 	001f13a0 land bx,ax
 	001f13ac mov ax,bx
		001f13b8: FALL_THROUGH

	[001f13b8]
		001f136c: CONDITIONAL_JUMP
		001f1374: FALL_THROUGH
 	001f13b8 jz 0x001f1404
		001f1404: CONDITIONAL_JUMP
		001f13c0: FALL_THROUGH

	[001f13c0]
		001f13b8: FALL_THROUGH
 	001f13c0 push ax
 	001f13c8 mov mar,0x100024
 	001f13d4 memread4 ax
 	001f13dc lnot ax
 	001f13e4 pop bx
 	001f13ec land bx,ax
 	001f13f8 mov ax,bx
		001f1404: FALL_THROUGH

	[001f1404]
		001f13b8: CONDITIONAL_JUMP
		001f13c0: FALL_THROUGH
 	001f1404 jz 0x001f1450
		001f1450: CONDITIONAL_JUMP
		001f140c: FALL_THROUGH

	[001f140c]
		001f1404: FALL_THROUGH
 	001f140c push ax
 	001f1414 mov mar,0x100028
 	001f1420 memread4 ax
 	001f1428 lnot ax
 	001f1430 pop bx
 	001f1438 land bx,ax
 	001f1444 mov ax,bx
		001f1450: FALL_THROUGH

	[001f1450]
		001f1404: CONDITIONAL_JUMP
		001f140c: FALL_THROUGH
 	001f1450 jz 0x001f149c
		001f149c: CONDITIONAL_JUMP
		001f1458: FALL_THROUGH

	[001f1458]
		001f1450: FALL_THROUGH
 	001f1458 push ax
 	001f1460 mov mar,0x10002c
 	001f146c memread4 ax
 	001f1474 lnot ax
 	001f147c pop bx
 	001f1484 land bx,ax
 	001f1490 mov ax,bx
		001f149c: FALL_THROUGH

	[001f149c]
		001f1450: CONDITIONAL_JUMP
		001f1458: FALL_THROUGH
 	001f149c jz 0x001f14ec
		001f14ec: CONDITIONAL_JUMP
		001f14a4: FALL_THROUGH

	[001f14a4]
		001f149c: FALL_THROUGH
 	001f14a4 mov ax,0x1
 	001f14b0 mov mar,0x100004
 	001f14bc memwrite4 ax
 	001f14c4 mov ax,0x3
 	001f14d0 mov mar,0x1000b0
 	001f14dc memwrite4 ax
 	001f14e4 jmp 0x001f380c
		001f380c: UNCONDITIONAL_JUMP

	[001f14ec]
		001f149c: CONDITIONAL_JUMP
 	001f14ec sourceline 0x2b8c
 	001f14f4 mov mar,0x100000
 	001f1500 memread4 ax
 	001f1508 jz 0x001f154c
		001f154c: CONDITIONAL_JUMP
		001f1510: FALL_THROUGH

	[001f1510]
		001f14ec: FALL_THROUGH
 	001f1510 push ax
 	001f1518 mov mar,0x100004
 	001f1524 memread4 ax
 	001f152c pop bx
 	001f1534 land bx,ax
 	001f1540 mov ax,bx
		001f154c: FALL_THROUGH

	[001f154c]
		001f14ec: CONDITIONAL_JUMP
		001f1510: FALL_THROUGH
 	001f154c jz 0x001f1598
		001f1598: CONDITIONAL_JUMP
		001f1554: FALL_THROUGH

	[001f1554]
		001f154c: FALL_THROUGH
 	001f1554 push ax
 	001f155c mov mar,0x100008
 	001f1568 memread4 ax
 	001f1570 lnot ax
 	001f1578 pop bx
 	001f1580 land bx,ax
 	001f158c mov ax,bx
		001f1598: FALL_THROUGH

	[001f1598]
		001f154c: CONDITIONAL_JUMP
		001f1554: FALL_THROUGH
 	001f1598 jz 0x001f15e4
		001f15e4: CONDITIONAL_JUMP
		001f15a0: FALL_THROUGH

	[001f15a0]
		001f1598: FALL_THROUGH
 	001f15a0 push ax
 	001f15a8 mov mar,0x10000c
 	001f15b4 memread4 ax
 	001f15bc lnot ax
 	001f15c4 pop bx
 	001f15cc land bx,ax
 	001f15d8 mov ax,bx
		001f15e4: FALL_THROUGH

	[001f15e4]
		001f1598: CONDITIONAL_JUMP
		001f15a0: FALL_THROUGH
 	001f15e4 jz 0x001f1630
		001f1630: CONDITIONAL_JUMP
		001f15ec: FALL_THROUGH

	[001f15ec]
		001f15e4: FALL_THROUGH
 	001f15ec push ax
 	001f15f4 mov mar,0x100010
 	001f1600 memread4 ax
 	001f1608 lnot ax
 	001f1610 pop bx
 	001f1618 land bx,ax
 	001f1624 mov ax,bx
		001f1630: FALL_THROUGH

	[001f1630]
		001f15e4: CONDITIONAL_JUMP
		001f15ec: FALL_THROUGH
 	001f1630 jz 0x001f167c
		001f167c: CONDITIONAL_JUMP
		001f1638: FALL_THROUGH

	[001f1638]
		001f1630: FALL_THROUGH
 	001f1638 push ax
 	001f1640 mov mar,0x100014
 	001f164c memread4 ax
 	001f1654 lnot ax
 	001f165c pop bx
 	001f1664 land bx,ax
 	001f1670 mov ax,bx
		001f167c: FALL_THROUGH

	[001f167c]
		001f1630: CONDITIONAL_JUMP
		001f1638: FALL_THROUGH
 	001f167c jz 0x001f16c8
		001f16c8: CONDITIONAL_JUMP
		001f1684: FALL_THROUGH

	[001f1684]
		001f167c: FALL_THROUGH
 	001f1684 push ax
 	001f168c mov mar,0x100018
 	001f1698 memread4 ax
 	001f16a0 lnot ax
 	001f16a8 pop bx
 	001f16b0 land bx,ax
 	001f16bc mov ax,bx
		001f16c8: FALL_THROUGH

	[001f16c8]
		001f167c: CONDITIONAL_JUMP
		001f1684: FALL_THROUGH
 	001f16c8 jz 0x001f1714
		001f1714: CONDITIONAL_JUMP
		001f16d0: FALL_THROUGH

	[001f16d0]
		001f16c8: FALL_THROUGH
 	001f16d0 push ax
 	001f16d8 mov mar,0x10001c
 	001f16e4 memread4 ax
 	001f16ec lnot ax
 	001f16f4 pop bx
 	001f16fc land bx,ax
 	001f1708 mov ax,bx
		001f1714: FALL_THROUGH

	[001f1714]
		001f16c8: CONDITIONAL_JUMP
		001f16d0: FALL_THROUGH
 	001f1714 jz 0x001f1760
		001f1760: CONDITIONAL_JUMP
		001f171c: FALL_THROUGH

	[001f171c]
		001f1714: FALL_THROUGH
 	001f171c push ax
 	001f1724 mov mar,0x100020
 	001f1730 memread4 ax
 	001f1738 lnot ax
 	001f1740 pop bx
 	001f1748 land bx,ax
 	001f1754 mov ax,bx
		001f1760: FALL_THROUGH

	[001f1760]
		001f1714: CONDITIONAL_JUMP
		001f171c: FALL_THROUGH
 	001f1760 jz 0x001f17ac
		001f17ac: CONDITIONAL_JUMP
		001f1768: FALL_THROUGH

	[001f1768]
		001f1760: FALL_THROUGH
 	001f1768 push ax
 	001f1770 mov mar,0x100024
 	001f177c memread4 ax
 	001f1784 lnot ax
 	001f178c pop bx
 	001f1794 land bx,ax
 	001f17a0 mov ax,bx
		001f17ac: FALL_THROUGH

	[001f17ac]
		001f1760: CONDITIONAL_JUMP
		001f1768: FALL_THROUGH
 	001f17ac jz 0x001f17f8
		001f17f8: CONDITIONAL_JUMP
		001f17b4: FALL_THROUGH

	[001f17b4]
		001f17ac: FALL_THROUGH
 	001f17b4 push ax
 	001f17bc mov mar,0x100028
 	001f17c8 memread4 ax
 	001f17d0 lnot ax
 	001f17d8 pop bx
 	001f17e0 land bx,ax
 	001f17ec mov ax,bx
		001f17f8: FALL_THROUGH

	[001f17f8]
		001f17ac: CONDITIONAL_JUMP
		001f17b4: FALL_THROUGH
 	001f17f8 jz 0x001f1844
		001f1844: CONDITIONAL_JUMP
		001f1800: FALL_THROUGH

	[001f1800]
		001f17f8: FALL_THROUGH
 	001f1800 push ax
 	001f1808 mov mar,0x10002c
 	001f1814 memread4 ax
 	001f181c lnot ax
 	001f1824 pop bx
 	001f182c land bx,ax
 	001f1838 mov ax,bx
		001f1844: FALL_THROUGH

	[001f1844]
		001f17f8: CONDITIONAL_JUMP
		001f1800: FALL_THROUGH
 	001f1844 jz 0x001f1894
		001f1894: CONDITIONAL_JUMP
		001f184c: FALL_THROUGH

	[001f184c]
		001f1844: FALL_THROUGH
 	001f184c mov ax,0x1
 	001f1858 mov mar,0x100008
 	001f1864 memwrite4 ax
 	001f186c mov ax,0x3
 	001f1878 mov mar,0x1000b4
 	001f1884 memwrite4 ax
 	001f188c jmp 0x001f380c
		001f380c: UNCONDITIONAL_JUMP

	[001f1894]
		001f1844: CONDITIONAL_JUMP
 	001f1894 sourceline 0x2b91
 	001f189c mov mar,0x100000
 	001f18a8 memread4 ax
 	001f18b0 jz 0x001f18f4
		001f18f4: CONDITIONAL_JUMP
		001f18b8: FALL_THROUGH

	[001f18b8]
		001f1894: FALL_THROUGH
 	001f18b8 push ax
 	001f18c0 mov mar,0x100004
 	001f18cc memread4 ax
 	001f18d4 pop bx
 	001f18dc land bx,ax
 	001f18e8 mov ax,bx
		001f18f4: FALL_THROUGH

	[001f18f4]
		001f1894: CONDITIONAL_JUMP
		001f18b8: FALL_THROUGH
 	001f18f4 jz 0x001f1938
		001f1938: CONDITIONAL_JUMP
		001f18fc: FALL_THROUGH

	[001f18fc]
		001f18f4: FALL_THROUGH
 	001f18fc push ax
 	001f1904 mov mar,0x100008
 	001f1910 memread4 ax
 	001f1918 pop bx
 	001f1920 land bx,ax
 	001f192c mov ax,bx
		001f1938: FALL_THROUGH

	[001f1938]
		001f18f4: CONDITIONAL_JUMP
		001f18fc: FALL_THROUGH
 	001f1938 jz 0x001f1984
		001f1984: CONDITIONAL_JUMP
		001f1940: FALL_THROUGH

	[001f1940]
		001f1938: FALL_THROUGH
 	001f1940 push ax
 	001f1948 mov mar,0x10000c
 	001f1954 memread4 ax
 	001f195c lnot ax
 	001f1964 pop bx
 	001f196c land bx,ax
 	001f1978 mov ax,bx
		001f1984: FALL_THROUGH

	[001f1984]
		001f1938: CONDITIONAL_JUMP
		001f1940: FALL_THROUGH
 	001f1984 jz 0x001f19d0
		001f19d0: CONDITIONAL_JUMP
		001f198c: FALL_THROUGH

	[001f198c]
		001f1984: FALL_THROUGH
 	001f198c push ax
 	001f1994 mov mar,0x100010
 	001f19a0 memread4 ax
 	001f19a8 lnot ax
 	001f19b0 pop bx
 	001f19b8 land bx,ax
 	001f19c4 mov ax,bx
		001f19d0: FALL_THROUGH

	[001f19d0]
		001f1984: CONDITIONAL_JUMP
		001f198c: FALL_THROUGH
 	001f19d0 jz 0x001f1a1c
		001f1a1c: CONDITIONAL_JUMP
		001f19d8: FALL_THROUGH

	[001f19d8]
		001f19d0: FALL_THROUGH
 	001f19d8 push ax
 	001f19e0 mov mar,0x100014
 	001f19ec memread4 ax
 	001f19f4 lnot ax
 	001f19fc pop bx
 	001f1a04 land bx,ax
 	001f1a10 mov ax,bx
		001f1a1c: FALL_THROUGH

	[001f1a1c]
		001f19d0: CONDITIONAL_JUMP
		001f19d8: FALL_THROUGH
 	001f1a1c jz 0x001f1a68
		001f1a68: CONDITIONAL_JUMP
		001f1a24: FALL_THROUGH

	[001f1a24]
		001f1a1c: FALL_THROUGH
 	001f1a24 push ax
 	001f1a2c mov mar,0x100018
 	001f1a38 memread4 ax
 	001f1a40 lnot ax
 	001f1a48 pop bx
 	001f1a50 land bx,ax
 	001f1a5c mov ax,bx
		001f1a68: FALL_THROUGH

	[001f1a68]
		001f1a1c: CONDITIONAL_JUMP
		001f1a24: FALL_THROUGH
 	001f1a68 jz 0x001f1ab4
		001f1ab4: CONDITIONAL_JUMP
		001f1a70: FALL_THROUGH

	[001f1a70]
		001f1a68: FALL_THROUGH
 	001f1a70 push ax
 	001f1a78 mov mar,0x10001c
 	001f1a84 memread4 ax
 	001f1a8c lnot ax
 	001f1a94 pop bx
 	001f1a9c land bx,ax
 	001f1aa8 mov ax,bx
		001f1ab4: FALL_THROUGH

	[001f1ab4]
		001f1a68: CONDITIONAL_JUMP
		001f1a70: FALL_THROUGH
 	001f1ab4 jz 0x001f1b00
		001f1b00: CONDITIONAL_JUMP
		001f1abc: FALL_THROUGH

	[001f1abc]
		001f1ab4: FALL_THROUGH
 	001f1abc push ax
 	001f1ac4 mov mar,0x100020
 	001f1ad0 memread4 ax
 	001f1ad8 lnot ax
 	001f1ae0 pop bx
 	001f1ae8 land bx,ax
 	001f1af4 mov ax,bx
		001f1b00: FALL_THROUGH

	[001f1b00]
		001f1ab4: CONDITIONAL_JUMP
		001f1abc: FALL_THROUGH
 	001f1b00 jz 0x001f1b4c
		001f1b4c: CONDITIONAL_JUMP
		001f1b08: FALL_THROUGH

	[001f1b08]
		001f1b00: FALL_THROUGH
 	001f1b08 push ax
 	001f1b10 mov mar,0x100024
 	001f1b1c memread4 ax
 	001f1b24 lnot ax
 	001f1b2c pop bx
 	001f1b34 land bx,ax
 	001f1b40 mov ax,bx
		001f1b4c: FALL_THROUGH

	[001f1b4c]
		001f1b00: CONDITIONAL_JUMP
		001f1b08: FALL_THROUGH
 	001f1b4c jz 0x001f1b98
		001f1b98: CONDITIONAL_JUMP
		001f1b54: FALL_THROUGH

	[001f1b54]
		001f1b4c: FALL_THROUGH
 	001f1b54 push ax
 	001f1b5c mov mar,0x100028
 	001f1b68 memread4 ax
 	001f1b70 lnot ax
 	001f1b78 pop bx
 	001f1b80 land bx,ax
 	001f1b8c mov ax,bx
		001f1b98: FALL_THROUGH

	[001f1b98]
		001f1b4c: CONDITIONAL_JUMP
		001f1b54: FALL_THROUGH
 	001f1b98 jz 0x001f1be4
		001f1be4: CONDITIONAL_JUMP
		001f1ba0: FALL_THROUGH

	[001f1ba0]
		001f1b98: FALL_THROUGH
 	001f1ba0 push ax
 	001f1ba8 mov mar,0x10002c
 	001f1bb4 memread4 ax
 	001f1bbc lnot ax
 	001f1bc4 pop bx
 	001f1bcc land bx,ax
 	001f1bd8 mov ax,bx
		001f1be4: FALL_THROUGH

	[001f1be4]
		001f1b98: CONDITIONAL_JUMP
		001f1ba0: FALL_THROUGH
 	001f1be4 jz 0x001f1c34
		001f1c34: CONDITIONAL_JUMP
		001f1bec: FALL_THROUGH

	[001f1bec]
		001f1be4: FALL_THROUGH
 	001f1bec mov ax,0x1
 	001f1bf8 mov mar,0x10000c
 	001f1c04 memwrite4 ax
 	001f1c0c mov ax,0x3
 	001f1c18 mov mar,0x1000b8
 	001f1c24 memwrite4 ax
 	001f1c2c jmp 0x001f380c
		001f380c: UNCONDITIONAL_JUMP

	[001f1c34]
		001f1be4: CONDITIONAL_JUMP
 	001f1c34 sourceline 0x2b96
 	001f1c3c mov mar,0x100000
 	001f1c48 memread4 ax
 	001f1c50 jz 0x001f1c94
		001f1c94: CONDITIONAL_JUMP
		001f1c58: FALL_THROUGH

	[001f1c58]
		001f1c34: FALL_THROUGH
 	001f1c58 push ax
 	001f1c60 mov mar,0x100004
 	001f1c6c memread4 ax
 	001f1c74 pop bx
 	001f1c7c land bx,ax
 	001f1c88 mov ax,bx
		001f1c94: FALL_THROUGH

	[001f1c94]
		001f1c34: CONDITIONAL_JUMP
		001f1c58: FALL_THROUGH
 	001f1c94 jz 0x001f1cd8
		001f1cd8: CONDITIONAL_JUMP
		001f1c9c: FALL_THROUGH

	[001f1c9c]
		001f1c94: FALL_THROUGH
 	001f1c9c push ax
 	001f1ca4 mov mar,0x100008
 	001f1cb0 memread4 ax
 	001f1cb8 pop bx
 	001f1cc0 land bx,ax
 	001f1ccc mov ax,bx
		001f1cd8: FALL_THROUGH

	[001f1cd8]
		001f1c94: CONDITIONAL_JUMP
		001f1c9c: FALL_THROUGH
 	001f1cd8 jz 0x001f1d1c
		001f1d1c: CONDITIONAL_JUMP
		001f1ce0: FALL_THROUGH

	[001f1ce0]
		001f1cd8: FALL_THROUGH
 	001f1ce0 push ax
 	001f1ce8 mov mar,0x10000c
 	001f1cf4 memread4 ax
 	001f1cfc pop bx
 	001f1d04 land bx,ax
 	001f1d10 mov ax,bx
		001f1d1c: FALL_THROUGH

	[001f1d1c]
		001f1cd8: CONDITIONAL_JUMP
		001f1ce0: FALL_THROUGH
 	001f1d1c jz 0x001f1d68
		001f1d68: CONDITIONAL_JUMP
		001f1d24: FALL_THROUGH

	[001f1d24]
		001f1d1c: FALL_THROUGH
 	001f1d24 push ax
 	001f1d2c mov mar,0x100010
 	001f1d38 memread4 ax
 	001f1d40 lnot ax
 	001f1d48 pop bx
 	001f1d50 land bx,ax
 	001f1d5c mov ax,bx
		001f1d68: FALL_THROUGH

	[001f1d68]
		001f1d1c: CONDITIONAL_JUMP
		001f1d24: FALL_THROUGH
 	001f1d68 jz 0x001f1db4
		001f1db4: CONDITIONAL_JUMP
		001f1d70: FALL_THROUGH

	[001f1d70]
		001f1d68: FALL_THROUGH
 	001f1d70 push ax
 	001f1d78 mov mar,0x100014
 	001f1d84 memread4 ax
 	001f1d8c lnot ax
 	001f1d94 pop bx
 	001f1d9c land bx,ax
 	001f1da8 mov ax,bx
		001f1db4: FALL_THROUGH

	[001f1db4]
		001f1d68: CONDITIONAL_JUMP
		001f1d70: FALL_THROUGH
 	001f1db4 jz 0x001f1e00
		001f1e00: CONDITIONAL_JUMP
		001f1dbc: FALL_THROUGH

	[001f1dbc]
		001f1db4: FALL_THROUGH
 	001f1dbc push ax
 	001f1dc4 mov mar,0x100018
 	001f1dd0 memread4 ax
 	001f1dd8 lnot ax
 	001f1de0 pop bx
 	001f1de8 land bx,ax
 	001f1df4 mov ax,bx
		001f1e00: FALL_THROUGH

	[001f1e00]
		001f1db4: CONDITIONAL_JUMP
		001f1dbc: FALL_THROUGH
 	001f1e00 jz 0x001f1e4c
		001f1e4c: CONDITIONAL_JUMP
		001f1e08: FALL_THROUGH

	[001f1e08]
		001f1e00: FALL_THROUGH
 	001f1e08 push ax
 	001f1e10 mov mar,0x10001c
 	001f1e1c memread4 ax
 	001f1e24 lnot ax
 	001f1e2c pop bx
 	001f1e34 land bx,ax
 	001f1e40 mov ax,bx
		001f1e4c: FALL_THROUGH

	[001f1e4c]
		001f1e00: CONDITIONAL_JUMP
		001f1e08: FALL_THROUGH
 	001f1e4c jz 0x001f1e98
		001f1e98: CONDITIONAL_JUMP
		001f1e54: FALL_THROUGH

	[001f1e54]
		001f1e4c: FALL_THROUGH
 	001f1e54 push ax
 	001f1e5c mov mar,0x100020
 	001f1e68 memread4 ax
 	001f1e70 lnot ax
 	001f1e78 pop bx
 	001f1e80 land bx,ax
 	001f1e8c mov ax,bx
		001f1e98: FALL_THROUGH

	[001f1e98]
		001f1e4c: CONDITIONAL_JUMP
		001f1e54: FALL_THROUGH
 	001f1e98 jz 0x001f1ee4
		001f1ee4: CONDITIONAL_JUMP
		001f1ea0: FALL_THROUGH

	[001f1ea0]
		001f1e98: FALL_THROUGH
 	001f1ea0 push ax
 	001f1ea8 mov mar,0x100024
 	001f1eb4 memread4 ax
 	001f1ebc lnot ax
 	001f1ec4 pop bx
 	001f1ecc land bx,ax
 	001f1ed8 mov ax,bx
		001f1ee4: FALL_THROUGH

	[001f1ee4]
		001f1e98: CONDITIONAL_JUMP
		001f1ea0: FALL_THROUGH
 	001f1ee4 jz 0x001f1f30
		001f1f30: CONDITIONAL_JUMP
		001f1eec: FALL_THROUGH

	[001f1eec]
		001f1ee4: FALL_THROUGH
 	001f1eec push ax
 	001f1ef4 mov mar,0x100028
 	001f1f00 memread4 ax
 	001f1f08 lnot ax
 	001f1f10 pop bx
 	001f1f18 land bx,ax
 	001f1f24 mov ax,bx
		001f1f30: FALL_THROUGH

	[001f1f30]
		001f1ee4: CONDITIONAL_JUMP
		001f1eec: FALL_THROUGH
 	001f1f30 jz 0x001f1f7c
		001f1f7c: CONDITIONAL_JUMP
		001f1f38: FALL_THROUGH

	[001f1f38]
		001f1f30: FALL_THROUGH
 	001f1f38 push ax
 	001f1f40 mov mar,0x10002c
 	001f1f4c memread4 ax
 	001f1f54 lnot ax
 	001f1f5c pop bx
 	001f1f64 land bx,ax
 	001f1f70 mov ax,bx
		001f1f7c: FALL_THROUGH

	[001f1f7c]
		001f1f30: CONDITIONAL_JUMP
		001f1f38: FALL_THROUGH
 	001f1f7c jz 0x001f1fcc
		001f1fcc: CONDITIONAL_JUMP
		001f1f84: FALL_THROUGH

	[001f1f84]
		001f1f7c: FALL_THROUGH
 	001f1f84 mov ax,0x1
 	001f1f90 mov mar,0x100010
 	001f1f9c memwrite4 ax
 	001f1fa4 mov ax,0x3
 	001f1fb0 mov mar,0x1000bc
 	001f1fbc memwrite4 ax
 	001f1fc4 jmp 0x001f380c
		001f380c: UNCONDITIONAL_JUMP

	[001f1fcc]
		001f1f7c: CONDITIONAL_JUMP
 	001f1fcc sourceline 0x2b9b
 	001f1fd4 mov mar,0x100000
 	001f1fe0 memread4 ax
 	001f1fe8 jz 0x001f202c
		001f202c: CONDITIONAL_JUMP
		001f1ff0: FALL_THROUGH

	[001f1ff0]
		001f1fcc: FALL_THROUGH
 	001f1ff0 push ax
 	001f1ff8 mov mar,0x100004
 	001f2004 memread4 ax
 	001f200c pop bx
 	001f2014 land bx,ax
 	001f2020 mov ax,bx
		001f202c: FALL_THROUGH

	[001f202c]
		001f1fcc: CONDITIONAL_JUMP
		001f1ff0: FALL_THROUGH
 	001f202c jz 0x001f2070
		001f2070: CONDITIONAL_JUMP
		001f2034: FALL_THROUGH

	[001f2034]
		001f202c: FALL_THROUGH
 	001f2034 push ax
 	001f203c mov mar,0x100008
 	001f2048 memread4 ax
 	001f2050 pop bx
 	001f2058 land bx,ax
 	001f2064 mov ax,bx
		001f2070: FALL_THROUGH

	[001f2070]
		001f202c: CONDITIONAL_JUMP
		001f2034: FALL_THROUGH
 	001f2070 jz 0x001f20b4
		001f20b4: CONDITIONAL_JUMP
		001f2078: FALL_THROUGH

	[001f2078]
		001f2070: FALL_THROUGH
 	001f2078 push ax
 	001f2080 mov mar,0x10000c
 	001f208c memread4 ax
 	001f2094 pop bx
 	001f209c land bx,ax
 	001f20a8 mov ax,bx
		001f20b4: FALL_THROUGH

	[001f20b4]
		001f2070: CONDITIONAL_JUMP
		001f2078: FALL_THROUGH
 	001f20b4 jz 0x001f20f8
		001f20f8: CONDITIONAL_JUMP
		001f20bc: FALL_THROUGH

	[001f20bc]
		001f20b4: FALL_THROUGH
 	001f20bc push ax
 	001f20c4 mov mar,0x100010
 	001f20d0 memread4 ax
 	001f20d8 pop bx
 	001f20e0 land bx,ax
 	001f20ec mov ax,bx
		001f20f8: FALL_THROUGH

	[001f20f8]
		001f20b4: CONDITIONAL_JUMP
		001f20bc: FALL_THROUGH
 	001f20f8 jz 0x001f2144
		001f2144: CONDITIONAL_JUMP
		001f2100: FALL_THROUGH

	[001f2100]
		001f20f8: FALL_THROUGH
 	001f2100 push ax
 	001f2108 mov mar,0x100014
 	001f2114 memread4 ax
 	001f211c lnot ax
 	001f2124 pop bx
 	001f212c land bx,ax
 	001f2138 mov ax,bx
		001f2144: FALL_THROUGH

	[001f2144]
		001f20f8: CONDITIONAL_JUMP
		001f2100: FALL_THROUGH
 	001f2144 jz 0x001f2190
		001f2190: CONDITIONAL_JUMP
		001f214c: FALL_THROUGH

	[001f214c]
		001f2144: FALL_THROUGH
 	001f214c push ax
 	001f2154 mov mar,0x100018
 	001f2160 memread4 ax
 	001f2168 lnot ax
 	001f2170 pop bx
 	001f2178 land bx,ax
 	001f2184 mov ax,bx
		001f2190: FALL_THROUGH

	[001f2190]
		001f2144: CONDITIONAL_JUMP
		001f214c: FALL_THROUGH
 	001f2190 jz 0x001f21dc
		001f21dc: CONDITIONAL_JUMP
		001f2198: FALL_THROUGH

	[001f2198]
		001f2190: FALL_THROUGH
 	001f2198 push ax
 	001f21a0 mov mar,0x10001c
 	001f21ac memread4 ax
 	001f21b4 lnot ax
 	001f21bc pop bx
 	001f21c4 land bx,ax
 	001f21d0 mov ax,bx
		001f21dc: FALL_THROUGH

	[001f21dc]
		001f2190: CONDITIONAL_JUMP
		001f2198: FALL_THROUGH
 	001f21dc jz 0x001f2228
		001f2228: CONDITIONAL_JUMP
		001f21e4: FALL_THROUGH

	[001f21e4]
		001f21dc: FALL_THROUGH
 	001f21e4 push ax
 	001f21ec mov mar,0x100020
 	001f21f8 memread4 ax
 	001f2200 lnot ax
 	001f2208 pop bx
 	001f2210 land bx,ax
 	001f221c mov ax,bx
		001f2228: FALL_THROUGH

	[001f2228]
		001f21dc: CONDITIONAL_JUMP
		001f21e4: FALL_THROUGH
 	001f2228 jz 0x001f2274
		001f2274: CONDITIONAL_JUMP
		001f2230: FALL_THROUGH

	[001f2230]
		001f2228: FALL_THROUGH
 	001f2230 push ax
 	001f2238 mov mar,0x100024
 	001f2244 memread4 ax
 	001f224c lnot ax
 	001f2254 pop bx
 	001f225c land bx,ax
 	001f2268 mov ax,bx
		001f2274: FALL_THROUGH

	[001f2274]
		001f2228: CONDITIONAL_JUMP
		001f2230: FALL_THROUGH
 	001f2274 jz 0x001f22c0
		001f22c0: CONDITIONAL_JUMP
		001f227c: FALL_THROUGH

	[001f227c]
		001f2274: FALL_THROUGH
 	001f227c push ax
 	001f2284 mov mar,0x100028
 	001f2290 memread4 ax
 	001f2298 lnot ax
 	001f22a0 pop bx
 	001f22a8 land bx,ax
 	001f22b4 mov ax,bx
		001f22c0: FALL_THROUGH

	[001f22c0]
		001f2274: CONDITIONAL_JUMP
		001f227c: FALL_THROUGH
 	001f22c0 jz 0x001f230c
		001f230c: CONDITIONAL_JUMP
		001f22c8: FALL_THROUGH

	[001f22c8]
		001f22c0: FALL_THROUGH
 	001f22c8 push ax
 	001f22d0 mov mar,0x10002c
 	001f22dc memread4 ax
 	001f22e4 lnot ax
 	001f22ec pop bx
 	001f22f4 land bx,ax
 	001f2300 mov ax,bx
		001f230c: FALL_THROUGH

	[001f230c]
		001f22c0: CONDITIONAL_JUMP
		001f22c8: FALL_THROUGH
 	001f230c jz 0x001f235c
		001f235c: CONDITIONAL_JUMP
		001f2314: FALL_THROUGH

	[001f2314]
		001f230c: FALL_THROUGH
 	001f2314 mov ax,0x1
 	001f2320 mov mar,0x100014
 	001f232c memwrite4 ax
 	001f2334 mov ax,0x3
 	001f2340 mov mar,0x1000c0
 	001f234c memwrite4 ax
 	001f2354 jmp 0x001f380c
		001f380c: UNCONDITIONAL_JUMP

	[001f235c]
		001f230c: CONDITIONAL_JUMP
 	001f235c sourceline 0x2ba0
 	001f2364 mov mar,0x100000
 	001f2370 memread4 ax
 	001f2378 jz 0x001f23bc
		001f23bc: CONDITIONAL_JUMP
		001f2380: FALL_THROUGH

	[001f2380]
		001f235c: FALL_THROUGH
 	001f2380 push ax
 	001f2388 mov mar,0x100004
 	001f2394 memread4 ax
 	001f239c pop bx
 	001f23a4 land bx,ax
 	001f23b0 mov ax,bx
		001f23bc: FALL_THROUGH

	[001f23bc]
		001f235c: CONDITIONAL_JUMP
		001f2380: FALL_THROUGH
 	001f23bc jz 0x001f2400
		001f2400: CONDITIONAL_JUMP
		001f23c4: FALL_THROUGH

	[001f23c4]
		001f23bc: FALL_THROUGH
 	001f23c4 push ax
 	001f23cc mov mar,0x100008
 	001f23d8 memread4 ax
 	001f23e0 pop bx
 	001f23e8 land bx,ax
 	001f23f4 mov ax,bx
		001f2400: FALL_THROUGH

	[001f2400]
		001f23bc: CONDITIONAL_JUMP
		001f23c4: FALL_THROUGH
 	001f2400 jz 0x001f2444
		001f2444: CONDITIONAL_JUMP
		001f2408: FALL_THROUGH

	[001f2408]
		001f2400: FALL_THROUGH
 	001f2408 push ax
 	001f2410 mov mar,0x10000c
 	001f241c memread4 ax
 	001f2424 pop bx
 	001f242c land bx,ax
 	001f2438 mov ax,bx
		001f2444: FALL_THROUGH

	[001f2444]
		001f2400: CONDITIONAL_JUMP
		001f2408: FALL_THROUGH
 	001f2444 jz 0x001f2488
		001f2488: CONDITIONAL_JUMP
		001f244c: FALL_THROUGH

	[001f244c]
		001f2444: FALL_THROUGH
 	001f244c push ax
 	001f2454 mov mar,0x100010
 	001f2460 memread4 ax
 	001f2468 pop bx
 	001f2470 land bx,ax
 	001f247c mov ax,bx
		001f2488: FALL_THROUGH

	[001f2488]
		001f2444: CONDITIONAL_JUMP
		001f244c: FALL_THROUGH
 	001f2488 jz 0x001f24cc
		001f24cc: CONDITIONAL_JUMP
		001f2490: FALL_THROUGH

	[001f2490]
		001f2488: FALL_THROUGH
 	001f2490 push ax
 	001f2498 mov mar,0x100014
 	001f24a4 memread4 ax
 	001f24ac pop bx
 	001f24b4 land bx,ax
 	001f24c0 mov ax,bx
		001f24cc: FALL_THROUGH

	[001f24cc]
		001f2488: CONDITIONAL_JUMP
		001f2490: FALL_THROUGH
 	001f24cc jz 0x001f2518
		001f2518: CONDITIONAL_JUMP
		001f24d4: FALL_THROUGH

	[001f24d4]
		001f24cc: FALL_THROUGH
 	001f24d4 push ax
 	001f24dc mov mar,0x100018
 	001f24e8 memread4 ax
 	001f24f0 lnot ax
 	001f24f8 pop bx
 	001f2500 land bx,ax
 	001f250c mov ax,bx
		001f2518: FALL_THROUGH

	[001f2518]
		001f24cc: CONDITIONAL_JUMP
		001f24d4: FALL_THROUGH
 	001f2518 jz 0x001f2564
		001f2564: CONDITIONAL_JUMP
		001f2520: FALL_THROUGH

	[001f2520]
		001f2518: FALL_THROUGH
 	001f2520 push ax
 	001f2528 mov mar,0x10001c
 	001f2534 memread4 ax
 	001f253c lnot ax
 	001f2544 pop bx
 	001f254c land bx,ax
 	001f2558 mov ax,bx
		001f2564: FALL_THROUGH

	[001f2564]
		001f2518: CONDITIONAL_JUMP
		001f2520: FALL_THROUGH
 	001f2564 jz 0x001f25b0
		001f25b0: CONDITIONAL_JUMP
		001f256c: FALL_THROUGH

	[001f256c]
		001f2564: FALL_THROUGH
 	001f256c push ax
 	001f2574 mov mar,0x100020
 	001f2580 memread4 ax
 	001f2588 lnot ax
 	001f2590 pop bx
 	001f2598 land bx,ax
 	001f25a4 mov ax,bx
		001f25b0: FALL_THROUGH

	[001f25b0]
		001f2564: CONDITIONAL_JUMP
		001f256c: FALL_THROUGH
 	001f25b0 jz 0x001f25fc
		001f25fc: CONDITIONAL_JUMP
		001f25b8: FALL_THROUGH

	[001f25b8]
		001f25b0: FALL_THROUGH
 	001f25b8 push ax
 	001f25c0 mov mar,0x100024
 	001f25cc memread4 ax
 	001f25d4 lnot ax
 	001f25dc pop bx
 	001f25e4 land bx,ax
 	001f25f0 mov ax,bx
		001f25fc: FALL_THROUGH

	[001f25fc]
		001f25b0: CONDITIONAL_JUMP
		001f25b8: FALL_THROUGH
 	001f25fc jz 0x001f2648
		001f2648: CONDITIONAL_JUMP
		001f2604: FALL_THROUGH

	[001f2604]
		001f25fc: FALL_THROUGH
 	001f2604 push ax
 	001f260c mov mar,0x100028
 	001f2618 memread4 ax
 	001f2620 lnot ax
 	001f2628 pop bx
 	001f2630 land bx,ax
 	001f263c mov ax,bx
		001f2648: FALL_THROUGH

	[001f2648]
		001f25fc: CONDITIONAL_JUMP
		001f2604: FALL_THROUGH
 	001f2648 jz 0x001f2694
		001f2694: CONDITIONAL_JUMP
		001f2650: FALL_THROUGH

	[001f2650]
		001f2648: FALL_THROUGH
 	001f2650 push ax
 	001f2658 mov mar,0x10002c
 	001f2664 memread4 ax
 	001f266c lnot ax
 	001f2674 pop bx
 	001f267c land bx,ax
 	001f2688 mov ax,bx
		001f2694: FALL_THROUGH

	[001f2694]
		001f2648: CONDITIONAL_JUMP
		001f2650: FALL_THROUGH
 	001f2694 jz 0x001f26e4
		001f26e4: CONDITIONAL_JUMP
		001f269c: FALL_THROUGH

	[001f269c]
		001f2694: FALL_THROUGH
 	001f269c mov ax,0x1
 	001f26a8 mov mar,0x100018
 	001f26b4 memwrite4 ax
 	001f26bc mov ax,0x3
 	001f26c8 mov mar,0x1000c4
 	001f26d4 memwrite4 ax
 	001f26dc jmp 0x001f380c
		001f380c: UNCONDITIONAL_JUMP

	[001f26e4]
		001f2694: CONDITIONAL_JUMP
 	001f26e4 sourceline 0x2ba5
 	001f26ec mov mar,0x100000
 	001f26f8 memread4 ax
 	001f2700 jz 0x001f2744
		001f2744: CONDITIONAL_JUMP
		001f2708: FALL_THROUGH

	[001f2708]
		001f26e4: FALL_THROUGH
 	001f2708 push ax
 	001f2710 mov mar,0x100004
 	001f271c memread4 ax
 	001f2724 pop bx
 	001f272c land bx,ax
 	001f2738 mov ax,bx
		001f2744: FALL_THROUGH

	[001f2744]
		001f26e4: CONDITIONAL_JUMP
		001f2708: FALL_THROUGH
 	001f2744 jz 0x001f2788
		001f2788: CONDITIONAL_JUMP
		001f274c: FALL_THROUGH

	[001f274c]
		001f2744: FALL_THROUGH
 	001f274c push ax
 	001f2754 mov mar,0x100008
 	001f2760 memread4 ax
 	001f2768 pop bx
 	001f2770 land bx,ax
 	001f277c mov ax,bx
		001f2788: FALL_THROUGH

	[001f2788]
		001f2744: CONDITIONAL_JUMP
		001f274c: FALL_THROUGH
 	001f2788 jz 0x001f27cc
		001f27cc: CONDITIONAL_JUMP
		001f2790: FALL_THROUGH

	[001f2790]
		001f2788: FALL_THROUGH
 	001f2790 push ax
 	001f2798 mov mar,0x10000c
 	001f27a4 memread4 ax
 	001f27ac pop bx
 	001f27b4 land bx,ax
 	001f27c0 mov ax,bx
		001f27cc: FALL_THROUGH

	[001f27cc]
		001f2788: CONDITIONAL_JUMP
		001f2790: FALL_THROUGH
 	001f27cc jz 0x001f2810
		001f2810: CONDITIONAL_JUMP
		001f27d4: FALL_THROUGH

	[001f27d4]
		001f27cc: FALL_THROUGH
 	001f27d4 push ax
 	001f27dc mov mar,0x100010
 	001f27e8 memread4 ax
 	001f27f0 pop bx
 	001f27f8 land bx,ax
 	001f2804 mov ax,bx
		001f2810: FALL_THROUGH

	[001f2810]
		001f27cc: CONDITIONAL_JUMP
		001f27d4: FALL_THROUGH
 	001f2810 jz 0x001f2854
		001f2854: CONDITIONAL_JUMP
		001f2818: FALL_THROUGH

	[001f2818]
		001f2810: FALL_THROUGH
 	001f2818 push ax
 	001f2820 mov mar,0x100014
 	001f282c memread4 ax
 	001f2834 pop bx
 	001f283c land bx,ax
 	001f2848 mov ax,bx
		001f2854: FALL_THROUGH

	[001f2854]
		001f2810: CONDITIONAL_JUMP
		001f2818: FALL_THROUGH
 	001f2854 jz 0x001f2898
		001f2898: CONDITIONAL_JUMP
		001f285c: FALL_THROUGH

	[001f285c]
		001f2854: FALL_THROUGH
 	001f285c push ax
 	001f2864 mov mar,0x100018
 	001f2870 memread4 ax
 	001f2878 pop bx
 	001f2880 land bx,ax
 	001f288c mov ax,bx
		001f2898: FALL_THROUGH

	[001f2898]
		001f2854: CONDITIONAL_JUMP
		001f285c: FALL_THROUGH
 	001f2898 jz 0x001f28e4
		001f28e4: CONDITIONAL_JUMP
		001f28a0: FALL_THROUGH

	[001f28a0]
		001f2898: FALL_THROUGH
 	001f28a0 push ax
 	001f28a8 mov mar,0x10001c
 	001f28b4 memread4 ax
 	001f28bc lnot ax
 	001f28c4 pop bx
 	001f28cc land bx,ax
 	001f28d8 mov ax,bx
		001f28e4: FALL_THROUGH

	[001f28e4]
		001f2898: CONDITIONAL_JUMP
		001f28a0: FALL_THROUGH
 	001f28e4 jz 0x001f2930
		001f2930: CONDITIONAL_JUMP
		001f28ec: FALL_THROUGH

	[001f28ec]
		001f28e4: FALL_THROUGH
 	001f28ec push ax
 	001f28f4 mov mar,0x100020
 	001f2900 memread4 ax
 	001f2908 lnot ax
 	001f2910 pop bx
 	001f2918 land bx,ax
 	001f2924 mov ax,bx
		001f2930: FALL_THROUGH

	[001f2930]
		001f28e4: CONDITIONAL_JUMP
		001f28ec: FALL_THROUGH
 	001f2930 jz 0x001f297c
		001f297c: CONDITIONAL_JUMP
		001f2938: FALL_THROUGH

	[001f2938]
		001f2930: FALL_THROUGH
 	001f2938 push ax
 	001f2940 mov mar,0x100024
 	001f294c memread4 ax
 	001f2954 lnot ax
 	001f295c pop bx
 	001f2964 land bx,ax
 	001f2970 mov ax,bx
		001f297c: FALL_THROUGH

	[001f297c]
		001f2930: CONDITIONAL_JUMP
		001f2938: FALL_THROUGH
 	001f297c jz 0x001f29c8
		001f29c8: CONDITIONAL_JUMP
		001f2984: FALL_THROUGH

	[001f2984]
		001f297c: FALL_THROUGH
 	001f2984 push ax
 	001f298c mov mar,0x100028
 	001f2998 memread4 ax
 	001f29a0 lnot ax
 	001f29a8 pop bx
 	001f29b0 land bx,ax
 	001f29bc mov ax,bx
		001f29c8: FALL_THROUGH

	[001f29c8]
		001f297c: CONDITIONAL_JUMP
		001f2984: FALL_THROUGH
 	001f29c8 jz 0x001f2a14
		001f2a14: CONDITIONAL_JUMP
		001f29d0: FALL_THROUGH

	[001f29d0]
		001f29c8: FALL_THROUGH
 	001f29d0 push ax
 	001f29d8 mov mar,0x10002c
 	001f29e4 memread4 ax
 	001f29ec lnot ax
 	001f29f4 pop bx
 	001f29fc land bx,ax
 	001f2a08 mov ax,bx
		001f2a14: FALL_THROUGH

	[001f2a14]
		001f29c8: CONDITIONAL_JUMP
		001f29d0: FALL_THROUGH
 	001f2a14 jz 0x001f2a64
		001f2a64: CONDITIONAL_JUMP
		001f2a1c: FALL_THROUGH

	[001f2a1c]
		001f2a14: FALL_THROUGH
 	001f2a1c mov ax,0x1
 	001f2a28 mov mar,0x10001c
 	001f2a34 memwrite4 ax
 	001f2a3c mov ax,0x3
 	001f2a48 mov mar,0x1000c8
 	001f2a54 memwrite4 ax
 	001f2a5c jmp 0x001f380c
		001f380c: UNCONDITIONAL_JUMP

	[001f2a64]
		001f2a14: CONDITIONAL_JUMP
 	001f2a64 sourceline 0x2baa
 	001f2a6c mov mar,0x100000
 	001f2a78 memread4 ax
 	001f2a80 jz 0x001f2ac4
		001f2ac4: CONDITIONAL_JUMP
		001f2a88: FALL_THROUGH

	[001f2a88]
		001f2a64: FALL_THROUGH
 	001f2a88 push ax
 	001f2a90 mov mar,0x100004
 	001f2a9c memread4 ax
 	001f2aa4 pop bx
 	001f2aac land bx,ax
 	001f2ab8 mov ax,bx
		001f2ac4: FALL_THROUGH

	[001f2ac4]
		001f2a64: CONDITIONAL_JUMP
		001f2a88: FALL_THROUGH
 	001f2ac4 jz 0x001f2b08
		001f2b08: CONDITIONAL_JUMP
		001f2acc: FALL_THROUGH

	[001f2acc]
		001f2ac4: FALL_THROUGH
 	001f2acc push ax
 	001f2ad4 mov mar,0x100008
 	001f2ae0 memread4 ax
 	001f2ae8 pop bx
 	001f2af0 land bx,ax
 	001f2afc mov ax,bx
		001f2b08: FALL_THROUGH

	[001f2b08]
		001f2ac4: CONDITIONAL_JUMP
		001f2acc: FALL_THROUGH
 	001f2b08 jz 0x001f2b4c
		001f2b4c: CONDITIONAL_JUMP
		001f2b10: FALL_THROUGH

	[001f2b10]
		001f2b08: FALL_THROUGH
 	001f2b10 push ax
 	001f2b18 mov mar,0x10000c
 	001f2b24 memread4 ax
 	001f2b2c pop bx
 	001f2b34 land bx,ax
 	001f2b40 mov ax,bx
		001f2b4c: FALL_THROUGH

	[001f2b4c]
		001f2b08: CONDITIONAL_JUMP
		001f2b10: FALL_THROUGH
 	001f2b4c jz 0x001f2b90
		001f2b90: CONDITIONAL_JUMP
		001f2b54: FALL_THROUGH

	[001f2b54]
		001f2b4c: FALL_THROUGH
 	001f2b54 push ax
 	001f2b5c mov mar,0x100010
 	001f2b68 memread4 ax
 	001f2b70 pop bx
 	001f2b78 land bx,ax
 	001f2b84 mov ax,bx
		001f2b90: FALL_THROUGH

	[001f2b90]
		001f2b4c: CONDITIONAL_JUMP
		001f2b54: FALL_THROUGH
 	001f2b90 jz 0x001f2bd4
		001f2bd4: CONDITIONAL_JUMP
		001f2b98: FALL_THROUGH

	[001f2b98]
		001f2b90: FALL_THROUGH
 	001f2b98 push ax
 	001f2ba0 mov mar,0x100014
 	001f2bac memread4 ax
 	001f2bb4 pop bx
 	001f2bbc land bx,ax
 	001f2bc8 mov ax,bx
		001f2bd4: FALL_THROUGH

	[001f2bd4]
		001f2b90: CONDITIONAL_JUMP
		001f2b98: FALL_THROUGH
 	001f2bd4 jz 0x001f2c18
		001f2c18: CONDITIONAL_JUMP
		001f2bdc: FALL_THROUGH

	[001f2bdc]
		001f2bd4: FALL_THROUGH
 	001f2bdc push ax
 	001f2be4 mov mar,0x100018
 	001f2bf0 memread4 ax
 	001f2bf8 pop bx
 	001f2c00 land bx,ax
 	001f2c0c mov ax,bx
		001f2c18: FALL_THROUGH

	[001f2c18]
		001f2bd4: CONDITIONAL_JUMP
		001f2bdc: FALL_THROUGH
 	001f2c18 jz 0x001f2c5c
		001f2c5c: CONDITIONAL_JUMP
		001f2c20: FALL_THROUGH

	[001f2c20]
		001f2c18: FALL_THROUGH
 	001f2c20 push ax
 	001f2c28 mov mar,0x10001c
 	001f2c34 memread4 ax
 	001f2c3c pop bx
 	001f2c44 land bx,ax
 	001f2c50 mov ax,bx
		001f2c5c: FALL_THROUGH

	[001f2c5c]
		001f2c18: CONDITIONAL_JUMP
		001f2c20: FALL_THROUGH
 	001f2c5c jz 0x001f2ca8
		001f2ca8: CONDITIONAL_JUMP
		001f2c64: FALL_THROUGH

	[001f2c64]
		001f2c5c: FALL_THROUGH
 	001f2c64 push ax
 	001f2c6c mov mar,0x100020
 	001f2c78 memread4 ax
 	001f2c80 lnot ax
 	001f2c88 pop bx
 	001f2c90 land bx,ax
 	001f2c9c mov ax,bx
		001f2ca8: FALL_THROUGH

	[001f2ca8]
		001f2c5c: CONDITIONAL_JUMP
		001f2c64: FALL_THROUGH
 	001f2ca8 jz 0x001f2cf4
		001f2cf4: CONDITIONAL_JUMP
		001f2cb0: FALL_THROUGH

	[001f2cb0]
		001f2ca8: FALL_THROUGH
 	001f2cb0 push ax
 	001f2cb8 mov mar,0x100024
 	001f2cc4 memread4 ax
 	001f2ccc lnot ax
 	001f2cd4 pop bx
 	001f2cdc land bx,ax
 	001f2ce8 mov ax,bx
		001f2cf4: FALL_THROUGH

	[001f2cf4]
		001f2ca8: CONDITIONAL_JUMP
		001f2cb0: FALL_THROUGH
 	001f2cf4 jz 0x001f2d40
		001f2d40: CONDITIONAL_JUMP
		001f2cfc: FALL_THROUGH

	[001f2cfc]
		001f2cf4: FALL_THROUGH
 	001f2cfc push ax
 	001f2d04 mov mar,0x100028
 	001f2d10 memread4 ax
 	001f2d18 lnot ax
 	001f2d20 pop bx
 	001f2d28 land bx,ax
 	001f2d34 mov ax,bx
		001f2d40: FALL_THROUGH

	[001f2d40]
		001f2cf4: CONDITIONAL_JUMP
		001f2cfc: FALL_THROUGH
 	001f2d40 jz 0x001f2d8c
		001f2d8c: CONDITIONAL_JUMP
		001f2d48: FALL_THROUGH

	[001f2d48]
		001f2d40: FALL_THROUGH
 	001f2d48 push ax
 	001f2d50 mov mar,0x10002c
 	001f2d5c memread4 ax
 	001f2d64 lnot ax
 	001f2d6c pop bx
 	001f2d74 land bx,ax
 	001f2d80 mov ax,bx
		001f2d8c: FALL_THROUGH

	[001f2d8c]
		001f2d40: CONDITIONAL_JUMP
		001f2d48: FALL_THROUGH
 	001f2d8c jz 0x001f2ddc
		001f2ddc: CONDITIONAL_JUMP
		001f2d94: FALL_THROUGH

	[001f2d94]
		001f2d8c: FALL_THROUGH
 	001f2d94 mov ax,0x1
 	001f2da0 mov mar,0x100020
 	001f2dac memwrite4 ax
 	001f2db4 mov ax,0x3
 	001f2dc0 mov mar,0x1000cc
 	001f2dcc memwrite4 ax
 	001f2dd4 jmp 0x001f380c
		001f380c: UNCONDITIONAL_JUMP

	[001f2ddc]
		001f2d8c: CONDITIONAL_JUMP
 	001f2ddc sourceline 0x2baf
 	001f2de4 mov mar,0x100000
 	001f2df0 memread4 ax
 	001f2df8 jz 0x001f2e3c
		001f2e3c: CONDITIONAL_JUMP
		001f2e00: FALL_THROUGH

	[001f2e00]
		001f2ddc: FALL_THROUGH
 	001f2e00 push ax
 	001f2e08 mov mar,0x100004
 	001f2e14 memread4 ax
 	001f2e1c pop bx
 	001f2e24 land bx,ax
 	001f2e30 mov ax,bx
		001f2e3c: FALL_THROUGH

	[001f2e3c]
		001f2ddc: CONDITIONAL_JUMP
		001f2e00: FALL_THROUGH
 	001f2e3c jz 0x001f2e80
		001f2e80: CONDITIONAL_JUMP
		001f2e44: FALL_THROUGH

	[001f2e44]
		001f2e3c: FALL_THROUGH
 	001f2e44 push ax
 	001f2e4c mov mar,0x100008
 	001f2e58 memread4 ax
 	001f2e60 pop bx
 	001f2e68 land bx,ax
 	001f2e74 mov ax,bx
		001f2e80: FALL_THROUGH

	[001f2e80]
		001f2e3c: CONDITIONAL_JUMP
		001f2e44: FALL_THROUGH
 	001f2e80 jz 0x001f2ec4
		001f2ec4: CONDITIONAL_JUMP
		001f2e88: FALL_THROUGH

	[001f2e88]
		001f2e80: FALL_THROUGH
 	001f2e88 push ax
 	001f2e90 mov mar,0x10000c
 	001f2e9c memread4 ax
 	001f2ea4 pop bx
 	001f2eac land bx,ax
 	001f2eb8 mov ax,bx
		001f2ec4: FALL_THROUGH

	[001f2ec4]
		001f2e80: CONDITIONAL_JUMP
		001f2e88: FALL_THROUGH
 	001f2ec4 jz 0x001f2f08
		001f2f08: CONDITIONAL_JUMP
		001f2ecc: FALL_THROUGH

	[001f2ecc]
		001f2ec4: FALL_THROUGH
 	001f2ecc push ax
 	001f2ed4 mov mar,0x100010
 	001f2ee0 memread4 ax
 	001f2ee8 pop bx
 	001f2ef0 land bx,ax
 	001f2efc mov ax,bx
		001f2f08: FALL_THROUGH

	[001f2f08]
		001f2ec4: CONDITIONAL_JUMP
		001f2ecc: FALL_THROUGH
 	001f2f08 jz 0x001f2f4c
		001f2f4c: CONDITIONAL_JUMP
		001f2f10: FALL_THROUGH

	[001f2f10]
		001f2f08: FALL_THROUGH
 	001f2f10 push ax
 	001f2f18 mov mar,0x100014
 	001f2f24 memread4 ax
 	001f2f2c pop bx
 	001f2f34 land bx,ax
 	001f2f40 mov ax,bx
		001f2f4c: FALL_THROUGH

	[001f2f4c]
		001f2f08: CONDITIONAL_JUMP
		001f2f10: FALL_THROUGH
 	001f2f4c jz 0x001f2f90
		001f2f90: CONDITIONAL_JUMP
		001f2f54: FALL_THROUGH

	[001f2f54]
		001f2f4c: FALL_THROUGH
 	001f2f54 push ax
 	001f2f5c mov mar,0x100018
 	001f2f68 memread4 ax
 	001f2f70 pop bx
 	001f2f78 land bx,ax
 	001f2f84 mov ax,bx
		001f2f90: FALL_THROUGH

	[001f2f90]
		001f2f4c: CONDITIONAL_JUMP
		001f2f54: FALL_THROUGH
 	001f2f90 jz 0x001f2fd4
		001f2fd4: CONDITIONAL_JUMP
		001f2f98: FALL_THROUGH

	[001f2f98]
		001f2f90: FALL_THROUGH
 	001f2f98 push ax
 	001f2fa0 mov mar,0x10001c
 	001f2fac memread4 ax
 	001f2fb4 pop bx
 	001f2fbc land bx,ax
 	001f2fc8 mov ax,bx
		001f2fd4: FALL_THROUGH

	[001f2fd4]
		001f2f90: CONDITIONAL_JUMP
		001f2f98: FALL_THROUGH
 	001f2fd4 jz 0x001f3018
		001f3018: CONDITIONAL_JUMP
		001f2fdc: FALL_THROUGH

	[001f2fdc]
		001f2fd4: FALL_THROUGH
 	001f2fdc push ax
 	001f2fe4 mov mar,0x100020
 	001f2ff0 memread4 ax
 	001f2ff8 pop bx
 	001f3000 land bx,ax
 	001f300c mov ax,bx
		001f3018: FALL_THROUGH

	[001f3018]
		001f2fd4: CONDITIONAL_JUMP
		001f2fdc: FALL_THROUGH
 	001f3018 jz 0x001f3064
		001f3064: CONDITIONAL_JUMP
		001f3020: FALL_THROUGH

	[001f3020]
		001f3018: FALL_THROUGH
 	001f3020 push ax
 	001f3028 mov mar,0x100024
 	001f3034 memread4 ax
 	001f303c lnot ax
 	001f3044 pop bx
 	001f304c land bx,ax
 	001f3058 mov ax,bx
		001f3064: FALL_THROUGH

	[001f3064]
		001f3018: CONDITIONAL_JUMP
		001f3020: FALL_THROUGH
 	001f3064 jz 0x001f30b0
		001f30b0: CONDITIONAL_JUMP
		001f306c: FALL_THROUGH

	[001f306c]
		001f3064: FALL_THROUGH
 	001f306c push ax
 	001f3074 mov mar,0x100028
 	001f3080 memread4 ax
 	001f3088 lnot ax
 	001f3090 pop bx
 	001f3098 land bx,ax
 	001f30a4 mov ax,bx
		001f30b0: FALL_THROUGH

	[001f30b0]
		001f3064: CONDITIONAL_JUMP
		001f306c: FALL_THROUGH
 	001f30b0 jz 0x001f30fc
		001f30fc: CONDITIONAL_JUMP
		001f30b8: FALL_THROUGH

	[001f30b8]
		001f30b0: FALL_THROUGH
 	001f30b8 push ax
 	001f30c0 mov mar,0x10002c
 	001f30cc memread4 ax
 	001f30d4 lnot ax
 	001f30dc pop bx
 	001f30e4 land bx,ax
 	001f30f0 mov ax,bx
		001f30fc: FALL_THROUGH

	[001f30fc]
		001f30b0: CONDITIONAL_JUMP
		001f30b8: FALL_THROUGH
 	001f30fc jz 0x001f314c
		001f314c: CONDITIONAL_JUMP
		001f3104: FALL_THROUGH

	[001f3104]
		001f30fc: FALL_THROUGH
 	001f3104 mov ax,0x1
 	001f3110 mov mar,0x100024
 	001f311c memwrite4 ax
 	001f3124 mov ax,0x3
 	001f3130 mov mar,0x1000d0
 	001f313c memwrite4 ax
 	001f3144 jmp 0x001f380c
		001f380c: UNCONDITIONAL_JUMP

	[001f314c]
		001f30fc: CONDITIONAL_JUMP
 	001f314c sourceline 0x2bb4
 	001f3154 mov mar,0x100000
 	001f3160 memread4 ax
 	001f3168 jz 0x001f31ac
		001f31ac: CONDITIONAL_JUMP
		001f3170: FALL_THROUGH

	[001f3170]
		001f314c: FALL_THROUGH
 	001f3170 push ax
 	001f3178 mov mar,0x100004
 	001f3184 memread4 ax
 	001f318c pop bx
 	001f3194 land bx,ax
 	001f31a0 mov ax,bx
		001f31ac: FALL_THROUGH

	[001f31ac]
		001f314c: CONDITIONAL_JUMP
		001f3170: FALL_THROUGH
 	001f31ac jz 0x001f31f0
		001f31f0: CONDITIONAL_JUMP
		001f31b4: FALL_THROUGH

	[001f31b4]
		001f31ac: FALL_THROUGH
 	001f31b4 push ax
 	001f31bc mov mar,0x100008
 	001f31c8 memread4 ax
 	001f31d0 pop bx
 	001f31d8 land bx,ax
 	001f31e4 mov ax,bx
		001f31f0: FALL_THROUGH

	[001f31f0]
		001f31ac: CONDITIONAL_JUMP
		001f31b4: FALL_THROUGH
 	001f31f0 jz 0x001f3234
		001f3234: CONDITIONAL_JUMP
		001f31f8: FALL_THROUGH

	[001f31f8]
		001f31f0: FALL_THROUGH
 	001f31f8 push ax
 	001f3200 mov mar,0x10000c
 	001f320c memread4 ax
 	001f3214 pop bx
 	001f321c land bx,ax
 	001f3228 mov ax,bx
		001f3234: FALL_THROUGH

	[001f3234]
		001f31f0: CONDITIONAL_JUMP
		001f31f8: FALL_THROUGH
 	001f3234 jz 0x001f3278
		001f3278: CONDITIONAL_JUMP
		001f323c: FALL_THROUGH

	[001f323c]
		001f3234: FALL_THROUGH
 	001f323c push ax
 	001f3244 mov mar,0x100010
 	001f3250 memread4 ax
 	001f3258 pop bx
 	001f3260 land bx,ax
 	001f326c mov ax,bx
		001f3278: FALL_THROUGH

	[001f3278]
		001f3234: CONDITIONAL_JUMP
		001f323c: FALL_THROUGH
 	001f3278 jz 0x001f32bc
		001f32bc: CONDITIONAL_JUMP
		001f3280: FALL_THROUGH

	[001f3280]
		001f3278: FALL_THROUGH
 	001f3280 push ax
 	001f3288 mov mar,0x100014
 	001f3294 memread4 ax
 	001f329c pop bx
 	001f32a4 land bx,ax
 	001f32b0 mov ax,bx
		001f32bc: FALL_THROUGH

	[001f32bc]
		001f3278: CONDITIONAL_JUMP
		001f3280: FALL_THROUGH
 	001f32bc jz 0x001f3300
		001f3300: CONDITIONAL_JUMP
		001f32c4: FALL_THROUGH

	[001f32c4]
		001f32bc: FALL_THROUGH
 	001f32c4 push ax
 	001f32cc mov mar,0x100018
 	001f32d8 memread4 ax
 	001f32e0 pop bx
 	001f32e8 land bx,ax
 	001f32f4 mov ax,bx
		001f3300: FALL_THROUGH

	[001f3300]
		001f32bc: CONDITIONAL_JUMP
		001f32c4: FALL_THROUGH
 	001f3300 jz 0x001f3344
		001f3344: CONDITIONAL_JUMP
		001f3308: FALL_THROUGH

	[001f3308]
		001f3300: FALL_THROUGH
 	001f3308 push ax
 	001f3310 mov mar,0x10001c
 	001f331c memread4 ax
 	001f3324 pop bx
 	001f332c land bx,ax
 	001f3338 mov ax,bx
		001f3344: FALL_THROUGH

	[001f3344]
		001f3300: CONDITIONAL_JUMP
		001f3308: FALL_THROUGH
 	001f3344 jz 0x001f3388
		001f3388: CONDITIONAL_JUMP
		001f334c: FALL_THROUGH

	[001f334c]
		001f3344: FALL_THROUGH
 	001f334c push ax
 	001f3354 mov mar,0x100020
 	001f3360 memread4 ax
 	001f3368 pop bx
 	001f3370 land bx,ax
 	001f337c mov ax,bx
		001f3388: FALL_THROUGH

	[001f3388]
		001f3344: CONDITIONAL_JUMP
		001f334c: FALL_THROUGH
 	001f3388 jz 0x001f33cc
		001f33cc: CONDITIONAL_JUMP
		001f3390: FALL_THROUGH

	[001f3390]
		001f3388: FALL_THROUGH
 	001f3390 push ax
 	001f3398 mov mar,0x100024
 	001f33a4 memread4 ax
 	001f33ac pop bx
 	001f33b4 land bx,ax
 	001f33c0 mov ax,bx
		001f33cc: FALL_THROUGH

	[001f33cc]
		001f3388: CONDITIONAL_JUMP
		001f3390: FALL_THROUGH
 	001f33cc jz 0x001f3418
		001f3418: CONDITIONAL_JUMP
		001f33d4: FALL_THROUGH

	[001f33d4]
		001f33cc: FALL_THROUGH
 	001f33d4 push ax
 	001f33dc mov mar,0x100028
 	001f33e8 memread4 ax
 	001f33f0 lnot ax
 	001f33f8 pop bx
 	001f3400 land bx,ax
 	001f340c mov ax,bx
		001f3418: FALL_THROUGH

	[001f3418]
		001f33cc: CONDITIONAL_JUMP
		001f33d4: FALL_THROUGH
 	001f3418 jz 0x001f3464
		001f3464: CONDITIONAL_JUMP
		001f3420: FALL_THROUGH

	[001f3420]
		001f3418: FALL_THROUGH
 	001f3420 push ax
 	001f3428 mov mar,0x10002c
 	001f3434 memread4 ax
 	001f343c lnot ax
 	001f3444 pop bx
 	001f344c land bx,ax
 	001f3458 mov ax,bx
		001f3464: FALL_THROUGH

	[001f3464]
		001f3418: CONDITIONAL_JUMP
		001f3420: FALL_THROUGH
 	001f3464 jz 0x001f34b4
		001f34b4: CONDITIONAL_JUMP
		001f346c: FALL_THROUGH

	[001f346c]
		001f3464: FALL_THROUGH
 	001f346c mov ax,0x1
 	001f3478 mov mar,0x100028
 	001f3484 memwrite4 ax
 	001f348c mov ax,0x3
 	001f3498 mov mar,0x1000d4
 	001f34a4 memwrite4 ax
 	001f34ac jmp 0x001f380c
		001f380c: UNCONDITIONAL_JUMP

	[001f34b4]
		001f3464: CONDITIONAL_JUMP
 	001f34b4 sourceline 0x2bb9
 	001f34bc mov mar,0x100000
 	001f34c8 memread4 ax
 	001f34d0 jz 0x001f3514
		001f3514: CONDITIONAL_JUMP
		001f34d8: FALL_THROUGH

	[001f34d8]
		001f34b4: FALL_THROUGH
 	001f34d8 push ax
 	001f34e0 mov mar,0x100004
 	001f34ec memread4 ax
 	001f34f4 pop bx
 	001f34fc land bx,ax
 	001f3508 mov ax,bx
		001f3514: FALL_THROUGH

	[001f3514]
		001f34b4: CONDITIONAL_JUMP
		001f34d8: FALL_THROUGH
 	001f3514 jz 0x001f3558
		001f3558: CONDITIONAL_JUMP
		001f351c: FALL_THROUGH

	[001f351c]
		001f3514: FALL_THROUGH
 	001f351c push ax
 	001f3524 mov mar,0x100008
 	001f3530 memread4 ax
 	001f3538 pop bx
 	001f3540 land bx,ax
 	001f354c mov ax,bx
		001f3558: FALL_THROUGH

	[001f3558]
		001f3514: CONDITIONAL_JUMP
		001f351c: FALL_THROUGH
 	001f3558 jz 0x001f359c
		001f359c: CONDITIONAL_JUMP
		001f3560: FALL_THROUGH

	[001f3560]
		001f3558: FALL_THROUGH
 	001f3560 push ax
 	001f3568 mov mar,0x10000c
 	001f3574 memread4 ax
 	001f357c pop bx
 	001f3584 land bx,ax
 	001f3590 mov ax,bx
		001f359c: FALL_THROUGH

	[001f359c]
		001f3558: CONDITIONAL_JUMP
		001f3560: FALL_THROUGH
 	001f359c jz 0x001f35e0
		001f35e0: CONDITIONAL_JUMP
		001f35a4: FALL_THROUGH

	[001f35a4]
		001f359c: FALL_THROUGH
 	001f35a4 push ax
 	001f35ac mov mar,0x100010
 	001f35b8 memread4 ax
 	001f35c0 pop bx
 	001f35c8 land bx,ax
 	001f35d4 mov ax,bx
		001f35e0: FALL_THROUGH

	[001f35e0]
		001f359c: CONDITIONAL_JUMP
		001f35a4: FALL_THROUGH
 	001f35e0 jz 0x001f3624
		001f3624: CONDITIONAL_JUMP
		001f35e8: FALL_THROUGH

	[001f35e8]
		001f35e0: FALL_THROUGH
 	001f35e8 push ax
 	001f35f0 mov mar,0x100014
 	001f35fc memread4 ax
 	001f3604 pop bx
 	001f360c land bx,ax
 	001f3618 mov ax,bx
		001f3624: FALL_THROUGH

	[001f3624]
		001f35e0: CONDITIONAL_JUMP
		001f35e8: FALL_THROUGH
 	001f3624 jz 0x001f3668
		001f3668: CONDITIONAL_JUMP
		001f362c: FALL_THROUGH

	[001f362c]
		001f3624: FALL_THROUGH
 	001f362c push ax
 	001f3634 mov mar,0x100018
 	001f3640 memread4 ax
 	001f3648 pop bx
 	001f3650 land bx,ax
 	001f365c mov ax,bx
		001f3668: FALL_THROUGH

	[001f3668]
		001f3624: CONDITIONAL_JUMP
		001f362c: FALL_THROUGH
 	001f3668 jz 0x001f36ac
		001f36ac: CONDITIONAL_JUMP
		001f3670: FALL_THROUGH

	[001f3670]
		001f3668: FALL_THROUGH
 	001f3670 push ax
 	001f3678 mov mar,0x10001c
 	001f3684 memread4 ax
 	001f368c pop bx
 	001f3694 land bx,ax
 	001f36a0 mov ax,bx
		001f36ac: FALL_THROUGH

	[001f36ac]
		001f3668: CONDITIONAL_JUMP
		001f3670: FALL_THROUGH
 	001f36ac jz 0x001f36f0
		001f36f0: CONDITIONAL_JUMP
		001f36b4: FALL_THROUGH

	[001f36b4]
		001f36ac: FALL_THROUGH
 	001f36b4 push ax
 	001f36bc mov mar,0x100020
 	001f36c8 memread4 ax
 	001f36d0 pop bx
 	001f36d8 land bx,ax
 	001f36e4 mov ax,bx
		001f36f0: FALL_THROUGH

	[001f36f0]
		001f36ac: CONDITIONAL_JUMP
		001f36b4: FALL_THROUGH
 	001f36f0 jz 0x001f3734
		001f3734: CONDITIONAL_JUMP
		001f36f8: FALL_THROUGH

	[001f36f8]
		001f36f0: FALL_THROUGH
 	001f36f8 push ax
 	001f3700 mov mar,0x100024
 	001f370c memread4 ax
 	001f3714 pop bx
 	001f371c land bx,ax
 	001f3728 mov ax,bx
		001f3734: FALL_THROUGH

	[001f3734]
		001f36f0: CONDITIONAL_JUMP
		001f36f8: FALL_THROUGH
 	001f3734 jz 0x001f3778
		001f3778: CONDITIONAL_JUMP
		001f373c: FALL_THROUGH

	[001f373c]
		001f3734: FALL_THROUGH
 	001f373c push ax
 	001f3744 mov mar,0x100028
 	001f3750 memread4 ax
 	001f3758 pop bx
 	001f3760 land bx,ax
 	001f376c mov ax,bx
		001f3778: FALL_THROUGH

	[001f3778]
		001f3734: CONDITIONAL_JUMP
		001f373c: FALL_THROUGH
 	001f3778 jz 0x001f37c4
		001f37c4: CONDITIONAL_JUMP
		001f3780: FALL_THROUGH

	[001f3780]
		001f3778: FALL_THROUGH
 	001f3780 push ax
 	001f3788 mov mar,0x10002c
 	001f3794 memread4 ax
 	001f379c lnot ax
 	001f37a4 pop bx
 	001f37ac land bx,ax
 	001f37b8 mov ax,bx
		001f37c4: FALL_THROUGH

	[001f37c4]
		001f3778: CONDITIONAL_JUMP
		001f3780: FALL_THROUGH
 	001f37c4 jz 0x001f380c
		001f380c: CONDITIONAL_JUMP
		001f37cc: FALL_THROUGH

	[001f37cc]
		001f37c4: FALL_THROUGH
 	001f37cc mov ax,0x1
 	001f37d8 mov mar,0x10002c
 	001f37e4 memwrite4 ax
 	001f37ec mov ax,0x3
 	001f37f8 mov mar,0x1000d8
 	001f3804 memwrite4 ax
		001f380c: FALL_THROUGH

	[001f380c]
		001f10f4: UNCONDITIONAL_JUMP
		001f14a4: UNCONDITIONAL_JUMP
		001f184c: UNCONDITIONAL_JUMP
		001f1bec: UNCONDITIONAL_JUMP
		001f1f84: UNCONDITIONAL_JUMP
		001f2314: UNCONDITIONAL_JUMP
		001f269c: UNCONDITIONAL_JUMP
		001f2a1c: UNCONDITIONAL_JUMP
		001f2d94: UNCONDITIONAL_JUMP
		001f3104: UNCONDITIONAL_JUMP
		001f346c: UNCONDITIONAL_JUMP
		001f37c4: CONDITIONAL_JUMP
		001f37cc: FALL_THROUGH
 	001f380c sourceline 0x2bbd
 	001f3814 jmp 0x001f3970
		001f3970: UNCONDITIONAL_JUMP

	[001f381c]
		001f0d28: CONDITIONAL_JUMP
 	001f381c sourceline 0x2bc0
 	001f3824 mov mar,0x32ef20
 	001f3830 memread4 ax
 	001f3838 lnot ax
 	001f3840 jz 0x001f3970
		001f3970: CONDITIONAL_JUMP
		001f3848: FALL_THROUGH

	[001f3848]
		001f381c: FALL_THROUGH
 	001f3848 sourceline 0x2bc2
 	001f3850 mov ax,0x1
 	001f385c mov bx,ax
 	001f3868 mov mar,0x3cef20
 	001f3874 mov ax,mar
 	001f3880 push op
 	001f3888 mov op,ax
 	001f3890 farpush bx
 	001f3898 setfuncargs 0x1
 	001f38a0 mov ax,0x69ef20
 	001f38ac farcall ax
 	001f38b4 farsubsp 0x1
 	001f38bc pop op
 	001f38c4 sourceline 0x2bc3
 	001f38cc push op
 	001f38d4 mov ax,0x2c77e7
 	001f38e0 farpush ax
 	001f38e8 mov ax,0x138
 	001f38f4 farpush ax
 	001f38fc mov ax,0x92
 	001f3908 farpush ax
 	001f3910 mov ax,0x0
 	001f391c farpush ax
 	001f3924 mov mar,0x3cef20
 	001f3930 mov ax,mar
 	001f393c mov op,ax
 	001f3944 setfuncargs 0x4
 	001f394c mov ax,0x6aef20
 	001f3958 farcall ax
 	001f3960 farsubsp 0x4
 	001f3968 pop op
		001f3970: FALL_THROUGH

	[001f3970]
		001f0bfc: CONDITIONAL_JUMP
		001f380c: UNCONDITIONAL_JUMP
		001f381c: CONDITIONAL_JUMP
		001f3848: FALL_THROUGH
 	001f3970 sourceline 0x2bc7
 	001f3978 stackptr 0xc
 	001f3980 memread4 ax
 	001f3988 push ax
 	001f3990 mov ax,0x2
 	001f399c pop bx
 	001f39a4 cmpeq bx,ax
 	001f39b0 mov ax,bx
 	001f39bc jz 0x001f3b7c
		001f3b7c: CONDITIONAL_JUMP
		001f39c4: FALL_THROUGH

	[001f39c4]
		001f3970: FALL_THROUGH
 	001f39c4 sourceline 0x2bc9
 	001f39cc mov mar,0x626f20
 	001f39d8 mov ax,mar
 	001f39e4 push op
 	001f39ec mov op,ax
 	001f39f4 setfuncargs 0x0
 	001f39fc mov ax,0x606f20
 	001f3a08 farcall ax
 	001f3a10 pop op
 	001f3a18 lnot ax
 	001f3a20 jz 0x001f3b7c
		001f3b7c: CONDITIONAL_JUMP
		001f3a28: FALL_THROUGH

	[001f3a28]
		001f39c4: FALL_THROUGH
 	001f3a28 sourceline 0x2bcb
 	001f3a30 mov mar,0x32ef20
 	001f3a3c memread4 ax
 	001f3a44 lnot ax
 	001f3a4c jz 0x001f3b7c
		001f3b7c: CONDITIONAL_JUMP
		001f3a54: FALL_THROUGH

	[001f3a54]
		001f3a28: FALL_THROUGH
 	001f3a54 sourceline 0x2bcd
 	001f3a5c mov ax,0x1
 	001f3a68 mov bx,ax
 	001f3a74 mov mar,0x3cef20
 	001f3a80 mov ax,mar
 	001f3a8c push op
 	001f3a94 mov op,ax
 	001f3a9c farpush bx
 	001f3aa4 setfuncargs 0x1
 	001f3aac mov ax,0x69ef20
 	001f3ab8 farcall ax
 	001f3ac0 farsubsp 0x1
 	001f3ac8 pop op
 	001f3ad0 sourceline 0x2bce
 	001f3ad8 push op
 	001f3ae0 mov ax,0x2c7835
 	001f3aec farpush ax
 	001f3af4 mov ax,0x138
 	001f3b00 farpush ax
 	001f3b08 mov ax,0x92
 	001f3b14 farpush ax
 	001f3b1c mov ax,0x0
 	001f3b28 farpush ax
 	001f3b30 mov mar,0x3cef20
 	001f3b3c mov ax,mar
 	001f3b48 mov op,ax
 	001f3b50 setfuncargs 0x4
 	001f3b58 mov ax,0x6aef20
 	001f3b64 farcall ax
 	001f3b6c farsubsp 0x4
 	001f3b74 pop op
		001f3b7c: FALL_THROUGH

	[001f3b7c]
		001f3970: CONDITIONAL_JUMP
		001f39c4: CONDITIONAL_JUMP
		001f3a28: CONDITIONAL_JUMP
		001f3a54: FALL_THROUGH
 	001f3b7c sourceline 0x2bd2
 	001f3b84 mov ax,0x0
 	001f3b90 stackptr 0x8
 	001f3b98 memzerond
 	001f3b9c ret

btnLeft_OnClick$2:
	[001f3ba0]
 	001f3ba0 sourceline 0x2bd6
 	001f3ba8 thisaddr
 	001f3bb0 stackptr 0x8
 	001f3bb8 memread4 ax
 	001f3bc0 meminit ax
 	001f3bc8 sourceline 0x2bd7
 	001f3bd0 stackptr 0xc
 	001f3bd8 memread4 ax
 	001f3be0 push ax
 	001f3be8 mov ax,0x1
 	001f3bf4 pop bx
 	001f3bfc cmpeq bx,ax
 	001f3c08 mov ax,bx
 	001f3c14 jz 0x001f6864
		001f6864: CONDITIONAL_JUMP
		001f3c1c: FALL_THROUGH

	[001f3c1c]
		001f3ba0: FALL_THROUGH
 	001f3c1c sourceline 0x2bd9
*	001f3c24 mov mar,0x626f20
 	001f3c30 mov ax,mar
 	001f3c3c push op
 	001f3c44 mov op,ax
 	001f3c4c setfuncargs 0x0
 	001f3c54 mov ax,0x606f20
 	001f3c60 farcall ax
 	001f3c68 pop op
 	001f3c70 jz 0x001f6710
		001f6710: CONDITIONAL_JUMP
		001f3c78: FALL_THROUGH

	[001f3c78]
		001f3c1c: FALL_THROUGH
 	001f3c78 sourceline 0x2bdb
 	001f3c80 mov mar,0x100000
 	001f3c8c memread4 ax
 	001f3c94 lnot ax
 	001f3c9c jz 0x001f3ce8
		001f3ce8: CONDITIONAL_JUMP
		001f3ca4: FALL_THROUGH

	[001f3ca4]
		001f3c78: FALL_THROUGH
 	001f3ca4 push ax
 	001f3cac mov mar,0x100004
 	001f3cb8 memread4 ax
 	001f3cc0 lnot ax
 	001f3cc8 pop bx
 	001f3cd0 land bx,ax
 	001f3cdc mov ax,bx
		001f3ce8: FALL_THROUGH

	[001f3ce8]
		001f3c78: CONDITIONAL_JUMP
		001f3ca4: FALL_THROUGH
 	001f3ce8 jz 0x001f3d34
		001f3d34: CONDITIONAL_JUMP
		001f3cf0: FALL_THROUGH

	[001f3cf0]
		001f3ce8: FALL_THROUGH
 	001f3cf0 push ax
 	001f3cf8 mov mar,0x100008
 	001f3d04 memread4 ax
 	001f3d0c lnot ax
 	001f3d14 pop bx
 	001f3d1c land bx,ax
 	001f3d28 mov ax,bx
		001f3d34: FALL_THROUGH

	[001f3d34]
		001f3ce8: CONDITIONAL_JUMP
		001f3cf0: FALL_THROUGH
 	001f3d34 jz 0x001f3d80
		001f3d80: CONDITIONAL_JUMP
		001f3d3c: FALL_THROUGH

	[001f3d3c]
		001f3d34: FALL_THROUGH
 	001f3d3c push ax
 	001f3d44 mov mar,0x10000c
 	001f3d50 memread4 ax
 	001f3d58 lnot ax
 	001f3d60 pop bx
 	001f3d68 land bx,ax
 	001f3d74 mov ax,bx
		001f3d80: FALL_THROUGH

	[001f3d80]
		001f3d34: CONDITIONAL_JUMP
		001f3d3c: FALL_THROUGH
 	001f3d80 jz 0x001f3dcc
		001f3dcc: CONDITIONAL_JUMP
		001f3d88: FALL_THROUGH

	[001f3d88]
		001f3d80: FALL_THROUGH
 	001f3d88 push ax
 	001f3d90 mov mar,0x100010
 	001f3d9c memread4 ax
 	001f3da4 lnot ax
 	001f3dac pop bx
 	001f3db4 land bx,ax
 	001f3dc0 mov ax,bx
		001f3dcc: FALL_THROUGH

	[001f3dcc]
		001f3d80: CONDITIONAL_JUMP
		001f3d88: FALL_THROUGH
 	001f3dcc jz 0x001f3e18
		001f3e18: CONDITIONAL_JUMP
		001f3dd4: FALL_THROUGH

	[001f3dd4]
		001f3dcc: FALL_THROUGH
 	001f3dd4 push ax
 	001f3ddc mov mar,0x100014
 	001f3de8 memread4 ax
 	001f3df0 lnot ax
 	001f3df8 pop bx
 	001f3e00 land bx,ax
 	001f3e0c mov ax,bx
		001f3e18: FALL_THROUGH

	[001f3e18]
		001f3dcc: CONDITIONAL_JUMP
		001f3dd4: FALL_THROUGH
 	001f3e18 jz 0x001f3e64
		001f3e64: CONDITIONAL_JUMP
		001f3e20: FALL_THROUGH

	[001f3e20]
		001f3e18: FALL_THROUGH
 	001f3e20 push ax
 	001f3e28 mov mar,0x100018
 	001f3e34 memread4 ax
 	001f3e3c lnot ax
 	001f3e44 pop bx
 	001f3e4c land bx,ax
 	001f3e58 mov ax,bx
		001f3e64: FALL_THROUGH

	[001f3e64]
		001f3e18: CONDITIONAL_JUMP
		001f3e20: FALL_THROUGH
 	001f3e64 jz 0x001f3eb0
		001f3eb0: CONDITIONAL_JUMP
		001f3e6c: FALL_THROUGH

	[001f3e6c]
		001f3e64: FALL_THROUGH
 	001f3e6c push ax
 	001f3e74 mov mar,0x10001c
 	001f3e80 memread4 ax
 	001f3e88 lnot ax
 	001f3e90 pop bx
 	001f3e98 land bx,ax
 	001f3ea4 mov ax,bx
		001f3eb0: FALL_THROUGH

	[001f3eb0]
		001f3e64: CONDITIONAL_JUMP
		001f3e6c: FALL_THROUGH
 	001f3eb0 jz 0x001f3efc
		001f3efc: CONDITIONAL_JUMP
		001f3eb8: FALL_THROUGH

	[001f3eb8]
		001f3eb0: FALL_THROUGH
 	001f3eb8 push ax
 	001f3ec0 mov mar,0x100020
 	001f3ecc memread4 ax
 	001f3ed4 lnot ax
 	001f3edc pop bx
 	001f3ee4 land bx,ax
 	001f3ef0 mov ax,bx
		001f3efc: FALL_THROUGH

	[001f3efc]
		001f3eb0: CONDITIONAL_JUMP
		001f3eb8: FALL_THROUGH
 	001f3efc jz 0x001f3f48
		001f3f48: CONDITIONAL_JUMP
		001f3f04: FALL_THROUGH

	[001f3f04]
		001f3efc: FALL_THROUGH
 	001f3f04 push ax
 	001f3f0c mov mar,0x100024
 	001f3f18 memread4 ax
 	001f3f20 lnot ax
 	001f3f28 pop bx
 	001f3f30 land bx,ax
 	001f3f3c mov ax,bx
		001f3f48: FALL_THROUGH

	[001f3f48]
		001f3efc: CONDITIONAL_JUMP
		001f3f04: FALL_THROUGH
 	001f3f48 jz 0x001f3f94
		001f3f94: CONDITIONAL_JUMP
		001f3f50: FALL_THROUGH

	[001f3f50]
		001f3f48: FALL_THROUGH
 	001f3f50 push ax
 	001f3f58 mov mar,0x100028
 	001f3f64 memread4 ax
 	001f3f6c lnot ax
 	001f3f74 pop bx
 	001f3f7c land bx,ax
 	001f3f88 mov ax,bx
		001f3f94: FALL_THROUGH

	[001f3f94]
		001f3f48: CONDITIONAL_JUMP
		001f3f50: FALL_THROUGH
 	001f3f94 jz 0x001f3fe0
		001f3fe0: CONDITIONAL_JUMP
		001f3f9c: FALL_THROUGH

	[001f3f9c]
		001f3f94: FALL_THROUGH
 	001f3f9c push ax
 	001f3fa4 mov mar,0x10002c
 	001f3fb0 memread4 ax
 	001f3fb8 lnot ax
 	001f3fc0 pop bx
 	001f3fc8 land bx,ax
 	001f3fd4 mov ax,bx
		001f3fe0: FALL_THROUGH

	[001f3fe0]
		001f3f94: CONDITIONAL_JUMP
		001f3f9c: FALL_THROUGH
 	001f3fe0 jz 0x001f4030
		001f4030: CONDITIONAL_JUMP
		001f3fe8: FALL_THROUGH

	[001f3fe8]
		001f3fe0: FALL_THROUGH
 	001f3fe8 mov ax,0x1
 	001f3ff4 mov mar,0x100000
 	001f4000 memwrite4 ax
 	001f4008 mov ax,0x4
 	001f4014 mov mar,0x1000ac
 	001f4020 memwrite4 ax
 	001f4028 jmp 0x001f6700
		001f6700: UNCONDITIONAL_JUMP

	[001f4030]
		001f3fe0: CONDITIONAL_JUMP
 	001f4030 sourceline 0x2be0
 	001f4038 mov mar,0x100000
 	001f4044 memread4 ax
 	001f404c jz 0x001f4098
		001f4098: CONDITIONAL_JUMP
		001f4054: FALL_THROUGH

	[001f4054]
		001f4030: FALL_THROUGH
 	001f4054 push ax
 	001f405c mov mar,0x100004
 	001f4068 memread4 ax
 	001f4070 lnot ax
 	001f4078 pop bx
 	001f4080 land bx,ax
 	001f408c mov ax,bx
		001f4098: FALL_THROUGH

	[001f4098]
		001f4030: CONDITIONAL_JUMP
		001f4054: FALL_THROUGH
 	001f4098 jz 0x001f40e4
		001f40e4: CONDITIONAL_JUMP
		001f40a0: FALL_THROUGH

	[001f40a0]
		001f4098: FALL_THROUGH
 	001f40a0 push ax
 	001f40a8 mov mar,0x100008
 	001f40b4 memread4 ax
 	001f40bc lnot ax
 	001f40c4 pop bx
 	001f40cc land bx,ax
 	001f40d8 mov ax,bx
		001f40e4: FALL_THROUGH

	[001f40e4]
		001f4098: CONDITIONAL_JUMP
		001f40a0: FALL_THROUGH
 	001f40e4 jz 0x001f4130
		001f4130: CONDITIONAL_JUMP
		001f40ec: FALL_THROUGH

	[001f40ec]
		001f40e4: FALL_THROUGH
 	001f40ec push ax
 	001f40f4 mov mar,0x10000c
 	001f4100 memread4 ax
 	001f4108 lnot ax
 	001f4110 pop bx
 	001f4118 land bx,ax
 	001f4124 mov ax,bx
		001f4130: FALL_THROUGH

	[001f4130]
		001f40e4: CONDITIONAL_JUMP
		001f40ec: FALL_THROUGH
 	001f4130 jz 0x001f417c
		001f417c: CONDITIONAL_JUMP
		001f4138: FALL_THROUGH

	[001f4138]
		001f4130: FALL_THROUGH
 	001f4138 push ax
 	001f4140 mov mar,0x100010
 	001f414c memread4 ax
 	001f4154 lnot ax
 	001f415c pop bx
 	001f4164 land bx,ax
 	001f4170 mov ax,bx
		001f417c: FALL_THROUGH

	[001f417c]
		001f4130: CONDITIONAL_JUMP
		001f4138: FALL_THROUGH
 	001f417c jz 0x001f41c8
		001f41c8: CONDITIONAL_JUMP
		001f4184: FALL_THROUGH

	[001f4184]
		001f417c: FALL_THROUGH
 	001f4184 push ax
 	001f418c mov mar,0x100014
 	001f4198 memread4 ax
 	001f41a0 lnot ax
 	001f41a8 pop bx
 	001f41b0 land bx,ax
 	001f41bc mov ax,bx
		001f41c8: FALL_THROUGH

	[001f41c8]
		001f417c: CONDITIONAL_JUMP
		001f4184: FALL_THROUGH
 	001f41c8 jz 0x001f4214
		001f4214: CONDITIONAL_JUMP
		001f41d0: FALL_THROUGH

	[001f41d0]
		001f41c8: FALL_THROUGH
 	001f41d0 push ax
 	001f41d8 mov mar,0x100018
 	001f41e4 memread4 ax
 	001f41ec lnot ax
 	001f41f4 pop bx
 	001f41fc land bx,ax
 	001f4208 mov ax,bx
		001f4214: FALL_THROUGH

	[001f4214]
		001f41c8: CONDITIONAL_JUMP
		001f41d0: FALL_THROUGH
 	001f4214 jz 0x001f4260
		001f4260: CONDITIONAL_JUMP
		001f421c: FALL_THROUGH

	[001f421c]
		001f4214: FALL_THROUGH
 	001f421c push ax
 	001f4224 mov mar,0x10001c
 	001f4230 memread4 ax
 	001f4238 lnot ax
 	001f4240 pop bx
 	001f4248 land bx,ax
 	001f4254 mov ax,bx
		001f4260: FALL_THROUGH

	[001f4260]
		001f4214: CONDITIONAL_JUMP
		001f421c: FALL_THROUGH
 	001f4260 jz 0x001f42ac
		001f42ac: CONDITIONAL_JUMP
		001f4268: FALL_THROUGH

	[001f4268]
		001f4260: FALL_THROUGH
 	001f4268 push ax
 	001f4270 mov mar,0x100020
 	001f427c memread4 ax
 	001f4284 lnot ax
 	001f428c pop bx
 	001f4294 land bx,ax
 	001f42a0 mov ax,bx
		001f42ac: FALL_THROUGH

	[001f42ac]
		001f4260: CONDITIONAL_JUMP
		001f4268: FALL_THROUGH
 	001f42ac jz 0x001f42f8
		001f42f8: CONDITIONAL_JUMP
		001f42b4: FALL_THROUGH

	[001f42b4]
		001f42ac: FALL_THROUGH
 	001f42b4 push ax
 	001f42bc mov mar,0x100024
 	001f42c8 memread4 ax
 	001f42d0 lnot ax
 	001f42d8 pop bx
 	001f42e0 land bx,ax
 	001f42ec mov ax,bx
		001f42f8: FALL_THROUGH

	[001f42f8]
		001f42ac: CONDITIONAL_JUMP
		001f42b4: FALL_THROUGH
 	001f42f8 jz 0x001f4344
		001f4344: CONDITIONAL_JUMP
		001f4300: FALL_THROUGH

	[001f4300]
		001f42f8: FALL_THROUGH
 	001f4300 push ax
 	001f4308 mov mar,0x100028
 	001f4314 memread4 ax
 	001f431c lnot ax
 	001f4324 pop bx
 	001f432c land bx,ax
 	001f4338 mov ax,bx
		001f4344: FALL_THROUGH

	[001f4344]
		001f42f8: CONDITIONAL_JUMP
		001f4300: FALL_THROUGH
 	001f4344 jz 0x001f4390
		001f4390: CONDITIONAL_JUMP
		001f434c: FALL_THROUGH

	[001f434c]
		001f4344: FALL_THROUGH
 	001f434c push ax
 	001f4354 mov mar,0x10002c
 	001f4360 memread4 ax
 	001f4368 lnot ax
 	001f4370 pop bx
 	001f4378 land bx,ax
 	001f4384 mov ax,bx
		001f4390: FALL_THROUGH

	[001f4390]
		001f4344: CONDITIONAL_JUMP
		001f434c: FALL_THROUGH
 	001f4390 jz 0x001f43e0
		001f43e0: CONDITIONAL_JUMP
		001f4398: FALL_THROUGH

	[001f4398]
		001f4390: FALL_THROUGH
 	001f4398 mov ax,0x1
 	001f43a4 mov mar,0x100004
 	001f43b0 memwrite4 ax
 	001f43b8 mov ax,0x4
 	001f43c4 mov mar,0x1000b0
 	001f43d0 memwrite4 ax
 	001f43d8 jmp 0x001f6700
		001f6700: UNCONDITIONAL_JUMP

	[001f43e0]
		001f4390: CONDITIONAL_JUMP
 	001f43e0 sourceline 0x2be5
 	001f43e8 mov mar,0x100000
 	001f43f4 memread4 ax
 	001f43fc jz 0x001f4440
		001f4440: CONDITIONAL_JUMP
		001f4404: FALL_THROUGH

	[001f4404]
		001f43e0: FALL_THROUGH
 	001f4404 push ax
 	001f440c mov mar,0x100004
 	001f4418 memread4 ax
 	001f4420 pop bx
 	001f4428 land bx,ax
 	001f4434 mov ax,bx
		001f4440: FALL_THROUGH

	[001f4440]
		001f43e0: CONDITIONAL_JUMP
		001f4404: FALL_THROUGH
 	001f4440 jz 0x001f448c
		001f448c: CONDITIONAL_JUMP
		001f4448: FALL_THROUGH

	[001f4448]
		001f4440: FALL_THROUGH
 	001f4448 push ax
 	001f4450 mov mar,0x100008
 	001f445c memread4 ax
 	001f4464 lnot ax
 	001f446c pop bx
 	001f4474 land bx,ax
 	001f4480 mov ax,bx
		001f448c: FALL_THROUGH

	[001f448c]
		001f4440: CONDITIONAL_JUMP
		001f4448: FALL_THROUGH
 	001f448c jz 0x001f44d8
		001f44d8: CONDITIONAL_JUMP
		001f4494: FALL_THROUGH

	[001f4494]
		001f448c: FALL_THROUGH
 	001f4494 push ax
 	001f449c mov mar,0x10000c
 	001f44a8 memread4 ax
 	001f44b0 lnot ax
 	001f44b8 pop bx
 	001f44c0 land bx,ax
 	001f44cc mov ax,bx
		001f44d8: FALL_THROUGH

	[001f44d8]
		001f448c: CONDITIONAL_JUMP
		001f4494: FALL_THROUGH
 	001f44d8 jz 0x001f4524
		001f4524: CONDITIONAL_JUMP
		001f44e0: FALL_THROUGH

	[001f44e0]
		001f44d8: FALL_THROUGH
 	001f44e0 push ax
 	001f44e8 mov mar,0x100010
 	001f44f4 memread4 ax
 	001f44fc lnot ax
 	001f4504 pop bx
 	001f450c land bx,ax
 	001f4518 mov ax,bx
		001f4524: FALL_THROUGH

	[001f4524]
		001f44d8: CONDITIONAL_JUMP
		001f44e0: FALL_THROUGH
 	001f4524 jz 0x001f4570
		001f4570: CONDITIONAL_JUMP
		001f452c: FALL_THROUGH

	[001f452c]
		001f4524: FALL_THROUGH
 	001f452c push ax
 	001f4534 mov mar,0x100014
 	001f4540 memread4 ax
 	001f4548 lnot ax
 	001f4550 pop bx
 	001f4558 land bx,ax
 	001f4564 mov ax,bx
		001f4570: FALL_THROUGH

	[001f4570]
		001f4524: CONDITIONAL_JUMP
		001f452c: FALL_THROUGH
 	001f4570 jz 0x001f45bc
		001f45bc: CONDITIONAL_JUMP
		001f4578: FALL_THROUGH

	[001f4578]
		001f4570: FALL_THROUGH
 	001f4578 push ax
 	001f4580 mov mar,0x100018
 	001f458c memread4 ax
 	001f4594 lnot ax
 	001f459c pop bx
 	001f45a4 land bx,ax
 	001f45b0 mov ax,bx
		001f45bc: FALL_THROUGH

	[001f45bc]
		001f4570: CONDITIONAL_JUMP
		001f4578: FALL_THROUGH
 	001f45bc jz 0x001f4608
		001f4608: CONDITIONAL_JUMP
		001f45c4: FALL_THROUGH

	[001f45c4]
		001f45bc: FALL_THROUGH
 	001f45c4 push ax
 	001f45cc mov mar,0x10001c
 	001f45d8 memread4 ax
 	001f45e0 lnot ax
 	001f45e8 pop bx
 	001f45f0 land bx,ax
 	001f45fc mov ax,bx
		001f4608: FALL_THROUGH

	[001f4608]
		001f45bc: CONDITIONAL_JUMP
		001f45c4: FALL_THROUGH
 	001f4608 jz 0x001f4654
		001f4654: CONDITIONAL_JUMP
		001f4610: FALL_THROUGH

	[001f4610]
		001f4608: FALL_THROUGH
 	001f4610 push ax
 	001f4618 mov mar,0x100020
 	001f4624 memread4 ax
 	001f462c lnot ax
 	001f4634 pop bx
 	001f463c land bx,ax
 	001f4648 mov ax,bx
		001f4654: FALL_THROUGH

	[001f4654]
		001f4608: CONDITIONAL_JUMP
		001f4610: FALL_THROUGH
 	001f4654 jz 0x001f46a0
		001f46a0: CONDITIONAL_JUMP
		001f465c: FALL_THROUGH

	[001f465c]
		001f4654: FALL_THROUGH
 	001f465c push ax
 	001f4664 mov mar,0x100024
 	001f4670 memread4 ax
 	001f4678 lnot ax
 	001f4680 pop bx
 	001f4688 land bx,ax
 	001f4694 mov ax,bx
		001f46a0: FALL_THROUGH

	[001f46a0]
		001f4654: CONDITIONAL_JUMP
		001f465c: FALL_THROUGH
 	001f46a0 jz 0x001f46ec
		001f46ec: CONDITIONAL_JUMP
		001f46a8: FALL_THROUGH

	[001f46a8]
		001f46a0: FALL_THROUGH
 	001f46a8 push ax
 	001f46b0 mov mar,0x100028
 	001f46bc memread4 ax
 	001f46c4 lnot ax
 	001f46cc pop bx
 	001f46d4 land bx,ax
 	001f46e0 mov ax,bx
		001f46ec: FALL_THROUGH

	[001f46ec]
		001f46a0: CONDITIONAL_JUMP
		001f46a8: FALL_THROUGH
 	001f46ec jz 0x001f4738
		001f4738: CONDITIONAL_JUMP
		001f46f4: FALL_THROUGH

	[001f46f4]
		001f46ec: FALL_THROUGH
 	001f46f4 push ax
 	001f46fc mov mar,0x10002c
 	001f4708 memread4 ax
 	001f4710 lnot ax
 	001f4718 pop bx
 	001f4720 land bx,ax
 	001f472c mov ax,bx
		001f4738: FALL_THROUGH

	[001f4738]
		001f46ec: CONDITIONAL_JUMP
		001f46f4: FALL_THROUGH
 	001f4738 jz 0x001f4788
		001f4788: CONDITIONAL_JUMP
		001f4740: FALL_THROUGH

	[001f4740]
		001f4738: FALL_THROUGH
 	001f4740 mov ax,0x1
 	001f474c mov mar,0x100008
 	001f4758 memwrite4 ax
 	001f4760 mov ax,0x4
 	001f476c mov mar,0x1000b4
 	001f4778 memwrite4 ax
 	001f4780 jmp 0x001f6700
		001f6700: UNCONDITIONAL_JUMP

	[001f4788]
		001f4738: CONDITIONAL_JUMP
 	001f4788 sourceline 0x2bea
 	001f4790 mov mar,0x100000
 	001f479c memread4 ax
 	001f47a4 jz 0x001f47e8
		001f47e8: CONDITIONAL_JUMP
		001f47ac: FALL_THROUGH

	[001f47ac]
		001f4788: FALL_THROUGH
 	001f47ac push ax
 	001f47b4 mov mar,0x100004
 	001f47c0 memread4 ax
 	001f47c8 pop bx
 	001f47d0 land bx,ax
 	001f47dc mov ax,bx
		001f47e8: FALL_THROUGH

	[001f47e8]
		001f4788: CONDITIONAL_JUMP
		001f47ac: FALL_THROUGH
 	001f47e8 jz 0x001f482c
		001f482c: CONDITIONAL_JUMP
		001f47f0: FALL_THROUGH

	[001f47f0]
		001f47e8: FALL_THROUGH
 	001f47f0 push ax
 	001f47f8 mov mar,0x100008
 	001f4804 memread4 ax
 	001f480c pop bx
 	001f4814 land bx,ax
 	001f4820 mov ax,bx
		001f482c: FALL_THROUGH

	[001f482c]
		001f47e8: CONDITIONAL_JUMP
		001f47f0: FALL_THROUGH
 	001f482c jz 0x001f4878
		001f4878: CONDITIONAL_JUMP
		001f4834: FALL_THROUGH

	[001f4834]
		001f482c: FALL_THROUGH
 	001f4834 push ax
 	001f483c mov mar,0x10000c
 	001f4848 memread4 ax
 	001f4850 lnot ax
 	001f4858 pop bx
 	001f4860 land bx,ax
 	001f486c mov ax,bx
		001f4878: FALL_THROUGH

	[001f4878]
		001f482c: CONDITIONAL_JUMP
		001f4834: FALL_THROUGH
 	001f4878 jz 0x001f48c4
		001f48c4: CONDITIONAL_JUMP
		001f4880: FALL_THROUGH

	[001f4880]
		001f4878: FALL_THROUGH
 	001f4880 push ax
 	001f4888 mov mar,0x100010
 	001f4894 memread4 ax
 	001f489c lnot ax
 	001f48a4 pop bx
 	001f48ac land bx,ax
 	001f48b8 mov ax,bx
		001f48c4: FALL_THROUGH

	[001f48c4]
		001f4878: CONDITIONAL_JUMP
		001f4880: FALL_THROUGH
 	001f48c4 jz 0x001f4910
		001f4910: CONDITIONAL_JUMP
		001f48cc: FALL_THROUGH

	[001f48cc]
		001f48c4: FALL_THROUGH
 	001f48cc push ax
 	001f48d4 mov mar,0x100014
 	001f48e0 memread4 ax
 	001f48e8 lnot ax
 	001f48f0 pop bx
 	001f48f8 land bx,ax
 	001f4904 mov ax,bx
		001f4910: FALL_THROUGH

	[001f4910]
		001f48c4: CONDITIONAL_JUMP
		001f48cc: FALL_THROUGH
 	001f4910 jz 0x001f495c
		001f495c: CONDITIONAL_JUMP
		001f4918: FALL_THROUGH

	[001f4918]
		001f4910: FALL_THROUGH
 	001f4918 push ax
 	001f4920 mov mar,0x100018
 	001f492c memread4 ax
 	001f4934 lnot ax
 	001f493c pop bx
 	001f4944 land bx,ax
 	001f4950 mov ax,bx
		001f495c: FALL_THROUGH

	[001f495c]
		001f4910: CONDITIONAL_JUMP
		001f4918: FALL_THROUGH
 	001f495c jz 0x001f49a8
		001f49a8: CONDITIONAL_JUMP
		001f4964: FALL_THROUGH

	[001f4964]
		001f495c: FALL_THROUGH
 	001f4964 push ax
 	001f496c mov mar,0x10001c
 	001f4978 memread4 ax
 	001f4980 lnot ax
 	001f4988 pop bx
 	001f4990 land bx,ax
 	001f499c mov ax,bx
		001f49a8: FALL_THROUGH

	[001f49a8]
		001f495c: CONDITIONAL_JUMP
		001f4964: FALL_THROUGH
 	001f49a8 jz 0x001f49f4
		001f49f4: CONDITIONAL_JUMP
		001f49b0: FALL_THROUGH

	[001f49b0]
		001f49a8: FALL_THROUGH
 	001f49b0 push ax
 	001f49b8 mov mar,0x100020
 	001f49c4 memread4 ax
 	001f49cc lnot ax
 	001f49d4 pop bx
 	001f49dc land bx,ax
 	001f49e8 mov ax,bx
		001f49f4: FALL_THROUGH

	[001f49f4]
		001f49a8: CONDITIONAL_JUMP
		001f49b0: FALL_THROUGH
 	001f49f4 jz 0x001f4a40
		001f4a40: CONDITIONAL_JUMP
		001f49fc: FALL_THROUGH

	[001f49fc]
		001f49f4: FALL_THROUGH
 	001f49fc push ax
 	001f4a04 mov mar,0x100024
 	001f4a10 memread4 ax
 	001f4a18 lnot ax
 	001f4a20 pop bx
 	001f4a28 land bx,ax
 	001f4a34 mov ax,bx
		001f4a40: FALL_THROUGH

	[001f4a40]
		001f49f4: CONDITIONAL_JUMP
		001f49fc: FALL_THROUGH
 	001f4a40 jz 0x001f4a8c
		001f4a8c: CONDITIONAL_JUMP
		001f4a48: FALL_THROUGH

	[001f4a48]
		001f4a40: FALL_THROUGH
 	001f4a48 push ax
 	001f4a50 mov mar,0x100028
 	001f4a5c memread4 ax
 	001f4a64 lnot ax
 	001f4a6c pop bx
 	001f4a74 land bx,ax
 	001f4a80 mov ax,bx
		001f4a8c: FALL_THROUGH

	[001f4a8c]
		001f4a40: CONDITIONAL_JUMP
		001f4a48: FALL_THROUGH
 	001f4a8c jz 0x001f4ad8
		001f4ad8: CONDITIONAL_JUMP
		001f4a94: FALL_THROUGH

	[001f4a94]
		001f4a8c: FALL_THROUGH
 	001f4a94 push ax
 	001f4a9c mov mar,0x10002c
 	001f4aa8 memread4 ax
 	001f4ab0 lnot ax
 	001f4ab8 pop bx
 	001f4ac0 land bx,ax
 	001f4acc mov ax,bx
		001f4ad8: FALL_THROUGH

	[001f4ad8]
		001f4a8c: CONDITIONAL_JUMP
		001f4a94: FALL_THROUGH
 	001f4ad8 jz 0x001f4b28
		001f4b28: CONDITIONAL_JUMP
		001f4ae0: FALL_THROUGH

	[001f4ae0]
		001f4ad8: FALL_THROUGH
 	001f4ae0 mov ax,0x1
 	001f4aec mov mar,0x10000c
 	001f4af8 memwrite4 ax
 	001f4b00 mov ax,0x4
 	001f4b0c mov mar,0x1000b8
 	001f4b18 memwrite4 ax
 	001f4b20 jmp 0x001f6700
		001f6700: UNCONDITIONAL_JUMP

	[001f4b28]
		001f4ad8: CONDITIONAL_JUMP
 	001f4b28 sourceline 0x2bef
 	001f4b30 mov mar,0x100000
 	001f4b3c memread4 ax
 	001f4b44 jz 0x001f4b88
		001f4b88: CONDITIONAL_JUMP
		001f4b4c: FALL_THROUGH

	[001f4b4c]
		001f4b28: FALL_THROUGH
 	001f4b4c push ax
 	001f4b54 mov mar,0x100004
 	001f4b60 memread4 ax
 	001f4b68 pop bx
 	001f4b70 land bx,ax
 	001f4b7c mov ax,bx
		001f4b88: FALL_THROUGH

	[001f4b88]
		001f4b28: CONDITIONAL_JUMP
		001f4b4c: FALL_THROUGH
 	001f4b88 jz 0x001f4bcc
		001f4bcc: CONDITIONAL_JUMP
		001f4b90: FALL_THROUGH

	[001f4b90]
		001f4b88: FALL_THROUGH
 	001f4b90 push ax
 	001f4b98 mov mar,0x100008
 	001f4ba4 memread4 ax
 	001f4bac pop bx
 	001f4bb4 land bx,ax
 	001f4bc0 mov ax,bx
		001f4bcc: FALL_THROUGH

	[001f4bcc]
		001f4b88: CONDITIONAL_JUMP
		001f4b90: FALL_THROUGH
 	001f4bcc jz 0x001f4c10
		001f4c10: CONDITIONAL_JUMP
		001f4bd4: FALL_THROUGH

	[001f4bd4]
		001f4bcc: FALL_THROUGH
 	001f4bd4 push ax
 	001f4bdc mov mar,0x10000c
 	001f4be8 memread4 ax
 	001f4bf0 pop bx
 	001f4bf8 land bx,ax
 	001f4c04 mov ax,bx
		001f4c10: FALL_THROUGH

	[001f4c10]
		001f4bcc: CONDITIONAL_JUMP
		001f4bd4: FALL_THROUGH
 	001f4c10 jz 0x001f4c5c
		001f4c5c: CONDITIONAL_JUMP
		001f4c18: FALL_THROUGH

	[001f4c18]
		001f4c10: FALL_THROUGH
 	001f4c18 push ax
 	001f4c20 mov mar,0x100010
 	001f4c2c memread4 ax
 	001f4c34 lnot ax
 	001f4c3c pop bx
 	001f4c44 land bx,ax
 	001f4c50 mov ax,bx
		001f4c5c: FALL_THROUGH

	[001f4c5c]
		001f4c10: CONDITIONAL_JUMP
		001f4c18: FALL_THROUGH
 	001f4c5c jz 0x001f4ca8
		001f4ca8: CONDITIONAL_JUMP
		001f4c64: FALL_THROUGH

	[001f4c64]
		001f4c5c: FALL_THROUGH
 	001f4c64 push ax
 	001f4c6c mov mar,0x100014
 	001f4c78 memread4 ax
 	001f4c80 lnot ax
 	001f4c88 pop bx
 	001f4c90 land bx,ax
 	001f4c9c mov ax,bx
		001f4ca8: FALL_THROUGH

	[001f4ca8]
		001f4c5c: CONDITIONAL_JUMP
		001f4c64: FALL_THROUGH
 	001f4ca8 jz 0x001f4cf4
		001f4cf4: CONDITIONAL_JUMP
		001f4cb0: FALL_THROUGH

	[001f4cb0]
		001f4ca8: FALL_THROUGH
 	001f4cb0 push ax
 	001f4cb8 mov mar,0x100018
 	001f4cc4 memread4 ax
 	001f4ccc lnot ax
 	001f4cd4 pop bx
 	001f4cdc land bx,ax
 	001f4ce8 mov ax,bx
		001f4cf4: FALL_THROUGH

	[001f4cf4]
		001f4ca8: CONDITIONAL_JUMP
		001f4cb0: FALL_THROUGH
 	001f4cf4 jz 0x001f4d40
		001f4d40: CONDITIONAL_JUMP
		001f4cfc: FALL_THROUGH

	[001f4cfc]
		001f4cf4: FALL_THROUGH
 	001f4cfc push ax
 	001f4d04 mov mar,0x10001c
 	001f4d10 memread4 ax
 	001f4d18 lnot ax
 	001f4d20 pop bx
 	001f4d28 land bx,ax
 	001f4d34 mov ax,bx
		001f4d40: FALL_THROUGH

	[001f4d40]
		001f4cf4: CONDITIONAL_JUMP
		001f4cfc: FALL_THROUGH
 	001f4d40 jz 0x001f4d8c
		001f4d8c: CONDITIONAL_JUMP
		001f4d48: FALL_THROUGH

	[001f4d48]
		001f4d40: FALL_THROUGH
 	001f4d48 push ax
 	001f4d50 mov mar,0x100020
 	001f4d5c memread4 ax
 	001f4d64 lnot ax
 	001f4d6c pop bx
 	001f4d74 land bx,ax
 	001f4d80 mov ax,bx
		001f4d8c: FALL_THROUGH

	[001f4d8c]
		001f4d40: CONDITIONAL_JUMP
		001f4d48: FALL_THROUGH
 	001f4d8c jz 0x001f4dd8
		001f4dd8: CONDITIONAL_JUMP
		001f4d94: FALL_THROUGH

	[001f4d94]
		001f4d8c: FALL_THROUGH
 	001f4d94 push ax
 	001f4d9c mov mar,0x100024
 	001f4da8 memread4 ax
 	001f4db0 lnot ax
 	001f4db8 pop bx
 	001f4dc0 land bx,ax
 	001f4dcc mov ax,bx
		001f4dd8: FALL_THROUGH

	[001f4dd8]
		001f4d8c: CONDITIONAL_JUMP
		001f4d94: FALL_THROUGH
 	001f4dd8 jz 0x001f4e24
		001f4e24: CONDITIONAL_JUMP
		001f4de0: FALL_THROUGH

	[001f4de0]
		001f4dd8: FALL_THROUGH
 	001f4de0 push ax
 	001f4de8 mov mar,0x100028
 	001f4df4 memread4 ax
 	001f4dfc lnot ax
 	001f4e04 pop bx
 	001f4e0c land bx,ax
 	001f4e18 mov ax,bx
		001f4e24: FALL_THROUGH

	[001f4e24]
		001f4dd8: CONDITIONAL_JUMP
		001f4de0: FALL_THROUGH
 	001f4e24 jz 0x001f4e70
		001f4e70: CONDITIONAL_JUMP
		001f4e2c: FALL_THROUGH

	[001f4e2c]
		001f4e24: FALL_THROUGH
 	001f4e2c push ax
 	001f4e34 mov mar,0x10002c
 	001f4e40 memread4 ax
 	001f4e48 lnot ax
 	001f4e50 pop bx
 	001f4e58 land bx,ax
 	001f4e64 mov ax,bx
		001f4e70: FALL_THROUGH

	[001f4e70]
		001f4e24: CONDITIONAL_JUMP
		001f4e2c: FALL_THROUGH
 	001f4e70 jz 0x001f4ec0
		001f4ec0: CONDITIONAL_JUMP
		001f4e78: FALL_THROUGH

	[001f4e78]
		001f4e70: FALL_THROUGH
 	001f4e78 mov ax,0x1
 	001f4e84 mov mar,0x100010
 	001f4e90 memwrite4 ax
 	001f4e98 mov ax,0x4
 	001f4ea4 mov mar,0x1000bc
 	001f4eb0 memwrite4 ax
 	001f4eb8 jmp 0x001f6700
		001f6700: UNCONDITIONAL_JUMP

	[001f4ec0]
		001f4e70: CONDITIONAL_JUMP
 	001f4ec0 sourceline 0x2bf4
 	001f4ec8 mov mar,0x100000
 	001f4ed4 memread4 ax
 	001f4edc jz 0x001f4f20
		001f4f20: CONDITIONAL_JUMP
		001f4ee4: FALL_THROUGH

	[001f4ee4]
		001f4ec0: FALL_THROUGH
 	001f4ee4 push ax
 	001f4eec mov mar,0x100004
 	001f4ef8 memread4 ax
 	001f4f00 pop bx
 	001f4f08 land bx,ax
 	001f4f14 mov ax,bx
		001f4f20: FALL_THROUGH

	[001f4f20]
		001f4ec0: CONDITIONAL_JUMP
		001f4ee4: FALL_THROUGH
 	001f4f20 jz 0x001f4f64
		001f4f64: CONDITIONAL_JUMP
		001f4f28: FALL_THROUGH

	[001f4f28]
		001f4f20: FALL_THROUGH
 	001f4f28 push ax
 	001f4f30 mov mar,0x100008
 	001f4f3c memread4 ax
 	001f4f44 pop bx
 	001f4f4c land bx,ax
 	001f4f58 mov ax,bx
		001f4f64: FALL_THROUGH

	[001f4f64]
		001f4f20: CONDITIONAL_JUMP
		001f4f28: FALL_THROUGH
 	001f4f64 jz 0x001f4fa8
		001f4fa8: CONDITIONAL_JUMP
		001f4f6c: FALL_THROUGH

	[001f4f6c]
		001f4f64: FALL_THROUGH
 	001f4f6c push ax
 	001f4f74 mov mar,0x10000c
 	001f4f80 memread4 ax
 	001f4f88 pop bx
 	001f4f90 land bx,ax
 	001f4f9c mov ax,bx
		001f4fa8: FALL_THROUGH

	[001f4fa8]
		001f4f64: CONDITIONAL_JUMP
		001f4f6c: FALL_THROUGH
 	001f4fa8 jz 0x001f4fec
		001f4fec: CONDITIONAL_JUMP
		001f4fb0: FALL_THROUGH

	[001f4fb0]
		001f4fa8: FALL_THROUGH
 	001f4fb0 push ax
 	001f4fb8 mov mar,0x100010
 	001f4fc4 memread4 ax
 	001f4fcc pop bx
 	001f4fd4 land bx,ax
 	001f4fe0 mov ax,bx
		001f4fec: FALL_THROUGH

	[001f4fec]
		001f4fa8: CONDITIONAL_JUMP
		001f4fb0: FALL_THROUGH
 	001f4fec jz 0x001f5038
		001f5038: CONDITIONAL_JUMP
		001f4ff4: FALL_THROUGH

	[001f4ff4]
		001f4fec: FALL_THROUGH
 	001f4ff4 push ax
 	001f4ffc mov mar,0x100014
 	001f5008 memread4 ax
 	001f5010 lnot ax
 	001f5018 pop bx
 	001f5020 land bx,ax
 	001f502c mov ax,bx
		001f5038: FALL_THROUGH

	[001f5038]
		001f4fec: CONDITIONAL_JUMP
		001f4ff4: FALL_THROUGH
 	001f5038 jz 0x001f5084
		001f5084: CONDITIONAL_JUMP
		001f5040: FALL_THROUGH

	[001f5040]
		001f5038: FALL_THROUGH
 	001f5040 push ax
 	001f5048 mov mar,0x100018
 	001f5054 memread4 ax
 	001f505c lnot ax
 	001f5064 pop bx
 	001f506c land bx,ax
 	001f5078 mov ax,bx
		001f5084: FALL_THROUGH

	[001f5084]
		001f5038: CONDITIONAL_JUMP
		001f5040: FALL_THROUGH
 	001f5084 jz 0x001f50d0
		001f50d0: CONDITIONAL_JUMP
		001f508c: FALL_THROUGH

	[001f508c]
		001f5084: FALL_THROUGH
 	001f508c push ax
 	001f5094 mov mar,0x10001c
 	001f50a0 memread4 ax
 	001f50a8 lnot ax
 	001f50b0 pop bx
 	001f50b8 land bx,ax
 	001f50c4 mov ax,bx
		001f50d0: FALL_THROUGH

	[001f50d0]
		001f5084: CONDITIONAL_JUMP
		001f508c: FALL_THROUGH
 	001f50d0 jz 0x001f511c
		001f511c: CONDITIONAL_JUMP
		001f50d8: FALL_THROUGH

	[001f50d8]
		001f50d0: FALL_THROUGH
 	001f50d8 push ax
 	001f50e0 mov mar,0x100020
 	001f50ec memread4 ax
 	001f50f4 lnot ax
 	001f50fc pop bx
 	001f5104 land bx,ax
 	001f5110 mov ax,bx
		001f511c: FALL_THROUGH

	[001f511c]
		001f50d0: CONDITIONAL_JUMP
		001f50d8: FALL_THROUGH
 	001f511c jz 0x001f5168
		001f5168: CONDITIONAL_JUMP
		001f5124: FALL_THROUGH

	[001f5124]
		001f511c: FALL_THROUGH
 	001f5124 push ax
 	001f512c mov mar,0x100024
 	001f5138 memread4 ax
 	001f5140 lnot ax
 	001f5148 pop bx
 	001f5150 land bx,ax
 	001f515c mov ax,bx
		001f5168: FALL_THROUGH

	[001f5168]
		001f511c: CONDITIONAL_JUMP
		001f5124: FALL_THROUGH
 	001f5168 jz 0x001f51b4
		001f51b4: CONDITIONAL_JUMP
		001f5170: FALL_THROUGH

	[001f5170]
		001f5168: FALL_THROUGH
 	001f5170 push ax
 	001f5178 mov mar,0x100028
 	001f5184 memread4 ax
 	001f518c lnot ax
 	001f5194 pop bx
 	001f519c land bx,ax
 	001f51a8 mov ax,bx
		001f51b4: FALL_THROUGH

	[001f51b4]
		001f5168: CONDITIONAL_JUMP
		001f5170: FALL_THROUGH
 	001f51b4 jz 0x001f5200
		001f5200: CONDITIONAL_JUMP
		001f51bc: FALL_THROUGH

	[001f51bc]
		001f51b4: FALL_THROUGH
 	001f51bc push ax
 	001f51c4 mov mar,0x10002c
 	001f51d0 memread4 ax
 	001f51d8 lnot ax
 	001f51e0 pop bx
 	001f51e8 land bx,ax
 	001f51f4 mov ax,bx
		001f5200: FALL_THROUGH

	[001f5200]
		001f51b4: CONDITIONAL_JUMP
		001f51bc: FALL_THROUGH
 	001f5200 jz 0x001f5250
		001f5250: CONDITIONAL_JUMP
		001f5208: FALL_THROUGH

	[001f5208]
		001f5200: FALL_THROUGH
 	001f5208 mov ax,0x1
 	001f5214 mov mar,0x100014
 	001f5220 memwrite4 ax
 	001f5228 mov ax,0x4
 	001f5234 mov mar,0x1000c0
 	001f5240 memwrite4 ax
 	001f5248 jmp 0x001f6700
		001f6700: UNCONDITIONAL_JUMP

	[001f5250]
		001f5200: CONDITIONAL_JUMP
 	001f5250 sourceline 0x2bf9
 	001f5258 mov mar,0x100000
 	001f5264 memread4 ax
 	001f526c jz 0x001f52b0
		001f52b0: CONDITIONAL_JUMP
		001f5274: FALL_THROUGH

	[001f5274]
		001f5250: FALL_THROUGH
 	001f5274 push ax
 	001f527c mov mar,0x100004
 	001f5288 memread4 ax
 	001f5290 pop bx
 	001f5298 land bx,ax
 	001f52a4 mov ax,bx
		001f52b0: FALL_THROUGH

	[001f52b0]
		001f5250: CONDITIONAL_JUMP
		001f5274: FALL_THROUGH
 	001f52b0 jz 0x001f52f4
		001f52f4: CONDITIONAL_JUMP
		001f52b8: FALL_THROUGH

	[001f52b8]
		001f52b0: FALL_THROUGH
 	001f52b8 push ax
 	001f52c0 mov mar,0x100008
 	001f52cc memread4 ax
 	001f52d4 pop bx
 	001f52dc land bx,ax
 	001f52e8 mov ax,bx
		001f52f4: FALL_THROUGH

	[001f52f4]
		001f52b0: CONDITIONAL_JUMP
		001f52b8: FALL_THROUGH
 	001f52f4 jz 0x001f5338
		001f5338: CONDITIONAL_JUMP
		001f52fc: FALL_THROUGH

	[001f52fc]
		001f52f4: FALL_THROUGH
 	001f52fc push ax
 	001f5304 mov mar,0x10000c
 	001f5310 memread4 ax
 	001f5318 pop bx
 	001f5320 land bx,ax
 	001f532c mov ax,bx
		001f5338: FALL_THROUGH

	[001f5338]
		001f52f4: CONDITIONAL_JUMP
		001f52fc: FALL_THROUGH
 	001f5338 jz 0x001f537c
		001f537c: CONDITIONAL_JUMP
		001f5340: FALL_THROUGH

	[001f5340]
		001f5338: FALL_THROUGH
 	001f5340 push ax
 	001f5348 mov mar,0x100010
 	001f5354 memread4 ax
 	001f535c pop bx
 	001f5364 land bx,ax
 	001f5370 mov ax,bx
		001f537c: FALL_THROUGH

	[001f537c]
		001f5338: CONDITIONAL_JUMP
		001f5340: FALL_THROUGH
 	001f537c jz 0x001f53c0
		001f53c0: CONDITIONAL_JUMP
		001f5384: FALL_THROUGH

	[001f5384]
		001f537c: FALL_THROUGH
 	001f5384 push ax
 	001f538c mov mar,0x100014
 	001f5398 memread4 ax
 	001f53a0 pop bx
 	001f53a8 land bx,ax
 	001f53b4 mov ax,bx
		001f53c0: FALL_THROUGH

	[001f53c0]
		001f537c: CONDITIONAL_JUMP
		001f5384: FALL_THROUGH
 	001f53c0 jz 0x001f540c
		001f540c: CONDITIONAL_JUMP
		001f53c8: FALL_THROUGH

	[001f53c8]
		001f53c0: FALL_THROUGH
 	001f53c8 push ax
 	001f53d0 mov mar,0x100018
 	001f53dc memread4 ax
 	001f53e4 lnot ax
 	001f53ec pop bx
 	001f53f4 land bx,ax
 	001f5400 mov ax,bx
		001f540c: FALL_THROUGH

	[001f540c]
		001f53c0: CONDITIONAL_JUMP
		001f53c8: FALL_THROUGH
 	001f540c jz 0x001f5458
		001f5458: CONDITIONAL_JUMP
		001f5414: FALL_THROUGH

	[001f5414]
		001f540c: FALL_THROUGH
 	001f5414 push ax
 	001f541c mov mar,0x10001c
 	001f5428 memread4 ax
 	001f5430 lnot ax
 	001f5438 pop bx
 	001f5440 land bx,ax
 	001f544c mov ax,bx
		001f5458: FALL_THROUGH

	[001f5458]
		001f540c: CONDITIONAL_JUMP
		001f5414: FALL_THROUGH
 	001f5458 jz 0x001f54a4
		001f54a4: CONDITIONAL_JUMP
		001f5460: FALL_THROUGH

	[001f5460]
		001f5458: FALL_THROUGH
 	001f5460 push ax
 	001f5468 mov mar,0x100020
 	001f5474 memread4 ax
 	001f547c lnot ax
 	001f5484 pop bx
 	001f548c land bx,ax
 	001f5498 mov ax,bx
		001f54a4: FALL_THROUGH

	[001f54a4]
		001f5458: CONDITIONAL_JUMP
		001f5460: FALL_THROUGH
 	001f54a4 jz 0x001f54f0
		001f54f0: CONDITIONAL_JUMP
		001f54ac: FALL_THROUGH

	[001f54ac]
		001f54a4: FALL_THROUGH
 	001f54ac push ax
 	001f54b4 mov mar,0x100024
 	001f54c0 memread4 ax
 	001f54c8 lnot ax
 	001f54d0 pop bx
 	001f54d8 land bx,ax
 	001f54e4 mov ax,bx
		001f54f0: FALL_THROUGH

	[001f54f0]
		001f54a4: CONDITIONAL_JUMP
		001f54ac: FALL_THROUGH
 	001f54f0 jz 0x001f553c
		001f553c: CONDITIONAL_JUMP
		001f54f8: FALL_THROUGH

	[001f54f8]
		001f54f0: FALL_THROUGH
 	001f54f8 push ax
 	001f5500 mov mar,0x100028
 	001f550c memread4 ax
 	001f5514 lnot ax
 	001f551c pop bx
 	001f5524 land bx,ax
 	001f5530 mov ax,bx
		001f553c: FALL_THROUGH

	[001f553c]
		001f54f0: CONDITIONAL_JUMP
		001f54f8: FALL_THROUGH
 	001f553c jz 0x001f5588
		001f5588: CONDITIONAL_JUMP
		001f5544: FALL_THROUGH

	[001f5544]
		001f553c: FALL_THROUGH
 	001f5544 push ax
 	001f554c mov mar,0x10002c
 	001f5558 memread4 ax
 	001f5560 lnot ax
 	001f5568 pop bx
 	001f5570 land bx,ax
 	001f557c mov ax,bx
		001f5588: FALL_THROUGH

	[001f5588]
		001f553c: CONDITIONAL_JUMP
		001f5544: FALL_THROUGH
 	001f5588 jz 0x001f55d8
		001f55d8: CONDITIONAL_JUMP
		001f5590: FALL_THROUGH

	[001f5590]
		001f5588: FALL_THROUGH
 	001f5590 mov ax,0x1
 	001f559c mov mar,0x100018
 	001f55a8 memwrite4 ax
 	001f55b0 mov ax,0x4
 	001f55bc mov mar,0x1000c4
 	001f55c8 memwrite4 ax
 	001f55d0 jmp 0x001f6700
		001f6700: UNCONDITIONAL_JUMP

	[001f55d8]
		001f5588: CONDITIONAL_JUMP
 	001f55d8 sourceline 0x2bfe
 	001f55e0 mov mar,0x100000
 	001f55ec memread4 ax
 	001f55f4 jz 0x001f5638
		001f5638: CONDITIONAL_JUMP
		001f55fc: FALL_THROUGH

	[001f55fc]
		001f55d8: FALL_THROUGH
 	001f55fc push ax
 	001f5604 mov mar,0x100004
 	001f5610 memread4 ax
 	001f5618 pop bx
 	001f5620 land bx,ax
 	001f562c mov ax,bx
		001f5638: FALL_THROUGH

	[001f5638]
		001f55d8: CONDITIONAL_JUMP
		001f55fc: FALL_THROUGH
 	001f5638 jz 0x001f567c
		001f567c: CONDITIONAL_JUMP
		001f5640: FALL_THROUGH

	[001f5640]
		001f5638: FALL_THROUGH
 	001f5640 push ax
 	001f5648 mov mar,0x100008
 	001f5654 memread4 ax
 	001f565c pop bx
 	001f5664 land bx,ax
 	001f5670 mov ax,bx
		001f567c: FALL_THROUGH

	[001f567c]
		001f5638: CONDITIONAL_JUMP
		001f5640: FALL_THROUGH
 	001f567c jz 0x001f56c0
		001f56c0: CONDITIONAL_JUMP
		001f5684: FALL_THROUGH

	[001f5684]
		001f567c: FALL_THROUGH
 	001f5684 push ax
 	001f568c mov mar,0x10000c
 	001f5698 memread4 ax
 	001f56a0 pop bx
 	001f56a8 land bx,ax
 	001f56b4 mov ax,bx
		001f56c0: FALL_THROUGH

	[001f56c0]
		001f567c: CONDITIONAL_JUMP
		001f5684: FALL_THROUGH
 	001f56c0 jz 0x001f5704
		001f5704: CONDITIONAL_JUMP
		001f56c8: FALL_THROUGH

	[001f56c8]
		001f56c0: FALL_THROUGH
 	001f56c8 push ax
 	001f56d0 mov mar,0x100010
 	001f56dc memread4 ax
 	001f56e4 pop bx
 	001f56ec land bx,ax
 	001f56f8 mov ax,bx
		001f5704: FALL_THROUGH

	[001f5704]
		001f56c0: CONDITIONAL_JUMP
		001f56c8: FALL_THROUGH
 	001f5704 jz 0x001f5748
		001f5748: CONDITIONAL_JUMP
		001f570c: FALL_THROUGH

	[001f570c]
		001f5704: FALL_THROUGH
 	001f570c push ax
 	001f5714 mov mar,0x100014
 	001f5720 memread4 ax
 	001f5728 pop bx
 	001f5730 land bx,ax
 	001f573c mov ax,bx
		001f5748: FALL_THROUGH

	[001f5748]
		001f5704: CONDITIONAL_JUMP
		001f570c: FALL_THROUGH
 	001f5748 jz 0x001f578c
		001f578c: CONDITIONAL_JUMP
		001f5750: FALL_THROUGH

	[001f5750]
		001f5748: FALL_THROUGH
 	001f5750 push ax
 	001f5758 mov mar,0x100018
 	001f5764 memread4 ax
 	001f576c pop bx
 	001f5774 land bx,ax
 	001f5780 mov ax,bx
		001f578c: FALL_THROUGH

	[001f578c]
		001f5748: CONDITIONAL_JUMP
		001f5750: FALL_THROUGH
 	001f578c jz 0x001f57d8
		001f57d8: CONDITIONAL_JUMP
		001f5794: FALL_THROUGH

	[001f5794]
		001f578c: FALL_THROUGH
 	001f5794 push ax
 	001f579c mov mar,0x10001c
 	001f57a8 memread4 ax
 	001f57b0 lnot ax
 	001f57b8 pop bx
 	001f57c0 land bx,ax
 	001f57cc mov ax,bx
		001f57d8: FALL_THROUGH

	[001f57d8]
		001f578c: CONDITIONAL_JUMP
		001f5794: FALL_THROUGH
 	001f57d8 jz 0x001f5824
		001f5824: CONDITIONAL_JUMP
		001f57e0: FALL_THROUGH

	[001f57e0]
		001f57d8: FALL_THROUGH
 	001f57e0 push ax
 	001f57e8 mov mar,0x100020
 	001f57f4 memread4 ax
 	001f57fc lnot ax
 	001f5804 pop bx
 	001f580c land bx,ax
 	001f5818 mov ax,bx
		001f5824: FALL_THROUGH

	[001f5824]
		001f57d8: CONDITIONAL_JUMP
		001f57e0: FALL_THROUGH
 	001f5824 jz 0x001f5870
		001f5870: CONDITIONAL_JUMP
		001f582c: FALL_THROUGH

	[001f582c]
		001f5824: FALL_THROUGH
 	001f582c push ax
 	001f5834 mov mar,0x100024
 	001f5840 memread4 ax
 	001f5848 lnot ax
 	001f5850 pop bx
 	001f5858 land bx,ax
 	001f5864 mov ax,bx
		001f5870: FALL_THROUGH

	[001f5870]
		001f5824: CONDITIONAL_JUMP
		001f582c: FALL_THROUGH
 	001f5870 jz 0x001f58bc
		001f58bc: CONDITIONAL_JUMP
		001f5878: FALL_THROUGH

	[001f5878]
		001f5870: FALL_THROUGH
 	001f5878 push ax
 	001f5880 mov mar,0x100028
 	001f588c memread4 ax
 	001f5894 lnot ax
 	001f589c pop bx
 	001f58a4 land bx,ax
 	001f58b0 mov ax,bx
		001f58bc: FALL_THROUGH

	[001f58bc]
		001f5870: CONDITIONAL_JUMP
		001f5878: FALL_THROUGH
 	001f58bc jz 0x001f5908
		001f5908: CONDITIONAL_JUMP
		001f58c4: FALL_THROUGH

	[001f58c4]
		001f58bc: FALL_THROUGH
 	001f58c4 push ax
 	001f58cc mov mar,0x10002c
 	001f58d8 memread4 ax
 	001f58e0 lnot ax
 	001f58e8 pop bx
 	001f58f0 land bx,ax
 	001f58fc mov ax,bx
		001f5908: FALL_THROUGH

	[001f5908]
		001f58bc: CONDITIONAL_JUMP
		001f58c4: FALL_THROUGH
 	001f5908 jz 0x001f5958
		001f5958: CONDITIONAL_JUMP
		001f5910: FALL_THROUGH

	[001f5910]
		001f5908: FALL_THROUGH
 	001f5910 mov ax,0x1
 	001f591c mov mar,0x10001c
 	001f5928 memwrite4 ax
 	001f5930 mov ax,0x4
 	001f593c mov mar,0x1000c8
 	001f5948 memwrite4 ax
 	001f5950 jmp 0x001f6700
		001f6700: UNCONDITIONAL_JUMP

	[001f5958]
		001f5908: CONDITIONAL_JUMP
 	001f5958 sourceline 0x2c03
 	001f5960 mov mar,0x100000
 	001f596c memread4 ax
 	001f5974 jz 0x001f59b8
		001f59b8: CONDITIONAL_JUMP
		001f597c: FALL_THROUGH

	[001f597c]
		001f5958: FALL_THROUGH
 	001f597c push ax
 	001f5984 mov mar,0x100004
 	001f5990 memread4 ax
 	001f5998 pop bx
 	001f59a0 land bx,ax
 	001f59ac mov ax,bx
		001f59b8: FALL_THROUGH

	[001f59b8]
		001f5958: CONDITIONAL_JUMP
		001f597c: FALL_THROUGH
 	001f59b8 jz 0x001f59fc
		001f59fc: CONDITIONAL_JUMP
		001f59c0: FALL_THROUGH

	[001f59c0]
		001f59b8: FALL_THROUGH
 	001f59c0 push ax
 	001f59c8 mov mar,0x100008
 	001f59d4 memread4 ax
 	001f59dc pop bx
 	001f59e4 land bx,ax
 	001f59f0 mov ax,bx
		001f59fc: FALL_THROUGH

	[001f59fc]
		001f59b8: CONDITIONAL_JUMP
		001f59c0: FALL_THROUGH
 	001f59fc jz 0x001f5a40
		001f5a40: CONDITIONAL_JUMP
		001f5a04: FALL_THROUGH

	[001f5a04]
		001f59fc: FALL_THROUGH
 	001f5a04 push ax
 	001f5a0c mov mar,0x10000c
 	001f5a18 memread4 ax
 	001f5a20 pop bx
 	001f5a28 land bx,ax
 	001f5a34 mov ax,bx
		001f5a40: FALL_THROUGH

	[001f5a40]
		001f59fc: CONDITIONAL_JUMP
		001f5a04: FALL_THROUGH
 	001f5a40 jz 0x001f5a84
		001f5a84: CONDITIONAL_JUMP
		001f5a48: FALL_THROUGH

	[001f5a48]
		001f5a40: FALL_THROUGH
 	001f5a48 push ax
 	001f5a50 mov mar,0x100010
 	001f5a5c memread4 ax
 	001f5a64 pop bx
 	001f5a6c land bx,ax
 	001f5a78 mov ax,bx
		001f5a84: FALL_THROUGH

	[001f5a84]
		001f5a40: CONDITIONAL_JUMP
		001f5a48: FALL_THROUGH
 	001f5a84 jz 0x001f5ac8
		001f5ac8: CONDITIONAL_JUMP
		001f5a8c: FALL_THROUGH

	[001f5a8c]
		001f5a84: FALL_THROUGH
 	001f5a8c push ax
 	001f5a94 mov mar,0x100014
 	001f5aa0 memread4 ax
 	001f5aa8 pop bx
 	001f5ab0 land bx,ax
 	001f5abc mov ax,bx
		001f5ac8: FALL_THROUGH

	[001f5ac8]
		001f5a84: CONDITIONAL_JUMP
		001f5a8c: FALL_THROUGH
 	001f5ac8 jz 0x001f5b0c
		001f5b0c: CONDITIONAL_JUMP
		001f5ad0: FALL_THROUGH

	[001f5ad0]
		001f5ac8: FALL_THROUGH
 	001f5ad0 push ax
 	001f5ad8 mov mar,0x100018
 	001f5ae4 memread4 ax
 	001f5aec pop bx
 	001f5af4 land bx,ax
 	001f5b00 mov ax,bx
		001f5b0c: FALL_THROUGH

	[001f5b0c]
		001f5ac8: CONDITIONAL_JUMP
		001f5ad0: FALL_THROUGH
 	001f5b0c jz 0x001f5b50
		001f5b50: CONDITIONAL_JUMP
		001f5b14: FALL_THROUGH

	[001f5b14]
		001f5b0c: FALL_THROUGH
 	001f5b14 push ax
 	001f5b1c mov mar,0x10001c
 	001f5b28 memread4 ax
 	001f5b30 pop bx
 	001f5b38 land bx,ax
 	001f5b44 mov ax,bx
		001f5b50: FALL_THROUGH

	[001f5b50]
		001f5b0c: CONDITIONAL_JUMP
		001f5b14: FALL_THROUGH
 	001f5b50 jz 0x001f5b9c
		001f5b9c: CONDITIONAL_JUMP
		001f5b58: FALL_THROUGH

	[001f5b58]
		001f5b50: FALL_THROUGH
 	001f5b58 push ax
 	001f5b60 mov mar,0x100020
 	001f5b6c memread4 ax
 	001f5b74 lnot ax
 	001f5b7c pop bx
 	001f5b84 land bx,ax
 	001f5b90 mov ax,bx
		001f5b9c: FALL_THROUGH

	[001f5b9c]
		001f5b50: CONDITIONAL_JUMP
		001f5b58: FALL_THROUGH
 	001f5b9c jz 0x001f5be8
		001f5be8: CONDITIONAL_JUMP
		001f5ba4: FALL_THROUGH

	[001f5ba4]
		001f5b9c: FALL_THROUGH
 	001f5ba4 push ax
 	001f5bac mov mar,0x100024
 	001f5bb8 memread4 ax
 	001f5bc0 lnot ax
 	001f5bc8 pop bx
 	001f5bd0 land bx,ax
 	001f5bdc mov ax,bx
		001f5be8: FALL_THROUGH

	[001f5be8]
		001f5b9c: CONDITIONAL_JUMP
		001f5ba4: FALL_THROUGH
 	001f5be8 jz 0x001f5c34
		001f5c34: CONDITIONAL_JUMP
		001f5bf0: FALL_THROUGH

	[001f5bf0]
		001f5be8: FALL_THROUGH
 	001f5bf0 push ax
 	001f5bf8 mov mar,0x100028
 	001f5c04 memread4 ax
 	001f5c0c lnot ax
 	001f5c14 pop bx
 	001f5c1c land bx,ax
 	001f5c28 mov ax,bx
		001f5c34: FALL_THROUGH

	[001f5c34]
		001f5be8: CONDITIONAL_JUMP
		001f5bf0: FALL_THROUGH
 	001f5c34 jz 0x001f5c80
		001f5c80: CONDITIONAL_JUMP
		001f5c3c: FALL_THROUGH

	[001f5c3c]
		001f5c34: FALL_THROUGH
 	001f5c3c push ax
 	001f5c44 mov mar,0x10002c
 	001f5c50 memread4 ax
 	001f5c58 lnot ax
 	001f5c60 pop bx
 	001f5c68 land bx,ax
 	001f5c74 mov ax,bx
		001f5c80: FALL_THROUGH

	[001f5c80]
		001f5c34: CONDITIONAL_JUMP
		001f5c3c: FALL_THROUGH
 	001f5c80 jz 0x001f5cd0
		001f5cd0: CONDITIONAL_JUMP
		001f5c88: FALL_THROUGH

	[001f5c88]
		001f5c80: FALL_THROUGH
 	001f5c88 mov ax,0x1
 	001f5c94 mov mar,0x100020
 	001f5ca0 memwrite4 ax
 	001f5ca8 mov ax,0x4
 	001f5cb4 mov mar,0x1000cc
 	001f5cc0 memwrite4 ax
 	001f5cc8 jmp 0x001f6700
		001f6700: UNCONDITIONAL_JUMP

	[001f5cd0]
		001f5c80: CONDITIONAL_JUMP
 	001f5cd0 sourceline 0x2c08
 	001f5cd8 mov mar,0x100000
 	001f5ce4 memread4 ax
 	001f5cec jz 0x001f5d30
		001f5d30: CONDITIONAL_JUMP
		001f5cf4: FALL_THROUGH

	[001f5cf4]
		001f5cd0: FALL_THROUGH
 	001f5cf4 push ax
 	001f5cfc mov mar,0x100004
 	001f5d08 memread4 ax
 	001f5d10 pop bx
 	001f5d18 land bx,ax
 	001f5d24 mov ax,bx
		001f5d30: FALL_THROUGH

	[001f5d30]
		001f5cd0: CONDITIONAL_JUMP
		001f5cf4: FALL_THROUGH
 	001f5d30 jz 0x001f5d74
		001f5d74: CONDITIONAL_JUMP
		001f5d38: FALL_THROUGH

	[001f5d38]
		001f5d30: FALL_THROUGH
 	001f5d38 push ax
 	001f5d40 mov mar,0x100008
 	001f5d4c memread4 ax
 	001f5d54 pop bx
 	001f5d5c land bx,ax
 	001f5d68 mov ax,bx
		001f5d74: FALL_THROUGH

	[001f5d74]
		001f5d30: CONDITIONAL_JUMP
		001f5d38: FALL_THROUGH
 	001f5d74 jz 0x001f5db8
		001f5db8: CONDITIONAL_JUMP
		001f5d7c: FALL_THROUGH

	[001f5d7c]
		001f5d74: FALL_THROUGH
 	001f5d7c push ax
 	001f5d84 mov mar,0x10000c
 	001f5d90 memread4 ax
 	001f5d98 pop bx
 	001f5da0 land bx,ax
 	001f5dac mov ax,bx
		001f5db8: FALL_THROUGH

	[001f5db8]
		001f5d74: CONDITIONAL_JUMP
		001f5d7c: FALL_THROUGH
 	001f5db8 jz 0x001f5dfc
		001f5dfc: CONDITIONAL_JUMP
		001f5dc0: FALL_THROUGH

	[001f5dc0]
		001f5db8: FALL_THROUGH
 	001f5dc0 push ax
 	001f5dc8 mov mar,0x100010
 	001f5dd4 memread4 ax
 	001f5ddc pop bx
 	001f5de4 land bx,ax
 	001f5df0 mov ax,bx
		001f5dfc: FALL_THROUGH

	[001f5dfc]
		001f5db8: CONDITIONAL_JUMP
		001f5dc0: FALL_THROUGH
 	001f5dfc jz 0x001f5e40
		001f5e40: CONDITIONAL_JUMP
		001f5e04: FALL_THROUGH

	[001f5e04]
		001f5dfc: FALL_THROUGH
 	001f5e04 push ax
 	001f5e0c mov mar,0x100014
 	001f5e18 memread4 ax
 	001f5e20 pop bx
 	001f5e28 land bx,ax
 	001f5e34 mov ax,bx
		001f5e40: FALL_THROUGH

	[001f5e40]
		001f5dfc: CONDITIONAL_JUMP
		001f5e04: FALL_THROUGH
 	001f5e40 jz 0x001f5e84
		001f5e84: CONDITIONAL_JUMP
		001f5e48: FALL_THROUGH

	[001f5e48]
		001f5e40: FALL_THROUGH
 	001f5e48 push ax
 	001f5e50 mov mar,0x100018
 	001f5e5c memread4 ax
 	001f5e64 pop bx
 	001f5e6c land bx,ax
 	001f5e78 mov ax,bx
		001f5e84: FALL_THROUGH

	[001f5e84]
		001f5e40: CONDITIONAL_JUMP
		001f5e48: FALL_THROUGH
 	001f5e84 jz 0x001f5ec8
		001f5ec8: CONDITIONAL_JUMP
		001f5e8c: FALL_THROUGH

	[001f5e8c]
		001f5e84: FALL_THROUGH
 	001f5e8c push ax
 	001f5e94 mov mar,0x10001c
 	001f5ea0 memread4 ax
 	001f5ea8 pop bx
 	001f5eb0 land bx,ax
 	001f5ebc mov ax,bx
		001f5ec8: FALL_THROUGH

	[001f5ec8]
		001f5e84: CONDITIONAL_JUMP
		001f5e8c: FALL_THROUGH
 	001f5ec8 jz 0x001f5f0c
		001f5f0c: CONDITIONAL_JUMP
		001f5ed0: FALL_THROUGH

	[001f5ed0]
		001f5ec8: FALL_THROUGH
 	001f5ed0 push ax
 	001f5ed8 mov mar,0x100020
 	001f5ee4 memread4 ax
 	001f5eec pop bx
 	001f5ef4 land bx,ax
 	001f5f00 mov ax,bx
		001f5f0c: FALL_THROUGH

	[001f5f0c]
		001f5ec8: CONDITIONAL_JUMP
		001f5ed0: FALL_THROUGH
 	001f5f0c jz 0x001f5f58
		001f5f58: CONDITIONAL_JUMP
		001f5f14: FALL_THROUGH

	[001f5f14]
		001f5f0c: FALL_THROUGH
 	001f5f14 push ax
 	001f5f1c mov mar,0x100024
 	001f5f28 memread4 ax
 	001f5f30 lnot ax
 	001f5f38 pop bx
 	001f5f40 land bx,ax
 	001f5f4c mov ax,bx
		001f5f58: FALL_THROUGH

	[001f5f58]
		001f5f0c: CONDITIONAL_JUMP
		001f5f14: FALL_THROUGH
 	001f5f58 jz 0x001f5fa4
		001f5fa4: CONDITIONAL_JUMP
		001f5f60: FALL_THROUGH

	[001f5f60]
		001f5f58: FALL_THROUGH
 	001f5f60 push ax
 	001f5f68 mov mar,0x100028
 	001f5f74 memread4 ax
 	001f5f7c lnot ax
 	001f5f84 pop bx
 	001f5f8c land bx,ax
 	001f5f98 mov ax,bx
		001f5fa4: FALL_THROUGH

	[001f5fa4]
		001f5f58: CONDITIONAL_JUMP
		001f5f60: FALL_THROUGH
 	001f5fa4 jz 0x001f5ff0
		001f5ff0: CONDITIONAL_JUMP
		001f5fac: FALL_THROUGH

	[001f5fac]
		001f5fa4: FALL_THROUGH
 	001f5fac push ax
 	001f5fb4 mov mar,0x10002c
 	001f5fc0 memread4 ax
 	001f5fc8 lnot ax
 	001f5fd0 pop bx
 	001f5fd8 land bx,ax
 	001f5fe4 mov ax,bx
		001f5ff0: FALL_THROUGH

	[001f5ff0]
		001f5fa4: CONDITIONAL_JUMP
		001f5fac: FALL_THROUGH
 	001f5ff0 jz 0x001f6040
		001f6040: CONDITIONAL_JUMP
		001f5ff8: FALL_THROUGH

	[001f5ff8]
		001f5ff0: FALL_THROUGH
 	001f5ff8 mov ax,0x1
 	001f6004 mov mar,0x100024
 	001f6010 memwrite4 ax
 	001f6018 mov ax,0x4
 	001f6024 mov mar,0x1000d0
 	001f6030 memwrite4 ax
 	001f6038 jmp 0x001f6700
		001f6700: UNCONDITIONAL_JUMP

	[001f6040]
		001f5ff0: CONDITIONAL_JUMP
 	001f6040 sourceline 0x2c0d
 	001f6048 mov mar,0x100000
 	001f6054 memread4 ax
 	001f605c jz 0x001f60a0
		001f60a0: CONDITIONAL_JUMP
		001f6064: FALL_THROUGH

	[001f6064]
		001f6040: FALL_THROUGH
 	001f6064 push ax
 	001f606c mov mar,0x100004
 	001f6078 memread4 ax
 	001f6080 pop bx
 	001f6088 land bx,ax
 	001f6094 mov ax,bx
		001f60a0: FALL_THROUGH

	[001f60a0]
		001f6040: CONDITIONAL_JUMP
		001f6064: FALL_THROUGH
 	001f60a0 jz 0x001f60e4
		001f60e4: CONDITIONAL_JUMP
		001f60a8: FALL_THROUGH

	[001f60a8]
		001f60a0: FALL_THROUGH
 	001f60a8 push ax
 	001f60b0 mov mar,0x100008
 	001f60bc memread4 ax
 	001f60c4 pop bx
 	001f60cc land bx,ax
 	001f60d8 mov ax,bx
		001f60e4: FALL_THROUGH

	[001f60e4]
		001f60a0: CONDITIONAL_JUMP
		001f60a8: FALL_THROUGH
 	001f60e4 jz 0x001f6128
		001f6128: CONDITIONAL_JUMP
		001f60ec: FALL_THROUGH

	[001f60ec]
		001f60e4: FALL_THROUGH
 	001f60ec push ax
 	001f60f4 mov mar,0x10000c
 	001f6100 memread4 ax
 	001f6108 pop bx
 	001f6110 land bx,ax
 	001f611c mov ax,bx
		001f6128: FALL_THROUGH

	[001f6128]
		001f60e4: CONDITIONAL_JUMP
		001f60ec: FALL_THROUGH
 	001f6128 jz 0x001f616c
		001f616c: CONDITIONAL_JUMP
		001f6130: FALL_THROUGH

	[001f6130]
		001f6128: FALL_THROUGH
 	001f6130 push ax
 	001f6138 mov mar,0x100010
 	001f6144 memread4 ax
 	001f614c pop bx
 	001f6154 land bx,ax
 	001f6160 mov ax,bx
		001f616c: FALL_THROUGH

	[001f616c]
		001f6128: CONDITIONAL_JUMP
		001f6130: FALL_THROUGH
 	001f616c jz 0x001f61b0
		001f61b0: CONDITIONAL_JUMP
		001f6174: FALL_THROUGH

	[001f6174]
		001f616c: FALL_THROUGH
 	001f6174 push ax
 	001f617c mov mar,0x100014
 	001f6188 memread4 ax
 	001f6190 pop bx
 	001f6198 land bx,ax
 	001f61a4 mov ax,bx
		001f61b0: FALL_THROUGH

	[001f61b0]
		001f616c: CONDITIONAL_JUMP
		001f6174: FALL_THROUGH
 	001f61b0 jz 0x001f61f4
		001f61f4: CONDITIONAL_JUMP
		001f61b8: FALL_THROUGH

	[001f61b8]
		001f61b0: FALL_THROUGH
 	001f61b8 push ax
 	001f61c0 mov mar,0x100018
 	001f61cc memread4 ax
 	001f61d4 pop bx
 	001f61dc land bx,ax
 	001f61e8 mov ax,bx
		001f61f4: FALL_THROUGH

	[001f61f4]
		001f61b0: CONDITIONAL_JUMP
		001f61b8: FALL_THROUGH
 	001f61f4 jz 0x001f6238
		001f6238: CONDITIONAL_JUMP
		001f61fc: FALL_THROUGH

	[001f61fc]
		001f61f4: FALL_THROUGH
 	001f61fc push ax
 	001f6204 mov mar,0x10001c
 	001f6210 memread4 ax
 	001f6218 pop bx
 	001f6220 land bx,ax
 	001f622c mov ax,bx
		001f6238: FALL_THROUGH

	[001f6238]
		001f61f4: CONDITIONAL_JUMP
		001f61fc: FALL_THROUGH
 	001f6238 jz 0x001f627c
		001f627c: CONDITIONAL_JUMP
		001f6240: FALL_THROUGH

	[001f6240]
		001f6238: FALL_THROUGH
 	001f6240 push ax
 	001f6248 mov mar,0x100020
 	001f6254 memread4 ax
 	001f625c pop bx
 	001f6264 land bx,ax
 	001f6270 mov ax,bx
		001f627c: FALL_THROUGH

	[001f627c]
		001f6238: CONDITIONAL_JUMP
		001f6240: FALL_THROUGH
 	001f627c jz 0x001f62c0
		001f62c0: CONDITIONAL_JUMP
		001f6284: FALL_THROUGH

	[001f6284]
		001f627c: FALL_THROUGH
 	001f6284 push ax
 	001f628c mov mar,0x100024
 	001f6298 memread4 ax
 	001f62a0 pop bx
 	001f62a8 land bx,ax
 	001f62b4 mov ax,bx
		001f62c0: FALL_THROUGH

	[001f62c0]
		001f627c: CONDITIONAL_JUMP
		001f6284: FALL_THROUGH
 	001f62c0 jz 0x001f630c
		001f630c: CONDITIONAL_JUMP
		001f62c8: FALL_THROUGH

	[001f62c8]
		001f62c0: FALL_THROUGH
 	001f62c8 push ax
 	001f62d0 mov mar,0x100028
 	001f62dc memread4 ax
 	001f62e4 lnot ax
 	001f62ec pop bx
 	001f62f4 land bx,ax
 	001f6300 mov ax,bx
		001f630c: FALL_THROUGH

	[001f630c]
		001f62c0: CONDITIONAL_JUMP
		001f62c8: FALL_THROUGH
 	001f630c jz 0x001f6358
		001f6358: CONDITIONAL_JUMP
		001f6314: FALL_THROUGH

	[001f6314]
		001f630c: FALL_THROUGH
 	001f6314 push ax
 	001f631c mov mar,0x10002c
 	001f6328 memread4 ax
 	001f6330 lnot ax
 	001f6338 pop bx
 	001f6340 land bx,ax
 	001f634c mov ax,bx
		001f6358: FALL_THROUGH

	[001f6358]
		001f630c: CONDITIONAL_JUMP
		001f6314: FALL_THROUGH
 	001f6358 jz 0x001f63a8
		001f63a8: CONDITIONAL_JUMP
		001f6360: FALL_THROUGH

	[001f6360]
		001f6358: FALL_THROUGH
 	001f6360 mov ax,0x1
 	001f636c mov mar,0x100028
 	001f6378 memwrite4 ax
 	001f6380 mov ax,0x4
 	001f638c mov mar,0x1000d4
 	001f6398 memwrite4 ax
 	001f63a0 jmp 0x001f6700
		001f6700: UNCONDITIONAL_JUMP

	[001f63a8]
		001f6358: CONDITIONAL_JUMP
 	001f63a8 sourceline 0x2c12
 	001f63b0 mov mar,0x100000
 	001f63bc memread4 ax
 	001f63c4 jz 0x001f6408
		001f6408: CONDITIONAL_JUMP
		001f63cc: FALL_THROUGH

	[001f63cc]
		001f63a8: FALL_THROUGH
 	001f63cc push ax
 	001f63d4 mov mar,0x100004
 	001f63e0 memread4 ax
 	001f63e8 pop bx
 	001f63f0 land bx,ax
 	001f63fc mov ax,bx
		001f6408: FALL_THROUGH

	[001f6408]
		001f63a8: CONDITIONAL_JUMP
		001f63cc: FALL_THROUGH
 	001f6408 jz 0x001f644c
		001f644c: CONDITIONAL_JUMP
		001f6410: FALL_THROUGH

	[001f6410]
		001f6408: FALL_THROUGH
 	001f6410 push ax
 	001f6418 mov mar,0x100008
 	001f6424 memread4 ax
 	001f642c pop bx
 	001f6434 land bx,ax
 	001f6440 mov ax,bx
		001f644c: FALL_THROUGH

	[001f644c]
		001f6408: CONDITIONAL_JUMP
		001f6410: FALL_THROUGH
 	001f644c jz 0x001f6490
		001f6490: CONDITIONAL_JUMP
		001f6454: FALL_THROUGH

	[001f6454]
		001f644c: FALL_THROUGH
 	001f6454 push ax
 	001f645c mov mar,0x10000c
 	001f6468 memread4 ax
 	001f6470 pop bx
 	001f6478 land bx,ax
 	001f6484 mov ax,bx
		001f6490: FALL_THROUGH

	[001f6490]
		001f644c: CONDITIONAL_JUMP
		001f6454: FALL_THROUGH
 	001f6490 jz 0x001f64d4
		001f64d4: CONDITIONAL_JUMP
		001f6498: FALL_THROUGH

	[001f6498]
		001f6490: FALL_THROUGH
 	001f6498 push ax
 	001f64a0 mov mar,0x100010
 	001f64ac memread4 ax
 	001f64b4 pop bx
 	001f64bc land bx,ax
 	001f64c8 mov ax,bx
		001f64d4: FALL_THROUGH

	[001f64d4]
		001f6490: CONDITIONAL_JUMP
		001f6498: FALL_THROUGH
 	001f64d4 jz 0x001f6518
		001f6518: CONDITIONAL_JUMP
		001f64dc: FALL_THROUGH

	[001f64dc]
		001f64d4: FALL_THROUGH
 	001f64dc push ax
 	001f64e4 mov mar,0x100014
 	001f64f0 memread4 ax
 	001f64f8 pop bx
 	001f6500 land bx,ax
 	001f650c mov ax,bx
		001f6518: FALL_THROUGH

	[001f6518]
		001f64d4: CONDITIONAL_JUMP
		001f64dc: FALL_THROUGH
 	001f6518 jz 0x001f655c
		001f655c: CONDITIONAL_JUMP
		001f6520: FALL_THROUGH

	[001f6520]
		001f6518: FALL_THROUGH
 	001f6520 push ax
 	001f6528 mov mar,0x100018
 	001f6534 memread4 ax
 	001f653c pop bx
 	001f6544 land bx,ax
 	001f6550 mov ax,bx
		001f655c: FALL_THROUGH

	[001f655c]
		001f6518: CONDITIONAL_JUMP
		001f6520: FALL_THROUGH
 	001f655c jz 0x001f65a0
		001f65a0: CONDITIONAL_JUMP
		001f6564: FALL_THROUGH

	[001f6564]
		001f655c: FALL_THROUGH
 	001f6564 push ax
 	001f656c mov mar,0x10001c
 	001f6578 memread4 ax
 	001f6580 pop bx
 	001f6588 land bx,ax
 	001f6594 mov ax,bx
		001f65a0: FALL_THROUGH

	[001f65a0]
		001f655c: CONDITIONAL_JUMP
		001f6564: FALL_THROUGH
 	001f65a0 jz 0x001f65e4
		001f65e4: CONDITIONAL_JUMP
		001f65a8: FALL_THROUGH

	[001f65a8]
		001f65a0: FALL_THROUGH
 	001f65a8 push ax
 	001f65b0 mov mar,0x100020
 	001f65bc memread4 ax
 	001f65c4 pop bx
 	001f65cc land bx,ax
 	001f65d8 mov ax,bx
		001f65e4: FALL_THROUGH

	[001f65e4]
		001f65a0: CONDITIONAL_JUMP
		001f65a8: FALL_THROUGH
 	001f65e4 jz 0x001f6628
		001f6628: CONDITIONAL_JUMP
		001f65ec: FALL_THROUGH

	[001f65ec]
		001f65e4: FALL_THROUGH
 	001f65ec push ax
 	001f65f4 mov mar,0x100024
 	001f6600 memread4 ax
 	001f6608 pop bx
 	001f6610 land bx,ax
 	001f661c mov ax,bx
		001f6628: FALL_THROUGH

	[001f6628]
		001f65e4: CONDITIONAL_JUMP
		001f65ec: FALL_THROUGH
 	001f6628 jz 0x001f666c
		001f666c: CONDITIONAL_JUMP
		001f6630: FALL_THROUGH

	[001f6630]
		001f6628: FALL_THROUGH
 	001f6630 push ax
 	001f6638 mov mar,0x100028
 	001f6644 memread4 ax
 	001f664c pop bx
 	001f6654 land bx,ax
 	001f6660 mov ax,bx
		001f666c: FALL_THROUGH

	[001f666c]
		001f6628: CONDITIONAL_JUMP
		001f6630: FALL_THROUGH
 	001f666c jz 0x001f66b8
		001f66b8: CONDITIONAL_JUMP
		001f6674: FALL_THROUGH

	[001f6674]
		001f666c: FALL_THROUGH
 	001f6674 push ax
 	001f667c mov mar,0x10002c
 	001f6688 memread4 ax
 	001f6690 lnot ax
 	001f6698 pop bx
 	001f66a0 land bx,ax
 	001f66ac mov ax,bx
		001f66b8: FALL_THROUGH

	[001f66b8]
		001f666c: CONDITIONAL_JUMP
		001f6674: FALL_THROUGH
 	001f66b8 jz 0x001f6700
		001f6700: CONDITIONAL_JUMP
		001f66c0: FALL_THROUGH

	[001f66c0]
		001f66b8: FALL_THROUGH
 	001f66c0 mov ax,0x1
 	001f66cc mov mar,0x10002c
 	001f66d8 memwrite4 ax
 	001f66e0 mov ax,0x4
 	001f66ec mov mar,0x1000d8
 	001f66f8 memwrite4 ax
		001f6700: FALL_THROUGH

	[001f6700]
		001f3fe8: UNCONDITIONAL_JUMP
		001f4398: UNCONDITIONAL_JUMP
		001f4740: UNCONDITIONAL_JUMP
		001f4ae0: UNCONDITIONAL_JUMP
		001f4e78: UNCONDITIONAL_JUMP
		001f5208: UNCONDITIONAL_JUMP
		001f5590: UNCONDITIONAL_JUMP
		001f5910: UNCONDITIONAL_JUMP
		001f5c88: UNCONDITIONAL_JUMP
		001f5ff8: UNCONDITIONAL_JUMP
		001f6360: UNCONDITIONAL_JUMP
		001f66b8: CONDITIONAL_JUMP
		001f66c0: FALL_THROUGH
 	001f6700 sourceline 0x2c16
 	001f6708 jmp 0x001f6864
		001f6864: UNCONDITIONAL_JUMP

	[001f6710]
		001f3c1c: CONDITIONAL_JUMP
 	001f6710 sourceline 0x2c19
 	001f6718 mov mar,0x32ef20
 	001f6724 memread4 ax
 	001f672c lnot ax
 	001f6734 jz 0x001f6864
		001f6864: CONDITIONAL_JUMP
		001f673c: FALL_THROUGH

	[001f673c]
		001f6710: FALL_THROUGH
 	001f673c sourceline 0x2c1b
 	001f6744 mov ax,0x1
 	001f6750 mov bx,ax
 	001f675c mov mar,0x3cef20
 	001f6768 mov ax,mar
 	001f6774 push op
 	001f677c mov op,ax
 	001f6784 farpush bx
 	001f678c setfuncargs 0x1
 	001f6794 mov ax,0x69ef20
 	001f67a0 farcall ax
 	001f67a8 farsubsp 0x1
 	001f67b0 pop op
 	001f67b8 sourceline 0x2c1c
 	001f67c0 push op
 	001f67c8 mov ax,0x2c77e7
 	001f67d4 farpush ax
 	001f67dc mov ax,0x138
 	001f67e8 farpush ax
 	001f67f0 mov ax,0x92
 	001f67fc farpush ax
 	001f6804 mov ax,0x0
 	001f6810 farpush ax
 	001f6818 mov mar,0x3cef20
 	001f6824 mov ax,mar
 	001f6830 mov op,ax
 	001f6838 setfuncargs 0x4
 	001f6840 mov ax,0x6aef20
 	001f684c farcall ax
 	001f6854 farsubsp 0x4
 	001f685c pop op
		001f6864: FALL_THROUGH

	[001f6864]
		001f3ba0: CONDITIONAL_JUMP
		001f6700: UNCONDITIONAL_JUMP
		001f6710: CONDITIONAL_JUMP
		001f673c: FALL_THROUGH
 	001f6864 sourceline 0x2c20
 	001f686c stackptr 0xc
 	001f6874 memread4 ax
 	001f687c push ax
 	001f6884 mov ax,0x2
 	001f6890 pop bx
 	001f6898 cmpeq bx,ax
 	001f68a4 mov ax,bx
 	001f68b0 jz 0x001f6a70
		001f6a70: CONDITIONAL_JUMP
		001f68b8: FALL_THROUGH

	[001f68b8]
		001f6864: FALL_THROUGH
 	001f68b8 sourceline 0x2c22
 	001f68c0 mov mar,0x626f20
 	001f68cc mov ax,mar
 	001f68d8 push op
 	001f68e0 mov op,ax
 	001f68e8 setfuncargs 0x0
 	001f68f0 mov ax,0x606f20
 	001f68fc farcall ax
 	001f6904 pop op
 	001f690c lnot ax
 	001f6914 jz 0x001f6a70
		001f6a70: CONDITIONAL_JUMP
		001f691c: FALL_THROUGH

	[001f691c]
		001f68b8: FALL_THROUGH
 	001f691c sourceline 0x2c24
 	001f6924 mov mar,0x32ef20
 	001f6930 memread4 ax
 	001f6938 lnot ax
 	001f6940 jz 0x001f6a70
		001f6a70: CONDITIONAL_JUMP
		001f6948: FALL_THROUGH

	[001f6948]
		001f691c: FALL_THROUGH
 	001f6948 sourceline 0x2c26
 	001f6950 mov ax,0x1
 	001f695c mov bx,ax
 	001f6968 mov mar,0x3cef20
 	001f6974 mov ax,mar
 	001f6980 push op
 	001f6988 mov op,ax
 	001f6990 farpush bx
 	001f6998 setfuncargs 0x1
 	001f69a0 mov ax,0x69ef20
 	001f69ac farcall ax
 	001f69b4 farsubsp 0x1
 	001f69bc pop op
 	001f69c4 sourceline 0x2c27
 	001f69cc push op
 	001f69d4 mov ax,0x2c7835
 	001f69e0 farpush ax
 	001f69e8 mov ax,0x138
 	001f69f4 farpush ax
 	001f69fc mov ax,0x92
 	001f6a08 farpush ax
 	001f6a10 mov ax,0x0
 	001f6a1c farpush ax
 	001f6a24 mov mar,0x3cef20
 	001f6a30 mov ax,mar
 	001f6a3c mov op,ax
 	001f6a44 setfuncargs 0x4
 	001f6a4c mov ax,0x6aef20
 	001f6a58 farcall ax
 	001f6a60 farsubsp 0x4
 	001f6a68 pop op
		001f6a70: FALL_THROUGH

	[001f6a70]
		001f6864: CONDITIONAL_JUMP
		001f68b8: CONDITIONAL_JUMP
		001f691c: CONDITIONAL_JUMP
		001f6948: FALL_THROUGH
 	001f6a70 sourceline 0x2c2b
 	001f6a78 mov ax,0x0
 	001f6a84 stackptr 0x8
 	001f6a8c memzerond
 	001f6a90 ret

btnCentre_OnClick$2:
	[001f6a94]
 	001f6a94 sourceline 0x2c2e
 	001f6a9c thisaddr
 	001f6aa4 stackptr 0x8
 	001f6aac memread4 ax
 	001f6ab4 meminit ax
 	001f6abc sourceline 0x2c2f
 	001f6ac4 stackptr 0xc
 	001f6acc memread4 ax
 	001f6ad4 push ax
 	001f6adc mov ax,0x1
 	001f6ae8 pop bx
 	001f6af0 cmpeq bx,ax
 	001f6afc mov ax,bx
 	001f6b08 jz 0x001f9758
		001f9758: CONDITIONAL_JUMP
		001f6b10: FALL_THROUGH

	[001f6b10]
		001f6a94: FALL_THROUGH
 	001f6b10 sourceline 0x2c31
*	001f6b18 mov mar,0x626f20
 	001f6b24 mov ax,mar
 	001f6b30 push op
 	001f6b38 mov op,ax
 	001f6b40 setfuncargs 0x0
 	001f6b48 mov ax,0x606f20
 	001f6b54 farcall ax
 	001f6b5c pop op
 	001f6b64 jz 0x001f9604
		001f9604: CONDITIONAL_JUMP
		001f6b6c: FALL_THROUGH

	[001f6b6c]
		001f6b10: FALL_THROUGH
 	001f6b6c sourceline 0x2c33
 	001f6b74 mov mar,0x100000
 	001f6b80 memread4 ax
 	001f6b88 lnot ax
 	001f6b90 jz 0x001f6bdc
		001f6bdc: CONDITIONAL_JUMP
		001f6b98: FALL_THROUGH

	[001f6b98]
		001f6b6c: FALL_THROUGH
 	001f6b98 push ax
 	001f6ba0 mov mar,0x100004
 	001f6bac memread4 ax
 	001f6bb4 lnot ax
 	001f6bbc pop bx
 	001f6bc4 land bx,ax
 	001f6bd0 mov ax,bx
		001f6bdc: FALL_THROUGH

	[001f6bdc]
		001f6b6c: CONDITIONAL_JUMP
		001f6b98: FALL_THROUGH
 	001f6bdc jz 0x001f6c28
		001f6c28: CONDITIONAL_JUMP
		001f6be4: FALL_THROUGH

	[001f6be4]
		001f6bdc: FALL_THROUGH
 	001f6be4 push ax
 	001f6bec mov mar,0x100008
 	001f6bf8 memread4 ax
 	001f6c00 lnot ax
 	001f6c08 pop bx
 	001f6c10 land bx,ax
 	001f6c1c mov ax,bx
		001f6c28: FALL_THROUGH

	[001f6c28]
		001f6bdc: CONDITIONAL_JUMP
		001f6be4: FALL_THROUGH
 	001f6c28 jz 0x001f6c74
		001f6c74: CONDITIONAL_JUMP
		001f6c30: FALL_THROUGH

	[001f6c30]
		001f6c28: FALL_THROUGH
 	001f6c30 push ax
 	001f6c38 mov mar,0x10000c
 	001f6c44 memread4 ax
 	001f6c4c lnot ax
 	001f6c54 pop bx
 	001f6c5c land bx,ax
 	001f6c68 mov ax,bx
		001f6c74: FALL_THROUGH

	[001f6c74]
		001f6c28: CONDITIONAL_JUMP
		001f6c30: FALL_THROUGH
 	001f6c74 jz 0x001f6cc0
		001f6cc0: CONDITIONAL_JUMP
		001f6c7c: FALL_THROUGH

	[001f6c7c]
		001f6c74: FALL_THROUGH
 	001f6c7c push ax
 	001f6c84 mov mar,0x100010
 	001f6c90 memread4 ax
 	001f6c98 lnot ax
 	001f6ca0 pop bx
 	001f6ca8 land bx,ax
 	001f6cb4 mov ax,bx
		001f6cc0: FALL_THROUGH

	[001f6cc0]
		001f6c74: CONDITIONAL_JUMP
		001f6c7c: FALL_THROUGH
 	001f6cc0 jz 0x001f6d0c
		001f6d0c: CONDITIONAL_JUMP
		001f6cc8: FALL_THROUGH

	[001f6cc8]
		001f6cc0: FALL_THROUGH
 	001f6cc8 push ax
 	001f6cd0 mov mar,0x100014
 	001f6cdc memread4 ax
 	001f6ce4 lnot ax
 	001f6cec pop bx
 	001f6cf4 land bx,ax
 	001f6d00 mov ax,bx
		001f6d0c: FALL_THROUGH

	[001f6d0c]
		001f6cc0: CONDITIONAL_JUMP
		001f6cc8: FALL_THROUGH
 	001f6d0c jz 0x001f6d58
		001f6d58: CONDITIONAL_JUMP
		001f6d14: FALL_THROUGH

	[001f6d14]
		001f6d0c: FALL_THROUGH
 	001f6d14 push ax
 	001f6d1c mov mar,0x100018
 	001f6d28 memread4 ax
 	001f6d30 lnot ax
 	001f6d38 pop bx
 	001f6d40 land bx,ax
 	001f6d4c mov ax,bx
		001f6d58: FALL_THROUGH

	[001f6d58]
		001f6d0c: CONDITIONAL_JUMP
		001f6d14: FALL_THROUGH
 	001f6d58 jz 0x001f6da4
		001f6da4: CONDITIONAL_JUMP
		001f6d60: FALL_THROUGH

	[001f6d60]
		001f6d58: FALL_THROUGH
 	001f6d60 push ax
 	001f6d68 mov mar,0x10001c
 	001f6d74 memread4 ax
 	001f6d7c lnot ax
 	001f6d84 pop bx
 	001f6d8c land bx,ax
 	001f6d98 mov ax,bx
		001f6da4: FALL_THROUGH

	[001f6da4]
		001f6d58: CONDITIONAL_JUMP
		001f6d60: FALL_THROUGH
 	001f6da4 jz 0x001f6df0
		001f6df0: CONDITIONAL_JUMP
		001f6dac: FALL_THROUGH

	[001f6dac]
		001f6da4: FALL_THROUGH
 	001f6dac push ax
 	001f6db4 mov mar,0x100020
 	001f6dc0 memread4 ax
 	001f6dc8 lnot ax
 	001f6dd0 pop bx
 	001f6dd8 land bx,ax
 	001f6de4 mov ax,bx
		001f6df0: FALL_THROUGH

	[001f6df0]
		001f6da4: CONDITIONAL_JUMP
		001f6dac: FALL_THROUGH
 	001f6df0 jz 0x001f6e3c
		001f6e3c: CONDITIONAL_JUMP
		001f6df8: FALL_THROUGH

	[001f6df8]
		001f6df0: FALL_THROUGH
 	001f6df8 push ax
 	001f6e00 mov mar,0x100024
 	001f6e0c memread4 ax
 	001f6e14 lnot ax
 	001f6e1c pop bx
 	001f6e24 land bx,ax
 	001f6e30 mov ax,bx
		001f6e3c: FALL_THROUGH

	[001f6e3c]
		001f6df0: CONDITIONAL_JUMP
		001f6df8: FALL_THROUGH
 	001f6e3c jz 0x001f6e88
		001f6e88: CONDITIONAL_JUMP
		001f6e44: FALL_THROUGH

	[001f6e44]
		001f6e3c: FALL_THROUGH
 	001f6e44 push ax
 	001f6e4c mov mar,0x100028
 	001f6e58 memread4 ax
 	001f6e60 lnot ax
 	001f6e68 pop bx
 	001f6e70 land bx,ax
 	001f6e7c mov ax,bx
		001f6e88: FALL_THROUGH

	[001f6e88]
		001f6e3c: CONDITIONAL_JUMP
		001f6e44: FALL_THROUGH
 	001f6e88 jz 0x001f6ed4
		001f6ed4: CONDITIONAL_JUMP
		001f6e90: FALL_THROUGH

	[001f6e90]
		001f6e88: FALL_THROUGH
 	001f6e90 push ax
 	001f6e98 mov mar,0x10002c
 	001f6ea4 memread4 ax
 	001f6eac lnot ax
 	001f6eb4 pop bx
 	001f6ebc land bx,ax
 	001f6ec8 mov ax,bx
		001f6ed4: FALL_THROUGH

	[001f6ed4]
		001f6e88: CONDITIONAL_JUMP
		001f6e90: FALL_THROUGH
 	001f6ed4 jz 0x001f6f24
		001f6f24: CONDITIONAL_JUMP
		001f6edc: FALL_THROUGH

	[001f6edc]
		001f6ed4: FALL_THROUGH
 	001f6edc mov ax,0x1
 	001f6ee8 mov mar,0x100000
 	001f6ef4 memwrite4 ax
 	001f6efc mov ax,0x5
 	001f6f08 mov mar,0x1000ac
 	001f6f14 memwrite4 ax
 	001f6f1c jmp 0x001f95f4
		001f95f4: UNCONDITIONAL_JUMP

	[001f6f24]
		001f6ed4: CONDITIONAL_JUMP
 	001f6f24 sourceline 0x2c38
 	001f6f2c mov mar,0x100000
 	001f6f38 memread4 ax
 	001f6f40 jz 0x001f6f8c
		001f6f8c: CONDITIONAL_JUMP
		001f6f48: FALL_THROUGH

	[001f6f48]
		001f6f24: FALL_THROUGH
 	001f6f48 push ax
 	001f6f50 mov mar,0x100004
 	001f6f5c memread4 ax
 	001f6f64 lnot ax
 	001f6f6c pop bx
 	001f6f74 land bx,ax
 	001f6f80 mov ax,bx
		001f6f8c: FALL_THROUGH

	[001f6f8c]
		001f6f24: CONDITIONAL_JUMP
		001f6f48: FALL_THROUGH
 	001f6f8c jz 0x001f6fd8
		001f6fd8: CONDITIONAL_JUMP
		001f6f94: FALL_THROUGH

	[001f6f94]
		001f6f8c: FALL_THROUGH
 	001f6f94 push ax
 	001f6f9c mov mar,0x100008
 	001f6fa8 memread4 ax
 	001f6fb0 lnot ax
 	001f6fb8 pop bx
 	001f6fc0 land bx,ax
 	001f6fcc mov ax,bx
		001f6fd8: FALL_THROUGH

	[001f6fd8]
		001f6f8c: CONDITIONAL_JUMP
		001f6f94: FALL_THROUGH
 	001f6fd8 jz 0x001f7024
		001f7024: CONDITIONAL_JUMP
		001f6fe0: FALL_THROUGH

	[001f6fe0]
		001f6fd8: FALL_THROUGH
 	001f6fe0 push ax
 	001f6fe8 mov mar,0x10000c
 	001f6ff4 memread4 ax
 	001f6ffc lnot ax
 	001f7004 pop bx
 	001f700c land bx,ax
 	001f7018 mov ax,bx
		001f7024: FALL_THROUGH

	[001f7024]
		001f6fd8: CONDITIONAL_JUMP
		001f6fe0: FALL_THROUGH
 	001f7024 jz 0x001f7070
		001f7070: CONDITIONAL_JUMP
		001f702c: FALL_THROUGH

	[001f702c]
		001f7024: FALL_THROUGH
 	001f702c push ax
 	001f7034 mov mar,0x100010
 	001f7040 memread4 ax
 	001f7048 lnot ax
 	001f7050 pop bx
 	001f7058 land bx,ax
 	001f7064 mov ax,bx
		001f7070: FALL_THROUGH

	[001f7070]
		001f7024: CONDITIONAL_JUMP
		001f702c: FALL_THROUGH
 	001f7070 jz 0x001f70bc
		001f70bc: CONDITIONAL_JUMP
		001f7078: FALL_THROUGH

	[001f7078]
		001f7070: FALL_THROUGH
 	001f7078 push ax
 	001f7080 mov mar,0x100014
 	001f708c memread4 ax
 	001f7094 lnot ax
 	001f709c pop bx
 	001f70a4 land bx,ax
 	001f70b0 mov ax,bx
		001f70bc: FALL_THROUGH

	[001f70bc]
		001f7070: CONDITIONAL_JUMP
		001f7078: FALL_THROUGH
 	001f70bc jz 0x001f7108
		001f7108: CONDITIONAL_JUMP
		001f70c4: FALL_THROUGH

	[001f70c4]
		001f70bc: FALL_THROUGH
 	001f70c4 push ax
 	001f70cc mov mar,0x100018
 	001f70d8 memread4 ax
 	001f70e0 lnot ax
 	001f70e8 pop bx
 	001f70f0 land bx,ax
 	001f70fc mov ax,bx
		001f7108: FALL_THROUGH

	[001f7108]
		001f70bc: CONDITIONAL_JUMP
		001f70c4: FALL_THROUGH
 	001f7108 jz 0x001f7154
		001f7154: CONDITIONAL_JUMP
		001f7110: FALL_THROUGH

	[001f7110]
		001f7108: FALL_THROUGH
 	001f7110 push ax
 	001f7118 mov mar,0x10001c
 	001f7124 memread4 ax
 	001f712c lnot ax
 	001f7134 pop bx
 	001f713c land bx,ax
 	001f7148 mov ax,bx
		001f7154: FALL_THROUGH

	[001f7154]
		001f7108: CONDITIONAL_JUMP
		001f7110: FALL_THROUGH
 	001f7154 jz 0x001f71a0
		001f71a0: CONDITIONAL_JUMP
		001f715c: FALL_THROUGH

	[001f715c]
		001f7154: FALL_THROUGH
 	001f715c push ax
 	001f7164 mov mar,0x100020
 	001f7170 memread4 ax
 	001f7178 lnot ax
 	001f7180 pop bx
 	001f7188 land bx,ax
 	001f7194 mov ax,bx
		001f71a0: FALL_THROUGH

	[001f71a0]
		001f7154: CONDITIONAL_JUMP
		001f715c: FALL_THROUGH
 	001f71a0 jz 0x001f71ec
		001f71ec: CONDITIONAL_JUMP
		001f71a8: FALL_THROUGH

	[001f71a8]
		001f71a0: FALL_THROUGH
 	001f71a8 push ax
 	001f71b0 mov mar,0x100024
 	001f71bc memread4 ax
 	001f71c4 lnot ax
 	001f71cc pop bx
 	001f71d4 land bx,ax
 	001f71e0 mov ax,bx
		001f71ec: FALL_THROUGH

	[001f71ec]
		001f71a0: CONDITIONAL_JUMP
		001f71a8: FALL_THROUGH
 	001f71ec jz 0x001f7238
		001f7238: CONDITIONAL_JUMP
		001f71f4: FALL_THROUGH

	[001f71f4]
		001f71ec: FALL_THROUGH
 	001f71f4 push ax
 	001f71fc mov mar,0x100028
 	001f7208 memread4 ax
 	001f7210 lnot ax
 	001f7218 pop bx
 	001f7220 land bx,ax
 	001f722c mov ax,bx
		001f7238: FALL_THROUGH

	[001f7238]
		001f71ec: CONDITIONAL_JUMP
		001f71f4: FALL_THROUGH
 	001f7238 jz 0x001f7284
		001f7284: CONDITIONAL_JUMP
		001f7240: FALL_THROUGH

	[001f7240]
		001f7238: FALL_THROUGH
 	001f7240 push ax
 	001f7248 mov mar,0x10002c
 	001f7254 memread4 ax
 	001f725c lnot ax
 	001f7264 pop bx
 	001f726c land bx,ax
 	001f7278 mov ax,bx
		001f7284: FALL_THROUGH

	[001f7284]
		001f7238: CONDITIONAL_JUMP
		001f7240: FALL_THROUGH
 	001f7284 jz 0x001f72d4
		001f72d4: CONDITIONAL_JUMP
		001f728c: FALL_THROUGH

	[001f728c]
		001f7284: FALL_THROUGH
 	001f728c mov ax,0x1
 	001f7298 mov mar,0x100004
 	001f72a4 memwrite4 ax
 	001f72ac mov ax,0x5
 	001f72b8 mov mar,0x1000b0
 	001f72c4 memwrite4 ax
 	001f72cc jmp 0x001f95f4
		001f95f4: UNCONDITIONAL_JUMP

	[001f72d4]
		001f7284: CONDITIONAL_JUMP
 	001f72d4 sourceline 0x2c3d
 	001f72dc mov mar,0x100000
 	001f72e8 memread4 ax
 	001f72f0 jz 0x001f7334
		001f7334: CONDITIONAL_JUMP
		001f72f8: FALL_THROUGH

	[001f72f8]
		001f72d4: FALL_THROUGH
 	001f72f8 push ax
 	001f7300 mov mar,0x100004
 	001f730c memread4 ax
 	001f7314 pop bx
 	001f731c land bx,ax
 	001f7328 mov ax,bx
		001f7334: FALL_THROUGH

	[001f7334]
		001f72d4: CONDITIONAL_JUMP
		001f72f8: FALL_THROUGH
 	001f7334 jz 0x001f7380
		001f7380: CONDITIONAL_JUMP
		001f733c: FALL_THROUGH

	[001f733c]
		001f7334: FALL_THROUGH
 	001f733c push ax
 	001f7344 mov mar,0x100008
 	001f7350 memread4 ax
 	001f7358 lnot ax
 	001f7360 pop bx
 	001f7368 land bx,ax
 	001f7374 mov ax,bx
		001f7380: FALL_THROUGH

	[001f7380]
		001f7334: CONDITIONAL_JUMP
		001f733c: FALL_THROUGH
 	001f7380 jz 0x001f73cc
		001f73cc: CONDITIONAL_JUMP
		001f7388: FALL_THROUGH

	[001f7388]
		001f7380: FALL_THROUGH
 	001f7388 push ax
 	001f7390 mov mar,0x10000c
 	001f739c memread4 ax
 	001f73a4 lnot ax
 	001f73ac pop bx
 	001f73b4 land bx,ax
 	001f73c0 mov ax,bx
		001f73cc: FALL_THROUGH

	[001f73cc]
		001f7380: CONDITIONAL_JUMP
		001f7388: FALL_THROUGH
 	001f73cc jz 0x001f7418
		001f7418: CONDITIONAL_JUMP
		001f73d4: FALL_THROUGH

	[001f73d4]
		001f73cc: FALL_THROUGH
 	001f73d4 push ax
 	001f73dc mov mar,0x100010
 	001f73e8 memread4 ax
 	001f73f0 lnot ax
 	001f73f8 pop bx
 	001f7400 land bx,ax
 	001f740c mov ax,bx
		001f7418: FALL_THROUGH

	[001f7418]
		001f73cc: CONDITIONAL_JUMP
		001f73d4: FALL_THROUGH
 	001f7418 jz 0x001f7464
		001f7464: CONDITIONAL_JUMP
		001f7420: FALL_THROUGH

	[001f7420]
		001f7418: FALL_THROUGH
 	001f7420 push ax
 	001f7428 mov mar,0x100014
 	001f7434 memread4 ax
 	001f743c lnot ax
 	001f7444 pop bx
 	001f744c land bx,ax
 	001f7458 mov ax,bx
		001f7464: FALL_THROUGH

	[001f7464]
		001f7418: CONDITIONAL_JUMP
		001f7420: FALL_THROUGH
 	001f7464 jz 0x001f74b0
		001f74b0: CONDITIONAL_JUMP
		001f746c: FALL_THROUGH

	[001f746c]
		001f7464: FALL_THROUGH
 	001f746c push ax
 	001f7474 mov mar,0x100018
 	001f7480 memread4 ax
 	001f7488 lnot ax
 	001f7490 pop bx
 	001f7498 land bx,ax
 	001f74a4 mov ax,bx
		001f74b0: FALL_THROUGH

	[001f74b0]
		001f7464: CONDITIONAL_JUMP
		001f746c: FALL_THROUGH
 	001f74b0 jz 0x001f74fc
		001f74fc: CONDITIONAL_JUMP
		001f74b8: FALL_THROUGH

	[001f74b8]
		001f74b0: FALL_THROUGH
 	001f74b8 push ax
 	001f74c0 mov mar,0x10001c
 	001f74cc memread4 ax
 	001f74d4 lnot ax
 	001f74dc pop bx
 	001f74e4 land bx,ax
 	001f74f0 mov ax,bx
		001f74fc: FALL_THROUGH

	[001f74fc]
		001f74b0: CONDITIONAL_JUMP
		001f74b8: FALL_THROUGH
 	001f74fc jz 0x001f7548
		001f7548: CONDITIONAL_JUMP
		001f7504: FALL_THROUGH

	[001f7504]
		001f74fc: FALL_THROUGH
 	001f7504 push ax
 	001f750c mov mar,0x100020
 	001f7518 memread4 ax
 	001f7520 lnot ax
 	001f7528 pop bx
 	001f7530 land bx,ax
 	001f753c mov ax,bx
		001f7548: FALL_THROUGH

	[001f7548]
		001f74fc: CONDITIONAL_JUMP
		001f7504: FALL_THROUGH
 	001f7548 jz 0x001f7594
		001f7594: CONDITIONAL_JUMP
		001f7550: FALL_THROUGH

	[001f7550]
		001f7548: FALL_THROUGH
 	001f7550 push ax
 	001f7558 mov mar,0x100024
 	001f7564 memread4 ax
 	001f756c lnot ax
 	001f7574 pop bx
 	001f757c land bx,ax
 	001f7588 mov ax,bx
		001f7594: FALL_THROUGH

	[001f7594]
		001f7548: CONDITIONAL_JUMP
		001f7550: FALL_THROUGH
 	001f7594 jz 0x001f75e0
		001f75e0: CONDITIONAL_JUMP
		001f759c: FALL_THROUGH

	[001f759c]
		001f7594: FALL_THROUGH
 	001f759c push ax
 	001f75a4 mov mar,0x100028
 	001f75b0 memread4 ax
 	001f75b8 lnot ax
 	001f75c0 pop bx
 	001f75c8 land bx,ax
 	001f75d4 mov ax,bx
		001f75e0: FALL_THROUGH

	[001f75e0]
		001f7594: CONDITIONAL_JUMP
		001f759c: FALL_THROUGH
 	001f75e0 jz 0x001f762c
		001f762c: CONDITIONAL_JUMP
		001f75e8: FALL_THROUGH

	[001f75e8]
		001f75e0: FALL_THROUGH
 	001f75e8 push ax
 	001f75f0 mov mar,0x10002c
 	001f75fc memread4 ax
 	001f7604 lnot ax
 	001f760c pop bx
 	001f7614 land bx,ax
 	001f7620 mov ax,bx
		001f762c: FALL_THROUGH

	[001f762c]
		001f75e0: CONDITIONAL_JUMP
		001f75e8: FALL_THROUGH
 	001f762c jz 0x001f767c
		001f767c: CONDITIONAL_JUMP
		001f7634: FALL_THROUGH

	[001f7634]
		001f762c: FALL_THROUGH
 	001f7634 mov ax,0x1
 	001f7640 mov mar,0x100008
 	001f764c memwrite4 ax
 	001f7654 mov ax,0x5
 	001f7660 mov mar,0x1000b4
 	001f766c memwrite4 ax
 	001f7674 jmp 0x001f95f4
		001f95f4: UNCONDITIONAL_JUMP

	[001f767c]
		001f762c: CONDITIONAL_JUMP
 	001f767c sourceline 0x2c42
 	001f7684 mov mar,0x100000
 	001f7690 memread4 ax
 	001f7698 jz 0x001f76dc
		001f76dc: CONDITIONAL_JUMP
		001f76a0: FALL_THROUGH

	[001f76a0]
		001f767c: FALL_THROUGH
 	001f76a0 push ax
 	001f76a8 mov mar,0x100004
 	001f76b4 memread4 ax
 	001f76bc pop bx
 	001f76c4 land bx,ax
 	001f76d0 mov ax,bx
		001f76dc: FALL_THROUGH

	[001f76dc]
		001f767c: CONDITIONAL_JUMP
		001f76a0: FALL_THROUGH
 	001f76dc jz 0x001f7720
		001f7720: CONDITIONAL_JUMP
		001f76e4: FALL_THROUGH

	[001f76e4]
		001f76dc: FALL_THROUGH
 	001f76e4 push ax
 	001f76ec mov mar,0x100008
 	001f76f8 memread4 ax
 	001f7700 pop bx
 	001f7708 land bx,ax
 	001f7714 mov ax,bx
		001f7720: FALL_THROUGH

	[001f7720]
		001f76dc: CONDITIONAL_JUMP
		001f76e4: FALL_THROUGH
 	001f7720 jz 0x001f776c
		001f776c: CONDITIONAL_JUMP
		001f7728: FALL_THROUGH

	[001f7728]
		001f7720: FALL_THROUGH
 	001f7728 push ax
 	001f7730 mov mar,0x10000c
 	001f773c memread4 ax
 	001f7744 lnot ax
 	001f774c pop bx
 	001f7754 land bx,ax
 	001f7760 mov ax,bx
		001f776c: FALL_THROUGH

	[001f776c]
		001f7720: CONDITIONAL_JUMP
		001f7728: FALL_THROUGH
 	001f776c jz 0x001f77b8
		001f77b8: CONDITIONAL_JUMP
		001f7774: FALL_THROUGH

	[001f7774]
		001f776c: FALL_THROUGH
 	001f7774 push ax
 	001f777c mov mar,0x100010
 	001f7788 memread4 ax
 	001f7790 lnot ax
 	001f7798 pop bx
 	001f77a0 land bx,ax
 	001f77ac mov ax,bx
		001f77b8: FALL_THROUGH

	[001f77b8]
		001f776c: CONDITIONAL_JUMP
		001f7774: FALL_THROUGH
 	001f77b8 jz 0x001f7804
		001f7804: CONDITIONAL_JUMP
		001f77c0: FALL_THROUGH

	[001f77c0]
		001f77b8: FALL_THROUGH
 	001f77c0 push ax
 	001f77c8 mov mar,0x100014
 	001f77d4 memread4 ax
 	001f77dc lnot ax
 	001f77e4 pop bx
 	001f77ec land bx,ax
 	001f77f8 mov ax,bx
		001f7804: FALL_THROUGH

	[001f7804]
		001f77b8: CONDITIONAL_JUMP
		001f77c0: FALL_THROUGH
 	001f7804 jz 0x001f7850
		001f7850: CONDITIONAL_JUMP
		001f780c: FALL_THROUGH

	[001f780c]
		001f7804: FALL_THROUGH
 	001f780c push ax
 	001f7814 mov mar,0x100018
 	001f7820 memread4 ax
 	001f7828 lnot ax
 	001f7830 pop bx
 	001f7838 land bx,ax
 	001f7844 mov ax,bx
		001f7850: FALL_THROUGH

	[001f7850]
		001f7804: CONDITIONAL_JUMP
		001f780c: FALL_THROUGH
 	001f7850 jz 0x001f789c
		001f789c: CONDITIONAL_JUMP
		001f7858: FALL_THROUGH

	[001f7858]
		001f7850: FALL_THROUGH
 	001f7858 push ax
 	001f7860 mov mar,0x10001c
 	001f786c memread4 ax
 	001f7874 lnot ax
 	001f787c pop bx
 	001f7884 land bx,ax
 	001f7890 mov ax,bx
		001f789c: FALL_THROUGH

	[001f789c]
		001f7850: CONDITIONAL_JUMP
		001f7858: FALL_THROUGH
 	001f789c jz 0x001f78e8
		001f78e8: CONDITIONAL_JUMP
		001f78a4: FALL_THROUGH

	[001f78a4]
		001f789c: FALL_THROUGH
 	001f78a4 push ax
 	001f78ac mov mar,0x100020
 	001f78b8 memread4 ax
 	001f78c0 lnot ax
 	001f78c8 pop bx
 	001f78d0 land bx,ax
 	001f78dc mov ax,bx
		001f78e8: FALL_THROUGH

	[001f78e8]
		001f789c: CONDITIONAL_JUMP
		001f78a4: FALL_THROUGH
 	001f78e8 jz 0x001f7934
		001f7934: CONDITIONAL_JUMP
		001f78f0: FALL_THROUGH

	[001f78f0]
		001f78e8: FALL_THROUGH
 	001f78f0 push ax
 	001f78f8 mov mar,0x100024
 	001f7904 memread4 ax
 	001f790c lnot ax
 	001f7914 pop bx
 	001f791c land bx,ax
 	001f7928 mov ax,bx
		001f7934: FALL_THROUGH

	[001f7934]
		001f78e8: CONDITIONAL_JUMP
		001f78f0: FALL_THROUGH
 	001f7934 jz 0x001f7980
		001f7980: CONDITIONAL_JUMP
		001f793c: FALL_THROUGH

	[001f793c]
		001f7934: FALL_THROUGH
 	001f793c push ax
 	001f7944 mov mar,0x100028
 	001f7950 memread4 ax
 	001f7958 lnot ax
 	001f7960 pop bx
 	001f7968 land bx,ax
 	001f7974 mov ax,bx
		001f7980: FALL_THROUGH

	[001f7980]
		001f7934: CONDITIONAL_JUMP
		001f793c: FALL_THROUGH
 	001f7980 jz 0x001f79cc
		001f79cc: CONDITIONAL_JUMP
		001f7988: FALL_THROUGH

	[001f7988]
		001f7980: FALL_THROUGH
 	001f7988 push ax
 	001f7990 mov mar,0x10002c
 	001f799c memread4 ax
 	001f79a4 lnot ax
 	001f79ac pop bx
 	001f79b4 land bx,ax
 	001f79c0 mov ax,bx
		001f79cc: FALL_THROUGH

	[001f79cc]
		001f7980: CONDITIONAL_JUMP
		001f7988: FALL_THROUGH
 	001f79cc jz 0x001f7a1c
		001f7a1c: CONDITIONAL_JUMP
		001f79d4: FALL_THROUGH

	[001f79d4]
		001f79cc: FALL_THROUGH
 	001f79d4 mov ax,0x1
 	001f79e0 mov mar,0x10000c
 	001f79ec memwrite4 ax
 	001f79f4 mov ax,0x5
 	001f7a00 mov mar,0x1000b8
 	001f7a0c memwrite4 ax
 	001f7a14 jmp 0x001f95f4
		001f95f4: UNCONDITIONAL_JUMP

	[001f7a1c]
		001f79cc: CONDITIONAL_JUMP
 	001f7a1c sourceline 0x2c47
 	001f7a24 mov mar,0x100000
 	001f7a30 memread4 ax
 	001f7a38 jz 0x001f7a7c
		001f7a7c: CONDITIONAL_JUMP
		001f7a40: FALL_THROUGH

	[001f7a40]
		001f7a1c: FALL_THROUGH
 	001f7a40 push ax
 	001f7a48 mov mar,0x100004
 	001f7a54 memread4 ax
 	001f7a5c pop bx
 	001f7a64 land bx,ax
 	001f7a70 mov ax,bx
		001f7a7c: FALL_THROUGH

	[001f7a7c]
		001f7a1c: CONDITIONAL_JUMP
		001f7a40: FALL_THROUGH
 	001f7a7c jz 0x001f7ac0
		001f7ac0: CONDITIONAL_JUMP
		001f7a84: FALL_THROUGH

	[001f7a84]
		001f7a7c: FALL_THROUGH
 	001f7a84 push ax
 	001f7a8c mov mar,0x100008
 	001f7a98 memread4 ax
 	001f7aa0 pop bx
 	001f7aa8 land bx,ax
 	001f7ab4 mov ax,bx
		001f7ac0: FALL_THROUGH

	[001f7ac0]
		001f7a7c: CONDITIONAL_JUMP
		001f7a84: FALL_THROUGH
 	001f7ac0 jz 0x001f7b04
		001f7b04: CONDITIONAL_JUMP
		001f7ac8: FALL_THROUGH

	[001f7ac8]
		001f7ac0: FALL_THROUGH
 	001f7ac8 push ax
 	001f7ad0 mov mar,0x10000c
 	001f7adc memread4 ax
 	001f7ae4 pop bx
 	001f7aec land bx,ax
 	001f7af8 mov ax,bx
		001f7b04: FALL_THROUGH

	[001f7b04]
		001f7ac0: CONDITIONAL_JUMP
		001f7ac8: FALL_THROUGH
 	001f7b04 jz 0x001f7b50
		001f7b50: CONDITIONAL_JUMP
		001f7b0c: FALL_THROUGH

	[001f7b0c]
		001f7b04: FALL_THROUGH
 	001f7b0c push ax
 	001f7b14 mov mar,0x100010
 	001f7b20 memread4 ax
 	001f7b28 lnot ax
 	001f7b30 pop bx
 	001f7b38 land bx,ax
 	001f7b44 mov ax,bx
		001f7b50: FALL_THROUGH

	[001f7b50]
		001f7b04: CONDITIONAL_JUMP
		001f7b0c: FALL_THROUGH
 	001f7b50 jz 0x001f7b9c
		001f7b9c: CONDITIONAL_JUMP
		001f7b58: FALL_THROUGH

	[001f7b58]
		001f7b50: FALL_THROUGH
 	001f7b58 push ax
 	001f7b60 mov mar,0x100014
 	001f7b6c memread4 ax
 	001f7b74 lnot ax
 	001f7b7c pop bx
 	001f7b84 land bx,ax
 	001f7b90 mov ax,bx
		001f7b9c: FALL_THROUGH

	[001f7b9c]
		001f7b50: CONDITIONAL_JUMP
		001f7b58: FALL_THROUGH
 	001f7b9c jz 0x001f7be8
		001f7be8: CONDITIONAL_JUMP
		001f7ba4: FALL_THROUGH

	[001f7ba4]
		001f7b9c: FALL_THROUGH
 	001f7ba4 push ax
 	001f7bac mov mar,0x100018
 	001f7bb8 memread4 ax
 	001f7bc0 lnot ax
 	001f7bc8 pop bx
 	001f7bd0 land bx,ax
 	001f7bdc mov ax,bx
		001f7be8: FALL_THROUGH

	[001f7be8]
		001f7b9c: CONDITIONAL_JUMP
		001f7ba4: FALL_THROUGH
 	001f7be8 jz 0x001f7c34
		001f7c34: CONDITIONAL_JUMP
		001f7bf0: FALL_THROUGH

	[001f7bf0]
		001f7be8: FALL_THROUGH
 	001f7bf0 push ax
 	001f7bf8 mov mar,0x10001c
 	001f7c04 memread4 ax
 	001f7c0c lnot ax
 	001f7c14 pop bx
 	001f7c1c land bx,ax
 	001f7c28 mov ax,bx
		001f7c34: FALL_THROUGH

	[001f7c34]
		001f7be8: CONDITIONAL_JUMP
		001f7bf0: FALL_THROUGH
 	001f7c34 jz 0x001f7c80
		001f7c80: CONDITIONAL_JUMP
		001f7c3c: FALL_THROUGH

	[001f7c3c]
		001f7c34: FALL_THROUGH
 	001f7c3c push ax
 	001f7c44 mov mar,0x100020
 	001f7c50 memread4 ax
 	001f7c58 lnot ax
 	001f7c60 pop bx
 	001f7c68 land bx,ax
 	001f7c74 mov ax,bx
		001f7c80: FALL_THROUGH

	[001f7c80]
		001f7c34: CONDITIONAL_JUMP
		001f7c3c: FALL_THROUGH
 	001f7c80 jz 0x001f7ccc
		001f7ccc: CONDITIONAL_JUMP
		001f7c88: FALL_THROUGH

	[001f7c88]
		001f7c80: FALL_THROUGH
 	001f7c88 push ax
 	001f7c90 mov mar,0x100024
 	001f7c9c memread4 ax
 	001f7ca4 lnot ax
 	001f7cac pop bx
 	001f7cb4 land bx,ax
 	001f7cc0 mov ax,bx
		001f7ccc: FALL_THROUGH

	[001f7ccc]
		001f7c80: CONDITIONAL_JUMP
		001f7c88: FALL_THROUGH
 	001f7ccc jz 0x001f7d18
		001f7d18: CONDITIONAL_JUMP
		001f7cd4: FALL_THROUGH

	[001f7cd4]
		001f7ccc: FALL_THROUGH
 	001f7cd4 push ax
 	001f7cdc mov mar,0x100028
 	001f7ce8 memread4 ax
 	001f7cf0 lnot ax
 	001f7cf8 pop bx
 	001f7d00 land bx,ax
 	001f7d0c mov ax,bx
		001f7d18: FALL_THROUGH

	[001f7d18]
		001f7ccc: CONDITIONAL_JUMP
		001f7cd4: FALL_THROUGH
 	001f7d18 jz 0x001f7d64
		001f7d64: CONDITIONAL_JUMP
		001f7d20: FALL_THROUGH

	[001f7d20]
		001f7d18: FALL_THROUGH
 	001f7d20 push ax
 	001f7d28 mov mar,0x10002c
 	001f7d34 memread4 ax
 	001f7d3c lnot ax
 	001f7d44 pop bx
 	001f7d4c land bx,ax
 	001f7d58 mov ax,bx
		001f7d64: FALL_THROUGH

	[001f7d64]
		001f7d18: CONDITIONAL_JUMP
		001f7d20: FALL_THROUGH
 	001f7d64 jz 0x001f7db4
		001f7db4: CONDITIONAL_JUMP
		001f7d6c: FALL_THROUGH

	[001f7d6c]
		001f7d64: FALL_THROUGH
 	001f7d6c mov ax,0x1
 	001f7d78 mov mar,0x100010
 	001f7d84 memwrite4 ax
 	001f7d8c mov ax,0x5
 	001f7d98 mov mar,0x1000bc
 	001f7da4 memwrite4 ax
 	001f7dac jmp 0x001f95f4
		001f95f4: UNCONDITIONAL_JUMP

	[001f7db4]
		001f7d64: CONDITIONAL_JUMP
 	001f7db4 sourceline 0x2c4c
 	001f7dbc mov mar,0x100000
 	001f7dc8 memread4 ax
 	001f7dd0 jz 0x001f7e14
		001f7e14: CONDITIONAL_JUMP
		001f7dd8: FALL_THROUGH

	[001f7dd8]
		001f7db4: FALL_THROUGH
 	001f7dd8 push ax
 	001f7de0 mov mar,0x100004
 	001f7dec memread4 ax
 	001f7df4 pop bx
 	001f7dfc land bx,ax
 	001f7e08 mov ax,bx
		001f7e14: FALL_THROUGH

	[001f7e14]
		001f7db4: CONDITIONAL_JUMP
		001f7dd8: FALL_THROUGH
 	001f7e14 jz 0x001f7e58
		001f7e58: CONDITIONAL_JUMP
		001f7e1c: FALL_THROUGH

	[001f7e1c]
		001f7e14: FALL_THROUGH
 	001f7e1c push ax
 	001f7e24 mov mar,0x100008
 	001f7e30 memread4 ax
 	001f7e38 pop bx
 	001f7e40 land bx,ax
 	001f7e4c mov ax,bx
		001f7e58: FALL_THROUGH

	[001f7e58]
		001f7e14: CONDITIONAL_JUMP
		001f7e1c: FALL_THROUGH
 	001f7e58 jz 0x001f7e9c
		001f7e9c: CONDITIONAL_JUMP
		001f7e60: FALL_THROUGH

	[001f7e60]
		001f7e58: FALL_THROUGH
 	001f7e60 push ax
 	001f7e68 mov mar,0x10000c
 	001f7e74 memread4 ax
 	001f7e7c pop bx
 	001f7e84 land bx,ax
 	001f7e90 mov ax,bx
		001f7e9c: FALL_THROUGH

	[001f7e9c]
		001f7e58: CONDITIONAL_JUMP
		001f7e60: FALL_THROUGH
 	001f7e9c jz 0x001f7ee0
		001f7ee0: CONDITIONAL_JUMP
		001f7ea4: FALL_THROUGH

	[001f7ea4]
		001f7e9c: FALL_THROUGH
 	001f7ea4 push ax
 	001f7eac mov mar,0x100010
 	001f7eb8 memread4 ax
 	001f7ec0 pop bx
 	001f7ec8 land bx,ax
 	001f7ed4 mov ax,bx
		001f7ee0: FALL_THROUGH

	[001f7ee0]
		001f7e9c: CONDITIONAL_JUMP
		001f7ea4: FALL_THROUGH
 	001f7ee0 jz 0x001f7f2c
		001f7f2c: CONDITIONAL_JUMP
		001f7ee8: FALL_THROUGH

	[001f7ee8]
		001f7ee0: FALL_THROUGH
 	001f7ee8 push ax
 	001f7ef0 mov mar,0x100014
 	001f7efc memread4 ax
 	001f7f04 lnot ax
 	001f7f0c pop bx
 	001f7f14 land bx,ax
 	001f7f20 mov ax,bx
		001f7f2c: FALL_THROUGH

	[001f7f2c]
		001f7ee0: CONDITIONAL_JUMP
		001f7ee8: FALL_THROUGH
 	001f7f2c jz 0x001f7f78
		001f7f78: CONDITIONAL_JUMP
		001f7f34: FALL_THROUGH

	[001f7f34]
		001f7f2c: FALL_THROUGH
 	001f7f34 push ax
 	001f7f3c mov mar,0x100018
 	001f7f48 memread4 ax
 	001f7f50 lnot ax
 	001f7f58 pop bx
 	001f7f60 land bx,ax
 	001f7f6c mov ax,bx
		001f7f78: FALL_THROUGH

	[001f7f78]
		001f7f2c: CONDITIONAL_JUMP
		001f7f34: FALL_THROUGH
 	001f7f78 jz 0x001f7fc4
		001f7fc4: CONDITIONAL_JUMP
		001f7f80: FALL_THROUGH

	[001f7f80]
		001f7f78: FALL_THROUGH
 	001f7f80 push ax
 	001f7f88 mov mar,0x10001c
 	001f7f94 memread4 ax
 	001f7f9c lnot ax
 	001f7fa4 pop bx
 	001f7fac land bx,ax
 	001f7fb8 mov ax,bx
		001f7fc4: FALL_THROUGH

	[001f7fc4]
		001f7f78: CONDITIONAL_JUMP
		001f7f80: FALL_THROUGH
 	001f7fc4 jz 0x001f8010
		001f8010: CONDITIONAL_JUMP
		001f7fcc: FALL_THROUGH

	[001f7fcc]
		001f7fc4: FALL_THROUGH
 	001f7fcc push ax
 	001f7fd4 mov mar,0x100020
 	001f7fe0 memread4 ax
 	001f7fe8 lnot ax
 	001f7ff0 pop bx
 	001f7ff8 land bx,ax
 	001f8004 mov ax,bx
		001f8010: FALL_THROUGH

	[001f8010]
		001f7fc4: CONDITIONAL_JUMP
		001f7fcc: FALL_THROUGH
 	001f8010 jz 0x001f805c
		001f805c: CONDITIONAL_JUMP
		001f8018: FALL_THROUGH

	[001f8018]
		001f8010: FALL_THROUGH
 	001f8018 push ax
 	001f8020 mov mar,0x100024
 	001f802c memread4 ax
 	001f8034 lnot ax
 	001f803c pop bx
 	001f8044 land bx,ax
 	001f8050 mov ax,bx
		001f805c: FALL_THROUGH

	[001f805c]
		001f8010: CONDITIONAL_JUMP
		001f8018: FALL_THROUGH
 	001f805c jz 0x001f80a8
		001f80a8: CONDITIONAL_JUMP
		001f8064: FALL_THROUGH

	[001f8064]
		001f805c: FALL_THROUGH
 	001f8064 push ax
 	001f806c mov mar,0x100028
 	001f8078 memread4 ax
 	001f8080 lnot ax
 	001f8088 pop bx
 	001f8090 land bx,ax
 	001f809c mov ax,bx
		001f80a8: FALL_THROUGH

	[001f80a8]
		001f805c: CONDITIONAL_JUMP
		001f8064: FALL_THROUGH
 	001f80a8 jz 0x001f80f4
		001f80f4: CONDITIONAL_JUMP
		001f80b0: FALL_THROUGH

	[001f80b0]
		001f80a8: FALL_THROUGH
 	001f80b0 push ax
 	001f80b8 mov mar,0x10002c
 	001f80c4 memread4 ax
 	001f80cc lnot ax
 	001f80d4 pop bx
 	001f80dc land bx,ax
 	001f80e8 mov ax,bx
		001f80f4: FALL_THROUGH

	[001f80f4]
		001f80a8: CONDITIONAL_JUMP
		001f80b0: FALL_THROUGH
 	001f80f4 jz 0x001f8144
		001f8144: CONDITIONAL_JUMP
		001f80fc: FALL_THROUGH

	[001f80fc]
		001f80f4: FALL_THROUGH
 	001f80fc mov ax,0x1
 	001f8108 mov mar,0x100014
 	001f8114 memwrite4 ax
 	001f811c mov ax,0x5
 	001f8128 mov mar,0x1000c0
 	001f8134 memwrite4 ax
 	001f813c jmp 0x001f95f4
		001f95f4: UNCONDITIONAL_JUMP

	[001f8144]
		001f80f4: CONDITIONAL_JUMP
 	001f8144 sourceline 0x2c51
 	001f814c mov mar,0x100000
 	001f8158 memread4 ax
 	001f8160 jz 0x001f81a4
		001f81a4: CONDITIONAL_JUMP
		001f8168: FALL_THROUGH

	[001f8168]
		001f8144: FALL_THROUGH
 	001f8168 push ax
 	001f8170 mov mar,0x100004
 	001f817c memread4 ax
 	001f8184 pop bx
 	001f818c land bx,ax
 	001f8198 mov ax,bx
		001f81a4: FALL_THROUGH

	[001f81a4]
		001f8144: CONDITIONAL_JUMP
		001f8168: FALL_THROUGH
 	001f81a4 jz 0x001f81e8
		001f81e8: CONDITIONAL_JUMP
		001f81ac: FALL_THROUGH

	[001f81ac]
		001f81a4: FALL_THROUGH
 	001f81ac push ax
 	001f81b4 mov mar,0x100008
 	001f81c0 memread4 ax
 	001f81c8 pop bx
 	001f81d0 land bx,ax
 	001f81dc mov ax,bx
		001f81e8: FALL_THROUGH

	[001f81e8]
		001f81a4: CONDITIONAL_JUMP
		001f81ac: FALL_THROUGH
 	001f81e8 jz 0x001f822c
		001f822c: CONDITIONAL_JUMP
		001f81f0: FALL_THROUGH

	[001f81f0]
		001f81e8: FALL_THROUGH
 	001f81f0 push ax
 	001f81f8 mov mar,0x10000c
 	001f8204 memread4 ax
 	001f820c pop bx
 	001f8214 land bx,ax
 	001f8220 mov ax,bx
		001f822c: FALL_THROUGH

	[001f822c]
		001f81e8: CONDITIONAL_JUMP
		001f81f0: FALL_THROUGH
 	001f822c jz 0x001f8270
		001f8270: CONDITIONAL_JUMP
		001f8234: FALL_THROUGH

	[001f8234]
		001f822c: FALL_THROUGH
 	001f8234 push ax
 	001f823c mov mar,0x100010
 	001f8248 memread4 ax
 	001f8250 pop bx
 	001f8258 land bx,ax
 	001f8264 mov ax,bx
		001f8270: FALL_THROUGH

	[001f8270]
		001f822c: CONDITIONAL_JUMP
		001f8234: FALL_THROUGH
 	001f8270 jz 0x001f82b4
		001f82b4: CONDITIONAL_JUMP
		001f8278: FALL_THROUGH

	[001f8278]
		001f8270: FALL_THROUGH
 	001f8278 push ax
 	001f8280 mov mar,0x100014
 	001f828c memread4 ax
 	001f8294 pop bx
 	001f829c land bx,ax
 	001f82a8 mov ax,bx
		001f82b4: FALL_THROUGH

	[001f82b4]
		001f8270: CONDITIONAL_JUMP
		001f8278: FALL_THROUGH
 	001f82b4 jz 0x001f8300
		001f8300: CONDITIONAL_JUMP
		001f82bc: FALL_THROUGH

	[001f82bc]
		001f82b4: FALL_THROUGH
 	001f82bc push ax
 	001f82c4 mov mar,0x100018
 	001f82d0 memread4 ax
 	001f82d8 lnot ax
 	001f82e0 pop bx
 	001f82e8 land bx,ax
 	001f82f4 mov ax,bx
		001f8300: FALL_THROUGH

	[001f8300]
		001f82b4: CONDITIONAL_JUMP
		001f82bc: FALL_THROUGH
 	001f8300 jz 0x001f834c
		001f834c: CONDITIONAL_JUMP
		001f8308: FALL_THROUGH

	[001f8308]
		001f8300: FALL_THROUGH
 	001f8308 push ax
 	001f8310 mov mar,0x10001c
 	001f831c memread4 ax
 	001f8324 lnot ax
 	001f832c pop bx
 	001f8334 land bx,ax
 	001f8340 mov ax,bx
		001f834c: FALL_THROUGH

	[001f834c]
		001f8300: CONDITIONAL_JUMP
		001f8308: FALL_THROUGH
 	001f834c jz 0x001f8398
		001f8398: CONDITIONAL_JUMP
		001f8354: FALL_THROUGH

	[001f8354]
		001f834c: FALL_THROUGH
 	001f8354 push ax
 	001f835c mov mar,0x100020
 	001f8368 memread4 ax
 	001f8370 lnot ax
 	001f8378 pop bx
 	001f8380 land bx,ax
 	001f838c mov ax,bx
		001f8398: FALL_THROUGH

	[001f8398]
		001f834c: CONDITIONAL_JUMP
		001f8354: FALL_THROUGH
 	001f8398 jz 0x001f83e4
		001f83e4: CONDITIONAL_JUMP
		001f83a0: FALL_THROUGH

	[001f83a0]
		001f8398: FALL_THROUGH
 	001f83a0 push ax
 	001f83a8 mov mar,0x100024
 	001f83b4 memread4 ax
 	001f83bc lnot ax
 	001f83c4 pop bx
 	001f83cc land bx,ax
 	001f83d8 mov ax,bx
		001f83e4: FALL_THROUGH

	[001f83e4]
		001f8398: CONDITIONAL_JUMP
		001f83a0: FALL_THROUGH
 	001f83e4 jz 0x001f8430
		001f8430: CONDITIONAL_JUMP
		001f83ec: FALL_THROUGH

	[001f83ec]
		001f83e4: FALL_THROUGH
 	001f83ec push ax
 	001f83f4 mov mar,0x100028
 	001f8400 memread4 ax
 	001f8408 lnot ax
 	001f8410 pop bx
 	001f8418 land bx,ax
 	001f8424 mov ax,bx
		001f8430: FALL_THROUGH

	[001f8430]
		001f83e4: CONDITIONAL_JUMP
		001f83ec: FALL_THROUGH
 	001f8430 jz 0x001f847c
		001f847c: CONDITIONAL_JUMP
		001f8438: FALL_THROUGH

	[001f8438]
		001f8430: FALL_THROUGH
 	001f8438 push ax
 	001f8440 mov mar,0x10002c
 	001f844c memread4 ax
 	001f8454 lnot ax
 	001f845c pop bx
 	001f8464 land bx,ax
 	001f8470 mov ax,bx
		001f847c: FALL_THROUGH

	[001f847c]
		001f8430: CONDITIONAL_JUMP
		001f8438: FALL_THROUGH
 	001f847c jz 0x001f84cc
		001f84cc: CONDITIONAL_JUMP
		001f8484: FALL_THROUGH

	[001f8484]
		001f847c: FALL_THROUGH
 	001f8484 mov ax,0x1
 	001f8490 mov mar,0x100018
 	001f849c memwrite4 ax
 	001f84a4 mov ax,0x5
 	001f84b0 mov mar,0x1000c4
 	001f84bc memwrite4 ax
 	001f84c4 jmp 0x001f95f4
		001f95f4: UNCONDITIONAL_JUMP

	[001f84cc]
		001f847c: CONDITIONAL_JUMP
 	001f84cc sourceline 0x2c56
 	001f84d4 mov mar,0x100000
 	001f84e0 memread4 ax
 	001f84e8 jz 0x001f852c
		001f852c: CONDITIONAL_JUMP
		001f84f0: FALL_THROUGH

	[001f84f0]
		001f84cc: FALL_THROUGH
 	001f84f0 push ax
 	001f84f8 mov mar,0x100004
 	001f8504 memread4 ax
 	001f850c pop bx
 	001f8514 land bx,ax
 	001f8520 mov ax,bx
		001f852c: FALL_THROUGH

	[001f852c]
		001f84cc: CONDITIONAL_JUMP
		001f84f0: FALL_THROUGH
 	001f852c jz 0x001f8570
		001f8570: CONDITIONAL_JUMP
		001f8534: FALL_THROUGH

	[001f8534]
		001f852c: FALL_THROUGH
 	001f8534 push ax
 	001f853c mov mar,0x100008
 	001f8548 memread4 ax
 	001f8550 pop bx
 	001f8558 land bx,ax
 	001f8564 mov ax,bx
		001f8570: FALL_THROUGH

	[001f8570]
		001f852c: CONDITIONAL_JUMP
		001f8534: FALL_THROUGH
 	001f8570 jz 0x001f85b4
		001f85b4: CONDITIONAL_JUMP
		001f8578: FALL_THROUGH

	[001f8578]
		001f8570: FALL_THROUGH
 	001f8578 push ax
 	001f8580 mov mar,0x10000c
 	001f858c memread4 ax
 	001f8594 pop bx
 	001f859c land bx,ax
 	001f85a8 mov ax,bx
		001f85b4: FALL_THROUGH

	[001f85b4]
		001f8570: CONDITIONAL_JUMP
		001f8578: FALL_THROUGH
 	001f85b4 jz 0x001f85f8
		001f85f8: CONDITIONAL_JUMP
		001f85bc: FALL_THROUGH

	[001f85bc]
		001f85b4: FALL_THROUGH
 	001f85bc push ax
 	001f85c4 mov mar,0x100010
 	001f85d0 memread4 ax
 	001f85d8 pop bx
 	001f85e0 land bx,ax
 	001f85ec mov ax,bx
		001f85f8: FALL_THROUGH

	[001f85f8]
		001f85b4: CONDITIONAL_JUMP
		001f85bc: FALL_THROUGH
 	001f85f8 jz 0x001f863c
		001f863c: CONDITIONAL_JUMP
		001f8600: FALL_THROUGH

	[001f8600]
		001f85f8: FALL_THROUGH
 	001f8600 push ax
 	001f8608 mov mar,0x100014
 	001f8614 memread4 ax
 	001f861c pop bx
 	001f8624 land bx,ax
 	001f8630 mov ax,bx
		001f863c: FALL_THROUGH

	[001f863c]
		001f85f8: CONDITIONAL_JUMP
		001f8600: FALL_THROUGH
 	001f863c jz 0x001f8680
		001f8680: CONDITIONAL_JUMP
		001f8644: FALL_THROUGH

	[001f8644]
		001f863c: FALL_THROUGH
 	001f8644 push ax
 	001f864c mov mar,0x100018
 	001f8658 memread4 ax
 	001f8660 pop bx
 	001f8668 land bx,ax
 	001f8674 mov ax,bx
		001f8680: FALL_THROUGH

	[001f8680]
		001f863c: CONDITIONAL_JUMP
		001f8644: FALL_THROUGH
 	001f8680 jz 0x001f86cc
		001f86cc: CONDITIONAL_JUMP
		001f8688: FALL_THROUGH

	[001f8688]
		001f8680: FALL_THROUGH
 	001f8688 push ax
 	001f8690 mov mar,0x10001c
 	001f869c memread4 ax
 	001f86a4 lnot ax
 	001f86ac pop bx
 	001f86b4 land bx,ax
 	001f86c0 mov ax,bx
		001f86cc: FALL_THROUGH

	[001f86cc]
		001f8680: CONDITIONAL_JUMP
		001f8688: FALL_THROUGH
 	001f86cc jz 0x001f8718
		001f8718: CONDITIONAL_JUMP
		001f86d4: FALL_THROUGH

	[001f86d4]
		001f86cc: FALL_THROUGH
 	001f86d4 push ax
 	001f86dc mov mar,0x100020
 	001f86e8 memread4 ax
 	001f86f0 lnot ax
 	001f86f8 pop bx
 	001f8700 land bx,ax
 	001f870c mov ax,bx
		001f8718: FALL_THROUGH

	[001f8718]
		001f86cc: CONDITIONAL_JUMP
		001f86d4: FALL_THROUGH
 	001f8718 jz 0x001f8764
		001f8764: CONDITIONAL_JUMP
		001f8720: FALL_THROUGH

	[001f8720]
		001f8718: FALL_THROUGH
 	001f8720 push ax
 	001f8728 mov mar,0x100024
 	001f8734 memread4 ax
 	001f873c lnot ax
 	001f8744 pop bx
 	001f874c land bx,ax
 	001f8758 mov ax,bx
		001f8764: FALL_THROUGH

	[001f8764]
		001f8718: CONDITIONAL_JUMP
		001f8720: FALL_THROUGH
 	001f8764 jz 0x001f87b0
		001f87b0: CONDITIONAL_JUMP
		001f876c: FALL_THROUGH

	[001f876c]
		001f8764: FALL_THROUGH
 	001f876c push ax
 	001f8774 mov mar,0x100028
 	001f8780 memread4 ax
 	001f8788 lnot ax
 	001f8790 pop bx
 	001f8798 land bx,ax
 	001f87a4 mov ax,bx
		001f87b0: FALL_THROUGH

	[001f87b0]
		001f8764: CONDITIONAL_JUMP
		001f876c: FALL_THROUGH
 	001f87b0 jz 0x001f87fc
		001f87fc: CONDITIONAL_JUMP
		001f87b8: FALL_THROUGH

	[001f87b8]
		001f87b0: FALL_THROUGH
 	001f87b8 push ax
 	001f87c0 mov mar,0x10002c
 	001f87cc memread4 ax
 	001f87d4 lnot ax
 	001f87dc pop bx
 	001f87e4 land bx,ax
 	001f87f0 mov ax,bx
		001f87fc: FALL_THROUGH

	[001f87fc]
		001f87b0: CONDITIONAL_JUMP
		001f87b8: FALL_THROUGH
 	001f87fc jz 0x001f884c
		001f884c: CONDITIONAL_JUMP
		001f8804: FALL_THROUGH

	[001f8804]
		001f87fc: FALL_THROUGH
 	001f8804 mov ax,0x1
 	001f8810 mov mar,0x10001c
 	001f881c memwrite4 ax
 	001f8824 mov ax,0x5
 	001f8830 mov mar,0x1000c8
 	001f883c memwrite4 ax
 	001f8844 jmp 0x001f95f4
		001f95f4: UNCONDITIONAL_JUMP

	[001f884c]
		001f87fc: CONDITIONAL_JUMP
 	001f884c sourceline 0x2c5b
 	001f8854 mov mar,0x100000
 	001f8860 memread4 ax
 	001f8868 jz 0x001f88ac
		001f88ac: CONDITIONAL_JUMP
		001f8870: FALL_THROUGH

	[001f8870]
		001f884c: FALL_THROUGH
 	001f8870 push ax
 	001f8878 mov mar,0x100004
 	001f8884 memread4 ax
 	001f888c pop bx
 	001f8894 land bx,ax
 	001f88a0 mov ax,bx
		001f88ac: FALL_THROUGH

	[001f88ac]
		001f884c: CONDITIONAL_JUMP
		001f8870: FALL_THROUGH
 	001f88ac jz 0x001f88f0
		001f88f0: CONDITIONAL_JUMP
		001f88b4: FALL_THROUGH

	[001f88b4]
		001f88ac: FALL_THROUGH
 	001f88b4 push ax
 	001f88bc mov mar,0x100008
 	001f88c8 memread4 ax
 	001f88d0 pop bx
 	001f88d8 land bx,ax
 	001f88e4 mov ax,bx
		001f88f0: FALL_THROUGH

	[001f88f0]
		001f88ac: CONDITIONAL_JUMP
		001f88b4: FALL_THROUGH
 	001f88f0 jz 0x001f8934
		001f8934: CONDITIONAL_JUMP
		001f88f8: FALL_THROUGH

	[001f88f8]
		001f88f0: FALL_THROUGH
 	001f88f8 push ax
 	001f8900 mov mar,0x10000c
 	001f890c memread4 ax
 	001f8914 pop bx
 	001f891c land bx,ax
 	001f8928 mov ax,bx
		001f8934: FALL_THROUGH

	[001f8934]
		001f88f0: CONDITIONAL_JUMP
		001f88f8: FALL_THROUGH
 	001f8934 jz 0x001f8978
		001f8978: CONDITIONAL_JUMP
		001f893c: FALL_THROUGH

	[001f893c]
		001f8934: FALL_THROUGH
 	001f893c push ax
 	001f8944 mov mar,0x100010
 	001f8950 memread4 ax
 	001f8958 pop bx
 	001f8960 land bx,ax
 	001f896c mov ax,bx
		001f8978: FALL_THROUGH

	[001f8978]
		001f8934: CONDITIONAL_JUMP
		001f893c: FALL_THROUGH
 	001f8978 jz 0x001f89bc
		001f89bc: CONDITIONAL_JUMP
		001f8980: FALL_THROUGH

	[001f8980]
		001f8978: FALL_THROUGH
 	001f8980 push ax
 	001f8988 mov mar,0x100014
 	001f8994 memread4 ax
 	001f899c pop bx
 	001f89a4 land bx,ax
 	001f89b0 mov ax,bx
		001f89bc: FALL_THROUGH

	[001f89bc]
		001f8978: CONDITIONAL_JUMP
		001f8980: FALL_THROUGH
 	001f89bc jz 0x001f8a00
		001f8a00: CONDITIONAL_JUMP
		001f89c4: FALL_THROUGH

	[001f89c4]
		001f89bc: FALL_THROUGH
 	001f89c4 push ax
 	001f89cc mov mar,0x100018
 	001f89d8 memread4 ax
 	001f89e0 pop bx
 	001f89e8 land bx,ax
 	001f89f4 mov ax,bx
		001f8a00: FALL_THROUGH

	[001f8a00]
		001f89bc: CONDITIONAL_JUMP
		001f89c4: FALL_THROUGH
 	001f8a00 jz 0x001f8a44
		001f8a44: CONDITIONAL_JUMP
		001f8a08: FALL_THROUGH

	[001f8a08]
		001f8a00: FALL_THROUGH
 	001f8a08 push ax
 	001f8a10 mov mar,0x10001c
 	001f8a1c memread4 ax
 	001f8a24 pop bx
 	001f8a2c land bx,ax
 	001f8a38 mov ax,bx
		001f8a44: FALL_THROUGH

	[001f8a44]
		001f8a00: CONDITIONAL_JUMP
		001f8a08: FALL_THROUGH
 	001f8a44 jz 0x001f8a90
		001f8a90: CONDITIONAL_JUMP
		001f8a4c: FALL_THROUGH

	[001f8a4c]
		001f8a44: FALL_THROUGH
 	001f8a4c push ax
 	001f8a54 mov mar,0x100020
 	001f8a60 memread4 ax
 	001f8a68 lnot ax
 	001f8a70 pop bx
 	001f8a78 land bx,ax
 	001f8a84 mov ax,bx
		001f8a90: FALL_THROUGH

	[001f8a90]
		001f8a44: CONDITIONAL_JUMP
		001f8a4c: FALL_THROUGH
 	001f8a90 jz 0x001f8adc
		001f8adc: CONDITIONAL_JUMP
		001f8a98: FALL_THROUGH

	[001f8a98]
		001f8a90: FALL_THROUGH
 	001f8a98 push ax
 	001f8aa0 mov mar,0x100024
 	001f8aac memread4 ax
 	001f8ab4 lnot ax
 	001f8abc pop bx
 	001f8ac4 land bx,ax
 	001f8ad0 mov ax,bx
		001f8adc: FALL_THROUGH

	[001f8adc]
		001f8a90: CONDITIONAL_JUMP
		001f8a98: FALL_THROUGH
 	001f8adc jz 0x001f8b28
		001f8b28: CONDITIONAL_JUMP
		001f8ae4: FALL_THROUGH

	[001f8ae4]
		001f8adc: FALL_THROUGH
 	001f8ae4 push ax
 	001f8aec mov mar,0x100028
 	001f8af8 memread4 ax
 	001f8b00 lnot ax
 	001f8b08 pop bx
 	001f8b10 land bx,ax
 	001f8b1c mov ax,bx
		001f8b28: FALL_THROUGH

	[001f8b28]
		001f8adc: CONDITIONAL_JUMP
		001f8ae4: FALL_THROUGH
 	001f8b28 jz 0x001f8b74
		001f8b74: CONDITIONAL_JUMP
		001f8b30: FALL_THROUGH

	[001f8b30]
		001f8b28: FALL_THROUGH
 	001f8b30 push ax
 	001f8b38 mov mar,0x10002c
 	001f8b44 memread4 ax
 	001f8b4c lnot ax
 	001f8b54 pop bx
 	001f8b5c land bx,ax
 	001f8b68 mov ax,bx
		001f8b74: FALL_THROUGH

	[001f8b74]
		001f8b28: CONDITIONAL_JUMP
		001f8b30: FALL_THROUGH
 	001f8b74 jz 0x001f8bc4
		001f8bc4: CONDITIONAL_JUMP
		001f8b7c: FALL_THROUGH

	[001f8b7c]
		001f8b74: FALL_THROUGH
 	001f8b7c mov ax,0x1
 	001f8b88 mov mar,0x100020
 	001f8b94 memwrite4 ax
 	001f8b9c mov ax,0x5
 	001f8ba8 mov mar,0x1000cc
 	001f8bb4 memwrite4 ax
 	001f8bbc jmp 0x001f95f4
		001f95f4: UNCONDITIONAL_JUMP

	[001f8bc4]
		001f8b74: CONDITIONAL_JUMP
 	001f8bc4 sourceline 0x2c60
 	001f8bcc mov mar,0x100000
 	001f8bd8 memread4 ax
 	001f8be0 jz 0x001f8c24
		001f8c24: CONDITIONAL_JUMP
		001f8be8: FALL_THROUGH

	[001f8be8]
		001f8bc4: FALL_THROUGH
 	001f8be8 push ax
 	001f8bf0 mov mar,0x100004
 	001f8bfc memread4 ax
 	001f8c04 pop bx
 	001f8c0c land bx,ax
 	001f8c18 mov ax,bx
		001f8c24: FALL_THROUGH

	[001f8c24]
		001f8bc4: CONDITIONAL_JUMP
		001f8be8: FALL_THROUGH
 	001f8c24 jz 0x001f8c68
		001f8c68: CONDITIONAL_JUMP
		001f8c2c: FALL_THROUGH

	[001f8c2c]
		001f8c24: FALL_THROUGH
 	001f8c2c push ax
 	001f8c34 mov mar,0x100008
 	001f8c40 memread4 ax
 	001f8c48 pop bx
 	001f8c50 land bx,ax
 	001f8c5c mov ax,bx
		001f8c68: FALL_THROUGH

	[001f8c68]
		001f8c24: CONDITIONAL_JUMP
		001f8c2c: FALL_THROUGH
 	001f8c68 jz 0x001f8cac
		001f8cac: CONDITIONAL_JUMP
		001f8c70: FALL_THROUGH

	[001f8c70]
		001f8c68: FALL_THROUGH
 	001f8c70 push ax
 	001f8c78 mov mar,0x10000c
 	001f8c84 memread4 ax
 	001f8c8c pop bx
 	001f8c94 land bx,ax
 	001f8ca0 mov ax,bx
		001f8cac: FALL_THROUGH

	[001f8cac]
		001f8c68: CONDITIONAL_JUMP
		001f8c70: FALL_THROUGH
 	001f8cac jz 0x001f8cf0
		001f8cf0: CONDITIONAL_JUMP
		001f8cb4: FALL_THROUGH

	[001f8cb4]
		001f8cac: FALL_THROUGH
 	001f8cb4 push ax
 	001f8cbc mov mar,0x100010
 	001f8cc8 memread4 ax
 	001f8cd0 pop bx
 	001f8cd8 land bx,ax
 	001f8ce4 mov ax,bx
		001f8cf0: FALL_THROUGH

	[001f8cf0]
		001f8cac: CONDITIONAL_JUMP
		001f8cb4: FALL_THROUGH
 	001f8cf0 jz 0x001f8d34
		001f8d34: CONDITIONAL_JUMP
		001f8cf8: FALL_THROUGH

	[001f8cf8]
		001f8cf0: FALL_THROUGH
 	001f8cf8 push ax
 	001f8d00 mov mar,0x100014
 	001f8d0c memread4 ax
 	001f8d14 pop bx
 	001f8d1c land bx,ax
 	001f8d28 mov ax,bx
		001f8d34: FALL_THROUGH

	[001f8d34]
		001f8cf0: CONDITIONAL_JUMP
		001f8cf8: FALL_THROUGH
 	001f8d34 jz 0x001f8d78
		001f8d78: CONDITIONAL_JUMP
		001f8d3c: FALL_THROUGH

	[001f8d3c]
		001f8d34: FALL_THROUGH
 	001f8d3c push ax
 	001f8d44 mov mar,0x100018
 	001f8d50 memread4 ax
 	001f8d58 pop bx
 	001f8d60 land bx,ax
 	001f8d6c mov ax,bx
		001f8d78: FALL_THROUGH

	[001f8d78]
		001f8d34: CONDITIONAL_JUMP
		001f8d3c: FALL_THROUGH
 	001f8d78 jz 0x001f8dbc
		001f8dbc: CONDITIONAL_JUMP
		001f8d80: FALL_THROUGH

	[001f8d80]
		001f8d78: FALL_THROUGH
 	001f8d80 push ax
 	001f8d88 mov mar,0x10001c
 	001f8d94 memread4 ax
 	001f8d9c pop bx
 	001f8da4 land bx,ax
 	001f8db0 mov ax,bx
		001f8dbc: FALL_THROUGH

	[001f8dbc]
		001f8d78: CONDITIONAL_JUMP
		001f8d80: FALL_THROUGH
 	001f8dbc jz 0x001f8e00
		001f8e00: CONDITIONAL_JUMP
		001f8dc4: FALL_THROUGH

	[001f8dc4]
		001f8dbc: FALL_THROUGH
 	001f8dc4 push ax
 	001f8dcc mov mar,0x100020
 	001f8dd8 memread4 ax
 	001f8de0 pop bx
 	001f8de8 land bx,ax
 	001f8df4 mov ax,bx
		001f8e00: FALL_THROUGH

	[001f8e00]
		001f8dbc: CONDITIONAL_JUMP
		001f8dc4: FALL_THROUGH
 	001f8e00 jz 0x001f8e4c
		001f8e4c: CONDITIONAL_JUMP
		001f8e08: FALL_THROUGH

	[001f8e08]
		001f8e00: FALL_THROUGH
 	001f8e08 push ax
 	001f8e10 mov mar,0x100024
 	001f8e1c memread4 ax
 	001f8e24 lnot ax
 	001f8e2c pop bx
 	001f8e34 land bx,ax
 	001f8e40 mov ax,bx
		001f8e4c: FALL_THROUGH

	[001f8e4c]
		001f8e00: CONDITIONAL_JUMP
		001f8e08: FALL_THROUGH
 	001f8e4c jz 0x001f8e98
		001f8e98: CONDITIONAL_JUMP
		001f8e54: FALL_THROUGH

	[001f8e54]
		001f8e4c: FALL_THROUGH
 	001f8e54 push ax
 	001f8e5c mov mar,0x100028
 	001f8e68 memread4 ax
 	001f8e70 lnot ax
 	001f8e78 pop bx
 	001f8e80 land bx,ax
 	001f8e8c mov ax,bx
		001f8e98: FALL_THROUGH

	[001f8e98]
		001f8e4c: CONDITIONAL_JUMP
		001f8e54: FALL_THROUGH
 	001f8e98 jz 0x001f8ee4
		001f8ee4: CONDITIONAL_JUMP
		001f8ea0: FALL_THROUGH

	[001f8ea0]
		001f8e98: FALL_THROUGH
 	001f8ea0 push ax
 	001f8ea8 mov mar,0x10002c
 	001f8eb4 memread4 ax
 	001f8ebc lnot ax
 	001f8ec4 pop bx
 	001f8ecc land bx,ax
 	001f8ed8 mov ax,bx
		001f8ee4: FALL_THROUGH

	[001f8ee4]
		001f8e98: CONDITIONAL_JUMP
		001f8ea0: FALL_THROUGH
 	001f8ee4 jz 0x001f8f34
		001f8f34: CONDITIONAL_JUMP
		001f8eec: FALL_THROUGH

	[001f8eec]
		001f8ee4: FALL_THROUGH
 	001f8eec mov ax,0x1
 	001f8ef8 mov mar,0x100024
 	001f8f04 memwrite4 ax
 	001f8f0c mov ax,0x5
 	001f8f18 mov mar,0x1000d0
 	001f8f24 memwrite4 ax
 	001f8f2c jmp 0x001f95f4
		001f95f4: UNCONDITIONAL_JUMP

	[001f8f34]
		001f8ee4: CONDITIONAL_JUMP
 	001f8f34 sourceline 0x2c65
 	001f8f3c mov mar,0x100000
 	001f8f48 memread4 ax
 	001f8f50 jz 0x001f8f94
		001f8f94: CONDITIONAL_JUMP
		001f8f58: FALL_THROUGH

	[001f8f58]
		001f8f34: FALL_THROUGH
 	001f8f58 push ax
 	001f8f60 mov mar,0x100004
 	001f8f6c memread4 ax
 	001f8f74 pop bx
 	001f8f7c land bx,ax
 	001f8f88 mov ax,bx
		001f8f94: FALL_THROUGH

	[001f8f94]
		001f8f34: CONDITIONAL_JUMP
		001f8f58: FALL_THROUGH
 	001f8f94 jz 0x001f8fd8
		001f8fd8: CONDITIONAL_JUMP
		001f8f9c: FALL_THROUGH

	[001f8f9c]
		001f8f94: FALL_THROUGH
 	001f8f9c push ax
 	001f8fa4 mov mar,0x100008
 	001f8fb0 memread4 ax
 	001f8fb8 pop bx
 	001f8fc0 land bx,ax
 	001f8fcc mov ax,bx
		001f8fd8: FALL_THROUGH

	[001f8fd8]
		001f8f94: CONDITIONAL_JUMP
		001f8f9c: FALL_THROUGH
 	001f8fd8 jz 0x001f901c
		001f901c: CONDITIONAL_JUMP
		001f8fe0: FALL_THROUGH

	[001f8fe0]
		001f8fd8: FALL_THROUGH
 	001f8fe0 push ax
 	001f8fe8 mov mar,0x10000c
 	001f8ff4 memread4 ax
 	001f8ffc pop bx
 	001f9004 land bx,ax
 	001f9010 mov ax,bx
		001f901c: FALL_THROUGH

	[001f901c]
		001f8fd8: CONDITIONAL_JUMP
		001f8fe0: FALL_THROUGH
 	001f901c jz 0x001f9060
		001f9060: CONDITIONAL_JUMP
		001f9024: FALL_THROUGH

	[001f9024]
		001f901c: FALL_THROUGH
 	001f9024 push ax
 	001f902c mov mar,0x100010
 	001f9038 memread4 ax
 	001f9040 pop bx
 	001f9048 land bx,ax
 	001f9054 mov ax,bx
		001f9060: FALL_THROUGH

	[001f9060]
		001f901c: CONDITIONAL_JUMP
		001f9024: FALL_THROUGH
 	001f9060 jz 0x001f90a4
		001f90a4: CONDITIONAL_JUMP
		001f9068: FALL_THROUGH

	[001f9068]
		001f9060: FALL_THROUGH
 	001f9068 push ax
 	001f9070 mov mar,0x100014
 	001f907c memread4 ax
 	001f9084 pop bx
 	001f908c land bx,ax
 	001f9098 mov ax,bx
		001f90a4: FALL_THROUGH

	[001f90a4]
		001f9060: CONDITIONAL_JUMP
		001f9068: FALL_THROUGH
 	001f90a4 jz 0x001f90e8
		001f90e8: CONDITIONAL_JUMP
		001f90ac: FALL_THROUGH

	[001f90ac]
		001f90a4: FALL_THROUGH
 	001f90ac push ax
 	001f90b4 mov mar,0x100018
 	001f90c0 memread4 ax
 	001f90c8 pop bx
 	001f90d0 land bx,ax
 	001f90dc mov ax,bx
		001f90e8: FALL_THROUGH

	[001f90e8]
		001f90a4: CONDITIONAL_JUMP
		001f90ac: FALL_THROUGH
 	001f90e8 jz 0x001f912c
		001f912c: CONDITIONAL_JUMP
		001f90f0: FALL_THROUGH

	[001f90f0]
		001f90e8: FALL_THROUGH
 	001f90f0 push ax
 	001f90f8 mov mar,0x10001c
 	001f9104 memread4 ax
 	001f910c pop bx
 	001f9114 land bx,ax
 	001f9120 mov ax,bx
		001f912c: FALL_THROUGH

	[001f912c]
		001f90e8: CONDITIONAL_JUMP
		001f90f0: FALL_THROUGH
 	001f912c jz 0x001f9170
		001f9170: CONDITIONAL_JUMP
		001f9134: FALL_THROUGH

	[001f9134]
		001f912c: FALL_THROUGH
 	001f9134 push ax
 	001f913c mov mar,0x100020
 	001f9148 memread4 ax
 	001f9150 pop bx
 	001f9158 land bx,ax
 	001f9164 mov ax,bx
		001f9170: FALL_THROUGH

	[001f9170]
		001f912c: CONDITIONAL_JUMP
		001f9134: FALL_THROUGH
 	001f9170 jz 0x001f91b4
		001f91b4: CONDITIONAL_JUMP
		001f9178: FALL_THROUGH

	[001f9178]
		001f9170: FALL_THROUGH
 	001f9178 push ax
 	001f9180 mov mar,0x100024
 	001f918c memread4 ax
 	001f9194 pop bx
 	001f919c land bx,ax
 	001f91a8 mov ax,bx
		001f91b4: FALL_THROUGH

	[001f91b4]
		001f9170: CONDITIONAL_JUMP
		001f9178: FALL_THROUGH
 	001f91b4 jz 0x001f9200
		001f9200: CONDITIONAL_JUMP
		001f91bc: FALL_THROUGH

	[001f91bc]
		001f91b4: FALL_THROUGH
 	001f91bc push ax
 	001f91c4 mov mar,0x100028
 	001f91d0 memread4 ax
 	001f91d8 lnot ax
 	001f91e0 pop bx
 	001f91e8 land bx,ax
 	001f91f4 mov ax,bx
		001f9200: FALL_THROUGH

	[001f9200]
		001f91b4: CONDITIONAL_JUMP
		001f91bc: FALL_THROUGH
 	001f9200 jz 0x001f924c
		001f924c: CONDITIONAL_JUMP
		001f9208: FALL_THROUGH

	[001f9208]
		001f9200: FALL_THROUGH
 	001f9208 push ax
 	001f9210 mov mar,0x10002c
 	001f921c memread4 ax
 	001f9224 lnot ax
 	001f922c pop bx
 	001f9234 land bx,ax
 	001f9240 mov ax,bx
		001f924c: FALL_THROUGH

	[001f924c]
		001f9200: CONDITIONAL_JUMP
		001f9208: FALL_THROUGH
 	001f924c jz 0x001f929c
		001f929c: CONDITIONAL_JUMP
		001f9254: FALL_THROUGH

	[001f9254]
		001f924c: FALL_THROUGH
 	001f9254 mov ax,0x1
 	001f9260 mov mar,0x100028
 	001f926c memwrite4 ax
 	001f9274 mov ax,0x5
 	001f9280 mov mar,0x1000d4
 	001f928c memwrite4 ax
 	001f9294 jmp 0x001f95f4
		001f95f4: UNCONDITIONAL_JUMP

	[001f929c]
		001f924c: CONDITIONAL_JUMP
 	001f929c sourceline 0x2c6a
 	001f92a4 mov mar,0x100000
 	001f92b0 memread4 ax
 	001f92b8 jz 0x001f92fc
		001f92fc: CONDITIONAL_JUMP
		001f92c0: FALL_THROUGH

	[001f92c0]
		001f929c: FALL_THROUGH
 	001f92c0 push ax
 	001f92c8 mov mar,0x100004
 	001f92d4 memread4 ax
 	001f92dc pop bx
 	001f92e4 land bx,ax
 	001f92f0 mov ax,bx
		001f92fc: FALL_THROUGH

	[001f92fc]
		001f929c: CONDITIONAL_JUMP
		001f92c0: FALL_THROUGH
 	001f92fc jz 0x001f9340
		001f9340: CONDITIONAL_JUMP
		001f9304: FALL_THROUGH

	[001f9304]
		001f92fc: FALL_THROUGH
 	001f9304 push ax
 	001f930c mov mar,0x100008
 	001f9318 memread4 ax
 	001f9320 pop bx
 	001f9328 land bx,ax
 	001f9334 mov ax,bx
		001f9340: FALL_THROUGH

	[001f9340]
		001f92fc: CONDITIONAL_JUMP
		001f9304: FALL_THROUGH
 	001f9340 jz 0x001f9384
		001f9384: CONDITIONAL_JUMP
		001f9348: FALL_THROUGH

	[001f9348]
		001f9340: FALL_THROUGH
 	001f9348 push ax
 	001f9350 mov mar,0x10000c
 	001f935c memread4 ax
 	001f9364 pop bx
 	001f936c land bx,ax
 	001f9378 mov ax,bx
		001f9384: FALL_THROUGH

	[001f9384]
		001f9340: CONDITIONAL_JUMP
		001f9348: FALL_THROUGH
 	001f9384 jz 0x001f93c8
		001f93c8: CONDITIONAL_JUMP
		001f938c: FALL_THROUGH

	[001f938c]
		001f9384: FALL_THROUGH
 	001f938c push ax
 	001f9394 mov mar,0x100010
 	001f93a0 memread4 ax
 	001f93a8 pop bx
 	001f93b0 land bx,ax
 	001f93bc mov ax,bx
		001f93c8: FALL_THROUGH

	[001f93c8]
		001f9384: CONDITIONAL_JUMP
		001f938c: FALL_THROUGH
 	001f93c8 jz 0x001f940c
		001f940c: CONDITIONAL_JUMP
		001f93d0: FALL_THROUGH

	[001f93d0]
		001f93c8: FALL_THROUGH
 	001f93d0 push ax
 	001f93d8 mov mar,0x100014
 	001f93e4 memread4 ax
 	001f93ec pop bx
 	001f93f4 land bx,ax
 	001f9400 mov ax,bx
		001f940c: FALL_THROUGH

	[001f940c]
		001f93c8: CONDITIONAL_JUMP
		001f93d0: FALL_THROUGH
 	001f940c jz 0x001f9450
		001f9450: CONDITIONAL_JUMP
		001f9414: FALL_THROUGH

	[001f9414]
		001f940c: FALL_THROUGH
 	001f9414 push ax
 	001f941c mov mar,0x100018
 	001f9428 memread4 ax
 	001f9430 pop bx
 	001f9438 land bx,ax
 	001f9444 mov ax,bx
		001f9450: FALL_THROUGH

	[001f9450]
		001f940c: CONDITIONAL_JUMP
		001f9414: FALL_THROUGH
 	001f9450 jz 0x001f9494
		001f9494: CONDITIONAL_JUMP
		001f9458: FALL_THROUGH

	[001f9458]
		001f9450: FALL_THROUGH
 	001f9458 push ax
 	001f9460 mov mar,0x10001c
 	001f946c memread4 ax
 	001f9474 pop bx
 	001f947c land bx,ax
 	001f9488 mov ax,bx
		001f9494: FALL_THROUGH

	[001f9494]
		001f9450: CONDITIONAL_JUMP
		001f9458: FALL_THROUGH
 	001f9494 jz 0x001f94d8
		001f94d8: CONDITIONAL_JUMP
		001f949c: FALL_THROUGH

	[001f949c]
		001f9494: FALL_THROUGH
 	001f949c push ax
 	001f94a4 mov mar,0x100020
 	001f94b0 memread4 ax
 	001f94b8 pop bx
 	001f94c0 land bx,ax
 	001f94cc mov ax,bx
		001f94d8: FALL_THROUGH

	[001f94d8]
		001f9494: CONDITIONAL_JUMP
		001f949c: FALL_THROUGH
 	001f94d8 jz 0x001f951c
		001f951c: CONDITIONAL_JUMP
		001f94e0: FALL_THROUGH

	[001f94e0]
		001f94d8: FALL_THROUGH
 	001f94e0 push ax
 	001f94e8 mov mar,0x100024
 	001f94f4 memread4 ax
 	001f94fc pop bx
 	001f9504 land bx,ax
 	001f9510 mov ax,bx
		001f951c: FALL_THROUGH

	[001f951c]
		001f94d8: CONDITIONAL_JUMP
		001f94e0: FALL_THROUGH
 	001f951c jz 0x001f9560
		001f9560: CONDITIONAL_JUMP
		001f9524: FALL_THROUGH

	[001f9524]
		001f951c: FALL_THROUGH
 	001f9524 push ax
 	001f952c mov mar,0x100028
 	001f9538 memread4 ax
 	001f9540 pop bx
 	001f9548 land bx,ax
 	001f9554 mov ax,bx
		001f9560: FALL_THROUGH

	[001f9560]
		001f951c: CONDITIONAL_JUMP
		001f9524: FALL_THROUGH
 	001f9560 jz 0x001f95ac
		001f95ac: CONDITIONAL_JUMP
		001f9568: FALL_THROUGH

	[001f9568]
		001f9560: FALL_THROUGH
 	001f9568 push ax
 	001f9570 mov mar,0x10002c
 	001f957c memread4 ax
 	001f9584 lnot ax
 	001f958c pop bx
 	001f9594 land bx,ax
 	001f95a0 mov ax,bx
		001f95ac: FALL_THROUGH

	[001f95ac]
		001f9560: CONDITIONAL_JUMP
		001f9568: FALL_THROUGH
 	001f95ac jz 0x001f95f4
		001f95f4: CONDITIONAL_JUMP
		001f95b4: FALL_THROUGH

	[001f95b4]
		001f95ac: FALL_THROUGH
 	001f95b4 mov ax,0x1
 	001f95c0 mov mar,0x10002c
 	001f95cc memwrite4 ax
 	001f95d4 mov ax,0x5
 	001f95e0 mov mar,0x1000d8
 	001f95ec memwrite4 ax
		001f95f4: FALL_THROUGH

	[001f95f4]
		001f6edc: UNCONDITIONAL_JUMP
		001f728c: UNCONDITIONAL_JUMP
		001f7634: UNCONDITIONAL_JUMP
		001f79d4: UNCONDITIONAL_JUMP
		001f7d6c: UNCONDITIONAL_JUMP
		001f80fc: UNCONDITIONAL_JUMP
		001f8484: UNCONDITIONAL_JUMP
		001f8804: UNCONDITIONAL_JUMP
		001f8b7c: UNCONDITIONAL_JUMP
		001f8eec: UNCONDITIONAL_JUMP
		001f9254: UNCONDITIONAL_JUMP
		001f95ac: CONDITIONAL_JUMP
		001f95b4: FALL_THROUGH
 	001f95f4 sourceline 0x2c6e
 	001f95fc jmp 0x001f9758
		001f9758: UNCONDITIONAL_JUMP

	[001f9604]
		001f6b10: CONDITIONAL_JUMP
 	001f9604 sourceline 0x2c71
 	001f960c mov mar,0x32ef20
 	001f9618 memread4 ax
 	001f9620 lnot ax
 	001f9628 jz 0x001f9758
		001f9758: CONDITIONAL_JUMP
		001f9630: FALL_THROUGH

	[001f9630]
		001f9604: FALL_THROUGH
 	001f9630 sourceline 0x2c73
 	001f9638 mov ax,0x1
 	001f9644 mov bx,ax
 	001f9650 mov mar,0x3cef20
 	001f965c mov ax,mar
 	001f9668 push op
 	001f9670 mov op,ax
 	001f9678 farpush bx
 	001f9680 setfuncargs 0x1
 	001f9688 mov ax,0x69ef20
 	001f9694 farcall ax
 	001f969c farsubsp 0x1
 	001f96a4 pop op
 	001f96ac sourceline 0x2c74
 	001f96b4 push op
 	001f96bc mov ax,0x2c77e7
 	001f96c8 farpush ax
 	001f96d0 mov ax,0x138
 	001f96dc farpush ax
 	001f96e4 mov ax,0x92
 	001f96f0 farpush ax
 	001f96f8 mov ax,0x0
 	001f9704 farpush ax
 	001f970c mov mar,0x3cef20
 	001f9718 mov ax,mar
 	001f9724 mov op,ax
 	001f972c setfuncargs 0x4
 	001f9734 mov ax,0x6aef20
 	001f9740 farcall ax
 	001f9748 farsubsp 0x4
 	001f9750 pop op
		001f9758: FALL_THROUGH

	[001f9758]
		001f6a94: CONDITIONAL_JUMP
		001f95f4: UNCONDITIONAL_JUMP
		001f9604: CONDITIONAL_JUMP
		001f9630: FALL_THROUGH
 	001f9758 sourceline 0x2c78
 	001f9760 stackptr 0xc
 	001f9768 memread4 ax
 	001f9770 push ax
 	001f9778 mov ax,0x2
 	001f9784 pop bx
 	001f978c cmpeq bx,ax
 	001f9798 mov ax,bx
 	001f97a4 jz 0x001f9964
		001f9964: CONDITIONAL_JUMP
		001f97ac: FALL_THROUGH

	[001f97ac]
		001f9758: FALL_THROUGH
 	001f97ac sourceline 0x2c7a
 	001f97b4 mov mar,0x626f20
 	001f97c0 mov ax,mar
 	001f97cc push op
 	001f97d4 mov op,ax
 	001f97dc setfuncargs 0x0
 	001f97e4 mov ax,0x606f20
 	001f97f0 farcall ax
 	001f97f8 pop op
 	001f9800 lnot ax
 	001f9808 jz 0x001f9964
		001f9964: CONDITIONAL_JUMP
		001f9810: FALL_THROUGH

	[001f9810]
		001f97ac: FALL_THROUGH
 	001f9810 sourceline 0x2c7c
 	001f9818 mov mar,0x32ef20
 	001f9824 memread4 ax
 	001f982c lnot ax
 	001f9834 jz 0x001f9964
		001f9964: CONDITIONAL_JUMP
		001f983c: FALL_THROUGH

	[001f983c]
		001f9810: FALL_THROUGH
 	001f983c sourceline 0x2c7e
 	001f9844 mov ax,0x1
 	001f9850 mov bx,ax
 	001f985c mov mar,0x3cef20
 	001f9868 mov ax,mar
 	001f9874 push op
 	001f987c mov op,ax
 	001f9884 farpush bx
 	001f988c setfuncargs 0x1
 	001f9894 mov ax,0x69ef20
 	001f98a0 farcall ax
 	001f98a8 farsubsp 0x1
 	001f98b0 pop op
 	001f98b8 sourceline 0x2c7f
 	001f98c0 push op
 	001f98c8 mov ax,0x2c7835
 	001f98d4 farpush ax
 	001f98dc mov ax,0x138
 	001f98e8 farpush ax
 	001f98f0 mov ax,0x92
 	001f98fc farpush ax
 	001f9904 mov ax,0x0
 	001f9910 farpush ax
 	001f9918 mov mar,0x3cef20
 	001f9924 mov ax,mar
 	001f9930 mov op,ax
 	001f9938 setfuncargs 0x4
 	001f9940 mov ax,0x6aef20
 	001f994c farcall ax
 	001f9954 farsubsp 0x4
 	001f995c pop op
		001f9964: FALL_THROUGH

	[001f9964]
		001f9758: CONDITIONAL_JUMP
		001f97ac: CONDITIONAL_JUMP
		001f9810: CONDITIONAL_JUMP
		001f983c: FALL_THROUGH
 	001f9964 sourceline 0x2c83
 	001f996c mov ax,0x0
 	001f9978 stackptr 0x8
 	001f9980 memzerond
 	001f9984 ret

btnRight_OnClick$2:
	[001f9988]
 	001f9988 sourceline 0x2c86
 	001f9990 thisaddr
 	001f9998 stackptr 0x8
 	001f99a0 memread4 ax
 	001f99a8 meminit ax
 	001f99b0 sourceline 0x2c87
 	001f99b8 stackptr 0xc
 	001f99c0 memread4 ax
 	001f99c8 push ax
 	001f99d0 mov ax,0x1
 	001f99dc pop bx
 	001f99e4 cmpeq bx,ax
 	001f99f0 mov ax,bx
 	001f99fc jz 0x001fc64c
		001fc64c: CONDITIONAL_JUMP
		001f9a04: FALL_THROUGH

	[001f9a04]
		001f9988: FALL_THROUGH
 	001f9a04 sourceline 0x2c89
*	001f9a0c mov mar,0x626f20
 	001f9a18 mov ax,mar
 	001f9a24 push op
 	001f9a2c mov op,ax
 	001f9a34 setfuncargs 0x0
 	001f9a3c mov ax,0x606f20
 	001f9a48 farcall ax
 	001f9a50 pop op
 	001f9a58 jz 0x001fc4f8
		001fc4f8: CONDITIONAL_JUMP
		001f9a60: FALL_THROUGH

	[001f9a60]
		001f9a04: FALL_THROUGH
 	001f9a60 sourceline 0x2c8b
 	001f9a68 mov mar,0x100000
 	001f9a74 memread4 ax
 	001f9a7c lnot ax
 	001f9a84 jz 0x001f9ad0
		001f9ad0: CONDITIONAL_JUMP
		001f9a8c: FALL_THROUGH

	[001f9a8c]
		001f9a60: FALL_THROUGH
 	001f9a8c push ax
 	001f9a94 mov mar,0x100004
 	001f9aa0 memread4 ax
 	001f9aa8 lnot ax
 	001f9ab0 pop bx
 	001f9ab8 land bx,ax
 	001f9ac4 mov ax,bx
		001f9ad0: FALL_THROUGH

	[001f9ad0]
		001f9a60: CONDITIONAL_JUMP
		001f9a8c: FALL_THROUGH
 	001f9ad0 jz 0x001f9b1c
		001f9b1c: CONDITIONAL_JUMP
		001f9ad8: FALL_THROUGH

	[001f9ad8]
		001f9ad0: FALL_THROUGH
 	001f9ad8 push ax
 	001f9ae0 mov mar,0x100008
 	001f9aec memread4 ax
 	001f9af4 lnot ax
 	001f9afc pop bx
 	001f9b04 land bx,ax
 	001f9b10 mov ax,bx
		001f9b1c: FALL_THROUGH

	[001f9b1c]
		001f9ad0: CONDITIONAL_JUMP
		001f9ad8: FALL_THROUGH
 	001f9b1c jz 0x001f9b68
		001f9b68: CONDITIONAL_JUMP
		001f9b24: FALL_THROUGH

	[001f9b24]
		001f9b1c: FALL_THROUGH
 	001f9b24 push ax
 	001f9b2c mov mar,0x10000c
 	001f9b38 memread4 ax
 	001f9b40 lnot ax
 	001f9b48 pop bx
 	001f9b50 land bx,ax
 	001f9b5c mov ax,bx
		001f9b68: FALL_THROUGH

	[001f9b68]
		001f9b1c: CONDITIONAL_JUMP
		001f9b24: FALL_THROUGH
 	001f9b68 jz 0x001f9bb4
		001f9bb4: CONDITIONAL_JUMP
		001f9b70: FALL_THROUGH

	[001f9b70]
		001f9b68: FALL_THROUGH
 	001f9b70 push ax
 	001f9b78 mov mar,0x100010
 	001f9b84 memread4 ax
 	001f9b8c lnot ax
 	001f9b94 pop bx
 	001f9b9c land bx,ax
 	001f9ba8 mov ax,bx
		001f9bb4: FALL_THROUGH

	[001f9bb4]
		001f9b68: CONDITIONAL_JUMP
		001f9b70: FALL_THROUGH
 	001f9bb4 jz 0x001f9c00
		001f9c00: CONDITIONAL_JUMP
		001f9bbc: FALL_THROUGH

	[001f9bbc]
		001f9bb4: FALL_THROUGH
 	001f9bbc push ax
 	001f9bc4 mov mar,0x100014
 	001f9bd0 memread4 ax
 	001f9bd8 lnot ax
 	001f9be0 pop bx
 	001f9be8 land bx,ax
 	001f9bf4 mov ax,bx
		001f9c00: FALL_THROUGH

	[001f9c00]
		001f9bb4: CONDITIONAL_JUMP
		001f9bbc: FALL_THROUGH
 	001f9c00 jz 0x001f9c4c
		001f9c4c: CONDITIONAL_JUMP
		001f9c08: FALL_THROUGH

	[001f9c08]
		001f9c00: FALL_THROUGH
 	001f9c08 push ax
 	001f9c10 mov mar,0x100018
 	001f9c1c memread4 ax
 	001f9c24 lnot ax
 	001f9c2c pop bx
 	001f9c34 land bx,ax
 	001f9c40 mov ax,bx
		001f9c4c: FALL_THROUGH

	[001f9c4c]
		001f9c00: CONDITIONAL_JUMP
		001f9c08: FALL_THROUGH
 	001f9c4c jz 0x001f9c98
		001f9c98: CONDITIONAL_JUMP
		001f9c54: FALL_THROUGH

	[001f9c54]
		001f9c4c: FALL_THROUGH
 	001f9c54 push ax
 	001f9c5c mov mar,0x10001c
 	001f9c68 memread4 ax
 	001f9c70 lnot ax
 	001f9c78 pop bx
 	001f9c80 land bx,ax
 	001f9c8c mov ax,bx
		001f9c98: FALL_THROUGH

	[001f9c98]
		001f9c4c: CONDITIONAL_JUMP
		001f9c54: FALL_THROUGH
 	001f9c98 jz 0x001f9ce4
		001f9ce4: CONDITIONAL_JUMP
		001f9ca0: FALL_THROUGH

	[001f9ca0]
		001f9c98: FALL_THROUGH
 	001f9ca0 push ax
 	001f9ca8 mov mar,0x100020
 	001f9cb4 memread4 ax
 	001f9cbc lnot ax
 	001f9cc4 pop bx
 	001f9ccc land bx,ax
 	001f9cd8 mov ax,bx
		001f9ce4: FALL_THROUGH

	[001f9ce4]
		001f9c98: CONDITIONAL_JUMP
		001f9ca0: FALL_THROUGH
 	001f9ce4 jz 0x001f9d30
		001f9d30: CONDITIONAL_JUMP
		001f9cec: FALL_THROUGH

	[001f9cec]
		001f9ce4: FALL_THROUGH
 	001f9cec push ax
 	001f9cf4 mov mar,0x100024
 	001f9d00 memread4 ax
 	001f9d08 lnot ax
 	001f9d10 pop bx
 	001f9d18 land bx,ax
 	001f9d24 mov ax,bx
		001f9d30: FALL_THROUGH

	[001f9d30]
		001f9ce4: CONDITIONAL_JUMP
		001f9cec: FALL_THROUGH
 	001f9d30 jz 0x001f9d7c
		001f9d7c: CONDITIONAL_JUMP
		001f9d38: FALL_THROUGH

	[001f9d38]
		001f9d30: FALL_THROUGH
 	001f9d38 push ax
 	001f9d40 mov mar,0x100028
 	001f9d4c memread4 ax
 	001f9d54 lnot ax
 	001f9d5c pop bx
 	001f9d64 land bx,ax
 	001f9d70 mov ax,bx
		001f9d7c: FALL_THROUGH

	[001f9d7c]
		001f9d30: CONDITIONAL_JUMP
		001f9d38: FALL_THROUGH
 	001f9d7c jz 0x001f9dc8
		001f9dc8: CONDITIONAL_JUMP
		001f9d84: FALL_THROUGH

	[001f9d84]
		001f9d7c: FALL_THROUGH
 	001f9d84 push ax
 	001f9d8c mov mar,0x10002c
 	001f9d98 memread4 ax
 	001f9da0 lnot ax
 	001f9da8 pop bx
 	001f9db0 land bx,ax
 	001f9dbc mov ax,bx
		001f9dc8: FALL_THROUGH

	[001f9dc8]
		001f9d7c: CONDITIONAL_JUMP
		001f9d84: FALL_THROUGH
 	001f9dc8 jz 0x001f9e18
		001f9e18: CONDITIONAL_JUMP
		001f9dd0: FALL_THROUGH

	[001f9dd0]
		001f9dc8: FALL_THROUGH
 	001f9dd0 mov ax,0x1
 	001f9ddc mov mar,0x100000
 	001f9de8 memwrite4 ax
 	001f9df0 mov ax,0x6
 	001f9dfc mov mar,0x1000ac
 	001f9e08 memwrite4 ax
 	001f9e10 jmp 0x001fc4e8
		001fc4e8: UNCONDITIONAL_JUMP

	[001f9e18]
		001f9dc8: CONDITIONAL_JUMP
 	001f9e18 sourceline 0x2c90
 	001f9e20 mov mar,0x100000
 	001f9e2c memread4 ax
 	001f9e34 jz 0x001f9e80
		001f9e80: CONDITIONAL_JUMP
		001f9e3c: FALL_THROUGH

	[001f9e3c]
		001f9e18: FALL_THROUGH
 	001f9e3c push ax
 	001f9e44 mov mar,0x100004
 	001f9e50 memread4 ax
 	001f9e58 lnot ax
 	001f9e60 pop bx
 	001f9e68 land bx,ax
 	001f9e74 mov ax,bx
		001f9e80: FALL_THROUGH

	[001f9e80]
		001f9e18: CONDITIONAL_JUMP
		001f9e3c: FALL_THROUGH
 	001f9e80 jz 0x001f9ecc
		001f9ecc: CONDITIONAL_JUMP
		001f9e88: FALL_THROUGH

	[001f9e88]
		001f9e80: FALL_THROUGH
 	001f9e88 push ax
 	001f9e90 mov mar,0x100008
 	001f9e9c memread4 ax
 	001f9ea4 lnot ax
 	001f9eac pop bx
 	001f9eb4 land bx,ax
 	001f9ec0 mov ax,bx
		001f9ecc: FALL_THROUGH

	[001f9ecc]
		001f9e80: CONDITIONAL_JUMP
		001f9e88: FALL_THROUGH
 	001f9ecc jz 0x001f9f18
		001f9f18: CONDITIONAL_JUMP
		001f9ed4: FALL_THROUGH

	[001f9ed4]
		001f9ecc: FALL_THROUGH
 	001f9ed4 push ax
 	001f9edc mov mar,0x10000c
 	001f9ee8 memread4 ax
 	001f9ef0 lnot ax
 	001f9ef8 pop bx
 	001f9f00 land bx,ax
 	001f9f0c mov ax,bx
		001f9f18: FALL_THROUGH

	[001f9f18]
		001f9ecc: CONDITIONAL_JUMP
		001f9ed4: FALL_THROUGH
 	001f9f18 jz 0x001f9f64
		001f9f64: CONDITIONAL_JUMP
		001f9f20: FALL_THROUGH

	[001f9f20]
		001f9f18: FALL_THROUGH
 	001f9f20 push ax
 	001f9f28 mov mar,0x100010
 	001f9f34 memread4 ax
 	001f9f3c lnot ax
 	001f9f44 pop bx
 	001f9f4c land bx,ax
 	001f9f58 mov ax,bx
		001f9f64: FALL_THROUGH

	[001f9f64]
		001f9f18: CONDITIONAL_JUMP
		001f9f20: FALL_THROUGH
 	001f9f64 jz 0x001f9fb0
		001f9fb0: CONDITIONAL_JUMP
		001f9f6c: FALL_THROUGH

	[001f9f6c]
		001f9f64: FALL_THROUGH
 	001f9f6c push ax
 	001f9f74 mov mar,0x100014
 	001f9f80 memread4 ax
 	001f9f88 lnot ax
 	001f9f90 pop bx
 	001f9f98 land bx,ax
 	001f9fa4 mov ax,bx
		001f9fb0: FALL_THROUGH

	[001f9fb0]
		001f9f64: CONDITIONAL_JUMP
		001f9f6c: FALL_THROUGH
 	001f9fb0 jz 0x001f9ffc
		001f9ffc: CONDITIONAL_JUMP
		001f9fb8: FALL_THROUGH

	[001f9fb8]
		001f9fb0: FALL_THROUGH
 	001f9fb8 push ax
 	001f9fc0 mov mar,0x100018
 	001f9fcc memread4 ax
 	001f9fd4 lnot ax
 	001f9fdc pop bx
 	001f9fe4 land bx,ax
 	001f9ff0 mov ax,bx
		001f9ffc: FALL_THROUGH

	[001f9ffc]
		001f9fb0: CONDITIONAL_JUMP
		001f9fb8: FALL_THROUGH
 	001f9ffc jz 0x001fa048
		001fa048: CONDITIONAL_JUMP
		001fa004: FALL_THROUGH

	[001fa004]
		001f9ffc: FALL_THROUGH
 	001fa004 push ax
 	001fa00c mov mar,0x10001c
 	001fa018 memread4 ax
 	001fa020 lnot ax
 	001fa028 pop bx
 	001fa030 land bx,ax
 	001fa03c mov ax,bx
		001fa048: FALL_THROUGH

	[001fa048]
		001f9ffc: CONDITIONAL_JUMP
		001fa004: FALL_THROUGH
 	001fa048 jz 0x001fa094
		001fa094: CONDITIONAL_JUMP
		001fa050: FALL_THROUGH

	[001fa050]
		001fa048: FALL_THROUGH
 	001fa050 push ax
 	001fa058 mov mar,0x100020
 	001fa064 memread4 ax
 	001fa06c lnot ax
 	001fa074 pop bx
 	001fa07c land bx,ax
 	001fa088 mov ax,bx
		001fa094: FALL_THROUGH

	[001fa094]
		001fa048: CONDITIONAL_JUMP
		001fa050: FALL_THROUGH
 	001fa094 jz 0x001fa0e0
		001fa0e0: CONDITIONAL_JUMP
		001fa09c: FALL_THROUGH

	[001fa09c]
		001fa094: FALL_THROUGH
 	001fa09c push ax
 	001fa0a4 mov mar,0x100024
 	001fa0b0 memread4 ax
 	001fa0b8 lnot ax
 	001fa0c0 pop bx
 	001fa0c8 land bx,ax
 	001fa0d4 mov ax,bx
		001fa0e0: FALL_THROUGH

	[001fa0e0]
		001fa094: CONDITIONAL_JUMP
		001fa09c: FALL_THROUGH
 	001fa0e0 jz 0x001fa12c
		001fa12c: CONDITIONAL_JUMP
		001fa0e8: FALL_THROUGH

	[001fa0e8]
		001fa0e0: FALL_THROUGH
 	001fa0e8 push ax
 	001fa0f0 mov mar,0x100028
 	001fa0fc memread4 ax
 	001fa104 lnot ax
 	001fa10c pop bx
 	001fa114 land bx,ax
 	001fa120 mov ax,bx
		001fa12c: FALL_THROUGH

	[001fa12c]
		001fa0e0: CONDITIONAL_JUMP
		001fa0e8: FALL_THROUGH
 	001fa12c jz 0x001fa178
		001fa178: CONDITIONAL_JUMP
		001fa134: FALL_THROUGH

	[001fa134]
		001fa12c: FALL_THROUGH
 	001fa134 push ax
 	001fa13c mov mar,0x10002c
 	001fa148 memread4 ax
 	001fa150 lnot ax
 	001fa158 pop bx
 	001fa160 land bx,ax
 	001fa16c mov ax,bx
		001fa178: FALL_THROUGH

	[001fa178]
		001fa12c: CONDITIONAL_JUMP
		001fa134: FALL_THROUGH
 	001fa178 jz 0x001fa1c8
		001fa1c8: CONDITIONAL_JUMP
		001fa180: FALL_THROUGH

	[001fa180]
		001fa178: FALL_THROUGH
 	001fa180 mov ax,0x1
 	001fa18c mov mar,0x100004
 	001fa198 memwrite4 ax
 	001fa1a0 mov ax,0x6
 	001fa1ac mov mar,0x1000b0
 	001fa1b8 memwrite4 ax
 	001fa1c0 jmp 0x001fc4e8
		001fc4e8: UNCONDITIONAL_JUMP

	[001fa1c8]
		001fa178: CONDITIONAL_JUMP
 	001fa1c8 sourceline 0x2c95
 	001fa1d0 mov mar,0x100000
 	001fa1dc memread4 ax
 	001fa1e4 jz 0x001fa228
		001fa228: CONDITIONAL_JUMP
		001fa1ec: FALL_THROUGH

	[001fa1ec]
		001fa1c8: FALL_THROUGH
 	001fa1ec push ax
 	001fa1f4 mov mar,0x100004
 	001fa200 memread4 ax
 	001fa208 pop bx
 	001fa210 land bx,ax
 	001fa21c mov ax,bx
		001fa228: FALL_THROUGH

	[001fa228]
		001fa1c8: CONDITIONAL_JUMP
		001fa1ec: FALL_THROUGH
 	001fa228 jz 0x001fa274
		001fa274: CONDITIONAL_JUMP
		001fa230: FALL_THROUGH

	[001fa230]
		001fa228: FALL_THROUGH
 	001fa230 push ax
 	001fa238 mov mar,0x100008
 	001fa244 memread4 ax
 	001fa24c lnot ax
 	001fa254 pop bx
 	001fa25c land bx,ax
 	001fa268 mov ax,bx
		001fa274: FALL_THROUGH

	[001fa274]
		001fa228: CONDITIONAL_JUMP
		001fa230: FALL_THROUGH
 	001fa274 jz 0x001fa2c0
		001fa2c0: CONDITIONAL_JUMP
		001fa27c: FALL_THROUGH

	[001fa27c]
		001fa274: FALL_THROUGH
 	001fa27c push ax
 	001fa284 mov mar,0x10000c
 	001fa290 memread4 ax
 	001fa298 lnot ax
 	001fa2a0 pop bx
 	001fa2a8 land bx,ax
 	001fa2b4 mov ax,bx
		001fa2c0: FALL_THROUGH

	[001fa2c0]
		001fa274: CONDITIONAL_JUMP
		001fa27c: FALL_THROUGH
 	001fa2c0 jz 0x001fa30c
		001fa30c: CONDITIONAL_JUMP
		001fa2c8: FALL_THROUGH

	[001fa2c8]
		001fa2c0: FALL_THROUGH
 	001fa2c8 push ax
 	001fa2d0 mov mar,0x100010
 	001fa2dc memread4 ax
 	001fa2e4 lnot ax
 	001fa2ec pop bx
 	001fa2f4 land bx,ax
 	001fa300 mov ax,bx
		001fa30c: FALL_THROUGH

	[001fa30c]
		001fa2c0: CONDITIONAL_JUMP
		001fa2c8: FALL_THROUGH
 	001fa30c jz 0x001fa358
		001fa358: CONDITIONAL_JUMP
		001fa314: FALL_THROUGH

	[001fa314]
		001fa30c: FALL_THROUGH
 	001fa314 push ax
 	001fa31c mov mar,0x100014
 	001fa328 memread4 ax
 	001fa330 lnot ax
 	001fa338 pop bx
 	001fa340 land bx,ax
 	001fa34c mov ax,bx
		001fa358: FALL_THROUGH

	[001fa358]
		001fa30c: CONDITIONAL_JUMP
		001fa314: FALL_THROUGH
 	001fa358 jz 0x001fa3a4
		001fa3a4: CONDITIONAL_JUMP
		001fa360: FALL_THROUGH

	[001fa360]
		001fa358: FALL_THROUGH
 	001fa360 push ax
 	001fa368 mov mar,0x100018
 	001fa374 memread4 ax
 	001fa37c lnot ax
 	001fa384 pop bx
 	001fa38c land bx,ax
 	001fa398 mov ax,bx
		001fa3a4: FALL_THROUGH

	[001fa3a4]
		001fa358: CONDITIONAL_JUMP
		001fa360: FALL_THROUGH
 	001fa3a4 jz 0x001fa3f0
		001fa3f0: CONDITIONAL_JUMP
		001fa3ac: FALL_THROUGH

	[001fa3ac]
		001fa3a4: FALL_THROUGH
 	001fa3ac push ax
 	001fa3b4 mov mar,0x10001c
 	001fa3c0 memread4 ax
 	001fa3c8 lnot ax
 	001fa3d0 pop bx
 	001fa3d8 land bx,ax
 	001fa3e4 mov ax,bx
		001fa3f0: FALL_THROUGH

	[001fa3f0]
		001fa3a4: CONDITIONAL_JUMP
		001fa3ac: FALL_THROUGH
 	001fa3f0 jz 0x001fa43c
		001fa43c: CONDITIONAL_JUMP
		001fa3f8: FALL_THROUGH

	[001fa3f8]
		001fa3f0: FALL_THROUGH
 	001fa3f8 push ax
 	001fa400 mov mar,0x100020
 	001fa40c memread4 ax
 	001fa414 lnot ax
 	001fa41c pop bx
 	001fa424 land bx,ax
 	001fa430 mov ax,bx
		001fa43c: FALL_THROUGH

	[001fa43c]
		001fa3f0: CONDITIONAL_JUMP
		001fa3f8: FALL_THROUGH
 	001fa43c jz 0x001fa488
		001fa488: CONDITIONAL_JUMP
		001fa444: FALL_THROUGH

	[001fa444]
		001fa43c: FALL_THROUGH
 	001fa444 push ax
 	001fa44c mov mar,0x100024
 	001fa458 memread4 ax
 	001fa460 lnot ax
 	001fa468 pop bx
 	001fa470 land bx,ax
 	001fa47c mov ax,bx
		001fa488: FALL_THROUGH

	[001fa488]
		001fa43c: CONDITIONAL_JUMP
		001fa444: FALL_THROUGH
 	001fa488 jz 0x001fa4d4
		001fa4d4: CONDITIONAL_JUMP
		001fa490: FALL_THROUGH

	[001fa490]
		001fa488: FALL_THROUGH
 	001fa490 push ax
 	001fa498 mov mar,0x100028
 	001fa4a4 memread4 ax
 	001fa4ac lnot ax
 	001fa4b4 pop bx
 	001fa4bc land bx,ax
 	001fa4c8 mov ax,bx
		001fa4d4: FALL_THROUGH

	[001fa4d4]
		001fa488: CONDITIONAL_JUMP
		001fa490: FALL_THROUGH
 	001fa4d4 jz 0x001fa520
		001fa520: CONDITIONAL_JUMP
		001fa4dc: FALL_THROUGH

	[001fa4dc]
		001fa4d4: FALL_THROUGH
 	001fa4dc push ax
 	001fa4e4 mov mar,0x10002c
 	001fa4f0 memread4 ax
 	001fa4f8 lnot ax
 	001fa500 pop bx
 	001fa508 land bx,ax
 	001fa514 mov ax,bx
		001fa520: FALL_THROUGH

	[001fa520]
		001fa4d4: CONDITIONAL_JUMP
		001fa4dc: FALL_THROUGH
 	001fa520 jz 0x001fa570
		001fa570: CONDITIONAL_JUMP
		001fa528: FALL_THROUGH

	[001fa528]
		001fa520: FALL_THROUGH
 	001fa528 mov ax,0x1
 	001fa534 mov mar,0x100008
 	001fa540 memwrite4 ax
 	001fa548 mov ax,0x6
 	001fa554 mov mar,0x1000b4
 	001fa560 memwrite4 ax
 	001fa568 jmp 0x001fc4e8
		001fc4e8: UNCONDITIONAL_JUMP

	[001fa570]
		001fa520: CONDITIONAL_JUMP
 	001fa570 sourceline 0x2c9a
 	001fa578 mov mar,0x100000
 	001fa584 memread4 ax
 	001fa58c jz 0x001fa5d0
		001fa5d0: CONDITIONAL_JUMP
		001fa594: FALL_THROUGH

	[001fa594]
		001fa570: FALL_THROUGH
 	001fa594 push ax
 	001fa59c mov mar,0x100004
 	001fa5a8 memread4 ax
 	001fa5b0 pop bx
 	001fa5b8 land bx,ax
 	001fa5c4 mov ax,bx
		001fa5d0: FALL_THROUGH

	[001fa5d0]
		001fa570: CONDITIONAL_JUMP
		001fa594: FALL_THROUGH
 	001fa5d0 jz 0x001fa614
		001fa614: CONDITIONAL_JUMP
		001fa5d8: FALL_THROUGH

	[001fa5d8]
		001fa5d0: FALL_THROUGH
 	001fa5d8 push ax
 	001fa5e0 mov mar,0x100008
 	001fa5ec memread4 ax
 	001fa5f4 pop bx
 	001fa5fc land bx,ax
 	001fa608 mov ax,bx
		001fa614: FALL_THROUGH

	[001fa614]
		001fa5d0: CONDITIONAL_JUMP
		001fa5d8: FALL_THROUGH
 	001fa614 jz 0x001fa660
		001fa660: CONDITIONAL_JUMP
		001fa61c: FALL_THROUGH

	[001fa61c]
		001fa614: FALL_THROUGH
 	001fa61c push ax
 	001fa624 mov mar,0x10000c
 	001fa630 memread4 ax
 	001fa638 lnot ax
 	001fa640 pop bx
 	001fa648 land bx,ax
 	001fa654 mov ax,bx
		001fa660: FALL_THROUGH

	[001fa660]
		001fa614: CONDITIONAL_JUMP
		001fa61c: FALL_THROUGH
 	001fa660 jz 0x001fa6ac
		001fa6ac: CONDITIONAL_JUMP
		001fa668: FALL_THROUGH

	[001fa668]
		001fa660: FALL_THROUGH
 	001fa668 push ax
 	001fa670 mov mar,0x100010
 	001fa67c memread4 ax
 	001fa684 lnot ax
 	001fa68c pop bx
 	001fa694 land bx,ax
 	001fa6a0 mov ax,bx
		001fa6ac: FALL_THROUGH

	[001fa6ac]
		001fa660: CONDITIONAL_JUMP
		001fa668: FALL_THROUGH
 	001fa6ac jz 0x001fa6f8
		001fa6f8: CONDITIONAL_JUMP
		001fa6b4: FALL_THROUGH

	[001fa6b4]
		001fa6ac: FALL_THROUGH
 	001fa6b4 push ax
 	001fa6bc mov mar,0x100014
 	001fa6c8 memread4 ax
 	001fa6d0 lnot ax
 	001fa6d8 pop bx
 	001fa6e0 land bx,ax
 	001fa6ec mov ax,bx
		001fa6f8: FALL_THROUGH

	[001fa6f8]
		001fa6ac: CONDITIONAL_JUMP
		001fa6b4: FALL_THROUGH
 	001fa6f8 jz 0x001fa744
		001fa744: CONDITIONAL_JUMP
		001fa700: FALL_THROUGH

	[001fa700]
		001fa6f8: FALL_THROUGH
 	001fa700 push ax
 	001fa708 mov mar,0x100018
 	001fa714 memread4 ax
 	001fa71c lnot ax
 	001fa724 pop bx
 	001fa72c land bx,ax
 	001fa738 mov ax,bx
		001fa744: FALL_THROUGH

	[001fa744]
		001fa6f8: CONDITIONAL_JUMP
		001fa700: FALL_THROUGH
 	001fa744 jz 0x001fa790
		001fa790: CONDITIONAL_JUMP
		001fa74c: FALL_THROUGH

	[001fa74c]
		001fa744: FALL_THROUGH
 	001fa74c push ax
 	001fa754 mov mar,0x10001c
 	001fa760 memread4 ax
 	001fa768 lnot ax
 	001fa770 pop bx
 	001fa778 land bx,ax
 	001fa784 mov ax,bx
		001fa790: FALL_THROUGH

	[001fa790]
		001fa744: CONDITIONAL_JUMP
		001fa74c: FALL_THROUGH
 	001fa790 jz 0x001fa7dc
		001fa7dc: CONDITIONAL_JUMP
		001fa798: FALL_THROUGH

	[001fa798]
		001fa790: FALL_THROUGH
 	001fa798 push ax
 	001fa7a0 mov mar,0x100020
 	001fa7ac memread4 ax
 	001fa7b4 lnot ax
 	001fa7bc pop bx
 	001fa7c4 land bx,ax
 	001fa7d0 mov ax,bx
		001fa7dc: FALL_THROUGH

	[001fa7dc]
		001fa790: CONDITIONAL_JUMP
		001fa798: FALL_THROUGH
 	001fa7dc jz 0x001fa828
		001fa828: CONDITIONAL_JUMP
		001fa7e4: FALL_THROUGH

	[001fa7e4]
		001fa7dc: FALL_THROUGH
 	001fa7e4 push ax
 	001fa7ec mov mar,0x100024
 	001fa7f8 memread4 ax
 	001fa800 lnot ax
 	001fa808 pop bx
 	001fa810 land bx,ax
 	001fa81c mov ax,bx
		001fa828: FALL_THROUGH

	[001fa828]
		001fa7dc: CONDITIONAL_JUMP
		001fa7e4: FALL_THROUGH
 	001fa828 jz 0x001fa874
		001fa874: CONDITIONAL_JUMP
		001fa830: FALL_THROUGH

	[001fa830]
		001fa828: FALL_THROUGH
 	001fa830 push ax
 	001fa838 mov mar,0x100028
 	001fa844 memread4 ax
 	001fa84c lnot ax
 	001fa854 pop bx
 	001fa85c land bx,ax
 	001fa868 mov ax,bx
		001fa874: FALL_THROUGH

	[001fa874]
		001fa828: CONDITIONAL_JUMP
		001fa830: FALL_THROUGH
 	001fa874 jz 0x001fa8c0
		001fa8c0: CONDITIONAL_JUMP
		001fa87c: FALL_THROUGH

	[001fa87c]
		001fa874: FALL_THROUGH
 	001fa87c push ax
 	001fa884 mov mar,0x10002c
 	001fa890 memread4 ax
 	001fa898 lnot ax
 	001fa8a0 pop bx
 	001fa8a8 land bx,ax
 	001fa8b4 mov ax,bx
		001fa8c0: FALL_THROUGH

	[001fa8c0]
		001fa874: CONDITIONAL_JUMP
		001fa87c: FALL_THROUGH
 	001fa8c0 jz 0x001fa910
		001fa910: CONDITIONAL_JUMP
		001fa8c8: FALL_THROUGH

	[001fa8c8]
		001fa8c0: FALL_THROUGH
 	001fa8c8 mov ax,0x1
 	001fa8d4 mov mar,0x10000c
 	001fa8e0 memwrite4 ax
 	001fa8e8 mov ax,0x6
 	001fa8f4 mov mar,0x1000b8
 	001fa900 memwrite4 ax
 	001fa908 jmp 0x001fc4e8
		001fc4e8: UNCONDITIONAL_JUMP

	[001fa910]
		001fa8c0: CONDITIONAL_JUMP
 	001fa910 sourceline 0x2c9f
 	001fa918 mov mar,0x100000
 	001fa924 memread4 ax
 	001fa92c jz 0x001fa970
		001fa970: CONDITIONAL_JUMP
		001fa934: FALL_THROUGH

	[001fa934]
		001fa910: FALL_THROUGH
 	001fa934 push ax
 	001fa93c mov mar,0x100004
 	001fa948 memread4 ax
 	001fa950 pop bx
 	001fa958 land bx,ax
 	001fa964 mov ax,bx
		001fa970: FALL_THROUGH

	[001fa970]
		001fa910: CONDITIONAL_JUMP
		001fa934: FALL_THROUGH
 	001fa970 jz 0x001fa9b4
		001fa9b4: CONDITIONAL_JUMP
		001fa978: FALL_THROUGH

	[001fa978]
		001fa970: FALL_THROUGH
 	001fa978 push ax
 	001fa980 mov mar,0x100008
 	001fa98c memread4 ax
 	001fa994 pop bx
 	001fa99c land bx,ax
 	001fa9a8 mov ax,bx
		001fa9b4: FALL_THROUGH

	[001fa9b4]
		001fa970: CONDITIONAL_JUMP
		001fa978: FALL_THROUGH
 	001fa9b4 jz 0x001fa9f8
		001fa9f8: CONDITIONAL_JUMP
		001fa9bc: FALL_THROUGH

	[001fa9bc]
		001fa9b4: FALL_THROUGH
 	001fa9bc push ax
 	001fa9c4 mov mar,0x10000c
 	001fa9d0 memread4 ax
 	001fa9d8 pop bx
 	001fa9e0 land bx,ax
 	001fa9ec mov ax,bx
		001fa9f8: FALL_THROUGH

	[001fa9f8]
		001fa9b4: CONDITIONAL_JUMP
		001fa9bc: FALL_THROUGH
 	001fa9f8 jz 0x001faa44
		001faa44: CONDITIONAL_JUMP
		001faa00: FALL_THROUGH

	[001faa00]
		001fa9f8: FALL_THROUGH
 	001faa00 push ax
 	001faa08 mov mar,0x100010
 	001faa14 memread4 ax
 	001faa1c lnot ax
 	001faa24 pop bx
 	001faa2c land bx,ax
 	001faa38 mov ax,bx
		001faa44: FALL_THROUGH

	[001faa44]
		001fa9f8: CONDITIONAL_JUMP
		001faa00: FALL_THROUGH
 	001faa44 jz 0x001faa90
		001faa90: CONDITIONAL_JUMP
		001faa4c: FALL_THROUGH

	[001faa4c]
		001faa44: FALL_THROUGH
 	001faa4c push ax
 	001faa54 mov mar,0x100014
 	001faa60 memread4 ax
 	001faa68 lnot ax
 	001faa70 pop bx
 	001faa78 land bx,ax
 	001faa84 mov ax,bx
		001faa90: FALL_THROUGH

	[001faa90]
		001faa44: CONDITIONAL_JUMP
		001faa4c: FALL_THROUGH
 	001faa90 jz 0x001faadc
		001faadc: CONDITIONAL_JUMP
		001faa98: FALL_THROUGH

	[001faa98]
		001faa90: FALL_THROUGH
 	001faa98 push ax
 	001faaa0 mov mar,0x100018
 	001faaac memread4 ax
 	001faab4 lnot ax
 	001faabc pop bx
 	001faac4 land bx,ax
 	001faad0 mov ax,bx
		001faadc: FALL_THROUGH

	[001faadc]
		001faa90: CONDITIONAL_JUMP
		001faa98: FALL_THROUGH
 	001faadc jz 0x001fab28
		001fab28: CONDITIONAL_JUMP
		001faae4: FALL_THROUGH

	[001faae4]
		001faadc: FALL_THROUGH
 	001faae4 push ax
 	001faaec mov mar,0x10001c
 	001faaf8 memread4 ax
 	001fab00 lnot ax
 	001fab08 pop bx
 	001fab10 land bx,ax
 	001fab1c mov ax,bx
		001fab28: FALL_THROUGH

	[001fab28]
		001faadc: CONDITIONAL_JUMP
		001faae4: FALL_THROUGH
 	001fab28 jz 0x001fab74
		001fab74: CONDITIONAL_JUMP
		001fab30: FALL_THROUGH

	[001fab30]
		001fab28: FALL_THROUGH
 	001fab30 push ax
 	001fab38 mov mar,0x100020
 	001fab44 memread4 ax
 	001fab4c lnot ax
 	001fab54 pop bx
 	001fab5c land bx,ax
 	001fab68 mov ax,bx
		001fab74: FALL_THROUGH

	[001fab74]
		001fab28: CONDITIONAL_JUMP
		001fab30: FALL_THROUGH
 	001fab74 jz 0x001fabc0
		001fabc0: CONDITIONAL_JUMP
		001fab7c: FALL_THROUGH

	[001fab7c]
		001fab74: FALL_THROUGH
 	001fab7c push ax
 	001fab84 mov mar,0x100024
 	001fab90 memread4 ax
 	001fab98 lnot ax
 	001faba0 pop bx
 	001faba8 land bx,ax
 	001fabb4 mov ax,bx
		001fabc0: FALL_THROUGH

	[001fabc0]
		001fab74: CONDITIONAL_JUMP
		001fab7c: FALL_THROUGH
 	001fabc0 jz 0x001fac0c
		001fac0c: CONDITIONAL_JUMP
		001fabc8: FALL_THROUGH

	[001fabc8]
		001fabc0: FALL_THROUGH
 	001fabc8 push ax
 	001fabd0 mov mar,0x100028
 	001fabdc memread4 ax
 	001fabe4 lnot ax
 	001fabec pop bx
 	001fabf4 land bx,ax
 	001fac00 mov ax,bx
		001fac0c: FALL_THROUGH

	[001fac0c]
		001fabc0: CONDITIONAL_JUMP
		001fabc8: FALL_THROUGH
 	001fac0c jz 0x001fac58
		001fac58: CONDITIONAL_JUMP
		001fac14: FALL_THROUGH

	[001fac14]
		001fac0c: FALL_THROUGH
 	001fac14 push ax
 	001fac1c mov mar,0x10002c
 	001fac28 memread4 ax
 	001fac30 lnot ax
 	001fac38 pop bx
 	001fac40 land bx,ax
 	001fac4c mov ax,bx
		001fac58: FALL_THROUGH

	[001fac58]
		001fac0c: CONDITIONAL_JUMP
		001fac14: FALL_THROUGH
 	001fac58 jz 0x001faca8
		001faca8: CONDITIONAL_JUMP
		001fac60: FALL_THROUGH

	[001fac60]
		001fac58: FALL_THROUGH
 	001fac60 mov ax,0x1
 	001fac6c mov mar,0x100010
 	001fac78 memwrite4 ax
 	001fac80 mov ax,0x6
 	001fac8c mov mar,0x1000bc
 	001fac98 memwrite4 ax
 	001faca0 jmp 0x001fc4e8
		001fc4e8: UNCONDITIONAL_JUMP

	[001faca8]
		001fac58: CONDITIONAL_JUMP
 	001faca8 sourceline 0x2ca4
 	001facb0 mov mar,0x100000
 	001facbc memread4 ax
 	001facc4 jz 0x001fad08
		001fad08: CONDITIONAL_JUMP
		001faccc: FALL_THROUGH

	[001faccc]
		001faca8: FALL_THROUGH
 	001faccc push ax
 	001facd4 mov mar,0x100004
 	001face0 memread4 ax
 	001face8 pop bx
 	001facf0 land bx,ax
 	001facfc mov ax,bx
		001fad08: FALL_THROUGH

	[001fad08]
		001faca8: CONDITIONAL_JUMP
		001faccc: FALL_THROUGH
 	001fad08 jz 0x001fad4c
		001fad4c: CONDITIONAL_JUMP
		001fad10: FALL_THROUGH

	[001fad10]
		001fad08: FALL_THROUGH
 	001fad10 push ax
 	001fad18 mov mar,0x100008
 	001fad24 memread4 ax
 	001fad2c pop bx
 	001fad34 land bx,ax
 	001fad40 mov ax,bx
		001fad4c: FALL_THROUGH

	[001fad4c]
		001fad08: CONDITIONAL_JUMP
		001fad10: FALL_THROUGH
 	001fad4c jz 0x001fad90
		001fad90: CONDITIONAL_JUMP
		001fad54: FALL_THROUGH

	[001fad54]
		001fad4c: FALL_THROUGH
 	001fad54 push ax
 	001fad5c mov mar,0x10000c
 	001fad68 memread4 ax
 	001fad70 pop bx
 	001fad78 land bx,ax
 	001fad84 mov ax,bx
		001fad90: FALL_THROUGH

	[001fad90]
		001fad4c: CONDITIONAL_JUMP
		001fad54: FALL_THROUGH
 	001fad90 jz 0x001fadd4
		001fadd4: CONDITIONAL_JUMP
		001fad98: FALL_THROUGH

	[001fad98]
		001fad90: FALL_THROUGH
 	001fad98 push ax
 	001fada0 mov mar,0x100010
 	001fadac memread4 ax
 	001fadb4 pop bx
 	001fadbc land bx,ax
 	001fadc8 mov ax,bx
		001fadd4: FALL_THROUGH

	[001fadd4]
		001fad90: CONDITIONAL_JUMP
		001fad98: FALL_THROUGH
 	001fadd4 jz 0x001fae20
		001fae20: CONDITIONAL_JUMP
		001faddc: FALL_THROUGH

	[001faddc]
		001fadd4: FALL_THROUGH
 	001faddc push ax
 	001fade4 mov mar,0x100014
 	001fadf0 memread4 ax
 	001fadf8 lnot ax
 	001fae00 pop bx
 	001fae08 land bx,ax
 	001fae14 mov ax,bx
		001fae20: FALL_THROUGH

	[001fae20]
		001fadd4: CONDITIONAL_JUMP
		001faddc: FALL_THROUGH
 	001fae20 jz 0x001fae6c
		001fae6c: CONDITIONAL_JUMP
		001fae28: FALL_THROUGH

	[001fae28]
		001fae20: FALL_THROUGH
 	001fae28 push ax
 	001fae30 mov mar,0x100018
 	001fae3c memread4 ax
 	001fae44 lnot ax
 	001fae4c pop bx
 	001fae54 land bx,ax
 	001fae60 mov ax,bx
		001fae6c: FALL_THROUGH

	[001fae6c]
		001fae20: CONDITIONAL_JUMP
		001fae28: FALL_THROUGH
 	001fae6c jz 0x001faeb8
		001faeb8: CONDITIONAL_JUMP
		001fae74: FALL_THROUGH

	[001fae74]
		001fae6c: FALL_THROUGH
 	001fae74 push ax
 	001fae7c mov mar,0x10001c
 	001fae88 memread4 ax
 	001fae90 lnot ax
 	001fae98 pop bx
 	001faea0 land bx,ax
 	001faeac mov ax,bx
		001faeb8: FALL_THROUGH

	[001faeb8]
		001fae6c: CONDITIONAL_JUMP
		001fae74: FALL_THROUGH
 	001faeb8 jz 0x001faf04
		001faf04: CONDITIONAL_JUMP
		001faec0: FALL_THROUGH

	[001faec0]
		001faeb8: FALL_THROUGH
 	001faec0 push ax
 	001faec8 mov mar,0x100020
 	001faed4 memread4 ax
 	001faedc lnot ax
 	001faee4 pop bx
 	001faeec land bx,ax
 	001faef8 mov ax,bx
		001faf04: FALL_THROUGH

	[001faf04]
		001faeb8: CONDITIONAL_JUMP
		001faec0: FALL_THROUGH
 	001faf04 jz 0x001faf50
		001faf50: CONDITIONAL_JUMP
		001faf0c: FALL_THROUGH

	[001faf0c]
		001faf04: FALL_THROUGH
 	001faf0c push ax
 	001faf14 mov mar,0x100024
 	001faf20 memread4 ax
 	001faf28 lnot ax
 	001faf30 pop bx
 	001faf38 land bx,ax
 	001faf44 mov ax,bx
		001faf50: FALL_THROUGH

	[001faf50]
		001faf04: CONDITIONAL_JUMP
		001faf0c: FALL_THROUGH
 	001faf50 jz 0x001faf9c
		001faf9c: CONDITIONAL_JUMP
		001faf58: FALL_THROUGH

	[001faf58]
		001faf50: FALL_THROUGH
 	001faf58 push ax
 	001faf60 mov mar,0x100028
 	001faf6c memread4 ax
 	001faf74 lnot ax
 	001faf7c pop bx
 	001faf84 land bx,ax
 	001faf90 mov ax,bx
		001faf9c: FALL_THROUGH

	[001faf9c]
		001faf50: CONDITIONAL_JUMP
		001faf58: FALL_THROUGH
 	001faf9c jz 0x001fafe8
		001fafe8: CONDITIONAL_JUMP
		001fafa4: FALL_THROUGH

	[001fafa4]
		001faf9c: FALL_THROUGH
 	001fafa4 push ax
 	001fafac mov mar,0x10002c
 	001fafb8 memread4 ax
 	001fafc0 lnot ax
 	001fafc8 pop bx
 	001fafd0 land bx,ax
 	001fafdc mov ax,bx
		001fafe8: FALL_THROUGH

	[001fafe8]
		001faf9c: CONDITIONAL_JUMP
		001fafa4: FALL_THROUGH
 	001fafe8 jz 0x001fb038
		001fb038: CONDITIONAL_JUMP
		001faff0: FALL_THROUGH

	[001faff0]
		001fafe8: FALL_THROUGH
 	001faff0 mov ax,0x1
 	001faffc mov mar,0x100014
 	001fb008 memwrite4 ax
 	001fb010 mov ax,0x6
 	001fb01c mov mar,0x1000c0
 	001fb028 memwrite4 ax
 	001fb030 jmp 0x001fc4e8
		001fc4e8: UNCONDITIONAL_JUMP

	[001fb038]
		001fafe8: CONDITIONAL_JUMP
 	001fb038 sourceline 0x2ca9
 	001fb040 mov mar,0x100000
 	001fb04c memread4 ax
 	001fb054 jz 0x001fb098
		001fb098: CONDITIONAL_JUMP
		001fb05c: FALL_THROUGH

	[001fb05c]
		001fb038: FALL_THROUGH
 	001fb05c push ax
 	001fb064 mov mar,0x100004
 	001fb070 memread4 ax
 	001fb078 pop bx
 	001fb080 land bx,ax
 	001fb08c mov ax,bx
		001fb098: FALL_THROUGH

	[001fb098]
		001fb038: CONDITIONAL_JUMP
		001fb05c: FALL_THROUGH
 	001fb098 jz 0x001fb0dc
		001fb0dc: CONDITIONAL_JUMP
		001fb0a0: FALL_THROUGH

	[001fb0a0]
		001fb098: FALL_THROUGH
 	001fb0a0 push ax
 	001fb0a8 mov mar,0x100008
 	001fb0b4 memread4 ax
 	001fb0bc pop bx
 	001fb0c4 land bx,ax
 	001fb0d0 mov ax,bx
		001fb0dc: FALL_THROUGH

	[001fb0dc]
		001fb098: CONDITIONAL_JUMP
		001fb0a0: FALL_THROUGH
 	001fb0dc jz 0x001fb120
		001fb120: CONDITIONAL_JUMP
		001fb0e4: FALL_THROUGH

	[001fb0e4]
		001fb0dc: FALL_THROUGH
 	001fb0e4 push ax
 	001fb0ec mov mar,0x10000c
 	001fb0f8 memread4 ax
 	001fb100 pop bx
 	001fb108 land bx,ax
 	001fb114 mov ax,bx
		001fb120: FALL_THROUGH

	[001fb120]
		001fb0dc: CONDITIONAL_JUMP
		001fb0e4: FALL_THROUGH
 	001fb120 jz 0x001fb164
		001fb164: CONDITIONAL_JUMP
		001fb128: FALL_THROUGH

	[001fb128]
		001fb120: FALL_THROUGH
 	001fb128 push ax
 	001fb130 mov mar,0x100010
 	001fb13c memread4 ax
 	001fb144 pop bx
 	001fb14c land bx,ax
 	001fb158 mov ax,bx
		001fb164: FALL_THROUGH

	[001fb164]
		001fb120: CONDITIONAL_JUMP
		001fb128: FALL_THROUGH
 	001fb164 jz 0x001fb1a8
		001fb1a8: CONDITIONAL_JUMP
		001fb16c: FALL_THROUGH

	[001fb16c]
		001fb164: FALL_THROUGH
 	001fb16c push ax
 	001fb174 mov mar,0x100014
 	001fb180 memread4 ax
 	001fb188 pop bx
 	001fb190 land bx,ax
 	001fb19c mov ax,bx
		001fb1a8: FALL_THROUGH

	[001fb1a8]
		001fb164: CONDITIONAL_JUMP
		001fb16c: FALL_THROUGH
 	001fb1a8 jz 0x001fb1f4
		001fb1f4: CONDITIONAL_JUMP
		001fb1b0: FALL_THROUGH

	[001fb1b0]
		001fb1a8: FALL_THROUGH
 	001fb1b0 push ax
 	001fb1b8 mov mar,0x100018
 	001fb1c4 memread4 ax
 	001fb1cc lnot ax
 	001fb1d4 pop bx
 	001fb1dc land bx,ax
 	001fb1e8 mov ax,bx
		001fb1f4: FALL_THROUGH

	[001fb1f4]
		001fb1a8: CONDITIONAL_JUMP
		001fb1b0: FALL_THROUGH
 	001fb1f4 jz 0x001fb240
		001fb240: CONDITIONAL_JUMP
		001fb1fc: FALL_THROUGH

	[001fb1fc]
		001fb1f4: FALL_THROUGH
 	001fb1fc push ax
 	001fb204 mov mar,0x10001c
 	001fb210 memread4 ax
 	001fb218 lnot ax
 	001fb220 pop bx
 	001fb228 land bx,ax
 	001fb234 mov ax,bx
		001fb240: FALL_THROUGH

	[001fb240]
		001fb1f4: CONDITIONAL_JUMP
		001fb1fc: FALL_THROUGH
 	001fb240 jz 0x001fb28c
		001fb28c: CONDITIONAL_JUMP
		001fb248: FALL_THROUGH

	[001fb248]
		001fb240: FALL_THROUGH
 	001fb248 push ax
 	001fb250 mov mar,0x100020
 	001fb25c memread4 ax
 	001fb264 lnot ax
 	001fb26c pop bx
 	001fb274 land bx,ax
 	001fb280 mov ax,bx
		001fb28c: FALL_THROUGH

	[001fb28c]
		001fb240: CONDITIONAL_JUMP
		001fb248: FALL_THROUGH
 	001fb28c jz 0x001fb2d8
		001fb2d8: CONDITIONAL_JUMP
		001fb294: FALL_THROUGH

	[001fb294]
		001fb28c: FALL_THROUGH
 	001fb294 push ax
 	001fb29c mov mar,0x100024
 	001fb2a8 memread4 ax
 	001fb2b0 lnot ax
 	001fb2b8 pop bx
 	001fb2c0 land bx,ax
 	001fb2cc mov ax,bx
		001fb2d8: FALL_THROUGH

	[001fb2d8]
		001fb28c: CONDITIONAL_JUMP
		001fb294: FALL_THROUGH
 	001fb2d8 jz 0x001fb324
		001fb324: CONDITIONAL_JUMP
		001fb2e0: FALL_THROUGH

	[001fb2e0]
		001fb2d8: FALL_THROUGH
 	001fb2e0 push ax
 	001fb2e8 mov mar,0x100028
 	001fb2f4 memread4 ax
 	001fb2fc lnot ax
 	001fb304 pop bx
 	001fb30c land bx,ax
 	001fb318 mov ax,bx
		001fb324: FALL_THROUGH

	[001fb324]
		001fb2d8: CONDITIONAL_JUMP
		001fb2e0: FALL_THROUGH
 	001fb324 jz 0x001fb370
		001fb370: CONDITIONAL_JUMP
		001fb32c: FALL_THROUGH

	[001fb32c]
		001fb324: FALL_THROUGH
 	001fb32c push ax
 	001fb334 mov mar,0x10002c
 	001fb340 memread4 ax
 	001fb348 lnot ax
 	001fb350 pop bx
 	001fb358 land bx,ax
 	001fb364 mov ax,bx
		001fb370: FALL_THROUGH

	[001fb370]
		001fb324: CONDITIONAL_JUMP
		001fb32c: FALL_THROUGH
 	001fb370 jz 0x001fb3c0
		001fb3c0: CONDITIONAL_JUMP
		001fb378: FALL_THROUGH

	[001fb378]
		001fb370: FALL_THROUGH
 	001fb378 mov ax,0x1
 	001fb384 mov mar,0x100018
 	001fb390 memwrite4 ax
 	001fb398 mov ax,0x6
 	001fb3a4 mov mar,0x1000c4
 	001fb3b0 memwrite4 ax
 	001fb3b8 jmp 0x001fc4e8
		001fc4e8: UNCONDITIONAL_JUMP

	[001fb3c0]
		001fb370: CONDITIONAL_JUMP
 	001fb3c0 sourceline 0x2cae
 	001fb3c8 mov mar,0x100000
 	001fb3d4 memread4 ax
 	001fb3dc jz 0x001fb420
		001fb420: CONDITIONAL_JUMP
		001fb3e4: FALL_THROUGH

	[001fb3e4]
		001fb3c0: FALL_THROUGH
 	001fb3e4 push ax
 	001fb3ec mov mar,0x100004
 	001fb3f8 memread4 ax
 	001fb400 pop bx
 	001fb408 land bx,ax
 	001fb414 mov ax,bx
		001fb420: FALL_THROUGH

	[001fb420]
		001fb3c0: CONDITIONAL_JUMP
		001fb3e4: FALL_THROUGH
 	001fb420 jz 0x001fb464
		001fb464: CONDITIONAL_JUMP
		001fb428: FALL_THROUGH

	[001fb428]
		001fb420: FALL_THROUGH
 	001fb428 push ax
 	001fb430 mov mar,0x100008
 	001fb43c memread4 ax
 	001fb444 pop bx
 	001fb44c land bx,ax
 	001fb458 mov ax,bx
		001fb464: FALL_THROUGH

	[001fb464]
		001fb420: CONDITIONAL_JUMP
		001fb428: FALL_THROUGH
 	001fb464 jz 0x001fb4a8
		001fb4a8: CONDITIONAL_JUMP
		001fb46c: FALL_THROUGH

	[001fb46c]
		001fb464: FALL_THROUGH
 	001fb46c push ax
 	001fb474 mov mar,0x10000c
 	001fb480 memread4 ax
 	001fb488 pop bx
 	001fb490 land bx,ax
 	001fb49c mov ax,bx
		001fb4a8: FALL_THROUGH

	[001fb4a8]
		001fb464: CONDITIONAL_JUMP
		001fb46c: FALL_THROUGH
 	001fb4a8 jz 0x001fb4ec
		001fb4ec: CONDITIONAL_JUMP
		001fb4b0: FALL_THROUGH

	[001fb4b0]
		001fb4a8: FALL_THROUGH
 	001fb4b0 push ax
 	001fb4b8 mov mar,0x100010
 	001fb4c4 memread4 ax
 	001fb4cc pop bx
 	001fb4d4 land bx,ax
 	001fb4e0 mov ax,bx
		001fb4ec: FALL_THROUGH

	[001fb4ec]
		001fb4a8: CONDITIONAL_JUMP
		001fb4b0: FALL_THROUGH
 	001fb4ec jz 0x001fb530
		001fb530: CONDITIONAL_JUMP
		001fb4f4: FALL_THROUGH

	[001fb4f4]
		001fb4ec: FALL_THROUGH
 	001fb4f4 push ax
 	001fb4fc mov mar,0x100014
 	001fb508 memread4 ax
 	001fb510 pop bx
 	001fb518 land bx,ax
 	001fb524 mov ax,bx
		001fb530: FALL_THROUGH

	[001fb530]
		001fb4ec: CONDITIONAL_JUMP
		001fb4f4: FALL_THROUGH
 	001fb530 jz 0x001fb574
		001fb574: CONDITIONAL_JUMP
		001fb538: FALL_THROUGH

	[001fb538]
		001fb530: FALL_THROUGH
 	001fb538 push ax
 	001fb540 mov mar,0x100018
 	001fb54c memread4 ax
 	001fb554 pop bx
 	001fb55c land bx,ax
 	001fb568 mov ax,bx
		001fb574: FALL_THROUGH

	[001fb574]
		001fb530: CONDITIONAL_JUMP
		001fb538: FALL_THROUGH
 	001fb574 jz 0x001fb5c0
		001fb5c0: CONDITIONAL_JUMP
		001fb57c: FALL_THROUGH

	[001fb57c]
		001fb574: FALL_THROUGH
 	001fb57c push ax
 	001fb584 mov mar,0x10001c
 	001fb590 memread4 ax
 	001fb598 lnot ax
 	001fb5a0 pop bx
 	001fb5a8 land bx,ax
 	001fb5b4 mov ax,bx
		001fb5c0: FALL_THROUGH

	[001fb5c0]
		001fb574: CONDITIONAL_JUMP
		001fb57c: FALL_THROUGH
 	001fb5c0 jz 0x001fb60c
		001fb60c: CONDITIONAL_JUMP
		001fb5c8: FALL_THROUGH

	[001fb5c8]
		001fb5c0: FALL_THROUGH
 	001fb5c8 push ax
 	001fb5d0 mov mar,0x100020
 	001fb5dc memread4 ax
 	001fb5e4 lnot ax
 	001fb5ec pop bx
 	001fb5f4 land bx,ax
 	001fb600 mov ax,bx
		001fb60c: FALL_THROUGH

	[001fb60c]
		001fb5c0: CONDITIONAL_JUMP
		001fb5c8: FALL_THROUGH
 	001fb60c jz 0x001fb658
		001fb658: CONDITIONAL_JUMP
		001fb614: FALL_THROUGH

	[001fb614]
		001fb60c: FALL_THROUGH
 	001fb614 push ax
 	001fb61c mov mar,0x100024
 	001fb628 memread4 ax
 	001fb630 lnot ax
 	001fb638 pop bx
 	001fb640 land bx,ax
 	001fb64c mov ax,bx
		001fb658: FALL_THROUGH

	[001fb658]
		001fb60c: CONDITIONAL_JUMP
		001fb614: FALL_THROUGH
 	001fb658 jz 0x001fb6a4
		001fb6a4: CONDITIONAL_JUMP
		001fb660: FALL_THROUGH

	[001fb660]
		001fb658: FALL_THROUGH
 	001fb660 push ax
 	001fb668 mov mar,0x100028
 	001fb674 memread4 ax
 	001fb67c lnot ax
 	001fb684 pop bx
 	001fb68c land bx,ax
 	001fb698 mov ax,bx
		001fb6a4: FALL_THROUGH

	[001fb6a4]
		001fb658: CONDITIONAL_JUMP
		001fb660: FALL_THROUGH
 	001fb6a4 jz 0x001fb6f0
		001fb6f0: CONDITIONAL_JUMP
		001fb6ac: FALL_THROUGH

	[001fb6ac]
		001fb6a4: FALL_THROUGH
 	001fb6ac push ax
 	001fb6b4 mov mar,0x10002c
 	001fb6c0 memread4 ax
 	001fb6c8 lnot ax
 	001fb6d0 pop bx
 	001fb6d8 land bx,ax
 	001fb6e4 mov ax,bx
		001fb6f0: FALL_THROUGH

	[001fb6f0]
		001fb6a4: CONDITIONAL_JUMP
		001fb6ac: FALL_THROUGH
 	001fb6f0 jz 0x001fb740
		001fb740: CONDITIONAL_JUMP
		001fb6f8: FALL_THROUGH

	[001fb6f8]
		001fb6f0: FALL_THROUGH
 	001fb6f8 mov ax,0x1
 	001fb704 mov mar,0x10001c
 	001fb710 memwrite4 ax
 	001fb718 mov ax,0x6
 	001fb724 mov mar,0x1000c8
 	001fb730 memwrite4 ax
 	001fb738 jmp 0x001fc4e8
		001fc4e8: UNCONDITIONAL_JUMP

	[001fb740]
		001fb6f0: CONDITIONAL_JUMP
 	001fb740 sourceline 0x2cb3
 	001fb748 mov mar,0x100000
 	001fb754 memread4 ax
 	001fb75c jz 0x001fb7a0
		001fb7a0: CONDITIONAL_JUMP
		001fb764: FALL_THROUGH

	[001fb764]
		001fb740: FALL_THROUGH
 	001fb764 push ax
 	001fb76c mov mar,0x100004
 	001fb778 memread4 ax
 	001fb780 pop bx
 	001fb788 land bx,ax
 	001fb794 mov ax,bx
		001fb7a0: FALL_THROUGH

	[001fb7a0]
		001fb740: CONDITIONAL_JUMP
		001fb764: FALL_THROUGH
 	001fb7a0 jz 0x001fb7e4
		001fb7e4: CONDITIONAL_JUMP
		001fb7a8: FALL_THROUGH

	[001fb7a8]
		001fb7a0: FALL_THROUGH
 	001fb7a8 push ax
 	001fb7b0 mov mar,0x100008
 	001fb7bc memread4 ax
 	001fb7c4 pop bx
 	001fb7cc land bx,ax
 	001fb7d8 mov ax,bx
		001fb7e4: FALL_THROUGH

	[001fb7e4]
		001fb7a0: CONDITIONAL_JUMP
		001fb7a8: FALL_THROUGH
 	001fb7e4 jz 0x001fb828
		001fb828: CONDITIONAL_JUMP
		001fb7ec: FALL_THROUGH

	[001fb7ec]
		001fb7e4: FALL_THROUGH
 	001fb7ec push ax
 	001fb7f4 mov mar,0x10000c
 	001fb800 memread4 ax
 	001fb808 pop bx
 	001fb810 land bx,ax
 	001fb81c mov ax,bx
		001fb828: FALL_THROUGH

	[001fb828]
		001fb7e4: CONDITIONAL_JUMP
		001fb7ec: FALL_THROUGH
 	001fb828 jz 0x001fb86c
		001fb86c: CONDITIONAL_JUMP
		001fb830: FALL_THROUGH

	[001fb830]
		001fb828: FALL_THROUGH
 	001fb830 push ax
 	001fb838 mov mar,0x100010
 	001fb844 memread4 ax
 	001fb84c pop bx
 	001fb854 land bx,ax
 	001fb860 mov ax,bx
		001fb86c: FALL_THROUGH

	[001fb86c]
		001fb828: CONDITIONAL_JUMP
		001fb830: FALL_THROUGH
 	001fb86c jz 0x001fb8b0
		001fb8b0: CONDITIONAL_JUMP
		001fb874: FALL_THROUGH

	[001fb874]
		001fb86c: FALL_THROUGH
 	001fb874 push ax
 	001fb87c mov mar,0x100014
 	001fb888 memread4 ax
 	001fb890 pop bx
 	001fb898 land bx,ax
 	001fb8a4 mov ax,bx
		001fb8b0: FALL_THROUGH

	[001fb8b0]
		001fb86c: CONDITIONAL_JUMP
		001fb874: FALL_THROUGH
 	001fb8b0 jz 0x001fb8f4
		001fb8f4: CONDITIONAL_JUMP
		001fb8b8: FALL_THROUGH

	[001fb8b8]
		001fb8b0: FALL_THROUGH
 	001fb8b8 push ax
 	001fb8c0 mov mar,0x100018
 	001fb8cc memread4 ax
 	001fb8d4 pop bx
 	001fb8dc land bx,ax
 	001fb8e8 mov ax,bx
		001fb8f4: FALL_THROUGH

	[001fb8f4]
		001fb8b0: CONDITIONAL_JUMP
		001fb8b8: FALL_THROUGH
 	001fb8f4 jz 0x001fb938
		001fb938: CONDITIONAL_JUMP
		001fb8fc: FALL_THROUGH

	[001fb8fc]
		001fb8f4: FALL_THROUGH
 	001fb8fc push ax
 	001fb904 mov mar,0x10001c
 	001fb910 memread4 ax
 	001fb918 pop bx
 	001fb920 land bx,ax
 	001fb92c mov ax,bx
		001fb938: FALL_THROUGH

	[001fb938]
		001fb8f4: CONDITIONAL_JUMP
		001fb8fc: FALL_THROUGH
 	001fb938 jz 0x001fb984
		001fb984: CONDITIONAL_JUMP
		001fb940: FALL_THROUGH

	[001fb940]
		001fb938: FALL_THROUGH
 	001fb940 push ax
 	001fb948 mov mar,0x100020
 	001fb954 memread4 ax
 	001fb95c lnot ax
 	001fb964 pop bx
 	001fb96c land bx,ax
 	001fb978 mov ax,bx
		001fb984: FALL_THROUGH

	[001fb984]
		001fb938: CONDITIONAL_JUMP
		001fb940: FALL_THROUGH
 	001fb984 jz 0x001fb9d0
		001fb9d0: CONDITIONAL_JUMP
		001fb98c: FALL_THROUGH

	[001fb98c]
		001fb984: FALL_THROUGH
 	001fb98c push ax
 	001fb994 mov mar,0x100024
 	001fb9a0 memread4 ax
 	001fb9a8 lnot ax
 	001fb9b0 pop bx
 	001fb9b8 land bx,ax
 	001fb9c4 mov ax,bx
		001fb9d0: FALL_THROUGH

	[001fb9d0]
		001fb984: CONDITIONAL_JUMP
		001fb98c: FALL_THROUGH
 	001fb9d0 jz 0x001fba1c
		001fba1c: CONDITIONAL_JUMP
		001fb9d8: FALL_THROUGH

	[001fb9d8]
		001fb9d0: FALL_THROUGH
 	001fb9d8 push ax
 	001fb9e0 mov mar,0x100028
 	001fb9ec memread4 ax
 	001fb9f4 lnot ax
 	001fb9fc pop bx
 	001fba04 land bx,ax
 	001fba10 mov ax,bx
		001fba1c: FALL_THROUGH

	[001fba1c]
		001fb9d0: CONDITIONAL_JUMP
		001fb9d8: FALL_THROUGH
 	001fba1c jz 0x001fba68
		001fba68: CONDITIONAL_JUMP
		001fba24: FALL_THROUGH

	[001fba24]
		001fba1c: FALL_THROUGH
 	001fba24 push ax
 	001fba2c mov mar,0x10002c
 	001fba38 memread4 ax
 	001fba40 lnot ax
 	001fba48 pop bx
 	001fba50 land bx,ax
 	001fba5c mov ax,bx
		001fba68: FALL_THROUGH

	[001fba68]
		001fba1c: CONDITIONAL_JUMP
		001fba24: FALL_THROUGH
 	001fba68 jz 0x001fbab8
		001fbab8: CONDITIONAL_JUMP
		001fba70: FALL_THROUGH

	[001fba70]
		001fba68: FALL_THROUGH
 	001fba70 mov ax,0x1
 	001fba7c mov mar,0x100020
 	001fba88 memwrite4 ax
 	001fba90 mov ax,0x6
 	001fba9c mov mar,0x1000cc
 	001fbaa8 memwrite4 ax
 	001fbab0 jmp 0x001fc4e8
		001fc4e8: UNCONDITIONAL_JUMP

	[001fbab8]
		001fba68: CONDITIONAL_JUMP
 	001fbab8 sourceline 0x2cb8
 	001fbac0 mov mar,0x100000
 	001fbacc memread4 ax
 	001fbad4 jz 0x001fbb18
		001fbb18: CONDITIONAL_JUMP
		001fbadc: FALL_THROUGH

	[001fbadc]
		001fbab8: FALL_THROUGH
 	001fbadc push ax
 	001fbae4 mov mar,0x100004
 	001fbaf0 memread4 ax
 	001fbaf8 pop bx
 	001fbb00 land bx,ax
 	001fbb0c mov ax,bx
		001fbb18: FALL_THROUGH

	[001fbb18]
		001fbab8: CONDITIONAL_JUMP
		001fbadc: FALL_THROUGH
 	001fbb18 jz 0x001fbb5c
		001fbb5c: CONDITIONAL_JUMP
		001fbb20: FALL_THROUGH

	[001fbb20]
		001fbb18: FALL_THROUGH
 	001fbb20 push ax
 	001fbb28 mov mar,0x100008
 	001fbb34 memread4 ax
 	001fbb3c pop bx
 	001fbb44 land bx,ax
 	001fbb50 mov ax,bx
		001fbb5c: FALL_THROUGH

	[001fbb5c]
		001fbb18: CONDITIONAL_JUMP
		001fbb20: FALL_THROUGH
 	001fbb5c jz 0x001fbba0
		001fbba0: CONDITIONAL_JUMP
		001fbb64: FALL_THROUGH

	[001fbb64]
		001fbb5c: FALL_THROUGH
 	001fbb64 push ax
 	001fbb6c mov mar,0x10000c
 	001fbb78 memread4 ax
 	001fbb80 pop bx
 	001fbb88 land bx,ax
 	001fbb94 mov ax,bx
		001fbba0: FALL_THROUGH

	[001fbba0]
		001fbb5c: CONDITIONAL_JUMP
		001fbb64: FALL_THROUGH
 	001fbba0 jz 0x001fbbe4
		001fbbe4: CONDITIONAL_JUMP
		001fbba8: FALL_THROUGH

	[001fbba8]
		001fbba0: FALL_THROUGH
 	001fbba8 push ax
 	001fbbb0 mov mar,0x100010
 	001fbbbc memread4 ax
 	001fbbc4 pop bx
 	001fbbcc land bx,ax
 	001fbbd8 mov ax,bx
		001fbbe4: FALL_THROUGH

	[001fbbe4]
		001fbba0: CONDITIONAL_JUMP
		001fbba8: FALL_THROUGH
 	001fbbe4 jz 0x001fbc28
		001fbc28: CONDITIONAL_JUMP
		001fbbec: FALL_THROUGH

	[001fbbec]
		001fbbe4: FALL_THROUGH
 	001fbbec push ax
 	001fbbf4 mov mar,0x100014
 	001fbc00 memread4 ax
 	001fbc08 pop bx
 	001fbc10 land bx,ax
 	001fbc1c mov ax,bx
		001fbc28: FALL_THROUGH

	[001fbc28]
		001fbbe4: CONDITIONAL_JUMP
		001fbbec: FALL_THROUGH
 	001fbc28 jz 0x001fbc6c
		001fbc6c: CONDITIONAL_JUMP
		001fbc30: FALL_THROUGH

	[001fbc30]
		001fbc28: FALL_THROUGH
 	001fbc30 push ax
 	001fbc38 mov mar,0x100018
 	001fbc44 memread4 ax
 	001fbc4c pop bx
 	001fbc54 land bx,ax
 	001fbc60 mov ax,bx
		001fbc6c: FALL_THROUGH

	[001fbc6c]
		001fbc28: CONDITIONAL_JUMP
		001fbc30: FALL_THROUGH
 	001fbc6c jz 0x001fbcb0
		001fbcb0: CONDITIONAL_JUMP
		001fbc74: FALL_THROUGH

	[001fbc74]
		001fbc6c: FALL_THROUGH
 	001fbc74 push ax
 	001fbc7c mov mar,0x10001c
 	001fbc88 memread4 ax
 	001fbc90 pop bx
 	001fbc98 land bx,ax
 	001fbca4 mov ax,bx
		001fbcb0: FALL_THROUGH

	[001fbcb0]
		001fbc6c: CONDITIONAL_JUMP
		001fbc74: FALL_THROUGH
 	001fbcb0 jz 0x001fbcf4
		001fbcf4: CONDITIONAL_JUMP
		001fbcb8: FALL_THROUGH

	[001fbcb8]
		001fbcb0: FALL_THROUGH
 	001fbcb8 push ax
 	001fbcc0 mov mar,0x100020
 	001fbccc memread4 ax
 	001fbcd4 pop bx
 	001fbcdc land bx,ax
 	001fbce8 mov ax,bx
		001fbcf4: FALL_THROUGH

	[001fbcf4]
		001fbcb0: CONDITIONAL_JUMP
		001fbcb8: FALL_THROUGH
 	001fbcf4 jz 0x001fbd40
		001fbd40: CONDITIONAL_JUMP
		001fbcfc: FALL_THROUGH

	[001fbcfc]
		001fbcf4: FALL_THROUGH
 	001fbcfc push ax
 	001fbd04 mov mar,0x100024
 	001fbd10 memread4 ax
 	001fbd18 lnot ax
 	001fbd20 pop bx
 	001fbd28 land bx,ax
 	001fbd34 mov ax,bx
		001fbd40: FALL_THROUGH

	[001fbd40]
		001fbcf4: CONDITIONAL_JUMP
		001fbcfc: FALL_THROUGH
 	001fbd40 jz 0x001fbd8c
		001fbd8c: CONDITIONAL_JUMP
		001fbd48: FALL_THROUGH

	[001fbd48]
		001fbd40: FALL_THROUGH
 	001fbd48 push ax
 	001fbd50 mov mar,0x100028
 	001fbd5c memread4 ax
 	001fbd64 lnot ax
 	001fbd6c pop bx
 	001fbd74 land bx,ax
 	001fbd80 mov ax,bx
		001fbd8c: FALL_THROUGH

	[001fbd8c]
		001fbd40: CONDITIONAL_JUMP
		001fbd48: FALL_THROUGH
 	001fbd8c jz 0x001fbdd8
		001fbdd8: CONDITIONAL_JUMP
		001fbd94: FALL_THROUGH

	[001fbd94]
		001fbd8c: FALL_THROUGH
 	001fbd94 push ax
 	001fbd9c mov mar,0x10002c
 	001fbda8 memread4 ax
 	001fbdb0 lnot ax
 	001fbdb8 pop bx
 	001fbdc0 land bx,ax
 	001fbdcc mov ax,bx
		001fbdd8: FALL_THROUGH

	[001fbdd8]
		001fbd8c: CONDITIONAL_JUMP
		001fbd94: FALL_THROUGH
 	001fbdd8 jz 0x001fbe28
		001fbe28: CONDITIONAL_JUMP
		001fbde0: FALL_THROUGH

	[001fbde0]
		001fbdd8: FALL_THROUGH
 	001fbde0 mov ax,0x1
 	001fbdec mov mar,0x100024
 	001fbdf8 memwrite4 ax
 	001fbe00 mov ax,0x6
 	001fbe0c mov mar,0x1000d0
 	001fbe18 memwrite4 ax
 	001fbe20 jmp 0x001fc4e8
		001fc4e8: UNCONDITIONAL_JUMP

	[001fbe28]
		001fbdd8: CONDITIONAL_JUMP
 	001fbe28 sourceline 0x2cbd
 	001fbe30 mov mar,0x100000
 	001fbe3c memread4 ax
 	001fbe44 jz 0x001fbe88
		001fbe88: CONDITIONAL_JUMP
		001fbe4c: FALL_THROUGH

	[001fbe4c]
		001fbe28: FALL_THROUGH
 	001fbe4c push ax
 	001fbe54 mov mar,0x100004
 	001fbe60 memread4 ax
 	001fbe68 pop bx
 	001fbe70 land bx,ax
 	001fbe7c mov ax,bx
		001fbe88: FALL_THROUGH

	[001fbe88]
		001fbe28: CONDITIONAL_JUMP
		001fbe4c: FALL_THROUGH
 	001fbe88 jz 0x001fbecc
		001fbecc: CONDITIONAL_JUMP
		001fbe90: FALL_THROUGH

	[001fbe90]
		001fbe88: FALL_THROUGH
 	001fbe90 push ax
 	001fbe98 mov mar,0x100008
 	001fbea4 memread4 ax
 	001fbeac pop bx
 	001fbeb4 land bx,ax
 	001fbec0 mov ax,bx
		001fbecc: FALL_THROUGH

	[001fbecc]
		001fbe88: CONDITIONAL_JUMP
		001fbe90: FALL_THROUGH
 	001fbecc jz 0x001fbf10
		001fbf10: CONDITIONAL_JUMP
		001fbed4: FALL_THROUGH

	[001fbed4]
		001fbecc: FALL_THROUGH
 	001fbed4 push ax
 	001fbedc mov mar,0x10000c
 	001fbee8 memread4 ax
 	001fbef0 pop bx
 	001fbef8 land bx,ax
 	001fbf04 mov ax,bx
		001fbf10: FALL_THROUGH

	[001fbf10]
		001fbecc: CONDITIONAL_JUMP
		001fbed4: FALL_THROUGH
 	001fbf10 jz 0x001fbf54
		001fbf54: CONDITIONAL_JUMP
		001fbf18: FALL_THROUGH

	[001fbf18]
		001fbf10: FALL_THROUGH
 	001fbf18 push ax
 	001fbf20 mov mar,0x100010
 	001fbf2c memread4 ax
 	001fbf34 pop bx
 	001fbf3c land bx,ax
 	001fbf48 mov ax,bx
		001fbf54: FALL_THROUGH

	[001fbf54]
		001fbf10: CONDITIONAL_JUMP
		001fbf18: FALL_THROUGH
 	001fbf54 jz 0x001fbf98
		001fbf98: CONDITIONAL_JUMP
		001fbf5c: FALL_THROUGH

	[001fbf5c]
		001fbf54: FALL_THROUGH
 	001fbf5c push ax
 	001fbf64 mov mar,0x100014
 	001fbf70 memread4 ax
 	001fbf78 pop bx
 	001fbf80 land bx,ax
 	001fbf8c mov ax,bx
		001fbf98: FALL_THROUGH

	[001fbf98]
		001fbf54: CONDITIONAL_JUMP
		001fbf5c: FALL_THROUGH
 	001fbf98 jz 0x001fbfdc
		001fbfdc: CONDITIONAL_JUMP
		001fbfa0: FALL_THROUGH

	[001fbfa0]
		001fbf98: FALL_THROUGH
 	001fbfa0 push ax
 	001fbfa8 mov mar,0x100018
 	001fbfb4 memread4 ax
 	001fbfbc pop bx
 	001fbfc4 land bx,ax
 	001fbfd0 mov ax,bx
		001fbfdc: FALL_THROUGH

	[001fbfdc]
		001fbf98: CONDITIONAL_JUMP
		001fbfa0: FALL_THROUGH
 	001fbfdc jz 0x001fc020
		001fc020: CONDITIONAL_JUMP
		001fbfe4: FALL_THROUGH

	[001fbfe4]
		001fbfdc: FALL_THROUGH
 	001fbfe4 push ax
 	001fbfec mov mar,0x10001c
 	001fbff8 memread4 ax
 	001fc000 pop bx
 	001fc008 land bx,ax
 	001fc014 mov ax,bx
		001fc020: FALL_THROUGH

	[001fc020]
		001fbfdc: CONDITIONAL_JUMP
		001fbfe4: FALL_THROUGH
 	001fc020 jz 0x001fc064
		001fc064: CONDITIONAL_JUMP
		001fc028: FALL_THROUGH

	[001fc028]
		001fc020: FALL_THROUGH
 	001fc028 push ax
 	001fc030 mov mar,0x100020
 	001fc03c memread4 ax
 	001fc044 pop bx
 	001fc04c land bx,ax
 	001fc058 mov ax,bx
		001fc064: FALL_THROUGH

	[001fc064]
		001fc020: CONDITIONAL_JUMP
		001fc028: FALL_THROUGH
 	001fc064 jz 0x001fc0a8
		001fc0a8: CONDITIONAL_JUMP
		001fc06c: FALL_THROUGH

	[001fc06c]
		001fc064: FALL_THROUGH
 	001fc06c push ax
 	001fc074 mov mar,0x100024
 	001fc080 memread4 ax
 	001fc088 pop bx
 	001fc090 land bx,ax
 	001fc09c mov ax,bx
		001fc0a8: FALL_THROUGH

	[001fc0a8]
		001fc064: CONDITIONAL_JUMP
		001fc06c: FALL_THROUGH
 	001fc0a8 jz 0x001fc0f4
		001fc0f4: CONDITIONAL_JUMP
		001fc0b0: FALL_THROUGH

	[001fc0b0]
		001fc0a8: FALL_THROUGH
 	001fc0b0 push ax
 	001fc0b8 mov mar,0x100028
 	001fc0c4 memread4 ax
 	001fc0cc lnot ax
 	001fc0d4 pop bx
 	001fc0dc land bx,ax
 	001fc0e8 mov ax,bx
		001fc0f4: FALL_THROUGH

	[001fc0f4]
		001fc0a8: CONDITIONAL_JUMP
		001fc0b0: FALL_THROUGH
 	001fc0f4 jz 0x001fc140
		001fc140: CONDITIONAL_JUMP
		001fc0fc: FALL_THROUGH

	[001fc0fc]
		001fc0f4: FALL_THROUGH
 	001fc0fc push ax
 	001fc104 mov mar,0x10002c
 	001fc110 memread4 ax
 	001fc118 lnot ax
 	001fc120 pop bx
 	001fc128 land bx,ax
 	001fc134 mov ax,bx
		001fc140: FALL_THROUGH

	[001fc140]
		001fc0f4: CONDITIONAL_JUMP
		001fc0fc: FALL_THROUGH
 	001fc140 jz 0x001fc190
		001fc190: CONDITIONAL_JUMP
		001fc148: FALL_THROUGH

	[001fc148]
		001fc140: FALL_THROUGH
 	001fc148 mov ax,0x1
 	001fc154 mov mar,0x100028
 	001fc160 memwrite4 ax
 	001fc168 mov ax,0x6
 	001fc174 mov mar,0x1000d4
 	001fc180 memwrite4 ax
 	001fc188 jmp 0x001fc4e8
		001fc4e8: UNCONDITIONAL_JUMP

	[001fc190]
		001fc140: CONDITIONAL_JUMP
 	001fc190 sourceline 0x2cc2
 	001fc198 mov mar,0x100000
 	001fc1a4 memread4 ax
 	001fc1ac jz 0x001fc1f0
		001fc1f0: CONDITIONAL_JUMP
		001fc1b4: FALL_THROUGH

	[001fc1b4]
		001fc190: FALL_THROUGH
 	001fc1b4 push ax
 	001fc1bc mov mar,0x100004
 	001fc1c8 memread4 ax
 	001fc1d0 pop bx
 	001fc1d8 land bx,ax
 	001fc1e4 mov ax,bx
		001fc1f0: FALL_THROUGH

	[001fc1f0]
		001fc190: CONDITIONAL_JUMP
		001fc1b4: FALL_THROUGH
 	001fc1f0 jz 0x001fc234
		001fc234: CONDITIONAL_JUMP
		001fc1f8: FALL_THROUGH

	[001fc1f8]
		001fc1f0: FALL_THROUGH
 	001fc1f8 push ax
 	001fc200 mov mar,0x100008
 	001fc20c memread4 ax
 	001fc214 pop bx
 	001fc21c land bx,ax
 	001fc228 mov ax,bx
		001fc234: FALL_THROUGH

	[001fc234]
		001fc1f0: CONDITIONAL_JUMP
		001fc1f8: FALL_THROUGH
 	001fc234 jz 0x001fc278
		001fc278: CONDITIONAL_JUMP
		001fc23c: FALL_THROUGH

	[001fc23c]
		001fc234: FALL_THROUGH
 	001fc23c push ax
 	001fc244 mov mar,0x10000c
 	001fc250 memread4 ax
 	001fc258 pop bx
 	001fc260 land bx,ax
 	001fc26c mov ax,bx
		001fc278: FALL_THROUGH

	[001fc278]
		001fc234: CONDITIONAL_JUMP
		001fc23c: FALL_THROUGH
 	001fc278 jz 0x001fc2bc
		001fc2bc: CONDITIONAL_JUMP
		001fc280: FALL_THROUGH

	[001fc280]
		001fc278: FALL_THROUGH
 	001fc280 push ax
 	001fc288 mov mar,0x100010
 	001fc294 memread4 ax
 	001fc29c pop bx
 	001fc2a4 land bx,ax
 	001fc2b0 mov ax,bx
		001fc2bc: FALL_THROUGH

	[001fc2bc]
		001fc278: CONDITIONAL_JUMP
		001fc280: FALL_THROUGH
 	001fc2bc jz 0x001fc300
		001fc300: CONDITIONAL_JUMP
		001fc2c4: FALL_THROUGH

	[001fc2c4]
		001fc2bc: FALL_THROUGH
 	001fc2c4 push ax
 	001fc2cc mov mar,0x100014
 	001fc2d8 memread4 ax
 	001fc2e0 pop bx
 	001fc2e8 land bx,ax
 	001fc2f4 mov ax,bx
		001fc300: FALL_THROUGH

	[001fc300]
		001fc2bc: CONDITIONAL_JUMP
		001fc2c4: FALL_THROUGH
 	001fc300 jz 0x001fc344
		001fc344: CONDITIONAL_JUMP
		001fc308: FALL_THROUGH

	[001fc308]
		001fc300: FALL_THROUGH
 	001fc308 push ax
 	001fc310 mov mar,0x100018
 	001fc31c memread4 ax
 	001fc324 pop bx
 	001fc32c land bx,ax
 	001fc338 mov ax,bx
		001fc344: FALL_THROUGH

	[001fc344]
		001fc300: CONDITIONAL_JUMP
		001fc308: FALL_THROUGH
 	001fc344 jz 0x001fc388
		001fc388: CONDITIONAL_JUMP
		001fc34c: FALL_THROUGH

	[001fc34c]
		001fc344: FALL_THROUGH
 	001fc34c push ax
 	001fc354 mov mar,0x10001c
 	001fc360 memread4 ax
 	001fc368 pop bx
 	001fc370 land bx,ax
 	001fc37c mov ax,bx
		001fc388: FALL_THROUGH

	[001fc388]
		001fc344: CONDITIONAL_JUMP
		001fc34c: FALL_THROUGH
 	001fc388 jz 0x001fc3cc
		001fc3cc: CONDITIONAL_JUMP
		001fc390: FALL_THROUGH

	[001fc390]
		001fc388: FALL_THROUGH
 	001fc390 push ax
 	001fc398 mov mar,0x100020
 	001fc3a4 memread4 ax
 	001fc3ac pop bx
 	001fc3b4 land bx,ax
 	001fc3c0 mov ax,bx
		001fc3cc: FALL_THROUGH

	[001fc3cc]
		001fc388: CONDITIONAL_JUMP
		001fc390: FALL_THROUGH
 	001fc3cc jz 0x001fc410
		001fc410: CONDITIONAL_JUMP
		001fc3d4: FALL_THROUGH

	[001fc3d4]
		001fc3cc: FALL_THROUGH
 	001fc3d4 push ax
 	001fc3dc mov mar,0x100024
 	001fc3e8 memread4 ax
 	001fc3f0 pop bx
 	001fc3f8 land bx,ax
 	001fc404 mov ax,bx
		001fc410: FALL_THROUGH

	[001fc410]
		001fc3cc: CONDITIONAL_JUMP
		001fc3d4: FALL_THROUGH
 	001fc410 jz 0x001fc454
		001fc454: CONDITIONAL_JUMP
		001fc418: FALL_THROUGH

	[001fc418]
		001fc410: FALL_THROUGH
 	001fc418 push ax
 	001fc420 mov mar,0x100028
 	001fc42c memread4 ax
 	001fc434 pop bx
 	001fc43c land bx,ax
 	001fc448 mov ax,bx
		001fc454: FALL_THROUGH

	[001fc454]
		001fc410: CONDITIONAL_JUMP
		001fc418: FALL_THROUGH
 	001fc454 jz 0x001fc4a0
		001fc4a0: CONDITIONAL_JUMP
		001fc45c: FALL_THROUGH

	[001fc45c]
		001fc454: FALL_THROUGH
 	001fc45c push ax
 	001fc464 mov mar,0x10002c
 	001fc470 memread4 ax
 	001fc478 lnot ax
 	001fc480 pop bx
 	001fc488 land bx,ax
 	001fc494 mov ax,bx
		001fc4a0: FALL_THROUGH

	[001fc4a0]
		001fc454: CONDITIONAL_JUMP
		001fc45c: FALL_THROUGH
 	001fc4a0 jz 0x001fc4e8
		001fc4e8: CONDITIONAL_JUMP
		001fc4a8: FALL_THROUGH

	[001fc4a8]
		001fc4a0: FALL_THROUGH
 	001fc4a8 mov ax,0x1
 	001fc4b4 mov mar,0x10002c
 	001fc4c0 memwrite4 ax
 	001fc4c8 mov ax,0x6
 	001fc4d4 mov mar,0x1000d8
 	001fc4e0 memwrite4 ax
		001fc4e8: FALL_THROUGH

	[001fc4e8]
		001f9dd0: UNCONDITIONAL_JUMP
		001fa180: UNCONDITIONAL_JUMP
		001fa528: UNCONDITIONAL_JUMP
		001fa8c8: UNCONDITIONAL_JUMP
		001fac60: UNCONDITIONAL_JUMP
		001faff0: UNCONDITIONAL_JUMP
		001fb378: UNCONDITIONAL_JUMP
		001fb6f8: UNCONDITIONAL_JUMP
		001fba70: UNCONDITIONAL_JUMP
		001fbde0: UNCONDITIONAL_JUMP
		001fc148: UNCONDITIONAL_JUMP
		001fc4a0: CONDITIONAL_JUMP
		001fc4a8: FALL_THROUGH
 	001fc4e8 sourceline 0x2cc6
 	001fc4f0 jmp 0x001fc64c
		001fc64c: UNCONDITIONAL_JUMP

	[001fc4f8]
		001f9a04: CONDITIONAL_JUMP
 	001fc4f8 sourceline 0x2cc9
 	001fc500 mov mar,0x32ef20
 	001fc50c memread4 ax
 	001fc514 lnot ax
 	001fc51c jz 0x001fc64c
		001fc64c: CONDITIONAL_JUMP
		001fc524: FALL_THROUGH

	[001fc524]
		001fc4f8: FALL_THROUGH
 	001fc524 sourceline 0x2ccb
 	001fc52c mov ax,0x1
 	001fc538 mov bx,ax
 	001fc544 mov mar,0x3cef20
 	001fc550 mov ax,mar
 	001fc55c push op
 	001fc564 mov op,ax
 	001fc56c farpush bx
 	001fc574 setfuncargs 0x1
 	001fc57c mov ax,0x69ef20
 	001fc588 farcall ax
 	001fc590 farsubsp 0x1
 	001fc598 pop op
 	001fc5a0 sourceline 0x2ccc
 	001fc5a8 push op
 	001fc5b0 mov ax,0x2c77e7
 	001fc5bc farpush ax
 	001fc5c4 mov ax,0x138
 	001fc5d0 farpush ax
 	001fc5d8 mov ax,0x92
 	001fc5e4 farpush ax
 	001fc5ec mov ax,0x0
 	001fc5f8 farpush ax
 	001fc600 mov mar,0x3cef20
 	001fc60c mov ax,mar
 	001fc618 mov op,ax
 	001fc620 setfuncargs 0x4
 	001fc628 mov ax,0x6aef20
 	001fc634 farcall ax
 	001fc63c farsubsp 0x4
 	001fc644 pop op
		001fc64c: FALL_THROUGH

	[001fc64c]
		001f9988: CONDITIONAL_JUMP
		001fc4e8: UNCONDITIONAL_JUMP
		001fc4f8: CONDITIONAL_JUMP
		001fc524: FALL_THROUGH
 	001fc64c sourceline 0x2cd0
 	001fc654 stackptr 0xc
 	001fc65c memread4 ax
 	001fc664 push ax
 	001fc66c mov ax,0x2
 	001fc678 pop bx
 	001fc680 cmpeq bx,ax
 	001fc68c mov ax,bx
 	001fc698 jz 0x001fc858
		001fc858: CONDITIONAL_JUMP
		001fc6a0: FALL_THROUGH

	[001fc6a0]
		001fc64c: FALL_THROUGH
 	001fc6a0 sourceline 0x2cd2
 	001fc6a8 mov mar,0x626f20
 	001fc6b4 mov ax,mar
 	001fc6c0 push op
 	001fc6c8 mov op,ax
 	001fc6d0 setfuncargs 0x0
 	001fc6d8 mov ax,0x606f20
 	001fc6e4 farcall ax
 	001fc6ec pop op
 	001fc6f4 lnot ax
 	001fc6fc jz 0x001fc858
		001fc858: CONDITIONAL_JUMP
		001fc704: FALL_THROUGH

	[001fc704]
		001fc6a0: FALL_THROUGH
 	001fc704 sourceline 0x2cd4
 	001fc70c mov mar,0x32ef20
 	001fc718 memread4 ax
 	001fc720 lnot ax
 	001fc728 jz 0x001fc858
		001fc858: CONDITIONAL_JUMP
		001fc730: FALL_THROUGH

	[001fc730]
		001fc704: FALL_THROUGH
 	001fc730 sourceline 0x2cd6
 	001fc738 mov ax,0x1
 	001fc744 mov bx,ax
 	001fc750 mov mar,0x3cef20
 	001fc75c mov ax,mar
 	001fc768 push op
 	001fc770 mov op,ax
 	001fc778 farpush bx
 	001fc780 setfuncargs 0x1
 	001fc788 mov ax,0x69ef20
 	001fc794 farcall ax
 	001fc79c farsubsp 0x1
 	001fc7a4 pop op
 	001fc7ac sourceline 0x2cd7
 	001fc7b4 push op
 	001fc7bc mov ax,0x2c7835
 	001fc7c8 farpush ax
 	001fc7d0 mov ax,0x138
 	001fc7dc farpush ax
 	001fc7e4 mov ax,0x92
 	001fc7f0 farpush ax
 	001fc7f8 mov ax,0x0
 	001fc804 farpush ax
 	001fc80c mov mar,0x3cef20
 	001fc818 mov ax,mar
 	001fc824 mov op,ax
 	001fc82c setfuncargs 0x4
 	001fc834 mov ax,0x6aef20
 	001fc840 farcall ax
 	001fc848 farsubsp 0x4
 	001fc850 pop op
		001fc858: FALL_THROUGH

	[001fc858]
		001fc64c: CONDITIONAL_JUMP
		001fc6a0: CONDITIONAL_JUMP
		001fc704: CONDITIONAL_JUMP
		001fc730: FALL_THROUGH
 	001fc858 sourceline 0x2cdb
 	001fc860 mov ax,0x0
 	001fc86c stackptr 0x8
 	001fc874 memzerond
 	001fc878 ret

btnDownLeft_OnClick$2:
	[001fc87c]
 	001fc87c sourceline 0x2cde
 	001fc884 thisaddr
 	001fc88c stackptr 0x8
 	001fc894 memread4 ax
 	001fc89c meminit ax
 	001fc8a4 sourceline 0x2cdf
 	001fc8ac stackptr 0xc
 	001fc8b4 memread4 ax
 	001fc8bc push ax
 	001fc8c4 mov ax,0x1
 	001fc8d0 pop bx
 	001fc8d8 cmpeq bx,ax
 	001fc8e4 mov ax,bx
 	001fc8f0 jz 0x001ff5f0
		001ff5f0: CONDITIONAL_JUMP
		001fc8f8: FALL_THROUGH

	[001fc8f8]
		001fc87c: FALL_THROUGH
 	001fc8f8 sourceline 0x2ce1
*	001fc900 mov mar,0x1076f20
 	001fc90c memread4 ax
 	001fc914 push ax
 	001fc91c mov mar,0x107ef20
 	001fc928 memread4 ax
 	001fc930 push ax
 	001fc938 mov ax,0x6
 	001fc944 pop bx
 	001fc94c add bx,ax
 	001fc958 mov ax,bx
 	001fc964 pop bx
 	001fc96c cmpgt bx,ax
 	001fc978 mov ax,bx
 	001fc984 jz 0x001fc9a8
		001fc9a8: CONDITIONAL_JUMP
		001fc98c: FALL_THROUGH

	[001fc98c]
		001fc8f8: FALL_THROUGH
 	001fc98c mov ax,0x0
 	001fc998 stackptr 0x8
 	001fc9a0 memzerond
 	001fc9a4 ret

	[001fc9a8]
		001fc8f8: CONDITIONAL_JUMP
 	001fc9a8 sourceline 0x2ce2
 	001fc9b0 mov mar,0x626f20
 	001fc9bc mov ax,mar
 	001fc9c8 push op
 	001fc9d0 mov op,ax
 	001fc9d8 setfuncargs 0x0
 	001fc9e0 mov ax,0x606f20
 	001fc9ec farcall ax
 	001fc9f4 pop op
 	001fc9fc jz 0x001ff49c
		001ff49c: CONDITIONAL_JUMP
		001fca04: FALL_THROUGH

	[001fca04]
		001fc9a8: FALL_THROUGH
 	001fca04 sourceline 0x2ce4
 	001fca0c mov mar,0x100000
 	001fca18 memread4 ax
 	001fca20 lnot ax
 	001fca28 jz 0x001fca74
		001fca74: CONDITIONAL_JUMP
		001fca30: FALL_THROUGH

	[001fca30]
		001fca04: FALL_THROUGH
 	001fca30 push ax
 	001fca38 mov mar,0x100004
 	001fca44 memread4 ax
 	001fca4c lnot ax
 	001fca54 pop bx
 	001fca5c land bx,ax
 	001fca68 mov ax,bx
		001fca74: FALL_THROUGH

	[001fca74]
		001fca04: CONDITIONAL_JUMP
		001fca30: FALL_THROUGH
 	001fca74 jz 0x001fcac0
		001fcac0: CONDITIONAL_JUMP
		001fca7c: FALL_THROUGH

	[001fca7c]
		001fca74: FALL_THROUGH
 	001fca7c push ax
 	001fca84 mov mar,0x100008
 	001fca90 memread4 ax
 	001fca98 lnot ax
 	001fcaa0 pop bx
 	001fcaa8 land bx,ax
 	001fcab4 mov ax,bx
		001fcac0: FALL_THROUGH

	[001fcac0]
		001fca74: CONDITIONAL_JUMP
		001fca7c: FALL_THROUGH
 	001fcac0 jz 0x001fcb0c
		001fcb0c: CONDITIONAL_JUMP
		001fcac8: FALL_THROUGH

	[001fcac8]
		001fcac0: FALL_THROUGH
 	001fcac8 push ax
 	001fcad0 mov mar,0x10000c
 	001fcadc memread4 ax
 	001fcae4 lnot ax
 	001fcaec pop bx
 	001fcaf4 land bx,ax
 	001fcb00 mov ax,bx
		001fcb0c: FALL_THROUGH

	[001fcb0c]
		001fcac0: CONDITIONAL_JUMP
		001fcac8: FALL_THROUGH
 	001fcb0c jz 0x001fcb58
		001fcb58: CONDITIONAL_JUMP
		001fcb14: FALL_THROUGH

	[001fcb14]
		001fcb0c: FALL_THROUGH
 	001fcb14 push ax
 	001fcb1c mov mar,0x100010
 	001fcb28 memread4 ax
 	001fcb30 lnot ax
 	001fcb38 pop bx
 	001fcb40 land bx,ax
 	001fcb4c mov ax,bx
		001fcb58: FALL_THROUGH

	[001fcb58]
		001fcb0c: CONDITIONAL_JUMP
		001fcb14: FALL_THROUGH
 	001fcb58 jz 0x001fcba4
		001fcba4: CONDITIONAL_JUMP
		001fcb60: FALL_THROUGH

	[001fcb60]
		001fcb58: FALL_THROUGH
 	001fcb60 push ax
 	001fcb68 mov mar,0x100014
 	001fcb74 memread4 ax
 	001fcb7c lnot ax
 	001fcb84 pop bx
 	001fcb8c land bx,ax
 	001fcb98 mov ax,bx
		001fcba4: FALL_THROUGH

	[001fcba4]
		001fcb58: CONDITIONAL_JUMP
		001fcb60: FALL_THROUGH
 	001fcba4 jz 0x001fcbf0
		001fcbf0: CONDITIONAL_JUMP
		001fcbac: FALL_THROUGH

	[001fcbac]
		001fcba4: FALL_THROUGH
 	001fcbac push ax
 	001fcbb4 mov mar,0x100018
 	001fcbc0 memread4 ax
 	001fcbc8 lnot ax
 	001fcbd0 pop bx
 	001fcbd8 land bx,ax
 	001fcbe4 mov ax,bx
		001fcbf0: FALL_THROUGH

	[001fcbf0]
		001fcba4: CONDITIONAL_JUMP
		001fcbac: FALL_THROUGH
 	001fcbf0 jz 0x001fcc3c
		001fcc3c: CONDITIONAL_JUMP
		001fcbf8: FALL_THROUGH

	[001fcbf8]
		001fcbf0: FALL_THROUGH
 	001fcbf8 push ax
 	001fcc00 mov mar,0x10001c
 	001fcc0c memread4 ax
 	001fcc14 lnot ax
 	001fcc1c pop bx
 	001fcc24 land bx,ax
 	001fcc30 mov ax,bx
		001fcc3c: FALL_THROUGH

	[001fcc3c]
		001fcbf0: CONDITIONAL_JUMP
		001fcbf8: FALL_THROUGH
 	001fcc3c jz 0x001fcc88
		001fcc88: CONDITIONAL_JUMP
		001fcc44: FALL_THROUGH

	[001fcc44]
		001fcc3c: FALL_THROUGH
 	001fcc44 push ax
 	001fcc4c mov mar,0x100020
 	001fcc58 memread4 ax
 	001fcc60 lnot ax
 	001fcc68 pop bx
 	001fcc70 land bx,ax
 	001fcc7c mov ax,bx
		001fcc88: FALL_THROUGH

	[001fcc88]
		001fcc3c: CONDITIONAL_JUMP
		001fcc44: FALL_THROUGH
 	001fcc88 jz 0x001fccd4
		001fccd4: CONDITIONAL_JUMP
		001fcc90: FALL_THROUGH

	[001fcc90]
		001fcc88: FALL_THROUGH
 	001fcc90 push ax
 	001fcc98 mov mar,0x100024
 	001fcca4 memread4 ax
 	001fccac lnot ax
 	001fccb4 pop bx
 	001fccbc land bx,ax
 	001fccc8 mov ax,bx
		001fccd4: FALL_THROUGH

	[001fccd4]
		001fcc88: CONDITIONAL_JUMP
		001fcc90: FALL_THROUGH
 	001fccd4 jz 0x001fcd20
		001fcd20: CONDITIONAL_JUMP
		001fccdc: FALL_THROUGH

	[001fccdc]
		001fccd4: FALL_THROUGH
 	001fccdc push ax
 	001fcce4 mov mar,0x100028
 	001fccf0 memread4 ax
 	001fccf8 lnot ax
 	001fcd00 pop bx
 	001fcd08 land bx,ax
 	001fcd14 mov ax,bx
		001fcd20: FALL_THROUGH

	[001fcd20]
		001fccd4: CONDITIONAL_JUMP
		001fccdc: FALL_THROUGH
 	001fcd20 jz 0x001fcd6c
		001fcd6c: CONDITIONAL_JUMP
		001fcd28: FALL_THROUGH

	[001fcd28]
		001fcd20: FALL_THROUGH
 	001fcd28 push ax
 	001fcd30 mov mar,0x10002c
 	001fcd3c memread4 ax
 	001fcd44 lnot ax
 	001fcd4c pop bx
 	001fcd54 land bx,ax
 	001fcd60 mov ax,bx
		001fcd6c: FALL_THROUGH

	[001fcd6c]
		001fcd20: CONDITIONAL_JUMP
		001fcd28: FALL_THROUGH
 	001fcd6c jz 0x001fcdbc
		001fcdbc: CONDITIONAL_JUMP
		001fcd74: FALL_THROUGH

	[001fcd74]
		001fcd6c: FALL_THROUGH
 	001fcd74 mov ax,0x1
 	001fcd80 mov mar,0x100000
 	001fcd8c memwrite4 ax
 	001fcd94 mov ax,0x7
 	001fcda0 mov mar,0x1000ac
 	001fcdac memwrite4 ax
 	001fcdb4 jmp 0x001ff48c
		001ff48c: UNCONDITIONAL_JUMP

	[001fcdbc]
		001fcd6c: CONDITIONAL_JUMP
 	001fcdbc sourceline 0x2ce9
 	001fcdc4 mov mar,0x100000
 	001fcdd0 memread4 ax
 	001fcdd8 jz 0x001fce24
		001fce24: CONDITIONAL_JUMP
		001fcde0: FALL_THROUGH

	[001fcde0]
		001fcdbc: FALL_THROUGH
 	001fcde0 push ax
 	001fcde8 mov mar,0x100004
 	001fcdf4 memread4 ax
 	001fcdfc lnot ax
 	001fce04 pop bx
 	001fce0c land bx,ax
 	001fce18 mov ax,bx
		001fce24: FALL_THROUGH

	[001fce24]
		001fcdbc: CONDITIONAL_JUMP
		001fcde0: FALL_THROUGH
 	001fce24 jz 0x001fce70
		001fce70: CONDITIONAL_JUMP
		001fce2c: FALL_THROUGH

	[001fce2c]
		001fce24: FALL_THROUGH
 	001fce2c push ax
 	001fce34 mov mar,0x100008
 	001fce40 memread4 ax
 	001fce48 lnot ax
 	001fce50 pop bx
 	001fce58 land bx,ax
 	001fce64 mov ax,bx
		001fce70: FALL_THROUGH

	[001fce70]
		001fce24: CONDITIONAL_JUMP
		001fce2c: FALL_THROUGH
 	001fce70 jz 0x001fcebc
		001fcebc: CONDITIONAL_JUMP
		001fce78: FALL_THROUGH

	[001fce78]
		001fce70: FALL_THROUGH
 	001fce78 push ax
 	001fce80 mov mar,0x10000c
 	001fce8c memread4 ax
 	001fce94 lnot ax
 	001fce9c pop bx
 	001fcea4 land bx,ax
 	001fceb0 mov ax,bx
		001fcebc: FALL_THROUGH

	[001fcebc]
		001fce70: CONDITIONAL_JUMP
		001fce78: FALL_THROUGH
 	001fcebc jz 0x001fcf08
		001fcf08: CONDITIONAL_JUMP
		001fcec4: FALL_THROUGH

	[001fcec4]
		001fcebc: FALL_THROUGH
 	001fcec4 push ax
 	001fcecc mov mar,0x100010
 	001fced8 memread4 ax
 	001fcee0 lnot ax
 	001fcee8 pop bx
 	001fcef0 land bx,ax
 	001fcefc mov ax,bx
		001fcf08: FALL_THROUGH

	[001fcf08]
		001fcebc: CONDITIONAL_JUMP
		001fcec4: FALL_THROUGH
 	001fcf08 jz 0x001fcf54
		001fcf54: CONDITIONAL_JUMP
		001fcf10: FALL_THROUGH

	[001fcf10]
		001fcf08: FALL_THROUGH
 	001fcf10 push ax
 	001fcf18 mov mar,0x100014
 	001fcf24 memread4 ax
 	001fcf2c lnot ax
 	001fcf34 pop bx
 	001fcf3c land bx,ax
 	001fcf48 mov ax,bx
		001fcf54: FALL_THROUGH

	[001fcf54]
		001fcf08: CONDITIONAL_JUMP
		001fcf10: FALL_THROUGH
 	001fcf54 jz 0x001fcfa0
		001fcfa0: CONDITIONAL_JUMP
		001fcf5c: FALL_THROUGH

	[001fcf5c]
		001fcf54: FALL_THROUGH
 	001fcf5c push ax
 	001fcf64 mov mar,0x100018
 	001fcf70 memread4 ax
 	001fcf78 lnot ax
 	001fcf80 pop bx
 	001fcf88 land bx,ax
 	001fcf94 mov ax,bx
		001fcfa0: FALL_THROUGH

	[001fcfa0]
		001fcf54: CONDITIONAL_JUMP
		001fcf5c: FALL_THROUGH
 	001fcfa0 jz 0x001fcfec
		001fcfec: CONDITIONAL_JUMP
		001fcfa8: FALL_THROUGH

	[001fcfa8]
		001fcfa0: FALL_THROUGH
 	001fcfa8 push ax
 	001fcfb0 mov mar,0x10001c
 	001fcfbc memread4 ax
 	001fcfc4 lnot ax
 	001fcfcc pop bx
 	001fcfd4 land bx,ax
 	001fcfe0 mov ax,bx
		001fcfec: FALL_THROUGH

	[001fcfec]
		001fcfa0: CONDITIONAL_JUMP
		001fcfa8: FALL_THROUGH
 	001fcfec jz 0x001fd038
		001fd038: CONDITIONAL_JUMP
		001fcff4: FALL_THROUGH

	[001fcff4]
		001fcfec: FALL_THROUGH
 	001fcff4 push ax
 	001fcffc mov mar,0x100020
 	001fd008 memread4 ax
 	001fd010 lnot ax
 	001fd018 pop bx
 	001fd020 land bx,ax
 	001fd02c mov ax,bx
		001fd038: FALL_THROUGH

	[001fd038]
		001fcfec: CONDITIONAL_JUMP
		001fcff4: FALL_THROUGH
 	001fd038 jz 0x001fd084
		001fd084: CONDITIONAL_JUMP
		001fd040: FALL_THROUGH

	[001fd040]
		001fd038: FALL_THROUGH
 	001fd040 push ax
 	001fd048 mov mar,0x100024
 	001fd054 memread4 ax
 	001fd05c lnot ax
 	001fd064 pop bx
 	001fd06c land bx,ax
 	001fd078 mov ax,bx
		001fd084: FALL_THROUGH

	[001fd084]
		001fd038: CONDITIONAL_JUMP
		001fd040: FALL_THROUGH
 	001fd084 jz 0x001fd0d0
		001fd0d0: CONDITIONAL_JUMP
		001fd08c: FALL_THROUGH

	[001fd08c]
		001fd084: FALL_THROUGH
 	001fd08c push ax
 	001fd094 mov mar,0x100028
 	001fd0a0 memread4 ax
 	001fd0a8 lnot ax
 	001fd0b0 pop bx
 	001fd0b8 land bx,ax
 	001fd0c4 mov ax,bx
		001fd0d0: FALL_THROUGH

	[001fd0d0]
		001fd084: CONDITIONAL_JUMP
		001fd08c: FALL_THROUGH
 	001fd0d0 jz 0x001fd11c
		001fd11c: CONDITIONAL_JUMP
		001fd0d8: FALL_THROUGH

	[001fd0d8]
		001fd0d0: FALL_THROUGH
 	001fd0d8 push ax
 	001fd0e0 mov mar,0x10002c
 	001fd0ec memread4 ax
 	001fd0f4 lnot ax
 	001fd0fc pop bx
 	001fd104 land bx,ax
 	001fd110 mov ax,bx
		001fd11c: FALL_THROUGH

	[001fd11c]
		001fd0d0: CONDITIONAL_JUMP
		001fd0d8: FALL_THROUGH
 	001fd11c jz 0x001fd16c
		001fd16c: CONDITIONAL_JUMP
		001fd124: FALL_THROUGH

	[001fd124]
		001fd11c: FALL_THROUGH
 	001fd124 mov ax,0x1
 	001fd130 mov mar,0x100004
 	001fd13c memwrite4 ax
 	001fd144 mov ax,0x7
 	001fd150 mov mar,0x1000b0
 	001fd15c memwrite4 ax
 	001fd164 jmp 0x001ff48c
		001ff48c: UNCONDITIONAL_JUMP

	[001fd16c]
		001fd11c: CONDITIONAL_JUMP
 	001fd16c sourceline 0x2cee
 	001fd174 mov mar,0x100000
 	001fd180 memread4 ax
 	001fd188 jz 0x001fd1cc
		001fd1cc: CONDITIONAL_JUMP
		001fd190: FALL_THROUGH

	[001fd190]
		001fd16c: FALL_THROUGH
 	001fd190 push ax
 	001fd198 mov mar,0x100004
 	001fd1a4 memread4 ax
 	001fd1ac pop bx
 	001fd1b4 land bx,ax
 	001fd1c0 mov ax,bx
		001fd1cc: FALL_THROUGH

	[001fd1cc]
		001fd16c: CONDITIONAL_JUMP
		001fd190: FALL_THROUGH
 	001fd1cc jz 0x001fd218
		001fd218: CONDITIONAL_JUMP
		001fd1d4: FALL_THROUGH

	[001fd1d4]
		001fd1cc: FALL_THROUGH
 	001fd1d4 push ax
 	001fd1dc mov mar,0x100008
 	001fd1e8 memread4 ax
 	001fd1f0 lnot ax
 	001fd1f8 pop bx
 	001fd200 land bx,ax
 	001fd20c mov ax,bx
		001fd218: FALL_THROUGH

	[001fd218]
		001fd1cc: CONDITIONAL_JUMP
		001fd1d4: FALL_THROUGH
 	001fd218 jz 0x001fd264
		001fd264: CONDITIONAL_JUMP
		001fd220: FALL_THROUGH

	[001fd220]
		001fd218: FALL_THROUGH
 	001fd220 push ax
 	001fd228 mov mar,0x10000c
 	001fd234 memread4 ax
 	001fd23c lnot ax
 	001fd244 pop bx
 	001fd24c land bx,ax
 	001fd258 mov ax,bx
		001fd264: FALL_THROUGH

	[001fd264]
		001fd218: CONDITIONAL_JUMP
		001fd220: FALL_THROUGH
 	001fd264 jz 0x001fd2b0
		001fd2b0: CONDITIONAL_JUMP
		001fd26c: FALL_THROUGH

	[001fd26c]
		001fd264: FALL_THROUGH
 	001fd26c push ax
 	001fd274 mov mar,0x100010
 	001fd280 memread4 ax
 	001fd288 lnot ax
 	001fd290 pop bx
 	001fd298 land bx,ax
 	001fd2a4 mov ax,bx
		001fd2b0: FALL_THROUGH

	[001fd2b0]
		001fd264: CONDITIONAL_JUMP
		001fd26c: FALL_THROUGH
 	001fd2b0 jz 0x001fd2fc
		001fd2fc: CONDITIONAL_JUMP
		001fd2b8: FALL_THROUGH

	[001fd2b8]
		001fd2b0: FALL_THROUGH
 	001fd2b8 push ax
 	001fd2c0 mov mar,0x100014
 	001fd2cc memread4 ax
 	001fd2d4 lnot ax
 	001fd2dc pop bx
 	001fd2e4 land bx,ax
 	001fd2f0 mov ax,bx
		001fd2fc: FALL_THROUGH

	[001fd2fc]
		001fd2b0: CONDITIONAL_JUMP
		001fd2b8: FALL_THROUGH
 	001fd2fc jz 0x001fd348
		001fd348: CONDITIONAL_JUMP
		001fd304: FALL_THROUGH

	[001fd304]
		001fd2fc: FALL_THROUGH
 	001fd304 push ax
 	001fd30c mov mar,0x100018
 	001fd318 memread4 ax
 	001fd320 lnot ax
 	001fd328 pop bx
 	001fd330 land bx,ax
 	001fd33c mov ax,bx
		001fd348: FALL_THROUGH

	[001fd348]
		001fd2fc: CONDITIONAL_JUMP
		001fd304: FALL_THROUGH
 	001fd348 jz 0x001fd394
		001fd394: CONDITIONAL_JUMP
		001fd350: FALL_THROUGH

	[001fd350]
		001fd348: FALL_THROUGH
 	001fd350 push ax
 	001fd358 mov mar,0x10001c
 	001fd364 memread4 ax
 	001fd36c lnot ax
 	001fd374 pop bx
 	001fd37c land bx,ax
 	001fd388 mov ax,bx
		001fd394: FALL_THROUGH

	[001fd394]
		001fd348: CONDITIONAL_JUMP
		001fd350: FALL_THROUGH
 	001fd394 jz 0x001fd3e0
		001fd3e0: CONDITIONAL_JUMP
		001fd39c: FALL_THROUGH

	[001fd39c]
		001fd394: FALL_THROUGH
 	001fd39c push ax
 	001fd3a4 mov mar,0x100020
 	001fd3b0 memread4 ax
 	001fd3b8 lnot ax
 	001fd3c0 pop bx
 	001fd3c8 land bx,ax
 	001fd3d4 mov ax,bx
		001fd3e0: FALL_THROUGH

	[001fd3e0]
		001fd394: CONDITIONAL_JUMP
		001fd39c: FALL_THROUGH
 	001fd3e0 jz 0x001fd42c
		001fd42c: CONDITIONAL_JUMP
		001fd3e8: FALL_THROUGH

	[001fd3e8]
		001fd3e0: FALL_THROUGH
 	001fd3e8 push ax
 	001fd3f0 mov mar,0x100024
 	001fd3fc memread4 ax
 	001fd404 lnot ax
 	001fd40c pop bx
 	001fd414 land bx,ax
 	001fd420 mov ax,bx
		001fd42c: FALL_THROUGH

	[001fd42c]
		001fd3e0: CONDITIONAL_JUMP
		001fd3e8: FALL_THROUGH
 	001fd42c jz 0x001fd478
		001fd478: CONDITIONAL_JUMP
		001fd434: FALL_THROUGH

	[001fd434]
		001fd42c: FALL_THROUGH
 	001fd434 push ax
 	001fd43c mov mar,0x100028
 	001fd448 memread4 ax
 	001fd450 lnot ax
 	001fd458 pop bx
 	001fd460 land bx,ax
 	001fd46c mov ax,bx
		001fd478: FALL_THROUGH

	[001fd478]
		001fd42c: CONDITIONAL_JUMP
		001fd434: FALL_THROUGH
 	001fd478 jz 0x001fd4c4
		001fd4c4: CONDITIONAL_JUMP
		001fd480: FALL_THROUGH

	[001fd480]
		001fd478: FALL_THROUGH
 	001fd480 push ax
 	001fd488 mov mar,0x10002c
 	001fd494 memread4 ax
 	001fd49c lnot ax
 	001fd4a4 pop bx
 	001fd4ac land bx,ax
 	001fd4b8 mov ax,bx
		001fd4c4: FALL_THROUGH

	[001fd4c4]
		001fd478: CONDITIONAL_JUMP
		001fd480: FALL_THROUGH
 	001fd4c4 jz 0x001fd514
		001fd514: CONDITIONAL_JUMP
		001fd4cc: FALL_THROUGH

	[001fd4cc]
		001fd4c4: FALL_THROUGH
 	001fd4cc mov ax,0x1
 	001fd4d8 mov mar,0x100008
 	001fd4e4 memwrite4 ax
 	001fd4ec mov ax,0x7
 	001fd4f8 mov mar,0x1000b4
 	001fd504 memwrite4 ax
 	001fd50c jmp 0x001ff48c
		001ff48c: UNCONDITIONAL_JUMP

	[001fd514]
		001fd4c4: CONDITIONAL_JUMP
 	001fd514 sourceline 0x2cf3
 	001fd51c mov mar,0x100000
 	001fd528 memread4 ax
 	001fd530 jz 0x001fd574
		001fd574: CONDITIONAL_JUMP
		001fd538: FALL_THROUGH

	[001fd538]
		001fd514: FALL_THROUGH
 	001fd538 push ax
 	001fd540 mov mar,0x100004
 	001fd54c memread4 ax
 	001fd554 pop bx
 	001fd55c land bx,ax
 	001fd568 mov ax,bx
		001fd574: FALL_THROUGH

	[001fd574]
		001fd514: CONDITIONAL_JUMP
		001fd538: FALL_THROUGH
 	001fd574 jz 0x001fd5b8
		001fd5b8: CONDITIONAL_JUMP
		001fd57c: FALL_THROUGH

	[001fd57c]
		001fd574: FALL_THROUGH
 	001fd57c push ax
 	001fd584 mov mar,0x100008
 	001fd590 memread4 ax
 	001fd598 pop bx
 	001fd5a0 land bx,ax
 	001fd5ac mov ax,bx
		001fd5b8: FALL_THROUGH

	[001fd5b8]
		001fd574: CONDITIONAL_JUMP
		001fd57c: FALL_THROUGH
 	001fd5b8 jz 0x001fd604
		001fd604: CONDITIONAL_JUMP
		001fd5c0: FALL_THROUGH

	[001fd5c0]
		001fd5b8: FALL_THROUGH
 	001fd5c0 push ax
 	001fd5c8 mov mar,0x10000c
 	001fd5d4 memread4 ax
 	001fd5dc lnot ax
 	001fd5e4 pop bx
 	001fd5ec land bx,ax
 	001fd5f8 mov ax,bx
		001fd604: FALL_THROUGH

	[001fd604]
		001fd5b8: CONDITIONAL_JUMP
		001fd5c0: FALL_THROUGH
 	001fd604 jz 0x001fd650
		001fd650: CONDITIONAL_JUMP
		001fd60c: FALL_THROUGH

	[001fd60c]
		001fd604: FALL_THROUGH
 	001fd60c push ax
 	001fd614 mov mar,0x100010
 	001fd620 memread4 ax
 	001fd628 lnot ax
 	001fd630 pop bx
 	001fd638 land bx,ax
 	001fd644 mov ax,bx
		001fd650: FALL_THROUGH

	[001fd650]
		001fd604: CONDITIONAL_JUMP
		001fd60c: FALL_THROUGH
 	001fd650 jz 0x001fd69c
		001fd69c: CONDITIONAL_JUMP
		001fd658: FALL_THROUGH

	[001fd658]
		001fd650: FALL_THROUGH
 	001fd658 push ax
 	001fd660 mov mar,0x100014
 	001fd66c memread4 ax
 	001fd674 lnot ax
 	001fd67c pop bx
 	001fd684 land bx,ax
 	001fd690 mov ax,bx
		001fd69c: FALL_THROUGH

	[001fd69c]
		001fd650: CONDITIONAL_JUMP
		001fd658: FALL_THROUGH
 	001fd69c jz 0x001fd6e8
		001fd6e8: CONDITIONAL_JUMP
		001fd6a4: FALL_THROUGH

	[001fd6a4]
		001fd69c: FALL_THROUGH
 	001fd6a4 push ax
 	001fd6ac mov mar,0x100018
 	001fd6b8 memread4 ax
 	001fd6c0 lnot ax
 	001fd6c8 pop bx
 	001fd6d0 land bx,ax
 	001fd6dc mov ax,bx
		001fd6e8: FALL_THROUGH

	[001fd6e8]
		001fd69c: CONDITIONAL_JUMP
		001fd6a4: FALL_THROUGH
 	001fd6e8 jz 0x001fd734
		001fd734: CONDITIONAL_JUMP
		001fd6f0: FALL_THROUGH

	[001fd6f0]
		001fd6e8: FALL_THROUGH
 	001fd6f0 push ax
 	001fd6f8 mov mar,0x10001c
 	001fd704 memread4 ax
 	001fd70c lnot ax
 	001fd714 pop bx
 	001fd71c land bx,ax
 	001fd728 mov ax,bx
		001fd734: FALL_THROUGH

	[001fd734]
		001fd6e8: CONDITIONAL_JUMP
		001fd6f0: FALL_THROUGH
 	001fd734 jz 0x001fd780
		001fd780: CONDITIONAL_JUMP
		001fd73c: FALL_THROUGH

	[001fd73c]
		001fd734: FALL_THROUGH
 	001fd73c push ax
 	001fd744 mov mar,0x100020
 	001fd750 memread4 ax
 	001fd758 lnot ax
 	001fd760 pop bx
 	001fd768 land bx,ax
 	001fd774 mov ax,bx
		001fd780: FALL_THROUGH

	[001fd780]
		001fd734: CONDITIONAL_JUMP
		001fd73c: FALL_THROUGH
 	001fd780 jz 0x001fd7cc
		001fd7cc: CONDITIONAL_JUMP
		001fd788: FALL_THROUGH

	[001fd788]
		001fd780: FALL_THROUGH
 	001fd788 push ax
 	001fd790 mov mar,0x100024
 	001fd79c memread4 ax
 	001fd7a4 lnot ax
 	001fd7ac pop bx
 	001fd7b4 land bx,ax
 	001fd7c0 mov ax,bx
		001fd7cc: FALL_THROUGH

	[001fd7cc]
		001fd780: CONDITIONAL_JUMP
		001fd788: FALL_THROUGH
 	001fd7cc jz 0x001fd818
		001fd818: CONDITIONAL_JUMP
		001fd7d4: FALL_THROUGH

	[001fd7d4]
		001fd7cc: FALL_THROUGH
 	001fd7d4 push ax
 	001fd7dc mov mar,0x100028
 	001fd7e8 memread4 ax
 	001fd7f0 lnot ax
 	001fd7f8 pop bx
 	001fd800 land bx,ax
 	001fd80c mov ax,bx
		001fd818: FALL_THROUGH

	[001fd818]
		001fd7cc: CONDITIONAL_JUMP
		001fd7d4: FALL_THROUGH
 	001fd818 jz 0x001fd864
		001fd864: CONDITIONAL_JUMP
		001fd820: FALL_THROUGH

	[001fd820]
		001fd818: FALL_THROUGH
 	001fd820 push ax
 	001fd828 mov mar,0x10002c
 	001fd834 memread4 ax
 	001fd83c lnot ax
 	001fd844 pop bx
 	001fd84c land bx,ax
 	001fd858 mov ax,bx
		001fd864: FALL_THROUGH

	[001fd864]
		001fd818: CONDITIONAL_JUMP
		001fd820: FALL_THROUGH
 	001fd864 jz 0x001fd8b4
		001fd8b4: CONDITIONAL_JUMP
		001fd86c: FALL_THROUGH

	[001fd86c]
		001fd864: FALL_THROUGH
 	001fd86c mov ax,0x1
 	001fd878 mov mar,0x10000c
 	001fd884 memwrite4 ax
 	001fd88c mov ax,0x7
 	001fd898 mov mar,0x1000b8
 	001fd8a4 memwrite4 ax
 	001fd8ac jmp 0x001ff48c
		001ff48c: UNCONDITIONAL_JUMP

	[001fd8b4]
		001fd864: CONDITIONAL_JUMP
 	001fd8b4 sourceline 0x2cf8
 	001fd8bc mov mar,0x100000
 	001fd8c8 memread4 ax
 	001fd8d0 jz 0x001fd914
		001fd914: CONDITIONAL_JUMP
		001fd8d8: FALL_THROUGH

	[001fd8d8]
		001fd8b4: FALL_THROUGH
 	001fd8d8 push ax
 	001fd8e0 mov mar,0x100004
 	001fd8ec memread4 ax
 	001fd8f4 pop bx
 	001fd8fc land bx,ax
 	001fd908 mov ax,bx
		001fd914: FALL_THROUGH

	[001fd914]
		001fd8b4: CONDITIONAL_JUMP
		001fd8d8: FALL_THROUGH
 	001fd914 jz 0x001fd958
		001fd958: CONDITIONAL_JUMP
		001fd91c: FALL_THROUGH

	[001fd91c]
		001fd914: FALL_THROUGH
 	001fd91c push ax
 	001fd924 mov mar,0x100008
 	001fd930 memread4 ax
 	001fd938 pop bx
 	001fd940 land bx,ax
 	001fd94c mov ax,bx
		001fd958: FALL_THROUGH

	[001fd958]
		001fd914: CONDITIONAL_JUMP
		001fd91c: FALL_THROUGH
 	001fd958 jz 0x001fd99c
		001fd99c: CONDITIONAL_JUMP
		001fd960: FALL_THROUGH

	[001fd960]
		001fd958: FALL_THROUGH
 	001fd960 push ax
 	001fd968 mov mar,0x10000c
 	001fd974 memread4 ax
 	001fd97c pop bx
 	001fd984 land bx,ax
 	001fd990 mov ax,bx
		001fd99c: FALL_THROUGH

	[001fd99c]
		001fd958: CONDITIONAL_JUMP
		001fd960: FALL_THROUGH
 	001fd99c jz 0x001fd9e8
		001fd9e8: CONDITIONAL_JUMP
		001fd9a4: FALL_THROUGH

	[001fd9a4]
		001fd99c: FALL_THROUGH
 	001fd9a4 push ax
 	001fd9ac mov mar,0x100010
 	001fd9b8 memread4 ax
 	001fd9c0 lnot ax
 	001fd9c8 pop bx
 	001fd9d0 land bx,ax
 	001fd9dc mov ax,bx
		001fd9e8: FALL_THROUGH

	[001fd9e8]
		001fd99c: CONDITIONAL_JUMP
		001fd9a4: FALL_THROUGH
 	001fd9e8 jz 0x001fda34
		001fda34: CONDITIONAL_JUMP
		001fd9f0: FALL_THROUGH

	[001fd9f0]
		001fd9e8: FALL_THROUGH
 	001fd9f0 push ax
 	001fd9f8 mov mar,0x100014
 	001fda04 memread4 ax
 	001fda0c lnot ax
 	001fda14 pop bx
 	001fda1c land bx,ax
 	001fda28 mov ax,bx
		001fda34: FALL_THROUGH

	[001fda34]
		001fd9e8: CONDITIONAL_JUMP
		001fd9f0: FALL_THROUGH
 	001fda34 jz 0x001fda80
		001fda80: CONDITIONAL_JUMP
		001fda3c: FALL_THROUGH

	[001fda3c]
		001fda34: FALL_THROUGH
 	001fda3c push ax
 	001fda44 mov mar,0x100018
 	001fda50 memread4 ax
 	001fda58 lnot ax
 	001fda60 pop bx
 	001fda68 land bx,ax
 	001fda74 mov ax,bx
		001fda80: FALL_THROUGH

	[001fda80]
		001fda34: CONDITIONAL_JUMP
		001fda3c: FALL_THROUGH
 	001fda80 jz 0x001fdacc
		001fdacc: CONDITIONAL_JUMP
		001fda88: FALL_THROUGH

	[001fda88]
		001fda80: FALL_THROUGH
 	001fda88 push ax
 	001fda90 mov mar,0x10001c
 	001fda9c memread4 ax
 	001fdaa4 lnot ax
 	001fdaac pop bx
 	001fdab4 land bx,ax
 	001fdac0 mov ax,bx
		001fdacc: FALL_THROUGH

	[001fdacc]
		001fda80: CONDITIONAL_JUMP
		001fda88: FALL_THROUGH
 	001fdacc jz 0x001fdb18
		001fdb18: CONDITIONAL_JUMP
		001fdad4: FALL_THROUGH

	[001fdad4]
		001fdacc: FALL_THROUGH
 	001fdad4 push ax
 	001fdadc mov mar,0x100020
 	001fdae8 memread4 ax
 	001fdaf0 lnot ax
 	001fdaf8 pop bx
 	001fdb00 land bx,ax
 	001fdb0c mov ax,bx
		001fdb18: FALL_THROUGH

	[001fdb18]
		001fdacc: CONDITIONAL_JUMP
		001fdad4: FALL_THROUGH
 	001fdb18 jz 0x001fdb64
		001fdb64: CONDITIONAL_JUMP
		001fdb20: FALL_THROUGH

	[001fdb20]
		001fdb18: FALL_THROUGH
 	001fdb20 push ax
 	001fdb28 mov mar,0x100024
 	001fdb34 memread4 ax
 	001fdb3c lnot ax
 	001fdb44 pop bx
 	001fdb4c land bx,ax
 	001fdb58 mov ax,bx
		001fdb64: FALL_THROUGH

	[001fdb64]
		001fdb18: CONDITIONAL_JUMP
		001fdb20: FALL_THROUGH
 	001fdb64 jz 0x001fdbb0
		001fdbb0: CONDITIONAL_JUMP
		001fdb6c: FALL_THROUGH

	[001fdb6c]
		001fdb64: FALL_THROUGH
 	001fdb6c push ax
 	001fdb74 mov mar,0x100028
 	001fdb80 memread4 ax
 	001fdb88 lnot ax
 	001fdb90 pop bx
 	001fdb98 land bx,ax
 	001fdba4 mov ax,bx
		001fdbb0: FALL_THROUGH

	[001fdbb0]
		001fdb64: CONDITIONAL_JUMP
		001fdb6c: FALL_THROUGH
 	001fdbb0 jz 0x001fdbfc
		001fdbfc: CONDITIONAL_JUMP
		001fdbb8: FALL_THROUGH

	[001fdbb8]
		001fdbb0: FALL_THROUGH
 	001fdbb8 push ax
 	001fdbc0 mov mar,0x10002c
 	001fdbcc memread4 ax
 	001fdbd4 lnot ax
 	001fdbdc pop bx
 	001fdbe4 land bx,ax
 	001fdbf0 mov ax,bx
		001fdbfc: FALL_THROUGH

	[001fdbfc]
		001fdbb0: CONDITIONAL_JUMP
		001fdbb8: FALL_THROUGH
 	001fdbfc jz 0x001fdc4c
		001fdc4c: CONDITIONAL_JUMP
		001fdc04: FALL_THROUGH

	[001fdc04]
		001fdbfc: FALL_THROUGH
 	001fdc04 mov ax,0x1
 	001fdc10 mov mar,0x100010
 	001fdc1c memwrite4 ax
 	001fdc24 mov ax,0x7
 	001fdc30 mov mar,0x1000bc
 	001fdc3c memwrite4 ax
 	001fdc44 jmp 0x001ff48c
		001ff48c: UNCONDITIONAL_JUMP

	[001fdc4c]
		001fdbfc: CONDITIONAL_JUMP
 	001fdc4c sourceline 0x2cfd
 	001fdc54 mov mar,0x100000
 	001fdc60 memread4 ax
 	001fdc68 jz 0x001fdcac
		001fdcac: CONDITIONAL_JUMP
		001fdc70: FALL_THROUGH

	[001fdc70]
		001fdc4c: FALL_THROUGH
 	001fdc70 push ax
 	001fdc78 mov mar,0x100004
 	001fdc84 memread4 ax
 	001fdc8c pop bx
 	001fdc94 land bx,ax
 	001fdca0 mov ax,bx
		001fdcac: FALL_THROUGH

	[001fdcac]
		001fdc4c: CONDITIONAL_JUMP
		001fdc70: FALL_THROUGH
 	001fdcac jz 0x001fdcf0
		001fdcf0: CONDITIONAL_JUMP
		001fdcb4: FALL_THROUGH

	[001fdcb4]
		001fdcac: FALL_THROUGH
 	001fdcb4 push ax
 	001fdcbc mov mar,0x100008
 	001fdcc8 memread4 ax
 	001fdcd0 pop bx
 	001fdcd8 land bx,ax
 	001fdce4 mov ax,bx
		001fdcf0: FALL_THROUGH

	[001fdcf0]
		001fdcac: CONDITIONAL_JUMP
		001fdcb4: FALL_THROUGH
 	001fdcf0 jz 0x001fdd34
		001fdd34: CONDITIONAL_JUMP
		001fdcf8: FALL_THROUGH

	[001fdcf8]
		001fdcf0: FALL_THROUGH
 	001fdcf8 push ax
 	001fdd00 mov mar,0x10000c
 	001fdd0c memread4 ax
 	001fdd14 pop bx
 	001fdd1c land bx,ax
 	001fdd28 mov ax,bx
		001fdd34: FALL_THROUGH

	[001fdd34]
		001fdcf0: CONDITIONAL_JUMP
		001fdcf8: FALL_THROUGH
 	001fdd34 jz 0x001fdd78
		001fdd78: CONDITIONAL_JUMP
		001fdd3c: FALL_THROUGH

	[001fdd3c]
		001fdd34: FALL_THROUGH
 	001fdd3c push ax
 	001fdd44 mov mar,0x100010
 	001fdd50 memread4 ax
 	001fdd58 pop bx
 	001fdd60 land bx,ax
 	001fdd6c mov ax,bx
		001fdd78: FALL_THROUGH

	[001fdd78]
		001fdd34: CONDITIONAL_JUMP
		001fdd3c: FALL_THROUGH
 	001fdd78 jz 0x001fddc4
		001fddc4: CONDITIONAL_JUMP
		001fdd80: FALL_THROUGH

	[001fdd80]
		001fdd78: FALL_THROUGH
 	001fdd80 push ax
 	001fdd88 mov mar,0x100014
 	001fdd94 memread4 ax
 	001fdd9c lnot ax
 	001fdda4 pop bx
 	001fddac land bx,ax
 	001fddb8 mov ax,bx
		001fddc4: FALL_THROUGH

	[001fddc4]
		001fdd78: CONDITIONAL_JUMP
		001fdd80: FALL_THROUGH
 	001fddc4 jz 0x001fde10
		001fde10: CONDITIONAL_JUMP
		001fddcc: FALL_THROUGH

	[001fddcc]
		001fddc4: FALL_THROUGH
 	001fddcc push ax
 	001fddd4 mov mar,0x100018
 	001fdde0 memread4 ax
 	001fdde8 lnot ax
 	001fddf0 pop bx
 	001fddf8 land bx,ax
 	001fde04 mov ax,bx
		001fde10: FALL_THROUGH

	[001fde10]
		001fddc4: CONDITIONAL_JUMP
		001fddcc: FALL_THROUGH
 	001fde10 jz 0x001fde5c
		001fde5c: CONDITIONAL_JUMP
		001fde18: FALL_THROUGH

	[001fde18]
		001fde10: FALL_THROUGH
 	001fde18 push ax
 	001fde20 mov mar,0x10001c
 	001fde2c memread4 ax
 	001fde34 lnot ax
 	001fde3c pop bx
 	001fde44 land bx,ax
 	001fde50 mov ax,bx
		001fde5c: FALL_THROUGH

	[001fde5c]
		001fde10: CONDITIONAL_JUMP
		001fde18: FALL_THROUGH
 	001fde5c jz 0x001fdea8
		001fdea8: CONDITIONAL_JUMP
		001fde64: FALL_THROUGH

	[001fde64]
		001fde5c: FALL_THROUGH
 	001fde64 push ax
 	001fde6c mov mar,0x100020
 	001fde78 memread4 ax
 	001fde80 lnot ax
 	001fde88 pop bx
 	001fde90 land bx,ax
 	001fde9c mov ax,bx
		001fdea8: FALL_THROUGH

	[001fdea8]
		001fde5c: CONDITIONAL_JUMP
		001fde64: FALL_THROUGH
 	001fdea8 jz 0x001fdef4
		001fdef4: CONDITIONAL_JUMP
		001fdeb0: FALL_THROUGH

	[001fdeb0]
		001fdea8: FALL_THROUGH
 	001fdeb0 push ax
 	001fdeb8 mov mar,0x100024
 	001fdec4 memread4 ax
 	001fdecc lnot ax
 	001fded4 pop bx
 	001fdedc land bx,ax
 	001fdee8 mov ax,bx
		001fdef4: FALL_THROUGH

	[001fdef4]
		001fdea8: CONDITIONAL_JUMP
		001fdeb0: FALL_THROUGH
 	001fdef4 jz 0x001fdf40
		001fdf40: CONDITIONAL_JUMP
		001fdefc: FALL_THROUGH

	[001fdefc]
		001fdef4: FALL_THROUGH
 	001fdefc push ax
 	001fdf04 mov mar,0x100028
 	001fdf10 memread4 ax
 	001fdf18 lnot ax
 	001fdf20 pop bx
 	001fdf28 land bx,ax
 	001fdf34 mov ax,bx
		001fdf40: FALL_THROUGH

	[001fdf40]
		001fdef4: CONDITIONAL_JUMP
		001fdefc: FALL_THROUGH
 	001fdf40 jz 0x001fdf8c
		001fdf8c: CONDITIONAL_JUMP
		001fdf48: FALL_THROUGH

	[001fdf48]
		001fdf40: FALL_THROUGH
 	001fdf48 push ax
 	001fdf50 mov mar,0x10002c
 	001fdf5c memread4 ax
 	001fdf64 lnot ax
 	001fdf6c pop bx
 	001fdf74 land bx,ax
 	001fdf80 mov ax,bx
		001fdf8c: FALL_THROUGH

	[001fdf8c]
		001fdf40: CONDITIONAL_JUMP
		001fdf48: FALL_THROUGH
 	001fdf8c jz 0x001fdfdc
		001fdfdc: CONDITIONAL_JUMP
		001fdf94: FALL_THROUGH

	[001fdf94]
		001fdf8c: FALL_THROUGH
 	001fdf94 mov ax,0x1
 	001fdfa0 mov mar,0x100014
 	001fdfac memwrite4 ax
 	001fdfb4 mov ax,0x7
 	001fdfc0 mov mar,0x1000c0
 	001fdfcc memwrite4 ax
 	001fdfd4 jmp 0x001ff48c
		001ff48c: UNCONDITIONAL_JUMP

	[001fdfdc]
		001fdf8c: CONDITIONAL_JUMP
 	001fdfdc sourceline 0x2d02
 	001fdfe4 mov mar,0x100000
 	001fdff0 memread4 ax
 	001fdff8 jz 0x001fe03c
		001fe03c: CONDITIONAL_JUMP
		001fe000: FALL_THROUGH

	[001fe000]
		001fdfdc: FALL_THROUGH
 	001fe000 push ax
 	001fe008 mov mar,0x100004
 	001fe014 memread4 ax
 	001fe01c pop bx
 	001fe024 land bx,ax
 	001fe030 mov ax,bx
		001fe03c: FALL_THROUGH

	[001fe03c]
		001fdfdc: CONDITIONAL_JUMP
		001fe000: FALL_THROUGH
 	001fe03c jz 0x001fe080
		001fe080: CONDITIONAL_JUMP
		001fe044: FALL_THROUGH

	[001fe044]
		001fe03c: FALL_THROUGH
 	001fe044 push ax
 	001fe04c mov mar,0x100008
 	001fe058 memread4 ax
 	001fe060 pop bx
 	001fe068 land bx,ax
 	001fe074 mov ax,bx
		001fe080: FALL_THROUGH

	[001fe080]
		001fe03c: CONDITIONAL_JUMP
		001fe044: FALL_THROUGH
 	001fe080 jz 0x001fe0c4
		001fe0c4: CONDITIONAL_JUMP
		001fe088: FALL_THROUGH

	[001fe088]
		001fe080: FALL_THROUGH
 	001fe088 push ax
 	001fe090 mov mar,0x10000c
 	001fe09c memread4 ax
 	001fe0a4 pop bx
 	001fe0ac land bx,ax
 	001fe0b8 mov ax,bx
		001fe0c4: FALL_THROUGH

	[001fe0c4]
		001fe080: CONDITIONAL_JUMP
		001fe088: FALL_THROUGH
 	001fe0c4 jz 0x001fe108
		001fe108: CONDITIONAL_JUMP
		001fe0cc: FALL_THROUGH

	[001fe0cc]
		001fe0c4: FALL_THROUGH
 	001fe0cc push ax
 	001fe0d4 mov mar,0x100010
 	001fe0e0 memread4 ax
 	001fe0e8 pop bx
 	001fe0f0 land bx,ax
 	001fe0fc mov ax,bx
		001fe108: FALL_THROUGH

	[001fe108]
		001fe0c4: CONDITIONAL_JUMP
		001fe0cc: FALL_THROUGH
 	001fe108 jz 0x001fe14c
		001fe14c: CONDITIONAL_JUMP
		001fe110: FALL_THROUGH

	[001fe110]
		001fe108: FALL_THROUGH
 	001fe110 push ax
 	001fe118 mov mar,0x100014
 	001fe124 memread4 ax
 	001fe12c pop bx
 	001fe134 land bx,ax
 	001fe140 mov ax,bx
		001fe14c: FALL_THROUGH

	[001fe14c]
		001fe108: CONDITIONAL_JUMP
		001fe110: FALL_THROUGH
 	001fe14c jz 0x001fe198
		001fe198: CONDITIONAL_JUMP
		001fe154: FALL_THROUGH

	[001fe154]
		001fe14c: FALL_THROUGH
 	001fe154 push ax
 	001fe15c mov mar,0x100018
 	001fe168 memread4 ax
 	001fe170 lnot ax
 	001fe178 pop bx
 	001fe180 land bx,ax
 	001fe18c mov ax,bx
		001fe198: FALL_THROUGH

	[001fe198]
		001fe14c: CONDITIONAL_JUMP
		001fe154: FALL_THROUGH
 	001fe198 jz 0x001fe1e4
		001fe1e4: CONDITIONAL_JUMP
		001fe1a0: FALL_THROUGH

	[001fe1a0]
		001fe198: FALL_THROUGH
 	001fe1a0 push ax
 	001fe1a8 mov mar,0x10001c
 	001fe1b4 memread4 ax
 	001fe1bc lnot ax
 	001fe1c4 pop bx
 	001fe1cc land bx,ax
 	001fe1d8 mov ax,bx
		001fe1e4: FALL_THROUGH

	[001fe1e4]
		001fe198: CONDITIONAL_JUMP
		001fe1a0: FALL_THROUGH
 	001fe1e4 jz 0x001fe230
		001fe230: CONDITIONAL_JUMP
		001fe1ec: FALL_THROUGH

	[001fe1ec]
		001fe1e4: FALL_THROUGH
 	001fe1ec push ax
 	001fe1f4 mov mar,0x100020
 	001fe200 memread4 ax
 	001fe208 lnot ax
 	001fe210 pop bx
 	001fe218 land bx,ax
 	001fe224 mov ax,bx
		001fe230: FALL_THROUGH

	[001fe230]
		001fe1e4: CONDITIONAL_JUMP
		001fe1ec: FALL_THROUGH
 	001fe230 jz 0x001fe27c
		001fe27c: CONDITIONAL_JUMP
		001fe238: FALL_THROUGH

	[001fe238]
		001fe230: FALL_THROUGH
 	001fe238 push ax
 	001fe240 mov mar,0x100024
 	001fe24c memread4 ax
 	001fe254 lnot ax
 	001fe25c pop bx
 	001fe264 land bx,ax
 	001fe270 mov ax,bx
		001fe27c: FALL_THROUGH

	[001fe27c]
		001fe230: CONDITIONAL_JUMP
		001fe238: FALL_THROUGH
 	001fe27c jz 0x001fe2c8
		001fe2c8: CONDITIONAL_JUMP
		001fe284: FALL_THROUGH

	[001fe284]
		001fe27c: FALL_THROUGH
 	001fe284 push ax
 	001fe28c mov mar,0x100028
 	001fe298 memread4 ax
 	001fe2a0 lnot ax
 	001fe2a8 pop bx
 	001fe2b0 land bx,ax
 	001fe2bc mov ax,bx
		001fe2c8: FALL_THROUGH

	[001fe2c8]
		001fe27c: CONDITIONAL_JUMP
		001fe284: FALL_THROUGH
 	001fe2c8 jz 0x001fe314
		001fe314: CONDITIONAL_JUMP
		001fe2d0: FALL_THROUGH

	[001fe2d0]
		001fe2c8: FALL_THROUGH
 	001fe2d0 push ax
 	001fe2d8 mov mar,0x10002c
 	001fe2e4 memread4 ax
 	001fe2ec lnot ax
 	001fe2f4 pop bx
 	001fe2fc land bx,ax
 	001fe308 mov ax,bx
		001fe314: FALL_THROUGH

	[001fe314]
		001fe2c8: CONDITIONAL_JUMP
		001fe2d0: FALL_THROUGH
 	001fe314 jz 0x001fe364
		001fe364: CONDITIONAL_JUMP
		001fe31c: FALL_THROUGH

	[001fe31c]
		001fe314: FALL_THROUGH
 	001fe31c mov ax,0x1
 	001fe328 mov mar,0x100018
 	001fe334 memwrite4 ax
 	001fe33c mov ax,0x7
 	001fe348 mov mar,0x1000c4
 	001fe354 memwrite4 ax
 	001fe35c jmp 0x001ff48c
		001ff48c: UNCONDITIONAL_JUMP

	[001fe364]
		001fe314: CONDITIONAL_JUMP
 	001fe364 sourceline 0x2d07
 	001fe36c mov mar,0x100000
 	001fe378 memread4 ax
 	001fe380 jz 0x001fe3c4
		001fe3c4: CONDITIONAL_JUMP
		001fe388: FALL_THROUGH

	[001fe388]
		001fe364: FALL_THROUGH
 	001fe388 push ax
 	001fe390 mov mar,0x100004
 	001fe39c memread4 ax
 	001fe3a4 pop bx
 	001fe3ac land bx,ax
 	001fe3b8 mov ax,bx
		001fe3c4: FALL_THROUGH

	[001fe3c4]
		001fe364: CONDITIONAL_JUMP
		001fe388: FALL_THROUGH
 	001fe3c4 jz 0x001fe408
		001fe408: CONDITIONAL_JUMP
		001fe3cc: FALL_THROUGH

	[001fe3cc]
		001fe3c4: FALL_THROUGH
 	001fe3cc push ax
 	001fe3d4 mov mar,0x100008
 	001fe3e0 memread4 ax
 	001fe3e8 pop bx
 	001fe3f0 land bx,ax
 	001fe3fc mov ax,bx
		001fe408: FALL_THROUGH

	[001fe408]
		001fe3c4: CONDITIONAL_JUMP
		001fe3cc: FALL_THROUGH
 	001fe408 jz 0x001fe44c
		001fe44c: CONDITIONAL_JUMP
		001fe410: FALL_THROUGH

	[001fe410]
		001fe408: FALL_THROUGH
 	001fe410 push ax
 	001fe418 mov mar,0x10000c
 	001fe424 memread4 ax
 	001fe42c pop bx
 	001fe434 land bx,ax
 	001fe440 mov ax,bx
		001fe44c: FALL_THROUGH

	[001fe44c]
		001fe408: CONDITIONAL_JUMP
		001fe410: FALL_THROUGH
 	001fe44c jz 0x001fe490
		001fe490: CONDITIONAL_JUMP
		001fe454: FALL_THROUGH

	[001fe454]
		001fe44c: FALL_THROUGH
 	001fe454 push ax
 	001fe45c mov mar,0x100010
 	001fe468 memread4 ax
 	001fe470 pop bx
 	001fe478 land bx,ax
 	001fe484 mov ax,bx
		001fe490: FALL_THROUGH

	[001fe490]
		001fe44c: CONDITIONAL_JUMP
		001fe454: FALL_THROUGH
 	001fe490 jz 0x001fe4d4
		001fe4d4: CONDITIONAL_JUMP
		001fe498: FALL_THROUGH

	[001fe498]
		001fe490: FALL_THROUGH
 	001fe498 push ax
 	001fe4a0 mov mar,0x100014
 	001fe4ac memread4 ax
 	001fe4b4 pop bx
 	001fe4bc land bx,ax
 	001fe4c8 mov ax,bx
		001fe4d4: FALL_THROUGH

	[001fe4d4]
		001fe490: CONDITIONAL_JUMP
		001fe498: FALL_THROUGH
 	001fe4d4 jz 0x001fe518
		001fe518: CONDITIONAL_JUMP
		001fe4dc: FALL_THROUGH

	[001fe4dc]
		001fe4d4: FALL_THROUGH
 	001fe4dc push ax
 	001fe4e4 mov mar,0x100018
 	001fe4f0 memread4 ax
 	001fe4f8 pop bx
 	001fe500 land bx,ax
 	001fe50c mov ax,bx
		001fe518: FALL_THROUGH

	[001fe518]
		001fe4d4: CONDITIONAL_JUMP
		001fe4dc: FALL_THROUGH
 	001fe518 jz 0x001fe564
		001fe564: CONDITIONAL_JUMP
		001fe520: FALL_THROUGH

	[001fe520]
		001fe518: FALL_THROUGH
 	001fe520 push ax
 	001fe528 mov mar,0x10001c
 	001fe534 memread4 ax
 	001fe53c lnot ax
 	001fe544 pop bx
 	001fe54c land bx,ax
 	001fe558 mov ax,bx
		001fe564: FALL_THROUGH

	[001fe564]
		001fe518: CONDITIONAL_JUMP
		001fe520: FALL_THROUGH
 	001fe564 jz 0x001fe5b0
		001fe5b0: CONDITIONAL_JUMP
		001fe56c: FALL_THROUGH

	[001fe56c]
		001fe564: FALL_THROUGH
 	001fe56c push ax
 	001fe574 mov mar,0x100020
 	001fe580 memread4 ax
 	001fe588 lnot ax
 	001fe590 pop bx
 	001fe598 land bx,ax
 	001fe5a4 mov ax,bx
		001fe5b0: FALL_THROUGH

	[001fe5b0]
		001fe564: CONDITIONAL_JUMP
		001fe56c: FALL_THROUGH
 	001fe5b0 jz 0x001fe5fc
		001fe5fc: CONDITIONAL_JUMP
		001fe5b8: FALL_THROUGH

	[001fe5b8]
		001fe5b0: FALL_THROUGH
 	001fe5b8 push ax
 	001fe5c0 mov mar,0x100024
 	001fe5cc memread4 ax
 	001fe5d4 lnot ax
 	001fe5dc pop bx
 	001fe5e4 land bx,ax
 	001fe5f0 mov ax,bx
		001fe5fc: FALL_THROUGH

	[001fe5fc]
		001fe5b0: CONDITIONAL_JUMP
		001fe5b8: FALL_THROUGH
 	001fe5fc jz 0x001fe648
		001fe648: CONDITIONAL_JUMP
		001fe604: FALL_THROUGH

	[001fe604]
		001fe5fc: FALL_THROUGH
 	001fe604 push ax
 	001fe60c mov mar,0x100028
 	001fe618 memread4 ax
 	001fe620 lnot ax
 	001fe628 pop bx
 	001fe630 land bx,ax
 	001fe63c mov ax,bx
		001fe648: FALL_THROUGH

	[001fe648]
		001fe5fc: CONDITIONAL_JUMP
		001fe604: FALL_THROUGH
 	001fe648 jz 0x001fe694
		001fe694: CONDITIONAL_JUMP
		001fe650: FALL_THROUGH

	[001fe650]
		001fe648: FALL_THROUGH
 	001fe650 push ax
 	001fe658 mov mar,0x10002c
 	001fe664 memread4 ax
 	001fe66c lnot ax
 	001fe674 pop bx
 	001fe67c land bx,ax
 	001fe688 mov ax,bx
		001fe694: FALL_THROUGH

	[001fe694]
		001fe648: CONDITIONAL_JUMP
		001fe650: FALL_THROUGH
 	001fe694 jz 0x001fe6e4
		001fe6e4: CONDITIONAL_JUMP
		001fe69c: FALL_THROUGH

	[001fe69c]
		001fe694: FALL_THROUGH
 	001fe69c mov ax,0x1
 	001fe6a8 mov mar,0x10001c
 	001fe6b4 memwrite4 ax
 	001fe6bc mov ax,0x7
 	001fe6c8 mov mar,0x1000c8
 	001fe6d4 memwrite4 ax
 	001fe6dc jmp 0x001ff48c
		001ff48c: UNCONDITIONAL_JUMP

	[001fe6e4]
		001fe694: CONDITIONAL_JUMP
 	001fe6e4 sourceline 0x2d0c
 	001fe6ec mov mar,0x100000
 	001fe6f8 memread4 ax
 	001fe700 jz 0x001fe744
		001fe744: CONDITIONAL_JUMP
		001fe708: FALL_THROUGH

	[001fe708]
		001fe6e4: FALL_THROUGH
 	001fe708 push ax
 	001fe710 mov mar,0x100004
 	001fe71c memread4 ax
 	001fe724 pop bx
 	001fe72c land bx,ax
 	001fe738 mov ax,bx
		001fe744: FALL_THROUGH

	[001fe744]
		001fe6e4: CONDITIONAL_JUMP
		001fe708: FALL_THROUGH
 	001fe744 jz 0x001fe788
		001fe788: CONDITIONAL_JUMP
		001fe74c: FALL_THROUGH

	[001fe74c]
		001fe744: FALL_THROUGH
 	001fe74c push ax
 	001fe754 mov mar,0x100008
 	001fe760 memread4 ax
 	001fe768 pop bx
 	001fe770 land bx,ax
 	001fe77c mov ax,bx
		001fe788: FALL_THROUGH

	[001fe788]
		001fe744: CONDITIONAL_JUMP
		001fe74c: FALL_THROUGH
 	001fe788 jz 0x001fe7cc
		001fe7cc: CONDITIONAL_JUMP
		001fe790: FALL_THROUGH

	[001fe790]
		001fe788: FALL_THROUGH
 	001fe790 push ax
 	001fe798 mov mar,0x10000c
 	001fe7a4 memread4 ax
 	001fe7ac pop bx
 	001fe7b4 land bx,ax
 	001fe7c0 mov ax,bx
		001fe7cc: FALL_THROUGH

	[001fe7cc]
		001fe788: CONDITIONAL_JUMP
		001fe790: FALL_THROUGH
 	001fe7cc jz 0x001fe810
		001fe810: CONDITIONAL_JUMP
		001fe7d4: FALL_THROUGH

	[001fe7d4]
		001fe7cc: FALL_THROUGH
 	001fe7d4 push ax
 	001fe7dc mov mar,0x100010
 	001fe7e8 memread4 ax
 	001fe7f0 pop bx
 	001fe7f8 land bx,ax
 	001fe804 mov ax,bx
		001fe810: FALL_THROUGH

	[001fe810]
		001fe7cc: CONDITIONAL_JUMP
		001fe7d4: FALL_THROUGH
 	001fe810 jz 0x001fe854
		001fe854: CONDITIONAL_JUMP
		001fe818: FALL_THROUGH

	[001fe818]
		001fe810: FALL_THROUGH
 	001fe818 push ax
 	001fe820 mov mar,0x100014
 	001fe82c memread4 ax
 	001fe834 pop bx
 	001fe83c land bx,ax
 	001fe848 mov ax,bx
		001fe854: FALL_THROUGH

	[001fe854]
		001fe810: CONDITIONAL_JUMP
		001fe818: FALL_THROUGH
 	001fe854 jz 0x001fe898
		001fe898: CONDITIONAL_JUMP
		001fe85c: FALL_THROUGH

	[001fe85c]
		001fe854: FALL_THROUGH
 	001fe85c push ax
 	001fe864 mov mar,0x100018
 	001fe870 memread4 ax
 	001fe878 pop bx
 	001fe880 land bx,ax
 	001fe88c mov ax,bx
		001fe898: FALL_THROUGH

	[001fe898]
		001fe854: CONDITIONAL_JUMP
		001fe85c: FALL_THROUGH
 	001fe898 jz 0x001fe8dc
		001fe8dc: CONDITIONAL_JUMP
		001fe8a0: FALL_THROUGH

	[001fe8a0]
		001fe898: FALL_THROUGH
 	001fe8a0 push ax
 	001fe8a8 mov mar,0x10001c
 	001fe8b4 memread4 ax
 	001fe8bc pop bx
 	001fe8c4 land bx,ax
 	001fe8d0 mov ax,bx
		001fe8dc: FALL_THROUGH

	[001fe8dc]
		001fe898: CONDITIONAL_JUMP
		001fe8a0: FALL_THROUGH
 	001fe8dc jz 0x001fe928
		001fe928: CONDITIONAL_JUMP
		001fe8e4: FALL_THROUGH

	[001fe8e4]
		001fe8dc: FALL_THROUGH
 	001fe8e4 push ax
 	001fe8ec mov mar,0x100020
 	001fe8f8 memread4 ax
 	001fe900 lnot ax
 	001fe908 pop bx
 	001fe910 land bx,ax
 	001fe91c mov ax,bx
		001fe928: FALL_THROUGH

	[001fe928]
		001fe8dc: CONDITIONAL_JUMP
		001fe8e4: FALL_THROUGH
 	001fe928 jz 0x001fe974
		001fe974: CONDITIONAL_JUMP
		001fe930: FALL_THROUGH

	[001fe930]
		001fe928: FALL_THROUGH
 	001fe930 push ax
 	001fe938 mov mar,0x100024
 	001fe944 memread4 ax
 	001fe94c lnot ax
 	001fe954 pop bx
 	001fe95c land bx,ax
 	001fe968 mov ax,bx
		001fe974: FALL_THROUGH

	[001fe974]
		001fe928: CONDITIONAL_JUMP
		001fe930: FALL_THROUGH
 	001fe974 jz 0x001fe9c0
		001fe9c0: CONDITIONAL_JUMP
		001fe97c: FALL_THROUGH

	[001fe97c]
		001fe974: FALL_THROUGH
 	001fe97c push ax
 	001fe984 mov mar,0x100028
 	001fe990 memread4 ax
 	001fe998 lnot ax
 	001fe9a0 pop bx
 	001fe9a8 land bx,ax
 	001fe9b4 mov ax,bx
		001fe9c0: FALL_THROUGH

	[001fe9c0]
		001fe974: CONDITIONAL_JUMP
		001fe97c: FALL_THROUGH
 	001fe9c0 jz 0x001fea0c
		001fea0c: CONDITIONAL_JUMP
		001fe9c8: FALL_THROUGH

	[001fe9c8]
		001fe9c0: FALL_THROUGH
 	001fe9c8 push ax
 	001fe9d0 mov mar,0x10002c
 	001fe9dc memread4 ax
 	001fe9e4 lnot ax
 	001fe9ec pop bx
 	001fe9f4 land bx,ax
 	001fea00 mov ax,bx
		001fea0c: FALL_THROUGH

	[001fea0c]
		001fe9c0: CONDITIONAL_JUMP
		001fe9c8: FALL_THROUGH
 	001fea0c jz 0x001fea5c
		001fea5c: CONDITIONAL_JUMP
		001fea14: FALL_THROUGH

	[001fea14]
		001fea0c: FALL_THROUGH
 	001fea14 mov ax,0x1
 	001fea20 mov mar,0x100020
 	001fea2c memwrite4 ax
 	001fea34 mov ax,0x7
 	001fea40 mov mar,0x1000cc
 	001fea4c memwrite4 ax
 	001fea54 jmp 0x001ff48c
		001ff48c: UNCONDITIONAL_JUMP

	[001fea5c]
		001fea0c: CONDITIONAL_JUMP
 	001fea5c sourceline 0x2d11
 	001fea64 mov mar,0x100000
 	001fea70 memread4 ax
 	001fea78 jz 0x001feabc
		001feabc: CONDITIONAL_JUMP
		001fea80: FALL_THROUGH

	[001fea80]
		001fea5c: FALL_THROUGH
 	001fea80 push ax
 	001fea88 mov mar,0x100004
 	001fea94 memread4 ax
 	001fea9c pop bx
 	001feaa4 land bx,ax
 	001feab0 mov ax,bx
		001feabc: FALL_THROUGH

	[001feabc]
		001fea5c: CONDITIONAL_JUMP
		001fea80: FALL_THROUGH
 	001feabc jz 0x001feb00
		001feb00: CONDITIONAL_JUMP
		001feac4: FALL_THROUGH

	[001feac4]
		001feabc: FALL_THROUGH
 	001feac4 push ax
 	001feacc mov mar,0x100008
 	001fead8 memread4 ax
 	001feae0 pop bx
 	001feae8 land bx,ax
 	001feaf4 mov ax,bx
		001feb00: FALL_THROUGH

	[001feb00]
		001feabc: CONDITIONAL_JUMP
		001feac4: FALL_THROUGH
 	001feb00 jz 0x001feb44
		001feb44: CONDITIONAL_JUMP
		001feb08: FALL_THROUGH

	[001feb08]
		001feb00: FALL_THROUGH
 	001feb08 push ax
 	001feb10 mov mar,0x10000c
 	001feb1c memread4 ax
 	001feb24 pop bx
 	001feb2c land bx,ax
 	001feb38 mov ax,bx
		001feb44: FALL_THROUGH

	[001feb44]
		001feb00: CONDITIONAL_JUMP
		001feb08: FALL_THROUGH
 	001feb44 jz 0x001feb88
		001feb88: CONDITIONAL_JUMP
		001feb4c: FALL_THROUGH

	[001feb4c]
		001feb44: FALL_THROUGH
 	001feb4c push ax
 	001feb54 mov mar,0x100010
 	001feb60 memread4 ax
 	001feb68 pop bx
 	001feb70 land bx,ax
 	001feb7c mov ax,bx
		001feb88: FALL_THROUGH

	[001feb88]
		001feb44: CONDITIONAL_JUMP
		001feb4c: FALL_THROUGH
 	001feb88 jz 0x001febcc
		001febcc: CONDITIONAL_JUMP
		001feb90: FALL_THROUGH

	[001feb90]
		001feb88: FALL_THROUGH
 	001feb90 push ax
 	001feb98 mov mar,0x100014
 	001feba4 memread4 ax
 	001febac pop bx
 	001febb4 land bx,ax
 	001febc0 mov ax,bx
		001febcc: FALL_THROUGH

	[001febcc]
		001feb88: CONDITIONAL_JUMP
		001feb90: FALL_THROUGH
 	001febcc jz 0x001fec10
		001fec10: CONDITIONAL_JUMP
		001febd4: FALL_THROUGH

	[001febd4]
		001febcc: FALL_THROUGH
 	001febd4 push ax
 	001febdc mov mar,0x100018
 	001febe8 memread4 ax
 	001febf0 pop bx
 	001febf8 land bx,ax
 	001fec04 mov ax,bx
		001fec10: FALL_THROUGH

	[001fec10]
		001febcc: CONDITIONAL_JUMP
		001febd4: FALL_THROUGH
 	001fec10 jz 0x001fec54
		001fec54: CONDITIONAL_JUMP
		001fec18: FALL_THROUGH

	[001fec18]
		001fec10: FALL_THROUGH
 	001fec18 push ax
 	001fec20 mov mar,0x10001c
 	001fec2c memread4 ax
 	001fec34 pop bx
 	001fec3c land bx,ax
 	001fec48 mov ax,bx
		001fec54: FALL_THROUGH

	[001fec54]
		001fec10: CONDITIONAL_JUMP
		001fec18: FALL_THROUGH
 	001fec54 jz 0x001fec98
		001fec98: CONDITIONAL_JUMP
		001fec5c: FALL_THROUGH

	[001fec5c]
		001fec54: FALL_THROUGH
 	001fec5c push ax
 	001fec64 mov mar,0x100020
 	001fec70 memread4 ax
 	001fec78 pop bx
 	001fec80 land bx,ax
 	001fec8c mov ax,bx
		001fec98: FALL_THROUGH

	[001fec98]
		001fec54: CONDITIONAL_JUMP
		001fec5c: FALL_THROUGH
 	001fec98 jz 0x001fece4
		001fece4: CONDITIONAL_JUMP
		001feca0: FALL_THROUGH

	[001feca0]
		001fec98: FALL_THROUGH
 	001feca0 push ax
 	001feca8 mov mar,0x100024
 	001fecb4 memread4 ax
 	001fecbc lnot ax
 	001fecc4 pop bx
 	001feccc land bx,ax
 	001fecd8 mov ax,bx
		001fece4: FALL_THROUGH

	[001fece4]
		001fec98: CONDITIONAL_JUMP
		001feca0: FALL_THROUGH
 	001fece4 jz 0x001fed30
		001fed30: CONDITIONAL_JUMP
		001fecec: FALL_THROUGH

	[001fecec]
		001fece4: FALL_THROUGH
 	001fecec push ax
 	001fecf4 mov mar,0x100028
 	001fed00 memread4 ax
 	001fed08 lnot ax
 	001fed10 pop bx
 	001fed18 land bx,ax
 	001fed24 mov ax,bx
		001fed30: FALL_THROUGH

	[001fed30]
		001fece4: CONDITIONAL_JUMP
		001fecec: FALL_THROUGH
 	001fed30 jz 0x001fed7c
		001fed7c: CONDITIONAL_JUMP
		001fed38: FALL_THROUGH

	[001fed38]
		001fed30: FALL_THROUGH
 	001fed38 push ax
 	001fed40 mov mar,0x10002c
 	001fed4c memread4 ax
 	001fed54 lnot ax
 	001fed5c pop bx
 	001fed64 land bx,ax
 	001fed70 mov ax,bx
		001fed7c: FALL_THROUGH

	[001fed7c]
		001fed30: CONDITIONAL_JUMP
		001fed38: FALL_THROUGH
 	001fed7c jz 0x001fedcc
		001fedcc: CONDITIONAL_JUMP
		001fed84: FALL_THROUGH

	[001fed84]
		001fed7c: FALL_THROUGH
 	001fed84 mov ax,0x1
 	001fed90 mov mar,0x100024
 	001fed9c memwrite4 ax
 	001feda4 mov ax,0x7
 	001fedb0 mov mar,0x1000d0
 	001fedbc memwrite4 ax
 	001fedc4 jmp 0x001ff48c
		001ff48c: UNCONDITIONAL_JUMP

	[001fedcc]
		001fed7c: CONDITIONAL_JUMP
 	001fedcc sourceline 0x2d16
 	001fedd4 mov mar,0x100000
 	001fede0 memread4 ax
 	001fede8 jz 0x001fee2c
		001fee2c: CONDITIONAL_JUMP
		001fedf0: FALL_THROUGH

	[001fedf0]
		001fedcc: FALL_THROUGH
 	001fedf0 push ax
 	001fedf8 mov mar,0x100004
 	001fee04 memread4 ax
 	001fee0c pop bx
 	001fee14 land bx,ax
 	001fee20 mov ax,bx
		001fee2c: FALL_THROUGH

	[001fee2c]
		001fedcc: CONDITIONAL_JUMP
		001fedf0: FALL_THROUGH
 	001fee2c jz 0x001fee70
		001fee70: CONDITIONAL_JUMP
		001fee34: FALL_THROUGH

	[001fee34]
		001fee2c: FALL_THROUGH
 	001fee34 push ax
 	001fee3c mov mar,0x100008
 	001fee48 memread4 ax
 	001fee50 pop bx
 	001fee58 land bx,ax
 	001fee64 mov ax,bx
		001fee70: FALL_THROUGH

	[001fee70]
		001fee2c: CONDITIONAL_JUMP
		001fee34: FALL_THROUGH
 	001fee70 jz 0x001feeb4
		001feeb4: CONDITIONAL_JUMP
		001fee78: FALL_THROUGH

	[001fee78]
		001fee70: FALL_THROUGH
 	001fee78 push ax
 	001fee80 mov mar,0x10000c
 	001fee8c memread4 ax
 	001fee94 pop bx
 	001fee9c land bx,ax
 	001feea8 mov ax,bx
		001feeb4: FALL_THROUGH

	[001feeb4]
		001fee70: CONDITIONAL_JUMP
		001fee78: FALL_THROUGH
 	001feeb4 jz 0x001feef8
		001feef8: CONDITIONAL_JUMP
		001feebc: FALL_THROUGH

	[001feebc]
		001feeb4: FALL_THROUGH
 	001feebc push ax
 	001feec4 mov mar,0x100010
 	001feed0 memread4 ax
 	001feed8 pop bx
 	001feee0 land bx,ax
 	001feeec mov ax,bx
		001feef8: FALL_THROUGH

	[001feef8]
		001feeb4: CONDITIONAL_JUMP
		001feebc: FALL_THROUGH
 	001feef8 jz 0x001fef3c
		001fef3c: CONDITIONAL_JUMP
		001fef00: FALL_THROUGH

	[001fef00]
		001feef8: FALL_THROUGH
 	001fef00 push ax
 	001fef08 mov mar,0x100014
 	001fef14 memread4 ax
 	001fef1c pop bx
 	001fef24 land bx,ax
 	001fef30 mov ax,bx
		001fef3c: FALL_THROUGH

	[001fef3c]
		001feef8: CONDITIONAL_JUMP
		001fef00: FALL_THROUGH
 	001fef3c jz 0x001fef80
		001fef80: CONDITIONAL_JUMP
		001fef44: FALL_THROUGH

	[001fef44]
		001fef3c: FALL_THROUGH
 	001fef44 push ax
 	001fef4c mov mar,0x100018
 	001fef58 memread4 ax
 	001fef60 pop bx
 	001fef68 land bx,ax
 	001fef74 mov ax,bx
		001fef80: FALL_THROUGH

	[001fef80]
		001fef3c: CONDITIONAL_JUMP
		001fef44: FALL_THROUGH
 	001fef80 jz 0x001fefc4
		001fefc4: CONDITIONAL_JUMP
		001fef88: FALL_THROUGH

	[001fef88]
		001fef80: FALL_THROUGH
 	001fef88 push ax
 	001fef90 mov mar,0x10001c
 	001fef9c memread4 ax
 	001fefa4 pop bx
 	001fefac land bx,ax
 	001fefb8 mov ax,bx
		001fefc4: FALL_THROUGH

	[001fefc4]
		001fef80: CONDITIONAL_JUMP
		001fef88: FALL_THROUGH
 	001fefc4 jz 0x001ff008
		001ff008: CONDITIONAL_JUMP
		001fefcc: FALL_THROUGH

	[001fefcc]
		001fefc4: FALL_THROUGH
 	001fefcc push ax
 	001fefd4 mov mar,0x100020
 	001fefe0 memread4 ax
 	001fefe8 pop bx
 	001feff0 land bx,ax
 	001feffc mov ax,bx
		001ff008: FALL_THROUGH

	[001ff008]
		001fefc4: CONDITIONAL_JUMP
		001fefcc: FALL_THROUGH
 	001ff008 jz 0x001ff04c
		001ff04c: CONDITIONAL_JUMP
		001ff010: FALL_THROUGH

	[001ff010]
		001ff008: FALL_THROUGH
 	001ff010 push ax
 	001ff018 mov mar,0x100024
 	001ff024 memread4 ax
 	001ff02c pop bx
 	001ff034 land bx,ax
 	001ff040 mov ax,bx
		001ff04c: FALL_THROUGH

	[001ff04c]
		001ff008: CONDITIONAL_JUMP
		001ff010: FALL_THROUGH
 	001ff04c jz 0x001ff098
		001ff098: CONDITIONAL_JUMP
		001ff054: FALL_THROUGH

	[001ff054]
		001ff04c: FALL_THROUGH
 	001ff054 push ax
 	001ff05c mov mar,0x100028
 	001ff068 memread4 ax
 	001ff070 lnot ax
 	001ff078 pop bx
 	001ff080 land bx,ax
 	001ff08c mov ax,bx
		001ff098: FALL_THROUGH

	[001ff098]
		001ff04c: CONDITIONAL_JUMP
		001ff054: FALL_THROUGH
 	001ff098 jz 0x001ff0e4
		001ff0e4: CONDITIONAL_JUMP
		001ff0a0: FALL_THROUGH

	[001ff0a0]
		001ff098: FALL_THROUGH
 	001ff0a0 push ax
 	001ff0a8 mov mar,0x10002c
 	001ff0b4 memread4 ax
 	001ff0bc lnot ax
 	001ff0c4 pop bx
 	001ff0cc land bx,ax
 	001ff0d8 mov ax,bx
		001ff0e4: FALL_THROUGH

	[001ff0e4]
		001ff098: CONDITIONAL_JUMP
		001ff0a0: FALL_THROUGH
 	001ff0e4 jz 0x001ff134
		001ff134: CONDITIONAL_JUMP
		001ff0ec: FALL_THROUGH

	[001ff0ec]
		001ff0e4: FALL_THROUGH
 	001ff0ec mov ax,0x1
 	001ff0f8 mov mar,0x100028
 	001ff104 memwrite4 ax
 	001ff10c mov ax,0x7
 	001ff118 mov mar,0x1000d4
 	001ff124 memwrite4 ax
 	001ff12c jmp 0x001ff48c
		001ff48c: UNCONDITIONAL_JUMP

	[001ff134]
		001ff0e4: CONDITIONAL_JUMP
 	001ff134 sourceline 0x2d1b
 	001ff13c mov mar,0x100000
 	001ff148 memread4 ax
 	001ff150 jz 0x001ff194
		001ff194: CONDITIONAL_JUMP
		001ff158: FALL_THROUGH

	[001ff158]
		001ff134: FALL_THROUGH
 	001ff158 push ax
 	001ff160 mov mar,0x100004
 	001ff16c memread4 ax
 	001ff174 pop bx
 	001ff17c land bx,ax
 	001ff188 mov ax,bx
		001ff194: FALL_THROUGH

	[001ff194]
		001ff134: CONDITIONAL_JUMP
		001ff158: FALL_THROUGH
 	001ff194 jz 0x001ff1d8
		001ff1d8: CONDITIONAL_JUMP
		001ff19c: FALL_THROUGH

	[001ff19c]
		001ff194: FALL_THROUGH
 	001ff19c push ax
 	001ff1a4 mov mar,0x100008
 	001ff1b0 memread4 ax
 	001ff1b8 pop bx
 	001ff1c0 land bx,ax
 	001ff1cc mov ax,bx
		001ff1d8: FALL_THROUGH

	[001ff1d8]
		001ff194: CONDITIONAL_JUMP
		001ff19c: FALL_THROUGH
 	001ff1d8 jz 0x001ff21c
		001ff21c: CONDITIONAL_JUMP
		001ff1e0: FALL_THROUGH

	[001ff1e0]
		001ff1d8: FALL_THROUGH
 	001ff1e0 push ax
 	001ff1e8 mov mar,0x10000c
 	001ff1f4 memread4 ax
 	001ff1fc pop bx
 	001ff204 land bx,ax
 	001ff210 mov ax,bx
		001ff21c: FALL_THROUGH

	[001ff21c]
		001ff1d8: CONDITIONAL_JUMP
		001ff1e0: FALL_THROUGH
 	001ff21c jz 0x001ff260
		001ff260: CONDITIONAL_JUMP
		001ff224: FALL_THROUGH

	[001ff224]
		001ff21c: FALL_THROUGH
 	001ff224 push ax
 	001ff22c mov mar,0x100010
 	001ff238 memread4 ax
 	001ff240 pop bx
 	001ff248 land bx,ax
 	001ff254 mov ax,bx
		001ff260: FALL_THROUGH

	[001ff260]
		001ff21c: CONDITIONAL_JUMP
		001ff224: FALL_THROUGH
 	001ff260 jz 0x001ff2a4
		001ff2a4: CONDITIONAL_JUMP
		001ff268: FALL_THROUGH

	[001ff268]
		001ff260: FALL_THROUGH
 	001ff268 push ax
 	001ff270 mov mar,0x100014
 	001ff27c memread4 ax
 	001ff284 pop bx
 	001ff28c land bx,ax
 	001ff298 mov ax,bx
		001ff2a4: FALL_THROUGH

	[001ff2a4]
		001ff260: CONDITIONAL_JUMP
		001ff268: FALL_THROUGH
 	001ff2a4 jz 0x001ff2e8
		001ff2e8: CONDITIONAL_JUMP
		001ff2ac: FALL_THROUGH

	[001ff2ac]
		001ff2a4: FALL_THROUGH
 	001ff2ac push ax
 	001ff2b4 mov mar,0x100018
 	001ff2c0 memread4 ax
 	001ff2c8 pop bx
 	001ff2d0 land bx,ax
 	001ff2dc mov ax,bx
		001ff2e8: FALL_THROUGH

	[001ff2e8]
		001ff2a4: CONDITIONAL_JUMP
		001ff2ac: FALL_THROUGH
 	001ff2e8 jz 0x001ff32c
		001ff32c: CONDITIONAL_JUMP
		001ff2f0: FALL_THROUGH

	[001ff2f0]
		001ff2e8: FALL_THROUGH
 	001ff2f0 push ax
 	001ff2f8 mov mar,0x10001c
 	001ff304 memread4 ax
 	001ff30c pop bx
 	001ff314 land bx,ax
 	001ff320 mov ax,bx
		001ff32c: FALL_THROUGH

	[001ff32c]
		001ff2e8: CONDITIONAL_JUMP
		001ff2f0: FALL_THROUGH
 	001ff32c jz 0x001ff370
		001ff370: CONDITIONAL_JUMP
		001ff334: FALL_THROUGH

	[001ff334]
		001ff32c: FALL_THROUGH
 	001ff334 push ax
 	001ff33c mov mar,0x100020
 	001ff348 memread4 ax
 	001ff350 pop bx
 	001ff358 land bx,ax
 	001ff364 mov ax,bx
		001ff370: FALL_THROUGH

	[001ff370]
		001ff32c: CONDITIONAL_JUMP
		001ff334: FALL_THROUGH
 	001ff370 jz 0x001ff3b4
		001ff3b4: CONDITIONAL_JUMP
		001ff378: FALL_THROUGH

	[001ff378]
		001ff370: FALL_THROUGH
 	001ff378 push ax
 	001ff380 mov mar,0x100024
 	001ff38c memread4 ax
 	001ff394 pop bx
 	001ff39c land bx,ax
 	001ff3a8 mov ax,bx
		001ff3b4: FALL_THROUGH

	[001ff3b4]
		001ff370: CONDITIONAL_JUMP
		001ff378: FALL_THROUGH
 	001ff3b4 jz 0x001ff3f8
		001ff3f8: CONDITIONAL_JUMP
		001ff3bc: FALL_THROUGH

	[001ff3bc]
		001ff3b4: FALL_THROUGH
 	001ff3bc push ax
 	001ff3c4 mov mar,0x100028
 	001ff3d0 memread4 ax
 	001ff3d8 pop bx
 	001ff3e0 land bx,ax
 	001ff3ec mov ax,bx
		001ff3f8: FALL_THROUGH

	[001ff3f8]
		001ff3b4: CONDITIONAL_JUMP
		001ff3bc: FALL_THROUGH
 	001ff3f8 jz 0x001ff444
		001ff444: CONDITIONAL_JUMP
		001ff400: FALL_THROUGH

	[001ff400]
		001ff3f8: FALL_THROUGH
 	001ff400 push ax
 	001ff408 mov mar,0x10002c
 	001ff414 memread4 ax
 	001ff41c lnot ax
 	001ff424 pop bx
 	001ff42c land bx,ax
 	001ff438 mov ax,bx
		001ff444: FALL_THROUGH

	[001ff444]
		001ff3f8: CONDITIONAL_JUMP
		001ff400: FALL_THROUGH
 	001ff444 jz 0x001ff48c
		001ff48c: CONDITIONAL_JUMP
		001ff44c: FALL_THROUGH

	[001ff44c]
		001ff444: FALL_THROUGH
 	001ff44c mov ax,0x1
 	001ff458 mov mar,0x10002c
 	001ff464 memwrite4 ax
 	001ff46c mov ax,0x7
 	001ff478 mov mar,0x1000d8
 	001ff484 memwrite4 ax
		001ff48c: FALL_THROUGH

	[001ff48c]
		001fcd74: UNCONDITIONAL_JUMP
		001fd124: UNCONDITIONAL_JUMP
		001fd4cc: UNCONDITIONAL_JUMP
		001fd86c: UNCONDITIONAL_JUMP
		001fdc04: UNCONDITIONAL_JUMP
		001fdf94: UNCONDITIONAL_JUMP
		001fe31c: UNCONDITIONAL_JUMP
		001fe69c: UNCONDITIONAL_JUMP
		001fea14: UNCONDITIONAL_JUMP
		001fed84: UNCONDITIONAL_JUMP
		001ff0ec: UNCONDITIONAL_JUMP
		001ff444: CONDITIONAL_JUMP
		001ff44c: FALL_THROUGH
 	001ff48c sourceline 0x2d1f
 	001ff494 jmp 0x001ff5f0
		001ff5f0: UNCONDITIONAL_JUMP

	[001ff49c]
		001fc9a8: CONDITIONAL_JUMP
 	001ff49c sourceline 0x2d22
 	001ff4a4 mov mar,0x32ef20
 	001ff4b0 memread4 ax
 	001ff4b8 lnot ax
 	001ff4c0 jz 0x001ff5f0
		001ff5f0: CONDITIONAL_JUMP
		001ff4c8: FALL_THROUGH

	[001ff4c8]
		001ff49c: FALL_THROUGH
 	001ff4c8 sourceline 0x2d24
 	001ff4d0 mov ax,0x1
 	001ff4dc mov bx,ax
 	001ff4e8 mov mar,0x3cef20
 	001ff4f4 mov ax,mar
 	001ff500 push op
 	001ff508 mov op,ax
 	001ff510 farpush bx
 	001ff518 setfuncargs 0x1
 	001ff520 mov ax,0x69ef20
 	001ff52c farcall ax
 	001ff534 farsubsp 0x1
 	001ff53c pop op
 	001ff544 sourceline 0x2d25
 	001ff54c push op
 	001ff554 mov ax,0x2c77e7
 	001ff560 farpush ax
 	001ff568 mov ax,0x138
 	001ff574 farpush ax
 	001ff57c mov ax,0x92
 	001ff588 farpush ax
 	001ff590 mov ax,0x0
 	001ff59c farpush ax
 	001ff5a4 mov mar,0x3cef20
 	001ff5b0 mov ax,mar
 	001ff5bc mov op,ax
 	001ff5c4 setfuncargs 0x4
 	001ff5cc mov ax,0x6aef20
 	001ff5d8 farcall ax
 	001ff5e0 farsubsp 0x4
 	001ff5e8 pop op
		001ff5f0: FALL_THROUGH

	[001ff5f0]
		001fc87c: CONDITIONAL_JUMP
		001ff48c: UNCONDITIONAL_JUMP
		001ff49c: CONDITIONAL_JUMP
		001ff4c8: FALL_THROUGH
 	001ff5f0 sourceline 0x2d29
 	001ff5f8 stackptr 0xc
 	001ff600 memread4 ax
 	001ff608 push ax
 	001ff610 mov ax,0x2
 	001ff61c pop bx
 	001ff624 cmpeq bx,ax
 	001ff630 mov ax,bx
 	001ff63c jz 0x001ff7fc
		001ff7fc: CONDITIONAL_JUMP
		001ff644: FALL_THROUGH

	[001ff644]
		001ff5f0: FALL_THROUGH
 	001ff644 sourceline 0x2d2b
 	001ff64c mov mar,0x626f20
 	001ff658 mov ax,mar
 	001ff664 push op
 	001ff66c mov op,ax
 	001ff674 setfuncargs 0x0
 	001ff67c mov ax,0x606f20
 	001ff688 farcall ax
 	001ff690 pop op
 	001ff698 lnot ax
 	001ff6a0 jz 0x001ff7fc
		001ff7fc: CONDITIONAL_JUMP
		001ff6a8: FALL_THROUGH

	[001ff6a8]
		001ff644: FALL_THROUGH
 	001ff6a8 sourceline 0x2d2d
 	001ff6b0 mov mar,0x32ef20
 	001ff6bc memread4 ax
 	001ff6c4 lnot ax
 	001ff6cc jz 0x001ff7fc
		001ff7fc: CONDITIONAL_JUMP
		001ff6d4: FALL_THROUGH

	[001ff6d4]
		001ff6a8: FALL_THROUGH
 	001ff6d4 sourceline 0x2d2f
 	001ff6dc mov ax,0x1
 	001ff6e8 mov bx,ax
 	001ff6f4 mov mar,0x3cef20
 	001ff700 mov ax,mar
 	001ff70c push op
 	001ff714 mov op,ax
 	001ff71c farpush bx
 	001ff724 setfuncargs 0x1
 	001ff72c mov ax,0x69ef20
 	001ff738 farcall ax
 	001ff740 farsubsp 0x1
 	001ff748 pop op
 	001ff750 sourceline 0x2d30
 	001ff758 push op
 	001ff760 mov ax,0x2c7835
 	001ff76c farpush ax
 	001ff774 mov ax,0x138
 	001ff780 farpush ax
 	001ff788 mov ax,0x92
 	001ff794 farpush ax
 	001ff79c mov ax,0x0
 	001ff7a8 farpush ax
 	001ff7b0 mov mar,0x3cef20
 	001ff7bc mov ax,mar
 	001ff7c8 mov op,ax
 	001ff7d0 setfuncargs 0x4
 	001ff7d8 mov ax,0x6aef20
 	001ff7e4 farcall ax
 	001ff7ec farsubsp 0x4
 	001ff7f4 pop op
		001ff7fc: FALL_THROUGH

	[001ff7fc]
		001ff5f0: CONDITIONAL_JUMP
		001ff644: CONDITIONAL_JUMP
		001ff6a8: CONDITIONAL_JUMP
		001ff6d4: FALL_THROUGH
 	001ff7fc sourceline 0x2d34
 	001ff804 mov ax,0x0
 	001ff810 stackptr 0x8
 	001ff818 memzerond
 	001ff81c ret

btnDown__OnClick$2:
	[001ff820]
 	001ff820 sourceline 0x2d37
 	001ff828 thisaddr
 	001ff830 stackptr 0x8
 	001ff838 memread4 ax
 	001ff840 meminit ax
 	001ff848 sourceline 0x2d38
 	001ff850 stackptr 0xc
 	001ff858 memread4 ax
 	001ff860 push ax
 	001ff868 mov ax,0x1
 	001ff874 pop bx
 	001ff87c cmpeq bx,ax
 	001ff888 mov ax,bx
 	001ff894 jz 0x002024e4
		002024e4: CONDITIONAL_JUMP
		001ff89c: FALL_THROUGH

	[001ff89c]
		001ff820: FALL_THROUGH
 	001ff89c sourceline 0x2d3a
*	001ff8a4 mov mar,0x626f20
 	001ff8b0 mov ax,mar
 	001ff8bc push op
 	001ff8c4 mov op,ax
 	001ff8cc setfuncargs 0x0
 	001ff8d4 mov ax,0x606f20
 	001ff8e0 farcall ax
 	001ff8e8 pop op
 	001ff8f0 jz 0x00202390
		00202390: CONDITIONAL_JUMP
		001ff8f8: FALL_THROUGH

	[001ff8f8]
		001ff89c: FALL_THROUGH
 	001ff8f8 sourceline 0x2d3c
 	001ff900 mov mar,0x100000
 	001ff90c memread4 ax
 	001ff914 lnot ax
 	001ff91c jz 0x001ff968
		001ff968: CONDITIONAL_JUMP
		001ff924: FALL_THROUGH

	[001ff924]
		001ff8f8: FALL_THROUGH
 	001ff924 push ax
 	001ff92c mov mar,0x100004
 	001ff938 memread4 ax
 	001ff940 lnot ax
 	001ff948 pop bx
 	001ff950 land bx,ax
 	001ff95c mov ax,bx
		001ff968: FALL_THROUGH

	[001ff968]
		001ff8f8: CONDITIONAL_JUMP
		001ff924: FALL_THROUGH
 	001ff968 jz 0x001ff9b4
		001ff9b4: CONDITIONAL_JUMP
		001ff970: FALL_THROUGH

	[001ff970]
		001ff968: FALL_THROUGH
 	001ff970 push ax
 	001ff978 mov mar,0x100008
 	001ff984 memread4 ax
 	001ff98c lnot ax
 	001ff994 pop bx
 	001ff99c land bx,ax
 	001ff9a8 mov ax,bx
		001ff9b4: FALL_THROUGH

	[001ff9b4]
		001ff968: CONDITIONAL_JUMP
		001ff970: FALL_THROUGH
 	001ff9b4 jz 0x001ffa00
		001ffa00: CONDITIONAL_JUMP
		001ff9bc: FALL_THROUGH

	[001ff9bc]
		001ff9b4: FALL_THROUGH
 	001ff9bc push ax
 	001ff9c4 mov mar,0x10000c
 	001ff9d0 memread4 ax
 	001ff9d8 lnot ax
 	001ff9e0 pop bx
 	001ff9e8 land bx,ax
 	001ff9f4 mov ax,bx
		001ffa00: FALL_THROUGH

	[001ffa00]
		001ff9b4: CONDITIONAL_JUMP
		001ff9bc: FALL_THROUGH
 	001ffa00 jz 0x001ffa4c
		001ffa4c: CONDITIONAL_JUMP
		001ffa08: FALL_THROUGH

	[001ffa08]
		001ffa00: FALL_THROUGH
 	001ffa08 push ax
 	001ffa10 mov mar,0x100010
 	001ffa1c memread4 ax
 	001ffa24 lnot ax
 	001ffa2c pop bx
 	001ffa34 land bx,ax
 	001ffa40 mov ax,bx
		001ffa4c: FALL_THROUGH

	[001ffa4c]
		001ffa00: CONDITIONAL_JUMP
		001ffa08: FALL_THROUGH
 	001ffa4c jz 0x001ffa98
		001ffa98: CONDITIONAL_JUMP
		001ffa54: FALL_THROUGH

	[001ffa54]
		001ffa4c: FALL_THROUGH
 	001ffa54 push ax
 	001ffa5c mov mar,0x100014
 	001ffa68 memread4 ax
 	001ffa70 lnot ax
 	001ffa78 pop bx
 	001ffa80 land bx,ax
 	001ffa8c mov ax,bx
		001ffa98: FALL_THROUGH

	[001ffa98]
		001ffa4c: CONDITIONAL_JUMP
		001ffa54: FALL_THROUGH
 	001ffa98 jz 0x001ffae4
		001ffae4: CONDITIONAL_JUMP
		001ffaa0: FALL_THROUGH

	[001ffaa0]
		001ffa98: FALL_THROUGH
 	001ffaa0 push ax
 	001ffaa8 mov mar,0x100018
 	001ffab4 memread4 ax
 	001ffabc lnot ax
 	001ffac4 pop bx
 	001ffacc land bx,ax
 	001ffad8 mov ax,bx
		001ffae4: FALL_THROUGH

	[001ffae4]
		001ffa98: CONDITIONAL_JUMP
		001ffaa0: FALL_THROUGH
 	001ffae4 jz 0x001ffb30
		001ffb30: CONDITIONAL_JUMP
		001ffaec: FALL_THROUGH

	[001ffaec]
		001ffae4: FALL_THROUGH
 	001ffaec push ax
 	001ffaf4 mov mar,0x10001c
 	001ffb00 memread4 ax
 	001ffb08 lnot ax
 	001ffb10 pop bx
 	001ffb18 land bx,ax
 	001ffb24 mov ax,bx
		001ffb30: FALL_THROUGH

	[001ffb30]
		001ffae4: CONDITIONAL_JUMP
		001ffaec: FALL_THROUGH
 	001ffb30 jz 0x001ffb7c
		001ffb7c: CONDITIONAL_JUMP
		001ffb38: FALL_THROUGH

	[001ffb38]
		001ffb30: FALL_THROUGH
 	001ffb38 push ax
 	001ffb40 mov mar,0x100020
 	001ffb4c memread4 ax
 	001ffb54 lnot ax
 	001ffb5c pop bx
 	001ffb64 land bx,ax
 	001ffb70 mov ax,bx
		001ffb7c: FALL_THROUGH

	[001ffb7c]
		001ffb30: CONDITIONAL_JUMP
		001ffb38: FALL_THROUGH
 	001ffb7c jz 0x001ffbc8
		001ffbc8: CONDITIONAL_JUMP
		001ffb84: FALL_THROUGH

	[001ffb84]
		001ffb7c: FALL_THROUGH
 	001ffb84 push ax
 	001ffb8c mov mar,0x100024
 	001ffb98 memread4 ax
 	001ffba0 lnot ax
 	001ffba8 pop bx
 	001ffbb0 land bx,ax
 	001ffbbc mov ax,bx
		001ffbc8: FALL_THROUGH

	[001ffbc8]
		001ffb7c: CONDITIONAL_JUMP
		001ffb84: FALL_THROUGH
 	001ffbc8 jz 0x001ffc14
		001ffc14: CONDITIONAL_JUMP
		001ffbd0: FALL_THROUGH

	[001ffbd0]
		001ffbc8: FALL_THROUGH
 	001ffbd0 push ax
 	001ffbd8 mov mar,0x100028
 	001ffbe4 memread4 ax
 	001ffbec lnot ax
 	001ffbf4 pop bx
 	001ffbfc land bx,ax
 	001ffc08 mov ax,bx
		001ffc14: FALL_THROUGH

	[001ffc14]
		001ffbc8: CONDITIONAL_JUMP
		001ffbd0: FALL_THROUGH
 	001ffc14 jz 0x001ffc60
		001ffc60: CONDITIONAL_JUMP
		001ffc1c: FALL_THROUGH

	[001ffc1c]
		001ffc14: FALL_THROUGH
 	001ffc1c push ax
 	001ffc24 mov mar,0x10002c
 	001ffc30 memread4 ax
 	001ffc38 lnot ax
 	001ffc40 pop bx
 	001ffc48 land bx,ax
 	001ffc54 mov ax,bx
		001ffc60: FALL_THROUGH

	[001ffc60]
		001ffc14: CONDITIONAL_JUMP
		001ffc1c: FALL_THROUGH
 	001ffc60 jz 0x001ffcb0
		001ffcb0: CONDITIONAL_JUMP
		001ffc68: FALL_THROUGH

	[001ffc68]
		001ffc60: FALL_THROUGH
 	001ffc68 mov ax,0x1
 	001ffc74 mov mar,0x100000
 	001ffc80 memwrite4 ax
 	001ffc88 mov ax,0x8
 	001ffc94 mov mar,0x1000ac
 	001ffca0 memwrite4 ax
 	001ffca8 jmp 0x00202380
		00202380: UNCONDITIONAL_JUMP

	[001ffcb0]
		001ffc60: CONDITIONAL_JUMP
 	001ffcb0 sourceline 0x2d41
 	001ffcb8 mov mar,0x100000
 	001ffcc4 memread4 ax
 	001ffccc jz 0x001ffd18
		001ffd18: CONDITIONAL_JUMP
		001ffcd4: FALL_THROUGH

	[001ffcd4]
		001ffcb0: FALL_THROUGH
 	001ffcd4 push ax
 	001ffcdc mov mar,0x100004
 	001ffce8 memread4 ax
 	001ffcf0 lnot ax
 	001ffcf8 pop bx
 	001ffd00 land bx,ax
 	001ffd0c mov ax,bx
		001ffd18: FALL_THROUGH

	[001ffd18]
		001ffcb0: CONDITIONAL_JUMP
		001ffcd4: FALL_THROUGH
 	001ffd18 jz 0x001ffd64
		001ffd64: CONDITIONAL_JUMP
		001ffd20: FALL_THROUGH

	[001ffd20]
		001ffd18: FALL_THROUGH
 	001ffd20 push ax
 	001ffd28 mov mar,0x100008
 	001ffd34 memread4 ax
 	001ffd3c lnot ax
 	001ffd44 pop bx
 	001ffd4c land bx,ax
 	001ffd58 mov ax,bx
		001ffd64: FALL_THROUGH

	[001ffd64]
		001ffd18: CONDITIONAL_JUMP
		001ffd20: FALL_THROUGH
 	001ffd64 jz 0x001ffdb0
		001ffdb0: CONDITIONAL_JUMP
		001ffd6c: FALL_THROUGH

	[001ffd6c]
		001ffd64: FALL_THROUGH
 	001ffd6c push ax
 	001ffd74 mov mar,0x10000c
 	001ffd80 memread4 ax
 	001ffd88 lnot ax
 	001ffd90 pop bx
 	001ffd98 land bx,ax
 	001ffda4 mov ax,bx
		001ffdb0: FALL_THROUGH

	[001ffdb0]
		001ffd64: CONDITIONAL_JUMP
		001ffd6c: FALL_THROUGH
 	001ffdb0 jz 0x001ffdfc
		001ffdfc: CONDITIONAL_JUMP
		001ffdb8: FALL_THROUGH

	[001ffdb8]
		001ffdb0: FALL_THROUGH
 	001ffdb8 push ax
 	001ffdc0 mov mar,0x100010
 	001ffdcc memread4 ax
 	001ffdd4 lnot ax
 	001ffddc pop bx
 	001ffde4 land bx,ax
 	001ffdf0 mov ax,bx
		001ffdfc: FALL_THROUGH

	[001ffdfc]
		001ffdb0: CONDITIONAL_JUMP
		001ffdb8: FALL_THROUGH
 	001ffdfc jz 0x001ffe48
		001ffe48: CONDITIONAL_JUMP
		001ffe04: FALL_THROUGH

	[001ffe04]
		001ffdfc: FALL_THROUGH
 	001ffe04 push ax
 	001ffe0c mov mar,0x100014
 	001ffe18 memread4 ax
 	001ffe20 lnot ax
 	001ffe28 pop bx
 	001ffe30 land bx,ax
 	001ffe3c mov ax,bx
		001ffe48: FALL_THROUGH

	[001ffe48]
		001ffdfc: CONDITIONAL_JUMP
		001ffe04: FALL_THROUGH
 	001ffe48 jz 0x001ffe94
		001ffe94: CONDITIONAL_JUMP
		001ffe50: FALL_THROUGH

	[001ffe50]
		001ffe48: FALL_THROUGH
 	001ffe50 push ax
 	001ffe58 mov mar,0x100018
 	001ffe64 memread4 ax
 	001ffe6c lnot ax
 	001ffe74 pop bx
 	001ffe7c land bx,ax
 	001ffe88 mov ax,bx
		001ffe94: FALL_THROUGH

	[001ffe94]
		001ffe48: CONDITIONAL_JUMP
		001ffe50: FALL_THROUGH
 	001ffe94 jz 0x001ffee0
		001ffee0: CONDITIONAL_JUMP
		001ffe9c: FALL_THROUGH

	[001ffe9c]
		001ffe94: FALL_THROUGH
 	001ffe9c push ax
 	001ffea4 mov mar,0x10001c
 	001ffeb0 memread4 ax
 	001ffeb8 lnot ax
 	001ffec0 pop bx
 	001ffec8 land bx,ax
 	001ffed4 mov ax,bx
		001ffee0: FALL_THROUGH

	[001ffee0]
		001ffe94: CONDITIONAL_JUMP
		001ffe9c: FALL_THROUGH
 	001ffee0 jz 0x001fff2c
		001fff2c: CONDITIONAL_JUMP
		001ffee8: FALL_THROUGH

	[001ffee8]
		001ffee0: FALL_THROUGH
 	001ffee8 push ax
 	001ffef0 mov mar,0x100020
 	001ffefc memread4 ax
 	001fff04 lnot ax
 	001fff0c pop bx
 	001fff14 land bx,ax
 	001fff20 mov ax,bx
		001fff2c: FALL_THROUGH

	[001fff2c]
		001ffee0: CONDITIONAL_JUMP
		001ffee8: FALL_THROUGH
 	001fff2c jz 0x001fff78
		001fff78: CONDITIONAL_JUMP
		001fff34: FALL_THROUGH

	[001fff34]
		001fff2c: FALL_THROUGH
 	001fff34 push ax
 	001fff3c mov mar,0x100024
 	001fff48 memread4 ax
 	001fff50 lnot ax
 	001fff58 pop bx
 	001fff60 land bx,ax
 	001fff6c mov ax,bx
		001fff78: FALL_THROUGH

	[001fff78]
		001fff2c: CONDITIONAL_JUMP
		001fff34: FALL_THROUGH
 	001fff78 jz 0x001fffc4
		001fffc4: CONDITIONAL_JUMP
		001fff80: FALL_THROUGH

	[001fff80]
		001fff78: FALL_THROUGH
 	001fff80 push ax
 	001fff88 mov mar,0x100028
 	001fff94 memread4 ax
 	001fff9c lnot ax
 	001fffa4 pop bx
 	001fffac land bx,ax
 	001fffb8 mov ax,bx
		001fffc4: FALL_THROUGH

	[001fffc4]
		001fff78: CONDITIONAL_JUMP
		001fff80: FALL_THROUGH
 	001fffc4 jz 0x00200010
		00200010: CONDITIONAL_JUMP
		001fffcc: FALL_THROUGH

	[001fffcc]
		001fffc4: FALL_THROUGH
 	001fffcc push ax
 	001fffd4 mov mar,0x10002c
 	001fffe0 memread4 ax
 	001fffe8 lnot ax
 	001ffff0 pop bx
 	001ffff8 land bx,ax
 	00200004 mov ax,bx
		00200010: FALL_THROUGH

	[00200010]
		001fffc4: CONDITIONAL_JUMP
		001fffcc: FALL_THROUGH
 	00200010 jz 0x00200060
		00200060: CONDITIONAL_JUMP
		00200018: FALL_THROUGH

	[00200018]
		00200010: FALL_THROUGH
 	00200018 mov ax,0x1
 	00200024 mov mar,0x100004
 	00200030 memwrite4 ax
 	00200038 mov ax,0x8
 	00200044 mov mar,0x1000b0
 	00200050 memwrite4 ax
 	00200058 jmp 0x00202380
		00202380: UNCONDITIONAL_JUMP

	[00200060]
		00200010: CONDITIONAL_JUMP
 	00200060 sourceline 0x2d46
 	00200068 mov mar,0x100000
 	00200074 memread4 ax
 	0020007c jz 0x002000c0
		002000c0: CONDITIONAL_JUMP
		00200084: FALL_THROUGH

	[00200084]
		00200060: FALL_THROUGH
 	00200084 push ax
 	0020008c mov mar,0x100004
 	00200098 memread4 ax
 	002000a0 pop bx
 	002000a8 land bx,ax
 	002000b4 mov ax,bx
		002000c0: FALL_THROUGH

	[002000c0]
		00200060: CONDITIONAL_JUMP
		00200084: FALL_THROUGH
 	002000c0 jz 0x0020010c
		0020010c: CONDITIONAL_JUMP
		002000c8: FALL_THROUGH

	[002000c8]
		002000c0: FALL_THROUGH
 	002000c8 push ax
 	002000d0 mov mar,0x100008
 	002000dc memread4 ax
 	002000e4 lnot ax
 	002000ec pop bx
 	002000f4 land bx,ax
 	00200100 mov ax,bx
		0020010c: FALL_THROUGH

	[0020010c]
		002000c0: CONDITIONAL_JUMP
		002000c8: FALL_THROUGH
 	0020010c jz 0x00200158
		00200158: CONDITIONAL_JUMP
		00200114: FALL_THROUGH

	[00200114]
		0020010c: FALL_THROUGH
 	00200114 push ax
 	0020011c mov mar,0x10000c
 	00200128 memread4 ax
 	00200130 lnot ax
 	00200138 pop bx
 	00200140 land bx,ax
 	0020014c mov ax,bx
		00200158: FALL_THROUGH

	[00200158]
		0020010c: CONDITIONAL_JUMP
		00200114: FALL_THROUGH
 	00200158 jz 0x002001a4
		002001a4: CONDITIONAL_JUMP
		00200160: FALL_THROUGH

	[00200160]
		00200158: FALL_THROUGH
 	00200160 push ax
 	00200168 mov mar,0x100010
 	00200174 memread4 ax
 	0020017c lnot ax
 	00200184 pop bx
 	0020018c land bx,ax
 	00200198 mov ax,bx
		002001a4: FALL_THROUGH

	[002001a4]
		00200158: CONDITIONAL_JUMP
		00200160: FALL_THROUGH
 	002001a4 jz 0x002001f0
		002001f0: CONDITIONAL_JUMP
		002001ac: FALL_THROUGH

	[002001ac]
		002001a4: FALL_THROUGH
 	002001ac push ax
 	002001b4 mov mar,0x100014
 	002001c0 memread4 ax
 	002001c8 lnot ax
 	002001d0 pop bx
 	002001d8 land bx,ax
 	002001e4 mov ax,bx
		002001f0: FALL_THROUGH

	[002001f0]
		002001a4: CONDITIONAL_JUMP
		002001ac: FALL_THROUGH
 	002001f0 jz 0x0020023c
		0020023c: CONDITIONAL_JUMP
		002001f8: FALL_THROUGH

	[002001f8]
		002001f0: FALL_THROUGH
 	002001f8 push ax
 	00200200 mov mar,0x100018
 	0020020c memread4 ax
 	00200214 lnot ax
 	0020021c pop bx
 	00200224 land bx,ax
 	00200230 mov ax,bx
		0020023c: FALL_THROUGH

	[0020023c]
		002001f0: CONDITIONAL_JUMP
		002001f8: FALL_THROUGH
 	0020023c jz 0x00200288
		00200288: CONDITIONAL_JUMP
		00200244: FALL_THROUGH

	[00200244]
		0020023c: FALL_THROUGH
 	00200244 push ax
 	0020024c mov mar,0x10001c
 	00200258 memread4 ax
 	00200260 lnot ax
 	00200268 pop bx
 	00200270 land bx,ax
 	0020027c mov ax,bx
		00200288: FALL_THROUGH

	[00200288]
		0020023c: CONDITIONAL_JUMP
		00200244: FALL_THROUGH
 	00200288 jz 0x002002d4
		002002d4: CONDITIONAL_JUMP
		00200290: FALL_THROUGH

	[00200290]
		00200288: FALL_THROUGH
 	00200290 push ax
 	00200298 mov mar,0x100020
 	002002a4 memread4 ax
 	002002ac lnot ax
 	002002b4 pop bx
 	002002bc land bx,ax
 	002002c8 mov ax,bx
		002002d4: FALL_THROUGH

	[002002d4]
		00200288: CONDITIONAL_JUMP
		00200290: FALL_THROUGH
 	002002d4 jz 0x00200320
		00200320: CONDITIONAL_JUMP
		002002dc: FALL_THROUGH

	[002002dc]
		002002d4: FALL_THROUGH
 	002002dc push ax
 	002002e4 mov mar,0x100024
 	002002f0 memread4 ax
 	002002f8 lnot ax
 	00200300 pop bx
 	00200308 land bx,ax
 	00200314 mov ax,bx
		00200320: FALL_THROUGH

	[00200320]
		002002d4: CONDITIONAL_JUMP
		002002dc: FALL_THROUGH
 	00200320 jz 0x0020036c
		0020036c: CONDITIONAL_JUMP
		00200328: FALL_THROUGH

	[00200328]
		00200320: FALL_THROUGH
 	00200328 push ax
 	00200330 mov mar,0x100028
 	0020033c memread4 ax
 	00200344 lnot ax
 	0020034c pop bx
 	00200354 land bx,ax
 	00200360 mov ax,bx
		0020036c: FALL_THROUGH

	[0020036c]
		00200320: CONDITIONAL_JUMP
		00200328: FALL_THROUGH
 	0020036c jz 0x002003b8
		002003b8: CONDITIONAL_JUMP
		00200374: FALL_THROUGH

	[00200374]
		0020036c: FALL_THROUGH
 	00200374 push ax
 	0020037c mov mar,0x10002c
 	00200388 memread4 ax
 	00200390 lnot ax
 	00200398 pop bx
 	002003a0 land bx,ax
 	002003ac mov ax,bx
		002003b8: FALL_THROUGH

	[002003b8]
		0020036c: CONDITIONAL_JUMP
		00200374: FALL_THROUGH
 	002003b8 jz 0x00200408
		00200408: CONDITIONAL_JUMP
		002003c0: FALL_THROUGH

	[002003c0]
		002003b8: FALL_THROUGH
 	002003c0 mov ax,0x1
 	002003cc mov mar,0x100008
 	002003d8 memwrite4 ax
 	002003e0 mov ax,0x8
 	002003ec mov mar,0x1000b4
 	002003f8 memwrite4 ax
 	00200400 jmp 0x00202380
		00202380: UNCONDITIONAL_JUMP

	[00200408]
		002003b8: CONDITIONAL_JUMP
 	00200408 sourceline 0x2d4b
 	00200410 mov mar,0x100000
 	0020041c memread4 ax
 	00200424 jz 0x00200468
		00200468: CONDITIONAL_JUMP
		0020042c: FALL_THROUGH

	[0020042c]
		00200408: FALL_THROUGH
 	0020042c push ax
 	00200434 mov mar,0x100004
 	00200440 memread4 ax
 	00200448 pop bx
 	00200450 land bx,ax
 	0020045c mov ax,bx
		00200468: FALL_THROUGH

	[00200468]
		00200408: CONDITIONAL_JUMP
		0020042c: FALL_THROUGH
 	00200468 jz 0x002004ac
		002004ac: CONDITIONAL_JUMP
		00200470: FALL_THROUGH

	[00200470]
		00200468: FALL_THROUGH
 	00200470 push ax
 	00200478 mov mar,0x100008
 	00200484 memread4 ax
 	0020048c pop bx
 	00200494 land bx,ax
 	002004a0 mov ax,bx
		002004ac: FALL_THROUGH

	[002004ac]
		00200468: CONDITIONAL_JUMP
		00200470: FALL_THROUGH
 	002004ac jz 0x002004f8
		002004f8: CONDITIONAL_JUMP
		002004b4: FALL_THROUGH

	[002004b4]
		002004ac: FALL_THROUGH
 	002004b4 push ax
 	002004bc mov mar,0x10000c
 	002004c8 memread4 ax
 	002004d0 lnot ax
 	002004d8 pop bx
 	002004e0 land bx,ax
 	002004ec mov ax,bx
		002004f8: FALL_THROUGH

	[002004f8]
		002004ac: CONDITIONAL_JUMP
		002004b4: FALL_THROUGH
 	002004f8 jz 0x00200544
		00200544: CONDITIONAL_JUMP
		00200500: FALL_THROUGH

	[00200500]
		002004f8: FALL_THROUGH
 	00200500 push ax
 	00200508 mov mar,0x100010
 	00200514 memread4 ax
 	0020051c lnot ax
 	00200524 pop bx
 	0020052c land bx,ax
 	00200538 mov ax,bx
		00200544: FALL_THROUGH

	[00200544]
		002004f8: CONDITIONAL_JUMP
		00200500: FALL_THROUGH
 	00200544 jz 0x00200590
		00200590: CONDITIONAL_JUMP
		0020054c: FALL_THROUGH

	[0020054c]
		00200544: FALL_THROUGH
 	0020054c push ax
 	00200554 mov mar,0x100014
 	00200560 memread4 ax
 	00200568 lnot ax
 	00200570 pop bx
 	00200578 land bx,ax
 	00200584 mov ax,bx
		00200590: FALL_THROUGH

	[00200590]
		00200544: CONDITIONAL_JUMP
		0020054c: FALL_THROUGH
 	00200590 jz 0x002005dc
		002005dc: CONDITIONAL_JUMP
		00200598: FALL_THROUGH

	[00200598]
		00200590: FALL_THROUGH
 	00200598 push ax
 	002005a0 mov mar,0x100018
 	002005ac memread4 ax
 	002005b4 lnot ax
 	002005bc pop bx
 	002005c4 land bx,ax
 	002005d0 mov ax,bx
		002005dc: FALL_THROUGH

	[002005dc]
		00200590: CONDITIONAL_JUMP
		00200598: FALL_THROUGH
 	002005dc jz 0x00200628
		00200628: CONDITIONAL_JUMP
		002005e4: FALL_THROUGH

	[002005e4]
		002005dc: FALL_THROUGH
 	002005e4 push ax
 	002005ec mov mar,0x10001c
 	002005f8 memread4 ax
 	00200600 lnot ax
 	00200608 pop bx
 	00200610 land bx,ax
 	0020061c mov ax,bx
		00200628: FALL_THROUGH

	[00200628]
		002005dc: CONDITIONAL_JUMP
		002005e4: FALL_THROUGH
 	00200628 jz 0x00200674
		00200674: CONDITIONAL_JUMP
		00200630: FALL_THROUGH

	[00200630]
		00200628: FALL_THROUGH
 	00200630 push ax
 	00200638 mov mar,0x100020
 	00200644 memread4 ax
 	0020064c lnot ax
 	00200654 pop bx
 	0020065c land bx,ax
 	00200668 mov ax,bx
		00200674: FALL_THROUGH

	[00200674]
		00200628: CONDITIONAL_JUMP
		00200630: FALL_THROUGH
 	00200674 jz 0x002006c0
		002006c0: CONDITIONAL_JUMP
		0020067c: FALL_THROUGH

	[0020067c]
		00200674: FALL_THROUGH
 	0020067c push ax
 	00200684 mov mar,0x100024
 	00200690 memread4 ax
 	00200698 lnot ax
 	002006a0 pop bx
 	002006a8 land bx,ax
 	002006b4 mov ax,bx
		002006c0: FALL_THROUGH

	[002006c0]
		00200674: CONDITIONAL_JUMP
		0020067c: FALL_THROUGH
 	002006c0 jz 0x0020070c
		0020070c: CONDITIONAL_JUMP
		002006c8: FALL_THROUGH

	[002006c8]
		002006c0: FALL_THROUGH
 	002006c8 push ax
 	002006d0 mov mar,0x100028
 	002006dc memread4 ax
 	002006e4 lnot ax
 	002006ec pop bx
 	002006f4 land bx,ax
 	00200700 mov ax,bx
		0020070c: FALL_THROUGH

	[0020070c]
		002006c0: CONDITIONAL_JUMP
		002006c8: FALL_THROUGH
 	0020070c jz 0x00200758
		00200758: CONDITIONAL_JUMP
		00200714: FALL_THROUGH

	[00200714]
		0020070c: FALL_THROUGH
 	00200714 push ax
 	0020071c mov mar,0x10002c
 	00200728 memread4 ax
 	00200730 lnot ax
 	00200738 pop bx
 	00200740 land bx,ax
 	0020074c mov ax,bx
		00200758: FALL_THROUGH

	[00200758]
		0020070c: CONDITIONAL_JUMP
		00200714: FALL_THROUGH
 	00200758 jz 0x002007a8
		002007a8: CONDITIONAL_JUMP
		00200760: FALL_THROUGH

	[00200760]
		00200758: FALL_THROUGH
 	00200760 mov ax,0x1
 	0020076c mov mar,0x10000c
 	00200778 memwrite4 ax
 	00200780 mov ax,0x8
 	0020078c mov mar,0x1000b8
 	00200798 memwrite4 ax
 	002007a0 jmp 0x00202380
		00202380: UNCONDITIONAL_JUMP

	[002007a8]
		00200758: CONDITIONAL_JUMP
 	002007a8 sourceline 0x2d50
 	002007b0 mov mar,0x100000
 	002007bc memread4 ax
 	002007c4 jz 0x00200808
		00200808: CONDITIONAL_JUMP
		002007cc: FALL_THROUGH

	[002007cc]
		002007a8: FALL_THROUGH
 	002007cc push ax
 	002007d4 mov mar,0x100004
 	002007e0 memread4 ax
 	002007e8 pop bx
 	002007f0 land bx,ax
 	002007fc mov ax,bx
		00200808: FALL_THROUGH

	[00200808]
		002007a8: CONDITIONAL_JUMP
		002007cc: FALL_THROUGH
 	00200808 jz 0x0020084c
		0020084c: CONDITIONAL_JUMP
		00200810: FALL_THROUGH

	[00200810]
		00200808: FALL_THROUGH
 	00200810 push ax
 	00200818 mov mar,0x100008
 	00200824 memread4 ax
 	0020082c pop bx
 	00200834 land bx,ax
 	00200840 mov ax,bx
		0020084c: FALL_THROUGH

	[0020084c]
		00200808: CONDITIONAL_JUMP
		00200810: FALL_THROUGH
 	0020084c jz 0x00200890
		00200890: CONDITIONAL_JUMP
		00200854: FALL_THROUGH

	[00200854]
		0020084c: FALL_THROUGH
 	00200854 push ax
 	0020085c mov mar,0x10000c
 	00200868 memread4 ax
 	00200870 pop bx
 	00200878 land bx,ax
 	00200884 mov ax,bx
		00200890: FALL_THROUGH

	[00200890]
		0020084c: CONDITIONAL_JUMP
		00200854: FALL_THROUGH
 	00200890 jz 0x002008dc
		002008dc: CONDITIONAL_JUMP
		00200898: FALL_THROUGH

	[00200898]
		00200890: FALL_THROUGH
 	00200898 push ax
 	002008a0 mov mar,0x100010
 	002008ac memread4 ax
 	002008b4 lnot ax
 	002008bc pop bx
 	002008c4 land bx,ax
 	002008d0 mov ax,bx
		002008dc: FALL_THROUGH

	[002008dc]
		00200890: CONDITIONAL_JUMP
		00200898: FALL_THROUGH
 	002008dc jz 0x00200928
		00200928: CONDITIONAL_JUMP
		002008e4: FALL_THROUGH

	[002008e4]
		002008dc: FALL_THROUGH
 	002008e4 push ax
 	002008ec mov mar,0x100014
 	002008f8 memread4 ax
 	00200900 lnot ax
 	00200908 pop bx
 	00200910 land bx,ax
 	0020091c mov ax,bx
		00200928: FALL_THROUGH

	[00200928]
		002008dc: CONDITIONAL_JUMP
		002008e4: FALL_THROUGH
 	00200928 jz 0x00200974
		00200974: CONDITIONAL_JUMP
		00200930: FALL_THROUGH

	[00200930]
		00200928: FALL_THROUGH
 	00200930 push ax
 	00200938 mov mar,0x100018
 	00200944 memread4 ax
 	0020094c lnot ax
 	00200954 pop bx
 	0020095c land bx,ax
 	00200968 mov ax,bx
		00200974: FALL_THROUGH

	[00200974]
		00200928: CONDITIONAL_JUMP
		00200930: FALL_THROUGH
 	00200974 jz 0x002009c0
		002009c0: CONDITIONAL_JUMP
		0020097c: FALL_THROUGH

	[0020097c]
		00200974: FALL_THROUGH
 	0020097c push ax
 	00200984 mov mar,0x10001c
 	00200990 memread4 ax
 	00200998 lnot ax
 	002009a0 pop bx
 	002009a8 land bx,ax
 	002009b4 mov ax,bx
		002009c0: FALL_THROUGH

	[002009c0]
		00200974: CONDITIONAL_JUMP
		0020097c: FALL_THROUGH
 	002009c0 jz 0x00200a0c
		00200a0c: CONDITIONAL_JUMP
		002009c8: FALL_THROUGH

	[002009c8]
		002009c0: FALL_THROUGH
 	002009c8 push ax
 	002009d0 mov mar,0x100020
 	002009dc memread4 ax
 	002009e4 lnot ax
 	002009ec pop bx
 	002009f4 land bx,ax
 	00200a00 mov ax,bx
		00200a0c: FALL_THROUGH

	[00200a0c]
		002009c0: CONDITIONAL_JUMP
		002009c8: FALL_THROUGH
 	00200a0c jz 0x00200a58
		00200a58: CONDITIONAL_JUMP
		00200a14: FALL_THROUGH

	[00200a14]
		00200a0c: FALL_THROUGH
 	00200a14 push ax
 	00200a1c mov mar,0x100024
 	00200a28 memread4 ax
 	00200a30 lnot ax
 	00200a38 pop bx
 	00200a40 land bx,ax
 	00200a4c mov ax,bx
		00200a58: FALL_THROUGH

	[00200a58]
		00200a0c: CONDITIONAL_JUMP
		00200a14: FALL_THROUGH
 	00200a58 jz 0x00200aa4
		00200aa4: CONDITIONAL_JUMP
		00200a60: FALL_THROUGH

	[00200a60]
		00200a58: FALL_THROUGH
 	00200a60 push ax
 	00200a68 mov mar,0x100028
 	00200a74 memread4 ax
 	00200a7c lnot ax
 	00200a84 pop bx
 	00200a8c land bx,ax
 	00200a98 mov ax,bx
		00200aa4: FALL_THROUGH

	[00200aa4]
		00200a58: CONDITIONAL_JUMP
		00200a60: FALL_THROUGH
 	00200aa4 jz 0x00200af0
		00200af0: CONDITIONAL_JUMP
		00200aac: FALL_THROUGH

	[00200aac]
		00200aa4: FALL_THROUGH
 	00200aac push ax
 	00200ab4 mov mar,0x10002c
 	00200ac0 memread4 ax
 	00200ac8 lnot ax
 	00200ad0 pop bx
 	00200ad8 land bx,ax
 	00200ae4 mov ax,bx
		00200af0: FALL_THROUGH

	[00200af0]
		00200aa4: CONDITIONAL_JUMP
		00200aac: FALL_THROUGH
 	00200af0 jz 0x00200b40
		00200b40: CONDITIONAL_JUMP
		00200af8: FALL_THROUGH

	[00200af8]
		00200af0: FALL_THROUGH
 	00200af8 mov ax,0x1
 	00200b04 mov mar,0x100010
 	00200b10 memwrite4 ax
 	00200b18 mov ax,0x8
 	00200b24 mov mar,0x1000bc
 	00200b30 memwrite4 ax
 	00200b38 jmp 0x00202380
		00202380: UNCONDITIONAL_JUMP

	[00200b40]
		00200af0: CONDITIONAL_JUMP
 	00200b40 sourceline 0x2d55
 	00200b48 mov mar,0x100000
 	00200b54 memread4 ax
 	00200b5c jz 0x00200ba0
		00200ba0: CONDITIONAL_JUMP
		00200b64: FALL_THROUGH

	[00200b64]
		00200b40: FALL_THROUGH
 	00200b64 push ax
 	00200b6c mov mar,0x100004
 	00200b78 memread4 ax
 	00200b80 pop bx
 	00200b88 land bx,ax
 	00200b94 mov ax,bx
		00200ba0: FALL_THROUGH

	[00200ba0]
		00200b40: CONDITIONAL_JUMP
		00200b64: FALL_THROUGH
 	00200ba0 jz 0x00200be4
		00200be4: CONDITIONAL_JUMP
		00200ba8: FALL_THROUGH

	[00200ba8]
		00200ba0: FALL_THROUGH
 	00200ba8 push ax
 	00200bb0 mov mar,0x100008
 	00200bbc memread4 ax
 	00200bc4 pop bx
 	00200bcc land bx,ax
 	00200bd8 mov ax,bx
		00200be4: FALL_THROUGH

	[00200be4]
		00200ba0: CONDITIONAL_JUMP
		00200ba8: FALL_THROUGH
 	00200be4 jz 0x00200c28
		00200c28: CONDITIONAL_JUMP
		00200bec: FALL_THROUGH

	[00200bec]
		00200be4: FALL_THROUGH
 	00200bec push ax
 	00200bf4 mov mar,0x10000c
 	00200c00 memread4 ax
 	00200c08 pop bx
 	00200c10 land bx,ax
 	00200c1c mov ax,bx
		00200c28: FALL_THROUGH

	[00200c28]
		00200be4: CONDITIONAL_JUMP
		00200bec: FALL_THROUGH
 	00200c28 jz 0x00200c6c
		00200c6c: CONDITIONAL_JUMP
		00200c30: FALL_THROUGH

	[00200c30]
		00200c28: FALL_THROUGH
 	00200c30 push ax
 	00200c38 mov mar,0x100010
 	00200c44 memread4 ax
 	00200c4c pop bx
 	00200c54 land bx,ax
 	00200c60 mov ax,bx
		00200c6c: FALL_THROUGH

	[00200c6c]
		00200c28: CONDITIONAL_JUMP
		00200c30: FALL_THROUGH
 	00200c6c jz 0x00200cb8
		00200cb8: CONDITIONAL_JUMP
		00200c74: FALL_THROUGH

	[00200c74]
		00200c6c: FALL_THROUGH
 	00200c74 push ax
 	00200c7c mov mar,0x100014
 	00200c88 memread4 ax
 	00200c90 lnot ax
 	00200c98 pop bx
 	00200ca0 land bx,ax
 	00200cac mov ax,bx
		00200cb8: FALL_THROUGH

	[00200cb8]
		00200c6c: CONDITIONAL_JUMP
		00200c74: FALL_THROUGH
 	00200cb8 jz 0x00200d04
		00200d04: CONDITIONAL_JUMP
		00200cc0: FALL_THROUGH

	[00200cc0]
		00200cb8: FALL_THROUGH
 	00200cc0 push ax
 	00200cc8 mov mar,0x100018
 	00200cd4 memread4 ax
 	00200cdc lnot ax
 	00200ce4 pop bx
 	00200cec land bx,ax
 	00200cf8 mov ax,bx
		00200d04: FALL_THROUGH

	[00200d04]
		00200cb8: CONDITIONAL_JUMP
		00200cc0: FALL_THROUGH
 	00200d04 jz 0x00200d50
		00200d50: CONDITIONAL_JUMP
		00200d0c: FALL_THROUGH

	[00200d0c]
		00200d04: FALL_THROUGH
 	00200d0c push ax
 	00200d14 mov mar,0x10001c
 	00200d20 memread4 ax
 	00200d28 lnot ax
 	00200d30 pop bx
 	00200d38 land bx,ax
 	00200d44 mov ax,bx
		00200d50: FALL_THROUGH

	[00200d50]
		00200d04: CONDITIONAL_JUMP
		00200d0c: FALL_THROUGH
 	00200d50 jz 0x00200d9c
		00200d9c: CONDITIONAL_JUMP
		00200d58: FALL_THROUGH

	[00200d58]
		00200d50: FALL_THROUGH
 	00200d58 push ax
 	00200d60 mov mar,0x100020
 	00200d6c memread4 ax
 	00200d74 lnot ax
 	00200d7c pop bx
 	00200d84 land bx,ax
 	00200d90 mov ax,bx
		00200d9c: FALL_THROUGH

	[00200d9c]
		00200d50: CONDITIONAL_JUMP
		00200d58: FALL_THROUGH
 	00200d9c jz 0x00200de8
		00200de8: CONDITIONAL_JUMP
		00200da4: FALL_THROUGH

	[00200da4]
		00200d9c: FALL_THROUGH
 	00200da4 push ax
 	00200dac mov mar,0x100024
 	00200db8 memread4 ax
 	00200dc0 lnot ax
 	00200dc8 pop bx
 	00200dd0 land bx,ax
 	00200ddc mov ax,bx
		00200de8: FALL_THROUGH

	[00200de8]
		00200d9c: CONDITIONAL_JUMP
		00200da4: FALL_THROUGH
 	00200de8 jz 0x00200e34
		00200e34: CONDITIONAL_JUMP
		00200df0: FALL_THROUGH

	[00200df0]
		00200de8: FALL_THROUGH
 	00200df0 push ax
 	00200df8 mov mar,0x100028
 	00200e04 memread4 ax
 	00200e0c lnot ax
 	00200e14 pop bx
 	00200e1c land bx,ax
 	00200e28 mov ax,bx
		00200e34: FALL_THROUGH

	[00200e34]
		00200de8: CONDITIONAL_JUMP
		00200df0: FALL_THROUGH
 	00200e34 jz 0x00200e80
		00200e80: CONDITIONAL_JUMP
		00200e3c: FALL_THROUGH

	[00200e3c]
		00200e34: FALL_THROUGH
 	00200e3c push ax
 	00200e44 mov mar,0x10002c
 	00200e50 memread4 ax
 	00200e58 lnot ax
 	00200e60 pop bx
 	00200e68 land bx,ax
 	00200e74 mov ax,bx
		00200e80: FALL_THROUGH

	[00200e80]
		00200e34: CONDITIONAL_JUMP
		00200e3c: FALL_THROUGH
 	00200e80 jz 0x00200ed0
		00200ed0: CONDITIONAL_JUMP
		00200e88: FALL_THROUGH

	[00200e88]
		00200e80: FALL_THROUGH
 	00200e88 mov ax,0x1
 	00200e94 mov mar,0x100014
 	00200ea0 memwrite4 ax
 	00200ea8 mov ax,0x8
 	00200eb4 mov mar,0x1000c0
 	00200ec0 memwrite4 ax
 	00200ec8 jmp 0x00202380
		00202380: UNCONDITIONAL_JUMP

	[00200ed0]
		00200e80: CONDITIONAL_JUMP
 	00200ed0 sourceline 0x2d5a
 	00200ed8 mov mar,0x100000
 	00200ee4 memread4 ax
 	00200eec jz 0x00200f30
		00200f30: CONDITIONAL_JUMP
		00200ef4: FALL_THROUGH

	[00200ef4]
		00200ed0: FALL_THROUGH
 	00200ef4 push ax
 	00200efc mov mar,0x100004
 	00200f08 memread4 ax
 	00200f10 pop bx
 	00200f18 land bx,ax
 	00200f24 mov ax,bx
		00200f30: FALL_THROUGH

	[00200f30]
		00200ed0: CONDITIONAL_JUMP
		00200ef4: FALL_THROUGH
 	00200f30 jz 0x00200f74
		00200f74: CONDITIONAL_JUMP
		00200f38: FALL_THROUGH

	[00200f38]
		00200f30: FALL_THROUGH
 	00200f38 push ax
 	00200f40 mov mar,0x100008
 	00200f4c memread4 ax
 	00200f54 pop bx
 	00200f5c land bx,ax
 	00200f68 mov ax,bx
		00200f74: FALL_THROUGH

	[00200f74]
		00200f30: CONDITIONAL_JUMP
		00200f38: FALL_THROUGH
 	00200f74 jz 0x00200fb8
		00200fb8: CONDITIONAL_JUMP
		00200f7c: FALL_THROUGH

	[00200f7c]
		00200f74: FALL_THROUGH
 	00200f7c push ax
 	00200f84 mov mar,0x10000c
 	00200f90 memread4 ax
 	00200f98 pop bx
 	00200fa0 land bx,ax
 	00200fac mov ax,bx
		00200fb8: FALL_THROUGH

	[00200fb8]
		00200f74: CONDITIONAL_JUMP
		00200f7c: FALL_THROUGH
 	00200fb8 jz 0x00200ffc
		00200ffc: CONDITIONAL_JUMP
		00200fc0: FALL_THROUGH

	[00200fc0]
		00200fb8: FALL_THROUGH
 	00200fc0 push ax
 	00200fc8 mov mar,0x100010
 	00200fd4 memread4 ax
 	00200fdc pop bx
 	00200fe4 land bx,ax
 	00200ff0 mov ax,bx
		00200ffc: FALL_THROUGH

	[00200ffc]
		00200fb8: CONDITIONAL_JUMP
		00200fc0: FALL_THROUGH
 	00200ffc jz 0x00201040
		00201040: CONDITIONAL_JUMP
		00201004: FALL_THROUGH

	[00201004]
		00200ffc: FALL_THROUGH
 	00201004 push ax
 	0020100c mov mar,0x100014
 	00201018 memread4 ax
 	00201020 pop bx
 	00201028 land bx,ax
 	00201034 mov ax,bx
		00201040: FALL_THROUGH

	[00201040]
		00200ffc: CONDITIONAL_JUMP
		00201004: FALL_THROUGH
 	00201040 jz 0x0020108c
		0020108c: CONDITIONAL_JUMP
		00201048: FALL_THROUGH

	[00201048]
		00201040: FALL_THROUGH
 	00201048 push ax
 	00201050 mov mar,0x100018
 	0020105c memread4 ax
 	00201064 lnot ax
 	0020106c pop bx
 	00201074 land bx,ax
 	00201080 mov ax,bx
		0020108c: FALL_THROUGH

	[0020108c]
		00201040: CONDITIONAL_JUMP
		00201048: FALL_THROUGH
 	0020108c jz 0x002010d8
		002010d8: CONDITIONAL_JUMP
		00201094: FALL_THROUGH

	[00201094]
		0020108c: FALL_THROUGH
 	00201094 push ax
 	0020109c mov mar,0x10001c
 	002010a8 memread4 ax
 	002010b0 lnot ax
 	002010b8 pop bx
 	002010c0 land bx,ax
 	002010cc mov ax,bx
		002010d8: FALL_THROUGH

	[002010d8]
		0020108c: CONDITIONAL_JUMP
		00201094: FALL_THROUGH
 	002010d8 jz 0x00201124
		00201124: CONDITIONAL_JUMP
		002010e0: FALL_THROUGH

	[002010e0]
		002010d8: FALL_THROUGH
 	002010e0 push ax
 	002010e8 mov mar,0x100020
 	002010f4 memread4 ax
 	002010fc lnot ax
 	00201104 pop bx
 	0020110c land bx,ax
 	00201118 mov ax,bx
		00201124: FALL_THROUGH

	[00201124]
		002010d8: CONDITIONAL_JUMP
		002010e0: FALL_THROUGH
 	00201124 jz 0x00201170
		00201170: CONDITIONAL_JUMP
		0020112c: FALL_THROUGH

	[0020112c]
		00201124: FALL_THROUGH
 	0020112c push ax
 	00201134 mov mar,0x100024
 	00201140 memread4 ax
 	00201148 lnot ax
 	00201150 pop bx
 	00201158 land bx,ax
 	00201164 mov ax,bx
		00201170: FALL_THROUGH

	[00201170]
		00201124: CONDITIONAL_JUMP
		0020112c: FALL_THROUGH
 	00201170 jz 0x002011bc
		002011bc: CONDITIONAL_JUMP
		00201178: FALL_THROUGH

	[00201178]
		00201170: FALL_THROUGH
 	00201178 push ax
 	00201180 mov mar,0x100028
 	0020118c memread4 ax
 	00201194 lnot ax
 	0020119c pop bx
 	002011a4 land bx,ax
 	002011b0 mov ax,bx
		002011bc: FALL_THROUGH

	[002011bc]
		00201170: CONDITIONAL_JUMP
		00201178: FALL_THROUGH
 	002011bc jz 0x00201208
		00201208: CONDITIONAL_JUMP
		002011c4: FALL_THROUGH

	[002011c4]
		002011bc: FALL_THROUGH
 	002011c4 push ax
 	002011cc mov mar,0x10002c
 	002011d8 memread4 ax
 	002011e0 lnot ax
 	002011e8 pop bx
 	002011f0 land bx,ax
 	002011fc mov ax,bx
		00201208: FALL_THROUGH

	[00201208]
		002011bc: CONDITIONAL_JUMP
		002011c4: FALL_THROUGH
 	00201208 jz 0x00201258
		00201258: CONDITIONAL_JUMP
		00201210: FALL_THROUGH

	[00201210]
		00201208: FALL_THROUGH
 	00201210 mov ax,0x1
 	0020121c mov mar,0x100018
 	00201228 memwrite4 ax
 	00201230 mov ax,0x8
 	0020123c mov mar,0x1000c4
 	00201248 memwrite4 ax
 	00201250 jmp 0x00202380
		00202380: UNCONDITIONAL_JUMP

	[00201258]
		00201208: CONDITIONAL_JUMP
 	00201258 sourceline 0x2d5f
 	00201260 mov mar,0x100000
 	0020126c memread4 ax
 	00201274 jz 0x002012b8
		002012b8: CONDITIONAL_JUMP
		0020127c: FALL_THROUGH

	[0020127c]
		00201258: FALL_THROUGH
 	0020127c push ax
 	00201284 mov mar,0x100004
 	00201290 memread4 ax
 	00201298 pop bx
 	002012a0 land bx,ax
 	002012ac mov ax,bx
		002012b8: FALL_THROUGH

	[002012b8]
		00201258: CONDITIONAL_JUMP
		0020127c: FALL_THROUGH
 	002012b8 jz 0x002012fc
		002012fc: CONDITIONAL_JUMP
		002012c0: FALL_THROUGH

	[002012c0]
		002012b8: FALL_THROUGH
 	002012c0 push ax
 	002012c8 mov mar,0x100008
 	002012d4 memread4 ax
 	002012dc pop bx
 	002012e4 land bx,ax
 	002012f0 mov ax,bx
		002012fc: FALL_THROUGH

	[002012fc]
		002012b8: CONDITIONAL_JUMP
		002012c0: FALL_THROUGH
 	002012fc jz 0x00201340
		00201340: CONDITIONAL_JUMP
		00201304: FALL_THROUGH

	[00201304]
		002012fc: FALL_THROUGH
 	00201304 push ax
 	0020130c mov mar,0x10000c
 	00201318 memread4 ax
 	00201320 pop bx
 	00201328 land bx,ax
 	00201334 mov ax,bx
		00201340: FALL_THROUGH

	[00201340]
		002012fc: CONDITIONAL_JUMP
		00201304: FALL_THROUGH
 	00201340 jz 0x00201384
		00201384: CONDITIONAL_JUMP
		00201348: FALL_THROUGH

	[00201348]
		00201340: FALL_THROUGH
 	00201348 push ax
 	00201350 mov mar,0x100010
 	0020135c memread4 ax
 	00201364 pop bx
 	0020136c land bx,ax
 	00201378 mov ax,bx
		00201384: FALL_THROUGH

	[00201384]
		00201340: CONDITIONAL_JUMP
		00201348: FALL_THROUGH
 	00201384 jz 0x002013c8
		002013c8: CONDITIONAL_JUMP
		0020138c: FALL_THROUGH

	[0020138c]
		00201384: FALL_THROUGH
 	0020138c push ax
 	00201394 mov mar,0x100014
 	002013a0 memread4 ax
 	002013a8 pop bx
 	002013b0 land bx,ax
 	002013bc mov ax,bx
		002013c8: FALL_THROUGH

	[002013c8]
		00201384: CONDITIONAL_JUMP
		0020138c: FALL_THROUGH
 	002013c8 jz 0x0020140c
		0020140c: CONDITIONAL_JUMP
		002013d0: FALL_THROUGH

	[002013d0]
		002013c8: FALL_THROUGH
 	002013d0 push ax
 	002013d8 mov mar,0x100018
 	002013e4 memread4 ax
 	002013ec pop bx
 	002013f4 land bx,ax
 	00201400 mov ax,bx
		0020140c: FALL_THROUGH

	[0020140c]
		002013c8: CONDITIONAL_JUMP
		002013d0: FALL_THROUGH
 	0020140c jz 0x00201458
		00201458: CONDITIONAL_JUMP
		00201414: FALL_THROUGH

	[00201414]
		0020140c: FALL_THROUGH
 	00201414 push ax
 	0020141c mov mar,0x10001c
 	00201428 memread4 ax
 	00201430 lnot ax
 	00201438 pop bx
 	00201440 land bx,ax
 	0020144c mov ax,bx
		00201458: FALL_THROUGH

	[00201458]
		0020140c: CONDITIONAL_JUMP
		00201414: FALL_THROUGH
 	00201458 jz 0x002014a4
		002014a4: CONDITIONAL_JUMP
		00201460: FALL_THROUGH

	[00201460]
		00201458: FALL_THROUGH
 	00201460 push ax
 	00201468 mov mar,0x100020
 	00201474 memread4 ax
 	0020147c lnot ax
 	00201484 pop bx
 	0020148c land bx,ax
 	00201498 mov ax,bx
		002014a4: FALL_THROUGH

	[002014a4]
		00201458: CONDITIONAL_JUMP
		00201460: FALL_THROUGH
 	002014a4 jz 0x002014f0
		002014f0: CONDITIONAL_JUMP
		002014ac: FALL_THROUGH

	[002014ac]
		002014a4: FALL_THROUGH
 	002014ac push ax
 	002014b4 mov mar,0x100024
 	002014c0 memread4 ax
 	002014c8 lnot ax
 	002014d0 pop bx
 	002014d8 land bx,ax
 	002014e4 mov ax,bx
		002014f0: FALL_THROUGH

	[002014f0]
		002014a4: CONDITIONAL_JUMP
		002014ac: FALL_THROUGH
 	002014f0 jz 0x0020153c
		0020153c: CONDITIONAL_JUMP
		002014f8: FALL_THROUGH

	[002014f8]
		002014f0: FALL_THROUGH
 	002014f8 push ax
 	00201500 mov mar,0x100028
 	0020150c memread4 ax
 	00201514 lnot ax
 	0020151c pop bx
 	00201524 land bx,ax
 	00201530 mov ax,bx
		0020153c: FALL_THROUGH

	[0020153c]
		002014f0: CONDITIONAL_JUMP
		002014f8: FALL_THROUGH
 	0020153c jz 0x00201588
		00201588: CONDITIONAL_JUMP
		00201544: FALL_THROUGH

	[00201544]
		0020153c: FALL_THROUGH
 	00201544 push ax
 	0020154c mov mar,0x10002c
 	00201558 memread4 ax
 	00201560 lnot ax
 	00201568 pop bx
 	00201570 land bx,ax
 	0020157c mov ax,bx
		00201588: FALL_THROUGH

	[00201588]
		0020153c: CONDITIONAL_JUMP
		00201544: FALL_THROUGH
 	00201588 jz 0x002015d8
		002015d8: CONDITIONAL_JUMP
		00201590: FALL_THROUGH

	[00201590]
		00201588: FALL_THROUGH
 	00201590 mov ax,0x1
 	0020159c mov mar,0x10001c
 	002015a8 memwrite4 ax
 	002015b0 mov ax,0x8
 	002015bc mov mar,0x1000c8
 	002015c8 memwrite4 ax
 	002015d0 jmp 0x00202380
		00202380: UNCONDITIONAL_JUMP

	[002015d8]
		00201588: CONDITIONAL_JUMP
 	002015d8 sourceline 0x2d64
 	002015e0 mov mar,0x100000
 	002015ec memread4 ax
 	002015f4 jz 0x00201638
		00201638: CONDITIONAL_JUMP
		002015fc: FALL_THROUGH

	[002015fc]
		002015d8: FALL_THROUGH
 	002015fc push ax
 	00201604 mov mar,0x100004
 	00201610 memread4 ax
 	00201618 pop bx
 	00201620 land bx,ax
 	0020162c mov ax,bx
		00201638: FALL_THROUGH

	[00201638]
		002015d8: CONDITIONAL_JUMP
		002015fc: FALL_THROUGH
 	00201638 jz 0x0020167c
		0020167c: CONDITIONAL_JUMP
		00201640: FALL_THROUGH

	[00201640]
		00201638: FALL_THROUGH
 	00201640 push ax
 	00201648 mov mar,0x100008
 	00201654 memread4 ax
 	0020165c pop bx
 	00201664 land bx,ax
 	00201670 mov ax,bx
		0020167c: FALL_THROUGH

	[0020167c]
		00201638: CONDITIONAL_JUMP
		00201640: FALL_THROUGH
 	0020167c jz 0x002016c0
		002016c0: CONDITIONAL_JUMP
		00201684: FALL_THROUGH

	[00201684]
		0020167c: FALL_THROUGH
 	00201684 push ax
 	0020168c mov mar,0x10000c
 	00201698 memread4 ax
 	002016a0 pop bx
 	002016a8 land bx,ax
 	002016b4 mov ax,bx
		002016c0: FALL_THROUGH

	[002016c0]
		0020167c: CONDITIONAL_JUMP
		00201684: FALL_THROUGH
 	002016c0 jz 0x00201704
		00201704: CONDITIONAL_JUMP
		002016c8: FALL_THROUGH

	[002016c8]
		002016c0: FALL_THROUGH
 	002016c8 push ax
 	002016d0 mov mar,0x100010
 	002016dc memread4 ax
 	002016e4 pop bx
 	002016ec land bx,ax
 	002016f8 mov ax,bx
		00201704: FALL_THROUGH

	[00201704]
		002016c0: CONDITIONAL_JUMP
		002016c8: FALL_THROUGH
 	00201704 jz 0x00201748
		00201748: CONDITIONAL_JUMP
		0020170c: FALL_THROUGH

	[0020170c]
		00201704: FALL_THROUGH
 	0020170c push ax
 	00201714 mov mar,0x100014
 	00201720 memread4 ax
 	00201728 pop bx
 	00201730 land bx,ax
 	0020173c mov ax,bx
		00201748: FALL_THROUGH

	[00201748]
		00201704: CONDITIONAL_JUMP
		0020170c: FALL_THROUGH
 	00201748 jz 0x0020178c
		0020178c: CONDITIONAL_JUMP
		00201750: FALL_THROUGH

	[00201750]
		00201748: FALL_THROUGH
 	00201750 push ax
 	00201758 mov mar,0x100018
 	00201764 memread4 ax
 	0020176c pop bx
 	00201774 land bx,ax
 	00201780 mov ax,bx
		0020178c: FALL_THROUGH

	[0020178c]
		00201748: CONDITIONAL_JUMP
		00201750: FALL_THROUGH
 	0020178c jz 0x002017d0
		002017d0: CONDITIONAL_JUMP
		00201794: FALL_THROUGH

	[00201794]
		0020178c: FALL_THROUGH
 	00201794 push ax
 	0020179c mov mar,0x10001c
 	002017a8 memread4 ax
 	002017b0 pop bx
 	002017b8 land bx,ax
 	002017c4 mov ax,bx
		002017d0: FALL_THROUGH

	[002017d0]
		0020178c: CONDITIONAL_JUMP
		00201794: FALL_THROUGH
 	002017d0 jz 0x0020181c
		0020181c: CONDITIONAL_JUMP
		002017d8: FALL_THROUGH

	[002017d8]
		002017d0: FALL_THROUGH
 	002017d8 push ax
 	002017e0 mov mar,0x100020
 	002017ec memread4 ax
 	002017f4 lnot ax
 	002017fc pop bx
 	00201804 land bx,ax
 	00201810 mov ax,bx
		0020181c: FALL_THROUGH

	[0020181c]
		002017d0: CONDITIONAL_JUMP
		002017d8: FALL_THROUGH
 	0020181c jz 0x00201868
		00201868: CONDITIONAL_JUMP
		00201824: FALL_THROUGH

	[00201824]
		0020181c: FALL_THROUGH
 	00201824 push ax
 	0020182c mov mar,0x100024
 	00201838 memread4 ax
 	00201840 lnot ax
 	00201848 pop bx
 	00201850 land bx,ax
 	0020185c mov ax,bx
		00201868: FALL_THROUGH

	[00201868]
		0020181c: CONDITIONAL_JUMP
		00201824: FALL_THROUGH
 	00201868 jz 0x002018b4
		002018b4: CONDITIONAL_JUMP
		00201870: FALL_THROUGH

	[00201870]
		00201868: FALL_THROUGH
 	00201870 push ax
 	00201878 mov mar,0x100028
 	00201884 memread4 ax
 	0020188c lnot ax
 	00201894 pop bx
 	0020189c land bx,ax
 	002018a8 mov ax,bx
		002018b4: FALL_THROUGH

	[002018b4]
		00201868: CONDITIONAL_JUMP
		00201870: FALL_THROUGH
 	002018b4 jz 0x00201900
		00201900: CONDITIONAL_JUMP
		002018bc: FALL_THROUGH

	[002018bc]
		002018b4: FALL_THROUGH
 	002018bc push ax
 	002018c4 mov mar,0x10002c
 	002018d0 memread4 ax
 	002018d8 lnot ax
 	002018e0 pop bx
 	002018e8 land bx,ax
 	002018f4 mov ax,bx
		00201900: FALL_THROUGH

	[00201900]
		002018b4: CONDITIONAL_JUMP
		002018bc: FALL_THROUGH
 	00201900 jz 0x00201950
		00201950: CONDITIONAL_JUMP
		00201908: FALL_THROUGH

	[00201908]
		00201900: FALL_THROUGH
 	00201908 mov ax,0x1
 	00201914 mov mar,0x100020
 	00201920 memwrite4 ax
 	00201928 mov ax,0x8
 	00201934 mov mar,0x1000cc
 	00201940 memwrite4 ax
 	00201948 jmp 0x00202380
		00202380: UNCONDITIONAL_JUMP

	[00201950]
		00201900: CONDITIONAL_JUMP
 	00201950 sourceline 0x2d69
 	00201958 mov mar,0x100000
 	00201964 memread4 ax
 	0020196c jz 0x002019b0
		002019b0: CONDITIONAL_JUMP
		00201974: FALL_THROUGH

	[00201974]
		00201950: FALL_THROUGH
 	00201974 push ax
 	0020197c mov mar,0x100004
 	00201988 memread4 ax
 	00201990 pop bx
 	00201998 land bx,ax
 	002019a4 mov ax,bx
		002019b0: FALL_THROUGH

	[002019b0]
		00201950: CONDITIONAL_JUMP
		00201974: FALL_THROUGH
 	002019b0 jz 0x002019f4
		002019f4: CONDITIONAL_JUMP
		002019b8: FALL_THROUGH

	[002019b8]
		002019b0: FALL_THROUGH
 	002019b8 push ax
 	002019c0 mov mar,0x100008
 	002019cc memread4 ax
 	002019d4 pop bx
 	002019dc land bx,ax
 	002019e8 mov ax,bx
		002019f4: FALL_THROUGH

	[002019f4]
		002019b0: CONDITIONAL_JUMP
		002019b8: FALL_THROUGH
 	002019f4 jz 0x00201a38
		00201a38: CONDITIONAL_JUMP
		002019fc: FALL_THROUGH

	[002019fc]
		002019f4: FALL_THROUGH
 	002019fc push ax
 	00201a04 mov mar,0x10000c
 	00201a10 memread4 ax
 	00201a18 pop bx
 	00201a20 land bx,ax
 	00201a2c mov ax,bx
		00201a38: FALL_THROUGH

	[00201a38]
		002019f4: CONDITIONAL_JUMP
		002019fc: FALL_THROUGH
 	00201a38 jz 0x00201a7c
		00201a7c: CONDITIONAL_JUMP
		00201a40: FALL_THROUGH

	[00201a40]
		00201a38: FALL_THROUGH
 	00201a40 push ax
 	00201a48 mov mar,0x100010
 	00201a54 memread4 ax
 	00201a5c pop bx
 	00201a64 land bx,ax
 	00201a70 mov ax,bx
		00201a7c: FALL_THROUGH

	[00201a7c]
		00201a38: CONDITIONAL_JUMP
		00201a40: FALL_THROUGH
 	00201a7c jz 0x00201ac0
		00201ac0: CONDITIONAL_JUMP
		00201a84: FALL_THROUGH

	[00201a84]
		00201a7c: FALL_THROUGH
 	00201a84 push ax
 	00201a8c mov mar,0x100014
 	00201a98 memread4 ax
 	00201aa0 pop bx
 	00201aa8 land bx,ax
 	00201ab4 mov ax,bx
		00201ac0: FALL_THROUGH

	[00201ac0]
		00201a7c: CONDITIONAL_JUMP
		00201a84: FALL_THROUGH
 	00201ac0 jz 0x00201b04
		00201b04: CONDITIONAL_JUMP
		00201ac8: FALL_THROUGH

	[00201ac8]
		00201ac0: FALL_THROUGH
 	00201ac8 push ax
 	00201ad0 mov mar,0x100018
 	00201adc memread4 ax
 	00201ae4 pop bx
 	00201aec land bx,ax
 	00201af8 mov ax,bx
		00201b04: FALL_THROUGH

	[00201b04]
		00201ac0: CONDITIONAL_JUMP
		00201ac8: FALL_THROUGH
 	00201b04 jz 0x00201b48
		00201b48: CONDITIONAL_JUMP
		00201b0c: FALL_THROUGH

	[00201b0c]
		00201b04: FALL_THROUGH
 	00201b0c push ax
 	00201b14 mov mar,0x10001c
 	00201b20 memread4 ax
 	00201b28 pop bx
 	00201b30 land bx,ax
 	00201b3c mov ax,bx
		00201b48: FALL_THROUGH

	[00201b48]
		00201b04: CONDITIONAL_JUMP
		00201b0c: FALL_THROUGH
 	00201b48 jz 0x00201b8c
		00201b8c: CONDITIONAL_JUMP
		00201b50: FALL_THROUGH

	[00201b50]
		00201b48: FALL_THROUGH
 	00201b50 push ax
 	00201b58 mov mar,0x100020
 	00201b64 memread4 ax
 	00201b6c pop bx
 	00201b74 land bx,ax
 	00201b80 mov ax,bx
		00201b8c: FALL_THROUGH

	[00201b8c]
		00201b48: CONDITIONAL_JUMP
		00201b50: FALL_THROUGH
 	00201b8c jz 0x00201bd8
		00201bd8: CONDITIONAL_JUMP
		00201b94: FALL_THROUGH

	[00201b94]
		00201b8c: FALL_THROUGH
 	00201b94 push ax
 	00201b9c mov mar,0x100024
 	00201ba8 memread4 ax
 	00201bb0 lnot ax
 	00201bb8 pop bx
 	00201bc0 land bx,ax
 	00201bcc mov ax,bx
		00201bd8: FALL_THROUGH

	[00201bd8]
		00201b8c: CONDITIONAL_JUMP
		00201b94: FALL_THROUGH
 	00201bd8 jz 0x00201c24
		00201c24: CONDITIONAL_JUMP
		00201be0: FALL_THROUGH

	[00201be0]
		00201bd8: FALL_THROUGH
 	00201be0 push ax
 	00201be8 mov mar,0x100028
 	00201bf4 memread4 ax
 	00201bfc lnot ax
 	00201c04 pop bx
 	00201c0c land bx,ax
 	00201c18 mov ax,bx
		00201c24: FALL_THROUGH

	[00201c24]
		00201bd8: CONDITIONAL_JUMP
		00201be0: FALL_THROUGH
 	00201c24 jz 0x00201c70
		00201c70: CONDITIONAL_JUMP
		00201c2c: FALL_THROUGH

	[00201c2c]
		00201c24: FALL_THROUGH
 	00201c2c push ax
 	00201c34 mov mar,0x10002c
 	00201c40 memread4 ax
 	00201c48 lnot ax
 	00201c50 pop bx
 	00201c58 land bx,ax
 	00201c64 mov ax,bx
		00201c70: FALL_THROUGH

	[00201c70]
		00201c24: CONDITIONAL_JUMP
		00201c2c: FALL_THROUGH
 	00201c70 jz 0x00201cc0
		00201cc0: CONDITIONAL_JUMP
		00201c78: FALL_THROUGH

	[00201c78]
		00201c70: FALL_THROUGH
 	00201c78 mov ax,0x1
 	00201c84 mov mar,0x100024
 	00201c90 memwrite4 ax
 	00201c98 mov ax,0x8
 	00201ca4 mov mar,0x1000d0
 	00201cb0 memwrite4 ax
 	00201cb8 jmp 0x00202380
		00202380: UNCONDITIONAL_JUMP

	[00201cc0]
		00201c70: CONDITIONAL_JUMP
 	00201cc0 sourceline 0x2d6e
 	00201cc8 mov mar,0x100000
 	00201cd4 memread4 ax
 	00201cdc jz 0x00201d20
		00201d20: CONDITIONAL_JUMP
		00201ce4: FALL_THROUGH

	[00201ce4]
		00201cc0: FALL_THROUGH
 	00201ce4 push ax
 	00201cec mov mar,0x100004
 	00201cf8 memread4 ax
 	00201d00 pop bx
 	00201d08 land bx,ax
 	00201d14 mov ax,bx
		00201d20: FALL_THROUGH

	[00201d20]
		00201cc0: CONDITIONAL_JUMP
		00201ce4: FALL_THROUGH
 	00201d20 jz 0x00201d64
		00201d64: CONDITIONAL_JUMP
		00201d28: FALL_THROUGH

	[00201d28]
		00201d20: FALL_THROUGH
 	00201d28 push ax
 	00201d30 mov mar,0x100008
 	00201d3c memread4 ax
 	00201d44 pop bx
 	00201d4c land bx,ax
 	00201d58 mov ax,bx
		00201d64: FALL_THROUGH

	[00201d64]
		00201d20: CONDITIONAL_JUMP
		00201d28: FALL_THROUGH
 	00201d64 jz 0x00201da8
		00201da8: CONDITIONAL_JUMP
		00201d6c: FALL_THROUGH

	[00201d6c]
		00201d64: FALL_THROUGH
 	00201d6c push ax
 	00201d74 mov mar,0x10000c
 	00201d80 memread4 ax
 	00201d88 pop bx
 	00201d90 land bx,ax
 	00201d9c mov ax,bx
		00201da8: FALL_THROUGH

	[00201da8]
		00201d64: CONDITIONAL_JUMP
		00201d6c: FALL_THROUGH
 	00201da8 jz 0x00201dec
		00201dec: CONDITIONAL_JUMP
		00201db0: FALL_THROUGH

	[00201db0]
		00201da8: FALL_THROUGH
 	00201db0 push ax
 	00201db8 mov mar,0x100010
 	00201dc4 memread4 ax
 	00201dcc pop bx
 	00201dd4 land bx,ax
 	00201de0 mov ax,bx
		00201dec: FALL_THROUGH

	[00201dec]
		00201da8: CONDITIONAL_JUMP
		00201db0: FALL_THROUGH
 	00201dec jz 0x00201e30
		00201e30: CONDITIONAL_JUMP
		00201df4: FALL_THROUGH

	[00201df4]
		00201dec: FALL_THROUGH
 	00201df4 push ax
 	00201dfc mov mar,0x100014
 	00201e08 memread4 ax
 	00201e10 pop bx
 	00201e18 land bx,ax
 	00201e24 mov ax,bx
		00201e30: FALL_THROUGH

	[00201e30]
		00201dec: CONDITIONAL_JUMP
		00201df4: FALL_THROUGH
 	00201e30 jz 0x00201e74
		00201e74: CONDITIONAL_JUMP
		00201e38: FALL_THROUGH

	[00201e38]
		00201e30: FALL_THROUGH
 	00201e38 push ax
 	00201e40 mov mar,0x100018
 	00201e4c memread4 ax
 	00201e54 pop bx
 	00201e5c land bx,ax
 	00201e68 mov ax,bx
		00201e74: FALL_THROUGH

	[00201e74]
		00201e30: CONDITIONAL_JUMP
		00201e38: FALL_THROUGH
 	00201e74 jz 0x00201eb8
		00201eb8: CONDITIONAL_JUMP
		00201e7c: FALL_THROUGH

	[00201e7c]
		00201e74: FALL_THROUGH
 	00201e7c push ax
 	00201e84 mov mar,0x10001c
 	00201e90 memread4 ax
 	00201e98 pop bx
 	00201ea0 land bx,ax
 	00201eac mov ax,bx
		00201eb8: FALL_THROUGH

	[00201eb8]
		00201e74: CONDITIONAL_JUMP
		00201e7c: FALL_THROUGH
 	00201eb8 jz 0x00201efc
		00201efc: CONDITIONAL_JUMP
		00201ec0: FALL_THROUGH

	[00201ec0]
		00201eb8: FALL_THROUGH
 	00201ec0 push ax
 	00201ec8 mov mar,0x100020
 	00201ed4 memread4 ax
 	00201edc pop bx
 	00201ee4 land bx,ax
 	00201ef0 mov ax,bx
		00201efc: FALL_THROUGH

	[00201efc]
		00201eb8: CONDITIONAL_JUMP
		00201ec0: FALL_THROUGH
 	00201efc jz 0x00201f40
		00201f40: CONDITIONAL_JUMP
		00201f04: FALL_THROUGH

	[00201f04]
		00201efc: FALL_THROUGH
 	00201f04 push ax
 	00201f0c mov mar,0x100024
 	00201f18 memread4 ax
 	00201f20 pop bx
 	00201f28 land bx,ax
 	00201f34 mov ax,bx
		00201f40: FALL_THROUGH

	[00201f40]
		00201efc: CONDITIONAL_JUMP
		00201f04: FALL_THROUGH
 	00201f40 jz 0x00201f8c
		00201f8c: CONDITIONAL_JUMP
		00201f48: FALL_THROUGH

	[00201f48]
		00201f40: FALL_THROUGH
 	00201f48 push ax
 	00201f50 mov mar,0x100028
 	00201f5c memread4 ax
 	00201f64 lnot ax
 	00201f6c pop bx
 	00201f74 land bx,ax
 	00201f80 mov ax,bx
		00201f8c: FALL_THROUGH

	[00201f8c]
		00201f40: CONDITIONAL_JUMP
		00201f48: FALL_THROUGH
 	00201f8c jz 0x00201fd8
		00201fd8: CONDITIONAL_JUMP
		00201f94: FALL_THROUGH

	[00201f94]
		00201f8c: FALL_THROUGH
 	00201f94 push ax
 	00201f9c mov mar,0x10002c
 	00201fa8 memread4 ax
 	00201fb0 lnot ax
 	00201fb8 pop bx
 	00201fc0 land bx,ax
 	00201fcc mov ax,bx
		00201fd8: FALL_THROUGH

	[00201fd8]
		00201f8c: CONDITIONAL_JUMP
		00201f94: FALL_THROUGH
 	00201fd8 jz 0x00202028
		00202028: CONDITIONAL_JUMP
		00201fe0: FALL_THROUGH

	[00201fe0]
		00201fd8: FALL_THROUGH
 	00201fe0 mov ax,0x1
 	00201fec mov mar,0x100028
 	00201ff8 memwrite4 ax
 	00202000 mov ax,0x8
 	0020200c mov mar,0x1000d4
 	00202018 memwrite4 ax
 	00202020 jmp 0x00202380
		00202380: UNCONDITIONAL_JUMP

	[00202028]
		00201fd8: CONDITIONAL_JUMP
 	00202028 sourceline 0x2d73
 	00202030 mov mar,0x100000
 	0020203c memread4 ax
 	00202044 jz 0x00202088
		00202088: CONDITIONAL_JUMP
		0020204c: FALL_THROUGH

	[0020204c]
		00202028: FALL_THROUGH
 	0020204c push ax
 	00202054 mov mar,0x100004
 	00202060 memread4 ax
 	00202068 pop bx
 	00202070 land bx,ax
 	0020207c mov ax,bx
		00202088: FALL_THROUGH

	[00202088]
		00202028: CONDITIONAL_JUMP
		0020204c: FALL_THROUGH
 	00202088 jz 0x002020cc
		002020cc: CONDITIONAL_JUMP
		00202090: FALL_THROUGH

	[00202090]
		00202088: FALL_THROUGH
 	00202090 push ax
 	00202098 mov mar,0x100008
 	002020a4 memread4 ax
 	002020ac pop bx
 	002020b4 land bx,ax
 	002020c0 mov ax,bx
		002020cc: FALL_THROUGH

	[002020cc]
		00202088: CONDITIONAL_JUMP
		00202090: FALL_THROUGH
 	002020cc jz 0x00202110
		00202110: CONDITIONAL_JUMP
		002020d4: FALL_THROUGH

	[002020d4]
		002020cc: FALL_THROUGH
 	002020d4 push ax
 	002020dc mov mar,0x10000c
 	002020e8 memread4 ax
 	002020f0 pop bx
 	002020f8 land bx,ax
 	00202104 mov ax,bx
		00202110: FALL_THROUGH

	[00202110]
		002020cc: CONDITIONAL_JUMP
		002020d4: FALL_THROUGH
 	00202110 jz 0x00202154
		00202154: CONDITIONAL_JUMP
		00202118: FALL_THROUGH

	[00202118]
		00202110: FALL_THROUGH
 	00202118 push ax
 	00202120 mov mar,0x100010
 	0020212c memread4 ax
 	00202134 pop bx
 	0020213c land bx,ax
 	00202148 mov ax,bx
		00202154: FALL_THROUGH

	[00202154]
		00202110: CONDITIONAL_JUMP
		00202118: FALL_THROUGH
 	00202154 jz 0x00202198
		00202198: CONDITIONAL_JUMP
		0020215c: FALL_THROUGH

	[0020215c]
		00202154: FALL_THROUGH
 	0020215c push ax
 	00202164 mov mar,0x100014
 	00202170 memread4 ax
 	00202178 pop bx
 	00202180 land bx,ax
 	0020218c mov ax,bx
		00202198: FALL_THROUGH

	[00202198]
		00202154: CONDITIONAL_JUMP
		0020215c: FALL_THROUGH
 	00202198 jz 0x002021dc
		002021dc: CONDITIONAL_JUMP
		002021a0: FALL_THROUGH

	[002021a0]
		00202198: FALL_THROUGH
 	002021a0 push ax
 	002021a8 mov mar,0x100018
 	002021b4 memread4 ax
 	002021bc pop bx
 	002021c4 land bx,ax
 	002021d0 mov ax,bx
		002021dc: FALL_THROUGH

	[002021dc]
		00202198: CONDITIONAL_JUMP
		002021a0: FALL_THROUGH
 	002021dc jz 0x00202220
		00202220: CONDITIONAL_JUMP
		002021e4: FALL_THROUGH

	[002021e4]
		002021dc: FALL_THROUGH
 	002021e4 push ax
 	002021ec mov mar,0x10001c
 	002021f8 memread4 ax
 	00202200 pop bx
 	00202208 land bx,ax
 	00202214 mov ax,bx
		00202220: FALL_THROUGH

	[00202220]
		002021dc: CONDITIONAL_JUMP
		002021e4: FALL_THROUGH
 	00202220 jz 0x00202264
		00202264: CONDITIONAL_JUMP
		00202228: FALL_THROUGH

	[00202228]
		00202220: FALL_THROUGH
 	00202228 push ax
 	00202230 mov mar,0x100020
 	0020223c memread4 ax
 	00202244 pop bx
 	0020224c land bx,ax
 	00202258 mov ax,bx
		00202264: FALL_THROUGH

	[00202264]
		00202220: CONDITIONAL_JUMP
		00202228: FALL_THROUGH
 	00202264 jz 0x002022a8
		002022a8: CONDITIONAL_JUMP
		0020226c: FALL_THROUGH

	[0020226c]
		00202264: FALL_THROUGH
 	0020226c push ax
 	00202274 mov mar,0x100024
 	00202280 memread4 ax
 	00202288 pop bx
 	00202290 land bx,ax
 	0020229c mov ax,bx
		002022a8: FALL_THROUGH

	[002022a8]
		00202264: CONDITIONAL_JUMP
		0020226c: FALL_THROUGH
 	002022a8 jz 0x002022ec
		002022ec: CONDITIONAL_JUMP
		002022b0: FALL_THROUGH

	[002022b0]
		002022a8: FALL_THROUGH
 	002022b0 push ax
 	002022b8 mov mar,0x100028
 	002022c4 memread4 ax
 	002022cc pop bx
 	002022d4 land bx,ax
 	002022e0 mov ax,bx
		002022ec: FALL_THROUGH

	[002022ec]
		002022a8: CONDITIONAL_JUMP
		002022b0: FALL_THROUGH
 	002022ec jz 0x00202338
		00202338: CONDITIONAL_JUMP
		002022f4: FALL_THROUGH

	[002022f4]
		002022ec: FALL_THROUGH
 	002022f4 push ax
 	002022fc mov mar,0x10002c
 	00202308 memread4 ax
 	00202310 lnot ax
 	00202318 pop bx
 	00202320 land bx,ax
 	0020232c mov ax,bx
		00202338: FALL_THROUGH

	[00202338]
		002022ec: CONDITIONAL_JUMP
		002022f4: FALL_THROUGH
 	00202338 jz 0x00202380
		00202380: CONDITIONAL_JUMP
		00202340: FALL_THROUGH

	[00202340]
		00202338: FALL_THROUGH
 	00202340 mov ax,0x1
 	0020234c mov mar,0x10002c
 	00202358 memwrite4 ax
 	00202360 mov ax,0x8
 	0020236c mov mar,0x1000d8
 	00202378 memwrite4 ax
		00202380: FALL_THROUGH

	[00202380]
		001ffc68: UNCONDITIONAL_JUMP
		00200018: UNCONDITIONAL_JUMP
		002003c0: UNCONDITIONAL_JUMP
		00200760: UNCONDITIONAL_JUMP
		00200af8: UNCONDITIONAL_JUMP
		00200e88: UNCONDITIONAL_JUMP
		00201210: UNCONDITIONAL_JUMP
		00201590: UNCONDITIONAL_JUMP
		00201908: UNCONDITIONAL_JUMP
		00201c78: UNCONDITIONAL_JUMP
		00201fe0: UNCONDITIONAL_JUMP
		00202338: CONDITIONAL_JUMP
		00202340: FALL_THROUGH
 	00202380 sourceline 0x2d77
 	00202388 jmp 0x002024e4
		002024e4: UNCONDITIONAL_JUMP

	[00202390]
		001ff89c: CONDITIONAL_JUMP
 	00202390 sourceline 0x2d7a
 	00202398 mov mar,0x32ef20
 	002023a4 memread4 ax
 	002023ac lnot ax
 	002023b4 jz 0x002024e4
		002024e4: CONDITIONAL_JUMP
		002023bc: FALL_THROUGH

	[002023bc]
		00202390: FALL_THROUGH
 	002023bc sourceline 0x2d7c
 	002023c4 mov ax,0x1
 	002023d0 mov bx,ax
 	002023dc mov mar,0x3cef20
 	002023e8 mov ax,mar
 	002023f4 push op
 	002023fc mov op,ax
 	00202404 farpush bx
 	0020240c setfuncargs 0x1
 	00202414 mov ax,0x69ef20
 	00202420 farcall ax
 	00202428 farsubsp 0x1
 	00202430 pop op
 	00202438 sourceline 0x2d7d
 	00202440 push op
 	00202448 mov ax,0x2c77e7
 	00202454 farpush ax
 	0020245c mov ax,0x138
 	00202468 farpush ax
 	00202470 mov ax,0x92
 	0020247c farpush ax
 	00202484 mov ax,0x0
 	00202490 farpush ax
 	00202498 mov mar,0x3cef20
 	002024a4 mov ax,mar
 	002024b0 mov op,ax
 	002024b8 setfuncargs 0x4
 	002024c0 mov ax,0x6aef20
 	002024cc farcall ax
 	002024d4 farsubsp 0x4
 	002024dc pop op
		002024e4: FALL_THROUGH

	[002024e4]
		001ff820: CONDITIONAL_JUMP
		00202380: UNCONDITIONAL_JUMP
		00202390: CONDITIONAL_JUMP
		002023bc: FALL_THROUGH
 	002024e4 sourceline 0x2d81
 	002024ec stackptr 0xc
 	002024f4 memread4 ax
 	002024fc push ax
 	00202504 mov ax,0x2
 	00202510 pop bx
 	00202518 cmpeq bx,ax
 	00202524 mov ax,bx
 	00202530 jz 0x002026f0
		002026f0: CONDITIONAL_JUMP
		00202538: FALL_THROUGH

	[00202538]
		002024e4: FALL_THROUGH
 	00202538 sourceline 0x2d83
 	00202540 mov mar,0x626f20
 	0020254c mov ax,mar
 	00202558 push op
 	00202560 mov op,ax
 	00202568 setfuncargs 0x0
 	00202570 mov ax,0x606f20
 	0020257c farcall ax
 	00202584 pop op
 	0020258c lnot ax
 	00202594 jz 0x002026f0
		002026f0: CONDITIONAL_JUMP
		0020259c: FALL_THROUGH

	[0020259c]
		00202538: FALL_THROUGH
 	0020259c sourceline 0x2d85
 	002025a4 mov mar,0x32ef20
 	002025b0 memread4 ax
 	002025b8 lnot ax
 	002025c0 jz 0x002026f0
		002026f0: CONDITIONAL_JUMP
		002025c8: FALL_THROUGH

	[002025c8]
		0020259c: FALL_THROUGH
 	002025c8 sourceline 0x2d87
 	002025d0 mov ax,0x1
 	002025dc mov bx,ax
 	002025e8 mov mar,0x3cef20
 	002025f4 mov ax,mar
 	00202600 push op
 	00202608 mov op,ax
 	00202610 farpush bx
 	00202618 setfuncargs 0x1
 	00202620 mov ax,0x69ef20
 	0020262c farcall ax
 	00202634 farsubsp 0x1
 	0020263c pop op
 	00202644 sourceline 0x2d88
 	0020264c push op
 	00202654 mov ax,0x2c7835
 	00202660 farpush ax
 	00202668 mov ax,0x138
 	00202674 farpush ax
 	0020267c mov ax,0x92
 	00202688 farpush ax
 	00202690 mov ax,0x0
 	0020269c farpush ax
 	002026a4 mov mar,0x3cef20
 	002026b0 mov ax,mar
 	002026bc mov op,ax
 	002026c4 setfuncargs 0x4
 	002026cc mov ax,0x6aef20
 	002026d8 farcall ax
 	002026e0 farsubsp 0x4
 	002026e8 pop op
		002026f0: FALL_THROUGH

	[002026f0]
		002024e4: CONDITIONAL_JUMP
		00202538: CONDITIONAL_JUMP
		0020259c: CONDITIONAL_JUMP
		002025c8: FALL_THROUGH
 	002026f0 sourceline 0x2d8c
 	002026f8 mov ax,0x0
 	00202704 stackptr 0x8
 	0020270c memzerond
 	00202710 ret

btnDownRight_OnClick$2:
	[00202714]
 	00202714 sourceline 0x2d8f
 	0020271c thisaddr
 	00202724 stackptr 0x8
 	0020272c memread4 ax
 	00202734 meminit ax
 	0020273c sourceline 0x2d90
 	00202744 stackptr 0xc
 	0020274c memread4 ax
 	00202754 push ax
 	0020275c mov ax,0x1
 	00202768 pop bx
 	00202770 cmpeq bx,ax
 	0020277c mov ax,bx
 	00202788 jz 0x00205488
		00205488: CONDITIONAL_JUMP
		00202790: FALL_THROUGH

	[00202790]
		00202714: FALL_THROUGH
 	00202790 sourceline 0x2d92
*	00202798 mov mar,0x1086f20
 	002027a4 memread4 ax
 	002027ac push ax
 	002027b4 mov ax,0x20
 	002027c0 push ax
 	002027c8 mov mar,0x108ef20
 	002027d4 memread4 ax
 	002027dc pop bx
 	002027e4 sub bx,ax
 	002027f0 mov ax,bx
 	002027fc pop bx
 	00202804 cmpgt bx,ax
 	00202810 mov ax,bx
 	0020281c jz 0x00202840
		00202840: CONDITIONAL_JUMP
		00202824: FALL_THROUGH

	[00202824]
		00202790: FALL_THROUGH
 	00202824 mov ax,0x0
 	00202830 stackptr 0x8
 	00202838 memzerond
 	0020283c ret

	[00202840]
		00202790: CONDITIONAL_JUMP
 	00202840 sourceline 0x2d93
 	00202848 mov mar,0x626f20
 	00202854 mov ax,mar
 	00202860 push op
 	00202868 mov op,ax
 	00202870 setfuncargs 0x0
 	00202878 mov ax,0x606f20
 	00202884 farcall ax
 	0020288c pop op
 	00202894 jz 0x00205334
		00205334: CONDITIONAL_JUMP
		0020289c: FALL_THROUGH

	[0020289c]
		00202840: FALL_THROUGH
 	0020289c sourceline 0x2d95
 	002028a4 mov mar,0x100000
 	002028b0 memread4 ax
 	002028b8 lnot ax
 	002028c0 jz 0x0020290c
		0020290c: CONDITIONAL_JUMP
		002028c8: FALL_THROUGH

	[002028c8]
		0020289c: FALL_THROUGH
 	002028c8 push ax
 	002028d0 mov mar,0x100004
 	002028dc memread4 ax
 	002028e4 lnot ax
 	002028ec pop bx
 	002028f4 land bx,ax
 	00202900 mov ax,bx
		0020290c: FALL_THROUGH

	[0020290c]
		0020289c: CONDITIONAL_JUMP
		002028c8: FALL_THROUGH
 	0020290c jz 0x00202958
		00202958: CONDITIONAL_JUMP
		00202914: FALL_THROUGH

	[00202914]
		0020290c: FALL_THROUGH
 	00202914 push ax
 	0020291c mov mar,0x100008
 	00202928 memread4 ax
 	00202930 lnot ax
 	00202938 pop bx
 	00202940 land bx,ax
 	0020294c mov ax,bx
		00202958: FALL_THROUGH

	[00202958]
		0020290c: CONDITIONAL_JUMP
		00202914: FALL_THROUGH
 	00202958 jz 0x002029a4
		002029a4: CONDITIONAL_JUMP
		00202960: FALL_THROUGH

	[00202960]
		00202958: FALL_THROUGH
 	00202960 push ax
 	00202968 mov mar,0x10000c
 	00202974 memread4 ax
 	0020297c lnot ax
 	00202984 pop bx
 	0020298c land bx,ax
 	00202998 mov ax,bx
		002029a4: FALL_THROUGH

	[002029a4]
		00202958: CONDITIONAL_JUMP
		00202960: FALL_THROUGH
 	002029a4 jz 0x002029f0
		002029f0: CONDITIONAL_JUMP
		002029ac: FALL_THROUGH

	[002029ac]
		002029a4: FALL_THROUGH
 	002029ac push ax
 	002029b4 mov mar,0x100010
 	002029c0 memread4 ax
 	002029c8 lnot ax
 	002029d0 pop bx
 	002029d8 land bx,ax
 	002029e4 mov ax,bx
		002029f0: FALL_THROUGH

	[002029f0]
		002029a4: CONDITIONAL_JUMP
		002029ac: FALL_THROUGH
 	002029f0 jz 0x00202a3c
		00202a3c: CONDITIONAL_JUMP
		002029f8: FALL_THROUGH

	[002029f8]
		002029f0: FALL_THROUGH
 	002029f8 push ax
 	00202a00 mov mar,0x100014
 	00202a0c memread4 ax
 	00202a14 lnot ax
 	00202a1c pop bx
 	00202a24 land bx,ax
 	00202a30 mov ax,bx
		00202a3c: FALL_THROUGH

	[00202a3c]
		002029f0: CONDITIONAL_JUMP
		002029f8: FALL_THROUGH
 	00202a3c jz 0x00202a88
		00202a88: CONDITIONAL_JUMP
		00202a44: FALL_THROUGH

	[00202a44]
		00202a3c: FALL_THROUGH
 	00202a44 push ax
 	00202a4c mov mar,0x100018
 	00202a58 memread4 ax
 	00202a60 lnot ax
 	00202a68 pop bx
 	00202a70 land bx,ax
 	00202a7c mov ax,bx
		00202a88: FALL_THROUGH

	[00202a88]
		00202a3c: CONDITIONAL_JUMP
		00202a44: FALL_THROUGH
 	00202a88 jz 0x00202ad4
		00202ad4: CONDITIONAL_JUMP
		00202a90: FALL_THROUGH

	[00202a90]
		00202a88: FALL_THROUGH
 	00202a90 push ax
 	00202a98 mov mar,0x10001c
 	00202aa4 memread4 ax
 	00202aac lnot ax
 	00202ab4 pop bx
 	00202abc land bx,ax
 	00202ac8 mov ax,bx
		00202ad4: FALL_THROUGH

	[00202ad4]
		00202a88: CONDITIONAL_JUMP
		00202a90: FALL_THROUGH
 	00202ad4 jz 0x00202b20
		00202b20: CONDITIONAL_JUMP
		00202adc: FALL_THROUGH

	[00202adc]
		00202ad4: FALL_THROUGH
 	00202adc push ax
 	00202ae4 mov mar,0x100020
 	00202af0 memread4 ax
 	00202af8 lnot ax
 	00202b00 pop bx
 	00202b08 land bx,ax
 	00202b14 mov ax,bx
		00202b20: FALL_THROUGH

	[00202b20]
		00202ad4: CONDITIONAL_JUMP
		00202adc: FALL_THROUGH
 	00202b20 jz 0x00202b6c
		00202b6c: CONDITIONAL_JUMP
		00202b28: FALL_THROUGH

	[00202b28]
		00202b20: FALL_THROUGH
 	00202b28 push ax
 	00202b30 mov mar,0x100024
 	00202b3c memread4 ax
 	00202b44 lnot ax
 	00202b4c pop bx
 	00202b54 land bx,ax
 	00202b60 mov ax,bx
		00202b6c: FALL_THROUGH

	[00202b6c]
		00202b20: CONDITIONAL_JUMP
		00202b28: FALL_THROUGH
 	00202b6c jz 0x00202bb8
		00202bb8: CONDITIONAL_JUMP
		00202b74: FALL_THROUGH

	[00202b74]
		00202b6c: FALL_THROUGH
 	00202b74 push ax
 	00202b7c mov mar,0x100028
 	00202b88 memread4 ax
 	00202b90 lnot ax
 	00202b98 pop bx
 	00202ba0 land bx,ax
 	00202bac mov ax,bx
		00202bb8: FALL_THROUGH

	[00202bb8]
		00202b6c: CONDITIONAL_JUMP
		00202b74: FALL_THROUGH
 	00202bb8 jz 0x00202c04
		00202c04: CONDITIONAL_JUMP
		00202bc0: FALL_THROUGH

	[00202bc0]
		00202bb8: FALL_THROUGH
 	00202bc0 push ax
 	00202bc8 mov mar,0x10002c
 	00202bd4 memread4 ax
 	00202bdc lnot ax
 	00202be4 pop bx
 	00202bec land bx,ax
 	00202bf8 mov ax,bx
		00202c04: FALL_THROUGH

	[00202c04]
		00202bb8: CONDITIONAL_JUMP
		00202bc0: FALL_THROUGH
 	00202c04 jz 0x00202c54
		00202c54: CONDITIONAL_JUMP
		00202c0c: FALL_THROUGH

	[00202c0c]
		00202c04: FALL_THROUGH
 	00202c0c mov ax,0x1
 	00202c18 mov mar,0x100000
 	00202c24 memwrite4 ax
 	00202c2c mov ax,0x9
 	00202c38 mov mar,0x1000ac
 	00202c44 memwrite4 ax
 	00202c4c jmp 0x00205324
		00205324: UNCONDITIONAL_JUMP

	[00202c54]
		00202c04: CONDITIONAL_JUMP
 	00202c54 sourceline 0x2d9a
 	00202c5c mov mar,0x100000
 	00202c68 memread4 ax
 	00202c70 jz 0x00202cbc
		00202cbc: CONDITIONAL_JUMP
		00202c78: FALL_THROUGH

	[00202c78]
		00202c54: FALL_THROUGH
 	00202c78 push ax
 	00202c80 mov mar,0x100004
 	00202c8c memread4 ax
 	00202c94 lnot ax
 	00202c9c pop bx
 	00202ca4 land bx,ax
 	00202cb0 mov ax,bx
		00202cbc: FALL_THROUGH

	[00202cbc]
		00202c54: CONDITIONAL_JUMP
		00202c78: FALL_THROUGH
 	00202cbc jz 0x00202d08
		00202d08: CONDITIONAL_JUMP
		00202cc4: FALL_THROUGH

	[00202cc4]
		00202cbc: FALL_THROUGH
 	00202cc4 push ax
 	00202ccc mov mar,0x100008
 	00202cd8 memread4 ax
 	00202ce0 lnot ax
 	00202ce8 pop bx
 	00202cf0 land bx,ax
 	00202cfc mov ax,bx
		00202d08: FALL_THROUGH

	[00202d08]
		00202cbc: CONDITIONAL_JUMP
		00202cc4: FALL_THROUGH
 	00202d08 jz 0x00202d54
		00202d54: CONDITIONAL_JUMP
		00202d10: FALL_THROUGH

	[00202d10]
		00202d08: FALL_THROUGH
 	00202d10 push ax
 	00202d18 mov mar,0x10000c
 	00202d24 memread4 ax
 	00202d2c lnot ax
 	00202d34 pop bx
 	00202d3c land bx,ax
 	00202d48 mov ax,bx
		00202d54: FALL_THROUGH

	[00202d54]
		00202d08: CONDITIONAL_JUMP
		00202d10: FALL_THROUGH
 	00202d54 jz 0x00202da0
		00202da0: CONDITIONAL_JUMP
		00202d5c: FALL_THROUGH

	[00202d5c]
		00202d54: FALL_THROUGH
 	00202d5c push ax
 	00202d64 mov mar,0x100010
 	00202d70 memread4 ax
 	00202d78 lnot ax
 	00202d80 pop bx
 	00202d88 land bx,ax
 	00202d94 mov ax,bx
		00202da0: FALL_THROUGH

	[00202da0]
		00202d54: CONDITIONAL_JUMP
		00202d5c: FALL_THROUGH
 	00202da0 jz 0x00202dec
		00202dec: CONDITIONAL_JUMP
		00202da8: FALL_THROUGH

	[00202da8]
		00202da0: FALL_THROUGH
 	00202da8 push ax
 	00202db0 mov mar,0x100014
 	00202dbc memread4 ax
 	00202dc4 lnot ax
 	00202dcc pop bx
 	00202dd4 land bx,ax
 	00202de0 mov ax,bx
		00202dec: FALL_THROUGH

	[00202dec]
		00202da0: CONDITIONAL_JUMP
		00202da8: FALL_THROUGH
 	00202dec jz 0x00202e38
		00202e38: CONDITIONAL_JUMP
		00202df4: FALL_THROUGH

	[00202df4]
		00202dec: FALL_THROUGH
 	00202df4 push ax
 	00202dfc mov mar,0x100018
 	00202e08 memread4 ax
 	00202e10 lnot ax
 	00202e18 pop bx
 	00202e20 land bx,ax
 	00202e2c mov ax,bx
		00202e38: FALL_THROUGH

	[00202e38]
		00202dec: CONDITIONAL_JUMP
		00202df4: FALL_THROUGH
 	00202e38 jz 0x00202e84
		00202e84: CONDITIONAL_JUMP
		00202e40: FALL_THROUGH

	[00202e40]
		00202e38: FALL_THROUGH
 	00202e40 push ax
 	00202e48 mov mar,0x10001c
 	00202e54 memread4 ax
 	00202e5c lnot ax
 	00202e64 pop bx
 	00202e6c land bx,ax
 	00202e78 mov ax,bx
		00202e84: FALL_THROUGH

	[00202e84]
		00202e38: CONDITIONAL_JUMP
		00202e40: FALL_THROUGH
 	00202e84 jz 0x00202ed0
		00202ed0: CONDITIONAL_JUMP
		00202e8c: FALL_THROUGH

	[00202e8c]
		00202e84: FALL_THROUGH
 	00202e8c push ax
 	00202e94 mov mar,0x100020
 	00202ea0 memread4 ax
 	00202ea8 lnot ax
 	00202eb0 pop bx
 	00202eb8 land bx,ax
 	00202ec4 mov ax,bx
		00202ed0: FALL_THROUGH

	[00202ed0]
		00202e84: CONDITIONAL_JUMP
		00202e8c: FALL_THROUGH
 	00202ed0 jz 0x00202f1c
		00202f1c: CONDITIONAL_JUMP
		00202ed8: FALL_THROUGH

	[00202ed8]
		00202ed0: FALL_THROUGH
 	00202ed8 push ax
 	00202ee0 mov mar,0x100024
 	00202eec memread4 ax
 	00202ef4 lnot ax
 	00202efc pop bx
 	00202f04 land bx,ax
 	00202f10 mov ax,bx
		00202f1c: FALL_THROUGH

	[00202f1c]
		00202ed0: CONDITIONAL_JUMP
		00202ed8: FALL_THROUGH
 	00202f1c jz 0x00202f68
		00202f68: CONDITIONAL_JUMP
		00202f24: FALL_THROUGH

	[00202f24]
		00202f1c: FALL_THROUGH
 	00202f24 push ax
 	00202f2c mov mar,0x100028
 	00202f38 memread4 ax
 	00202f40 lnot ax
 	00202f48 pop bx
 	00202f50 land bx,ax
 	00202f5c mov ax,bx
		00202f68: FALL_THROUGH

	[00202f68]
		00202f1c: CONDITIONAL_JUMP
		00202f24: FALL_THROUGH
 	00202f68 jz 0x00202fb4
		00202fb4: CONDITIONAL_JUMP
		00202f70: FALL_THROUGH

	[00202f70]
		00202f68: FALL_THROUGH
 	00202f70 push ax
 	00202f78 mov mar,0x10002c
 	00202f84 memread4 ax
 	00202f8c lnot ax
 	00202f94 pop bx
 	00202f9c land bx,ax
 	00202fa8 mov ax,bx
		00202fb4: FALL_THROUGH

	[00202fb4]
		00202f68: CONDITIONAL_JUMP
		00202f70: FALL_THROUGH
 	00202fb4 jz 0x00203004
		00203004: CONDITIONAL_JUMP
		00202fbc: FALL_THROUGH

	[00202fbc]
		00202fb4: FALL_THROUGH
 	00202fbc mov ax,0x1
 	00202fc8 mov mar,0x100004
 	00202fd4 memwrite4 ax
 	00202fdc mov ax,0x9
 	00202fe8 mov mar,0x1000b0
 	00202ff4 memwrite4 ax
 	00202ffc jmp 0x00205324
		00205324: UNCONDITIONAL_JUMP

	[00203004]
		00202fb4: CONDITIONAL_JUMP
 	00203004 sourceline 0x2d9f
 	0020300c mov mar,0x100000
 	00203018 memread4 ax
 	00203020 jz 0x00203064
		00203064: CONDITIONAL_JUMP
		00203028: FALL_THROUGH

	[00203028]
		00203004: FALL_THROUGH
 	00203028 push ax
 	00203030 mov mar,0x100004
 	0020303c memread4 ax
 	00203044 pop bx
 	0020304c land bx,ax
 	00203058 mov ax,bx
		00203064: FALL_THROUGH

	[00203064]
		00203004: CONDITIONAL_JUMP
		00203028: FALL_THROUGH
 	00203064 jz 0x002030b0
		002030b0: CONDITIONAL_JUMP
		0020306c: FALL_THROUGH

	[0020306c]
		00203064: FALL_THROUGH
 	0020306c push ax
 	00203074 mov mar,0x100008
 	00203080 memread4 ax
 	00203088 lnot ax
 	00203090 pop bx
 	00203098 land bx,ax
 	002030a4 mov ax,bx
		002030b0: FALL_THROUGH

	[002030b0]
		00203064: CONDITIONAL_JUMP
		0020306c: FALL_THROUGH
 	002030b0 jz 0x002030fc
		002030fc: CONDITIONAL_JUMP
		002030b8: FALL_THROUGH

	[002030b8]
		002030b0: FALL_THROUGH
 	002030b8 push ax
 	002030c0 mov mar,0x10000c
 	002030cc memread4 ax
 	002030d4 lnot ax
 	002030dc pop bx
 	002030e4 land bx,ax
 	002030f0 mov ax,bx
		002030fc: FALL_THROUGH

	[002030fc]
		002030b0: CONDITIONAL_JUMP
		002030b8: FALL_THROUGH
 	002030fc jz 0x00203148
		00203148: CONDITIONAL_JUMP
		00203104: FALL_THROUGH

	[00203104]
		002030fc: FALL_THROUGH
 	00203104 push ax
 	0020310c mov mar,0x100010
 	00203118 memread4 ax
 	00203120 lnot ax
 	00203128 pop bx
 	00203130 land bx,ax
 	0020313c mov ax,bx
		00203148: FALL_THROUGH

	[00203148]
		002030fc: CONDITIONAL_JUMP
		00203104: FALL_THROUGH
 	00203148 jz 0x00203194
		00203194: CONDITIONAL_JUMP
		00203150: FALL_THROUGH

	[00203150]
		00203148: FALL_THROUGH
 	00203150 push ax
 	00203158 mov mar,0x100014
 	00203164 memread4 ax
 	0020316c lnot ax
 	00203174 pop bx
 	0020317c land bx,ax
 	00203188 mov ax,bx
		00203194: FALL_THROUGH

	[00203194]
		00203148: CONDITIONAL_JUMP
		00203150: FALL_THROUGH
 	00203194 jz 0x002031e0
		002031e0: CONDITIONAL_JUMP
		0020319c: FALL_THROUGH

	[0020319c]
		00203194: FALL_THROUGH
 	0020319c push ax
 	002031a4 mov mar,0x100018
 	002031b0 memread4 ax
 	002031b8 lnot ax
 	002031c0 pop bx
 	002031c8 land bx,ax
 	002031d4 mov ax,bx
		002031e0: FALL_THROUGH

	[002031e0]
		00203194: CONDITIONAL_JUMP
		0020319c: FALL_THROUGH
 	002031e0 jz 0x0020322c
		0020322c: CONDITIONAL_JUMP
		002031e8: FALL_THROUGH

	[002031e8]
		002031e0: FALL_THROUGH
 	002031e8 push ax
 	002031f0 mov mar,0x10001c
 	002031fc memread4 ax
 	00203204 lnot ax
 	0020320c pop bx
 	00203214 land bx,ax
 	00203220 mov ax,bx
		0020322c: FALL_THROUGH

	[0020322c]
		002031e0: CONDITIONAL_JUMP
		002031e8: FALL_THROUGH
 	0020322c jz 0x00203278
		00203278: CONDITIONAL_JUMP
		00203234: FALL_THROUGH

	[00203234]
		0020322c: FALL_THROUGH
 	00203234 push ax
 	0020323c mov mar,0x100020
 	00203248 memread4 ax
 	00203250 lnot ax
 	00203258 pop bx
 	00203260 land bx,ax
 	0020326c mov ax,bx
		00203278: FALL_THROUGH

	[00203278]
		0020322c: CONDITIONAL_JUMP
		00203234: FALL_THROUGH
 	00203278 jz 0x002032c4
		002032c4: CONDITIONAL_JUMP
		00203280: FALL_THROUGH

	[00203280]
		00203278: FALL_THROUGH
 	00203280 push ax
 	00203288 mov mar,0x100024
 	00203294 memread4 ax
 	0020329c lnot ax
 	002032a4 pop bx
 	002032ac land bx,ax
 	002032b8 mov ax,bx
		002032c4: FALL_THROUGH

	[002032c4]
		00203278: CONDITIONAL_JUMP
		00203280: FALL_THROUGH
 	002032c4 jz 0x00203310
		00203310: CONDITIONAL_JUMP
		002032cc: FALL_THROUGH

	[002032cc]
		002032c4: FALL_THROUGH
 	002032cc push ax
 	002032d4 mov mar,0x100028
 	002032e0 memread4 ax
 	002032e8 lnot ax
 	002032f0 pop bx
 	002032f8 land bx,ax
 	00203304 mov ax,bx
		00203310: FALL_THROUGH

	[00203310]
		002032c4: CONDITIONAL_JUMP
		002032cc: FALL_THROUGH
 	00203310 jz 0x0020335c
		0020335c: CONDITIONAL_JUMP
		00203318: FALL_THROUGH

	[00203318]
		00203310: FALL_THROUGH
 	00203318 push ax
 	00203320 mov mar,0x10002c
 	0020332c memread4 ax
 	00203334 lnot ax
 	0020333c pop bx
 	00203344 land bx,ax
 	00203350 mov ax,bx
		0020335c: FALL_THROUGH

	[0020335c]
		00203310: CONDITIONAL_JUMP
		00203318: FALL_THROUGH
 	0020335c jz 0x002033ac
		002033ac: CONDITIONAL_JUMP
		00203364: FALL_THROUGH

	[00203364]
		0020335c: FALL_THROUGH
 	00203364 mov ax,0x1
 	00203370 mov mar,0x100008
 	0020337c memwrite4 ax
 	00203384 mov ax,0x9
 	00203390 mov mar,0x1000b4
 	0020339c memwrite4 ax
 	002033a4 jmp 0x00205324
		00205324: UNCONDITIONAL_JUMP

	[002033ac]
		0020335c: CONDITIONAL_JUMP
 	002033ac sourceline 0x2da4
 	002033b4 mov mar,0x100000
 	002033c0 memread4 ax
 	002033c8 jz 0x0020340c
		0020340c: CONDITIONAL_JUMP
		002033d0: FALL_THROUGH

	[002033d0]
		002033ac: FALL_THROUGH
 	002033d0 push ax
 	002033d8 mov mar,0x100004
 	002033e4 memread4 ax
 	002033ec pop bx
 	002033f4 land bx,ax
 	00203400 mov ax,bx
		0020340c: FALL_THROUGH

	[0020340c]
		002033ac: CONDITIONAL_JUMP
		002033d0: FALL_THROUGH
 	0020340c jz 0x00203450
		00203450: CONDITIONAL_JUMP
		00203414: FALL_THROUGH

	[00203414]
		0020340c: FALL_THROUGH
 	00203414 push ax
 	0020341c mov mar,0x100008
 	00203428 memread4 ax
 	00203430 pop bx
 	00203438 land bx,ax
 	00203444 mov ax,bx
		00203450: FALL_THROUGH

	[00203450]
		0020340c: CONDITIONAL_JUMP
		00203414: FALL_THROUGH
 	00203450 jz 0x0020349c
		0020349c: CONDITIONAL_JUMP
		00203458: FALL_THROUGH

	[00203458]
		00203450: FALL_THROUGH
 	00203458 push ax
 	00203460 mov mar,0x10000c
 	0020346c memread4 ax
 	00203474 lnot ax
 	0020347c pop bx
 	00203484 land bx,ax
 	00203490 mov ax,bx
		0020349c: FALL_THROUGH

	[0020349c]
		00203450: CONDITIONAL_JUMP
		00203458: FALL_THROUGH
 	0020349c jz 0x002034e8
		002034e8: CONDITIONAL_JUMP
		002034a4: FALL_THROUGH

	[002034a4]
		0020349c: FALL_THROUGH
 	002034a4 push ax
 	002034ac mov mar,0x100010
 	002034b8 memread4 ax
 	002034c0 lnot ax
 	002034c8 pop bx
 	002034d0 land bx,ax
 	002034dc mov ax,bx
		002034e8: FALL_THROUGH

	[002034e8]
		0020349c: CONDITIONAL_JUMP
		002034a4: FALL_THROUGH
 	002034e8 jz 0x00203534
		00203534: CONDITIONAL_JUMP
		002034f0: FALL_THROUGH

	[002034f0]
		002034e8: FALL_THROUGH
 	002034f0 push ax
 	002034f8 mov mar,0x100014
 	00203504 memread4 ax
 	0020350c lnot ax
 	00203514 pop bx
 	0020351c land bx,ax
 	00203528 mov ax,bx
		00203534: FALL_THROUGH

	[00203534]
		002034e8: CONDITIONAL_JUMP
		002034f0: FALL_THROUGH
 	00203534 jz 0x00203580
		00203580: CONDITIONAL_JUMP
		0020353c: FALL_THROUGH

	[0020353c]
		00203534: FALL_THROUGH
 	0020353c push ax
 	00203544 mov mar,0x100018
 	00203550 memread4 ax
 	00203558 lnot ax
 	00203560 pop bx
 	00203568 land bx,ax
 	00203574 mov ax,bx
		00203580: FALL_THROUGH

	[00203580]
		00203534: CONDITIONAL_JUMP
		0020353c: FALL_THROUGH
 	00203580 jz 0x002035cc
		002035cc: CONDITIONAL_JUMP
		00203588: FALL_THROUGH

	[00203588]
		00203580: FALL_THROUGH
 	00203588 push ax
 	00203590 mov mar,0x10001c
 	0020359c memread4 ax
 	002035a4 lnot ax
 	002035ac pop bx
 	002035b4 land bx,ax
 	002035c0 mov ax,bx
		002035cc: FALL_THROUGH

	[002035cc]
		00203580: CONDITIONAL_JUMP
		00203588: FALL_THROUGH
 	002035cc jz 0x00203618
		00203618: CONDITIONAL_JUMP
		002035d4: FALL_THROUGH

	[002035d4]
		002035cc: FALL_THROUGH
 	002035d4 push ax
 	002035dc mov mar,0x100020
 	002035e8 memread4 ax
 	002035f0 lnot ax
 	002035f8 pop bx
 	00203600 land bx,ax
 	0020360c mov ax,bx
		00203618: FALL_THROUGH

	[00203618]
		002035cc: CONDITIONAL_JUMP
		002035d4: FALL_THROUGH
 	00203618 jz 0x00203664
		00203664: CONDITIONAL_JUMP
		00203620: FALL_THROUGH

	[00203620]
		00203618: FALL_THROUGH
 	00203620 push ax
 	00203628 mov mar,0x100024
 	00203634 memread4 ax
 	0020363c lnot ax
 	00203644 pop bx
 	0020364c land bx,ax
 	00203658 mov ax,bx
		00203664: FALL_THROUGH

	[00203664]
		00203618: CONDITIONAL_JUMP
		00203620: FALL_THROUGH
 	00203664 jz 0x002036b0
		002036b0: CONDITIONAL_JUMP
		0020366c: FALL_THROUGH

	[0020366c]
		00203664: FALL_THROUGH
 	0020366c push ax
 	00203674 mov mar,0x100028
 	00203680 memread4 ax
 	00203688 lnot ax
 	00203690 pop bx
 	00203698 land bx,ax
 	002036a4 mov ax,bx
		002036b0: FALL_THROUGH

	[002036b0]
		00203664: CONDITIONAL_JUMP
		0020366c: FALL_THROUGH
 	002036b0 jz 0x002036fc
		002036fc: CONDITIONAL_JUMP
		002036b8: FALL_THROUGH

	[002036b8]
		002036b0: FALL_THROUGH
 	002036b8 push ax
 	002036c0 mov mar,0x10002c
 	002036cc memread4 ax
 	002036d4 lnot ax
 	002036dc pop bx
 	002036e4 land bx,ax
 	002036f0 mov ax,bx
		002036fc: FALL_THROUGH

	[002036fc]
		002036b0: CONDITIONAL_JUMP
		002036b8: FALL_THROUGH
 	002036fc jz 0x0020374c
		0020374c: CONDITIONAL_JUMP
		00203704: FALL_THROUGH

	[00203704]
		002036fc: FALL_THROUGH
 	00203704 mov ax,0x1
 	00203710 mov mar,0x10000c
 	0020371c memwrite4 ax
 	00203724 mov ax,0x9
 	00203730 mov mar,0x1000b8
 	0020373c memwrite4 ax
 	00203744 jmp 0x00205324
		00205324: UNCONDITIONAL_JUMP

	[0020374c]
		002036fc: CONDITIONAL_JUMP
 	0020374c sourceline 0x2da9
 	00203754 mov mar,0x100000
 	00203760 memread4 ax
 	00203768 jz 0x002037ac
		002037ac: CONDITIONAL_JUMP
		00203770: FALL_THROUGH

	[00203770]
		0020374c: FALL_THROUGH
 	00203770 push ax
 	00203778 mov mar,0x100004
 	00203784 memread4 ax
 	0020378c pop bx
 	00203794 land bx,ax
 	002037a0 mov ax,bx
		002037ac: FALL_THROUGH

	[002037ac]
		0020374c: CONDITIONAL_JUMP
		00203770: FALL_THROUGH
 	002037ac jz 0x002037f0
		002037f0: CONDITIONAL_JUMP
		002037b4: FALL_THROUGH

	[002037b4]
		002037ac: FALL_THROUGH
 	002037b4 push ax
 	002037bc mov mar,0x100008
 	002037c8 memread4 ax
 	002037d0 pop bx
 	002037d8 land bx,ax
 	002037e4 mov ax,bx
		002037f0: FALL_THROUGH

	[002037f0]
		002037ac: CONDITIONAL_JUMP
		002037b4: FALL_THROUGH
 	002037f0 jz 0x00203834
		00203834: CONDITIONAL_JUMP
		002037f8: FALL_THROUGH

	[002037f8]
		002037f0: FALL_THROUGH
 	002037f8 push ax
 	00203800 mov mar,0x10000c
 	0020380c memread4 ax
 	00203814 pop bx
 	0020381c land bx,ax
 	00203828 mov ax,bx
		00203834: FALL_THROUGH

	[00203834]
		002037f0: CONDITIONAL_JUMP
		002037f8: FALL_THROUGH
 	00203834 jz 0x00203880
		00203880: CONDITIONAL_JUMP
		0020383c: FALL_THROUGH

	[0020383c]
		00203834: FALL_THROUGH
 	0020383c push ax
 	00203844 mov mar,0x100010
 	00203850 memread4 ax
 	00203858 lnot ax
 	00203860 pop bx
 	00203868 land bx,ax
 	00203874 mov ax,bx
		00203880: FALL_THROUGH

	[00203880]
		00203834: CONDITIONAL_JUMP
		0020383c: FALL_THROUGH
 	00203880 jz 0x002038cc
		002038cc: CONDITIONAL_JUMP
		00203888: FALL_THROUGH

	[00203888]
		00203880: FALL_THROUGH
 	00203888 push ax
 	00203890 mov mar,0x100014
 	0020389c memread4 ax
 	002038a4 lnot ax
 	002038ac pop bx
 	002038b4 land bx,ax
 	002038c0 mov ax,bx
		002038cc: FALL_THROUGH

	[002038cc]
		00203880: CONDITIONAL_JUMP
		00203888: FALL_THROUGH
 	002038cc jz 0x00203918
		00203918: CONDITIONAL_JUMP
		002038d4: FALL_THROUGH

	[002038d4]
		002038cc: FALL_THROUGH
 	002038d4 push ax
 	002038dc mov mar,0x100018
 	002038e8 memread4 ax
 	002038f0 lnot ax
 	002038f8 pop bx
 	00203900 land bx,ax
 	0020390c mov ax,bx
		00203918: FALL_THROUGH

	[00203918]
		002038cc: CONDITIONAL_JUMP
		002038d4: FALL_THROUGH
 	00203918 jz 0x00203964
		00203964: CONDITIONAL_JUMP
		00203920: FALL_THROUGH

	[00203920]
		00203918: FALL_THROUGH
 	00203920 push ax
 	00203928 mov mar,0x10001c
 	00203934 memread4 ax
 	0020393c lnot ax
 	00203944 pop bx
 	0020394c land bx,ax
 	00203958 mov ax,bx
		00203964: FALL_THROUGH

	[00203964]
		00203918: CONDITIONAL_JUMP
		00203920: FALL_THROUGH
 	00203964 jz 0x002039b0
		002039b0: CONDITIONAL_JUMP
		0020396c: FALL_THROUGH

	[0020396c]
		00203964: FALL_THROUGH
 	0020396c push ax
 	00203974 mov mar,0x100020
 	00203980 memread4 ax
 	00203988 lnot ax
 	00203990 pop bx
 	00203998 land bx,ax
 	002039a4 mov ax,bx
		002039b0: FALL_THROUGH

	[002039b0]
		00203964: CONDITIONAL_JUMP
		0020396c: FALL_THROUGH
 	002039b0 jz 0x002039fc
		002039fc: CONDITIONAL_JUMP
		002039b8: FALL_THROUGH

	[002039b8]
		002039b0: FALL_THROUGH
 	002039b8 push ax
 	002039c0 mov mar,0x100024
 	002039cc memread4 ax
 	002039d4 lnot ax
 	002039dc pop bx
 	002039e4 land bx,ax
 	002039f0 mov ax,bx
		002039fc: FALL_THROUGH

	[002039fc]
		002039b0: CONDITIONAL_JUMP
		002039b8: FALL_THROUGH
 	002039fc jz 0x00203a48
		00203a48: CONDITIONAL_JUMP
		00203a04: FALL_THROUGH

	[00203a04]
		002039fc: FALL_THROUGH
 	00203a04 push ax
 	00203a0c mov mar,0x100028
 	00203a18 memread4 ax
 	00203a20 lnot ax
 	00203a28 pop bx
 	00203a30 land bx,ax
 	00203a3c mov ax,bx
		00203a48: FALL_THROUGH

	[00203a48]
		002039fc: CONDITIONAL_JUMP
		00203a04: FALL_THROUGH
 	00203a48 jz 0x00203a94
		00203a94: CONDITIONAL_JUMP
		00203a50: FALL_THROUGH

	[00203a50]
		00203a48: FALL_THROUGH
 	00203a50 push ax
 	00203a58 mov mar,0x10002c
 	00203a64 memread4 ax
 	00203a6c lnot ax
 	00203a74 pop bx
 	00203a7c land bx,ax
 	00203a88 mov ax,bx
		00203a94: FALL_THROUGH

	[00203a94]
		00203a48: CONDITIONAL_JUMP
		00203a50: FALL_THROUGH
 	00203a94 jz 0x00203ae4
		00203ae4: CONDITIONAL_JUMP
		00203a9c: FALL_THROUGH

	[00203a9c]
		00203a94: FALL_THROUGH
 	00203a9c mov ax,0x1
 	00203aa8 mov mar,0x100010
 	00203ab4 memwrite4 ax
 	00203abc mov ax,0x9
 	00203ac8 mov mar,0x1000bc
 	00203ad4 memwrite4 ax
 	00203adc jmp 0x00205324
		00205324: UNCONDITIONAL_JUMP

	[00203ae4]
		00203a94: CONDITIONAL_JUMP
 	00203ae4 sourceline 0x2dae
 	00203aec mov mar,0x100000
 	00203af8 memread4 ax
 	00203b00 jz 0x00203b44
		00203b44: CONDITIONAL_JUMP
		00203b08: FALL_THROUGH

	[00203b08]
		00203ae4: FALL_THROUGH
 	00203b08 push ax
 	00203b10 mov mar,0x100004
 	00203b1c memread4 ax
 	00203b24 pop bx
 	00203b2c land bx,ax
 	00203b38 mov ax,bx
		00203b44: FALL_THROUGH

	[00203b44]
		00203ae4: CONDITIONAL_JUMP
		00203b08: FALL_THROUGH
 	00203b44 jz 0x00203b88
		00203b88: CONDITIONAL_JUMP
		00203b4c: FALL_THROUGH

	[00203b4c]
		00203b44: FALL_THROUGH
 	00203b4c push ax
 	00203b54 mov mar,0x100008
 	00203b60 memread4 ax
 	00203b68 pop bx
 	00203b70 land bx,ax
 	00203b7c mov ax,bx
		00203b88: FALL_THROUGH

	[00203b88]
		00203b44: CONDITIONAL_JUMP
		00203b4c: FALL_THROUGH
 	00203b88 jz 0x00203bcc
		00203bcc: CONDITIONAL_JUMP
		00203b90: FALL_THROUGH

	[00203b90]
		00203b88: FALL_THROUGH
 	00203b90 push ax
 	00203b98 mov mar,0x10000c
 	00203ba4 memread4 ax
 	00203bac pop bx
 	00203bb4 land bx,ax
 	00203bc0 mov ax,bx
		00203bcc: FALL_THROUGH

	[00203bcc]
		00203b88: CONDITIONAL_JUMP
		00203b90: FALL_THROUGH
 	00203bcc jz 0x00203c10
		00203c10: CONDITIONAL_JUMP
		00203bd4: FALL_THROUGH

	[00203bd4]
		00203bcc: FALL_THROUGH
 	00203bd4 push ax
 	00203bdc mov mar,0x100010
 	00203be8 memread4 ax
 	00203bf0 pop bx
 	00203bf8 land bx,ax
 	00203c04 mov ax,bx
		00203c10: FALL_THROUGH

	[00203c10]
		00203bcc: CONDITIONAL_JUMP
		00203bd4: FALL_THROUGH
 	00203c10 jz 0x00203c5c
		00203c5c: CONDITIONAL_JUMP
		00203c18: FALL_THROUGH

	[00203c18]
		00203c10: FALL_THROUGH
 	00203c18 push ax
 	00203c20 mov mar,0x100014
 	00203c2c memread4 ax
 	00203c34 lnot ax
 	00203c3c pop bx
 	00203c44 land bx,ax
 	00203c50 mov ax,bx
		00203c5c: FALL_THROUGH

	[00203c5c]
		00203c10: CONDITIONAL_JUMP
		00203c18: FALL_THROUGH
 	00203c5c jz 0x00203ca8
		00203ca8: CONDITIONAL_JUMP
		00203c64: FALL_THROUGH

	[00203c64]
		00203c5c: FALL_THROUGH
 	00203c64 push ax
 	00203c6c mov mar,0x100018
 	00203c78 memread4 ax
 	00203c80 lnot ax
 	00203c88 pop bx
 	00203c90 land bx,ax
 	00203c9c mov ax,bx
		00203ca8: FALL_THROUGH

	[00203ca8]
		00203c5c: CONDITIONAL_JUMP
		00203c64: FALL_THROUGH
 	00203ca8 jz 0x00203cf4
		00203cf4: CONDITIONAL_JUMP
		00203cb0: FALL_THROUGH

	[00203cb0]
		00203ca8: FALL_THROUGH
 	00203cb0 push ax
 	00203cb8 mov mar,0x10001c
 	00203cc4 memread4 ax
 	00203ccc lnot ax
 	00203cd4 pop bx
 	00203cdc land bx,ax
 	00203ce8 mov ax,bx
		00203cf4: FALL_THROUGH

	[00203cf4]
		00203ca8: CONDITIONAL_JUMP
		00203cb0: FALL_THROUGH
 	00203cf4 jz 0x00203d40
		00203d40: CONDITIONAL_JUMP
		00203cfc: FALL_THROUGH

	[00203cfc]
		00203cf4: FALL_THROUGH
 	00203cfc push ax
 	00203d04 mov mar,0x100020
 	00203d10 memread4 ax
 	00203d18 lnot ax
 	00203d20 pop bx
 	00203d28 land bx,ax
 	00203d34 mov ax,bx
		00203d40: FALL_THROUGH

	[00203d40]
		00203cf4: CONDITIONAL_JUMP
		00203cfc: FALL_THROUGH
 	00203d40 jz 0x00203d8c
		00203d8c: CONDITIONAL_JUMP
		00203d48: FALL_THROUGH

	[00203d48]
		00203d40: FALL_THROUGH
 	00203d48 push ax
 	00203d50 mov mar,0x100024
 	00203d5c memread4 ax
 	00203d64 lnot ax
 	00203d6c pop bx
 	00203d74 land bx,ax
 	00203d80 mov ax,bx
		00203d8c: FALL_THROUGH

	[00203d8c]
		00203d40: CONDITIONAL_JUMP
		00203d48: FALL_THROUGH
 	00203d8c jz 0x00203dd8
		00203dd8: CONDITIONAL_JUMP
		00203d94: FALL_THROUGH

	[00203d94]
		00203d8c: FALL_THROUGH
 	00203d94 push ax
 	00203d9c mov mar,0x100028
 	00203da8 memread4 ax
 	00203db0 lnot ax
 	00203db8 pop bx
 	00203dc0 land bx,ax
 	00203dcc mov ax,bx
		00203dd8: FALL_THROUGH

	[00203dd8]
		00203d8c: CONDITIONAL_JUMP
		00203d94: FALL_THROUGH
 	00203dd8 jz 0x00203e24
		00203e24: CONDITIONAL_JUMP
		00203de0: FALL_THROUGH

	[00203de0]
		00203dd8: FALL_THROUGH
 	00203de0 push ax
 	00203de8 mov mar,0x10002c
 	00203df4 memread4 ax
 	00203dfc lnot ax
 	00203e04 pop bx
 	00203e0c land bx,ax
 	00203e18 mov ax,bx
		00203e24: FALL_THROUGH

	[00203e24]
		00203dd8: CONDITIONAL_JUMP
		00203de0: FALL_THROUGH
 	00203e24 jz 0x00203e74
		00203e74: CONDITIONAL_JUMP
		00203e2c: FALL_THROUGH

	[00203e2c]
		00203e24: FALL_THROUGH
 	00203e2c mov ax,0x1
 	00203e38 mov mar,0x100014
 	00203e44 memwrite4 ax
 	00203e4c mov ax,0x9
 	00203e58 mov mar,0x1000c0
 	00203e64 memwrite4 ax
 	00203e6c jmp 0x00205324
		00205324: UNCONDITIONAL_JUMP

	[00203e74]
		00203e24: CONDITIONAL_JUMP
 	00203e74 sourceline 0x2db3
 	00203e7c mov mar,0x100000
 	00203e88 memread4 ax
 	00203e90 jz 0x00203ed4
		00203ed4: CONDITIONAL_JUMP
		00203e98: FALL_THROUGH

	[00203e98]
		00203e74: FALL_THROUGH
 	00203e98 push ax
 	00203ea0 mov mar,0x100004
 	00203eac memread4 ax
 	00203eb4 pop bx
 	00203ebc land bx,ax
 	00203ec8 mov ax,bx
		00203ed4: FALL_THROUGH

	[00203ed4]
		00203e74: CONDITIONAL_JUMP
		00203e98: FALL_THROUGH
 	00203ed4 jz 0x00203f18
		00203f18: CONDITIONAL_JUMP
		00203edc: FALL_THROUGH

	[00203edc]
		00203ed4: FALL_THROUGH
 	00203edc push ax
 	00203ee4 mov mar,0x100008
 	00203ef0 memread4 ax
 	00203ef8 pop bx
 	00203f00 land bx,ax
 	00203f0c mov ax,bx
		00203f18: FALL_THROUGH

	[00203f18]
		00203ed4: CONDITIONAL_JUMP
		00203edc: FALL_THROUGH
 	00203f18 jz 0x00203f5c
		00203f5c: CONDITIONAL_JUMP
		00203f20: FALL_THROUGH

	[00203f20]
		00203f18: FALL_THROUGH
 	00203f20 push ax
 	00203f28 mov mar,0x10000c
 	00203f34 memread4 ax
 	00203f3c pop bx
 	00203f44 land bx,ax
 	00203f50 mov ax,bx
		00203f5c: FALL_THROUGH

	[00203f5c]
		00203f18: CONDITIONAL_JUMP
		00203f20: FALL_THROUGH
 	00203f5c jz 0x00203fa0
		00203fa0: CONDITIONAL_JUMP
		00203f64: FALL_THROUGH

	[00203f64]
		00203f5c: FALL_THROUGH
 	00203f64 push ax
 	00203f6c mov mar,0x100010
 	00203f78 memread4 ax
 	00203f80 pop bx
 	00203f88 land bx,ax
 	00203f94 mov ax,bx
		00203fa0: FALL_THROUGH

	[00203fa0]
		00203f5c: CONDITIONAL_JUMP
		00203f64: FALL_THROUGH
 	00203fa0 jz 0x00203fe4
		00203fe4: CONDITIONAL_JUMP
		00203fa8: FALL_THROUGH

	[00203fa8]
		00203fa0: FALL_THROUGH
 	00203fa8 push ax
 	00203fb0 mov mar,0x100014
 	00203fbc memread4 ax
 	00203fc4 pop bx
 	00203fcc land bx,ax
 	00203fd8 mov ax,bx
		00203fe4: FALL_THROUGH

	[00203fe4]
		00203fa0: CONDITIONAL_JUMP
		00203fa8: FALL_THROUGH
 	00203fe4 jz 0x00204030
		00204030: CONDITIONAL_JUMP
		00203fec: FALL_THROUGH

	[00203fec]
		00203fe4: FALL_THROUGH
 	00203fec push ax
 	00203ff4 mov mar,0x100018
 	00204000 memread4 ax
 	00204008 lnot ax
 	00204010 pop bx
 	00204018 land bx,ax
 	00204024 mov ax,bx
		00204030: FALL_THROUGH

	[00204030]
		00203fe4: CONDITIONAL_JUMP
		00203fec: FALL_THROUGH
 	00204030 jz 0x0020407c
		0020407c: CONDITIONAL_JUMP
		00204038: FALL_THROUGH

	[00204038]
		00204030: FALL_THROUGH
 	00204038 push ax
 	00204040 mov mar,0x10001c
 	0020404c memread4 ax
 	00204054 lnot ax
 	0020405c pop bx
 	00204064 land bx,ax
 	00204070 mov ax,bx
		0020407c: FALL_THROUGH

	[0020407c]
		00204030: CONDITIONAL_JUMP
		00204038: FALL_THROUGH
 	0020407c jz 0x002040c8
		002040c8: CONDITIONAL_JUMP
		00204084: FALL_THROUGH

	[00204084]
		0020407c: FALL_THROUGH
 	00204084 push ax
 	0020408c mov mar,0x100020
 	00204098 memread4 ax
 	002040a0 lnot ax
 	002040a8 pop bx
 	002040b0 land bx,ax
 	002040bc mov ax,bx
		002040c8: FALL_THROUGH

	[002040c8]
		0020407c: CONDITIONAL_JUMP
		00204084: FALL_THROUGH
 	002040c8 jz 0x00204114
		00204114: CONDITIONAL_JUMP
		002040d0: FALL_THROUGH

	[002040d0]
		002040c8: FALL_THROUGH
 	002040d0 push ax
 	002040d8 mov mar,0x100024
 	002040e4 memread4 ax
 	002040ec lnot ax
 	002040f4 pop bx
 	002040fc land bx,ax
 	00204108 mov ax,bx
		00204114: FALL_THROUGH

	[00204114]
		002040c8: CONDITIONAL_JUMP
		002040d0: FALL_THROUGH
 	00204114 jz 0x00204160
		00204160: CONDITIONAL_JUMP
		0020411c: FALL_THROUGH

	[0020411c]
		00204114: FALL_THROUGH
 	0020411c push ax
 	00204124 mov mar,0x100028
 	00204130 memread4 ax
 	00204138 lnot ax
 	00204140 pop bx
 	00204148 land bx,ax
 	00204154 mov ax,bx
		00204160: FALL_THROUGH

	[00204160]
		00204114: CONDITIONAL_JUMP
		0020411c: FALL_THROUGH
 	00204160 jz 0x002041ac
		002041ac: CONDITIONAL_JUMP
		00204168: FALL_THROUGH

	[00204168]
		00204160: FALL_THROUGH
 	00204168 push ax
 	00204170 mov mar,0x10002c
 	0020417c memread4 ax
 	00204184 lnot ax
 	0020418c pop bx
 	00204194 land bx,ax
 	002041a0 mov ax,bx
		002041ac: FALL_THROUGH

	[002041ac]
		00204160: CONDITIONAL_JUMP
		00204168: FALL_THROUGH
 	002041ac jz 0x002041fc
		002041fc: CONDITIONAL_JUMP
		002041b4: FALL_THROUGH

	[002041b4]
		002041ac: FALL_THROUGH
 	002041b4 mov ax,0x1
 	002041c0 mov mar,0x100018
 	002041cc memwrite4 ax
 	002041d4 mov ax,0x9
 	002041e0 mov mar,0x1000c4
 	002041ec memwrite4 ax
 	002041f4 jmp 0x00205324
		00205324: UNCONDITIONAL_JUMP

	[002041fc]
		002041ac: CONDITIONAL_JUMP
 	002041fc sourceline 0x2db8
 	00204204 mov mar,0x100000
 	00204210 memread4 ax
 	00204218 jz 0x0020425c
		0020425c: CONDITIONAL_JUMP
		00204220: FALL_THROUGH

	[00204220]
		002041fc: FALL_THROUGH
 	00204220 push ax
 	00204228 mov mar,0x100004
 	00204234 memread4 ax
 	0020423c pop bx
 	00204244 land bx,ax
 	00204250 mov ax,bx
		0020425c: FALL_THROUGH

	[0020425c]
		002041fc: CONDITIONAL_JUMP
		00204220: FALL_THROUGH
 	0020425c jz 0x002042a0
		002042a0: CONDITIONAL_JUMP
		00204264: FALL_THROUGH

	[00204264]
		0020425c: FALL_THROUGH
 	00204264 push ax
 	0020426c mov mar,0x100008
 	00204278 memread4 ax
 	00204280 pop bx
 	00204288 land bx,ax
 	00204294 mov ax,bx
		002042a0: FALL_THROUGH

	[002042a0]
		0020425c: CONDITIONAL_JUMP
		00204264: FALL_THROUGH
 	002042a0 jz 0x002042e4
		002042e4: CONDITIONAL_JUMP
		002042a8: FALL_THROUGH

	[002042a8]
		002042a0: FALL_THROUGH
 	002042a8 push ax
 	002042b0 mov mar,0x10000c
 	002042bc memread4 ax
 	002042c4 pop bx
 	002042cc land bx,ax
 	002042d8 mov ax,bx
		002042e4: FALL_THROUGH

	[002042e4]
		002042a0: CONDITIONAL_JUMP
		002042a8: FALL_THROUGH
 	002042e4 jz 0x00204328
		00204328: CONDITIONAL_JUMP
		002042ec: FALL_THROUGH

	[002042ec]
		002042e4: FALL_THROUGH
 	002042ec push ax
 	002042f4 mov mar,0x100010
 	00204300 memread4 ax
 	00204308 pop bx
 	00204310 land bx,ax
 	0020431c mov ax,bx
		00204328: FALL_THROUGH

	[00204328]
		002042e4: CONDITIONAL_JUMP
		002042ec: FALL_THROUGH
 	00204328 jz 0x0020436c
		0020436c: CONDITIONAL_JUMP
		00204330: FALL_THROUGH

	[00204330]
		00204328: FALL_THROUGH
 	00204330 push ax
 	00204338 mov mar,0x100014
 	00204344 memread4 ax
 	0020434c pop bx
 	00204354 land bx,ax
 	00204360 mov ax,bx
		0020436c: FALL_THROUGH

	[0020436c]
		00204328: CONDITIONAL_JUMP
		00204330: FALL_THROUGH
 	0020436c jz 0x002043b0
		002043b0: CONDITIONAL_JUMP
		00204374: FALL_THROUGH

	[00204374]
		0020436c: FALL_THROUGH
 	00204374 push ax
 	0020437c mov mar,0x100018
 	00204388 memread4 ax
 	00204390 pop bx
 	00204398 land bx,ax
 	002043a4 mov ax,bx
		002043b0: FALL_THROUGH

	[002043b0]
		0020436c: CONDITIONAL_JUMP
		00204374: FALL_THROUGH
 	002043b0 jz 0x002043fc
		002043fc: CONDITIONAL_JUMP
		002043b8: FALL_THROUGH

	[002043b8]
		002043b0: FALL_THROUGH
 	002043b8 push ax
 	002043c0 mov mar,0x10001c
 	002043cc memread4 ax
 	002043d4 lnot ax
 	002043dc pop bx
 	002043e4 land bx,ax
 	002043f0 mov ax,bx
		002043fc: FALL_THROUGH

	[002043fc]
		002043b0: CONDITIONAL_JUMP
		002043b8: FALL_THROUGH
 	002043fc jz 0x00204448
		00204448: CONDITIONAL_JUMP
		00204404: FALL_THROUGH

	[00204404]
		002043fc: FALL_THROUGH
 	00204404 push ax
 	0020440c mov mar,0x100020
 	00204418 memread4 ax
 	00204420 lnot ax
 	00204428 pop bx
 	00204430 land bx,ax
 	0020443c mov ax,bx
		00204448: FALL_THROUGH

	[00204448]
		002043fc: CONDITIONAL_JUMP
		00204404: FALL_THROUGH
 	00204448 jz 0x00204494
		00204494: CONDITIONAL_JUMP
		00204450: FALL_THROUGH

	[00204450]
		00204448: FALL_THROUGH
 	00204450 push ax
 	00204458 mov mar,0x100024
 	00204464 memread4 ax
 	0020446c lnot ax
 	00204474 pop bx
 	0020447c land bx,ax
 	00204488 mov ax,bx
		00204494: FALL_THROUGH

	[00204494]
		00204448: CONDITIONAL_JUMP
		00204450: FALL_THROUGH
 	00204494 jz 0x002044e0
		002044e0: CONDITIONAL_JUMP
		0020449c: FALL_THROUGH

	[0020449c]
		00204494: FALL_THROUGH
 	0020449c push ax
 	002044a4 mov mar,0x100028
 	002044b0 memread4 ax
 	002044b8 lnot ax
 	002044c0 pop bx
 	002044c8 land bx,ax
 	002044d4 mov ax,bx
		002044e0: FALL_THROUGH

	[002044e0]
		00204494: CONDITIONAL_JUMP
		0020449c: FALL_THROUGH
 	002044e0 jz 0x0020452c
		0020452c: CONDITIONAL_JUMP
		002044e8: FALL_THROUGH

	[002044e8]
		002044e0: FALL_THROUGH
 	002044e8 push ax
 	002044f0 mov mar,0x10002c
 	002044fc memread4 ax
 	00204504 lnot ax
 	0020450c pop bx
 	00204514 land bx,ax
 	00204520 mov ax,bx
		0020452c: FALL_THROUGH

	[0020452c]
		002044e0: CONDITIONAL_JUMP
		002044e8: FALL_THROUGH
 	0020452c jz 0x0020457c
		0020457c: CONDITIONAL_JUMP
		00204534: FALL_THROUGH

	[00204534]
		0020452c: FALL_THROUGH
 	00204534 mov ax,0x1
 	00204540 mov mar,0x10001c
 	0020454c memwrite4 ax
 	00204554 mov ax,0x9
 	00204560 mov mar,0x1000c8
 	0020456c memwrite4 ax
 	00204574 jmp 0x00205324
		00205324: UNCONDITIONAL_JUMP

	[0020457c]
		0020452c: CONDITIONAL_JUMP
 	0020457c sourceline 0x2dbd
 	00204584 mov mar,0x100000
 	00204590 memread4 ax
 	00204598 jz 0x002045dc
		002045dc: CONDITIONAL_JUMP
		002045a0: FALL_THROUGH

	[002045a0]
		0020457c: FALL_THROUGH
 	002045a0 push ax
 	002045a8 mov mar,0x100004
 	002045b4 memread4 ax
 	002045bc pop bx
 	002045c4 land bx,ax
 	002045d0 mov ax,bx
		002045dc: FALL_THROUGH

	[002045dc]
		0020457c: CONDITIONAL_JUMP
		002045a0: FALL_THROUGH
 	002045dc jz 0x00204620
		00204620: CONDITIONAL_JUMP
		002045e4: FALL_THROUGH

	[002045e4]
		002045dc: FALL_THROUGH
 	002045e4 push ax
 	002045ec mov mar,0x100008
 	002045f8 memread4 ax
 	00204600 pop bx
 	00204608 land bx,ax
 	00204614 mov ax,bx
		00204620: FALL_THROUGH

	[00204620]
		002045dc: CONDITIONAL_JUMP
		002045e4: FALL_THROUGH
 	00204620 jz 0x00204664
		00204664: CONDITIONAL_JUMP
		00204628: FALL_THROUGH

	[00204628]
		00204620: FALL_THROUGH
 	00204628 push ax
 	00204630 mov mar,0x10000c
 	0020463c memread4 ax
 	00204644 pop bx
 	0020464c land bx,ax
 	00204658 mov ax,bx
		00204664: FALL_THROUGH

	[00204664]
		00204620: CONDITIONAL_JUMP
		00204628: FALL_THROUGH
 	00204664 jz 0x002046a8
		002046a8: CONDITIONAL_JUMP
		0020466c: FALL_THROUGH

	[0020466c]
		00204664: FALL_THROUGH
 	0020466c push ax
 	00204674 mov mar,0x100010
 	00204680 memread4 ax
 	00204688 pop bx
 	00204690 land bx,ax
 	0020469c mov ax,bx
		002046a8: FALL_THROUGH

	[002046a8]
		00204664: CONDITIONAL_JUMP
		0020466c: FALL_THROUGH
 	002046a8 jz 0x002046ec
		002046ec: CONDITIONAL_JUMP
		002046b0: FALL_THROUGH

	[002046b0]
		002046a8: FALL_THROUGH
 	002046b0 push ax
 	002046b8 mov mar,0x100014
 	002046c4 memread4 ax
 	002046cc pop bx
 	002046d4 land bx,ax
 	002046e0 mov ax,bx
		002046ec: FALL_THROUGH

	[002046ec]
		002046a8: CONDITIONAL_JUMP
		002046b0: FALL_THROUGH
 	002046ec jz 0x00204730
		00204730: CONDITIONAL_JUMP
		002046f4: FALL_THROUGH

	[002046f4]
		002046ec: FALL_THROUGH
 	002046f4 push ax
 	002046fc mov mar,0x100018
 	00204708 memread4 ax
 	00204710 pop bx
 	00204718 land bx,ax
 	00204724 mov ax,bx
		00204730: FALL_THROUGH

	[00204730]
		002046ec: CONDITIONAL_JUMP
		002046f4: FALL_THROUGH
 	00204730 jz 0x00204774
		00204774: CONDITIONAL_JUMP
		00204738: FALL_THROUGH

	[00204738]
		00204730: FALL_THROUGH
 	00204738 push ax
 	00204740 mov mar,0x10001c
 	0020474c memread4 ax
 	00204754 pop bx
 	0020475c land bx,ax
 	00204768 mov ax,bx
		00204774: FALL_THROUGH

	[00204774]
		00204730: CONDITIONAL_JUMP
		00204738: FALL_THROUGH
 	00204774 jz 0x002047c0
		002047c0: CONDITIONAL_JUMP
		0020477c: FALL_THROUGH

	[0020477c]
		00204774: FALL_THROUGH
 	0020477c push ax
 	00204784 mov mar,0x100020
 	00204790 memread4 ax
 	00204798 lnot ax
 	002047a0 pop bx
 	002047a8 land bx,ax
 	002047b4 mov ax,bx
		002047c0: FALL_THROUGH

	[002047c0]
		00204774: CONDITIONAL_JUMP
		0020477c: FALL_THROUGH
 	002047c0 jz 0x0020480c
		0020480c: CONDITIONAL_JUMP
		002047c8: FALL_THROUGH

	[002047c8]
		002047c0: FALL_THROUGH
 	002047c8 push ax
 	002047d0 mov mar,0x100024
 	002047dc memread4 ax
 	002047e4 lnot ax
 	002047ec pop bx
 	002047f4 land bx,ax
 	00204800 mov ax,bx
		0020480c: FALL_THROUGH

	[0020480c]
		002047c0: CONDITIONAL_JUMP
		002047c8: FALL_THROUGH
 	0020480c jz 0x00204858
		00204858: CONDITIONAL_JUMP
		00204814: FALL_THROUGH

	[00204814]
		0020480c: FALL_THROUGH
 	00204814 push ax
 	0020481c mov mar,0x100028
 	00204828 memread4 ax
 	00204830 lnot ax
 	00204838 pop bx
 	00204840 land bx,ax
 	0020484c mov ax,bx
		00204858: FALL_THROUGH

	[00204858]
		0020480c: CONDITIONAL_JUMP
		00204814: FALL_THROUGH
 	00204858 jz 0x002048a4
		002048a4: CONDITIONAL_JUMP
		00204860: FALL_THROUGH

	[00204860]
		00204858: FALL_THROUGH
 	00204860 push ax
 	00204868 mov mar,0x10002c
 	00204874 memread4 ax
 	0020487c lnot ax
 	00204884 pop bx
 	0020488c land bx,ax
 	00204898 mov ax,bx
		002048a4: FALL_THROUGH

	[002048a4]
		00204858: CONDITIONAL_JUMP
		00204860: FALL_THROUGH
 	002048a4 jz 0x002048f4
		002048f4: CONDITIONAL_JUMP
		002048ac: FALL_THROUGH

	[002048ac]
		002048a4: FALL_THROUGH
 	002048ac mov ax,0x1
 	002048b8 mov mar,0x100020
 	002048c4 memwrite4 ax
 	002048cc mov ax,0x9
 	002048d8 mov mar,0x1000cc
 	002048e4 memwrite4 ax
 	002048ec jmp 0x00205324
		00205324: UNCONDITIONAL_JUMP

	[002048f4]
		002048a4: CONDITIONAL_JUMP
 	002048f4 sourceline 0x2dc2
 	002048fc mov mar,0x100000
 	00204908 memread4 ax
 	00204910 jz 0x00204954
		00204954: CONDITIONAL_JUMP
		00204918: FALL_THROUGH

	[00204918]
		002048f4: FALL_THROUGH
 	00204918 push ax
 	00204920 mov mar,0x100004
 	0020492c memread4 ax
 	00204934 pop bx
 	0020493c land bx,ax
 	00204948 mov ax,bx
		00204954: FALL_THROUGH

	[00204954]
		002048f4: CONDITIONAL_JUMP
		00204918: FALL_THROUGH
 	00204954 jz 0x00204998
		00204998: CONDITIONAL_JUMP
		0020495c: FALL_THROUGH

	[0020495c]
		00204954: FALL_THROUGH
 	0020495c push ax
 	00204964 mov mar,0x100008
 	00204970 memread4 ax
 	00204978 pop bx
 	00204980 land bx,ax
 	0020498c mov ax,bx
		00204998: FALL_THROUGH

	[00204998]
		00204954: CONDITIONAL_JUMP
		0020495c: FALL_THROUGH
 	00204998 jz 0x002049dc
		002049dc: CONDITIONAL_JUMP
		002049a0: FALL_THROUGH

	[002049a0]
		00204998: FALL_THROUGH
 	002049a0 push ax
 	002049a8 mov mar,0x10000c
 	002049b4 memread4 ax
 	002049bc pop bx
 	002049c4 land bx,ax
 	002049d0 mov ax,bx
		002049dc: FALL_THROUGH

	[002049dc]
		00204998: CONDITIONAL_JUMP
		002049a0: FALL_THROUGH
 	002049dc jz 0x00204a20
		00204a20: CONDITIONAL_JUMP
		002049e4: FALL_THROUGH

	[002049e4]
		002049dc: FALL_THROUGH
 	002049e4 push ax
 	002049ec mov mar,0x100010
 	002049f8 memread4 ax
 	00204a00 pop bx
 	00204a08 land bx,ax
 	00204a14 mov ax,bx
		00204a20: FALL_THROUGH

	[00204a20]
		002049dc: CONDITIONAL_JUMP
		002049e4: FALL_THROUGH
 	00204a20 jz 0x00204a64
		00204a64: CONDITIONAL_JUMP
		00204a28: FALL_THROUGH

	[00204a28]
		00204a20: FALL_THROUGH
 	00204a28 push ax
 	00204a30 mov mar,0x100014
 	00204a3c memread4 ax
 	00204a44 pop bx
 	00204a4c land bx,ax
 	00204a58 mov ax,bx
		00204a64: FALL_THROUGH

	[00204a64]
		00204a20: CONDITIONAL_JUMP
		00204a28: FALL_THROUGH
 	00204a64 jz 0x00204aa8
		00204aa8: CONDITIONAL_JUMP
		00204a6c: FALL_THROUGH

	[00204a6c]
		00204a64: FALL_THROUGH
 	00204a6c push ax
 	00204a74 mov mar,0x100018
 	00204a80 memread4 ax
 	00204a88 pop bx
 	00204a90 land bx,ax
 	00204a9c mov ax,bx
		00204aa8: FALL_THROUGH

	[00204aa8]
		00204a64: CONDITIONAL_JUMP
		00204a6c: FALL_THROUGH
 	00204aa8 jz 0x00204aec
		00204aec: CONDITIONAL_JUMP
		00204ab0: FALL_THROUGH

	[00204ab0]
		00204aa8: FALL_THROUGH
 	00204ab0 push ax
 	00204ab8 mov mar,0x10001c
 	00204ac4 memread4 ax
 	00204acc pop bx
 	00204ad4 land bx,ax
 	00204ae0 mov ax,bx
		00204aec: FALL_THROUGH

	[00204aec]
		00204aa8: CONDITIONAL_JUMP
		00204ab0: FALL_THROUGH
 	00204aec jz 0x00204b30
		00204b30: CONDITIONAL_JUMP
		00204af4: FALL_THROUGH

	[00204af4]
		00204aec: FALL_THROUGH
 	00204af4 push ax
 	00204afc mov mar,0x100020
 	00204b08 memread4 ax
 	00204b10 pop bx
 	00204b18 land bx,ax
 	00204b24 mov ax,bx
		00204b30: FALL_THROUGH

	[00204b30]
		00204aec: CONDITIONAL_JUMP
		00204af4: FALL_THROUGH
 	00204b30 jz 0x00204b7c
		00204b7c: CONDITIONAL_JUMP
		00204b38: FALL_THROUGH

	[00204b38]
		00204b30: FALL_THROUGH
 	00204b38 push ax
 	00204b40 mov mar,0x100024
 	00204b4c memread4 ax
 	00204b54 lnot ax
 	00204b5c pop bx
 	00204b64 land bx,ax
 	00204b70 mov ax,bx
		00204b7c: FALL_THROUGH

	[00204b7c]
		00204b30: CONDITIONAL_JUMP
		00204b38: FALL_THROUGH
 	00204b7c jz 0x00204bc8
		00204bc8: CONDITIONAL_JUMP
		00204b84: FALL_THROUGH

	[00204b84]
		00204b7c: FALL_THROUGH
 	00204b84 push ax
 	00204b8c mov mar,0x100028
 	00204b98 memread4 ax
 	00204ba0 lnot ax
 	00204ba8 pop bx
 	00204bb0 land bx,ax
 	00204bbc mov ax,bx
		00204bc8: FALL_THROUGH

	[00204bc8]
		00204b7c: CONDITIONAL_JUMP
		00204b84: FALL_THROUGH
 	00204bc8 jz 0x00204c14
		00204c14: CONDITIONAL_JUMP
		00204bd0: FALL_THROUGH

	[00204bd0]
		00204bc8: FALL_THROUGH
 	00204bd0 push ax
 	00204bd8 mov mar,0x10002c
 	00204be4 memread4 ax
 	00204bec lnot ax
 	00204bf4 pop bx
 	00204bfc land bx,ax
 	00204c08 mov ax,bx
		00204c14: FALL_THROUGH

	[00204c14]
		00204bc8: CONDITIONAL_JUMP
		00204bd0: FALL_THROUGH
 	00204c14 jz 0x00204c64
		00204c64: CONDITIONAL_JUMP
		00204c1c: FALL_THROUGH

	[00204c1c]
		00204c14: FALL_THROUGH
 	00204c1c mov ax,0x1
 	00204c28 mov mar,0x100024
 	00204c34 memwrite4 ax
 	00204c3c mov ax,0x9
 	00204c48 mov mar,0x1000d0
 	00204c54 memwrite4 ax
 	00204c5c jmp 0x00205324
		00205324: UNCONDITIONAL_JUMP

	[00204c64]
		00204c14: CONDITIONAL_JUMP
 	00204c64 sourceline 0x2dc7
 	00204c6c mov mar,0x100000
 	00204c78 memread4 ax
 	00204c80 jz 0x00204cc4
		00204cc4: CONDITIONAL_JUMP
		00204c88: FALL_THROUGH

	[00204c88]
		00204c64: FALL_THROUGH
 	00204c88 push ax
 	00204c90 mov mar,0x100004
 	00204c9c memread4 ax
 	00204ca4 pop bx
 	00204cac land bx,ax
 	00204cb8 mov ax,bx
		00204cc4: FALL_THROUGH

	[00204cc4]
		00204c64: CONDITIONAL_JUMP
		00204c88: FALL_THROUGH
 	00204cc4 jz 0x00204d08
		00204d08: CONDITIONAL_JUMP
		00204ccc: FALL_THROUGH

	[00204ccc]
		00204cc4: FALL_THROUGH
 	00204ccc push ax
 	00204cd4 mov mar,0x100008
 	00204ce0 memread4 ax
 	00204ce8 pop bx
 	00204cf0 land bx,ax
 	00204cfc mov ax,bx
		00204d08: FALL_THROUGH

	[00204d08]
		00204cc4: CONDITIONAL_JUMP
		00204ccc: FALL_THROUGH
 	00204d08 jz 0x00204d4c
		00204d4c: CONDITIONAL_JUMP
		00204d10: FALL_THROUGH

	[00204d10]
		00204d08: FALL_THROUGH
 	00204d10 push ax
 	00204d18 mov mar,0x10000c
 	00204d24 memread4 ax
 	00204d2c pop bx
 	00204d34 land bx,ax
 	00204d40 mov ax,bx
		00204d4c: FALL_THROUGH

	[00204d4c]
		00204d08: CONDITIONAL_JUMP
		00204d10: FALL_THROUGH
 	00204d4c jz 0x00204d90
		00204d90: CONDITIONAL_JUMP
		00204d54: FALL_THROUGH

	[00204d54]
		00204d4c: FALL_THROUGH
 	00204d54 push ax
 	00204d5c mov mar,0x100010
 	00204d68 memread4 ax
 	00204d70 pop bx
 	00204d78 land bx,ax
 	00204d84 mov ax,bx
		00204d90: FALL_THROUGH

	[00204d90]
		00204d4c: CONDITIONAL_JUMP
		00204d54: FALL_THROUGH
 	00204d90 jz 0x00204dd4
		00204dd4: CONDITIONAL_JUMP
		00204d98: FALL_THROUGH

	[00204d98]
		00204d90: FALL_THROUGH
 	00204d98 push ax
 	00204da0 mov mar,0x100014
 	00204dac memread4 ax
 	00204db4 pop bx
 	00204dbc land bx,ax
 	00204dc8 mov ax,bx
		00204dd4: FALL_THROUGH

	[00204dd4]
		00204d90: CONDITIONAL_JUMP
		00204d98: FALL_THROUGH
 	00204dd4 jz 0x00204e18
		00204e18: CONDITIONAL_JUMP
		00204ddc: FALL_THROUGH

	[00204ddc]
		00204dd4: FALL_THROUGH
 	00204ddc push ax
 	00204de4 mov mar,0x100018
 	00204df0 memread4 ax
 	00204df8 pop bx
 	00204e00 land bx,ax
 	00204e0c mov ax,bx
		00204e18: FALL_THROUGH

	[00204e18]
		00204dd4: CONDITIONAL_JUMP
		00204ddc: FALL_THROUGH
 	00204e18 jz 0x00204e5c
		00204e5c: CONDITIONAL_JUMP
		00204e20: FALL_THROUGH

	[00204e20]
		00204e18: FALL_THROUGH
 	00204e20 push ax
 	00204e28 mov mar,0x10001c
 	00204e34 memread4 ax
 	00204e3c pop bx
 	00204e44 land bx,ax
 	00204e50 mov ax,bx
		00204e5c: FALL_THROUGH

	[00204e5c]
		00204e18: CONDITIONAL_JUMP
		00204e20: FALL_THROUGH
 	00204e5c jz 0x00204ea0
		00204ea0: CONDITIONAL_JUMP
		00204e64: FALL_THROUGH

	[00204e64]
		00204e5c: FALL_THROUGH
 	00204e64 push ax
 	00204e6c mov mar,0x100020
 	00204e78 memread4 ax
 	00204e80 pop bx
 	00204e88 land bx,ax
 	00204e94 mov ax,bx
		00204ea0: FALL_THROUGH

	[00204ea0]
		00204e5c: CONDITIONAL_JUMP
		00204e64: FALL_THROUGH
 	00204ea0 jz 0x00204ee4
		00204ee4: CONDITIONAL_JUMP
		00204ea8: FALL_THROUGH

	[00204ea8]
		00204ea0: FALL_THROUGH
 	00204ea8 push ax
 	00204eb0 mov mar,0x100024
 	00204ebc memread4 ax
 	00204ec4 pop bx
 	00204ecc land bx,ax
 	00204ed8 mov ax,bx
		00204ee4: FALL_THROUGH

	[00204ee4]
		00204ea0: CONDITIONAL_JUMP
		00204ea8: FALL_THROUGH
 	00204ee4 jz 0x00204f30
		00204f30: CONDITIONAL_JUMP
		00204eec: FALL_THROUGH

	[00204eec]
		00204ee4: FALL_THROUGH
 	00204eec push ax
 	00204ef4 mov mar,0x100028
 	00204f00 memread4 ax
 	00204f08 lnot ax
 	00204f10 pop bx
 	00204f18 land bx,ax
 	00204f24 mov ax,bx
		00204f30: FALL_THROUGH

	[00204f30]
		00204ee4: CONDITIONAL_JUMP
		00204eec: FALL_THROUGH
 	00204f30 jz 0x00204f7c
		00204f7c: CONDITIONAL_JUMP
		00204f38: FALL_THROUGH

	[00204f38]
		00204f30: FALL_THROUGH
 	00204f38 push ax
 	00204f40 mov mar,0x10002c
 	00204f4c memread4 ax
 	00204f54 lnot ax
 	00204f5c pop bx
 	00204f64 land bx,ax
 	00204f70 mov ax,bx
		00204f7c: FALL_THROUGH

	[00204f7c]
		00204f30: CONDITIONAL_JUMP
		00204f38: FALL_THROUGH
 	00204f7c jz 0x00204fcc
		00204fcc: CONDITIONAL_JUMP
		00204f84: FALL_THROUGH

	[00204f84]
		00204f7c: FALL_THROUGH
 	00204f84 mov ax,0x1
 	00204f90 mov mar,0x100028
 	00204f9c memwrite4 ax
 	00204fa4 mov ax,0x9
 	00204fb0 mov mar,0x1000d4
 	00204fbc memwrite4 ax
 	00204fc4 jmp 0x00205324
		00205324: UNCONDITIONAL_JUMP

	[00204fcc]
		00204f7c: CONDITIONAL_JUMP
 	00204fcc sourceline 0x2dcc
 	00204fd4 mov mar,0x100000
 	00204fe0 memread4 ax
 	00204fe8 jz 0x0020502c
		0020502c: CONDITIONAL_JUMP
		00204ff0: FALL_THROUGH

	[00204ff0]
		00204fcc: FALL_THROUGH
 	00204ff0 push ax
 	00204ff8 mov mar,0x100004
 	00205004 memread4 ax
 	0020500c pop bx
 	00205014 land bx,ax
 	00205020 mov ax,bx
		0020502c: FALL_THROUGH

	[0020502c]
		00204fcc: CONDITIONAL_JUMP
		00204ff0: FALL_THROUGH
 	0020502c jz 0x00205070
		00205070: CONDITIONAL_JUMP
		00205034: FALL_THROUGH

	[00205034]
		0020502c: FALL_THROUGH
 	00205034 push ax
 	0020503c mov mar,0x100008
 	00205048 memread4 ax
 	00205050 pop bx
 	00205058 land bx,ax
 	00205064 mov ax,bx
		00205070: FALL_THROUGH

	[00205070]
		0020502c: CONDITIONAL_JUMP
		00205034: FALL_THROUGH
 	00205070 jz 0x002050b4
		002050b4: CONDITIONAL_JUMP
		00205078: FALL_THROUGH

	[00205078]
		00205070: FALL_THROUGH
 	00205078 push ax
 	00205080 mov mar,0x10000c
 	0020508c memread4 ax
 	00205094 pop bx
 	0020509c land bx,ax
 	002050a8 mov ax,bx
		002050b4: FALL_THROUGH

	[002050b4]
		00205070: CONDITIONAL_JUMP
		00205078: FALL_THROUGH
 	002050b4 jz 0x002050f8
		002050f8: CONDITIONAL_JUMP
		002050bc: FALL_THROUGH

	[002050bc]
		002050b4: FALL_THROUGH
 	002050bc push ax
 	002050c4 mov mar,0x100010
 	002050d0 memread4 ax
 	002050d8 pop bx
 	002050e0 land bx,ax
 	002050ec mov ax,bx
		002050f8: FALL_THROUGH

	[002050f8]
		002050b4: CONDITIONAL_JUMP
		002050bc: FALL_THROUGH
 	002050f8 jz 0x0020513c
		0020513c: CONDITIONAL_JUMP
		00205100: FALL_THROUGH

	[00205100]
		002050f8: FALL_THROUGH
 	00205100 push ax
 	00205108 mov mar,0x100014
 	00205114 memread4 ax
 	0020511c pop bx
 	00205124 land bx,ax
 	00205130 mov ax,bx
		0020513c: FALL_THROUGH

	[0020513c]
		002050f8: CONDITIONAL_JUMP
		00205100: FALL_THROUGH
 	0020513c jz 0x00205180
		00205180: CONDITIONAL_JUMP
		00205144: FALL_THROUGH

	[00205144]
		0020513c: FALL_THROUGH
 	00205144 push ax
 	0020514c mov mar,0x100018
 	00205158 memread4 ax
 	00205160 pop bx
 	00205168 land bx,ax
 	00205174 mov ax,bx
		00205180: FALL_THROUGH

	[00205180]
		0020513c: CONDITIONAL_JUMP
		00205144: FALL_THROUGH
 	00205180 jz 0x002051c4
		002051c4: CONDITIONAL_JUMP
		00205188: FALL_THROUGH

	[00205188]
		00205180: FALL_THROUGH
 	00205188 push ax
 	00205190 mov mar,0x10001c
 	0020519c memread4 ax
 	002051a4 pop bx
 	002051ac land bx,ax
 	002051b8 mov ax,bx
		002051c4: FALL_THROUGH

	[002051c4]
		00205180: CONDITIONAL_JUMP
		00205188: FALL_THROUGH
 	002051c4 jz 0x00205208
		00205208: CONDITIONAL_JUMP
		002051cc: FALL_THROUGH

	[002051cc]
		002051c4: FALL_THROUGH
 	002051cc push ax
 	002051d4 mov mar,0x100020
 	002051e0 memread4 ax
 	002051e8 pop bx
 	002051f0 land bx,ax
 	002051fc mov ax,bx
		00205208: FALL_THROUGH

	[00205208]
		002051c4: CONDITIONAL_JUMP
		002051cc: FALL_THROUGH
 	00205208 jz 0x0020524c
		0020524c: CONDITIONAL_JUMP
		00205210: FALL_THROUGH

	[00205210]
		00205208: FALL_THROUGH
 	00205210 push ax
 	00205218 mov mar,0x100024
 	00205224 memread4 ax
 	0020522c pop bx
 	00205234 land bx,ax
 	00205240 mov ax,bx
		0020524c: FALL_THROUGH

	[0020524c]
		00205208: CONDITIONAL_JUMP
		00205210: FALL_THROUGH
 	0020524c jz 0x00205290
		00205290: CONDITIONAL_JUMP
		00205254: FALL_THROUGH

	[00205254]
		0020524c: FALL_THROUGH
 	00205254 push ax
 	0020525c mov mar,0x100028
 	00205268 memread4 ax
 	00205270 pop bx
 	00205278 land bx,ax
 	00205284 mov ax,bx
		00205290: FALL_THROUGH

	[00205290]
		0020524c: CONDITIONAL_JUMP
		00205254: FALL_THROUGH
 	00205290 jz 0x002052dc
		002052dc: CONDITIONAL_JUMP
		00205298: FALL_THROUGH

	[00205298]
		00205290: FALL_THROUGH
 	00205298 push ax
 	002052a0 mov mar,0x10002c
 	002052ac memread4 ax
 	002052b4 lnot ax
 	002052bc pop bx
 	002052c4 land bx,ax
 	002052d0 mov ax,bx
		002052dc: FALL_THROUGH

	[002052dc]
		00205290: CONDITIONAL_JUMP
		00205298: FALL_THROUGH
 	002052dc jz 0x00205324
		00205324: CONDITIONAL_JUMP
		002052e4: FALL_THROUGH

	[002052e4]
		002052dc: FALL_THROUGH
 	002052e4 mov ax,0x1
 	002052f0 mov mar,0x10002c
 	002052fc memwrite4 ax
 	00205304 mov ax,0x9
 	00205310 mov mar,0x1000d8
 	0020531c memwrite4 ax
		00205324: FALL_THROUGH

	[00205324]
		00202c0c: UNCONDITIONAL_JUMP
		00202fbc: UNCONDITIONAL_JUMP
		00203364: UNCONDITIONAL_JUMP
		00203704: UNCONDITIONAL_JUMP
		00203a9c: UNCONDITIONAL_JUMP
		00203e2c: UNCONDITIONAL_JUMP
		002041b4: UNCONDITIONAL_JUMP
		00204534: UNCONDITIONAL_JUMP
		002048ac: UNCONDITIONAL_JUMP
		00204c1c: UNCONDITIONAL_JUMP
		00204f84: UNCONDITIONAL_JUMP
		002052dc: CONDITIONAL_JUMP
		002052e4: FALL_THROUGH
 	00205324 sourceline 0x2dd0
 	0020532c jmp 0x00205488
		00205488: UNCONDITIONAL_JUMP

	[00205334]
		00202840: CONDITIONAL_JUMP
 	00205334 sourceline 0x2dd3
 	0020533c mov mar,0x32ef20
 	00205348 memread4 ax
 	00205350 lnot ax
 	00205358 jz 0x00205488
		00205488: CONDITIONAL_JUMP
		00205360: FALL_THROUGH

	[00205360]
		00205334: FALL_THROUGH
 	00205360 sourceline 0x2dd5
 	00205368 mov ax,0x1
 	00205374 mov bx,ax
 	00205380 mov mar,0x3cef20
 	0020538c mov ax,mar
 	00205398 push op
 	002053a0 mov op,ax
 	002053a8 farpush bx
 	002053b0 setfuncargs 0x1
 	002053b8 mov ax,0x69ef20
 	002053c4 farcall ax
 	002053cc farsubsp 0x1
 	002053d4 pop op
 	002053dc sourceline 0x2dd6
 	002053e4 push op
 	002053ec mov ax,0x2c77e7
 	002053f8 farpush ax
 	00205400 mov ax,0x138
 	0020540c farpush ax
 	00205414 mov ax,0x92
 	00205420 farpush ax
 	00205428 mov ax,0x0
 	00205434 farpush ax
 	0020543c mov mar,0x3cef20
 	00205448 mov ax,mar
 	00205454 mov op,ax
 	0020545c setfuncargs 0x4
 	00205464 mov ax,0x6aef20
 	00205470 farcall ax
 	00205478 farsubsp 0x4
 	00205480 pop op
		00205488: FALL_THROUGH

	[00205488]
		00202714: CONDITIONAL_JUMP
		00205324: UNCONDITIONAL_JUMP
		00205334: CONDITIONAL_JUMP
		00205360: FALL_THROUGH
 	00205488 sourceline 0x2dda
 	00205490 stackptr 0xc
 	00205498 memread4 ax
 	002054a0 push ax
 	002054a8 mov ax,0x2
 	002054b4 pop bx
 	002054bc cmpeq bx,ax
 	002054c8 mov ax,bx
 	002054d4 jz 0x00205694
		00205694: CONDITIONAL_JUMP
		002054dc: FALL_THROUGH

	[002054dc]
		00205488: FALL_THROUGH
 	002054dc sourceline 0x2ddc
 	002054e4 mov mar,0x626f20
 	002054f0 mov ax,mar
 	002054fc push op
 	00205504 mov op,ax
 	0020550c setfuncargs 0x0
 	00205514 mov ax,0x606f20
 	00205520 farcall ax
 	00205528 pop op
 	00205530 lnot ax
 	00205538 jz 0x00205694
		00205694: CONDITIONAL_JUMP
		00205540: FALL_THROUGH

	[00205540]
		002054dc: FALL_THROUGH
 	00205540 sourceline 0x2dde
 	00205548 mov mar,0x32ef20
 	00205554 memread4 ax
 	0020555c lnot ax
 	00205564 jz 0x00205694
		00205694: CONDITIONAL_JUMP
		0020556c: FALL_THROUGH

	[0020556c]
		00205540: FALL_THROUGH
 	0020556c sourceline 0x2de0
 	00205574 mov ax,0x1
 	00205580 mov bx,ax
 	0020558c mov mar,0x3cef20
 	00205598 mov ax,mar
 	002055a4 push op
 	002055ac mov op,ax
 	002055b4 farpush bx
 	002055bc setfuncargs 0x1
 	002055c4 mov ax,0x69ef20
 	002055d0 farcall ax
 	002055d8 farsubsp 0x1
 	002055e0 pop op
 	002055e8 sourceline 0x2de1
 	002055f0 push op
 	002055f8 mov ax,0x2c7835
 	00205604 farpush ax
 	0020560c mov ax,0x138
 	00205618 farpush ax
 	00205620 mov ax,0x92
 	0020562c farpush ax
 	00205634 mov ax,0x0
 	00205640 farpush ax
 	00205648 mov mar,0x3cef20
 	00205654 mov ax,mar
 	00205660 mov op,ax
 	00205668 setfuncargs 0x4
 	00205670 mov ax,0x6aef20
 	0020567c farcall ax
 	00205684 farsubsp 0x4
 	0020568c pop op
		00205694: FALL_THROUGH

	[00205694]
		00205488: CONDITIONAL_JUMP
		002054dc: CONDITIONAL_JUMP
		00205540: CONDITIONAL_JUMP
		0020556c: FALL_THROUGH
 	00205694 sourceline 0x2de5
 	0020569c mov ax,0x0
 	002056a8 stackptr 0x8
 	002056b0 memzerond
 	002056b4 ret

game_start$0:
	[002056b8]
 	002056b8 sourceline 0x2ded
 	002056c0 thisaddr
 	002056c8 sourceline 0x2dee
 	002056d0 mov ax,0x5
 	002056dc mov bx,ax
 	002056e8 mov ax,0x0
 	002056f4 farpush bx
 	002056fc setfuncargs 0x1
 	00205704 mov ax,0x1096f20
 	00205710 farcall ax
 	00205718 farsubsp 0x1
 	00205720 sourceline 0x2def
 	00205728 mov ax,0x92
 	00205734 mov bx,ax
 	00205740 mov ax,0x0
 	0020574c farpush bx
 	00205754 setfuncargs 0x1
 	0020575c mov ax,0x109ef20
 	00205768 farcall ax
 	00205770 farsubsp 0x1
 	00205778 sourceline 0x2df0
 	00205780 mov ax,0x1
 	0020578c mov bx,ax
 	00205798 mov ax,0x0
 	002057a4 farpush bx
 	002057ac setfuncargs 0x1
 	002057b4 mov ax,0x10a6f20
 	002057c0 farcall ax
 	002057c8 farsubsp 0x1
 	002057d0 sourceline 0x2df1
 	002057d8 mov ax,0x1
 	002057e4 mov bx,ax
 	002057f0 mov ax,0x0
 	002057fc farpush bx
 	00205804 setfuncargs 0x1
 	0020580c mov ax,0x10aef20
 	00205818 farcall ax
 	00205820 farsubsp 0x1
 	00205828 sourceline 0x2df3
 	00205830 mov ax,0x3
 	0020583c mov bx,ax
 	00205848 mov ax,0x0
 	00205854 farpush bx
 	0020585c setfuncargs 0x1
 	00205864 mov ax,0x10b6f20
 	00205870 farcall ax
 	00205878 farsubsp 0x1
 	00205880 sourceline 0x2df6
 	00205888 mov ax,0x0
 	00205894 farpush ax
 	0020589c mov ax,0x1f
 	002058a8 farpush ax
 	002058b0 setfuncargs 0x2
 	002058b8 mov ax,0x10bef20
 	002058c4 farcall ax
 	002058cc farsubsp 0x2
 	002058d4 sourceline 0x2df8
 	002058dc mov ax,0x5
*	002058e8 mov mar,0x10c6f20
 	002058f4 add mar,0xf4
 	00205900 memwrite4 ax
 	00205908 sourceline 0x2dfa
 	00205910 mov ax,0x9d58
 	0020591c mov mar,0x10c6f20
 	00205928 add mar,0x200
 	00205934 memwrite4 ax
 	0020593c sourceline 0x2dfe
 	00205944 push op
 	0020594c mov ax,0x7cfe
 	00205958 farpush ax
 	00205960 mov mar,0xf16f20
 	0020596c mov ax,mar
 	00205978 farpush ax
 	00205980 mov mar,0x81ef20
 	0020598c mov ax,mar
 	00205998 mov op,ax
 	002059a0 setfuncargs 0x2
 	002059a8 mov ax,0x7e6f20
 	002059b4 farcall ax
 	002059bc farsubsp 0x2
 	002059c4 pop op
 	002059cc sourceline 0x2dff
 	002059d4 push op
 	002059dc mov ax,0x7cfe
 	002059e8 farpush ax
 	002059f0 mov mar,0xf36f20
 	002059fc mov ax,mar
 	00205a08 farpush ax
 	00205a10 mov mar,0x81ef20
 	00205a1c mov ax,mar
 	00205a28 mov op,ax
 	00205a30 setfuncargs 0x2
 	00205a38 mov ax,0x7e6f20
 	00205a44 farcall ax
 	00205a4c farsubsp 0x2
 	00205a54 pop op
 	00205a5c sourceline 0x2e01
 	00205a64 mov ax,0x0
 	00205a70 mov bx,ax
 	00205a7c mov mar,0x7b6f20
 	00205a88 mov ax,mar
 	00205a94 push op
 	00205a9c mov op,ax
 	00205aa4 farpush bx
 	00205aac setfuncargs 0x1
 	00205ab4 mov ax,0x5cef20
 	00205ac0 farcall ax
 	00205ac8 farsubsp 0x1
 	00205ad0 pop op
 	00205ad8 sourceline 0x2e02
 	00205ae0 mov ax,0x0
 	00205aec mov bx,ax
 	00205af8 mov mar,0x7bef20
 	00205b04 mov ax,mar
 	00205b10 push op
 	00205b18 mov op,ax
 	00205b20 farpush bx
 	00205b28 setfuncargs 0x1
 	00205b30 mov ax,0x5cef20
 	00205b3c farcall ax
 	00205b44 farsubsp 0x1
 	00205b4c pop op
 	00205b54 sourceline 0x2e04
 	00205b5c mov ax,0x1
 	00205b68 farpush ax
 	00205b70 mov ax,0x1b
 	00205b7c farpush ax
 	00205b84 setfuncargs 0x2
 	00205b8c mov ax,0x10cef20
 	00205b98 farcall ax
 	00205ba0 farsubsp 0x2
 	00205ba8 sourceline 0x2e05
 	00205bb0 mov ax,0x1
 	00205bbc farpush ax
 	00205bc4 setfuncargs 0x1
 	00205bcc mov ax,0x10d6f20
 	00205bd8 farcall ax
 	00205be0 farsubsp 0x1
 	00205be8 sourceline 0x2e06
 	00205bf0 mov ax,0x1
 	00205bfc mov bx,ax
 	00205c08 mov ax,0x0
 	00205c14 farpush bx
 	00205c1c setfuncargs 0x1
 	00205c24 mov ax,0x10def20
 	00205c30 farcall ax
 	00205c38 farsubsp 0x1
 	00205c40 sourceline 0x2e07
 	00205c48 mov ax,0x2c787b
 	00205c54 farpush ax
 	00205c5c setfuncargs 0x1
 	00205c64 mov ax,0xf76f20
 	00205c70 farcall ax
 	00205c78 farsubsp 0x1
 	00205c80 sourceline 0x2e09
 	00205c88 push op
 	00205c90 mov mar,0x5c6f20
 	00205c9c mov ax,mar
 	00205ca8 mov op,ax
 	00205cb0 setfuncargs 0x0
 	00205cb8 mov ax,0x10e6f20
 	00205cc4 farcall ax
 	00205ccc pop op
 	00205cd4 sourceline 0x2e0a
 	00205cdc push op
 	00205ce4 mov mar,0x5e6f20
 	00205cf0 mov ax,mar
 	00205cfc mov op,ax
 	00205d04 setfuncargs 0x0
 	00205d0c mov ax,0x10e6f20
 	00205d18 farcall ax
 	00205d20 pop op
 	00205d28 sourceline 0x2e0c
 	00205d30 mov ax,0x64
 	00205d3c mov bx,ax
 	00205d48 mov mar,0x10eef20
 	00205d54 mov ax,mar
 	00205d60 push op
 	00205d68 mov op,ax
 	00205d70 farpush bx
 	00205d78 setfuncargs 0x1
 	00205d80 mov ax,0xfe6f20
 	00205d8c farcall ax
 	00205d94 farsubsp 0x1
 	00205d9c pop op
 	00205da4 sourceline 0x2e0d
 	00205dac mov ax,0x64
 	00205db8 mov bx,ax
 	00205dc4 mov mar,0x10f6f20
 	00205dd0 mov ax,mar
 	00205ddc push op
 	00205de4 mov op,ax
 	00205dec farpush bx
 	00205df4 setfuncargs 0x1
 	00205dfc mov ax,0xfe6f20
 	00205e08 farcall ax
 	00205e10 farsubsp 0x1
 	00205e18 pop op
 	00205e20 sourceline 0x2e0e
 	00205e28 mov ax,0x64
 	00205e34 mov bx,ax
 	00205e40 mov mar,0x10fef20
 	00205e4c mov ax,mar
 	00205e58 push op
 	00205e60 mov op,ax
 	00205e68 farpush bx
 	00205e70 setfuncargs 0x1
 	00205e78 mov ax,0xfe6f20
 	00205e84 farcall ax
 	00205e8c farsubsp 0x1
 	00205e94 pop op
 	00205e9c sourceline 0x2e0f
 	00205ea4 mov ax,0x64
 	00205eb0 mov bx,ax
 	00205ebc mov mar,0x1106f20
 	00205ec8 mov ax,mar
 	00205ed4 push op
 	00205edc mov op,ax
 	00205ee4 farpush bx
 	00205eec setfuncargs 0x1
 	00205ef4 mov ax,0xfe6f20
 	00205f00 farcall ax
 	00205f08 farsubsp 0x1
 	00205f10 pop op
 	00205f18 sourceline 0x2e10
 	00205f20 mov ax,0x0
 	00205f2c ret

PlayRandomSoundSumerian2Puzzle$0:
	[00205f30]
 	00205f30 sourceline 0x2e14
 	00205f38 thisaddr
 	00205f40 sourceline 0x2e15
*	00205f48 mov mar,0x110ef20
 	00205f54 mov ax,mar
 	00205f60 push op
 	00205f68 mov op,ax
 	00205f70 setfuncargs 0x0
 	00205f78 mov ax,0xf7ef20
 	00205f84 farcall ax
 	00205f8c pop op
 	00205f94 push ax
 	00205f9c mov ax,0xcb7
 	00205fa8 pop bx
 	00205fb0 cmpeq bx,ax
 	00205fbc mov ax,bx
 	00205fc8 jnz 0x00206078
		00206078: CONDITIONAL_JUMP
		00205fd0: FALL_THROUGH

	[00205fd0]
		00205f30: FALL_THROUGH
 	00205fd0 push ax
 	00205fd8 mov mar,0x1116f20
 	00205fe4 mov ax,mar
 	00205ff0 push op
 	00205ff8 mov op,ax
 	00206000 setfuncargs 0x0
 	00206008 mov ax,0xf7ef20
 	00206014 farcall ax
 	0020601c pop op
 	00206024 push ax
 	0020602c mov ax,0xcb9
 	00206038 pop bx
 	00206040 cmpeq bx,ax
 	0020604c mov ax,bx
 	00206058 pop bx
 	00206060 lor bx,ax
 	0020606c mov ax,bx
		00206078: FALL_THROUGH

	[00206078]
		00205f30: CONDITIONAL_JUMP
		00205fd0: FALL_THROUGH
 	00206078 jnz 0x00206128
		00206128: CONDITIONAL_JUMP
		00206080: FALL_THROUGH

	[00206080]
		00206078: FALL_THROUGH
 	00206080 push ax
 	00206088 mov mar,0x111ef20
 	00206094 mov ax,mar
 	002060a0 push op
 	002060a8 mov op,ax
 	002060b0 setfuncargs 0x0
 	002060b8 mov ax,0xf7ef20
 	002060c4 farcall ax
 	002060cc pop op
 	002060d4 push ax
 	002060dc mov ax,0xcbb
 	002060e8 pop bx
 	002060f0 cmpeq bx,ax
 	002060fc mov ax,bx
 	00206108 pop bx
 	00206110 lor bx,ax
 	0020611c mov ax,bx
		00206128: FALL_THROUGH

	[00206128]
		00206078: CONDITIONAL_JUMP
		00206080: FALL_THROUGH
 	00206128 jnz 0x002061d8
		002061d8: CONDITIONAL_JUMP
		00206130: FALL_THROUGH

	[00206130]
		00206128: FALL_THROUGH
 	00206130 push ax
 	00206138 mov mar,0x1126f20
 	00206144 mov ax,mar
 	00206150 push op
 	00206158 mov op,ax
 	00206160 setfuncargs 0x0
 	00206168 mov ax,0xf7ef20
 	00206174 farcall ax
 	0020617c pop op
 	00206184 push ax
 	0020618c mov ax,0xcbd
 	00206198 pop bx
 	002061a0 cmpeq bx,ax
 	002061ac mov ax,bx
 	002061b8 pop bx
 	002061c0 lor bx,ax
 	002061cc mov ax,bx
		002061d8: FALL_THROUGH

	[002061d8]
		00206128: CONDITIONAL_JUMP
		00206130: FALL_THROUGH
 	002061d8 jnz 0x00206288
		00206288: CONDITIONAL_JUMP
		002061e0: FALL_THROUGH

	[002061e0]
		002061d8: FALL_THROUGH
 	002061e0 push ax
 	002061e8 mov mar,0x112ef20
 	002061f4 mov ax,mar
 	00206200 push op
 	00206208 mov op,ax
 	00206210 setfuncargs 0x0
 	00206218 mov ax,0xf7ef20
 	00206224 farcall ax
 	0020622c pop op
 	00206234 push ax
 	0020623c mov ax,0xcbf
 	00206248 pop bx
 	00206250 cmpeq bx,ax
 	0020625c mov ax,bx
 	00206268 pop bx
 	00206270 lor bx,ax
 	0020627c mov ax,bx
		00206288: FALL_THROUGH

	[00206288]
		002061d8: CONDITIONAL_JUMP
		002061e0: FALL_THROUGH
 	00206288 jnz 0x00206338
		00206338: CONDITIONAL_JUMP
		00206290: FALL_THROUGH

	[00206290]
		00206288: FALL_THROUGH
 	00206290 push ax
 	00206298 mov mar,0x1136f20
 	002062a4 mov ax,mar
 	002062b0 push op
 	002062b8 mov op,ax
 	002062c0 setfuncargs 0x0
 	002062c8 mov ax,0xf7ef20
 	002062d4 farcall ax
 	002062dc pop op
 	002062e4 push ax
 	002062ec mov ax,0xcc1
 	002062f8 pop bx
 	00206300 cmpeq bx,ax
 	0020630c mov ax,bx
 	00206318 pop bx
 	00206320 lor bx,ax
 	0020632c mov ax,bx
		00206338: FALL_THROUGH

	[00206338]
		00206288: CONDITIONAL_JUMP
		00206290: FALL_THROUGH
 	00206338 jnz 0x002063e8
		002063e8: CONDITIONAL_JUMP
		00206340: FALL_THROUGH

	[00206340]
		00206338: FALL_THROUGH
 	00206340 push ax
 	00206348 mov mar,0x113ef20
 	00206354 mov ax,mar
 	00206360 push op
 	00206368 mov op,ax
 	00206370 setfuncargs 0x0
 	00206378 mov ax,0xf7ef20
 	00206384 farcall ax
 	0020638c pop op
 	00206394 push ax
 	0020639c mov ax,0xcc3
 	002063a8 pop bx
 	002063b0 cmpeq bx,ax
 	002063bc mov ax,bx
 	002063c8 pop bx
 	002063d0 lor bx,ax
 	002063dc mov ax,bx
		002063e8: FALL_THROUGH

	[002063e8]
		00206338: CONDITIONAL_JUMP
		00206340: FALL_THROUGH
 	002063e8 jnz 0x00206498
		00206498: CONDITIONAL_JUMP
		002063f0: FALL_THROUGH

	[002063f0]
		002063e8: FALL_THROUGH
 	002063f0 push ax
 	002063f8 mov mar,0x1146f20
 	00206404 mov ax,mar
 	00206410 push op
 	00206418 mov op,ax
 	00206420 setfuncargs 0x0
 	00206428 mov ax,0xf7ef20
 	00206434 farcall ax
 	0020643c pop op
 	00206444 push ax
 	0020644c mov ax,0xcc5
 	00206458 pop bx
 	00206460 cmpeq bx,ax
 	0020646c mov ax,bx
 	00206478 pop bx
 	00206480 lor bx,ax
 	0020648c mov ax,bx
		00206498: FALL_THROUGH

	[00206498]
		002063e8: CONDITIONAL_JUMP
		002063f0: FALL_THROUGH
 	00206498 jnz 0x00206548
		00206548: CONDITIONAL_JUMP
		002064a0: FALL_THROUGH

	[002064a0]
		00206498: FALL_THROUGH
 	002064a0 push ax
 	002064a8 mov mar,0x114ef20
 	002064b4 mov ax,mar
 	002064c0 push op
 	002064c8 mov op,ax
 	002064d0 setfuncargs 0x0
 	002064d8 mov ax,0xf7ef20
 	002064e4 farcall ax
 	002064ec pop op
 	002064f4 push ax
 	002064fc mov ax,0xcc7
 	00206508 pop bx
 	00206510 cmpeq bx,ax
 	0020651c mov ax,bx
 	00206528 pop bx
 	00206530 lor bx,ax
 	0020653c mov ax,bx
		00206548: FALL_THROUGH

	[00206548]
		00206498: CONDITIONAL_JUMP
		002064a0: FALL_THROUGH
 	00206548 jnz 0x002065f8
		002065f8: CONDITIONAL_JUMP
		00206550: FALL_THROUGH

	[00206550]
		00206548: FALL_THROUGH
 	00206550 push ax
 	00206558 mov mar,0x1156f20
 	00206564 mov ax,mar
 	00206570 push op
 	00206578 mov op,ax
 	00206580 setfuncargs 0x0
 	00206588 mov ax,0xf7ef20
 	00206594 farcall ax
 	0020659c pop op
 	002065a4 push ax
 	002065ac mov ax,0xcc9
 	002065b8 pop bx
 	002065c0 cmpeq bx,ax
 	002065cc mov ax,bx
 	002065d8 pop bx
 	002065e0 lor bx,ax
 	002065ec mov ax,bx
		002065f8: FALL_THROUGH

	[002065f8]
		00206548: CONDITIONAL_JUMP
		00206550: FALL_THROUGH
 	002065f8 jnz 0x002066a8
		002066a8: CONDITIONAL_JUMP
		00206600: FALL_THROUGH

	[00206600]
		002065f8: FALL_THROUGH
 	00206600 push ax
 	00206608 mov mar,0x115ef20
 	00206614 mov ax,mar
 	00206620 push op
 	00206628 mov op,ax
 	00206630 setfuncargs 0x0
 	00206638 mov ax,0xf7ef20
 	00206644 farcall ax
 	0020664c pop op
 	00206654 push ax
 	0020665c mov ax,0xccb
 	00206668 pop bx
 	00206670 cmpeq bx,ax
 	0020667c mov ax,bx
 	00206688 pop bx
 	00206690 lor bx,ax
 	0020669c mov ax,bx
		002066a8: FALL_THROUGH

	[002066a8]
		002065f8: CONDITIONAL_JUMP
		00206600: FALL_THROUGH
 	002066a8 jnz 0x00206758
		00206758: CONDITIONAL_JUMP
		002066b0: FALL_THROUGH

	[002066b0]
		002066a8: FALL_THROUGH
 	002066b0 push ax
 	002066b8 mov mar,0x1166f20
 	002066c4 mov ax,mar
 	002066d0 push op
 	002066d8 mov op,ax
 	002066e0 setfuncargs 0x0
 	002066e8 mov ax,0xf7ef20
 	002066f4 farcall ax
 	002066fc pop op
 	00206704 push ax
 	0020670c mov ax,0xccd
 	00206718 pop bx
 	00206720 cmpeq bx,ax
 	0020672c mov ax,bx
 	00206738 pop bx
 	00206740 lor bx,ax
 	0020674c mov ax,bx
		00206758: FALL_THROUGH

	[00206758]
		002066a8: CONDITIONAL_JUMP
		002066b0: FALL_THROUGH
 	00206758 jnz 0x00206808
		00206808: CONDITIONAL_JUMP
		00206760: FALL_THROUGH

	[00206760]
		00206758: FALL_THROUGH
 	00206760 push ax
 	00206768 mov mar,0x116ef20
 	00206774 mov ax,mar
 	00206780 push op
 	00206788 mov op,ax
 	00206790 setfuncargs 0x0
 	00206798 mov ax,0xf7ef20
 	002067a4 farcall ax
 	002067ac pop op
 	002067b4 push ax
 	002067bc mov ax,0xccf
 	002067c8 pop bx
 	002067d0 cmpeq bx,ax
 	002067dc mov ax,bx
 	002067e8 pop bx
 	002067f0 lor bx,ax
 	002067fc mov ax,bx
		00206808: FALL_THROUGH

	[00206808]
		00206758: CONDITIONAL_JUMP
		00206760: FALL_THROUGH
 	00206808 jnz 0x002068b8
		002068b8: CONDITIONAL_JUMP
		00206810: FALL_THROUGH

	[00206810]
		00206808: FALL_THROUGH
 	00206810 push ax
 	00206818 mov mar,0x1176f20
 	00206824 mov ax,mar
 	00206830 push op
 	00206838 mov op,ax
 	00206840 setfuncargs 0x0
 	00206848 mov ax,0xf7ef20
 	00206854 farcall ax
 	0020685c pop op
 	00206864 push ax
 	0020686c mov ax,0xcd1
 	00206878 pop bx
 	00206880 cmpeq bx,ax
 	0020688c mov ax,bx
 	00206898 pop bx
 	002068a0 lor bx,ax
 	002068ac mov ax,bx
		002068b8: FALL_THROUGH

	[002068b8]
		00206808: CONDITIONAL_JUMP
		00206810: FALL_THROUGH
 	002068b8 jnz 0x00206968
		00206968: CONDITIONAL_JUMP
		002068c0: FALL_THROUGH

	[002068c0]
		002068b8: FALL_THROUGH
 	002068c0 push ax
 	002068c8 mov mar,0x117ef20
 	002068d4 mov ax,mar
 	002068e0 push op
 	002068e8 mov op,ax
 	002068f0 setfuncargs 0x0
 	002068f8 mov ax,0xf7ef20
 	00206904 farcall ax
 	0020690c pop op
 	00206914 push ax
 	0020691c mov ax,0xcd3
 	00206928 pop bx
 	00206930 cmpeq bx,ax
 	0020693c mov ax,bx
 	00206948 pop bx
 	00206950 lor bx,ax
 	0020695c mov ax,bx
		00206968: FALL_THROUGH

	[00206968]
		002068b8: CONDITIONAL_JUMP
		002068c0: FALL_THROUGH
 	00206968 jnz 0x00206a18
		00206a18: CONDITIONAL_JUMP
		00206970: FALL_THROUGH

	[00206970]
		00206968: FALL_THROUGH
 	00206970 push ax
 	00206978 mov mar,0x1186f20
 	00206984 mov ax,mar
 	00206990 push op
 	00206998 mov op,ax
 	002069a0 setfuncargs 0x0
 	002069a8 mov ax,0xf7ef20
 	002069b4 farcall ax
 	002069bc pop op
 	002069c4 push ax
 	002069cc mov ax,0xcd5
 	002069d8 pop bx
 	002069e0 cmpeq bx,ax
 	002069ec mov ax,bx
 	002069f8 pop bx
 	00206a00 lor bx,ax
 	00206a0c mov ax,bx
		00206a18: FALL_THROUGH

	[00206a18]
		00206968: CONDITIONAL_JUMP
		00206970: FALL_THROUGH
 	00206a18 jnz 0x00206ac8
		00206ac8: CONDITIONAL_JUMP
		00206a20: FALL_THROUGH

	[00206a20]
		00206a18: FALL_THROUGH
 	00206a20 push ax
 	00206a28 mov mar,0x118ef20
 	00206a34 mov ax,mar
 	00206a40 push op
 	00206a48 mov op,ax
 	00206a50 setfuncargs 0x0
 	00206a58 mov ax,0xf7ef20
 	00206a64 farcall ax
 	00206a6c pop op
 	00206a74 push ax
 	00206a7c mov ax,0xcd7
 	00206a88 pop bx
 	00206a90 cmpeq bx,ax
 	00206a9c mov ax,bx
 	00206aa8 pop bx
 	00206ab0 lor bx,ax
 	00206abc mov ax,bx
		00206ac8: FALL_THROUGH

	[00206ac8]
		00206a18: CONDITIONAL_JUMP
		00206a20: FALL_THROUGH
 	00206ac8 jnz 0x00206b78
		00206b78: CONDITIONAL_JUMP
		00206ad0: FALL_THROUGH

	[00206ad0]
		00206ac8: FALL_THROUGH
 	00206ad0 push ax
 	00206ad8 mov mar,0x1196f20
 	00206ae4 mov ax,mar
 	00206af0 push op
 	00206af8 mov op,ax
 	00206b00 setfuncargs 0x0
 	00206b08 mov ax,0xf7ef20
 	00206b14 farcall ax
 	00206b1c pop op
 	00206b24 push ax
 	00206b2c mov ax,0xcd9
 	00206b38 pop bx
 	00206b40 cmpeq bx,ax
 	00206b4c mov ax,bx
 	00206b58 pop bx
 	00206b60 lor bx,ax
 	00206b6c mov ax,bx
		00206b78: FALL_THROUGH

	[00206b78]
		00206ac8: CONDITIONAL_JUMP
		00206ad0: FALL_THROUGH
 	00206b78 jz 0x00206dbc
		00206dbc: CONDITIONAL_JUMP
		00206b80: FALL_THROUGH

	[00206b80]
		00206b78: FALL_THROUGH
 	00206b80 sourceline 0x2e1b
 	00206b88 mov mar,0x119ef20
 	00206b94 memread4 ax
 	00206b9c push ax
 	00206ba4 mov ax,0x0
 	00206bb0 pop bx
 	00206bb8 cmpeq bx,ax
 	00206bc4 mov ax,bx
 	00206bd0 jz 0x00206c5c
		00206c5c: CONDITIONAL_JUMP
		00206bd8: FALL_THROUGH

	[00206bd8]
		00206b80: FALL_THROUGH
 	00206bd8 push op
 	00206be0 mov ax,0x0
 	00206bec farpush ax
 	00206bf4 mov ax,0x32
 	00206c00 farpush ax
 	00206c08 mov mar,0x11a6f20
 	00206c14 mov ax,mar
 	00206c20 mov op,ax
 	00206c28 setfuncargs 0x2
 	00206c30 mov ax,0x2fef20
 	00206c3c farcall ax
 	00206c44 farsubsp 0x2
 	00206c4c pop op
 	00206c54 jmp 0x00206dbc
		00206dbc: UNCONDITIONAL_JUMP

	[00206c5c]
		00206b80: CONDITIONAL_JUMP
 	00206c5c sourceline 0x2e1c
 	00206c64 mov mar,0x119ef20
 	00206c70 memread4 ax
 	00206c78 push ax
 	00206c80 mov ax,0x1
 	00206c8c pop bx
 	00206c94 cmpeq bx,ax
 	00206ca0 mov ax,bx
 	00206cac jz 0x00206d38
		00206d38: CONDITIONAL_JUMP
		00206cb4: FALL_THROUGH

	[00206cb4]
		00206c5c: FALL_THROUGH
 	00206cb4 push op
 	00206cbc mov ax,0x0
 	00206cc8 farpush ax
 	00206cd0 mov ax,0x32
 	00206cdc farpush ax
 	00206ce4 mov mar,0x11aef20
 	00206cf0 mov ax,mar
 	00206cfc mov op,ax
 	00206d04 setfuncargs 0x2
 	00206d0c mov ax,0x2fef20
 	00206d18 farcall ax
 	00206d20 farsubsp 0x2
 	00206d28 pop op
 	00206d30 jmp 0x00206dbc
		00206dbc: UNCONDITIONAL_JUMP

	[00206d38]
		00206c5c: CONDITIONAL_JUMP
 	00206d38 sourceline 0x2e1d
 	00206d40 push op
 	00206d48 mov ax,0x0
 	00206d54 farpush ax
 	00206d5c mov ax,0x32
 	00206d68 farpush ax
 	00206d70 mov mar,0x11b6f20
 	00206d7c mov ax,mar
 	00206d88 mov op,ax
 	00206d90 setfuncargs 0x2
 	00206d98 mov ax,0x2fef20
 	00206da4 farcall ax
 	00206dac farsubsp 0x2
 	00206db4 pop op
		00206dbc: FALL_THROUGH

	[00206dbc]
		00206b78: CONDITIONAL_JUMP
		00206bd8: UNCONDITIONAL_JUMP
		00206cb4: UNCONDITIONAL_JUMP
		00206d38: FALL_THROUGH
 	00206dbc sourceline 0x2e1f
 	00206dc4 mov ax,0x0
 	00206dd0 ret

PlayRandomSoundSumerianPuzzle$0:
	[00206dd4]
 	00206dd4 sourceline 0x2e25
 	00206ddc thisaddr
 	00206de4 sourceline 0x2e26
*	00206dec mov mar,0x11bef20
 	00206df8 mov ax,mar
 	00206e04 push op
 	00206e0c mov op,ax
 	00206e14 setfuncargs 0x0
 	00206e1c mov ax,0xf7ef20
 	00206e28 farcall ax
 	00206e30 pop op
 	00206e38 push ax
 	00206e40 mov ax,0xad4
 	00206e4c pop bx
 	00206e54 cmpeq bx,ax
 	00206e60 mov ax,bx
 	00206e6c jnz 0x00206f1c
		00206f1c: CONDITIONAL_JUMP
		00206e74: FALL_THROUGH

	[00206e74]
		00206dd4: FALL_THROUGH
 	00206e74 push ax
 	00206e7c mov mar,0x11c6f20
 	00206e88 mov ax,mar
 	00206e94 push op
 	00206e9c mov op,ax
 	00206ea4 setfuncargs 0x0
 	00206eac mov ax,0xf7ef20
 	00206eb8 farcall ax
 	00206ec0 pop op
 	00206ec8 push ax
 	00206ed0 mov ax,0xad6
 	00206edc pop bx
 	00206ee4 cmpeq bx,ax
 	00206ef0 mov ax,bx
 	00206efc pop bx
 	00206f04 lor bx,ax
 	00206f10 mov ax,bx
		00206f1c: FALL_THROUGH

	[00206f1c]
		00206dd4: CONDITIONAL_JUMP
		00206e74: FALL_THROUGH
 	00206f1c jnz 0x00206fcc
		00206fcc: CONDITIONAL_JUMP
		00206f24: FALL_THROUGH

	[00206f24]
		00206f1c: FALL_THROUGH
 	00206f24 push ax
 	00206f2c mov mar,0x11cef20
 	00206f38 mov ax,mar
 	00206f44 push op
 	00206f4c mov op,ax
 	00206f54 setfuncargs 0x0
 	00206f5c mov ax,0xf7ef20
 	00206f68 farcall ax
 	00206f70 pop op
 	00206f78 push ax
 	00206f80 mov ax,0xad8
 	00206f8c pop bx
 	00206f94 cmpeq bx,ax
 	00206fa0 mov ax,bx
 	00206fac pop bx
 	00206fb4 lor bx,ax
 	00206fc0 mov ax,bx
		00206fcc: FALL_THROUGH

	[00206fcc]
		00206f1c: CONDITIONAL_JUMP
		00206f24: FALL_THROUGH
 	00206fcc jnz 0x0020707c
		0020707c: CONDITIONAL_JUMP
		00206fd4: FALL_THROUGH

	[00206fd4]
		00206fcc: FALL_THROUGH
 	00206fd4 push ax
 	00206fdc mov mar,0x11d6f20
 	00206fe8 mov ax,mar
 	00206ff4 push op
 	00206ffc mov op,ax
 	00207004 setfuncargs 0x0
 	0020700c mov ax,0xf7ef20
 	00207018 farcall ax
 	00207020 pop op
 	00207028 push ax
 	00207030 mov ax,0xada
 	0020703c pop bx
 	00207044 cmpeq bx,ax
 	00207050 mov ax,bx
 	0020705c pop bx
 	00207064 lor bx,ax
 	00207070 mov ax,bx
		0020707c: FALL_THROUGH

	[0020707c]
		00206fcc: CONDITIONAL_JUMP
		00206fd4: FALL_THROUGH
 	0020707c jnz 0x0020712c
		0020712c: CONDITIONAL_JUMP
		00207084: FALL_THROUGH

	[00207084]
		0020707c: FALL_THROUGH
 	00207084 push ax
 	0020708c mov mar,0x11def20
 	00207098 mov ax,mar
 	002070a4 push op
 	002070ac mov op,ax
 	002070b4 setfuncargs 0x0
 	002070bc mov ax,0xf7ef20
 	002070c8 farcall ax
 	002070d0 pop op
 	002070d8 push ax
 	002070e0 mov ax,0xadc
 	002070ec pop bx
 	002070f4 cmpeq bx,ax
 	00207100 mov ax,bx
 	0020710c pop bx
 	00207114 lor bx,ax
 	00207120 mov ax,bx
		0020712c: FALL_THROUGH

	[0020712c]
		0020707c: CONDITIONAL_JUMP
		00207084: FALL_THROUGH
 	0020712c jnz 0x002071dc
		002071dc: CONDITIONAL_JUMP
		00207134: FALL_THROUGH

	[00207134]
		0020712c: FALL_THROUGH
 	00207134 push ax
 	0020713c mov mar,0x11e6f20
 	00207148 mov ax,mar
 	00207154 push op
 	0020715c mov op,ax
 	00207164 setfuncargs 0x0
 	0020716c mov ax,0xf7ef20
 	00207178 farcall ax
 	00207180 pop op
 	00207188 push ax
 	00207190 mov ax,0xade
 	0020719c pop bx
 	002071a4 cmpeq bx,ax
 	002071b0 mov ax,bx
 	002071bc pop bx
 	002071c4 lor bx,ax
 	002071d0 mov ax,bx
		002071dc: FALL_THROUGH

	[002071dc]
		0020712c: CONDITIONAL_JUMP
		00207134: FALL_THROUGH
 	002071dc jnz 0x0020728c
		0020728c: CONDITIONAL_JUMP
		002071e4: FALL_THROUGH

	[002071e4]
		002071dc: FALL_THROUGH
 	002071e4 push ax
 	002071ec mov mar,0x11eef20
 	002071f8 mov ax,mar
 	00207204 push op
 	0020720c mov op,ax
 	00207214 setfuncargs 0x0
 	0020721c mov ax,0xf7ef20
 	00207228 farcall ax
 	00207230 pop op
 	00207238 push ax
 	00207240 mov ax,0xae0
 	0020724c pop bx
 	00207254 cmpeq bx,ax
 	00207260 mov ax,bx
 	0020726c pop bx
 	00207274 lor bx,ax
 	00207280 mov ax,bx
		0020728c: FALL_THROUGH

	[0020728c]
		002071dc: CONDITIONAL_JUMP
		002071e4: FALL_THROUGH
 	0020728c jnz 0x0020733c
		0020733c: CONDITIONAL_JUMP
		00207294: FALL_THROUGH

	[00207294]
		0020728c: FALL_THROUGH
 	00207294 push ax
 	0020729c mov mar,0x11f6f20
 	002072a8 mov ax,mar
 	002072b4 push op
 	002072bc mov op,ax
 	002072c4 setfuncargs 0x0
 	002072cc mov ax,0xf7ef20
 	002072d8 farcall ax
 	002072e0 pop op
 	002072e8 push ax
 	002072f0 mov ax,0xae2
 	002072fc pop bx
 	00207304 cmpeq bx,ax
 	00207310 mov ax,bx
 	0020731c pop bx
 	00207324 lor bx,ax
 	00207330 mov ax,bx
		0020733c: FALL_THROUGH

	[0020733c]
		0020728c: CONDITIONAL_JUMP
		00207294: FALL_THROUGH
 	0020733c jnz 0x002073ec
		002073ec: CONDITIONAL_JUMP
		00207344: FALL_THROUGH

	[00207344]
		0020733c: FALL_THROUGH
 	00207344 push ax
 	0020734c mov mar,0x11fef20
 	00207358 mov ax,mar
 	00207364 push op
 	0020736c mov op,ax
 	00207374 setfuncargs 0x0
 	0020737c mov ax,0xf7ef20
 	00207388 farcall ax
 	00207390 pop op
 	00207398 push ax
 	002073a0 mov ax,0xae4
 	002073ac pop bx
 	002073b4 cmpeq bx,ax
 	002073c0 mov ax,bx
 	002073cc pop bx
 	002073d4 lor bx,ax
 	002073e0 mov ax,bx
		002073ec: FALL_THROUGH

	[002073ec]
		0020733c: CONDITIONAL_JUMP
		00207344: FALL_THROUGH
 	002073ec jnz 0x0020749c
		0020749c: CONDITIONAL_JUMP
		002073f4: FALL_THROUGH

	[002073f4]
		002073ec: FALL_THROUGH
 	002073f4 push ax
 	002073fc mov mar,0x1206f20
 	00207408 mov ax,mar
 	00207414 push op
 	0020741c mov op,ax
 	00207424 setfuncargs 0x0
 	0020742c mov ax,0xf7ef20
 	00207438 farcall ax
 	00207440 pop op
 	00207448 push ax
 	00207450 mov ax,0xae6
 	0020745c pop bx
 	00207464 cmpeq bx,ax
 	00207470 mov ax,bx
 	0020747c pop bx
 	00207484 lor bx,ax
 	00207490 mov ax,bx
		0020749c: FALL_THROUGH

	[0020749c]
		002073ec: CONDITIONAL_JUMP
		002073f4: FALL_THROUGH
 	0020749c jz 0x002076e0
		002076e0: CONDITIONAL_JUMP
		002074a4: FALL_THROUGH

	[002074a4]
		0020749c: FALL_THROUGH
 	002074a4 sourceline 0x2e2a
 	002074ac mov mar,0x120ef20
 	002074b8 memread4 ax
 	002074c0 push ax
 	002074c8 mov ax,0x0
 	002074d4 pop bx
 	002074dc cmpeq bx,ax
 	002074e8 mov ax,bx
 	002074f4 jz 0x00207580
		00207580: CONDITIONAL_JUMP
		002074fc: FALL_THROUGH

	[002074fc]
		002074a4: FALL_THROUGH
 	002074fc push op
 	00207504 mov ax,0x0
 	00207510 farpush ax
 	00207518 mov ax,0x32
 	00207524 farpush ax
 	0020752c mov mar,0x11a6f20
 	00207538 mov ax,mar
 	00207544 mov op,ax
 	0020754c setfuncargs 0x2
 	00207554 mov ax,0x2fef20
 	00207560 farcall ax
 	00207568 farsubsp 0x2
 	00207570 pop op
 	00207578 jmp 0x002076e0
		002076e0: UNCONDITIONAL_JUMP

	[00207580]
		002074a4: CONDITIONAL_JUMP
 	00207580 sourceline 0x2e2b
 	00207588 mov mar,0x120ef20
 	00207594 memread4 ax
 	0020759c push ax
 	002075a4 mov ax,0x1
 	002075b0 pop bx
 	002075b8 cmpeq bx,ax
 	002075c4 mov ax,bx
 	002075d0 jz 0x0020765c
		0020765c: CONDITIONAL_JUMP
		002075d8: FALL_THROUGH

	[002075d8]
		00207580: FALL_THROUGH
 	002075d8 push op
 	002075e0 mov ax,0x0
 	002075ec farpush ax
 	002075f4 mov ax,0x32
 	00207600 farpush ax
 	00207608 mov mar,0x11aef20
 	00207614 mov ax,mar
 	00207620 mov op,ax
 	00207628 setfuncargs 0x2
 	00207630 mov ax,0x2fef20
 	0020763c farcall ax
 	00207644 farsubsp 0x2
 	0020764c pop op
 	00207654 jmp 0x002076e0
		002076e0: UNCONDITIONAL_JUMP

	[0020765c]
		00207580: CONDITIONAL_JUMP
 	0020765c sourceline 0x2e2c
 	00207664 push op
 	0020766c mov ax,0x0
 	00207678 farpush ax
 	00207680 mov ax,0x32
 	0020768c farpush ax
 	00207694 mov mar,0x11b6f20
 	002076a0 mov ax,mar
 	002076ac mov op,ax
 	002076b4 setfuncargs 0x2
 	002076bc mov ax,0x2fef20
 	002076c8 farcall ax
 	002076d0 farsubsp 0x2
 	002076d8 pop op
		002076e0: FALL_THROUGH

	[002076e0]
		0020749c: CONDITIONAL_JUMP
		002074fc: UNCONDITIONAL_JUMP
		002075d8: UNCONDITIONAL_JUMP
		0020765c: FALL_THROUGH
 	002076e0 sourceline 0x2e2e
 	002076e8 mov ax,0x0
 	002076f4 ret

Button11_OnClick$2:
	[002a15b0]
 	002a15b0 sourceline 0x39ae
 	002a15b8 thisaddr
 	002a15c0 stackptr 0x8
 	002a15c8 memread4 ax
 	002a15d0 meminit ax
 	002a15d8 sourceline 0x39af
*	002a15e0 mov mar,0x30ef20
 	002a15ec mov ax,mar
 	002a15f8 push op
 	002a1600 mov op,ax
 	002a1608 setfuncargs 0x0
 	002a1610 mov ax,0x316f20
 	002a161c farcall ax
 	002a1624 pop op
 	002a162c lnot ax
 	002a1634 jz 0x002a16e4
		002a16e4: CONDITIONAL_JUMP
		002a163c: FALL_THROUGH

	[002a163c]
		002a15b0: FALL_THROUGH
 	002a163c push ax
 	002a1644 mov mar,0x3cef20
 	002a1650 mov ax,mar
 	002a165c push op
 	002a1664 mov op,ax
 	002a166c setfuncargs 0x0
 	002a1674 mov ax,0x89ef20
 	002a1680 farcall ax
 	002a1688 pop op
 	002a1690 push ax
 	002a1698 mov ax,0x0
 	002a16a4 pop bx
 	002a16ac cmpeq bx,ax
 	002a16b8 mov ax,bx
 	002a16c4 pop bx
 	002a16cc land bx,ax
 	002a16d8 mov ax,bx
		002a16e4: FALL_THROUGH

	[002a16e4]
		002a15b0: CONDITIONAL_JUMP
		002a163c: FALL_THROUGH
 	002a16e4 jz 0x002a1730
		002a1730: CONDITIONAL_JUMP
		002a16ec: FALL_THROUGH

	[002a16ec]
		002a16e4: FALL_THROUGH
 	002a16ec push ax
 	002a16f4 mov mar,0x32ef20
 	002a1700 memread4 ax
 	002a1708 lnot ax
 	002a1710 pop bx
 	002a1718 land bx,ax
 	002a1724 mov ax,bx
		002a1730: FALL_THROUGH

	[002a1730]
		002a16e4: CONDITIONAL_JUMP
		002a16ec: FALL_THROUGH
 	002a1730 jz 0x002a17dc
		002a17dc: CONDITIONAL_JUMP
		002a1738: FALL_THROUGH

	[002a1738]
		002a1730: FALL_THROUGH
 	002a1738 push op
 	002a1740 mov ax,0x3
 	002a174c farpush ax
 	002a1754 mov ax,0x72
 	002a1760 farpush ax
 	002a1768 mov ax,0x80
 	002a1774 farpush ax
 	002a177c mov ax,0x27
 	002a1788 farpush ax
 	002a1790 mov mar,0x3cef20
 	002a179c mov ax,mar
 	002a17a8 mov op,ax
 	002a17b0 setfuncargs 0x4
 	002a17b8 mov ax,0xc16f20
 	002a17c4 farcall ax
 	002a17cc farsubsp 0x4
 	002a17d4 pop op
		002a17dc: FALL_THROUGH

	[002a17dc]
		002a1730: CONDITIONAL_JUMP
		002a1738: FALL_THROUGH
 	002a17dc sourceline 0x39b0
 	002a17e4 mov ax,0x0
 	002a17f0 stackptr 0x8
 	002a17f8 memzerond
 	002a17fc ret

Button12_OnClick$2:
	[002a1800]
 	002a1800 sourceline 0x39b4
 	002a1808 thisaddr
 	002a1810 stackptr 0x8
 	002a1818 memread4 ax
 	002a1820 meminit ax
 	002a1828 sourceline 0x39b5
*	002a1830 mov mar,0x30ef20
 	002a183c mov ax,mar
 	002a1848 push op
 	002a1850 mov op,ax
 	002a1858 setfuncargs 0x0
 	002a1860 mov ax,0x316f20
 	002a186c farcall ax
 	002a1874 pop op
 	002a187c lnot ax
 	002a1884 jz 0x002a1934
		002a1934: CONDITIONAL_JUMP
		002a188c: FALL_THROUGH

	[002a188c]
		002a1800: FALL_THROUGH
 	002a188c push ax
 	002a1894 mov mar,0x3cef20
 	002a18a0 mov ax,mar
 	002a18ac push op
 	002a18b4 mov op,ax
 	002a18bc setfuncargs 0x0
 	002a18c4 mov ax,0x89ef20
 	002a18d0 farcall ax
 	002a18d8 pop op
 	002a18e0 push ax
 	002a18e8 mov ax,0x0
 	002a18f4 pop bx
 	002a18fc cmpeq bx,ax
 	002a1908 mov ax,bx
 	002a1914 pop bx
 	002a191c land bx,ax
 	002a1928 mov ax,bx
		002a1934: FALL_THROUGH

	[002a1934]
		002a1800: CONDITIONAL_JUMP
		002a188c: FALL_THROUGH
 	002a1934 jz 0x002a1980
		002a1980: CONDITIONAL_JUMP
		002a193c: FALL_THROUGH

	[002a193c]
		002a1934: FALL_THROUGH
 	002a193c push ax
 	002a1944 mov mar,0x32ef20
 	002a1950 memread4 ax
 	002a1958 lnot ax
 	002a1960 pop bx
 	002a1968 land bx,ax
 	002a1974 mov ax,bx
		002a1980: FALL_THROUGH

	[002a1980]
		002a1934: CONDITIONAL_JUMP
		002a193c: FALL_THROUGH
 	002a1980 jz 0x002a1a2c
		002a1a2c: CONDITIONAL_JUMP
		002a1988: FALL_THROUGH

	[002a1988]
		002a1980: FALL_THROUGH
 	002a1988 push op
 	002a1990 mov ax,0x3
 	002a199c farpush ax
 	002a19a4 mov ax,0x72
 	002a19b0 farpush ax
 	002a19b8 mov ax,0x80
 	002a19c4 farpush ax
 	002a19cc mov ax,0x27
 	002a19d8 farpush ax
 	002a19e0 mov mar,0x3cef20
 	002a19ec mov ax,mar
 	002a19f8 mov op,ax
 	002a1a00 setfuncargs 0x4
 	002a1a08 mov ax,0xc16f20
 	002a1a14 farcall ax
 	002a1a1c farsubsp 0x4
 	002a1a24 pop op
		002a1a2c: FALL_THROUGH

	[002a1a2c]
		002a1980: CONDITIONAL_JUMP
		002a1988: FALL_THROUGH
 	002a1a2c sourceline 0x39b6
 	002a1a34 mov ax,0x0
 	002a1a40 stackptr 0x8
 	002a1a48 memzerond
 	002a1a4c ret

BtnNewGame_OnClick$2:
	[002a1a50]
 	002a1a50 sourceline 0x39bd
 	002a1a58 thisaddr
 	002a1a60 stackptr 0x8
 	002a1a68 memread4 ax
 	002a1a70 meminit ax
 	002a1a78 sourceline 0x39be
 	002a1a80 push op
 	002a1a88 mov ax,0x1
 	002a1a94 farpush ax
 	002a1a9c mov ax,0x0
 	002a1aa8 farpush ax
 	002a1ab0 mov ax,0x1
 	002a1abc farpush ax
 	002a1ac4 mov ax,0x1
 	002a1ad0 farpush ax
 	002a1ad8 mov ax,0x64
 	002a1ae4 farpush ax
 	002a1aec mov ax,0x40000000
 	002a1af8 farpush ax
*	002a1b00 mov mar,0x10eef20
 	002a1b0c mov ax,mar
 	002a1b18 mov op,ax
 	002a1b20 setfuncargs 0x6
 	002a1b28 mov ax,0x1216f20
 	002a1b34 farcall ax
 	002a1b3c farsubsp 0x6
 	002a1b44 pop op
 	002a1b4c sourceline 0x39bf
 	002a1b54 mov ax,0x0
 	002a1b60 mov bx,ax
 	002a1b6c mov mar,0x336f20
 	002a1b78 mov ax,mar
 	002a1b84 farpush bx
 	002a1b8c setfuncargs 0x1
 	002a1b94 mov ax,0x43ef20
 	002a1ba0 farcall ax
 	002a1ba8 farsubsp 0x1
 	002a1bb0 sourceline 0x39c0
 	002a1bb8 mov ax,0x50
 	002a1bc4 farpush ax
 	002a1bcc setfuncargs 0x1
 	002a1bd4 mov ax,0x426f20
 	002a1be0 farcall ax
 	002a1be8 farsubsp 0x1
 	002a1bf0 sourceline 0x39c1
 	002a1bf8 push op
 	002a1c00 mov ax,0x7cfe
 	002a1c0c farpush ax
 	002a1c14 mov ax,0x7cfe
 	002a1c20 farpush ax
 	002a1c28 mov ax,0x7cfe
 	002a1c34 farpush ax
 	002a1c3c mov ax,0x2b
 	002a1c48 farpush ax
 	002a1c50 mov mar,0x3cef20
 	002a1c5c mov ax,mar
 	002a1c68 mov op,ax
 	002a1c70 setfuncargs 0x4
 	002a1c78 mov ax,0xc16f20
 	002a1c84 farcall ax
 	002a1c8c farsubsp 0x4
 	002a1c94 pop op
 	002a1c9c sourceline 0x39c2
 	002a1ca4 mov ax,0x0
 	002a1cb0 stackptr 0x8
 	002a1cb8 memzerond
 	002a1cbc ret

BtnLoad2_OnClick$2:
	[002a1cc0]
 	002a1cc0 sourceline 0x39c5
 	002a1cc8 thisaddr
 	002a1cd0 stackptr 0x8
 	002a1cd8 memread4 ax
 	002a1ce0 meminit ax
 	002a1ce8 sourceline 0x39c6
 	002a1cf0 mov ax,0x1
 	002a1cfc push ax
*	002a1d04 mov mar,0x416f20
 	002a1d10 mov ax,mar
 	002a1d1c push ax
 	002a1d24 mov ax,0x1df1b0
 	002a1d30 call ax
 	002a1d38 sub sp,0x8
 	002a1d44 sourceline 0x39c7
 	002a1d4c mov ax,0x0
 	002a1d58 stackptr 0x8
 	002a1d60 memzerond
 	002a1d64 ret

BtnOptions2_OnClick$2:
	[002a1d68]
 	002a1d68 sourceline 0x39ca
 	002a1d70 thisaddr
 	002a1d78 stackptr 0x8
 	002a1d80 memread4 ax
 	002a1d88 meminit ax
 	002a1d90 sourceline 0x39cb
 	002a1d98 mov ax,0x1
 	002a1da4 push ax
*	002a1dac mov mar,0x3eef20
 	002a1db8 mov ax,mar
 	002a1dc4 push ax
 	002a1dcc mov ax,0x1dd1a8
 	002a1dd8 call ax
 	002a1de0 sub sp,0x8
 	002a1dec sourceline 0x39cc
 	002a1df4 mov ax,0x0
 	002a1e00 stackptr 0x8
 	002a1e08 memzerond
 	002a1e0c ret

BtnExit2_OnClick$2:
	[002a1e10]
 	002a1e10 sourceline 0x39cf
 	002a1e18 thisaddr
 	002a1e20 stackptr 0x8
 	002a1e28 memread4 ax
 	002a1e30 meminit ax
 	002a1e38 sourceline 0x39d0
 	002a1e40 mov ax,0x1
 	002a1e4c push ax
*	002a1e54 mov mar,0x406f20
 	002a1e60 mov ax,mar
 	002a1e6c push ax
 	002a1e74 mov ax,0x1dc760
 	002a1e80 call ax
 	002a1e88 sub sp,0x8
 	002a1e94 sourceline 0x39d1
 	002a1e9c mov ax,0x0
 	002a1ea8 stackptr 0x8
 	002a1eb0 memzerond
 	002a1eb4 ret

ButtonHint_OnClick$2:
	[002a1eb8]
 	002a1eb8 sourceline 0x39da
 	002a1ec0 thisaddr
 	002a1ec8 stackptr 0x8
 	002a1ed0 memread4 ax
 	002a1ed8 meminit ax
 	002a1ee0 sourceline 0x39db
 	002a1ee8 stackptr 0xc
 	002a1ef0 memread4 ax
 	002a1ef8 push ax
 	002a1f00 mov ax,0x1
 	002a1f0c pop bx
 	002a1f14 cmpeq bx,ax
 	002a1f20 mov ax,bx
 	002a1f2c jz 0x002a2684
		002a2684: CONDITIONAL_JUMP
		002a1f34: FALL_THROUGH

	[002a1f34]
		002a1eb8: FALL_THROUGH
 	002a1f34 sourceline 0x39dd
*	002a1f3c mov mar,0x121ef20
 	002a1f48 mov ax,mar
 	002a1f54 push op
 	002a1f5c mov op,ax
 	002a1f64 setfuncargs 0x0
 	002a1f6c mov ax,0xf7ef20
 	002a1f78 farcall ax
 	002a1f80 pop op
 	002a1f88 push ax
 	002a1f90 mov ax,0xe7b
 	002a1f9c pop bx
 	002a1fa4 cmpneq bx,ax
 	002a1fb0 mov ax,bx
 	002a1fbc jz 0x002a24cc
		002a24cc: CONDITIONAL_JUMP
		002a1fc4: FALL_THROUGH

	[002a1fc4]
		002a1f34: FALL_THROUGH
 	002a1fc4 sourceline 0x39df
 	002a1fcc mov ax,0x1
 	002a1fd8 mov mar,0x47ef20
 	002a1fe4 memwrite4 ax
 	002a1fec sourceline 0x39e0
 	002a1ff4 push op
 	002a1ffc mov ax,0x41
 	002a2008 farpush ax
 	002a2010 mov ax,0x64
 	002a201c farpush ax
 	002a2024 mov mar,0x36ef20
 	002a2030 mov ax,mar
 	002a203c mov op,ax
 	002a2044 setfuncargs 0x2
 	002a204c mov ax,0xe5ef20
 	002a2058 farcall ax
 	002a2060 farsubsp 0x2
 	002a2068 pop op
 	002a2070 sourceline 0x39e1
 	002a2078 push op
 	002a2080 mov ax,0x41
 	002a208c farpush ax
 	002a2094 mov ax,0x64
 	002a20a0 farpush ax
 	002a20a8 mov mar,0x486f20
 	002a20b4 mov ax,mar
 	002a20c0 mov op,ax
 	002a20c8 setfuncargs 0x2
 	002a20d0 mov ax,0xe5ef20
 	002a20dc farcall ax
 	002a20e4 farsubsp 0x2
 	002a20ec pop op
 	002a20f4 sourceline 0x39e2
 	002a20fc mov ax,0x1
 	002a2108 mov bx,ax
 	002a2114 mov mar,0x486f20
 	002a2120 mov ax,mar
 	002a212c push op
 	002a2134 mov op,ax
 	002a213c farpush bx
 	002a2144 setfuncargs 0x1
 	002a214c mov ax,0x3a6f20
 	002a2158 farcall ax
 	002a2160 farsubsp 0x1
 	002a2168 pop op
 	002a2170 sourceline 0x39e3
 	002a2178 mov ax,0x0
 	002a2184 mov bx,ax
 	002a2190 mov mar,0x1226f20
 	002a219c mov ax,mar
 	002a21a8 push op
 	002a21b0 mov op,ax
 	002a21b8 farpush bx
 	002a21c0 setfuncargs 0x1
 	002a21c8 mov ax,0xe3ef20
 	002a21d4 farcall ax
 	002a21dc farsubsp 0x1
 	002a21e4 pop op
 	002a21ec sourceline 0x39e4
 	002a21f4 mov ax,0x0
 	002a2200 mov bx,ax
 	002a220c mov mar,0x121ef20
 	002a2218 mov ax,mar
 	002a2224 push op
 	002a222c mov op,ax
 	002a2234 farpush bx
 	002a223c setfuncargs 0x1
 	002a2244 mov ax,0x5cef20
 	002a2250 farcall ax
 	002a2258 farsubsp 0x1
 	002a2260 pop op
 	002a2268 sourceline 0x39e5
 	002a2270 mov ax,0x2c76ff
 	002a227c farpush ax
 	002a2284 setfuncargs 0x1
 	002a228c mov ax,0x7f6f20
 	002a2298 farcall ax
 	002a22a0 farsubsp 0x1
 	002a22a8 jz 0x002a2494
		002a2494: CONDITIONAL_JUMP
		002a22b0: FALL_THROUGH

	[002a22b0]
		002a1fc4: FALL_THROUGH
 	002a22b0 sourceline 0x39e7
 	002a22b8 mov ax,0x1
 	002a22c4 mov bx,ax
 	002a22d0 mov mar,0x36ef20
 	002a22dc mov ax,mar
 	002a22e8 push op
 	002a22f0 mov op,ax
 	002a22f8 farpush bx
 	002a2300 setfuncargs 0x1
 	002a2308 mov ax,0x3a6f20
 	002a2314 farcall ax
 	002a231c farsubsp 0x1
 	002a2324 pop op
 	002a232c sourceline 0x39e8
 	002a2334 mov ax,0x64
 	002a2340 farpush ax
 	002a2348 mov ax,0x9d
 	002a2354 farpush ax
 	002a235c setfuncargs 0x2
 	002a2364 mov ax,0x686f20
 	002a2370 farcall ax
 	002a2378 farsubsp 0x2
 	002a2380 sourceline 0x39e9
 	002a2388 mov ax,0x23
 	002a2394 farpush ax
 	002a239c setfuncargs 0x1
 	002a23a4 mov ax,0x426f20
 	002a23b0 farcall ax
 	002a23b8 farsubsp 0x1
 	002a23c0 sourceline 0x39ea
 	002a23c8 push op
 	002a23d0 mov ax,0x1
 	002a23dc farpush ax
 	002a23e4 mov ax,0x0
 	002a23f0 farpush ax
 	002a23f8 mov ax,0x1
 	002a2404 farpush ax
 	002a240c mov ax,0x1
 	002a2418 farpush ax
 	002a2420 mov ax,0x0
 	002a242c farpush ax
 	002a2434 mov ax,0x403f5c29
 	002a2440 farpush ax
 	002a2448 mov mar,0x486f20
 	002a2454 mov ax,mar
 	002a2460 mov op,ax
 	002a2468 setfuncargs 0x6
 	002a2470 mov ax,0x1216f20
 	002a247c farcall ax
 	002a2484 farsubsp 0x6
 	002a248c pop op
		002a2494: FALL_THROUGH

	[002a2494]
		002a1fc4: CONDITIONAL_JUMP
		002a22b0: FALL_THROUGH
 	002a2494 sourceline 0x39ec
 	002a249c mov ax,0x1
 	002a24a8 mov mar,0x48ef20
 	002a24b4 memwrite4 ax
 	002a24bc sourceline 0x39ed
 	002a24c4 jmp 0x002a2684
		002a2684: UNCONDITIONAL_JUMP

	[002a24cc]
		002a1f34: CONDITIONAL_JUMP
 	002a24cc sourceline 0x39f0
 	002a24d4 mov mar,0x30ef20
 	002a24e0 mov ax,mar
 	002a24ec push op
 	002a24f4 mov op,ax
 	002a24fc setfuncargs 0x0
 	002a2504 mov ax,0x316f20
 	002a2510 farcall ax
 	002a2518 pop op
 	002a2520 lnot ax
 	002a2528 jz 0x002a25d8
		002a25d8: CONDITIONAL_JUMP
		002a2530: FALL_THROUGH

	[002a2530]
		002a24cc: FALL_THROUGH
 	002a2530 push ax
 	002a2538 mov mar,0x3cef20
 	002a2544 mov ax,mar
 	002a2550 push op
 	002a2558 mov op,ax
 	002a2560 setfuncargs 0x0
 	002a2568 mov ax,0x89ef20
 	002a2574 farcall ax
 	002a257c pop op
 	002a2584 push ax
 	002a258c mov ax,0x0
 	002a2598 pop bx
 	002a25a0 cmpeq bx,ax
 	002a25ac mov ax,bx
 	002a25b8 pop bx
 	002a25c0 land bx,ax
 	002a25cc mov ax,bx
		002a25d8: FALL_THROUGH

	[002a25d8]
		002a24cc: CONDITIONAL_JUMP
		002a2530: FALL_THROUGH
 	002a25d8 jz 0x002a2684
		002a2684: CONDITIONAL_JUMP
		002a25e0: FALL_THROUGH

	[002a25e0]
		002a25d8: FALL_THROUGH
 	002a25e0 push op
 	002a25e8 mov ax,0x3
 	002a25f4 farpush ax
 	002a25fc mov ax,0x72
 	002a2608 farpush ax
 	002a2610 mov ax,0x80
 	002a261c farpush ax
 	002a2624 mov ax,0x27
 	002a2630 farpush ax
 	002a2638 mov mar,0x3cef20
 	002a2644 mov ax,mar
 	002a2650 mov op,ax
 	002a2658 setfuncargs 0x4
 	002a2660 mov ax,0xc16f20
 	002a266c farcall ax
 	002a2674 farsubsp 0x4
 	002a267c pop op
		002a2684: FALL_THROUGH

	[002a2684]
		002a1eb8: CONDITIONAL_JUMP
		002a2494: UNCONDITIONAL_JUMP
		002a25d8: CONDITIONAL_JUMP
		002a25e0: FALL_THROUGH
 	002a2684 sourceline 0x39f3
 	002a268c mov ax,0x0
 	002a2698 stackptr 0x8
 	002a26a0 memzerond
 	002a26a4 ret

ButtonNo_OnClick$2:
	[002a26a8]
 	002a26a8 sourceline 0x39f9
 	002a26b0 thisaddr
 	002a26b8 stackptr 0x8
 	002a26c0 memread4 ax
 	002a26c8 meminit ax
 	002a26d0 sourceline 0x39fa
 	002a26d8 stackptr 0xc
 	002a26e0 memread4 ax
 	002a26e8 push ax
 	002a26f0 mov ax,0x1
 	002a26fc pop bx
 	002a2704 cmpeq bx,ax
 	002a2710 mov ax,bx
 	002a271c jz 0x002a2914
		002a2914: CONDITIONAL_JUMP
		002a2724: FALL_THROUGH

	[002a2724]
		002a26a8: FALL_THROUGH
 	002a2724 sourceline 0x39fc
 	002a272c mov ax,0x1
 	002a2738 mov bx,ax
*	002a2744 mov mar,0x576f20
 	002a2750 mov ax,mar
 	002a275c push op
 	002a2764 mov op,ax
 	002a276c farpush bx
 	002a2774 setfuncargs 0x1
 	002a277c mov ax,0xe3ef20
 	002a2788 farcall ax
 	002a2790 farsubsp 0x1
 	002a2798 pop op
 	002a27a0 sourceline 0x39fd
 	002a27a8 mov ax,0x1
 	002a27b4 mov bx,ax
 	002a27c0 mov mar,0x546f20
 	002a27cc mov ax,mar
 	002a27d8 push op
 	002a27e0 mov op,ax
 	002a27e8 farpush bx
 	002a27f0 setfuncargs 0x1
 	002a27f8 mov ax,0xe3ef20
 	002a2804 farcall ax
 	002a280c farsubsp 0x1
 	002a2814 pop op
 	002a281c sourceline 0x39fe
 	002a2824 mov ax,0x1
 	002a2830 mov bx,ax
 	002a283c mov mar,0x326f20
 	002a2848 mov ax,mar
 	002a2854 push op
 	002a285c mov op,ax
 	002a2864 farpush bx
 	002a286c setfuncargs 0x1
 	002a2874 mov ax,0xe3ef20
 	002a2880 farcall ax
 	002a2888 farsubsp 0x1
 	002a2890 pop op
 	002a2898 sourceline 0x39ff
 	002a28a0 mov ax,0x0
 	002a28ac mov bx,ax
 	002a28b8 mov mar,0x54ef20
 	002a28c4 mov ax,mar
 	002a28d0 push op
 	002a28d8 mov op,ax
 	002a28e0 farpush bx
 	002a28e8 setfuncargs 0x1
 	002a28f0 mov ax,0x3a6f20
 	002a28fc farcall ax
 	002a2904 farsubsp 0x1
 	002a290c pop op
		002a2914: FALL_THROUGH

	[002a2914]
		002a26a8: CONDITIONAL_JUMP
		002a2724: FALL_THROUGH
 	002a2914 sourceline 0x3a01
 	002a291c mov ax,0x0
 	002a2928 stackptr 0x8
 	002a2930 memzerond
 	002a2934 ret

ButtonYes_OnClick$2:
	[002a2938]
 	002a2938 sourceline 0x3a06
 	002a2940 thisaddr
 	002a2948 stackptr 0x8
 	002a2950 memread4 ax
 	002a2958 meminit ax
 	002a2960 sourceline 0x3a07
 	002a2968 stackptr 0xc
 	002a2970 memread4 ax
 	002a2978 push ax
 	002a2980 mov ax,0x1
 	002a298c pop bx
 	002a2994 cmpeq bx,ax
 	002a29a0 mov ax,bx
 	002a29ac jz 0x002a439c
		002a439c: CONDITIONAL_JUMP
		002a29b4: FALL_THROUGH

	[002a29b4]
		002a2938: FALL_THROUGH
 	002a29b4 sourceline 0x3a09
*	002a29bc mov mar,0xe56f20
 	002a29c8 mov ax,mar
 	002a29d4 push op
 	002a29dc mov op,ax
 	002a29e4 setfuncargs 0x0
 	002a29ec mov ax,0xf7ef20
 	002a29f8 farcall ax
 	002a2a00 pop op
 	002a2a08 push ax
 	002a2a10 mov ax,0xe18
 	002a2a1c pop bx
 	002a2a24 cmpeq bx,ax
 	002a2a30 mov ax,bx
 	002a2a3c jnz 0x002a2aec
		002a2aec: CONDITIONAL_JUMP
		002a2a44: FALL_THROUGH

	[002a2a44]
		002a29b4: FALL_THROUGH
 	002a2a44 push ax
 	002a2a4c mov mar,0xe56f20
 	002a2a58 mov ax,mar
 	002a2a64 push op
 	002a2a6c mov op,ax
 	002a2a74 setfuncargs 0x0
 	002a2a7c mov ax,0xf7ef20
 	002a2a88 farcall ax
 	002a2a90 pop op
 	002a2a98 push ax
 	002a2aa0 mov ax,0xe19
 	002a2aac pop bx
 	002a2ab4 cmpeq bx,ax
 	002a2ac0 mov ax,bx
 	002a2acc pop bx
 	002a2ad4 lor bx,ax
 	002a2ae0 mov ax,bx
		002a2aec: FALL_THROUGH

	[002a2aec]
		002a29b4: CONDITIONAL_JUMP
		002a2a44: FALL_THROUGH
 	002a2aec jz 0x002a3c2c
		002a3c2c: CONDITIONAL_JUMP
		002a2af4: FALL_THROUGH

	[002a2af4]
		002a2aec: FALL_THROUGH
 	002a2af4 sourceline 0x3a0b
 	002a2afc mov mar,0x576f20
 	002a2b08 mov ax,mar
 	002a2b14 push op
 	002a2b1c mov op,ax
 	002a2b24 setfuncargs 0x0
 	002a2b2c mov ax,0x316f20
 	002a2b38 farcall ax
 	002a2b40 pop op
 	002a2b48 jz 0x002a3390
		002a3390: CONDITIONAL_JUMP
		002a2b50: FALL_THROUGH

	[002a2b50]
		002a2af4: FALL_THROUGH
 	002a2b50 sourceline 0x3a0d
 	002a2b58 mov mar,0x10015c
 	002a2b64 push mar
 	002a2b6c pop mar
 	002a2b74 memread.ptr ax
 	002a2b7c push ax
 	002a2b84 mov ax,0x0
 	002a2b90 pop bx
 	002a2b98 cmpneq bx,ax
 	002a2ba4 mov ax,bx
 	002a2bb0 jz 0x002a2c94
		002a2c94: CONDITIONAL_JUMP
		002a2bb8: FALL_THROUGH

	[002a2bb8]
		002a2b50: FALL_THROUGH
 	002a2bb8 sourceline 0x3a0f
 	002a2bc0 push op
 	002a2bc8 mov mar,0x10015c
 	002a2bd4 push mar
 	002a2bdc pop mar
 	002a2be4 memread.ptr ax
 	002a2bec mov op,ax
 	002a2bf4 setfuncargs 0x0
 	002a2bfc mov ax,0x456f20
 	002a2c08 farcall ax
 	002a2c10 pop op
 	002a2c18 sourceline 0x3a10
 	002a2c20 mov ax,0x0
 	002a2c2c mov bx,ax
 	002a2c38 mov mar,0xf0ef20
 	002a2c44 mov ax,mar
 	002a2c50 push op
 	002a2c58 mov op,ax
 	002a2c60 farpush bx
 	002a2c68 setfuncargs 0x1
 	002a2c70 mov ax,0x356f20
 	002a2c7c farcall ax
 	002a2c84 farsubsp 0x1
 	002a2c8c pop op
		002a2c94: FALL_THROUGH

	[002a2c94]
		002a2b50: CONDITIONAL_JUMP
		002a2bb8: FALL_THROUGH
 	002a2c94 sourceline 0x3a12
 	002a2c9c mov mar,0x5a6f20
 	002a2ca8 mov ax,mar
 	002a2cb4 push op
 	002a2cbc mov op,ax
 	002a2cc4 setfuncargs 0x0
 	002a2ccc mov ax,0x5aef20
 	002a2cd8 farcall ax
 	002a2ce0 pop op
 	002a2ce8 mov dx,ax
 	002a2cf4 mov mar,0x5a6f20
 	002a2d00 mov ax,mar
 	002a2d0c push op
 	002a2d14 mov op,ax
 	002a2d1c farpush dx
 	002a2d24 setfuncargs 0x1
 	002a2d2c mov ax,0xeeef20
 	002a2d38 farcall ax
 	002a2d40 farsubsp 0x1
 	002a2d48 pop op
 	002a2d50 farpush ax
 	002a2d58 setfuncargs 0x1
 	002a2d60 mov ax,0x122ef20
 	002a2d6c farcall ax
 	002a2d74 farsubsp 0x1
 	002a2d7c sourceline 0x3a13
 	002a2d84 push op
 	002a2d8c mov mar,0x5a6f20
 	002a2d98 mov ax,mar
 	002a2da4 mov op,ax
 	002a2dac setfuncargs 0x0
 	002a2db4 mov ax,0xec6f20
 	002a2dc0 farcall ax
 	002a2dc8 pop op
 	002a2dd0 sourceline 0x3a14
 	002a2dd8 mov mar,0x5a6f20
 	002a2de4 mov ax,mar
 	002a2df0 push op
 	002a2df8 mov op,ax
 	002a2e00 setfuncargs 0x0
 	002a2e08 mov ax,0x5b6f20
 	002a2e14 farcall ax
 	002a2e1c pop op
 	002a2e24 mov bx,ax
 	002a2e30 mov mar,0x5a6f20
 	002a2e3c mov ax,mar
 	002a2e48 push op
 	002a2e50 mov op,ax
 	002a2e58 farpush bx
 	002a2e60 setfuncargs 0x1
 	002a2e68 mov ax,0xee6f20
 	002a2e74 farcall ax
 	002a2e7c farsubsp 0x1
 	002a2e84 pop op
 	002a2e8c sourceline 0x3a15
 	002a2e94 setfuncargs 0x0
 	002a2e9c mov ax,0x46ef20
 	002a2ea8 farcall ax
 	002a2eb0 sourceline 0x3a16
 	002a2eb8 mov mar,0x5a6f20
 	002a2ec4 mov ax,mar
 	002a2ed0 push op
 	002a2ed8 mov op,ax
 	002a2ee0 setfuncargs 0x0
 	002a2ee8 mov ax,0x656f20
 	002a2ef4 farcall ax
 	002a2efc pop op
 	002a2f04 push ax
 	002a2f0c mov ax,0x0
 	002a2f18 pop bx
 	002a2f20 cmpgt bx,ax
 	002a2f2c mov ax,bx
 	002a2f38 jz 0x002a31c8
		002a31c8: CONDITIONAL_JUMP
		002a2f40: FALL_THROUGH

	[002a2f40]
		002a2c94: FALL_THROUGH
 	002a2f40 sourceline 0x3a18
 	002a2f48 mov ax,0x56
 	002a2f54 farpush ax
 	002a2f5c mov ax,0x7f
 	002a2f68 farpush ax
 	002a2f70 mov mar,0x5a6f20
 	002a2f7c mov ax,mar
 	002a2f88 push op
 	002a2f90 mov op,ax
 	002a2f98 setfuncargs 0x0
 	002a2fa0 mov ax,0x5aef20
 	002a2fac farcall ax
 	002a2fb4 pop op
 	002a2fbc mov dx,ax
 	002a2fc8 mov mar,0x5a6f20
 	002a2fd4 mov ax,mar
 	002a2fe0 push op
 	002a2fe8 mov op,ax
 	002a2ff0 farpush dx
 	002a2ff8 setfuncargs 0x1
 	002a3000 mov ax,0xeeef20
 	002a300c farcall ax
 	002a3014 farsubsp 0x1
 	002a301c pop op
 	002a3024 farpush ax
 	002a302c setfuncargs 0x3
 	002a3034 mov ax,0x466f20
 	002a3040 farcall ax
 	002a3048 farsubsp 0x3
 	002a3050 mov mar,0x10015c
 	002a305c push mar
 	002a3064 pop mar
 	002a306c memwrite.ptr ax
 	002a3074 sourceline 0x3a19
 	002a307c mov mar,0x10015c
 	002a3088 push mar
 	002a3090 pop mar
 	002a3098 memread.ptr ax
 	002a30a0 push ax
 	002a30a8 mov ax,0x0
 	002a30b4 pop bx
 	002a30bc cmpneq bx,ax
 	002a30c8 mov ax,bx
 	002a30d4 jz 0x002a31b8
		002a31b8: CONDITIONAL_JUMP
		002a30dc: FALL_THROUGH

	[002a30dc]
		002a2f40: FALL_THROUGH
 	002a30dc mov mar,0x10015c
 	002a30e8 push mar
 	002a30f0 pop mar
 	002a30f8 memread.ptr ax
 	002a3100 push ax
 	002a3108 pop mar
 	002a3110 mov ax,mar
 	002a311c push op
 	002a3124 mov op,ax
 	002a312c setfuncargs 0x0
 	002a3134 mov ax,0xefef20
 	002a3140 farcall ax
 	002a3148 pop op
 	002a3150 mov bx,ax
 	002a315c mov mar,0xf0ef20
 	002a3168 mov ax,mar
 	002a3174 push op
 	002a317c mov op,ax
 	002a3184 farpush bx
 	002a318c setfuncargs 0x1
 	002a3194 mov ax,0x356f20
 	002a31a0 farcall ax
 	002a31a8 farsubsp 0x1
 	002a31b0 pop op
		002a31b8: FALL_THROUGH

	[002a31b8]
		002a2f40: CONDITIONAL_JUMP
		002a30dc: FALL_THROUGH
 	002a31b8 sourceline 0x3a1a
 	002a31c0 jmp 0x002a3298
		002a3298: UNCONDITIONAL_JUMP

	[002a31c8]
		002a2c94: CONDITIONAL_JUMP
 	002a31c8 sourceline 0x3a1d
 	002a31d0 mov mar,0x5c6f20
 	002a31dc mov ax,mar
 	002a31e8 push op
 	002a31f0 mov op,ax
 	002a31f8 setfuncargs 0x0
 	002a3200 mov ax,0x606f20
 	002a320c farcall ax
 	002a3214 pop op
 	002a321c jz 0x002a3298
		002a3298: CONDITIONAL_JUMP
		002a3224: FALL_THROUGH

	[002a3224]
		002a31c8: FALL_THROUGH
 	002a3224 mov ax,0x0
 	002a3230 mov bx,ax
 	002a323c mov mar,0x5c6f20
 	002a3248 mov ax,mar
 	002a3254 push op
 	002a325c mov op,ax
 	002a3264 farpush bx
 	002a326c setfuncargs 0x1
 	002a3274 mov ax,0x5cef20
 	002a3280 farcall ax
 	002a3288 farsubsp 0x1
 	002a3290 pop op
		002a3298: FALL_THROUGH

	[002a3298]
		002a31b8: UNCONDITIONAL_JUMP
		002a31c8: CONDITIONAL_JUMP
		002a3224: FALL_THROUGH
 	002a3298 sourceline 0x3a1f
 	002a32a0 mov ax,0x0
 	002a32ac mov bx,ax
 	002a32b8 mov mar,0x54ef20
 	002a32c4 mov ax,mar
 	002a32d0 push op
 	002a32d8 mov op,ax
 	002a32e0 farpush bx
 	002a32e8 setfuncargs 0x1
 	002a32f0 mov ax,0x3a6f20
 	002a32fc farcall ax
 	002a3304 farsubsp 0x1
 	002a330c pop op
 	002a3314 sourceline 0x3a20
 	002a331c mov ax,0x1
 	002a3328 mov bx,ax
 	002a3334 mov mar,0x576f20
 	002a3340 mov ax,mar
 	002a334c push op
 	002a3354 mov op,ax
 	002a335c farpush bx
 	002a3364 setfuncargs 0x1
 	002a336c mov ax,0xe3ef20
 	002a3378 farcall ax
 	002a3380 farsubsp 0x1
 	002a3388 pop op
		002a3390: FALL_THROUGH

	[002a3390]
		002a2af4: CONDITIONAL_JUMP
		002a3298: FALL_THROUGH
 	002a3390 sourceline 0x3a24
 	002a3398 mov mar,0x546f20
 	002a33a4 mov ax,mar
 	002a33b0 push op
 	002a33b8 mov op,ax
 	002a33c0 setfuncargs 0x0
 	002a33c8 mov ax,0x316f20
 	002a33d4 farcall ax
 	002a33dc pop op
 	002a33e4 jz 0x002a3c2c
		002a3c2c: CONDITIONAL_JUMP
		002a33ec: FALL_THROUGH

	[002a33ec]
		002a3390: FALL_THROUGH
 	002a33ec sourceline 0x3a26
 	002a33f4 mov mar,0x100158
 	002a3400 push mar
 	002a3408 pop mar
 	002a3410 memread.ptr ax
 	002a3418 push ax
 	002a3420 mov ax,0x0
 	002a342c pop bx
 	002a3434 cmpneq bx,ax
 	002a3440 mov ax,bx
 	002a344c jz 0x002a3530
		002a3530: CONDITIONAL_JUMP
		002a3454: FALL_THROUGH

	[002a3454]
		002a33ec: FALL_THROUGH
 	002a3454 sourceline 0x3a28
 	002a345c push op
 	002a3464 mov mar,0x100158
 	002a3470 push mar
 	002a3478 pop mar
 	002a3480 memread.ptr ax
 	002a3488 mov op,ax
 	002a3490 setfuncargs 0x0
 	002a3498 mov ax,0x456f20
 	002a34a4 farcall ax
 	002a34ac pop op
 	002a34b4 sourceline 0x3a29
 	002a34bc mov ax,0x0
 	002a34c8 mov bx,ax
 	002a34d4 mov mar,0xf06f20
 	002a34e0 mov ax,mar
 	002a34ec push op
 	002a34f4 mov op,ax
 	002a34fc farpush bx
 	002a3504 setfuncargs 0x1
 	002a350c mov ax,0x356f20
 	002a3518 farcall ax
 	002a3520 farsubsp 0x1
 	002a3528 pop op
		002a3530: FALL_THROUGH

	[002a3530]
		002a33ec: CONDITIONAL_JUMP
		002a3454: FALL_THROUGH
 	002a3530 sourceline 0x3a2b
 	002a3538 mov mar,0x5def20
 	002a3544 mov ax,mar
 	002a3550 push op
 	002a3558 mov op,ax
 	002a3560 setfuncargs 0x0
 	002a3568 mov ax,0x5aef20
 	002a3574 farcall ax
 	002a357c pop op
 	002a3584 mov dx,ax
 	002a3590 mov mar,0x5def20
 	002a359c mov ax,mar
 	002a35a8 push op
 	002a35b0 mov op,ax
 	002a35b8 farpush dx
 	002a35c0 setfuncargs 0x1
 	002a35c8 mov ax,0xeeef20
 	002a35d4 farcall ax
 	002a35dc farsubsp 0x1
 	002a35e4 pop op
 	002a35ec farpush ax
 	002a35f4 setfuncargs 0x1
 	002a35fc mov ax,0x122ef20
 	002a3608 farcall ax
 	002a3610 farsubsp 0x1
 	002a3618 sourceline 0x3a2c
 	002a3620 push op
 	002a3628 mov mar,0x5def20
 	002a3634 mov ax,mar
 	002a3640 mov op,ax
 	002a3648 setfuncargs 0x0
 	002a3650 mov ax,0xec6f20
 	002a365c farcall ax
 	002a3664 pop op
 	002a366c sourceline 0x3a2d
 	002a3674 mov mar,0x5def20
 	002a3680 mov ax,mar
 	002a368c push op
 	002a3694 mov op,ax
 	002a369c setfuncargs 0x0
 	002a36a4 mov ax,0x5b6f20
 	002a36b0 farcall ax
 	002a36b8 pop op
 	002a36c0 mov bx,ax
 	002a36cc mov mar,0x5def20
 	002a36d8 mov ax,mar
 	002a36e4 push op
 	002a36ec mov op,ax
 	002a36f4 farpush bx
 	002a36fc setfuncargs 0x1
 	002a3704 mov ax,0xee6f20
 	002a3710 farcall ax
 	002a3718 farsubsp 0x1
 	002a3720 pop op
 	002a3728 sourceline 0x3a2e
 	002a3730 setfuncargs 0x0
 	002a3738 mov ax,0x476f20
 	002a3744 farcall ax
 	002a374c sourceline 0x3a2f
 	002a3754 mov mar,0x5def20
 	002a3760 mov ax,mar
 	002a376c push op
 	002a3774 mov op,ax
 	002a377c setfuncargs 0x0
 	002a3784 mov ax,0x656f20
 	002a3790 farcall ax
 	002a3798 pop op
 	002a37a0 push ax
 	002a37a8 mov ax,0x0
 	002a37b4 pop bx
 	002a37bc cmpgt bx,ax
 	002a37c8 mov ax,bx
 	002a37d4 jz 0x002a3a64
		002a3a64: CONDITIONAL_JUMP
		002a37dc: FALL_THROUGH

	[002a37dc]
		002a3530: FALL_THROUGH
 	002a37dc sourceline 0x3a31
 	002a37e4 mov ax,0x56
 	002a37f0 farpush ax
 	002a37f8 mov ax,0x7f
 	002a3804 farpush ax
 	002a380c mov mar,0x5def20
 	002a3818 mov ax,mar
 	002a3824 push op
 	002a382c mov op,ax
 	002a3834 setfuncargs 0x0
 	002a383c mov ax,0x5aef20
 	002a3848 farcall ax
 	002a3850 pop op
 	002a3858 mov dx,ax
 	002a3864 mov mar,0x5def20
 	002a3870 mov ax,mar
 	002a387c push op
 	002a3884 mov op,ax
 	002a388c farpush dx
 	002a3894 setfuncargs 0x1
 	002a389c mov ax,0xeeef20
 	002a38a8 farcall ax
 	002a38b0 farsubsp 0x1
 	002a38b8 pop op
 	002a38c0 farpush ax
 	002a38c8 setfuncargs 0x3
 	002a38d0 mov ax,0x466f20
 	002a38dc farcall ax
 	002a38e4 farsubsp 0x3
 	002a38ec mov mar,0x100158
 	002a38f8 push mar
 	002a3900 pop mar
 	002a3908 memwrite.ptr ax
 	002a3910 sourceline 0x3a32
 	002a3918 mov mar,0x100158
 	002a3924 push mar
 	002a392c pop mar
 	002a3934 memread.ptr ax
 	002a393c push ax
 	002a3944 mov ax,0x0
 	002a3950 pop bx
 	002a3958 cmpneq bx,ax
 	002a3964 mov ax,bx
 	002a3970 jz 0x002a3a54
		002a3a54: CONDITIONAL_JUMP
		002a3978: FALL_THROUGH

	[002a3978]
		002a37dc: FALL_THROUGH
 	002a3978 mov mar,0x100158
 	002a3984 push mar
 	002a398c pop mar
 	002a3994 memread.ptr ax
 	002a399c push ax
 	002a39a4 pop mar
 	002a39ac mov ax,mar
 	002a39b8 push op
 	002a39c0 mov op,ax
 	002a39c8 setfuncargs 0x0
 	002a39d0 mov ax,0xefef20
 	002a39dc farcall ax
 	002a39e4 pop op
 	002a39ec mov bx,ax
 	002a39f8 mov mar,0xf06f20
 	002a3a04 mov ax,mar
 	002a3a10 push op
 	002a3a18 mov op,ax
 	002a3a20 farpush bx
 	002a3a28 setfuncargs 0x1
 	002a3a30 mov ax,0x356f20
 	002a3a3c farcall ax
 	002a3a44 farsubsp 0x1
 	002a3a4c pop op
		002a3a54: FALL_THROUGH

	[002a3a54]
		002a37dc: CONDITIONAL_JUMP
		002a3978: FALL_THROUGH
 	002a3a54 sourceline 0x3a33
 	002a3a5c jmp 0x002a3b34
		002a3b34: UNCONDITIONAL_JUMP

	[002a3a64]
		002a3530: CONDITIONAL_JUMP
 	002a3a64 sourceline 0x3a36
 	002a3a6c mov mar,0x5e6f20
 	002a3a78 mov ax,mar
 	002a3a84 push op
 	002a3a8c mov op,ax
 	002a3a94 setfuncargs 0x0
 	002a3a9c mov ax,0x606f20
 	002a3aa8 farcall ax
 	002a3ab0 pop op
 	002a3ab8 jz 0x002a3b34
		002a3b34: CONDITIONAL_JUMP
		002a3ac0: FALL_THROUGH

	[002a3ac0]
		002a3a64: FALL_THROUGH
 	002a3ac0 mov ax,0x0
 	002a3acc mov bx,ax
 	002a3ad8 mov mar,0x5e6f20
 	002a3ae4 mov ax,mar
 	002a3af0 push op
 	002a3af8 mov op,ax
 	002a3b00 farpush bx
 	002a3b08 setfuncargs 0x1
 	002a3b10 mov ax,0x5cef20
 	002a3b1c farcall ax
 	002a3b24 farsubsp 0x1
 	002a3b2c pop op
		002a3b34: FALL_THROUGH

	[002a3b34]
		002a3a54: UNCONDITIONAL_JUMP
		002a3a64: CONDITIONAL_JUMP
		002a3ac0: FALL_THROUGH
 	002a3b34 sourceline 0x3a38
 	002a3b3c mov ax,0x0
 	002a3b48 mov bx,ax
 	002a3b54 mov mar,0x54ef20
 	002a3b60 mov ax,mar
 	002a3b6c push op
 	002a3b74 mov op,ax
 	002a3b7c farpush bx
 	002a3b84 setfuncargs 0x1
 	002a3b8c mov ax,0x3a6f20
 	002a3b98 farcall ax
 	002a3ba0 farsubsp 0x1
 	002a3ba8 pop op
 	002a3bb0 sourceline 0x3a39
 	002a3bb8 mov ax,0x1
 	002a3bc4 mov bx,ax
 	002a3bd0 mov mar,0x546f20
 	002a3bdc mov ax,mar
 	002a3be8 push op
 	002a3bf0 mov op,ax
 	002a3bf8 farpush bx
 	002a3c00 setfuncargs 0x1
 	002a3c08 mov ax,0xe3ef20
 	002a3c14 farcall ax
 	002a3c1c farsubsp 0x1
 	002a3c24 pop op
		002a3c2c: FALL_THROUGH

	[002a3c2c]
		002a2aec: CONDITIONAL_JUMP
		002a3390: CONDITIONAL_JUMP
		002a3b34: FALL_THROUGH
 	002a3c2c sourceline 0x3a3e
 	002a3c34 mov mar,0xe56f20
 	002a3c40 mov ax,mar
 	002a3c4c push op
 	002a3c54 mov op,ax
 	002a3c5c setfuncargs 0x0
 	002a3c64 mov ax,0xf7ef20
 	002a3c70 farcall ax
 	002a3c78 pop op
 	002a3c80 push ax
 	002a3c88 mov ax,0xe1a
 	002a3c94 pop bx
 	002a3c9c cmpeq bx,ax
 	002a3ca8 mov ax,bx
 	002a3cb4 jnz 0x002a3d64
		002a3d64: CONDITIONAL_JUMP
		002a3cbc: FALL_THROUGH

	[002a3cbc]
		002a3c2c: FALL_THROUGH
 	002a3cbc push ax
 	002a3cc4 mov mar,0xe56f20
 	002a3cd0 mov ax,mar
 	002a3cdc push op
 	002a3ce4 mov op,ax
 	002a3cec setfuncargs 0x0
 	002a3cf4 mov ax,0xf7ef20
 	002a3d00 farcall ax
 	002a3d08 pop op
 	002a3d10 push ax
 	002a3d18 mov ax,0xe1b
 	002a3d24 pop bx
 	002a3d2c cmpeq bx,ax
 	002a3d38 mov ax,bx
 	002a3d44 pop bx
 	002a3d4c lor bx,ax
 	002a3d58 mov ax,bx
		002a3d64: FALL_THROUGH

	[002a3d64]
		002a3c2c: CONDITIONAL_JUMP
		002a3cbc: FALL_THROUGH
 	002a3d64 jz 0x002a3dec
		002a3dec: CONDITIONAL_JUMP
		002a3d6c: FALL_THROUGH

	[002a3d6c]
		002a3d64: FALL_THROUGH
 	002a3d6c sourceline 0x3a40
 	002a3d74 mov ax,0x1
 	002a3d80 farpush ax
 	002a3d88 setfuncargs 0x1
 	002a3d90 mov ax,0x426f20
 	002a3d9c farcall ax
 	002a3da4 farsubsp 0x1
 	002a3dac sourceline 0x3a41
 	002a3db4 mov ax,0x0
 	002a3dc0 farpush ax
 	002a3dc8 setfuncargs 0x1
 	002a3dd0 mov ax,0x1236f20
 	002a3ddc farcall ax
 	002a3de4 farsubsp 0x1
		002a3dec: FALL_THROUGH

	[002a3dec]
		002a3d64: CONDITIONAL_JUMP
		002a3d6c: FALL_THROUGH
 	002a3dec sourceline 0x3a45
 	002a3df4 mov mar,0xe56f20
 	002a3e00 mov ax,mar
 	002a3e0c push op
 	002a3e14 mov op,ax
 	002a3e1c setfuncargs 0x0
 	002a3e24 mov ax,0xf7ef20
 	002a3e30 farcall ax
 	002a3e38 pop op
 	002a3e40 push ax
 	002a3e48 mov ax,0xe24
 	002a3e54 pop bx
 	002a3e5c cmpeq bx,ax
 	002a3e68 mov ax,bx
 	002a3e74 jnz 0x002a3f24
		002a3f24: CONDITIONAL_JUMP
		002a3e7c: FALL_THROUGH

	[002a3e7c]
		002a3dec: FALL_THROUGH
 	002a3e7c push ax
 	002a3e84 mov mar,0xe56f20
 	002a3e90 mov ax,mar
 	002a3e9c push op
 	002a3ea4 mov op,ax
 	002a3eac setfuncargs 0x0
 	002a3eb4 mov ax,0xf7ef20
 	002a3ec0 farcall ax
 	002a3ec8 pop op
 	002a3ed0 push ax
 	002a3ed8 mov ax,0xe25
 	002a3ee4 pop bx
 	002a3eec cmpeq bx,ax
 	002a3ef8 mov ax,bx
 	002a3f04 pop bx
 	002a3f0c lor bx,ax
 	002a3f18 mov ax,bx
		002a3f24: FALL_THROUGH

	[002a3f24]
		002a3dec: CONDITIONAL_JUMP
		002a3e7c: FALL_THROUGH
 	002a3f24 jz 0x002a439c
		002a439c: CONDITIONAL_JUMP
		002a3f2c: FALL_THROUGH

	[002a3f2c]
		002a3f24: FALL_THROUGH
 	002a3f2c sourceline 0x3a47
 	002a3f34 mov ax,0x0
 	002a3f40 mov bx,ax
 	002a3f4c mov mar,0x546f20
 	002a3f58 mov ax,mar
 	002a3f64 push op
 	002a3f6c mov op,ax
 	002a3f74 farpush bx
 	002a3f7c setfuncargs 0x1
 	002a3f84 mov ax,0x3a6f20
 	002a3f90 farcall ax
 	002a3f98 farsubsp 0x1
 	002a3fa0 pop op
 	002a3fa8 sourceline 0x3a48
 	002a3fb0 mov ax,0x0
 	002a3fbc mov bx,ax
 	002a3fc8 mov mar,0x54ef20
 	002a3fd4 mov ax,mar
 	002a3fe0 push op
 	002a3fe8 mov op,ax
 	002a3ff0 farpush bx
 	002a3ff8 setfuncargs 0x1
 	002a4000 mov ax,0x3a6f20
 	002a400c farcall ax
 	002a4014 farsubsp 0x1
 	002a401c pop op
 	002a4024 sourceline 0x3a49
 	002a402c mov ax,0x1
 	002a4038 mov bx,ax
 	002a4044 mov mar,0x546f20
 	002a4050 mov ax,mar
 	002a405c push op
 	002a4064 mov op,ax
 	002a406c farpush bx
 	002a4074 setfuncargs 0x1
 	002a407c mov ax,0xe3ef20
 	002a4088 farcall ax
 	002a4090 farsubsp 0x1
 	002a4098 pop op
 	002a40a0 sourceline 0x3a4a
 	002a40a8 mov mar,0x47ef20
 	002a40b4 memread4 ax
 	002a40bc jz 0x002a41cc
		002a41cc: CONDITIONAL_JUMP
		002a40c4: FALL_THROUGH

	[002a40c4]
		002a3f2c: FALL_THROUGH
 	002a40c4 mov ax,0x1
 	002a40d0 mov bx,ax
 	002a40dc mov mar,0x36ef20
 	002a40e8 mov ax,mar
 	002a40f4 push op
 	002a40fc mov op,ax
 	002a4104 farpush bx
 	002a410c setfuncargs 0x1
 	002a4114 mov ax,0x3a6f20
 	002a4120 farcall ax
 	002a4128 farsubsp 0x1
 	002a4130 pop op
 	002a4138 mov ax,0x1
 	002a4144 mov bx,ax
 	002a4150 mov mar,0x486f20
 	002a415c mov ax,mar
 	002a4168 push op
 	002a4170 mov op,ax
 	002a4178 farpush bx
 	002a4180 setfuncargs 0x1
 	002a4188 mov ax,0x3a6f20
 	002a4194 farcall ax
 	002a419c farsubsp 0x1
 	002a41a4 pop op
 	002a41ac mov ax,0x1
 	002a41b8 mov mar,0x48ef20
 	002a41c4 memwrite4 ax
		002a41cc: FALL_THROUGH

	[002a41cc]
		002a3f2c: CONDITIONAL_JUMP
		002a40c4: FALL_THROUGH
 	002a41cc sourceline 0x3a4b
 	002a41d4 mov ax,0x0
 	002a41e0 mov bx,ax
 	002a41ec mov mar,0x326f20
 	002a41f8 mov ax,mar
 	002a4204 push op
 	002a420c mov op,ax
 	002a4214 farpush bx
 	002a421c setfuncargs 0x1
 	002a4224 mov ax,0x3a6f20
 	002a4230 farcall ax
 	002a4238 farsubsp 0x1
 	002a4240 pop op
 	002a4248 sourceline 0x3a4c
 	002a4250 mov ax,0x1
 	002a425c farpush ax
 	002a4264 setfuncargs 0x1
 	002a426c mov ax,0x426f20
 	002a4278 farcall ax
 	002a4280 farsubsp 0x1
 	002a4288 sourceline 0x3a4d
 	002a4290 mov mar,0xecef20
 	002a429c mov ax,mar
 	002a42a8 push op
 	002a42b0 mov op,ax
 	002a42b8 setfuncargs 0x0
 	002a42c0 mov ax,0xfa6f20
 	002a42cc farcall ax
 	002a42d4 pop op
 	002a42dc assert ax
 	002a42e4 farpush ax
 	002a42ec mov mar,0xfaef20
 	002a42f8 memread4 ax
 	002a4300 farpush ax
 	002a4308 setfuncargs 0x2
 	002a4310 mov ax,0x45ef20
 	002a431c farcall ax
 	002a4324 farsubsp 0x2
 	002a432c sourceline 0x3a4e
 	002a4334 setfuncargs 0x0
 	002a433c mov ax,0x476f20
 	002a4348 farcall ax
 	002a4350 sourceline 0x3a4f
 	002a4358 setfuncargs 0x0
 	002a4360 mov ax,0x75ef20
 	002a436c farcall ax
 	002a4374 sourceline 0x3a50
 	002a437c mov ax,0x11
 	002a4388 mov mar,0x3c6f20
 	002a4394 memwrite4 ax
		002a439c: FALL_THROUGH

	[002a439c]
		002a2938: CONDITIONAL_JUMP
		002a3f24: CONDITIONAL_JUMP
		002a41cc: FALL_THROUGH
 	002a439c sourceline 0x3a53
 	002a43a4 mov ax,0x0
 	002a43b0 stackptr 0x8
 	002a43b8 memzerond
 	002a43bc ret

gFuturisticPuzzle_OnClick$2:
	[002a43c0]
 	002a43c0 sourceline 0x3a58
 	002a43c8 thisaddr
 	002a43d0 stackptr 0x8
 	002a43d8 memread4 ax
 	002a43e0 meminit ax
 	002a43e8 sourceline 0x3a59
*	002a43f0 mov mar,0x3cef20
 	002a43fc mov ax,mar
 	002a4408 push op
 	002a4410 mov op,ax
 	002a4418 setfuncargs 0x0
 	002a4420 mov ax,0x89ef20
 	002a442c farcall ax
 	002a4434 pop op
 	002a443c push ax
 	002a4444 mov ax,0x0
 	002a4450 pop bx
 	002a4458 cmpneq bx,ax
 	002a4464 mov ax,bx
 	002a4470 jz 0x002a557c
		002a557c: CONDITIONAL_JUMP
		002a4478: FALL_THROUGH

	[002a4478]
		002a43c0: FALL_THROUGH
 	002a4478 sourceline 0x3a5b
 	002a4480 mov ax,0x2
 	002a448c farpush ax
 	002a4494 setfuncargs 0x1
 	002a449c mov ax,0x39ef20
 	002a44a8 farcall ax
 	002a44b0 farsubsp 0x1
 	002a44b8 jz 0x002a4534
		002a4534: CONDITIONAL_JUMP
		002a44c0: FALL_THROUGH

	[002a44c0]
		002a4478: FALL_THROUGH
 	002a44c0 mov ax,0x0
 	002a44cc mov bx,ax
 	002a44d8 mov mar,0x3cef20
 	002a44e4 mov ax,mar
 	002a44f0 push op
 	002a44f8 mov op,ax
 	002a4500 farpush bx
 	002a4508 setfuncargs 0x1
 	002a4510 mov ax,0x436f20
 	002a451c farcall ax
 	002a4524 farsubsp 0x1
 	002a452c pop op
		002a4534: FALL_THROUGH

	[002a4534]
		002a4478: CONDITIONAL_JUMP
		002a44c0: FALL_THROUGH
 	002a4534 sourceline 0x3a5c
 	002a453c mov ax,0x1
 	002a4548 farpush ax
 	002a4550 setfuncargs 0x1
 	002a4558 mov ax,0x39ef20
 	002a4564 farcall ax
 	002a456c farsubsp 0x1
 	002a4574 jz 0x002a556c
		002a556c: CONDITIONAL_JUMP
		002a457c: FALL_THROUGH

	[002a457c]
		002a4534: FALL_THROUGH
 	002a457c sourceline 0x3a5e
 	002a4584 mov mar,0x3cef20
 	002a4590 mov ax,mar
 	002a459c push op
 	002a45a4 mov op,ax
 	002a45ac setfuncargs 0x0
 	002a45b4 mov ax,0x89ef20
 	002a45c0 farcall ax
 	002a45c8 pop op
 	002a45d0 push ax
 	002a45d8 mov mar,0x8f6f20
 	002a45e4 mov ax,mar
 	002a45f0 pop bx
 	002a45f8 cmpeq bx,ax
 	002a4604 mov ax,bx
 	002a4610 jz 0x002a4e68
		002a4e68: CONDITIONAL_JUMP
		002a4618: FALL_THROUGH

	[002a4618]
		002a457c: FALL_THROUGH
 	002a4618 sourceline 0x3a60
 	002a4620 mov mar,0x123ef20
 	002a462c memread4 ax
 	002a4634 lnot ax
 	002a463c jz 0x002a4e58
		002a4e58: CONDITIONAL_JUMP
		002a4644: FALL_THROUGH

	[002a4644]
		002a4618: FALL_THROUGH
 	002a4644 sourceline 0x3a62
 	002a464c mov ax,0x0
 	002a4658 mov bx,ax
 	002a4664 mov mar,0x3cef20
 	002a4670 mov ax,mar
 	002a467c push op
 	002a4684 mov op,ax
 	002a468c farpush bx
 	002a4694 setfuncargs 0x1
 	002a469c mov ax,0x436f20
 	002a46a8 farcall ax
 	002a46b0 farsubsp 0x1
 	002a46b8 pop op
 	002a46c0 sourceline 0x3a63
 	002a46c8 mov ax,0x1
 	002a46d4 mov bx,ax
 	002a46e0 mov mar,0x626f20
 	002a46ec mov ax,mar
 	002a46f8 push op
 	002a4700 mov op,ax
 	002a4708 farpush bx
 	002a4710 setfuncargs 0x1
 	002a4718 mov ax,0x5cef20
 	002a4724 farcall ax
 	002a472c farsubsp 0x1
 	002a4734 pop op
 	002a473c sourceline 0x3a64
 	002a4744 mov ax,0x1
 	002a4750 mov mar,0x123ef20
 	002a475c memwrite4 ax
 	002a4764 sourceline 0x3a65
 	002a476c mov ax,0x0
 	002a4778 mov bx,ax
 	002a4784 mov mar,0x30ef20
 	002a4790 mov ax,mar
 	002a479c push op
 	002a47a4 mov op,ax
 	002a47ac farpush bx
 	002a47b4 setfuncargs 0x1
 	002a47bc mov ax,0x3a6f20
 	002a47c8 farcall ax
 	002a47d0 farsubsp 0x1
 	002a47d8 pop op
 	002a47e0 sourceline 0x3a66
 	002a47e8 mov ax,0x0
 	002a47f4 mov bx,ax
 	002a4800 mov mar,0x35ef20
 	002a480c mov ax,mar
 	002a4818 push op
 	002a4820 mov op,ax
 	002a4828 farpush bx
 	002a4830 setfuncargs 0x1
 	002a4838 mov ax,0x5cef20
 	002a4844 farcall ax
 	002a484c farsubsp 0x1
 	002a4854 pop op
 	002a485c sourceline 0x3a67
 	002a4864 mov ax,0x1
 	002a4870 mov bx,ax
 	002a487c mov mar,0x3cef20
 	002a4888 mov ax,mar
 	002a4894 push op
 	002a489c mov op,ax
 	002a48a4 farpush bx
 	002a48ac setfuncargs 0x1
 	002a48b4 mov ax,0x69ef20
 	002a48c0 farcall ax
 	002a48c8 farsubsp 0x1
 	002a48d0 pop op
 	002a48d8 sourceline 0x3a68
 	002a48e0 push op
 	002a48e8 mov ax,0x2c7718
 	002a48f4 farpush ax
 	002a48fc mov ax,0x138
 	002a4908 farpush ax
 	002a4910 mov ax,0x92
 	002a491c farpush ax
 	002a4924 mov ax,0x0
 	002a4930 farpush ax
 	002a4938 mov mar,0x3cef20
 	002a4944 mov ax,mar
 	002a4950 mov op,ax
 	002a4958 setfuncargs 0x4
 	002a4960 mov ax,0x6aef20
 	002a496c farcall ax
 	002a4974 farsubsp 0x4
 	002a497c pop op
 	002a4984 sourceline 0x3a69
 	002a498c mov ax,0x1
 	002a4998 mov mar,0x1246f20
 	002a49a4 memwrite4 ax
 	002a49ac sourceline 0x3a6a
 	002a49b4 mov ax,0x98
 	002a49c0 mov bx,ax
 	002a49cc mov mar,0xfeef20
 	002a49d8 mov ax,mar
 	002a49e4 push op
 	002a49ec mov op,ax
 	002a49f4 farpush bx
 	002a49fc setfuncargs 0x1
 	002a4a04 mov ax,0x3f6f20
 	002a4a10 farcall ax
 	002a4a18 farsubsp 0x1
 	002a4a20 pop op
 	002a4a28 sourceline 0x3a6b
 	002a4a30 mov ax,0x9a
 	002a4a3c mov bx,ax
 	002a4a48 mov mar,0xff6f20
 	002a4a54 mov ax,mar
 	002a4a60 push op
 	002a4a68 mov op,ax
 	002a4a70 farpush bx
 	002a4a78 setfuncargs 0x1
 	002a4a80 mov ax,0x3f6f20
 	002a4a8c farcall ax
 	002a4a94 farsubsp 0x1
 	002a4a9c pop op
 	002a4aa4 sourceline 0x3a6c
 	002a4aac mov ax,0x9c
 	002a4ab8 mov bx,ax
 	002a4ac4 mov mar,0xffef20
 	002a4ad0 mov ax,mar
 	002a4adc push op
 	002a4ae4 mov op,ax
 	002a4aec farpush bx
 	002a4af4 setfuncargs 0x1
 	002a4afc mov ax,0x3f6f20
 	002a4b08 farcall ax
 	002a4b10 farsubsp 0x1
 	002a4b18 pop op
 	002a4b20 sourceline 0x3a6d
 	002a4b28 mov ax,0x9e
 	002a4b34 mov bx,ax
 	002a4b40 mov mar,0x1006f20
 	002a4b4c mov ax,mar
 	002a4b58 push op
 	002a4b60 mov op,ax
 	002a4b68 farpush bx
 	002a4b70 setfuncargs 0x1
 	002a4b78 mov ax,0x3f6f20
 	002a4b84 farcall ax
 	002a4b8c farsubsp 0x1
 	002a4b94 pop op
 	002a4b9c sourceline 0x3a6e
 	002a4ba4 mov ax,0xa0
 	002a4bb0 mov bx,ax
 	002a4bbc mov mar,0x100ef20
 	002a4bc8 mov ax,mar
 	002a4bd4 push op
 	002a4bdc mov op,ax
 	002a4be4 farpush bx
 	002a4bec setfuncargs 0x1
 	002a4bf4 mov ax,0x3f6f20
 	002a4c00 farcall ax
 	002a4c08 farsubsp 0x1
 	002a4c10 pop op
 	002a4c18 sourceline 0x3a6f
 	002a4c20 mov ax,0xa2
 	002a4c2c mov bx,ax
 	002a4c38 mov mar,0x1016f20
 	002a4c44 mov ax,mar
 	002a4c50 push op
 	002a4c58 mov op,ax
 	002a4c60 farpush bx
 	002a4c68 setfuncargs 0x1
 	002a4c70 mov ax,0x3f6f20
 	002a4c7c farcall ax
 	002a4c84 farsubsp 0x1
 	002a4c8c pop op
 	002a4c94 sourceline 0x3a70
 	002a4c9c mov ax,0xa4
 	002a4ca8 mov bx,ax
 	002a4cb4 mov mar,0x101ef20
 	002a4cc0 mov ax,mar
 	002a4ccc push op
 	002a4cd4 mov op,ax
 	002a4cdc farpush bx
 	002a4ce4 setfuncargs 0x1
 	002a4cec mov ax,0x3f6f20
 	002a4cf8 farcall ax
 	002a4d00 farsubsp 0x1
 	002a4d08 pop op
 	002a4d10 sourceline 0x3a71
 	002a4d18 mov ax,0xa6
 	002a4d24 mov bx,ax
 	002a4d30 mov mar,0x1026f20
 	002a4d3c mov ax,mar
 	002a4d48 push op
 	002a4d50 mov op,ax
 	002a4d58 farpush bx
 	002a4d60 setfuncargs 0x1
 	002a4d68 mov ax,0x3f6f20
 	002a4d74 farcall ax
 	002a4d7c farsubsp 0x1
 	002a4d84 pop op
 	002a4d8c sourceline 0x3a72
 	002a4d94 mov ax,0xa8
 	002a4da0 mov bx,ax
 	002a4dac mov mar,0x102ef20
 	002a4db8 mov ax,mar
 	002a4dc4 push op
 	002a4dcc mov op,ax
 	002a4dd4 farpush bx
 	002a4ddc setfuncargs 0x1
 	002a4de4 mov ax,0x3f6f20
 	002a4df0 farcall ax
 	002a4df8 farsubsp 0x1
 	002a4e00 pop op
 	002a4e08 sourceline 0x3a73
 	002a4e10 mov ax,0xa
 	002a4e1c mov mar,0x124ef20
 	002a4e28 memwrite4 ax
 	002a4e30 sourceline 0x3a74
 	002a4e38 mov ax,0x1
 	002a4e44 mov mar,0x1256f20
 	002a4e50 memwrite4 ax
		002a4e58: FALL_THROUGH

	[002a4e58]
		002a4618: CONDITIONAL_JUMP
		002a4644: FALL_THROUGH
 	002a4e58 sourceline 0x3a76
 	002a4e60 jmp 0x002a556c
		002a556c: UNCONDITIONAL_JUMP

	[002a4e68]
		002a457c: CONDITIONAL_JUMP
 	002a4e68 sourceline 0x3a77
 	002a4e70 mov mar,0x3cef20
 	002a4e7c mov ax,mar
 	002a4e88 push op
 	002a4e90 mov op,ax
 	002a4e98 setfuncargs 0x0
 	002a4ea0 mov ax,0x89ef20
 	002a4eac farcall ax
 	002a4eb4 pop op
 	002a4ebc push ax
 	002a4ec4 mov mar,0x94ef20
 	002a4ed0 mov ax,mar
 	002a4edc pop bx
 	002a4ee4 cmpeq bx,ax
 	002a4ef0 mov ax,bx
 	002a4efc jz 0x002a503c
		002a503c: CONDITIONAL_JUMP
		002a4f04: FALL_THROUGH

	[002a4f04]
		002a4e68: FALL_THROUGH
 	002a4f04 sourceline 0x3a79
 	002a4f0c mov ax,0x1
 	002a4f18 mov bx,ax
 	002a4f24 mov mar,0x3cef20
 	002a4f30 mov ax,mar
 	002a4f3c push op
 	002a4f44 mov op,ax
 	002a4f4c farpush bx
 	002a4f54 setfuncargs 0x1
 	002a4f5c mov ax,0x69ef20
 	002a4f68 farcall ax
 	002a4f70 farsubsp 0x1
 	002a4f78 pop op
 	002a4f80 sourceline 0x3a7a
 	002a4f88 push op
 	002a4f90 mov ax,0x2c775f
 	002a4f9c farpush ax
 	002a4fa4 mov ax,0x138
 	002a4fb0 farpush ax
 	002a4fb8 mov ax,0x92
 	002a4fc4 farpush ax
 	002a4fcc mov ax,0x0
 	002a4fd8 farpush ax
 	002a4fe0 mov mar,0x3cef20
 	002a4fec mov ax,mar
 	002a4ff8 mov op,ax
 	002a5000 setfuncargs 0x4
 	002a5008 mov ax,0x6aef20
 	002a5014 farcall ax
 	002a501c farsubsp 0x4
 	002a5024 pop op
 	002a502c sourceline 0x3a7b
 	002a5034 jmp 0x002a556c
		002a556c: UNCONDITIONAL_JUMP

	[002a503c]
		002a4e68: CONDITIONAL_JUMP
 	002a503c sourceline 0x3a7c
 	002a5044 mov mar,0x3cef20
 	002a5050 mov ax,mar
 	002a505c push op
 	002a5064 mov op,ax
 	002a506c setfuncargs 0x0
 	002a5074 mov ax,0x89ef20
 	002a5080 farcall ax
 	002a5088 pop op
 	002a5090 push ax
 	002a5098 mov mar,0x90ef20
 	002a50a4 mov ax,mar
 	002a50b0 pop bx
 	002a50b8 cmpeq bx,ax
 	002a50c4 mov ax,bx
 	002a50d0 jz 0x002a5210
		002a5210: CONDITIONAL_JUMP
		002a50d8: FALL_THROUGH

	[002a50d8]
		002a503c: FALL_THROUGH
 	002a50d8 sourceline 0x3a7e
 	002a50e0 mov ax,0x1
 	002a50ec mov bx,ax
 	002a50f8 mov mar,0x3cef20
 	002a5104 mov ax,mar
 	002a5110 push op
 	002a5118 mov op,ax
 	002a5120 farpush bx
 	002a5128 setfuncargs 0x1
 	002a5130 mov ax,0x69ef20
 	002a513c farcall ax
 	002a5144 farsubsp 0x1
 	002a514c pop op
 	002a5154 sourceline 0x3a7f
 	002a515c push op
 	002a5164 mov ax,0x2c7786
 	002a5170 farpush ax
 	002a5178 mov ax,0x138
 	002a5184 farpush ax
 	002a518c mov ax,0x92
 	002a5198 farpush ax
 	002a51a0 mov ax,0x0
 	002a51ac farpush ax
 	002a51b4 mov mar,0x3cef20
 	002a51c0 mov ax,mar
 	002a51cc mov op,ax
 	002a51d4 setfuncargs 0x4
 	002a51dc mov ax,0x6aef20
 	002a51e8 farcall ax
 	002a51f0 farsubsp 0x4
 	002a51f8 pop op
 	002a5200 sourceline 0x3a80
 	002a5208 jmp 0x002a556c
		002a556c: UNCONDITIONAL_JUMP

	[002a5210]
		002a503c: CONDITIONAL_JUMP
 	002a5210 sourceline 0x3a81
 	002a5218 mov mar,0x3cef20
 	002a5224 mov ax,mar
 	002a5230 push op
 	002a5238 mov op,ax
 	002a5240 setfuncargs 0x0
 	002a5248 mov ax,0x89ef20
 	002a5254 farcall ax
 	002a525c pop op
 	002a5264 push ax
 	002a526c mov mar,0x956f20
 	002a5278 mov ax,mar
 	002a5284 pop bx
 	002a528c cmpeq bx,ax
 	002a5298 mov ax,bx
 	002a52a4 jnz 0x002a5360
		002a5360: CONDITIONAL_JUMP
		002a52ac: FALL_THROUGH

	[002a52ac]
		002a5210: FALL_THROUGH
 	002a52ac push ax
 	002a52b4 mov mar,0x3cef20
 	002a52c0 mov ax,mar
 	002a52cc push op
 	002a52d4 mov op,ax
 	002a52dc setfuncargs 0x0
 	002a52e4 mov ax,0x89ef20
 	002a52f0 farcall ax
 	002a52f8 pop op
 	002a5300 push ax
 	002a5308 mov mar,0x95ef20
 	002a5314 mov ax,mar
 	002a5320 pop bx
 	002a5328 cmpeq bx,ax
 	002a5334 mov ax,bx
 	002a5340 pop bx
 	002a5348 lor bx,ax
 	002a5354 mov ax,bx
		002a5360: FALL_THROUGH

	[002a5360]
		002a5210: CONDITIONAL_JUMP
		002a52ac: FALL_THROUGH
 	002a5360 jz 0x002a54a0
		002a54a0: CONDITIONAL_JUMP
		002a5368: FALL_THROUGH

	[002a5368]
		002a5360: FALL_THROUGH
 	002a5368 sourceline 0x3a83
 	002a5370 mov ax,0x1
 	002a537c mov bx,ax
 	002a5388 mov mar,0x3cef20
 	002a5394 mov ax,mar
 	002a53a0 push op
 	002a53a8 mov op,ax
 	002a53b0 farpush bx
 	002a53b8 setfuncargs 0x1
 	002a53c0 mov ax,0x69ef20
 	002a53cc farcall ax
 	002a53d4 farsubsp 0x1
 	002a53dc pop op
 	002a53e4 sourceline 0x3a84
 	002a53ec push op
 	002a53f4 mov ax,0x2c77c1
 	002a5400 farpush ax
 	002a5408 mov ax,0x138
 	002a5414 farpush ax
 	002a541c mov ax,0x92
 	002a5428 farpush ax
 	002a5430 mov ax,0x0
 	002a543c farpush ax
 	002a5444 mov mar,0x3cef20
 	002a5450 mov ax,mar
 	002a545c mov op,ax
 	002a5464 setfuncargs 0x4
 	002a546c mov ax,0x6aef20
 	002a5478 farcall ax
 	002a5480 farsubsp 0x4
 	002a5488 pop op
 	002a5490 sourceline 0x3a85
 	002a5498 jmp 0x002a556c
		002a556c: UNCONDITIONAL_JUMP

	[002a54a0]
		002a5360: CONDITIONAL_JUMP
 	002a54a0 sourceline 0x3a88
 	002a54a8 mov ax,0x1
 	002a54b4 mov bx,ax
 	002a54c0 mov mar,0x3cef20
 	002a54cc mov ax,mar
 	002a54d8 push op
 	002a54e0 mov op,ax
 	002a54e8 farpush bx
 	002a54f0 setfuncargs 0x1
 	002a54f8 mov ax,0x69ef20
 	002a5504 farcall ax
 	002a550c farsubsp 0x1
 	002a5514 pop op
 	002a551c sourceline 0x3a89
 	002a5524 mov ax,0x3
 	002a5530 push ax
 	002a5538 mov ax,0x1
 	002a5544 push ax
 	002a554c mov ax,0x10ae5c
 	002a5558 call ax
 	002a5560 sub sp,0x8
		002a556c: FALL_THROUGH

	[002a556c]
		002a4534: CONDITIONAL_JUMP
		002a4e58: UNCONDITIONAL_JUMP
		002a4f04: UNCONDITIONAL_JUMP
		002a50d8: UNCONDITIONAL_JUMP
		002a5368: UNCONDITIONAL_JUMP
		002a54a0: FALL_THROUGH
 	002a556c sourceline 0x3a8c
 	002a5574 jmp 0x002a5bd8
		002a5bd8: UNCONDITIONAL_JUMP

	[002a557c]
		002a43c0: CONDITIONAL_JUMP
 	002a557c sourceline 0x3a8f
 	002a5584 mov ax,0x1
 	002a5590 farpush ax
 	002a5598 setfuncargs 0x1
 	002a55a0 mov ax,0x39ef20
 	002a55ac farcall ax
 	002a55b4 farsubsp 0x1
 	002a55bc jz 0x002a5974
		002a5974: CONDITIONAL_JUMP
		002a55c4: FALL_THROUGH

	[002a55c4]
		002a557c: FALL_THROUGH
 	002a55c4 sourceline 0x3a91
 	002a55cc mov mar,0x626f20
 	002a55d8 mov ax,mar
 	002a55e4 push op
 	002a55ec mov op,ax
 	002a55f4 setfuncargs 0x0
 	002a55fc mov ax,0x606f20
 	002a5608 farcall ax
 	002a5610 pop op
 	002a5618 lnot ax
 	002a5620 jz 0x002a56a4
		002a56a4: CONDITIONAL_JUMP
		002a5628: FALL_THROUGH

	[002a5628]
		002a55c4: FALL_THROUGH
 	002a5628 push ax
 	002a5630 mov mar,0x30ef20
 	002a563c mov ax,mar
 	002a5648 push op
 	002a5650 mov op,ax
 	002a5658 setfuncargs 0x0
 	002a5660 mov ax,0x316f20
 	002a566c farcall ax
 	002a5674 pop op
 	002a567c lnot ax
 	002a5684 pop bx
 	002a568c land bx,ax
 	002a5698 mov ax,bx
		002a56a4: FALL_THROUGH

	[002a56a4]
		002a55c4: CONDITIONAL_JUMP
		002a5628: FALL_THROUGH
 	002a56a4 jz 0x002a5800
		002a5800: CONDITIONAL_JUMP
		002a56ac: FALL_THROUGH

	[002a56ac]
		002a56a4: FALL_THROUGH
 	002a56ac sourceline 0x3a93
 	002a56b4 mov mar,0x32ef20
 	002a56c0 memread4 ax
 	002a56c8 lnot ax
 	002a56d0 jz 0x002a5800
		002a5800: CONDITIONAL_JUMP
		002a56d8: FALL_THROUGH

	[002a56d8]
		002a56ac: FALL_THROUGH
 	002a56d8 sourceline 0x3a95
 	002a56e0 mov ax,0x1
 	002a56ec mov bx,ax
 	002a56f8 mov mar,0x3cef20
 	002a5704 mov ax,mar
 	002a5710 push op
 	002a5718 mov op,ax
 	002a5720 farpush bx
 	002a5728 setfuncargs 0x1
 	002a5730 mov ax,0x69ef20
 	002a573c farcall ax
 	002a5744 farsubsp 0x1
 	002a574c pop op
 	002a5754 sourceline 0x3a96
 	002a575c push op
 	002a5764 mov ax,0x2c77e7
 	002a5770 farpush ax
 	002a5778 mov ax,0x138
 	002a5784 farpush ax
 	002a578c mov ax,0x92
 	002a5798 farpush ax
 	002a57a0 mov ax,0x0
 	002a57ac farpush ax
 	002a57b4 mov mar,0x3cef20
 	002a57c0 mov ax,mar
 	002a57cc mov op,ax
 	002a57d4 setfuncargs 0x4
 	002a57dc mov ax,0x6aef20
 	002a57e8 farcall ax
 	002a57f0 farsubsp 0x4
 	002a57f8 pop op
		002a5800: FALL_THROUGH

	[002a5800]
		002a56a4: CONDITIONAL_JUMP
		002a56ac: CONDITIONAL_JUMP
		002a56d8: FALL_THROUGH
 	002a5800 sourceline 0x3a99
 	002a5808 mov mar,0x30ef20
 	002a5814 mov ax,mar
 	002a5820 push op
 	002a5828 mov op,ax
 	002a5830 setfuncargs 0x0
 	002a5838 mov ax,0x316f20
 	002a5844 farcall ax
 	002a584c pop op
 	002a5854 jz 0x002a58a0
		002a58a0: CONDITIONAL_JUMP
		002a585c: FALL_THROUGH

	[002a585c]
		002a5800: FALL_THROUGH
 	002a585c push ax
 	002a5864 mov mar,0x32ef20
 	002a5870 memread4 ax
 	002a5878 lnot ax
 	002a5880 pop bx
 	002a5888 land bx,ax
 	002a5894 mov ax,bx
		002a58a0: FALL_THROUGH

	[002a58a0]
		002a5800: CONDITIONAL_JUMP
		002a585c: FALL_THROUGH
 	002a58a0 jz 0x002a5974
		002a5974: CONDITIONAL_JUMP
		002a58a8: FALL_THROUGH

	[002a58a8]
		002a58a0: FALL_THROUGH
 	002a58a8 sourceline 0x3a9b
 	002a58b0 mov mar,0x3aef20
 	002a58bc memread4 ax
 	002a58c4 push ax
 	002a58cc mov ax,0x0
 	002a58d8 pop bx
 	002a58e0 cmple bx,ax
 	002a58ec mov ax,bx
 	002a58f8 jz 0x002a5974
		002a5974: CONDITIONAL_JUMP
		002a5900: FALL_THROUGH

	[002a5900]
		002a58a8: FALL_THROUGH
 	002a5900 mov ax,0x0
 	002a590c mov bx,ax
 	002a5918 mov mar,0x30ef20
 	002a5924 mov ax,mar
 	002a5930 push op
 	002a5938 mov op,ax
 	002a5940 farpush bx
 	002a5948 setfuncargs 0x1
 	002a5950 mov ax,0x3a6f20
 	002a595c farcall ax
 	002a5964 farsubsp 0x1
 	002a596c pop op
		002a5974: FALL_THROUGH

	[002a5974]
		002a557c: CONDITIONAL_JUMP
		002a58a0: CONDITIONAL_JUMP
		002a58a8: CONDITIONAL_JUMP
		002a5900: FALL_THROUGH
 	002a5974 sourceline 0x3a9f
 	002a597c mov ax,0x2
 	002a5988 farpush ax
 	002a5990 setfuncargs 0x1
 	002a5998 mov ax,0x39ef20
 	002a59a4 farcall ax
 	002a59ac farsubsp 0x1
 	002a59b4 jz 0x002a5bd8
		002a5bd8: CONDITIONAL_JUMP
		002a59bc: FALL_THROUGH

	[002a59bc]
		002a5974: FALL_THROUGH
 	002a59bc sourceline 0x3aa1
 	002a59c4 mov mar,0x30ef20
 	002a59d0 mov ax,mar
 	002a59dc push op
 	002a59e4 mov op,ax
 	002a59ec setfuncargs 0x0
 	002a59f4 mov ax,0x316f20
 	002a5a00 farcall ax
 	002a5a08 pop op
 	002a5a10 lnot ax
 	002a5a18 jz 0x002a5bd8
		002a5bd8: CONDITIONAL_JUMP
		002a5a20: FALL_THROUGH

	[002a5a20]
		002a59bc: FALL_THROUGH
 	002a5a20 sourceline 0x3aa3
 	002a5a28 mov mar,0x626f20
 	002a5a34 mov ax,mar
 	002a5a40 push op
 	002a5a48 mov op,ax
 	002a5a50 setfuncargs 0x0
 	002a5a58 mov ax,0x606f20
 	002a5a64 farcall ax
 	002a5a6c pop op
 	002a5a74 lnot ax
 	002a5a7c jz 0x002a5bd8
		002a5bd8: CONDITIONAL_JUMP
		002a5a84: FALL_THROUGH

	[002a5a84]
		002a5a20: FALL_THROUGH
 	002a5a84 sourceline 0x3aa5
 	002a5a8c mov mar,0x32ef20
 	002a5a98 memread4 ax
 	002a5aa0 lnot ax
 	002a5aa8 jz 0x002a5bd8
		002a5bd8: CONDITIONAL_JUMP
		002a5ab0: FALL_THROUGH

	[002a5ab0]
		002a5a84: FALL_THROUGH
 	002a5ab0 sourceline 0x3aa7
 	002a5ab8 mov ax,0x1
 	002a5ac4 mov bx,ax
 	002a5ad0 mov mar,0x3cef20
 	002a5adc mov ax,mar
 	002a5ae8 push op
 	002a5af0 mov op,ax
 	002a5af8 farpush bx
 	002a5b00 setfuncargs 0x1
 	002a5b08 mov ax,0x69ef20
 	002a5b14 farcall ax
 	002a5b1c farsubsp 0x1
 	002a5b24 pop op
 	002a5b2c sourceline 0x3aa8
 	002a5b34 push op
 	002a5b3c mov ax,0x2c7835
 	002a5b48 farpush ax
 	002a5b50 mov ax,0x138
 	002a5b5c farpush ax
 	002a5b64 mov ax,0x92
 	002a5b70 farpush ax
 	002a5b78 mov ax,0x0
 	002a5b84 farpush ax
 	002a5b8c mov mar,0x3cef20
 	002a5b98 mov ax,mar
 	002a5ba4 mov op,ax
 	002a5bac setfuncargs 0x4
 	002a5bb4 mov ax,0x6aef20
 	002a5bc0 farcall ax
 	002a5bc8 farsubsp 0x4
 	002a5bd0 pop op
		002a5bd8: FALL_THROUGH

	[002a5bd8]
		002a556c: UNCONDITIONAL_JUMP
		002a5974: CONDITIONAL_JUMP
		002a59bc: CONDITIONAL_JUMP
		002a5a20: CONDITIONAL_JUMP
		002a5a84: CONDITIONAL_JUMP
		002a5ab0: FALL_THROUGH
 	002a5bd8 sourceline 0x3aae
 	002a5be0 mov ax,0x0
 	002a5bec stackptr 0x8
 	002a5bf4 memzerond
 	002a5bf8 ret

BtnMainMenu_OnClick$2:
	[002a5bfc]
 	002a5bfc sourceline 0x3ab3
 	002a5c04 thisaddr
 	002a5c0c stackptr 0x8
 	002a5c14 memread4 ax
 	002a5c1c meminit ax
 	002a5c24 sourceline 0x3ab4
 	002a5c2c stackptr 0xc
 	002a5c34 memread4 ax
 	002a5c3c push ax
 	002a5c44 mov ax,0x1
 	002a5c50 pop bx
 	002a5c58 cmpeq bx,ax
 	002a5c64 mov ax,bx
 	002a5c70 jz 0x002a76ec
		002a76ec: CONDITIONAL_JUMP
		002a5c78: FALL_THROUGH

	[002a5c78]
		002a5bfc: FALL_THROUGH
 	002a5c78 sourceline 0x3ab6
*	002a5c80 mov mar,0x326f20
 	002a5c8c mov ax,mar
 	002a5c98 push op
 	002a5ca0 mov op,ax
 	002a5ca8 setfuncargs 0x0
 	002a5cb0 mov ax,0x316f20
 	002a5cbc farcall ax
 	002a5cc4 pop op
 	002a5ccc lnot ax
 	002a5cd4 jz 0x002a76ec
		002a76ec: CONDITIONAL_JUMP
		002a5cdc: FALL_THROUGH

	[002a5cdc]
		002a5c78: FALL_THROUGH
 	002a5cdc sourceline 0x3ab8
 	002a5ce4 mov mar,0x3c6f20
 	002a5cf0 memread4 ax
 	002a5cf8 push ax
 	002a5d00 mov ax,0x0
 	002a5d0c pop bx
 	002a5d14 cmple bx,ax
 	002a5d20 mov ax,bx
 	002a5d2c jz 0x002a5d78
		002a5d78: CONDITIONAL_JUMP
		002a5d34: FALL_THROUGH

	[002a5d34]
		002a5cdc: FALL_THROUGH
 	002a5d34 push ax
 	002a5d3c mov mar,0x32ef20
 	002a5d48 memread4 ax
 	002a5d50 lnot ax
 	002a5d58 pop bx
 	002a5d60 land bx,ax
 	002a5d6c mov ax,bx
		002a5d78: FALL_THROUGH

	[002a5d78]
		002a5cdc: CONDITIONAL_JUMP
		002a5d34: FALL_THROUGH
 	002a5d78 jz 0x002a76ec
		002a76ec: CONDITIONAL_JUMP
		002a5d80: FALL_THROUGH

	[002a5d80]
		002a5d78: FALL_THROUGH
 	002a5d80 sourceline 0x3aba
 	002a5d88 mov mar,0x3cef20
 	002a5d94 mov ax,mar
 	002a5da0 push op
 	002a5da8 mov op,ax
 	002a5db0 setfuncargs 0x0
 	002a5db8 mov ax,0x3d6f20
 	002a5dc4 farcall ax
 	002a5dcc pop op
 	002a5dd4 push ax
 	002a5ddc mov ax,0x1
 	002a5de8 pop bx
 	002a5df0 cmpneq bx,ax
 	002a5dfc mov ax,bx
 	002a5e08 jz 0x002a5eb8
		002a5eb8: CONDITIONAL_JUMP
		002a5e10: FALL_THROUGH

	[002a5e10]
		002a5d80: FALL_THROUGH
 	002a5e10 push ax
 	002a5e18 mov mar,0x3cef20
 	002a5e24 mov ax,mar
 	002a5e30 push op
 	002a5e38 mov op,ax
 	002a5e40 setfuncargs 0x0
 	002a5e48 mov ax,0x3d6f20
 	002a5e54 farcall ax
 	002a5e5c pop op
 	002a5e64 push ax
 	002a5e6c mov ax,0x28
 	002a5e78 pop bx
 	002a5e80 cmpneq bx,ax
 	002a5e8c mov ax,bx
 	002a5e98 pop bx
 	002a5ea0 land bx,ax
 	002a5eac mov ax,bx
		002a5eb8: FALL_THROUGH

	[002a5eb8]
		002a5d80: CONDITIONAL_JUMP
		002a5e10: FALL_THROUGH
 	002a5eb8 jz 0x002a5f68
		002a5f68: CONDITIONAL_JUMP
		002a5ec0: FALL_THROUGH

	[002a5ec0]
		002a5eb8: FALL_THROUGH
 	002a5ec0 push ax
 	002a5ec8 mov mar,0x3cef20
 	002a5ed4 mov ax,mar
 	002a5ee0 push op
 	002a5ee8 mov op,ax
 	002a5ef0 setfuncargs 0x0
 	002a5ef8 mov ax,0x3d6f20
 	002a5f04 farcall ax
 	002a5f0c pop op
 	002a5f14 push ax
 	002a5f1c mov ax,0x29
 	002a5f28 pop bx
 	002a5f30 cmpneq bx,ax
 	002a5f3c mov ax,bx
 	002a5f48 pop bx
 	002a5f50 land bx,ax
 	002a5f5c mov ax,bx
		002a5f68: FALL_THROUGH

	[002a5f68]
		002a5eb8: CONDITIONAL_JUMP
		002a5ec0: FALL_THROUGH
 	002a5f68 jz 0x002a6018
		002a6018: CONDITIONAL_JUMP
		002a5f70: FALL_THROUGH

	[002a5f70]
		002a5f68: FALL_THROUGH
 	002a5f70 push ax
 	002a5f78 mov mar,0x3cef20
 	002a5f84 mov ax,mar
 	002a5f90 push op
 	002a5f98 mov op,ax
 	002a5fa0 setfuncargs 0x0
 	002a5fa8 mov ax,0x3d6f20
 	002a5fb4 farcall ax
 	002a5fbc pop op
 	002a5fc4 push ax
 	002a5fcc mov ax,0x2a
 	002a5fd8 pop bx
 	002a5fe0 cmpneq bx,ax
 	002a5fec mov ax,bx
 	002a5ff8 pop bx
 	002a6000 land bx,ax
 	002a600c mov ax,bx
		002a6018: FALL_THROUGH

	[002a6018]
		002a5f68: CONDITIONAL_JUMP
		002a5f70: FALL_THROUGH
 	002a6018 jz 0x002a60c8
		002a60c8: CONDITIONAL_JUMP
		002a6020: FALL_THROUGH

	[002a6020]
		002a6018: FALL_THROUGH
 	002a6020 push ax
 	002a6028 mov mar,0x3cef20
 	002a6034 mov ax,mar
 	002a6040 push op
 	002a6048 mov op,ax
 	002a6050 setfuncargs 0x0
 	002a6058 mov ax,0x3d6f20
 	002a6064 farcall ax
 	002a606c pop op
 	002a6074 push ax
 	002a607c mov ax,0x2b
 	002a6088 pop bx
 	002a6090 cmpneq bx,ax
 	002a609c mov ax,bx
 	002a60a8 pop bx
 	002a60b0 land bx,ax
 	002a60bc mov ax,bx
		002a60c8: FALL_THROUGH

	[002a60c8]
		002a6018: CONDITIONAL_JUMP
		002a6020: FALL_THROUGH
 	002a60c8 jz 0x002a76ec
		002a76ec: CONDITIONAL_JUMP
		002a60d0: FALL_THROUGH

	[002a60d0]
		002a60c8: FALL_THROUGH
 	002a60d0 sourceline 0x3abc
 	002a60d8 mov ax,0x0
 	002a60e4 setfuncargs 0x0
 	002a60ec mov ax,0x3e6f20
 	002a60f8 farcall ax
 	002a6100 push ax
 	002a6108 mov ax,0x2c787b
 	002a6114 pop bx
 	002a611c streq bx,ax
 	002a6128 mov ax,bx
 	002a6134 jz 0x002a6890
		002a6890: CONDITIONAL_JUMP
		002a613c: FALL_THROUGH

	[002a613c]
		002a60d0: FALL_THROUGH
 	002a613c sourceline 0x3abe
 	002a6144 mov ax,0x7a0
 	002a6150 mov bx,ax
 	002a615c mov mar,0x3eef20
 	002a6168 mov ax,mar
 	002a6174 push op
 	002a617c mov op,ax
 	002a6184 farpush bx
 	002a618c setfuncargs 0x1
 	002a6194 mov ax,0x356f20
 	002a61a0 farcall ax
 	002a61a8 farsubsp 0x1
 	002a61b0 pop op
 	002a61b8 sourceline 0x3abf
 	002a61c0 mov ax,0x7a1
 	002a61cc mov bx,ax
 	002a61d8 mov mar,0x3eef20
 	002a61e4 mov ax,mar
 	002a61f0 push op
 	002a61f8 mov op,ax
 	002a6200 farpush bx
 	002a6208 setfuncargs 0x1
 	002a6210 mov ax,0x3f6f20
 	002a621c farcall ax
 	002a6224 farsubsp 0x1
 	002a622c pop op
 	002a6234 sourceline 0x3ac0
 	002a623c mov ax,0x7a1
 	002a6248 mov bx,ax
 	002a6254 mov mar,0x3eef20
 	002a6260 mov ax,mar
 	002a626c push op
 	002a6274 mov op,ax
 	002a627c farpush bx
 	002a6284 setfuncargs 0x1
 	002a628c mov ax,0x3fef20
 	002a6298 farcall ax
 	002a62a0 farsubsp 0x1
 	002a62a8 pop op
 	002a62b0 sourceline 0x3ac1
 	002a62b8 mov ax,0x7a2
 	002a62c4 mov bx,ax
 	002a62d0 mov mar,0x406f20
 	002a62dc mov ax,mar
 	002a62e8 push op
 	002a62f0 mov op,ax
 	002a62f8 farpush bx
 	002a6300 setfuncargs 0x1
 	002a6308 mov ax,0x356f20
 	002a6314 farcall ax
 	002a631c farsubsp 0x1
 	002a6324 pop op
 	002a632c sourceline 0x3ac2
 	002a6334 mov ax,0x7a3
 	002a6340 mov bx,ax
 	002a634c mov mar,0x406f20
 	002a6358 mov ax,mar
 	002a6364 push op
 	002a636c mov op,ax
 	002a6374 farpush bx
 	002a637c setfuncargs 0x1
 	002a6384 mov ax,0x3f6f20
 	002a6390 farcall ax
 	002a6398 farsubsp 0x1
 	002a63a0 pop op
 	002a63a8 sourceline 0x3ac3
 	002a63b0 mov ax,0x7a3
 	002a63bc mov bx,ax
 	002a63c8 mov mar,0x406f20
 	002a63d4 mov ax,mar
 	002a63e0 push op
 	002a63e8 mov op,ax
 	002a63f0 farpush bx
 	002a63f8 setfuncargs 0x1
 	002a6400 mov ax,0x3fef20
 	002a640c farcall ax
 	002a6414 farsubsp 0x1
 	002a641c pop op
 	002a6424 sourceline 0x3ac4
 	002a642c mov ax,0x79a
 	002a6438 mov bx,ax
 	002a6444 mov mar,0x40ef20
 	002a6450 mov ax,mar
 	002a645c push op
 	002a6464 mov op,ax
 	002a646c farpush bx
 	002a6474 setfuncargs 0x1
 	002a647c mov ax,0x356f20
 	002a6488 farcall ax
 	002a6490 farsubsp 0x1
 	002a6498 pop op
 	002a64a0 sourceline 0x3ac5
 	002a64a8 mov ax,0x79b
 	002a64b4 mov bx,ax
 	002a64c0 mov mar,0x40ef20
 	002a64cc mov ax,mar
 	002a64d8 push op
 	002a64e0 mov op,ax
 	002a64e8 farpush bx
 	002a64f0 setfuncargs 0x1
 	002a64f8 mov ax,0x3f6f20
 	002a6504 farcall ax
 	002a650c farsubsp 0x1
 	002a6514 pop op
 	002a651c sourceline 0x3ac6
 	002a6524 mov ax,0x79b
 	002a6530 mov bx,ax
 	002a653c mov mar,0x40ef20
 	002a6548 mov ax,mar
 	002a6554 push op
 	002a655c mov op,ax
 	002a6564 farpush bx
 	002a656c setfuncargs 0x1
 	002a6574 mov ax,0x3fef20
 	002a6580 farcall ax
 	002a6588 farsubsp 0x1
 	002a6590 pop op
 	002a6598 sourceline 0x3ac7
 	002a65a0 mov ax,0x79c
 	002a65ac mov bx,ax
 	002a65b8 mov mar,0x416f20
 	002a65c4 mov ax,mar
 	002a65d0 push op
 	002a65d8 mov op,ax
 	002a65e0 farpush bx
 	002a65e8 setfuncargs 0x1
 	002a65f0 mov ax,0x356f20
 	002a65fc farcall ax
 	002a6604 farsubsp 0x1
 	002a660c pop op
 	002a6614 sourceline 0x3ac8
 	002a661c mov ax,0x79d
 	002a6628 mov bx,ax
 	002a6634 mov mar,0x416f20
 	002a6640 mov ax,mar
 	002a664c push op
 	002a6654 mov op,ax
 	002a665c farpush bx
 	002a6664 setfuncargs 0x1
 	002a666c mov ax,0x3f6f20
 	002a6678 farcall ax
 	002a6680 farsubsp 0x1
 	002a6688 pop op
 	002a6690 sourceline 0x3ac9
 	002a6698 mov ax,0x79d
 	002a66a4 mov bx,ax
 	002a66b0 mov mar,0x416f20
 	002a66bc mov ax,mar
 	002a66c8 push op
 	002a66d0 mov op,ax
 	002a66d8 farpush bx
 	002a66e0 setfuncargs 0x1
 	002a66e8 mov ax,0x3fef20
 	002a66f4 farcall ax
 	002a66fc farsubsp 0x1
 	002a6704 pop op
 	002a670c sourceline 0x3aca
 	002a6714 mov ax,0x79e
 	002a6720 mov bx,ax
 	002a672c mov mar,0x41ef20
 	002a6738 mov ax,mar
 	002a6744 push op
 	002a674c mov op,ax
 	002a6754 farpush bx
 	002a675c setfuncargs 0x1
 	002a6764 mov ax,0x356f20
 	002a6770 farcall ax
 	002a6778 farsubsp 0x1
 	002a6780 pop op
 	002a6788 sourceline 0x3acb
 	002a6790 mov ax,0x79f
 	002a679c mov bx,ax
 	002a67a8 mov mar,0x41ef20
 	002a67b4 mov ax,mar
 	002a67c0 push op
 	002a67c8 mov op,ax
 	002a67d0 farpush bx
 	002a67d8 setfuncargs 0x1
 	002a67e0 mov ax,0x3f6f20
 	002a67ec farcall ax
 	002a67f4 farsubsp 0x1
 	002a67fc pop op
 	002a6804 sourceline 0x3acc
 	002a680c mov ax,0x79f
 	002a6818 mov bx,ax
 	002a6824 mov mar,0x41ef20
 	002a6830 mov ax,mar
 	002a683c push op
 	002a6844 mov op,ax
 	002a684c farpush bx
 	002a6854 setfuncargs 0x1
 	002a685c mov ax,0x3fef20
 	002a6868 farcall ax
 	002a6870 farsubsp 0x1
 	002a6878 pop op
 	002a6880 sourceline 0x3acd
 	002a6888 jmp 0x002a6fd4
		002a6fd4: UNCONDITIONAL_JUMP

	[002a6890]
		002a60d0: CONDITIONAL_JUMP
 	002a6890 sourceline 0x3ad0
 	002a6898 mov ax,0x7b2
 	002a68a4 mov bx,ax
 	002a68b0 mov mar,0x3eef20
 	002a68bc mov ax,mar
 	002a68c8 push op
 	002a68d0 mov op,ax
 	002a68d8 farpush bx
 	002a68e0 setfuncargs 0x1
 	002a68e8 mov ax,0x356f20
 	002a68f4 farcall ax
 	002a68fc farsubsp 0x1
 	002a6904 pop op
 	002a690c sourceline 0x3ad1
 	002a6914 mov ax,0x7b3
 	002a6920 mov bx,ax
 	002a692c mov mar,0x3eef20
 	002a6938 mov ax,mar
 	002a6944 push op
 	002a694c mov op,ax
 	002a6954 farpush bx
 	002a695c setfuncargs 0x1
 	002a6964 mov ax,0x3f6f20
 	002a6970 farcall ax
 	002a6978 farsubsp 0x1
 	002a6980 pop op
 	002a6988 sourceline 0x3ad2
 	002a6990 mov ax,0x7b3
 	002a699c mov bx,ax
 	002a69a8 mov mar,0x3eef20
 	002a69b4 mov ax,mar
 	002a69c0 push op
 	002a69c8 mov op,ax
 	002a69d0 farpush bx
 	002a69d8 setfuncargs 0x1
 	002a69e0 mov ax,0x3fef20
 	002a69ec farcall ax
 	002a69f4 farsubsp 0x1
 	002a69fc pop op
 	002a6a04 sourceline 0x3ad3
 	002a6a0c mov ax,0x7b4
 	002a6a18 mov bx,ax
 	002a6a24 mov mar,0x406f20
 	002a6a30 mov ax,mar
 	002a6a3c push op
 	002a6a44 mov op,ax
 	002a6a4c farpush bx
 	002a6a54 setfuncargs 0x1
 	002a6a5c mov ax,0x356f20
 	002a6a68 farcall ax
 	002a6a70 farsubsp 0x1
 	002a6a78 pop op
 	002a6a80 sourceline 0x3ad4
 	002a6a88 mov ax,0x7b5
 	002a6a94 mov bx,ax
 	002a6aa0 mov mar,0x406f20
 	002a6aac mov ax,mar
 	002a6ab8 push op
 	002a6ac0 mov op,ax
 	002a6ac8 farpush bx
 	002a6ad0 setfuncargs 0x1
 	002a6ad8 mov ax,0x3f6f20
 	002a6ae4 farcall ax
 	002a6aec farsubsp 0x1
 	002a6af4 pop op
 	002a6afc sourceline 0x3ad5
 	002a6b04 mov ax,0x7b5
 	002a6b10 mov bx,ax
 	002a6b1c mov mar,0x406f20
 	002a6b28 mov ax,mar
 	002a6b34 push op
 	002a6b3c mov op,ax
 	002a6b44 farpush bx
 	002a6b4c setfuncargs 0x1
 	002a6b54 mov ax,0x3fef20
 	002a6b60 farcall ax
 	002a6b68 farsubsp 0x1
 	002a6b70 pop op
 	002a6b78 sourceline 0x3ad6
 	002a6b80 mov ax,0x7b6
 	002a6b8c mov bx,ax
 	002a6b98 mov mar,0x40ef20
 	002a6ba4 mov ax,mar
 	002a6bb0 push op
 	002a6bb8 mov op,ax
 	002a6bc0 farpush bx
 	002a6bc8 setfuncargs 0x1
 	002a6bd0 mov ax,0x356f20
 	002a6bdc farcall ax
 	002a6be4 farsubsp 0x1
 	002a6bec pop op
 	002a6bf4 sourceline 0x3ad7
 	002a6bfc mov ax,0x7b7
 	002a6c08 mov bx,ax
 	002a6c14 mov mar,0x40ef20
 	002a6c20 mov ax,mar
 	002a6c2c push op
 	002a6c34 mov op,ax
 	002a6c3c farpush bx
 	002a6c44 setfuncargs 0x1
 	002a6c4c mov ax,0x3f6f20
 	002a6c58 farcall ax
 	002a6c60 farsubsp 0x1
 	002a6c68 pop op
 	002a6c70 sourceline 0x3ad8
 	002a6c78 mov ax,0x7b7
 	002a6c84 mov bx,ax
 	002a6c90 mov mar,0x40ef20
 	002a6c9c mov ax,mar
 	002a6ca8 push op
 	002a6cb0 mov op,ax
 	002a6cb8 farpush bx
 	002a6cc0 setfuncargs 0x1
 	002a6cc8 mov ax,0x3fef20
 	002a6cd4 farcall ax
 	002a6cdc farsubsp 0x1
 	002a6ce4 pop op
 	002a6cec sourceline 0x3ad9
 	002a6cf4 mov ax,0x7b8
 	002a6d00 mov bx,ax
 	002a6d0c mov mar,0x416f20
 	002a6d18 mov ax,mar
 	002a6d24 push op
 	002a6d2c mov op,ax
 	002a6d34 farpush bx
 	002a6d3c setfuncargs 0x1
 	002a6d44 mov ax,0x356f20
 	002a6d50 farcall ax
 	002a6d58 farsubsp 0x1
 	002a6d60 pop op
 	002a6d68 sourceline 0x3ada
 	002a6d70 mov ax,0x7b9
 	002a6d7c mov bx,ax
 	002a6d88 mov mar,0x416f20
 	002a6d94 mov ax,mar
 	002a6da0 push op
 	002a6da8 mov op,ax
 	002a6db0 farpush bx
 	002a6db8 setfuncargs 0x1
 	002a6dc0 mov ax,0x3f6f20
 	002a6dcc farcall ax
 	002a6dd4 farsubsp 0x1
 	002a6ddc pop op
 	002a6de4 sourceline 0x3adb
 	002a6dec mov ax,0x7b9
 	002a6df8 mov bx,ax
 	002a6e04 mov mar,0x416f20
 	002a6e10 mov ax,mar
 	002a6e1c push op
 	002a6e24 mov op,ax
 	002a6e2c farpush bx
 	002a6e34 setfuncargs 0x1
 	002a6e3c mov ax,0x3fef20
 	002a6e48 farcall ax
 	002a6e50 farsubsp 0x1
 	002a6e58 pop op
 	002a6e60 sourceline 0x3adc
 	002a6e68 mov ax,0x7ba
 	002a6e74 mov bx,ax
 	002a6e80 mov mar,0x41ef20
 	002a6e8c mov ax,mar
 	002a6e98 push op
 	002a6ea0 mov op,ax
 	002a6ea8 farpush bx
 	002a6eb0 setfuncargs 0x1
 	002a6eb8 mov ax,0x356f20
 	002a6ec4 farcall ax
 	002a6ecc farsubsp 0x1
 	002a6ed4 pop op
 	002a6edc sourceline 0x3add
 	002a6ee4 mov ax,0x7bb
 	002a6ef0 mov bx,ax
 	002a6efc mov mar,0x41ef20
 	002a6f08 mov ax,mar
 	002a6f14 push op
 	002a6f1c mov op,ax
 	002a6f24 farpush bx
 	002a6f2c setfuncargs 0x1
 	002a6f34 mov ax,0x3f6f20
 	002a6f40 farcall ax
 	002a6f48 farsubsp 0x1
 	002a6f50 pop op
 	002a6f58 sourceline 0x3ade
 	002a6f60 mov ax,0x7bb
 	002a6f6c mov bx,ax
 	002a6f78 mov mar,0x41ef20
 	002a6f84 mov ax,mar
 	002a6f90 push op
 	002a6f98 mov op,ax
 	002a6fa0 farpush bx
 	002a6fa8 setfuncargs 0x1
 	002a6fb0 mov ax,0x3fef20
 	002a6fbc farcall ax
 	002a6fc4 farsubsp 0x1
 	002a6fcc pop op
		002a6fd4: FALL_THROUGH

	[002a6fd4]
		002a613c: UNCONDITIONAL_JUMP
		002a6890: FALL_THROUGH
 	002a6fd4 sourceline 0x3ae0
 	002a6fdc mov ax,0xf1
 	002a6fe8 farpush ax
 	002a6ff0 mov ax,0x7
 	002a6ffc farpush ax
 	002a7004 setfuncargs 0x2
 	002a700c mov ax,0x376f20
 	002a7018 farcall ax
 	002a7020 farsubsp 0x2
 	002a7028 sourceline 0x3ae1
 	002a7030 mov ax,0x1
 	002a703c farpush ax
 	002a7044 setfuncargs 0x1
 	002a704c mov ax,0x426f20
 	002a7058 farcall ax
 	002a7060 farsubsp 0x1
 	002a7068 sourceline 0x3ae2
 	002a7070 mov ax,0x0
 	002a707c mov mar,0x42ef20
 	002a7088 push mar
 	002a7090 pop mar
 	002a7098 push ax
 	002a70a0 memread.ptr ax
 	002a70a8 pop bx
 	002a70b0 push ax
 	002a70b8 mov ax,bx
 	002a70c4 mov bx,ax
 	002a70d0 pop mar
 	002a70d8 mov ax,mar
 	002a70e4 push op
 	002a70ec mov op,ax
 	002a70f4 farpush bx
 	002a70fc setfuncargs 0x1
 	002a7104 mov ax,0x436f20
 	002a7110 farcall ax
 	002a7118 farsubsp 0x1
 	002a7120 pop op
 	002a7128 sourceline 0x3ae3
 	002a7130 mov ax,0x0
 	002a713c mov bx,ax
 	002a7148 mov mar,0x336f20
 	002a7154 mov ax,mar
 	002a7160 farpush bx
 	002a7168 setfuncargs 0x1
 	002a7170 mov ax,0x43ef20
 	002a717c farcall ax
 	002a7184 farsubsp 0x1
 	002a718c sourceline 0x3ae4
 	002a7194 mov ax,0x1
 	002a71a0 farpush ax
 	002a71a8 setfuncargs 0x1
 	002a71b0 mov ax,0x426f20
 	002a71bc farcall ax
 	002a71c4 farsubsp 0x1
 	002a71cc sourceline 0x3ae5
 	002a71d4 mov mar,0x3cef20
 	002a71e0 mov ax,mar
 	002a71ec push op
 	002a71f4 mov op,ax
 	002a71fc setfuncargs 0x0
 	002a7204 mov ax,0x446f20
 	002a7210 farcall ax
 	002a7218 pop op
 	002a7220 jz 0x002a7274
		002a7274: CONDITIONAL_JUMP
		002a7228: FALL_THROUGH

	[002a7228]
		002a6fd4: FALL_THROUGH
 	002a7228 push op
 	002a7230 mov mar,0x3cef20
 	002a723c mov ax,mar
 	002a7248 mov op,ax
 	002a7250 setfuncargs 0x0
 	002a7258 mov ax,0x44ef20
 	002a7264 farcall ax
 	002a726c pop op
		002a7274: FALL_THROUGH

	[002a7274]
		002a6fd4: CONDITIONAL_JUMP
		002a7228: FALL_THROUGH
 	002a7274 sourceline 0x3ae6
 	002a727c mov mar,0x100160
 	002a7288 push mar
 	002a7290 pop mar
 	002a7298 memread.ptr ax
 	002a72a0 push ax
 	002a72a8 mov ax,0x0
 	002a72b4 pop bx
 	002a72bc cmpneq bx,ax
 	002a72c8 mov ax,bx
 	002a72d4 jz 0x002a7334
		002a7334: CONDITIONAL_JUMP
		002a72dc: FALL_THROUGH

	[002a72dc]
		002a7274: FALL_THROUGH
 	002a72dc push op
 	002a72e4 mov mar,0x100160
 	002a72f0 push mar
 	002a72f8 pop mar
 	002a7300 memread.ptr ax
 	002a7308 mov op,ax
 	002a7310 setfuncargs 0x0
 	002a7318 mov ax,0x456f20
 	002a7324 farcall ax
 	002a732c pop op
		002a7334: FALL_THROUGH

	[002a7334]
		002a7274: CONDITIONAL_JUMP
		002a72dc: FALL_THROUGH
 	002a7334 sourceline 0x3ae7
 	002a733c mov ax,0x2c787b
 	002a7348 farpush ax
 	002a7350 mov ax,0x3e6
 	002a735c farpush ax
 	002a7364 setfuncargs 0x2
 	002a736c mov ax,0x45ef20
 	002a7378 farcall ax
 	002a7380 farsubsp 0x2
 	002a7388 sourceline 0x3ae8
 	002a7390 mov ax,0x56
 	002a739c farpush ax
 	002a73a4 mov ax,0x7f
 	002a73b0 farpush ax
 	002a73b8 mov ax,0x3e6
 	002a73c4 farpush ax
 	002a73cc setfuncargs 0x3
 	002a73d4 mov ax,0x466f20
 	002a73e0 farcall ax
 	002a73e8 farsubsp 0x3
 	002a73f0 mov mar,0x100160
 	002a73fc push mar
 	002a7404 pop mar
 	002a740c memwrite.ptr ax
 	002a7414 sourceline 0x3aea
 	002a741c mov ax,0x1
 	002a7428 farpush ax
 	002a7430 setfuncargs 0x1
 	002a7438 mov ax,0x426f20
 	002a7444 farcall ax
 	002a744c farsubsp 0x1
 	002a7454 sourceline 0x3aeb
 	002a745c mov ax,0x1
 	002a7468 mov bx,ax
 	002a7474 mov mar,0x336f20
 	002a7480 mov ax,mar
 	002a748c farpush bx
 	002a7494 setfuncargs 0x1
 	002a749c mov ax,0x43ef20
 	002a74a8 farcall ax
 	002a74b0 farsubsp 0x1
 	002a74b8 sourceline 0x3aec
 	002a74c0 setfuncargs 0x0
 	002a74c8 mov ax,0x46ef20
 	002a74d4 farcall ax
 	002a74dc sourceline 0x3aed
 	002a74e4 setfuncargs 0x0
 	002a74ec mov ax,0x476f20
 	002a74f8 farcall ax
 	002a7500 sourceline 0x3aee
 	002a7508 mov mar,0x47ef20
 	002a7514 memread4 ax
 	002a751c jz 0x002a764c
		002a764c: CONDITIONAL_JUMP
		002a7524: FALL_THROUGH

	[002a7524]
		002a7334: FALL_THROUGH
 	002a7524 mov ax,0x0
 	002a7530 mov bx,ax
 	002a753c mov mar,0x36ef20
 	002a7548 mov ax,mar
 	002a7554 push op
 	002a755c mov op,ax
 	002a7564 farpush bx
 	002a756c setfuncargs 0x1
 	002a7574 mov ax,0x3a6f20
 	002a7580 farcall ax
 	002a7588 farsubsp 0x1
 	002a7590 pop op
 	002a7598 mov ax,0x0
 	002a75a4 mov bx,ax
 	002a75b0 mov mar,0x486f20
 	002a75bc mov ax,mar
 	002a75c8 push op
 	002a75d0 mov op,ax
 	002a75d8 farpush bx
 	002a75e0 setfuncargs 0x1
 	002a75e8 mov ax,0x3a6f20
 	002a75f4 farcall ax
 	002a75fc farsubsp 0x1
 	002a7604 pop op
 	002a760c mov ax,0x0
 	002a7618 mov mar,0x48ef20
 	002a7624 memwrite4 ax
 	002a762c mov ax,0x6
 	002a7638 mov mar,0x496f20
 	002a7644 memwrite4 ax
		002a764c: FALL_THROUGH

	[002a764c]
		002a7334: CONDITIONAL_JUMP
		002a7524: FALL_THROUGH
 	002a764c sourceline 0x3aef
 	002a7654 mov ax,0x1
 	002a7660 mov bx,ax
 	002a766c mov mar,0x326f20
 	002a7678 mov ax,mar
 	002a7684 push op
 	002a768c mov op,ax
 	002a7694 farpush bx
 	002a769c setfuncargs 0x1
 	002a76a4 mov ax,0x3a6f20
 	002a76b0 farcall ax
 	002a76b8 farsubsp 0x1
 	002a76c0 pop op
 	002a76c8 sourceline 0x3af0
 	002a76d0 setfuncargs 0x0
 	002a76d8 mov ax,0x49ef20
 	002a76e4 farcall ax
		002a76ec: FALL_THROUGH

	[002a76ec]
		002a5bfc: CONDITIONAL_JUMP
		002a5c78: CONDITIONAL_JUMP
		002a5d78: CONDITIONAL_JUMP
		002a60c8: CONDITIONAL_JUMP
		002a764c: FALL_THROUGH
 	002a76ec sourceline 0x3af5
 	002a76f4 mov ax,0x0
 	002a7700 stackptr 0x8
 	002a7708 memzerond
 	002a770c ret

cFirstYoungster_Interact$0:
	[002a7710]
 	002a7710 sourceline 0x3afa
 	002a7718 thisaddr
 	002a7720 sourceline 0x3afb
 	002a7728 push op
 	002a7730 mov ax,0x397
 	002a773c farpush ax
 	002a7744 mov ax,0x54
 	002a7750 farpush ax
 	002a7758 mov ax,0x96
 	002a7764 farpush ax
*	002a776c mov mar,0x3cef20
 	002a7778 mov ax,mar
 	002a7784 mov op,ax
 	002a778c setfuncargs 0x3
 	002a7794 mov ax,0x726f20
 	002a77a0 farcall ax
 	002a77a8 farsubsp 0x3
 	002a77b0 pop op
 	002a77b8 sourceline 0x3afc
 	002a77c0 mov ax,0x1
 	002a77cc mov bx,ax
 	002a77d8 mov mar,0x3cef20
 	002a77e4 mov ax,mar
 	002a77f0 push op
 	002a77f8 mov op,ax
 	002a7800 farpush bx
 	002a7808 setfuncargs 0x1
 	002a7810 mov ax,0x69ef20
 	002a781c farcall ax
 	002a7824 farsubsp 0x1
 	002a782c pop op
 	002a7834 sourceline 0x3afd
 	002a783c push op
 	002a7844 mov ax,0x2c78ba
 	002a7850 farpush ax
 	002a7858 mov ax,0x138
 	002a7864 farpush ax
 	002a786c mov ax,0x92
 	002a7878 farpush ax
 	002a7880 mov ax,0x0
 	002a788c farpush ax
 	002a7894 mov mar,0x3cef20
 	002a78a0 mov ax,mar
 	002a78ac mov op,ax
 	002a78b4 setfuncargs 0x4
 	002a78bc mov ax,0x6aef20
 	002a78c8 farcall ax
 	002a78d0 farsubsp 0x4
 	002a78d8 pop op
 	002a78e0 sourceline 0x3afe
 	002a78e8 mov ax,0x0
 	002a78f4 ret

cYoungster2_Interact$0:
	[002a78f8]
 	002a78f8 sourceline 0x3b01
 	002a7900 thisaddr
 	002a7908 sourceline 0x3b02
 	002a7910 push op
 	002a7918 mov ax,0x397
 	002a7924 farpush ax
 	002a792c mov ax,0x51
 	002a7938 farpush ax
 	002a7940 mov ax,0x7b
 	002a794c farpush ax
*	002a7954 mov mar,0x3cef20
 	002a7960 mov ax,mar
 	002a796c mov op,ax
 	002a7974 setfuncargs 0x3
 	002a797c mov ax,0x726f20
 	002a7988 farcall ax
 	002a7990 farsubsp 0x3
 	002a7998 pop op
 	002a79a0 sourceline 0x3b03
 	002a79a8 mov ax,0x1
 	002a79b4 mov bx,ax
 	002a79c0 mov mar,0x3cef20
 	002a79cc mov ax,mar
 	002a79d8 push op
 	002a79e0 mov op,ax
 	002a79e8 farpush bx
 	002a79f0 setfuncargs 0x1
 	002a79f8 mov ax,0x69ef20
 	002a7a04 farcall ax
 	002a7a0c farsubsp 0x1
 	002a7a14 pop op
 	002a7a1c sourceline 0x3b04
 	002a7a24 push op
 	002a7a2c mov ax,0x2c78ba
 	002a7a38 farpush ax
 	002a7a40 mov ax,0x138
 	002a7a4c farpush ax
 	002a7a54 mov ax,0x92
 	002a7a60 farpush ax
 	002a7a68 mov ax,0x0
 	002a7a74 farpush ax
 	002a7a7c mov mar,0x3cef20
 	002a7a88 mov ax,mar
 	002a7a94 mov op,ax
 	002a7a9c setfuncargs 0x4
 	002a7aa4 mov ax,0x6aef20
 	002a7ab0 farcall ax
 	002a7ab8 farsubsp 0x4
 	002a7ac0 pop op
 	002a7ac8 sourceline 0x3b05
 	002a7ad0 mov ax,0x0
 	002a7adc ret

cThirdYoungster_Interact$0:
	[002a7ae0]
 	002a7ae0 sourceline 0x3b08
 	002a7ae8 thisaddr
 	002a7af0 sourceline 0x3b09
 	002a7af8 push op
 	002a7b00 mov ax,0x397
 	002a7b0c farpush ax
 	002a7b14 mov ax,0x77
 	002a7b20 farpush ax
 	002a7b28 mov ax,0x80
 	002a7b34 farpush ax
*	002a7b3c mov mar,0x3cef20
 	002a7b48 mov ax,mar
 	002a7b54 mov op,ax
 	002a7b5c setfuncargs 0x3
 	002a7b64 mov ax,0x726f20
 	002a7b70 farcall ax
 	002a7b78 farsubsp 0x3
 	002a7b80 pop op
 	002a7b88 sourceline 0x3b0a
 	002a7b90 mov ax,0x1
 	002a7b9c mov bx,ax
 	002a7ba8 mov mar,0x3cef20
 	002a7bb4 mov ax,mar
 	002a7bc0 push op
 	002a7bc8 mov op,ax
 	002a7bd0 farpush bx
 	002a7bd8 setfuncargs 0x1
 	002a7be0 mov ax,0x69ef20
 	002a7bec farcall ax
 	002a7bf4 farsubsp 0x1
 	002a7bfc pop op
 	002a7c04 sourceline 0x3b0b
 	002a7c0c push op
 	002a7c14 mov ax,0x2c78ba
 	002a7c20 farpush ax
 	002a7c28 mov ax,0x138
 	002a7c34 farpush ax
 	002a7c3c mov ax,0x92
 	002a7c48 farpush ax
 	002a7c50 mov ax,0x0
 	002a7c5c farpush ax
 	002a7c64 mov mar,0x3cef20
 	002a7c70 mov ax,mar
 	002a7c7c mov op,ax
 	002a7c84 setfuncargs 0x4
 	002a7c8c mov ax,0x6aef20
 	002a7c98 farcall ax
 	002a7ca0 farsubsp 0x4
 	002a7ca8 pop op
 	002a7cb0 sourceline 0x3b0c
 	002a7cb8 mov ax,0x0
 	002a7cc4 ret

cFirstYoungster_Look$0:
	[002a7cc8]
 	002a7cc8 sourceline 0x3b10
 	002a7cd0 thisaddr
 	002a7cd8 sourceline 0x3b11
 	002a7ce0 push op
 	002a7ce8 mov ax,0x397
 	002a7cf4 farpush ax
 	002a7cfc mov ax,0x54
 	002a7d08 farpush ax
 	002a7d10 mov ax,0x96
 	002a7d1c farpush ax
*	002a7d24 mov mar,0x3cef20
 	002a7d30 mov ax,mar
 	002a7d3c mov op,ax
 	002a7d44 setfuncargs 0x3
 	002a7d4c mov ax,0x726f20
 	002a7d58 farcall ax
 	002a7d60 farsubsp 0x3
 	002a7d68 pop op
 	002a7d70 sourceline 0x3b12
 	002a7d78 mov ax,0x1
 	002a7d84 mov bx,ax
 	002a7d90 mov mar,0x3cef20
 	002a7d9c mov ax,mar
 	002a7da8 push op
 	002a7db0 mov op,ax
 	002a7db8 farpush bx
 	002a7dc0 setfuncargs 0x1
 	002a7dc8 mov ax,0x69ef20
 	002a7dd4 farcall ax
 	002a7ddc farsubsp 0x1
 	002a7de4 pop op
 	002a7dec sourceline 0x3b13
 	002a7df4 push op
 	002a7dfc mov ax,0x2c7947
 	002a7e08 farpush ax
 	002a7e10 mov ax,0x138
 	002a7e1c farpush ax
 	002a7e24 mov ax,0x92
 	002a7e30 farpush ax
 	002a7e38 mov ax,0x0
 	002a7e44 farpush ax
 	002a7e4c mov mar,0x3cef20
 	002a7e58 mov ax,mar
 	002a7e64 mov op,ax
 	002a7e6c setfuncargs 0x4
 	002a7e74 mov ax,0x6aef20
 	002a7e80 farcall ax
 	002a7e88 farsubsp 0x4
 	002a7e90 pop op
 	002a7e98 sourceline 0x3b14
 	002a7ea0 mov ax,0x0
 	002a7eac ret

cYoungster2_Look$0:
	[002a7eb0]
 	002a7eb0 sourceline 0x3b17
 	002a7eb8 thisaddr
 	002a7ec0 sourceline 0x3b18
 	002a7ec8 push op
 	002a7ed0 mov ax,0x397
 	002a7edc farpush ax
 	002a7ee4 mov ax,0x51
 	002a7ef0 farpush ax
 	002a7ef8 mov ax,0x7b
 	002a7f04 farpush ax
*	002a7f0c mov mar,0x3cef20
 	002a7f18 mov ax,mar
 	002a7f24 mov op,ax
 	002a7f2c setfuncargs 0x3
 	002a7f34 mov ax,0x726f20
 	002a7f40 farcall ax
 	002a7f48 farsubsp 0x3
 	002a7f50 pop op
 	002a7f58 sourceline 0x3b19
 	002a7f60 mov ax,0x1
 	002a7f6c mov bx,ax
 	002a7f78 mov mar,0x3cef20
 	002a7f84 mov ax,mar
 	002a7f90 push op
 	002a7f98 mov op,ax
 	002a7fa0 farpush bx
 	002a7fa8 setfuncargs 0x1
 	002a7fb0 mov ax,0x69ef20
 	002a7fbc farcall ax
 	002a7fc4 farsubsp 0x1
 	002a7fcc pop op
 	002a7fd4 sourceline 0x3b1a
 	002a7fdc push op
 	002a7fe4 mov ax,0x2c7947
 	002a7ff0 farpush ax
 	002a7ff8 mov ax,0x138
 	002a8004 farpush ax
 	002a800c mov ax,0x92
 	002a8018 farpush ax
 	002a8020 mov ax,0x0
 	002a802c farpush ax
 	002a8034 mov mar,0x3cef20
 	002a8040 mov ax,mar
 	002a804c mov op,ax
 	002a8054 setfuncargs 0x4
 	002a805c mov ax,0x6aef20
 	002a8068 farcall ax
 	002a8070 farsubsp 0x4
 	002a8078 pop op
 	002a8080 sourceline 0x3b1b
 	002a8088 mov ax,0x0
 	002a8094 ret

cThirdYoungster_Look$0:
	[002a8098]
 	002a8098 sourceline 0x3b1e
 	002a80a0 thisaddr
 	002a80a8 sourceline 0x3b1f
 	002a80b0 push op
 	002a80b8 mov ax,0x397
 	002a80c4 farpush ax
 	002a80cc mov ax,0x77
 	002a80d8 farpush ax
 	002a80e0 mov ax,0x80
 	002a80ec farpush ax
*	002a80f4 mov mar,0x3cef20
 	002a8100 mov ax,mar
 	002a810c mov op,ax
 	002a8114 setfuncargs 0x3
 	002a811c mov ax,0x726f20
 	002a8128 farcall ax
 	002a8130 farsubsp 0x3
 	002a8138 pop op
 	002a8140 sourceline 0x3b20
 	002a8148 mov ax,0x1
 	002a8154 mov bx,ax
 	002a8160 mov mar,0x3cef20
 	002a816c mov ax,mar
 	002a8178 push op
 	002a8180 mov op,ax
 	002a8188 farpush bx
 	002a8190 setfuncargs 0x1
 	002a8198 mov ax,0x69ef20
 	002a81a4 farcall ax
 	002a81ac farsubsp 0x1
 	002a81b4 pop op
 	002a81bc sourceline 0x3b21
 	002a81c4 push op
 	002a81cc mov ax,0x2c7947
 	002a81d8 farpush ax
 	002a81e0 mov ax,0x138
 	002a81ec farpush ax
 	002a81f4 mov ax,0x92
 	002a8200 farpush ax
 	002a8208 mov ax,0x0
 	002a8214 farpush ax
 	002a821c mov mar,0x3cef20
 	002a8228 mov ax,mar
 	002a8234 mov op,ax
 	002a823c setfuncargs 0x4
 	002a8244 mov ax,0x6aef20
 	002a8250 farcall ax
 	002a8258 farsubsp 0x4
 	002a8260 pop op
 	002a8268 sourceline 0x3b22
 	002a8270 mov ax,0x0
 	002a827c ret

cFirstYoungster_UseInv$0:
	[002a8280]
 	002a8280 sourceline 0x3b25
 	002a8288 thisaddr
 	002a8290 sourceline 0x3b26
 	002a8298 push op
 	002a82a0 mov ax,0x397
 	002a82ac farpush ax
 	002a82b4 mov ax,0x54
 	002a82c0 farpush ax
 	002a82c8 mov ax,0x96
 	002a82d4 farpush ax
*	002a82dc mov mar,0x3cef20
 	002a82e8 mov ax,mar
 	002a82f4 mov op,ax
 	002a82fc setfuncargs 0x3
 	002a8304 mov ax,0x726f20
 	002a8310 farcall ax
 	002a8318 farsubsp 0x3
 	002a8320 pop op
 	002a8328 sourceline 0x3b27
 	002a8330 mov ax,0x3
 	002a833c push ax
 	002a8344 mov ax,0x5
 	002a8350 push ax
 	002a8358 mov ax,0x10ae5c
 	002a8364 call ax
 	002a836c sub sp,0x8
 	002a8378 sourceline 0x3b28
 	002a8380 mov ax,0x0
 	002a838c ret

cYoungster2_UseInv$0:
	[002a8390]
 	002a8390 sourceline 0x3b2b
 	002a8398 thisaddr
 	002a83a0 sourceline 0x3b2c
 	002a83a8 push op
 	002a83b0 mov ax,0x397
 	002a83bc farpush ax
 	002a83c4 mov ax,0x51
 	002a83d0 farpush ax
 	002a83d8 mov ax,0x7b
 	002a83e4 farpush ax
*	002a83ec mov mar,0x3cef20
 	002a83f8 mov ax,mar
 	002a8404 mov op,ax
 	002a840c setfuncargs 0x3
 	002a8414 mov ax,0x726f20
 	002a8420 farcall ax
 	002a8428 farsubsp 0x3
 	002a8430 pop op
 	002a8438 sourceline 0x3b2d
 	002a8440 mov ax,0x3
 	002a844c push ax
 	002a8454 mov ax,0x5
 	002a8460 push ax
 	002a8468 mov ax,0x10ae5c
 	002a8474 call ax
 	002a847c sub sp,0x8
 	002a8488 sourceline 0x3b2e
 	002a8490 mov ax,0x0
 	002a849c ret

cThirdYoungster_UseInv$0:
	[002a84a0]
 	002a84a0 sourceline 0x3b31
 	002a84a8 thisaddr
 	002a84b0 sourceline 0x3b32
 	002a84b8 push op
 	002a84c0 mov ax,0x397
 	002a84cc farpush ax
 	002a84d4 mov ax,0x77
 	002a84e0 farpush ax
 	002a84e8 mov ax,0x80
 	002a84f4 farpush ax
*	002a84fc mov mar,0x3cef20
 	002a8508 mov ax,mar
 	002a8514 mov op,ax
 	002a851c setfuncargs 0x3
 	002a8524 mov ax,0x726f20
 	002a8530 farcall ax
 	002a8538 farsubsp 0x3
 	002a8540 pop op
 	002a8548 sourceline 0x3b33
 	002a8550 mov ax,0x3
 	002a855c push ax
 	002a8564 mov ax,0x5
 	002a8570 push ax
 	002a8578 mov ax,0x10ae5c
 	002a8584 call ax
 	002a858c sub sp,0x8
 	002a8598 sourceline 0x3b34
 	002a85a0 mov ax,0x0
 	002a85ac ret

BtnCheck_OnClick$2:
	[002a85b0]
 	002a85b0 sourceline 0x3b3b
 	002a85b8 thisaddr
 	002a85c0 stackptr 0x8
 	002a85c8 memread4 ax
 	002a85d0 meminit ax
 	002a85d8 sourceline 0x3b3c
 	002a85e0 stackptr 0xc
 	002a85e8 memread4 ax
 	002a85f0 push ax
 	002a85f8 mov ax,0x1
 	002a8604 pop bx
 	002a860c cmpeq bx,ax
 	002a8618 mov ax,bx
 	002a8624 jz 0x002a87c4
		002a87c4: CONDITIONAL_JUMP
		002a862c: FALL_THROUGH

	[002a862c]
		002a85b0: FALL_THROUGH
 	002a862c sourceline 0x3b3e
*	002a8634 mov mar,0xe9ef20
 	002a8640 mov ax,mar
 	002a864c push op
 	002a8654 mov op,ax
 	002a865c setfuncargs 0x0
 	002a8664 mov ax,0xf7ef20
 	002a8670 farcall ax
 	002a8678 pop op
 	002a8680 push ax
 	002a8688 mov ax,0xe79
 	002a8694 pop bx
 	002a869c cmpeq bx,ax
 	002a86a8 mov ax,bx
 	002a86b4 jz 0x002a8748
		002a8748: CONDITIONAL_JUMP
		002a86bc: FALL_THROUGH

	[002a86bc]
		002a862c: FALL_THROUGH
 	002a86bc sourceline 0x3b41
 	002a86c4 mov ax,0xe7a
 	002a86d0 mov bx,ax
 	002a86dc mov mar,0xe9ef20
 	002a86e8 mov ax,mar
 	002a86f4 push op
 	002a86fc mov op,ax
 	002a8704 farpush bx
 	002a870c setfuncargs 0x1
 	002a8714 mov ax,0x356f20
 	002a8720 farcall ax
 	002a8728 farsubsp 0x1
 	002a8730 pop op
 	002a8738 sourceline 0x3b42
 	002a8740 jmp 0x002a87c4
		002a87c4: UNCONDITIONAL_JUMP

	[002a8748]
		002a862c: CONDITIONAL_JUMP
 	002a8748 sourceline 0x3b47
 	002a8750 mov ax,0xe79
 	002a875c mov bx,ax
 	002a8768 mov mar,0xe9ef20
 	002a8774 mov ax,mar
 	002a8780 push op
 	002a8788 mov op,ax
 	002a8790 farpush bx
 	002a8798 setfuncargs 0x1
 	002a87a0 mov ax,0x356f20
 	002a87ac farcall ax
 	002a87b4 farsubsp 0x1
 	002a87bc pop op
		002a87c4: FALL_THROUGH

	[002a87c4]
		002a85b0: CONDITIONAL_JUMP
		002a86bc: UNCONDITIONAL_JUMP
		002a8748: FALL_THROUGH
 	002a87c4 sourceline 0x3b4a
 	002a87cc mov ax,0x0
 	002a87d8 stackptr 0x8
 	002a87e0 memzerond
 	002a87e4 ret

Button7exit_OnClick$2:
	[002a87e8]
 	002a87e8 sourceline 0x3b4e
 	002a87f0 thisaddr
 	002a87f8 stackptr 0x8
 	002a8800 memread4 ax
 	002a8808 meminit ax
 	002a8810 sourceline 0x3b4f
*	002a8818 mov mar,0x30ef20
 	002a8824 mov ax,mar
 	002a8830 push op
 	002a8838 mov op,ax
 	002a8840 setfuncargs 0x0
 	002a8848 mov ax,0x316f20
 	002a8854 farcall ax
 	002a885c pop op
 	002a8864 lnot ax
 	002a886c jz 0x002a891c
		002a891c: CONDITIONAL_JUMP
		002a8874: FALL_THROUGH

	[002a8874]
		002a87e8: FALL_THROUGH
 	002a8874 push ax
 	002a887c mov mar,0x3cef20
 	002a8888 mov ax,mar
 	002a8894 push op
 	002a889c mov op,ax
 	002a88a4 setfuncargs 0x0
 	002a88ac mov ax,0x89ef20
 	002a88b8 farcall ax
 	002a88c0 pop op
 	002a88c8 push ax
 	002a88d0 mov ax,0x0
 	002a88dc pop bx
 	002a88e4 cmpeq bx,ax
 	002a88f0 mov ax,bx
 	002a88fc pop bx
 	002a8904 land bx,ax
 	002a8910 mov ax,bx
		002a891c: FALL_THROUGH

	[002a891c]
		002a87e8: CONDITIONAL_JUMP
		002a8874: FALL_THROUGH
 	002a891c jz 0x002a8968
		002a8968: CONDITIONAL_JUMP
		002a8924: FALL_THROUGH

	[002a8924]
		002a891c: FALL_THROUGH
 	002a8924 push ax
 	002a892c mov mar,0x32ef20
 	002a8938 memread4 ax
 	002a8940 lnot ax
 	002a8948 pop bx
 	002a8950 land bx,ax
 	002a895c mov ax,bx
		002a8968: FALL_THROUGH

	[002a8968]
		002a891c: CONDITIONAL_JUMP
		002a8924: FALL_THROUGH
 	002a8968 jz 0x002a8a14
		002a8a14: CONDITIONAL_JUMP
		002a8970: FALL_THROUGH

	[002a8970]
		002a8968: FALL_THROUGH
 	002a8970 push op
 	002a8978 mov ax,0x3
 	002a8984 farpush ax
 	002a898c mov ax,0x72
 	002a8998 farpush ax
 	002a89a0 mov ax,0x80
 	002a89ac farpush ax
 	002a89b4 mov ax,0x27
 	002a89c0 farpush ax
 	002a89c8 mov mar,0x3cef20
 	002a89d4 mov ax,mar
 	002a89e0 mov op,ax
 	002a89e8 setfuncargs 0x4
 	002a89f0 mov ax,0xc16f20
 	002a89fc farcall ax
 	002a8a04 farsubsp 0x4
 	002a8a0c pop op
		002a8a14: FALL_THROUGH

	[002a8a14]
		002a8968: CONDITIONAL_JUMP
		002a8970: FALL_THROUGH
 	002a8a14 sourceline 0x3b50
 	002a8a1c mov ax,0x0
 	002a8a28 stackptr 0x8
 	002a8a30 memzerond
 	002a8a34 ret

cJake_Interact$0:
	[002a8a38]
 	002a8a38 sourceline 0x3b53
 	002a8a40 thisaddr
 	002a8a48 sourceline 0x3b54
*	002a8a50 mov mar,0x6b6f20
 	002a8a5c mov ax,mar
 	002a8a68 push op
 	002a8a70 mov op,ax
 	002a8a78 setfuncargs 0x0
 	002a8a80 mov ax,0x516f20
 	002a8a8c farcall ax
 	002a8a94 pop op
 	002a8a9c push ax
 	002a8aa4 mov ax,0x36
 	002a8ab0 pop bx
 	002a8ab8 cmpneq bx,ax
 	002a8ac4 mov ax,bx
 	002a8ad0 jz 0x002a9658
		002a9658: CONDITIONAL_JUMP
		002a8ad8: FALL_THROUGH

	[002a8ad8]
		002a8a38: FALL_THROUGH
 	002a8ad8 sourceline 0x3b56
 	002a8ae0 push op
 	002a8ae8 mov ax,0x1
 	002a8af4 farpush ax
 	002a8afc mov mar,0x6cef20
 	002a8b08 mov ax,mar
 	002a8b14 mov op,ax
 	002a8b1c setfuncargs 0x1
 	002a8b24 mov ax,0x6d6f20
 	002a8b30 farcall ax
 	002a8b38 farsubsp 0x1
 	002a8b40 pop op
 	002a8b48 lnot ax
 	002a8b50 jnz 0x002a8bf0
		002a8bf0: CONDITIONAL_JUMP
		002a8b58: FALL_THROUGH

	[002a8b58]
		002a8ad8: FALL_THROUGH
 	002a8b58 push ax
 	002a8b60 push op
 	002a8b68 mov ax,0x2
 	002a8b74 farpush ax
 	002a8b7c mov mar,0x6cef20
 	002a8b88 mov ax,mar
 	002a8b94 mov op,ax
 	002a8b9c setfuncargs 0x1
 	002a8ba4 mov ax,0x6d6f20
 	002a8bb0 farcall ax
 	002a8bb8 farsubsp 0x1
 	002a8bc0 pop op
 	002a8bc8 lnot ax
 	002a8bd0 pop bx
 	002a8bd8 lor bx,ax
 	002a8be4 mov ax,bx
		002a8bf0: FALL_THROUGH

	[002a8bf0]
		002a8ad8: CONDITIONAL_JUMP
		002a8b58: FALL_THROUGH
 	002a8bf0 jnz 0x002a8c90
		002a8c90: CONDITIONAL_JUMP
		002a8bf8: FALL_THROUGH

	[002a8bf8]
		002a8bf0: FALL_THROUGH
 	002a8bf8 push ax
 	002a8c00 push op
 	002a8c08 mov ax,0x3
 	002a8c14 farpush ax
 	002a8c1c mov mar,0x6cef20
 	002a8c28 mov ax,mar
 	002a8c34 mov op,ax
 	002a8c3c setfuncargs 0x1
 	002a8c44 mov ax,0x6d6f20
 	002a8c50 farcall ax
 	002a8c58 farsubsp 0x1
 	002a8c60 pop op
 	002a8c68 lnot ax
 	002a8c70 pop bx
 	002a8c78 lor bx,ax
 	002a8c84 mov ax,bx
		002a8c90: FALL_THROUGH

	[002a8c90]
		002a8bf0: CONDITIONAL_JUMP
		002a8bf8: FALL_THROUGH
 	002a8c90 jnz 0x002a8d30
		002a8d30: CONDITIONAL_JUMP
		002a8c98: FALL_THROUGH

	[002a8c98]
		002a8c90: FALL_THROUGH
 	002a8c98 push ax
 	002a8ca0 push op
 	002a8ca8 mov ax,0x4
 	002a8cb4 farpush ax
 	002a8cbc mov mar,0x6cef20
 	002a8cc8 mov ax,mar
 	002a8cd4 mov op,ax
 	002a8cdc setfuncargs 0x1
 	002a8ce4 mov ax,0x6d6f20
 	002a8cf0 farcall ax
 	002a8cf8 farsubsp 0x1
 	002a8d00 pop op
 	002a8d08 lnot ax
 	002a8d10 pop bx
 	002a8d18 lor bx,ax
 	002a8d24 mov ax,bx
		002a8d30: FALL_THROUGH

	[002a8d30]
		002a8c90: CONDITIONAL_JUMP
		002a8c98: FALL_THROUGH
 	002a8d30 jz 0x002a9488
		002a9488: CONDITIONAL_JUMP
		002a8d38: FALL_THROUGH

	[002a8d38]
		002a8d30: FALL_THROUGH
 	002a8d38 sourceline 0x3b58
 	002a8d40 setfuncargs 0x0
 	002a8d48 mov ax,0x6def20
 	002a8d54 farcall ax
 	002a8d5c lnot ax
 	002a8d64 jz 0x002a8dc0
		002a8dc0: CONDITIONAL_JUMP
		002a8d6c: FALL_THROUGH

	[002a8d6c]
		002a8d38: FALL_THROUGH
 	002a8d6c mov ax,0x87
 	002a8d78 farpush ax
 	002a8d80 mov ax,0x4b
 	002a8d8c farpush ax
 	002a8d94 setfuncargs 0x2
 	002a8d9c mov ax,0x6e6f20
 	002a8da8 farcall ax
 	002a8db0 farsubsp 0x2
 	002a8db8 jmp 0x002a9478
		002a9478: UNCONDITIONAL_JUMP

	[002a8dc0]
		002a8d38: CONDITIONAL_JUMP
 	002a8dc0 sourceline 0x3b5b
 	002a8dc8 mov ax,0x3
 	002a8dd4 mov bx,ax
 	002a8de0 mov mar,0x3cef20
 	002a8dec mov ax,mar
 	002a8df8 push op
 	002a8e00 mov op,ax
 	002a8e08 farpush bx
 	002a8e10 setfuncargs 0x1
 	002a8e18 mov ax,0x69ef20
 	002a8e24 farcall ax
 	002a8e2c farsubsp 0x1
 	002a8e34 pop op
 	002a8e3c sourceline 0x3b5c
 	002a8e44 push op
 	002a8e4c mov ax,0x397
 	002a8e58 farpush ax
 	002a8e60 mov ax,0x0
 	002a8e6c farpush ax
 	002a8e74 mov mar,0x3cef20
 	002a8e80 mov ax,mar
 	002a8e8c mov op,ax
 	002a8e94 setfuncargs 0x2
 	002a8e9c mov ax,0x6eef20
 	002a8ea8 farcall ax
 	002a8eb0 farsubsp 0x2
 	002a8eb8 pop op
 	002a8ec0 sourceline 0x3b5d
 	002a8ec8 push op
 	002a8ed0 mov ax,0x2c7a14
 	002a8edc farpush ax
 	002a8ee4 mov mar,0x3cef20
 	002a8ef0 mov ax,mar
 	002a8efc mov op,ax
 	002a8f04 setfuncargs 0x1
 	002a8f0c mov ax,0x6f6f20
 	002a8f18 farcall ax
 	002a8f20 farsubsp 0x1
 	002a8f28 pop op
 	002a8f30 sourceline 0x3b5e
 	002a8f38 mov mar,0x6b6f20
 	002a8f44 mov ax,mar
 	002a8f50 push op
 	002a8f58 mov op,ax
 	002a8f60 setfuncargs 0x0
 	002a8f68 mov ax,0x516f20
 	002a8f74 farcall ax
 	002a8f7c pop op
 	002a8f84 push ax
 	002a8f8c mov ax,0x33
 	002a8f98 pop bx
 	002a8fa0 cmpeq bx,ax
 	002a8fac mov ax,bx
 	002a8fb8 jnz 0x002a9068
		002a9068: CONDITIONAL_JUMP
		002a8fc0: FALL_THROUGH

	[002a8fc0]
		002a8dc0: FALL_THROUGH
 	002a8fc0 push ax
 	002a8fc8 mov mar,0x6b6f20
 	002a8fd4 mov ax,mar
 	002a8fe0 push op
 	002a8fe8 mov op,ax
 	002a8ff0 setfuncargs 0x0
 	002a8ff8 mov ax,0x516f20
 	002a9004 farcall ax
 	002a900c pop op
 	002a9014 push ax
 	002a901c mov ax,0x32
 	002a9028 pop bx
 	002a9030 cmpeq bx,ax
 	002a903c mov ax,bx
 	002a9048 pop bx
 	002a9050 lor bx,ax
 	002a905c mov ax,bx
		002a9068: FALL_THROUGH

	[002a9068]
		002a8dc0: CONDITIONAL_JUMP
		002a8fc0: FALL_THROUGH
 	002a9068 jz 0x002a910c
		002a910c: CONDITIONAL_JUMP
		002a9070: FALL_THROUGH

	[002a9070]
		002a90cc: UNCONDITIONAL_JUMP
		002a9068: FALL_THROUGH
 	002a9070 sourceline 0x3b60
 	002a9078 mov mar,0x6b6f20
 	002a9084 mov ax,mar
 	002a9090 push op
 	002a9098 mov op,ax
 	002a90a0 setfuncargs 0x0
 	002a90a8 mov ax,0x50ef20
 	002a90b4 farcall ax
 	002a90bc pop op
 	002a90c4 jz 0x002a910c
		002a910c: CONDITIONAL_JUMP
		002a90cc: FALL_THROUGH

	[002a90cc]
		002a9070: FALL_THROUGH
 	002a90cc mov ax,0x1
 	002a90d8 farpush ax
 	002a90e0 setfuncargs 0x1
 	002a90e8 mov ax,0x426f20
 	002a90f4 farcall ax
 	002a90fc farsubsp 0x1
 	002a9104 jmp 0x002a9070
		002a9070: UNCONDITIONAL_JUMP

	[002a910c]
		002a9068: CONDITIONAL_JUMP
		002a9070: CONDITIONAL_JUMP
 	002a910c sourceline 0x3b62
 	002a9114 mov ax,0x1
 	002a9120 push ax
 	002a9128 mov ax,0x2
 	002a9134 assertlte ax,0x28
 	002a9140 mul ax,0x8
 	002a914c mov cx,ax
 	002a9158 pop ax
 	002a9160 mov bx,ax
 	002a916c mov mar,0x6fef20
 	002a9178 add mar,cx
 	002a9184 mov ax,mar
 	002a9190 push op
 	002a9198 mov op,ax
 	002a91a0 farpush bx
 	002a91a8 setfuncargs 0x1
 	002a91b0 mov ax,0x706f20
 	002a91bc farcall ax
 	002a91c4 farsubsp 0x1
 	002a91cc pop op
 	002a91d4 sourceline 0x3b63
 	002a91dc push op
 	002a91e4 mov ax,0x34
 	002a91f0 farpush ax
 	002a91f8 mov mar,0x6b6f20
 	002a9204 mov ax,mar
 	002a9210 mov op,ax
 	002a9218 setfuncargs 0x1
 	002a9220 mov ax,0x51ef20
 	002a922c farcall ax
 	002a9234 farsubsp 0x1
 	002a923c pop op
 	002a9244 sourceline 0x3b64
 	002a924c mov ax,0x46
 	002a9258 mov bx,ax
 	002a9264 mov mar,0x6b6f20
 	002a9270 mov ax,mar
 	002a927c push op
 	002a9284 mov op,ax
 	002a928c farpush bx
 	002a9294 setfuncargs 0x1
 	002a929c mov ax,0x70ef20
 	002a92a8 farcall ax
 	002a92b0 farsubsp 0x1
 	002a92b8 pop op
 	002a92c0 sourceline 0x3b65
 	002a92c8 mov ax,0x8f
 	002a92d4 mov bx,ax
 	002a92e0 mov mar,0x6b6f20
 	002a92ec mov ax,mar
 	002a92f8 push op
 	002a9300 mov op,ax
 	002a9308 farpush bx
 	002a9310 setfuncargs 0x1
 	002a9318 mov ax,0x526f20
 	002a9324 farcall ax
 	002a932c farsubsp 0x1
 	002a9334 pop op
 	002a933c sourceline 0x3b66
 	002a9344 push op
 	002a934c mov ax,0x426
 	002a9358 farpush ax
 	002a9360 mov ax,0x397
 	002a936c farpush ax
 	002a9374 mov ax,0x0
 	002a9380 farpush ax
 	002a9388 mov ax,0x3
 	002a9394 farpush ax
 	002a939c mov ax,0x0
 	002a93a8 farpush ax
 	002a93b0 mov mar,0x6b6f20
 	002a93bc mov ax,mar
 	002a93c8 mov op,ax
 	002a93d0 setfuncargs 0x5
 	002a93d8 mov ax,0x536f20
 	002a93e4 farcall ax
 	002a93ec farsubsp 0x5
 	002a93f4 pop op
 	002a93fc sourceline 0x3b67
 	002a9404 mov ax,0x1
 	002a9410 mov mar,0x716f20
 	002a941c memwrite4 ax
 	002a9424 sourceline 0x3b68
 	002a942c push op
 	002a9434 mov mar,0x6cef20
 	002a9440 mov ax,mar
 	002a944c mov op,ax
 	002a9454 setfuncargs 0x0
 	002a945c mov ax,0x71ef20
 	002a9468 farcall ax
 	002a9470 pop op
		002a9478: FALL_THROUGH

	[002a9478]
		002a8d6c: UNCONDITIONAL_JUMP
		002a910c: FALL_THROUGH
 	002a9478 sourceline 0x3b6a
 	002a9480 jmp 0x002a9648
		002a9648: UNCONDITIONAL_JUMP

	[002a9488]
		002a8d30: CONDITIONAL_JUMP
 	002a9488 sourceline 0x3b6d
 	002a9490 push op
 	002a9498 mov ax,0x397
 	002a94a4 farpush ax
 	002a94ac mov ax,0xc7
 	002a94b8 farpush ax
 	002a94c0 mov ax,0x44
 	002a94cc farpush ax
 	002a94d4 mov mar,0x3cef20
 	002a94e0 mov ax,mar
 	002a94ec mov op,ax
 	002a94f4 setfuncargs 0x3
 	002a94fc mov ax,0x726f20
 	002a9508 farcall ax
 	002a9510 farsubsp 0x3
 	002a9518 pop op
 	002a9520 sourceline 0x3b6e
 	002a9528 mov ax,0x1
 	002a9534 mov bx,ax
 	002a9540 mov mar,0x3cef20
 	002a954c mov ax,mar
 	002a9558 push op
 	002a9560 mov op,ax
 	002a9568 farpush bx
 	002a9570 setfuncargs 0x1
 	002a9578 mov ax,0x69ef20
 	002a9584 farcall ax
 	002a958c farsubsp 0x1
 	002a9594 pop op
 	002a959c sourceline 0x3b6f
 	002a95a4 push op
 	002a95ac mov ax,0x2c798e
 	002a95b8 farpush ax
 	002a95c0 mov ax,0x138
 	002a95cc farpush ax
 	002a95d4 mov ax,0x92
 	002a95e0 farpush ax
 	002a95e8 mov ax,0x0
 	002a95f4 farpush ax
 	002a95fc mov mar,0x3cef20
 	002a9608 mov ax,mar
 	002a9614 mov op,ax
 	002a961c setfuncargs 0x4
 	002a9624 mov ax,0x6aef20
 	002a9630 farcall ax
 	002a9638 farsubsp 0x4
 	002a9640 pop op
		002a9648: FALL_THROUGH

	[002a9648]
		002a9478: UNCONDITIONAL_JUMP
		002a9488: FALL_THROUGH
 	002a9648 sourceline 0x3b71
 	002a9650 jmp 0x002aa008
		002aa008: UNCONDITIONAL_JUMP

	[002a9658]
		002a8a38: CONDITIONAL_JUMP
 	002a9658 sourceline 0x3b74
 	002a9660 mov mar,0x72ef20
 	002a966c memread4 ax
 	002a9674 jz 0x002a984c
		002a984c: CONDITIONAL_JUMP
		002a967c: FALL_THROUGH

	[002a967c]
		002a9658: FALL_THROUGH
 	002a967c sourceline 0x3b76
 	002a9684 push op
 	002a968c mov ax,0x397
 	002a9698 farpush ax
 	002a96a0 mov ax,0xc7
 	002a96ac farpush ax
 	002a96b4 mov ax,0x44
 	002a96c0 farpush ax
 	002a96c8 mov mar,0x3cef20
 	002a96d4 mov ax,mar
 	002a96e0 mov op,ax
 	002a96e8 setfuncargs 0x3
 	002a96f0 mov ax,0x726f20
 	002a96fc farcall ax
 	002a9704 farsubsp 0x3
 	002a970c pop op
 	002a9714 sourceline 0x3b77
 	002a971c mov ax,0x1
 	002a9728 mov bx,ax
 	002a9734 mov mar,0x3cef20
 	002a9740 mov ax,mar
 	002a974c push op
 	002a9754 mov op,ax
 	002a975c farpush bx
 	002a9764 setfuncargs 0x1
 	002a976c mov ax,0x69ef20
 	002a9778 farcall ax
 	002a9780 farsubsp 0x1
 	002a9788 pop op
 	002a9790 sourceline 0x3b78
 	002a9798 push op
 	002a97a0 mov ax,0x2c7a24
 	002a97ac farpush ax
 	002a97b4 mov ax,0x138
 	002a97c0 farpush ax
 	002a97c8 mov ax,0x92
 	002a97d4 farpush ax
 	002a97dc mov ax,0x0
 	002a97e8 farpush ax
 	002a97f0 mov mar,0x3cef20
 	002a97fc mov ax,mar
 	002a9808 mov op,ax
 	002a9810 setfuncargs 0x4
 	002a9818 mov ax,0x6aef20
 	002a9824 farcall ax
 	002a982c farsubsp 0x4
 	002a9834 pop op
 	002a983c sourceline 0x3b79
 	002a9844 jmp 0x002aa008
		002aa008: UNCONDITIONAL_JUMP

	[002a984c]
		002a9658: CONDITIONAL_JUMP
 	002a984c sourceline 0x3b7c
 	002a9854 push op
 	002a985c mov ax,0x2
 	002a9868 farpush ax
 	002a9870 mov mar,0x736f20
 	002a987c mov ax,mar
 	002a9888 mov op,ax
 	002a9890 setfuncargs 0x1
 	002a9898 mov ax,0x6d6f20
 	002a98a4 farcall ax
 	002a98ac farsubsp 0x1
 	002a98b4 pop op
 	002a98bc lnot ax
 	002a98c4 jz 0x002a9a9c
		002a9a9c: CONDITIONAL_JUMP
		002a98cc: FALL_THROUGH

	[002a98cc]
		002a984c: FALL_THROUGH
 	002a98cc sourceline 0x3b7e
 	002a98d4 push op
 	002a98dc mov ax,0x397
 	002a98e8 farpush ax
 	002a98f0 mov ax,0xc7
 	002a98fc farpush ax
 	002a9904 mov ax,0x44
 	002a9910 farpush ax
 	002a9918 mov mar,0x3cef20
 	002a9924 mov ax,mar
 	002a9930 mov op,ax
 	002a9938 setfuncargs 0x3
 	002a9940 mov ax,0x726f20
 	002a994c farcall ax
 	002a9954 farsubsp 0x3
 	002a995c pop op
 	002a9964 sourceline 0x3b7f
 	002a996c mov ax,0x1
 	002a9978 mov bx,ax
 	002a9984 mov mar,0x3cef20
 	002a9990 mov ax,mar
 	002a999c push op
 	002a99a4 mov op,ax
 	002a99ac farpush bx
 	002a99b4 setfuncargs 0x1
 	002a99bc mov ax,0x69ef20
 	002a99c8 farcall ax
 	002a99d0 farsubsp 0x1
 	002a99d8 pop op
 	002a99e0 sourceline 0x3b80
 	002a99e8 push op
 	002a99f0 mov ax,0x2c7a24
 	002a99fc farpush ax
 	002a9a04 mov ax,0x138
 	002a9a10 farpush ax
 	002a9a18 mov ax,0x92
 	002a9a24 farpush ax
 	002a9a2c mov ax,0x0
 	002a9a38 farpush ax
 	002a9a40 mov mar,0x3cef20
 	002a9a4c mov ax,mar
 	002a9a58 mov op,ax
 	002a9a60 setfuncargs 0x4
 	002a9a68 mov ax,0x6aef20
 	002a9a74 farcall ax
 	002a9a7c farsubsp 0x4
 	002a9a84 pop op
 	002a9a8c sourceline 0x3b81
 	002a9a94 jmp 0x002aa008
		002aa008: UNCONDITIONAL_JUMP

	[002a9a9c]
		002a984c: CONDITIONAL_JUMP
 	002a9a9c sourceline 0x3b84
 	002a9aa4 mov mar,0x73ef20
 	002a9ab0 memread4 ax
 	002a9ab8 lnot ax
 	002a9ac0 jz 0x002a9e48
		002a9e48: CONDITIONAL_JUMP
		002a9ac8: FALL_THROUGH

	[002a9ac8]
		002a9a9c: FALL_THROUGH
 	002a9ac8 sourceline 0x3b86
 	002a9ad0 setfuncargs 0x0
 	002a9ad8 mov ax,0x6def20
 	002a9ae4 farcall ax
 	002a9aec lnot ax
 	002a9af4 jz 0x002a9b50
		002a9b50: CONDITIONAL_JUMP
		002a9afc: FALL_THROUGH

	[002a9afc]
		002a9ac8: FALL_THROUGH
 	002a9afc mov ax,0x87
 	002a9b08 farpush ax
 	002a9b10 mov ax,0x4d
 	002a9b1c farpush ax
 	002a9b24 setfuncargs 0x2
 	002a9b2c mov ax,0x6e6f20
 	002a9b38 farcall ax
 	002a9b40 farsubsp 0x2
 	002a9b48 jmp 0x002a9e38
		002a9e38: UNCONDITIONAL_JUMP

	[002a9b50]
		002a9ac8: CONDITIONAL_JUMP
 	002a9b50 sourceline 0x3b89
 	002a9b58 mov ax,0x3
 	002a9b64 mov bx,ax
 	002a9b70 mov mar,0x3cef20
 	002a9b7c mov ax,mar
 	002a9b88 push op
 	002a9b90 mov op,ax
 	002a9b98 farpush bx
 	002a9ba0 setfuncargs 0x1
 	002a9ba8 mov ax,0x69ef20
 	002a9bb4 farcall ax
 	002a9bbc farsubsp 0x1
 	002a9bc4 pop op
 	002a9bcc sourceline 0x3b8a
 	002a9bd4 push op
 	002a9bdc mov ax,0x397
 	002a9be8 farpush ax
 	002a9bf0 mov ax,0x0
 	002a9bfc farpush ax
 	002a9c04 mov mar,0x3cef20
 	002a9c10 mov ax,mar
 	002a9c1c mov op,ax
 	002a9c24 setfuncargs 0x2
 	002a9c2c mov ax,0x6eef20
 	002a9c38 farcall ax
 	002a9c40 farsubsp 0x2
 	002a9c48 pop op
 	002a9c50 sourceline 0x3b8b
 	002a9c58 push op
 	002a9c60 mov ax,0x2c7a14
 	002a9c6c farpush ax
 	002a9c74 mov mar,0x3cef20
 	002a9c80 mov ax,mar
 	002a9c8c mov op,ax
 	002a9c94 setfuncargs 0x1
 	002a9c9c mov ax,0x6f6f20
 	002a9ca8 farcall ax
 	002a9cb0 farsubsp 0x1
 	002a9cb8 pop op
 	002a9cc0 sourceline 0x3b8c
 	002a9cc8 mov mar,0x6b6f20
 	002a9cd4 mov ax,mar
 	002a9ce0 push op
 	002a9ce8 mov op,ax
 	002a9cf0 setfuncargs 0x0
 	002a9cf8 mov ax,0x516f20
 	002a9d04 farcall ax
 	002a9d0c pop op
 	002a9d14 push ax
 	002a9d1c mov ax,0x33
 	002a9d28 pop bx
 	002a9d30 cmpeq bx,ax
 	002a9d3c mov ax,bx
 	002a9d48 jz 0x002a9de4
		002a9de4: CONDITIONAL_JUMP
		002a9d50: FALL_THROUGH

	[002a9d50]
		002a9b50: FALL_THROUGH
 	002a9d50 sourceline 0x3b8e
 	002a9d58 mov mar,0x6b6f20
 	002a9d64 mov ax,mar
 	002a9d70 push op
 	002a9d78 mov op,ax
 	002a9d80 setfuncargs 0x0
 	002a9d88 mov ax,0x50ef20
 	002a9d94 farcall ax
 	002a9d9c pop op
 	002a9da4 jz 0x002a9de4
		002a9de4: CONDITIONAL_JUMP
		002a9dac: FALL_THROUGH

	[002a9dac]
		002a9d50: FALL_THROUGH
 	002a9dac mov ax,0x96
 	002a9db8 farpush ax
 	002a9dc0 setfuncargs 0x1
 	002a9dc8 mov ax,0x426f20
 	002a9dd4 farcall ax
 	002a9ddc farsubsp 0x1
		002a9de4: FALL_THROUGH

	[002a9de4]
		002a9b50: CONDITIONAL_JUMP
		002a9d50: CONDITIONAL_JUMP
		002a9dac: FALL_THROUGH
 	002a9de4 sourceline 0x3b90
 	002a9dec push op
 	002a9df4 mov mar,0x6cef20
 	002a9e00 mov ax,mar
 	002a9e0c mov op,ax
 	002a9e14 setfuncargs 0x0
 	002a9e1c mov ax,0x71ef20
 	002a9e28 farcall ax
 	002a9e30 pop op
		002a9e38: FALL_THROUGH

	[002a9e38]
		002a9afc: UNCONDITIONAL_JUMP
		002a9de4: FALL_THROUGH
 	002a9e38 sourceline 0x3b92
 	002a9e40 jmp 0x002aa008
		002aa008: UNCONDITIONAL_JUMP

	[002a9e48]
		002a9a9c: CONDITIONAL_JUMP
 	002a9e48 sourceline 0x3b95
 	002a9e50 push op
 	002a9e58 mov ax,0x397
 	002a9e64 farpush ax
 	002a9e6c mov ax,0xc7
 	002a9e78 farpush ax
 	002a9e80 mov ax,0x44
 	002a9e8c farpush ax
 	002a9e94 mov mar,0x3cef20
 	002a9ea0 mov ax,mar
 	002a9eac mov op,ax
 	002a9eb4 setfuncargs 0x3
 	002a9ebc mov ax,0x726f20
 	002a9ec8 farcall ax
 	002a9ed0 farsubsp 0x3
 	002a9ed8 pop op
 	002a9ee0 sourceline 0x3b96
 	002a9ee8 mov ax,0x1
 	002a9ef4 mov bx,ax
 	002a9f00 mov mar,0x3cef20
 	002a9f0c mov ax,mar
 	002a9f18 push op
 	002a9f20 mov op,ax
 	002a9f28 farpush bx
 	002a9f30 setfuncargs 0x1
 	002a9f38 mov ax,0x69ef20
 	002a9f44 farcall ax
 	002a9f4c farsubsp 0x1
 	002a9f54 pop op
 	002a9f5c sourceline 0x3b97
 	002a9f64 push op
 	002a9f6c mov ax,0x2c7a24
 	002a9f78 farpush ax
 	002a9f80 mov ax,0x138
 	002a9f8c farpush ax
 	002a9f94 mov ax,0x92
 	002a9fa0 farpush ax
 	002a9fa8 mov ax,0x0
 	002a9fb4 farpush ax
 	002a9fbc mov mar,0x3cef20
 	002a9fc8 mov ax,mar
 	002a9fd4 mov op,ax
 	002a9fdc setfuncargs 0x4
 	002a9fe4 mov ax,0x6aef20
 	002a9ff0 farcall ax
 	002a9ff8 farsubsp 0x4
 	002aa000 pop op
		002aa008: FALL_THROUGH

	[002aa008]
		002a9648: UNCONDITIONAL_JUMP
		002a967c: UNCONDITIONAL_JUMP
		002a98cc: UNCONDITIONAL_JUMP
		002a9e38: UNCONDITIONAL_JUMP
		002a9e48: FALL_THROUGH
 	002aa008 sourceline 0x3b9c
 	002aa010 mov ax,0x0
 	002aa01c ret

cJake_Look$0:
	[002aa020]
 	002aa020 sourceline 0x3b9f
 	002aa028 thisaddr
 	002aa030 sourceline 0x3ba0
 	002aa038 push op
 	002aa040 mov ax,0x397
 	002aa04c farpush ax
 	002aa054 mov ax,0xc7
 	002aa060 farpush ax
 	002aa068 mov ax,0x44
 	002aa074 farpush ax
*	002aa07c mov mar,0x3cef20
 	002aa088 mov ax,mar
 	002aa094 mov op,ax
 	002aa09c setfuncargs 0x3
 	002aa0a4 mov ax,0x726f20
 	002aa0b0 farcall ax
 	002aa0b8 farsubsp 0x3
 	002aa0c0 pop op
 	002aa0c8 sourceline 0x3ba1
 	002aa0d0 mov ax,0x1
 	002aa0dc mov bx,ax
 	002aa0e8 mov mar,0x3cef20
 	002aa0f4 mov ax,mar
 	002aa100 push op
 	002aa108 mov op,ax
 	002aa110 farpush bx
 	002aa118 setfuncargs 0x1
 	002aa120 mov ax,0x69ef20
 	002aa12c farcall ax
 	002aa134 farsubsp 0x1
 	002aa13c pop op
 	002aa144 sourceline 0x3ba2
 	002aa14c push op
 	002aa154 mov ax,0x2c7a4e
 	002aa160 farpush ax
 	002aa168 mov ax,0x138
 	002aa174 farpush ax
 	002aa17c mov ax,0x92
 	002aa188 farpush ax
 	002aa190 mov ax,0x0
 	002aa19c farpush ax
 	002aa1a4 mov mar,0x3cef20
 	002aa1b0 mov ax,mar
 	002aa1bc mov op,ax
 	002aa1c4 setfuncargs 0x4
 	002aa1cc mov ax,0x6aef20
 	002aa1d8 farcall ax
 	002aa1e0 farsubsp 0x4
 	002aa1e8 pop op
 	002aa1f0 sourceline 0x3ba3
 	002aa1f8 mov ax,0x0
 	002aa204 ret

cJake_UseInv$0:
	[002aa208]
 	002aa208 sourceline 0x3ba6
 	002aa210 thisaddr
 	002aa218 sourceline 0x3ba7
*	002aa220 mov mar,0x3cef20
 	002aa22c mov ax,mar
 	002aa238 push op
 	002aa240 mov op,ax
 	002aa248 setfuncargs 0x0
 	002aa250 mov ax,0x89ef20
 	002aa25c farcall ax
 	002aa264 pop op
 	002aa26c push ax
 	002aa274 mov mar,0x8a6f20
 	002aa280 mov ax,mar
 	002aa28c pop bx
 	002aa294 cmpeq bx,ax
 	002aa2a0 mov ax,bx
 	002aa2ac jz 0x002ac458
		002ac458: CONDITIONAL_JUMP
		002aa2b4: FALL_THROUGH

	[002aa2b4]
		002aa208: FALL_THROUGH
 	002aa2b4 sourceline 0x3ba9
 	002aa2bc mov mar,0x125ef20
 	002aa2c8 memread4 ax
 	002aa2d0 jz 0x002ac288
		002ac288: CONDITIONAL_JUMP
		002aa2d8: FALL_THROUGH

	[002aa2d8]
		002aa2b4: FALL_THROUGH
 	002aa2d8 sourceline 0x3bab
 	002aa2e0 mov ax,-0x1
 	002aa2ec farpush ax
 	002aa2f4 mov ax,0x1
 	002aa300 farpush ax
 	002aa308 setfuncargs 0x2
 	002aa310 mov ax,0xc0ef20
 	002aa31c farcall ax
 	002aa324 farsubsp 0x2
 	002aa32c sourceline 0x3bac
 	002aa334 mov ax,-0x1
 	002aa340 farpush ax
 	002aa348 mov ax,0x2
 	002aa354 farpush ax
 	002aa35c setfuncargs 0x2
 	002aa364 mov ax,0xc0ef20
 	002aa370 farcall ax
 	002aa378 farsubsp 0x2
 	002aa380 sourceline 0x3bad
 	002aa388 mov ax,0x3
 	002aa394 mov bx,ax
 	002aa3a0 mov mar,0x3cef20
 	002aa3ac mov ax,mar
 	002aa3b8 push op
 	002aa3c0 mov op,ax
 	002aa3c8 farpush bx
 	002aa3d0 setfuncargs 0x1
 	002aa3d8 mov ax,0x69ef20
 	002aa3e4 farcall ax
 	002aa3ec farsubsp 0x1
 	002aa3f4 pop op
 	002aa3fc sourceline 0x3bae
 	002aa404 setfuncargs 0x0
 	002aa40c mov ax,0x6def20
 	002aa418 farcall ax
 	002aa420 lnot ax
 	002aa428 jz 0x002aa484
		002aa484: CONDITIONAL_JUMP
		002aa430: FALL_THROUGH

	[002aa430]
		002aa2d8: FALL_THROUGH
 	002aa430 mov ax,0x87
 	002aa43c farpush ax
 	002aa444 mov ax,0x4b
 	002aa450 farpush ax
 	002aa458 setfuncargs 0x2
 	002aa460 mov ax,0x6e6f20
 	002aa46c farcall ax
 	002aa474 farsubsp 0x2
 	002aa47c jmp 0x002ac278
		002ac278: UNCONDITIONAL_JUMP

	[002aa484]
		002aa2d8: CONDITIONAL_JUMP
 	002aa484 sourceline 0x3bb1
 	002aa48c push op
 	002aa494 mov ax,0x397
 	002aa4a0 farpush ax
 	002aa4a8 mov ax,0x0
 	002aa4b4 farpush ax
 	002aa4bc mov mar,0x3cef20
 	002aa4c8 mov ax,mar
 	002aa4d4 mov op,ax
 	002aa4dc setfuncargs 0x2
 	002aa4e4 mov ax,0x6eef20
 	002aa4f0 farcall ax
 	002aa4f8 farsubsp 0x2
 	002aa500 pop op
 	002aa508 sourceline 0x3bb2
 	002aa510 mov mar,0x6b6f20
 	002aa51c mov ax,mar
 	002aa528 push op
 	002aa530 mov op,ax
 	002aa538 setfuncargs 0x0
 	002aa540 mov ax,0x516f20
 	002aa54c farcall ax
 	002aa554 pop op
 	002aa55c push ax
 	002aa564 mov ax,0x33
 	002aa570 pop bx
 	002aa578 cmpeq bx,ax
 	002aa584 mov ax,bx
 	002aa590 jz 0x002aa62c
		002aa62c: CONDITIONAL_JUMP
		002aa598: FALL_THROUGH

	[002aa598]
		002aa484: FALL_THROUGH
 	002aa598 sourceline 0x3bb4
 	002aa5a0 mov mar,0x6b6f20
 	002aa5ac mov ax,mar
 	002aa5b8 push op
 	002aa5c0 mov op,ax
 	002aa5c8 setfuncargs 0x0
 	002aa5d0 mov ax,0x50ef20
 	002aa5dc farcall ax
 	002aa5e4 pop op
 	002aa5ec jz 0x002aa62c
		002aa62c: CONDITIONAL_JUMP
		002aa5f4: FALL_THROUGH

	[002aa5f4]
		002aa598: FALL_THROUGH
 	002aa5f4 mov ax,0x96
 	002aa600 farpush ax
 	002aa608 setfuncargs 0x1
 	002aa610 mov ax,0x426f20
 	002aa61c farcall ax
 	002aa624 farsubsp 0x1
		002aa62c: FALL_THROUGH

	[002aa62c]
		002aa484: CONDITIONAL_JUMP
		002aa598: CONDITIONAL_JUMP
		002aa5f4: FALL_THROUGH
 	002aa62c sourceline 0x3bb6
 	002aa634 push op
 	002aa63c mov ax,0x2c7a73
 	002aa648 farpush ax
 	002aa650 mov mar,0x3cef20
 	002aa65c mov ax,mar
 	002aa668 mov op,ax
 	002aa670 setfuncargs 0x1
 	002aa678 mov ax,0x6f6f20
 	002aa684 farcall ax
 	002aa68c farsubsp 0x1
 	002aa694 pop op
 	002aa69c sourceline 0x3bb7
 	002aa6a4 push op
 	002aa6ac mov ax,0x35
 	002aa6b8 farpush ax
 	002aa6c0 mov mar,0x6b6f20
 	002aa6cc mov ax,mar
 	002aa6d8 mov op,ax
 	002aa6e0 setfuncargs 0x1
 	002aa6e8 mov ax,0x51ef20
 	002aa6f4 farcall ax
 	002aa6fc farsubsp 0x1
 	002aa704 pop op
 	002aa70c sourceline 0x3bb8
 	002aa714 mov ax,0x3a
 	002aa720 mov bx,ax
 	002aa72c mov mar,0x6b6f20
 	002aa738 mov ax,mar
 	002aa744 push op
 	002aa74c mov op,ax
 	002aa754 farpush bx
 	002aa75c setfuncargs 0x1
 	002aa764 mov ax,0x70ef20
 	002aa770 farcall ax
 	002aa778 farsubsp 0x1
 	002aa780 pop op
 	002aa788 sourceline 0x3bb9
 	002aa790 mov ax,0x90
 	002aa79c mov bx,ax
 	002aa7a8 mov mar,0x6b6f20
 	002aa7b4 mov ax,mar
 	002aa7c0 push op
 	002aa7c8 mov op,ax
 	002aa7d0 farpush bx
 	002aa7d8 setfuncargs 0x1
 	002aa7e0 mov ax,0x526f20
 	002aa7ec farcall ax
 	002aa7f4 farsubsp 0x1
 	002aa7fc pop op
 	002aa804 sourceline 0x3bba
 	002aa80c mov ax,0x1
 	002aa818 mov mar,0x716f20
 	002aa824 memwrite4 ax
 	002aa82c sourceline 0x3bbb
 	002aa834 push op
 	002aa83c mov ax,0x426
 	002aa848 farpush ax
 	002aa850 mov ax,0x397
 	002aa85c farpush ax
 	002aa864 mov ax,0x0
 	002aa870 farpush ax
 	002aa878 mov ax,0x3
 	002aa884 farpush ax
 	002aa88c mov ax,0x0
 	002aa898 farpush ax
 	002aa8a0 mov mar,0x6b6f20
 	002aa8ac mov ax,mar
 	002aa8b8 mov op,ax
 	002aa8c0 setfuncargs 0x5
 	002aa8c8 mov ax,0x536f20
 	002aa8d4 farcall ax
 	002aa8dc farsubsp 0x5
 	002aa8e4 pop op
 	002aa8ec sourceline 0x3bbc
 	002aa8f4 push op
 	002aa8fc mov ax,0x5
 	002aa908 farpush ax
 	002aa910 mov mar,0x3cef20
 	002aa91c mov ax,mar
 	002aa928 mov op,ax
 	002aa930 setfuncargs 0x1
 	002aa938 mov ax,0x51ef20
 	002aa944 farcall ax
 	002aa94c farsubsp 0x1
 	002aa954 pop op
 	002aa95c sourceline 0x3bbd
 	002aa964 mov ax,0x80
 	002aa970 mov bx,ax
 	002aa97c mov mar,0x3cef20
 	002aa988 mov ax,mar
 	002aa994 push op
 	002aa99c mov op,ax
 	002aa9a4 farpush bx
 	002aa9ac setfuncargs 0x1
 	002aa9b4 mov ax,0x526f20
 	002aa9c0 farcall ax
 	002aa9c8 farsubsp 0x1
 	002aa9d0 pop op
 	002aa9d8 sourceline 0x3bbe
 	002aa9e0 push op
 	002aa9e8 mov ax,0x426
 	002aa9f4 farpush ax
 	002aa9fc mov ax,0x397
 	002aaa08 farpush ax
 	002aaa10 mov ax,0x0
 	002aaa1c farpush ax
 	002aaa24 mov ax,0x3
 	002aaa30 farpush ax
 	002aaa38 mov ax,0x1
 	002aaa44 farpush ax
 	002aaa4c mov mar,0x6b6f20
 	002aaa58 mov ax,mar
 	002aaa64 mov op,ax
 	002aaa6c setfuncargs 0x5
 	002aaa74 mov ax,0x536f20
 	002aaa80 farcall ax
 	002aaa88 farsubsp 0x5
 	002aaa90 pop op
 	002aaa98 sourceline 0x3bbf
 	002aaaa0 mov ax,0x1
 	002aaaac push ax
 	002aaab4 mov ax,0x1
 	002aaac0 assertlte ax,0x28
 	002aaacc mul ax,0x8
 	002aaad8 mov cx,ax
 	002aaae4 pop ax
 	002aaaec mov bx,ax
 	002aaaf8 mov mar,0x6fef20
 	002aab04 add mar,cx
 	002aab10 mov ax,mar
 	002aab1c push op
 	002aab24 mov op,ax
 	002aab2c farpush bx
 	002aab34 setfuncargs 0x1
 	002aab3c mov ax,0x706f20
 	002aab48 farcall ax
 	002aab50 farsubsp 0x1
 	002aab58 pop op
 	002aab60 sourceline 0x3bc0
 	002aab68 push op
 	002aab70 mov ax,0x32
 	002aab7c farpush ax
 	002aab84 mov mar,0x6b6f20
 	002aab90 mov ax,mar
 	002aab9c mov op,ax
 	002aaba4 setfuncargs 0x1
 	002aabac mov ax,0x51ef20
 	002aabb8 farcall ax
 	002aabc0 farsubsp 0x1
 	002aabc8 pop op
 	002aabd0 sourceline 0x3bc1
 	002aabd8 mov ax,0x44
 	002aabe4 mov bx,ax
 	002aabf0 mov mar,0x6b6f20
 	002aabfc mov ax,mar
 	002aac08 push op
 	002aac10 mov op,ax
 	002aac18 farpush bx
 	002aac20 setfuncargs 0x1
 	002aac28 mov ax,0x70ef20
 	002aac34 farcall ax
 	002aac3c farsubsp 0x1
 	002aac44 pop op
 	002aac4c sourceline 0x3bc2
 	002aac54 mov ax,0x91
 	002aac60 mov bx,ax
 	002aac6c mov mar,0x6b6f20
 	002aac78 mov ax,mar
 	002aac84 push op
 	002aac8c mov op,ax
 	002aac94 farpush bx
 	002aac9c setfuncargs 0x1
 	002aaca4 mov ax,0x526f20
 	002aacb0 farcall ax
 	002aacb8 farsubsp 0x1
 	002aacc0 pop op
 	002aacc8 sourceline 0x3bc3
 	002aacd0 push op
 	002aacd8 mov mar,0x8a6f20
 	002aace4 mov ax,mar
 	002aacf0 farpush ax
 	002aacf8 mov mar,0x3cef20
 	002aad04 mov ax,mar
 	002aad10 mov op,ax
 	002aad18 setfuncargs 0x1
 	002aad20 mov ax,0x7d6f20
 	002aad2c farcall ax
 	002aad34 farsubsp 0x1
 	002aad3c pop op
 	002aad44 sourceline 0x3bc4
 	002aad4c mov ax,0x1
 	002aad58 mov mar,0x1266f20
 	002aad64 memwrite4 ax
 	002aad6c sourceline 0x3bc5
 	002aad74 mov ax,0x1
 	002aad80 push ax
 	002aad88 mov ax,0x2
 	002aad94 assertlte ax,0x28
 	002aada0 mul ax,0x8
 	002aadac mov cx,ax
 	002aadb8 pop ax
 	002aadc0 mov bx,ax
 	002aadcc mov mar,0x6fef20
 	002aadd8 add mar,cx
 	002aade4 mov ax,mar
 	002aadf0 push op
 	002aadf8 mov op,ax
 	002aae00 farpush bx
 	002aae08 setfuncargs 0x1
 	002aae10 mov ax,0x796f20
 	002aae1c farcall ax
 	002aae24 farsubsp 0x1
 	002aae2c pop op
 	002aae34 sourceline 0x3bc6
 	002aae3c push op
 	002aae44 mov ax,0x2c7a8d
 	002aae50 farpush ax
 	002aae58 mov mar,0x6b6f20
 	002aae64 mov ax,mar
 	002aae70 mov op,ax
 	002aae78 setfuncargs 0x1
 	002aae80 mov ax,0x6f6f20
 	002aae8c farcall ax
 	002aae94 farsubsp 0x1
 	002aae9c pop op
 	002aaea4 sourceline 0x3bc7
 	002aaeac push op
 	002aaeb4 mov ax,0x2c7adb
 	002aaec0 farpush ax
 	002aaec8 mov mar,0x3cef20
 	002aaed4 mov ax,mar
 	002aaee0 mov op,ax
 	002aaee8 setfuncargs 0x1
 	002aaef0 mov ax,0x6f6f20
 	002aaefc farcall ax
 	002aaf04 farsubsp 0x1
 	002aaf0c pop op
 	002aaf14 sourceline 0x3bc8
 	002aaf1c push op
 	002aaf24 mov ax,0x2c7af1
 	002aaf30 farpush ax
 	002aaf38 mov mar,0x6b6f20
 	002aaf44 mov ax,mar
 	002aaf50 mov op,ax
 	002aaf58 setfuncargs 0x1
 	002aaf60 mov ax,0x6f6f20
 	002aaf6c farcall ax
 	002aaf74 farsubsp 0x1
 	002aaf7c pop op
 	002aaf84 sourceline 0x3bc9
 	002aaf8c mov ax,0x1
 	002aaf98 push ax
 	002aafa0 mov ax,0x2
 	002aafac assertlte ax,0x28
 	002aafb8 mul ax,0x8
 	002aafc4 mov cx,ax
 	002aafd0 pop ax
 	002aafd8 mov bx,ax
 	002aafe4 mov mar,0x6fef20
 	002aaff0 add mar,cx
 	002aaffc mov ax,mar
 	002ab008 push op
 	002ab010 mov op,ax
 	002ab018 farpush bx
 	002ab020 setfuncargs 0x1
 	002ab028 mov ax,0x706f20
 	002ab034 farcall ax
 	002ab03c farsubsp 0x1
 	002ab044 pop op
 	002ab04c sourceline 0x3bca
 	002ab054 push op
 	002ab05c mov ax,0x426
 	002ab068 farpush ax
 	002ab070 mov ax,0x397
 	002ab07c farpush ax
 	002ab084 mov ax,0x0
 	002ab090 farpush ax
 	002ab098 mov ax,0x3
 	002ab0a4 farpush ax
 	002ab0ac mov ax,0x0
 	002ab0b8 farpush ax
 	002ab0c0 mov mar,0x6b6f20
 	002ab0cc mov ax,mar
 	002ab0d8 mov op,ax
 	002ab0e0 setfuncargs 0x5
 	002ab0e8 mov ax,0x536f20
 	002ab0f4 farcall ax
 	002ab0fc farsubsp 0x5
 	002ab104 pop op
 	002ab10c sourceline 0x3bcb
 	002ab114 mov ax,0x28
 	002ab120 farpush ax
 	002ab128 setfuncargs 0x1
 	002ab130 mov ax,0x426f20
 	002ab13c farcall ax
 	002ab144 farsubsp 0x1
 	002ab14c sourceline 0x3bcc
 	002ab154 push op
 	002ab15c mov ax,0x2c7b09
 	002ab168 farpush ax
 	002ab170 mov mar,0x6b6f20
 	002ab17c mov ax,mar
 	002ab188 mov op,ax
 	002ab190 setfuncargs 0x1
 	002ab198 mov ax,0x6f6f20
 	002ab1a4 farcall ax
 	002ab1ac farsubsp 0x1
 	002ab1b4 pop op
 	002ab1bc sourceline 0x3bcd
 	002ab1c4 push op
 	002ab1cc mov ax,0x426
 	002ab1d8 farpush ax
 	002ab1e0 mov ax,0x397
 	002ab1ec farpush ax
 	002ab1f4 mov ax,0x0
 	002ab200 farpush ax
 	002ab208 mov ax,0x3
 	002ab214 farpush ax
 	002ab21c mov ax,0x0
 	002ab228 farpush ax
 	002ab230 mov mar,0x6b6f20
 	002ab23c mov ax,mar
 	002ab248 mov op,ax
 	002ab250 setfuncargs 0x5
 	002ab258 mov ax,0x536f20
 	002ab264 farcall ax
 	002ab26c farsubsp 0x5
 	002ab274 pop op
 	002ab27c sourceline 0x3bce
 	002ab284 mov ax,0x28
 	002ab290 farpush ax
 	002ab298 setfuncargs 0x1
 	002ab2a0 mov ax,0x426f20
 	002ab2ac farcall ax
 	002ab2b4 farsubsp 0x1
 	002ab2bc sourceline 0x3bcf
 	002ab2c4 push op
 	002ab2cc mov ax,0x2c7b13
 	002ab2d8 farpush ax
 	002ab2e0 mov mar,0x6b6f20
 	002ab2ec mov ax,mar
 	002ab2f8 mov op,ax
 	002ab300 setfuncargs 0x1
 	002ab308 mov ax,0x6f6f20
 	002ab314 farcall ax
 	002ab31c farsubsp 0x1
 	002ab324 pop op
 	002ab32c sourceline 0x3bd0
 	002ab334 mov ax,0x270f
 	002ab340 push ax
 	002ab348 mov ax,0x2
 	002ab354 assertlte ax,0x28
 	002ab360 mul ax,0x8
 	002ab36c mov cx,ax
 	002ab378 pop ax
 	002ab380 mov bx,ax
 	002ab38c mov mar,0x6fef20
 	002ab398 add mar,cx
 	002ab3a4 mov ax,mar
 	002ab3b0 push op
 	002ab3b8 mov op,ax
 	002ab3c0 farpush bx
 	002ab3c8 setfuncargs 0x1
 	002ab3d0 mov ax,0x796f20
 	002ab3dc farcall ax
 	002ab3e4 farsubsp 0x1
 	002ab3ec pop op
 	002ab3f4 sourceline 0x3bd1
 	002ab3fc push op
 	002ab404 mov ax,0x2
 	002ab410 farpush ax
 	002ab418 mov mar,0x736f20
 	002ab424 mov ax,mar
 	002ab430 mov op,ax
 	002ab438 setfuncargs 0x1
 	002ab440 mov ax,0x6d6f20
 	002ab44c farcall ax
 	002ab454 farsubsp 0x1
 	002ab45c pop op
 	002ab464 jz 0x002abf00
		002abf00: CONDITIONAL_JUMP
		002ab46c: FALL_THROUGH

	[002ab46c]
		002aa62c: FALL_THROUGH
 	002ab46c sourceline 0x3bd3
 	002ab474 push op
 	002ab47c mov ax,0x2c7bb6
 	002ab488 farpush ax
 	002ab490 mov mar,0x3cef20
 	002ab49c mov ax,mar
 	002ab4a8 mov op,ax
 	002ab4b0 setfuncargs 0x1
 	002ab4b8 mov ax,0x6f6f20
 	002ab4c4 farcall ax
 	002ab4cc farsubsp 0x1
 	002ab4d4 pop op
 	002ab4dc sourceline 0x3bd4
 	002ab4e4 push op
 	002ab4ec mov ax,0x2c7c2a
 	002ab4f8 farpush ax
 	002ab500 mov mar,0x6b6f20
 	002ab50c mov ax,mar
 	002ab518 mov op,ax
 	002ab520 setfuncargs 0x1
 	002ab528 mov ax,0x6f6f20
 	002ab534 farcall ax
 	002ab53c farsubsp 0x1
 	002ab544 pop op
 	002ab54c sourceline 0x3bd5
 	002ab554 push op
 	002ab55c mov ax,0x4d
 	002ab568 farpush ax
 	002ab570 mov mar,0x6b6f20
 	002ab57c mov ax,mar
 	002ab588 mov op,ax
 	002ab590 setfuncargs 0x1
 	002ab598 mov ax,0x51ef20
 	002ab5a4 farcall ax
 	002ab5ac farsubsp 0x1
 	002ab5b4 pop op
 	002ab5bc sourceline 0x3bd6
 	002ab5c4 mov ax,0x48
 	002ab5d0 mov bx,ax
 	002ab5dc mov mar,0x6b6f20
 	002ab5e8 mov ax,mar
 	002ab5f4 push op
 	002ab5fc mov op,ax
 	002ab604 farpush bx
 	002ab60c setfuncargs 0x1
 	002ab614 mov ax,0x70ef20
 	002ab620 farcall ax
 	002ab628 farsubsp 0x1
 	002ab630 pop op
 	002ab638 sourceline 0x3bd7
 	002ab640 mov ax,0x90
 	002ab64c mov bx,ax
 	002ab658 mov mar,0x6b6f20
 	002ab664 mov ax,mar
 	002ab670 push op
 	002ab678 mov op,ax
 	002ab680 farpush bx
 	002ab688 setfuncargs 0x1
 	002ab690 mov ax,0x526f20
 	002ab69c farcall ax
 	002ab6a4 farsubsp 0x1
 	002ab6ac pop op
 	002ab6b4 sourceline 0x3bd8
 	002ab6bc push op
 	002ab6c4 mov ax,0x426
 	002ab6d0 farpush ax
 	002ab6d8 mov ax,0x397
 	002ab6e4 farpush ax
 	002ab6ec mov ax,0x0
 	002ab6f8 farpush ax
 	002ab700 mov ax,0x3
 	002ab70c farpush ax
 	002ab714 mov ax,0x0
 	002ab720 farpush ax
 	002ab728 mov mar,0x6b6f20
 	002ab734 mov ax,mar
 	002ab740 mov op,ax
 	002ab748 setfuncargs 0x5
 	002ab750 mov ax,0x536f20
 	002ab75c farcall ax
 	002ab764 farsubsp 0x5
 	002ab76c pop op
 	002ab774 sourceline 0x3bd9
 	002ab77c mov ax,0xa
 	002ab788 farpush ax
 	002ab790 setfuncargs 0x1
 	002ab798 mov ax,0x426f20
 	002ab7a4 farcall ax
 	002ab7ac farsubsp 0x1
 	002ab7b4 sourceline 0x3bda
 	002ab7bc push op
 	002ab7c4 mov ax,0x427
 	002ab7d0 farpush ax
 	002ab7d8 mov ax,0x398
 	002ab7e4 farpush ax
 	002ab7ec mov ax,0x0
 	002ab7f8 farpush ax
 	002ab800 mov ax,0x3
 	002ab80c farpush ax
 	002ab814 mov ax,0x0
 	002ab820 farpush ax
 	002ab828 mov mar,0x3cef20
 	002ab834 mov ax,mar
 	002ab840 mov op,ax
 	002ab848 setfuncargs 0x5
 	002ab850 mov ax,0x536f20
 	002ab85c farcall ax
 	002ab864 farsubsp 0x5
 	002ab86c pop op
 	002ab874 sourceline 0x3bdb
 	002ab87c push op
 	002ab884 mov ax,0x426
 	002ab890 farpush ax
 	002ab898 mov ax,0x397
 	002ab8a4 farpush ax
 	002ab8ac mov ax,0x0
 	002ab8b8 farpush ax
 	002ab8c0 mov ax,0x3
 	002ab8cc farpush ax
 	002ab8d4 mov ax,0x1
 	002ab8e0 farpush ax
 	002ab8e8 mov mar,0x6b6f20
 	002ab8f4 mov ax,mar
 	002ab900 mov op,ax
 	002ab908 setfuncargs 0x5
 	002ab910 mov ax,0x536f20
 	002ab91c farcall ax
 	002ab924 farsubsp 0x5
 	002ab92c pop op
 	002ab934 sourceline 0x3bdc
 	002ab93c push op
 	002ab944 mov ax,0x2
 	002ab950 farpush ax
 	002ab958 mov mar,0x3cef20
 	002ab964 mov ax,mar
 	002ab970 mov op,ax
 	002ab978 setfuncargs 0x1
 	002ab980 mov ax,0x51ef20
 	002ab98c farcall ax
 	002ab994 farsubsp 0x1
 	002ab99c pop op
 	002ab9a4 sourceline 0x3bdd
 	002ab9ac mov ax,0x87
 	002ab9b8 mov bx,ax
 	002ab9c4 mov mar,0x3cef20
 	002ab9d0 mov ax,mar
 	002ab9dc push op
 	002ab9e4 mov op,ax
 	002ab9ec farpush bx
 	002ab9f4 setfuncargs 0x1
 	002ab9fc mov ax,0x526f20
 	002aba08 farcall ax
 	002aba10 farsubsp 0x1
 	002aba18 pop op
 	002aba20 sourceline 0x3bde
 	002aba28 mov ax,0x0
 	002aba34 mov bx,ax
 	002aba40 mov mar,0x3cef20
 	002aba4c mov ax,mar
 	002aba58 push op
 	002aba60 mov op,ax
 	002aba68 farpush bx
 	002aba70 setfuncargs 0x1
 	002aba78 mov ax,0x766f20
 	002aba84 farcall ax
 	002aba8c farsubsp 0x1
 	002aba94 pop op
 	002aba9c sourceline 0x3bdf
 	002abaa4 push op
 	002abaac mov ax,0x2c7c63
 	002abab8 farpush ax
 	002abac0 mov mar,0x3cef20
 	002abacc mov ax,mar
 	002abad8 mov op,ax
 	002abae0 setfuncargs 0x1
 	002abae8 mov ax,0x6f6f20
 	002abaf4 farcall ax
 	002abafc farsubsp 0x1
 	002abb04 pop op
 	002abb0c sourceline 0x3be0
 	002abb14 push op
 	002abb1c mov ax,0x2c7c7f
 	002abb28 farpush ax
 	002abb30 mov mar,0x6b6f20
 	002abb3c mov ax,mar
 	002abb48 mov op,ax
 	002abb50 setfuncargs 0x1
 	002abb58 mov ax,0x6f6f20
 	002abb64 farcall ax
 	002abb6c farsubsp 0x1
 	002abb74 pop op
 	002abb7c sourceline 0x3be1
 	002abb84 push op
 	002abb8c mov ax,0x36
 	002abb98 farpush ax
 	002abba0 mov mar,0x6b6f20
 	002abbac mov ax,mar
 	002abbb8 mov op,ax
 	002abbc0 setfuncargs 0x1
 	002abbc8 mov ax,0x51ef20
 	002abbd4 farcall ax
 	002abbdc farsubsp 0x1
 	002abbe4 pop op
 	002abbec sourceline 0x3be2
 	002abbf4 mov ax,0x44
 	002abc00 mov bx,ax
 	002abc0c mov mar,0x6b6f20
 	002abc18 mov ax,mar
 	002abc24 push op
 	002abc2c mov op,ax
 	002abc34 farpush bx
 	002abc3c setfuncargs 0x1
 	002abc44 mov ax,0x70ef20
 	002abc50 farcall ax
 	002abc58 farsubsp 0x1
 	002abc60 pop op
 	002abc68 sourceline 0x3be3
 	002abc70 mov ax,0x91
 	002abc7c mov bx,ax
 	002abc88 mov mar,0x6b6f20
 	002abc94 mov ax,mar
 	002abca0 push op
 	002abca8 mov op,ax
 	002abcb0 farpush bx
 	002abcb8 setfuncargs 0x1
 	002abcc0 mov ax,0x526f20
 	002abccc farcall ax
 	002abcd4 farsubsp 0x1
 	002abcdc pop op
 	002abce4 sourceline 0x3be4
 	002abcec push op
 	002abcf4 mov ax,0x426
 	002abd00 farpush ax
 	002abd08 mov ax,0x397
 	002abd14 farpush ax
 	002abd1c mov ax,0x0
 	002abd28 farpush ax
 	002abd30 mov ax,0x3
 	002abd3c farpush ax
 	002abd44 mov ax,0x0
 	002abd50 farpush ax
 	002abd58 mov mar,0x6b6f20
 	002abd64 mov ax,mar
 	002abd70 mov op,ax
 	002abd78 setfuncargs 0x5
 	002abd80 mov ax,0x536f20
 	002abd8c farcall ax
 	002abd94 farsubsp 0x5
 	002abd9c pop op
 	002abda4 sourceline 0x3be5
 	002abdac push op
 	002abdb4 mov ax,0x7cfe
 	002abdc0 farpush ax
 	002abdc8 mov mar,0x9c6f20
 	002abdd4 mov ax,mar
 	002abde0 farpush ax
 	002abde8 mov mar,0x3cef20
 	002abdf4 mov ax,mar
 	002abe00 mov op,ax
 	002abe08 setfuncargs 0x2
 	002abe10 mov ax,0x7e6f20
 	002abe1c farcall ax
 	002abe24 farsubsp 0x2
 	002abe2c pop op
 	002abe34 sourceline 0x3be6
 	002abe3c mov ax,0x1
 	002abe48 mov mar,0x73ef20
 	002abe54 memwrite4 ax
 	002abe5c sourceline 0x3be7
 	002abe64 mov ax,0x1
 	002abe70 mov bx,ax
 	002abe7c mov mar,0x3cef20
 	002abe88 mov ax,mar
 	002abe94 push op
 	002abe9c mov op,ax
 	002abea4 farpush bx
 	002abeac setfuncargs 0x1
 	002abeb4 mov ax,0x69ef20
 	002abec0 farcall ax
 	002abec8 farsubsp 0x1
 	002abed0 pop op
 	002abed8 sourceline 0x3be8
 	002abee0 mov ax,0x0
 	002abeec ret

	[002abf00]
		002aa62c: CONDITIONAL_JUMP
 	002abf00 sourceline 0x3bec
 	002abf08 push op
 	002abf10 mov ax,0x2c7c9f
 	002abf1c farpush ax
 	002abf24 mov mar,0x3cef20
 	002abf30 mov ax,mar
 	002abf3c mov op,ax
 	002abf44 setfuncargs 0x1
 	002abf4c mov ax,0x6f6f20
 	002abf58 farcall ax
 	002abf60 farsubsp 0x1
 	002abf68 pop op
 	002abf70 sourceline 0x3bed
 	002abf78 push op
 	002abf80 mov ax,0x2c7cbb
 	002abf8c farpush ax
 	002abf94 mov mar,0x6b6f20
 	002abfa0 mov ax,mar
 	002abfac mov op,ax
 	002abfb4 setfuncargs 0x1
 	002abfbc mov ax,0x6f6f20
 	002abfc8 farcall ax
 	002abfd0 farsubsp 0x1
 	002abfd8 pop op
 	002abfe0 sourceline 0x3bee
 	002abfe8 push op
 	002abff0 mov ax,0x2c7ce7
 	002abffc farpush ax
 	002ac004 mov mar,0x6b6f20
 	002ac010 mov ax,mar
 	002ac01c mov op,ax
 	002ac024 setfuncargs 0x1
 	002ac02c mov ax,0x6f6f20
 	002ac038 farcall ax
 	002ac040 farsubsp 0x1
 	002ac048 pop op
 	002ac050 sourceline 0x3bef
 	002ac058 push op
 	002ac060 mov ax,0x36
 	002ac06c farpush ax
 	002ac074 mov mar,0x6b6f20
 	002ac080 mov ax,mar
 	002ac08c mov op,ax
 	002ac094 setfuncargs 0x1
 	002ac09c mov ax,0x51ef20
 	002ac0a8 farcall ax
 	002ac0b0 farsubsp 0x1
 	002ac0b8 pop op
 	002ac0c0 sourceline 0x3bf0
 	002ac0c8 mov ax,0x44
 	002ac0d4 mov bx,ax
 	002ac0e0 mov mar,0x6b6f20
 	002ac0ec mov ax,mar
 	002ac0f8 push op
 	002ac100 mov op,ax
 	002ac108 farpush bx
 	002ac110 setfuncargs 0x1
 	002ac118 mov ax,0x70ef20
 	002ac124 farcall ax
 	002ac12c farsubsp 0x1
 	002ac134 pop op
 	002ac13c sourceline 0x3bf1
 	002ac144 mov ax,0x91
 	002ac150 mov bx,ax
 	002ac15c mov mar,0x6b6f20
 	002ac168 mov ax,mar
 	002ac174 push op
 	002ac17c mov op,ax
 	002ac184 farpush bx
 	002ac18c setfuncargs 0x1
 	002ac194 mov ax,0x526f20
 	002ac1a0 farcall ax
 	002ac1a8 farsubsp 0x1
 	002ac1b0 pop op
 	002ac1b8 sourceline 0x3bf2
 	002ac1c0 push op
 	002ac1c8 mov ax,0x426
 	002ac1d4 farpush ax
 	002ac1dc mov ax,0x397
 	002ac1e8 farpush ax
 	002ac1f0 mov ax,0x0
 	002ac1fc farpush ax
 	002ac204 mov ax,0x3
 	002ac210 farpush ax
 	002ac218 mov ax,0x0
 	002ac224 farpush ax
 	002ac22c mov mar,0x6b6f20
 	002ac238 mov ax,mar
 	002ac244 mov op,ax
 	002ac24c setfuncargs 0x5
 	002ac254 mov ax,0x536f20
 	002ac260 farcall ax
 	002ac268 farsubsp 0x5
 	002ac270 pop op
		002ac278: FALL_THROUGH

	[002ac278]
		002aa430: UNCONDITIONAL_JUMP
		002abf00: FALL_THROUGH
 	002ac278 sourceline 0x3bf5
 	002ac280 jmp 0x002ac448
		002ac448: UNCONDITIONAL_JUMP

	[002ac288]
		002aa2b4: CONDITIONAL_JUMP
 	002ac288 sourceline 0x3bf8
 	002ac290 push op
 	002ac298 mov ax,0x397
 	002ac2a4 farpush ax
 	002ac2ac mov ax,0xc7
 	002ac2b8 farpush ax
 	002ac2c0 mov ax,0x44
 	002ac2cc farpush ax
 	002ac2d4 mov mar,0x3cef20
 	002ac2e0 mov ax,mar
 	002ac2ec mov op,ax
 	002ac2f4 setfuncargs 0x3
 	002ac2fc mov ax,0x726f20
 	002ac308 farcall ax
 	002ac310 farsubsp 0x3
 	002ac318 pop op
 	002ac320 sourceline 0x3bf9
 	002ac328 mov ax,0x1
 	002ac334 mov bx,ax
 	002ac340 mov mar,0x3cef20
 	002ac34c mov ax,mar
 	002ac358 push op
 	002ac360 mov op,ax
 	002ac368 farpush bx
 	002ac370 setfuncargs 0x1
 	002ac378 mov ax,0x69ef20
 	002ac384 farcall ax
 	002ac38c farsubsp 0x1
 	002ac394 pop op
 	002ac39c sourceline 0x3bfa
 	002ac3a4 push op
 	002ac3ac mov ax,0x2c7d07
 	002ac3b8 farpush ax
 	002ac3c0 mov ax,0x138
 	002ac3cc farpush ax
 	002ac3d4 mov ax,0x92
 	002ac3e0 farpush ax
 	002ac3e8 mov ax,0x0
 	002ac3f4 farpush ax
 	002ac3fc mov mar,0x3cef20
 	002ac408 mov ax,mar
 	002ac414 mov op,ax
 	002ac41c setfuncargs 0x4
 	002ac424 mov ax,0x6aef20
 	002ac430 farcall ax
 	002ac438 farsubsp 0x4
 	002ac440 pop op
		002ac448: FALL_THROUGH

	[002ac448]
		002ac278: UNCONDITIONAL_JUMP
		002ac288: FALL_THROUGH
 	002ac448 sourceline 0x3bfc
 	002ac450 jmp 0x002adb34
		002adb34: UNCONDITIONAL_JUMP

	[002ac458]
		002aa208: CONDITIONAL_JUMP
 	002ac458 sourceline 0x3c00
 	002ac460 mov mar,0x3cef20
 	002ac46c mov ax,mar
 	002ac478 push op
 	002ac480 mov op,ax
 	002ac488 setfuncargs 0x0
 	002ac490 mov ax,0x89ef20
 	002ac49c farcall ax
 	002ac4a4 pop op
 	002ac4ac push ax
 	002ac4b4 mov mar,0x9c6f20
 	002ac4c0 mov ax,mar
 	002ac4cc pop bx
 	002ac4d4 cmpeq bx,ax
 	002ac4e0 mov ax,bx
 	002ac4ec jz 0x002ace2c
		002ace2c: CONDITIONAL_JUMP
		002ac4f4: FALL_THROUGH

	[002ac4f4]
		002ac458: FALL_THROUGH
 	002ac4f4 sourceline 0x3c02
 	002ac4fc mov mar,0x72ef20
 	002ac508 memread4 ax
 	002ac510 jz 0x002acc5c
		002acc5c: CONDITIONAL_JUMP
		002ac518: FALL_THROUGH

	[002ac518]
		002ac4f4: FALL_THROUGH
 	002ac518 sourceline 0x3c04
 	002ac520 mov ax,0x3
 	002ac52c mov bx,ax
 	002ac538 mov mar,0x3cef20
 	002ac544 mov ax,mar
 	002ac550 push op
 	002ac558 mov op,ax
 	002ac560 farpush bx
 	002ac568 setfuncargs 0x1
 	002ac570 mov ax,0x69ef20
 	002ac57c farcall ax
 	002ac584 farsubsp 0x1
 	002ac58c pop op
 	002ac594 sourceline 0x3c05
 	002ac59c setfuncargs 0x0
 	002ac5a4 mov ax,0x6def20
 	002ac5b0 farcall ax
 	002ac5b8 lnot ax
 	002ac5c0 jz 0x002ac61c
		002ac61c: CONDITIONAL_JUMP
		002ac5c8: FALL_THROUGH

	[002ac5c8]
		002ac518: FALL_THROUGH
 	002ac5c8 mov ax,0x87
 	002ac5d4 farpush ax
 	002ac5dc mov ax,0x4d
 	002ac5e8 farpush ax
 	002ac5f0 setfuncargs 0x2
 	002ac5f8 mov ax,0x6e6f20
 	002ac604 farcall ax
 	002ac60c farsubsp 0x2
 	002ac614 jmp 0x002acc4c
		002acc4c: UNCONDITIONAL_JUMP

	[002ac61c]
		002ac518: CONDITIONAL_JUMP
 	002ac61c sourceline 0x3c08
 	002ac624 push op
 	002ac62c mov ax,0x397
 	002ac638 farpush ax
 	002ac640 mov ax,0x0
 	002ac64c farpush ax
 	002ac654 mov mar,0x3cef20
 	002ac660 mov ax,mar
 	002ac66c mov op,ax
 	002ac674 setfuncargs 0x2
 	002ac67c mov ax,0x6eef20
 	002ac688 farcall ax
 	002ac690 farsubsp 0x2
 	002ac698 pop op
 	002ac6a0 sourceline 0x3c09
 	002ac6a8 push op
 	002ac6b0 mov ax,0x2c7d22
 	002ac6bc farpush ax
 	002ac6c4 mov mar,0x3cef20
 	002ac6d0 mov ax,mar
 	002ac6dc mov op,ax
 	002ac6e4 setfuncargs 0x1
 	002ac6ec mov ax,0x6f6f20
 	002ac6f8 farcall ax
 	002ac700 farsubsp 0x1
 	002ac708 pop op
 	002ac710 sourceline 0x3c0a
 	002ac718 push op
 	002ac720 mov ax,0x5
 	002ac72c farpush ax
 	002ac734 mov mar,0x3cef20
 	002ac740 mov ax,mar
 	002ac74c mov op,ax
 	002ac754 setfuncargs 0x1
 	002ac75c mov ax,0x51ef20
 	002ac768 farcall ax
 	002ac770 farsubsp 0x1
 	002ac778 pop op
 	002ac780 sourceline 0x3c0b
 	002ac788 mov ax,0x80
 	002ac794 mov bx,ax
 	002ac7a0 mov mar,0x3cef20
 	002ac7ac mov ax,mar
 	002ac7b8 push op
 	002ac7c0 mov op,ax
 	002ac7c8 farpush bx
 	002ac7d0 setfuncargs 0x1
 	002ac7d8 mov ax,0x526f20
 	002ac7e4 farcall ax
 	002ac7ec farsubsp 0x1
 	002ac7f4 pop op
 	002ac7fc sourceline 0x3c0c
 	002ac804 push op
 	002ac80c mov ax,0x426
 	002ac818 farpush ax
 	002ac820 mov ax,0x397
 	002ac82c farpush ax
 	002ac834 mov ax,0x0
 	002ac840 farpush ax
 	002ac848 mov ax,0x3
 	002ac854 farpush ax
 	002ac85c mov ax,0x0
 	002ac868 farpush ax
 	002ac870 mov mar,0x3cef20
 	002ac87c mov ax,mar
 	002ac888 mov op,ax
 	002ac890 setfuncargs 0x5
 	002ac898 mov ax,0x536f20
 	002ac8a4 farcall ax
 	002ac8ac farsubsp 0x5
 	002ac8b4 pop op
 	002ac8bc sourceline 0x3c0d
 	002ac8c4 push op
 	002ac8cc mov ax,0x427
 	002ac8d8 farpush ax
 	002ac8e0 mov ax,0x397
 	002ac8ec farpush ax
 	002ac8f4 mov ax,0x0
 	002ac900 farpush ax
 	002ac908 mov ax,0x3
 	002ac914 farpush ax
 	002ac91c mov ax,0x0
 	002ac928 farpush ax
 	002ac930 mov mar,0x3cef20
 	002ac93c mov ax,mar
 	002ac948 mov op,ax
 	002ac950 setfuncargs 0x5
 	002ac958 mov ax,0x536f20
 	002ac964 farcall ax
 	002ac96c farsubsp 0x5
 	002ac974 pop op
 	002ac97c sourceline 0x3c0e
 	002ac984 push op
 	002ac98c mov ax,0x2
 	002ac998 farpush ax
 	002ac9a0 mov mar,0x3cef20
 	002ac9ac mov ax,mar
 	002ac9b8 mov op,ax
 	002ac9c0 setfuncargs 0x1
 	002ac9c8 mov ax,0x51ef20
 	002ac9d4 farcall ax
 	002ac9dc farsubsp 0x1
 	002ac9e4 pop op
 	002ac9ec sourceline 0x3c0f
 	002ac9f4 mov ax,0x87
 	002aca00 mov bx,ax
 	002aca0c mov mar,0x3cef20
 	002aca18 mov ax,mar
 	002aca24 push op
 	002aca2c mov op,ax
 	002aca34 farpush bx
 	002aca3c setfuncargs 0x1
 	002aca44 mov ax,0x526f20
 	002aca50 farcall ax
 	002aca58 farsubsp 0x1
 	002aca60 pop op
 	002aca68 sourceline 0x3c10
 	002aca70 mov ax,0x0
 	002aca7c mov bx,ax
 	002aca88 mov mar,0x3cef20
 	002aca94 mov ax,mar
 	002acaa0 push op
 	002acaa8 mov op,ax
 	002acab0 farpush bx
 	002acab8 setfuncargs 0x1
 	002acac0 mov ax,0x766f20
 	002acacc farcall ax
 	002acad4 farsubsp 0x1
 	002acadc pop op
 	002acae4 sourceline 0x3c11
 	002acaec push op
 	002acaf4 mov ax,0x2c7d60
 	002acb00 farpush ax
 	002acb08 mov mar,0x6b6f20
 	002acb14 mov ax,mar
 	002acb20 mov op,ax
 	002acb28 setfuncargs 0x1
 	002acb30 mov ax,0x6f6f20
 	002acb3c farcall ax
 	002acb44 farsubsp 0x1
 	002acb4c pop op
 	002acb54 sourceline 0x3c12
 	002acb5c push op
 	002acb64 mov mar,0x9c6f20
 	002acb70 mov ax,mar
 	002acb7c farpush ax
 	002acb84 mov mar,0x3cef20
 	002acb90 mov ax,mar
 	002acb9c mov op,ax
 	002acba4 setfuncargs 0x1
 	002acbac mov ax,0x7d6f20
 	002acbb8 farcall ax
 	002acbc0 farsubsp 0x1
 	002acbc8 pop op
 	002acbd0 sourceline 0x3c13
 	002acbd8 mov ax,0x1
 	002acbe4 mov bx,ax
 	002acbf0 mov mar,0x3cef20
 	002acbfc mov ax,mar
 	002acc08 push op
 	002acc10 mov op,ax
 	002acc18 farpush bx
 	002acc20 setfuncargs 0x1
 	002acc28 mov ax,0x69ef20
 	002acc34 farcall ax
 	002acc3c farsubsp 0x1
 	002acc44 pop op
		002acc4c: FALL_THROUGH

	[002acc4c]
		002ac5c8: UNCONDITIONAL_JUMP
		002ac61c: FALL_THROUGH
 	002acc4c sourceline 0x3c15
 	002acc54 jmp 0x002ace1c
		002ace1c: UNCONDITIONAL_JUMP

	[002acc5c]
		002ac4f4: CONDITIONAL_JUMP
 	002acc5c sourceline 0x3c19
 	002acc64 push op
 	002acc6c mov ax,0x397
 	002acc78 farpush ax
 	002acc80 mov ax,0xc7
 	002acc8c farpush ax
 	002acc94 mov ax,0x44
 	002acca0 farpush ax
 	002acca8 mov mar,0x3cef20
 	002accb4 mov ax,mar
 	002accc0 mov op,ax
 	002accc8 setfuncargs 0x3
 	002accd0 mov ax,0x726f20
 	002accdc farcall ax
 	002acce4 farsubsp 0x3
 	002accec pop op
 	002accf4 sourceline 0x3c1a
 	002accfc mov ax,0x1
 	002acd08 mov bx,ax
 	002acd14 mov mar,0x3cef20
 	002acd20 mov ax,mar
 	002acd2c push op
 	002acd34 mov op,ax
 	002acd3c farpush bx
 	002acd44 setfuncargs 0x1
 	002acd4c mov ax,0x69ef20
 	002acd58 farcall ax
 	002acd60 farsubsp 0x1
 	002acd68 pop op
 	002acd70 sourceline 0x3c1b
 	002acd78 push op
 	002acd80 mov ax,0x2c7d76
 	002acd8c farpush ax
 	002acd94 mov ax,0x138
 	002acda0 farpush ax
 	002acda8 mov ax,0x92
 	002acdb4 farpush ax
 	002acdbc mov ax,0x0
 	002acdc8 farpush ax
 	002acdd0 mov mar,0x3cef20
 	002acddc mov ax,mar
 	002acde8 mov op,ax
 	002acdf0 setfuncargs 0x4
 	002acdf8 mov ax,0x6aef20
 	002ace04 farcall ax
 	002ace0c farsubsp 0x4
 	002ace14 pop op
		002ace1c: FALL_THROUGH

	[002ace1c]
		002acc4c: UNCONDITIONAL_JUMP
		002acc5c: FALL_THROUGH
 	002ace1c sourceline 0x3c1d
 	002ace24 jmp 0x002adb34
		002adb34: UNCONDITIONAL_JUMP

	[002ace2c]
		002ac458: CONDITIONAL_JUMP
 	002ace2c sourceline 0x3c1f
 	002ace34 mov mar,0x3cef20
 	002ace40 mov ax,mar
 	002ace4c push op
 	002ace54 mov op,ax
 	002ace5c setfuncargs 0x0
 	002ace64 mov ax,0x89ef20
 	002ace70 farcall ax
 	002ace78 pop op
 	002ace80 push ax
 	002ace88 mov mar,0x8aef20
 	002ace94 mov ax,mar
 	002acea0 pop bx
 	002acea8 cmpeq bx,ax
 	002aceb4 mov ax,bx
 	002acec0 jz 0x002ad098
		002ad098: CONDITIONAL_JUMP
		002acec8: FALL_THROUGH

	[002acec8]
		002ace2c: FALL_THROUGH
 	002acec8 sourceline 0x3c21
 	002aced0 push op
 	002aced8 mov ax,0x397
 	002acee4 farpush ax
 	002aceec mov ax,0xc7
 	002acef8 farpush ax
 	002acf00 mov ax,0x44
 	002acf0c farpush ax
 	002acf14 mov mar,0x3cef20
 	002acf20 mov ax,mar
 	002acf2c mov op,ax
 	002acf34 setfuncargs 0x3
 	002acf3c mov ax,0x726f20
 	002acf48 farcall ax
 	002acf50 farsubsp 0x3
 	002acf58 pop op
 	002acf60 sourceline 0x3c22
 	002acf68 mov ax,0x1
 	002acf74 mov bx,ax
 	002acf80 mov mar,0x3cef20
 	002acf8c mov ax,mar
 	002acf98 push op
 	002acfa0 mov op,ax
 	002acfa8 farpush bx
 	002acfb0 setfuncargs 0x1
 	002acfb8 mov ax,0x69ef20
 	002acfc4 farcall ax
 	002acfcc farsubsp 0x1
 	002acfd4 pop op
 	002acfdc sourceline 0x3c23
 	002acfe4 push op
 	002acfec mov ax,0x2c7dad
 	002acff8 farpush ax
 	002ad000 mov ax,0x138
 	002ad00c farpush ax
 	002ad014 mov ax,0x92
 	002ad020 farpush ax
 	002ad028 mov ax,0x0
 	002ad034 farpush ax
 	002ad03c mov mar,0x3cef20
 	002ad048 mov ax,mar
 	002ad054 mov op,ax
 	002ad05c setfuncargs 0x4
 	002ad064 mov ax,0x6aef20
 	002ad070 farcall ax
 	002ad078 farsubsp 0x4
 	002ad080 pop op
 	002ad088 sourceline 0x3c24
 	002ad090 jmp 0x002adb34
		002adb34: UNCONDITIONAL_JUMP

	[002ad098]
		002ace2c: CONDITIONAL_JUMP
 	002ad098 sourceline 0x3c27
 	002ad0a0 mov mar,0x3cef20
 	002ad0ac mov ax,mar
 	002ad0b8 push op
 	002ad0c0 mov op,ax
 	002ad0c8 setfuncargs 0x0
 	002ad0d0 mov ax,0x89ef20
 	002ad0dc farcall ax
 	002ad0e4 pop op
 	002ad0ec push ax
 	002ad0f4 mov mar,0x8d6f20
 	002ad100 mov ax,mar
 	002ad10c pop bx
 	002ad114 cmpeq bx,ax
 	002ad120 mov ax,bx
 	002ad12c jnz 0x002ad1e8
		002ad1e8: CONDITIONAL_JUMP
		002ad134: FALL_THROUGH

	[002ad134]
		002ad098: FALL_THROUGH
 	002ad134 push ax
 	002ad13c mov mar,0x3cef20
 	002ad148 mov ax,mar
 	002ad154 push op
 	002ad15c mov op,ax
 	002ad164 setfuncargs 0x0
 	002ad16c mov ax,0x89ef20
 	002ad178 farcall ax
 	002ad180 pop op
 	002ad188 push ax
 	002ad190 mov mar,0x8b6f20
 	002ad19c mov ax,mar
 	002ad1a8 pop bx
 	002ad1b0 cmpeq bx,ax
 	002ad1bc mov ax,bx
 	002ad1c8 pop bx
 	002ad1d0 lor bx,ax
 	002ad1dc mov ax,bx
		002ad1e8: FALL_THROUGH

	[002ad1e8]
		002ad098: CONDITIONAL_JUMP
		002ad134: FALL_THROUGH
 	002ad1e8 jnz 0x002ad2a4
		002ad2a4: CONDITIONAL_JUMP
		002ad1f0: FALL_THROUGH

	[002ad1f0]
		002ad1e8: FALL_THROUGH
 	002ad1f0 push ax
 	002ad1f8 mov mar,0x3cef20
 	002ad204 mov ax,mar
 	002ad210 push op
 	002ad218 mov op,ax
 	002ad220 setfuncargs 0x0
 	002ad228 mov ax,0x89ef20
 	002ad234 farcall ax
 	002ad23c pop op
 	002ad244 push ax
 	002ad24c mov mar,0x8bef20
 	002ad258 mov ax,mar
 	002ad264 pop bx
 	002ad26c cmpeq bx,ax
 	002ad278 mov ax,bx
 	002ad284 pop bx
 	002ad28c lor bx,ax
 	002ad298 mov ax,bx
		002ad2a4: FALL_THROUGH

	[002ad2a4]
		002ad1e8: CONDITIONAL_JUMP
		002ad1f0: FALL_THROUGH
 	002ad2a4 jnz 0x002ad360
		002ad360: CONDITIONAL_JUMP
		002ad2ac: FALL_THROUGH

	[002ad2ac]
		002ad2a4: FALL_THROUGH
 	002ad2ac push ax
 	002ad2b4 mov mar,0x3cef20
 	002ad2c0 mov ax,mar
 	002ad2cc push op
 	002ad2d4 mov op,ax
 	002ad2dc setfuncargs 0x0
 	002ad2e4 mov ax,0x89ef20
 	002ad2f0 farcall ax
 	002ad2f8 pop op
 	002ad300 push ax
 	002ad308 mov mar,0x8c6f20
 	002ad314 mov ax,mar
 	002ad320 pop bx
 	002ad328 cmpeq bx,ax
 	002ad334 mov ax,bx
 	002ad340 pop bx
 	002ad348 lor bx,ax
 	002ad354 mov ax,bx
		002ad360: FALL_THROUGH

	[002ad360]
		002ad2a4: CONDITIONAL_JUMP
		002ad2ac: FALL_THROUGH
 	002ad360 jnz 0x002ad41c
		002ad41c: CONDITIONAL_JUMP
		002ad368: FALL_THROUGH

	[002ad368]
		002ad360: FALL_THROUGH
 	002ad368 push ax
 	002ad370 mov mar,0x3cef20
 	002ad37c mov ax,mar
 	002ad388 push op
 	002ad390 mov op,ax
 	002ad398 setfuncargs 0x0
 	002ad3a0 mov ax,0x89ef20
 	002ad3ac farcall ax
 	002ad3b4 pop op
 	002ad3bc push ax
 	002ad3c4 mov mar,0x7def20
 	002ad3d0 mov ax,mar
 	002ad3dc pop bx
 	002ad3e4 cmpeq bx,ax
 	002ad3f0 mov ax,bx
 	002ad3fc pop bx
 	002ad404 lor bx,ax
 	002ad410 mov ax,bx
		002ad41c: FALL_THROUGH

	[002ad41c]
		002ad360: CONDITIONAL_JUMP
		002ad368: FALL_THROUGH
 	002ad41c jnz 0x002ad4d8
		002ad4d8: CONDITIONAL_JUMP
		002ad424: FALL_THROUGH

	[002ad424]
		002ad41c: FALL_THROUGH
 	002ad424 push ax
 	002ad42c mov mar,0x3cef20
 	002ad438 mov ax,mar
 	002ad444 push op
 	002ad44c mov op,ax
 	002ad454 setfuncargs 0x0
 	002ad45c mov ax,0x89ef20
 	002ad468 farcall ax
 	002ad470 pop op
 	002ad478 push ax
 	002ad480 mov mar,0x8def20
 	002ad48c mov ax,mar
 	002ad498 pop bx
 	002ad4a0 cmpeq bx,ax
 	002ad4ac mov ax,bx
 	002ad4b8 pop bx
 	002ad4c0 lor bx,ax
 	002ad4cc mov ax,bx
		002ad4d8: FALL_THROUGH

	[002ad4d8]
		002ad41c: CONDITIONAL_JUMP
		002ad424: FALL_THROUGH
 	002ad4d8 jnz 0x002ad594
		002ad594: CONDITIONAL_JUMP
		002ad4e0: FALL_THROUGH

	[002ad4e0]
		002ad4d8: FALL_THROUGH
 	002ad4e0 push ax
 	002ad4e8 mov mar,0x3cef20
 	002ad4f4 mov ax,mar
 	002ad500 push op
 	002ad508 mov op,ax
 	002ad510 setfuncargs 0x0
 	002ad518 mov ax,0x89ef20
 	002ad524 farcall ax
 	002ad52c pop op
 	002ad534 push ax
 	002ad53c mov mar,0x9cef20
 	002ad548 mov ax,mar
 	002ad554 pop bx
 	002ad55c cmpeq bx,ax
 	002ad568 mov ax,bx
 	002ad574 pop bx
 	002ad57c lor bx,ax
 	002ad588 mov ax,bx
		002ad594: FALL_THROUGH

	[002ad594]
		002ad4d8: CONDITIONAL_JUMP
		002ad4e0: FALL_THROUGH
 	002ad594 jnz 0x002ad650
		002ad650: CONDITIONAL_JUMP
		002ad59c: FALL_THROUGH

	[002ad59c]
		002ad594: FALL_THROUGH
 	002ad59c push ax
 	002ad5a4 mov mar,0x3cef20
 	002ad5b0 mov ax,mar
 	002ad5bc push op
 	002ad5c4 mov op,ax
 	002ad5cc setfuncargs 0x0
 	002ad5d4 mov ax,0x89ef20
 	002ad5e0 farcall ax
 	002ad5e8 pop op
 	002ad5f0 push ax
 	002ad5f8 mov mar,0x8e6f20
 	002ad604 mov ax,mar
 	002ad610 pop bx
 	002ad618 cmpeq bx,ax
 	002ad624 mov ax,bx
 	002ad630 pop bx
 	002ad638 lor bx,ax
 	002ad644 mov ax,bx
		002ad650: FALL_THROUGH

	[002ad650]
		002ad594: CONDITIONAL_JUMP
		002ad59c: FALL_THROUGH
 	002ad650 jnz 0x002ad70c
		002ad70c: CONDITIONAL_JUMP
		002ad658: FALL_THROUGH

	[002ad658]
		002ad650: FALL_THROUGH
 	002ad658 push ax
 	002ad660 mov mar,0x3cef20
 	002ad66c mov ax,mar
 	002ad678 push op
 	002ad680 mov op,ax
 	002ad688 setfuncargs 0x0
 	002ad690 mov ax,0x89ef20
 	002ad69c farcall ax
 	002ad6a4 pop op
 	002ad6ac push ax
 	002ad6b4 mov mar,0x8cef20
 	002ad6c0 mov ax,mar
 	002ad6cc pop bx
 	002ad6d4 cmpeq bx,ax
 	002ad6e0 mov ax,bx
 	002ad6ec pop bx
 	002ad6f4 lor bx,ax
 	002ad700 mov ax,bx
		002ad70c: FALL_THROUGH

	[002ad70c]
		002ad650: CONDITIONAL_JUMP
		002ad658: FALL_THROUGH
 	002ad70c jz 0x002adb34
		002adb34: CONDITIONAL_JUMP
		002ad714: FALL_THROUGH

	[002ad714]
		002ad70c: FALL_THROUGH
 	002ad714 sourceline 0x3c2b
 	002ad71c mov mar,0x6b6f20
 	002ad728 mov ax,mar
 	002ad734 push op
 	002ad73c mov op,ax
 	002ad744 setfuncargs 0x0
 	002ad74c mov ax,0x516f20
 	002ad758 farcall ax
 	002ad760 pop op
 	002ad768 push ax
 	002ad770 mov ax,0x36
 	002ad77c pop bx
 	002ad784 cmpeq bx,ax
 	002ad790 mov ax,bx
 	002ad79c jz 0x002ad974
		002ad974: CONDITIONAL_JUMP
		002ad7a4: FALL_THROUGH

	[002ad7a4]
		002ad714: FALL_THROUGH
 	002ad7a4 sourceline 0x3c2d
 	002ad7ac push op
 	002ad7b4 mov ax,0x397
 	002ad7c0 farpush ax
 	002ad7c8 mov ax,0xc7
 	002ad7d4 farpush ax
 	002ad7dc mov ax,0x44
 	002ad7e8 farpush ax
 	002ad7f0 mov mar,0x3cef20
 	002ad7fc mov ax,mar
 	002ad808 mov op,ax
 	002ad810 setfuncargs 0x3
 	002ad818 mov ax,0x726f20
 	002ad824 farcall ax
 	002ad82c farsubsp 0x3
 	002ad834 pop op
 	002ad83c sourceline 0x3c2e
 	002ad844 mov ax,0x1
 	002ad850 mov bx,ax
 	002ad85c mov mar,0x3cef20
 	002ad868 mov ax,mar
 	002ad874 push op
 	002ad87c mov op,ax
 	002ad884 farpush bx
 	002ad88c setfuncargs 0x1
 	002ad894 mov ax,0x69ef20
 	002ad8a0 farcall ax
 	002ad8a8 farsubsp 0x1
 	002ad8b0 pop op
 	002ad8b8 sourceline 0x3c2f
 	002ad8c0 push op
 	002ad8c8 mov ax,0x2c7e06
 	002ad8d4 farpush ax
 	002ad8dc mov ax,0x138
 	002ad8e8 farpush ax
 	002ad8f0 mov ax,0x92
 	002ad8fc farpush ax
 	002ad904 mov ax,0x0
 	002ad910 farpush ax
 	002ad918 mov mar,0x3cef20
 	002ad924 mov ax,mar
 	002ad930 mov op,ax
 	002ad938 setfuncargs 0x4
 	002ad940 mov ax,0x6aef20
 	002ad94c farcall ax
 	002ad954 farsubsp 0x4
 	002ad95c pop op
 	002ad964 sourceline 0x3c30
 	002ad96c jmp 0x002adb34
		002adb34: UNCONDITIONAL_JUMP

	[002ad974]
		002ad714: CONDITIONAL_JUMP
 	002ad974 sourceline 0x3c33
 	002ad97c push op
 	002ad984 mov ax,0x397
 	002ad990 farpush ax
 	002ad998 mov ax,0xc7
 	002ad9a4 farpush ax
 	002ad9ac mov ax,0x44
 	002ad9b8 farpush ax
 	002ad9c0 mov mar,0x3cef20
 	002ad9cc mov ax,mar
 	002ad9d8 mov op,ax
 	002ad9e0 setfuncargs 0x3
 	002ad9e8 mov ax,0x726f20
 	002ad9f4 farcall ax
 	002ad9fc farsubsp 0x3
 	002ada04 pop op
 	002ada0c sourceline 0x3c34
 	002ada14 mov ax,0x1
 	002ada20 mov bx,ax
 	002ada2c mov mar,0x3cef20
 	002ada38 mov ax,mar
 	002ada44 push op
 	002ada4c mov op,ax
 	002ada54 farpush bx
 	002ada5c setfuncargs 0x1
 	002ada64 mov ax,0x69ef20
 	002ada70 farcall ax
 	002ada78 farsubsp 0x1
 	002ada80 pop op
 	002ada88 sourceline 0x3c35
 	002ada90 push op
 	002ada98 mov ax,0x2c7e2b
 	002adaa4 farpush ax
 	002adaac mov ax,0x138
 	002adab8 farpush ax
 	002adac0 mov ax,0x92
 	002adacc farpush ax
 	002adad4 mov ax,0x0
 	002adae0 farpush ax
 	002adae8 mov mar,0x3cef20
 	002adaf4 mov ax,mar
 	002adb00 mov op,ax
 	002adb08 setfuncargs 0x4
 	002adb10 mov ax,0x6aef20
 	002adb1c farcall ax
 	002adb24 farsubsp 0x4
 	002adb2c pop op
		002adb34: FALL_THROUGH

	[002adb34]
		002ac448: UNCONDITIONAL_JUMP
		002ace1c: UNCONDITIONAL_JUMP
		002acec8: UNCONDITIONAL_JUMP
		002ad70c: CONDITIONAL_JUMP
		002ad7a4: UNCONDITIONAL_JUMP
		002ad974: FALL_THROUGH
 	002adb34 sourceline 0x3c38
 	002adb3c mov ax,0x0
 	002adb48 ret

cLib_Interact$0:
	[002adb4c]
 	002adb4c sourceline 0x3c3b
 	002adb54 thisaddr
 	002adb5c sourceline 0x3c3c
*	002adb64 mov mar,0x72ef20
 	002adb70 memread4 ax
 	002adb78 lnot ax
 	002adb80 jz 0x002ae250
		002ae250: CONDITIONAL_JUMP
		002adb88: FALL_THROUGH

	[002adb88]
		002adb4c: FALL_THROUGH
 	002adb88 sourceline 0x3c3e
 	002adb90 push op
 	002adb98 mov ax,0x1
 	002adba4 farpush ax
 	002adbac mov mar,0x736f20
 	002adbb8 mov ax,mar
 	002adbc4 mov op,ax
 	002adbcc setfuncargs 0x1
 	002adbd4 mov ax,0x6d6f20
 	002adbe0 farcall ax
 	002adbe8 farsubsp 0x1
 	002adbf0 pop op
 	002adbf8 lnot ax
 	002adc00 jnz 0x002adca0
		002adca0: CONDITIONAL_JUMP
		002adc08: FALL_THROUGH

	[002adc08]
		002adb88: FALL_THROUGH
 	002adc08 push ax
 	002adc10 push op
 	002adc18 mov ax,0x2
 	002adc24 farpush ax
 	002adc2c mov mar,0x736f20
 	002adc38 mov ax,mar
 	002adc44 mov op,ax
 	002adc4c setfuncargs 0x1
 	002adc54 mov ax,0x6d6f20
 	002adc60 farcall ax
 	002adc68 farsubsp 0x1
 	002adc70 pop op
 	002adc78 lnot ax
 	002adc80 pop bx
 	002adc88 lor bx,ax
 	002adc94 mov ax,bx
		002adca0: FALL_THROUGH

	[002adca0]
		002adb88: CONDITIONAL_JUMP
		002adc08: FALL_THROUGH
 	002adca0 jnz 0x002add40
		002add40: CONDITIONAL_JUMP
		002adca8: FALL_THROUGH

	[002adca8]
		002adca0: FALL_THROUGH
 	002adca8 push ax
 	002adcb0 push op
 	002adcb8 mov ax,0x3
 	002adcc4 farpush ax
 	002adccc mov mar,0x736f20
 	002adcd8 mov ax,mar
 	002adce4 mov op,ax
 	002adcec setfuncargs 0x1
 	002adcf4 mov ax,0x6d6f20
 	002add00 farcall ax
 	002add08 farsubsp 0x1
 	002add10 pop op
 	002add18 lnot ax
 	002add20 pop bx
 	002add28 lor bx,ax
 	002add34 mov ax,bx
		002add40: FALL_THROUGH

	[002add40]
		002adca0: CONDITIONAL_JUMP
		002adca8: FALL_THROUGH
 	002add40 jnz 0x002adde0
		002adde0: CONDITIONAL_JUMP
		002add48: FALL_THROUGH

	[002add48]
		002add40: FALL_THROUGH
 	002add48 push ax
 	002add50 push op
 	002add58 mov ax,0x4
 	002add64 farpush ax
 	002add6c mov mar,0x736f20
 	002add78 mov ax,mar
 	002add84 mov op,ax
 	002add8c setfuncargs 0x1
 	002add94 mov ax,0x6d6f20
 	002adda0 farcall ax
 	002adda8 farsubsp 0x1
 	002addb0 pop op
 	002addb8 lnot ax
 	002addc0 pop bx
 	002addc8 lor bx,ax
 	002addd4 mov ax,bx
		002adde0: FALL_THROUGH

	[002adde0]
		002add40: CONDITIONAL_JUMP
		002add48: FALL_THROUGH
 	002adde0 jz 0x002ae080
		002ae080: CONDITIONAL_JUMP
		002adde8: FALL_THROUGH

	[002adde8]
		002adde0: FALL_THROUGH
 	002adde8 sourceline 0x3c40
 	002addf0 mov ax,0x3
 	002addfc mov bx,ax
 	002ade08 mov mar,0x3cef20
 	002ade14 mov ax,mar
 	002ade20 push op
 	002ade28 mov op,ax
 	002ade30 farpush bx
 	002ade38 setfuncargs 0x1
 	002ade40 mov ax,0x69ef20
 	002ade4c farcall ax
 	002ade54 farsubsp 0x1
 	002ade5c pop op
 	002ade64 sourceline 0x3c41
 	002ade6c setfuncargs 0x0
 	002ade74 mov ax,0x6def20
 	002ade80 farcall ax
 	002ade88 lnot ax
 	002ade90 jz 0x002adeec
		002adeec: CONDITIONAL_JUMP
		002ade98: FALL_THROUGH

	[002ade98]
		002adde8: FALL_THROUGH
 	002ade98 mov ax,0x87
 	002adea4 farpush ax
 	002adeac mov ax,0x71
 	002adeb8 farpush ax
 	002adec0 setfuncargs 0x2
 	002adec8 mov ax,0x6e6f20
 	002aded4 farcall ax
 	002adedc farsubsp 0x2
 	002adee4 jmp 0x002ae070
		002ae070: UNCONDITIONAL_JUMP

	[002adeec]
		002adde8: CONDITIONAL_JUMP
 	002adeec sourceline 0x3c44
 	002adef4 push op
 	002adefc mov ax,0x131
 	002adf08 farpush ax
 	002adf10 mov ax,0x397
 	002adf1c farpush ax
 	002adf24 mov ax,0x80
 	002adf30 farpush ax
 	002adf38 mov ax,0x73
 	002adf44 farpush ax
 	002adf4c mov mar,0x3cef20
 	002adf58 mov ax,mar
 	002adf64 mov op,ax
 	002adf6c setfuncargs 0x4
 	002adf74 mov ax,0xb2ef20
 	002adf80 farcall ax
 	002adf88 farsubsp 0x4
 	002adf90 pop op
 	002adf98 sourceline 0x3c45
 	002adfa0 push op
 	002adfa8 mov ax,0x397
 	002adfb4 farpush ax
 	002adfbc mov ax,0x5
 	002adfc8 farpush ax
 	002adfd0 mov mar,0x3cef20
 	002adfdc mov ax,mar
 	002adfe8 mov op,ax
 	002adff0 setfuncargs 0x2
 	002adff8 mov ax,0x6eef20
 	002ae004 farcall ax
 	002ae00c farsubsp 0x2
 	002ae014 pop op
 	002ae01c sourceline 0x3c46
 	002ae024 push op
 	002ae02c mov mar,0x736f20
 	002ae038 mov ax,mar
 	002ae044 mov op,ax
 	002ae04c setfuncargs 0x0
 	002ae054 mov ax,0x71ef20
 	002ae060 farcall ax
 	002ae068 pop op
		002ae070: FALL_THROUGH

	[002ae070]
		002ade98: UNCONDITIONAL_JUMP
		002adeec: FALL_THROUGH
 	002ae070 sourceline 0x3c48
 	002ae078 jmp 0x002ae240
		002ae240: UNCONDITIONAL_JUMP

	[002ae080]
		002adde0: CONDITIONAL_JUMP
 	002ae080 sourceline 0x3c4b
 	002ae088 push op
 	002ae090 mov ax,0x397
 	002ae09c farpush ax
 	002ae0a4 mov ax,0x64
 	002ae0b0 farpush ax
 	002ae0b8 mov ax,0x85
 	002ae0c4 farpush ax
 	002ae0cc mov mar,0x3cef20
 	002ae0d8 mov ax,mar
 	002ae0e4 mov op,ax
 	002ae0ec setfuncargs 0x3
 	002ae0f4 mov ax,0x726f20
 	002ae100 farcall ax
 	002ae108 farsubsp 0x3
 	002ae110 pop op
 	002ae118 sourceline 0x3c4c
 	002ae120 mov ax,0x1
 	002ae12c mov bx,ax
 	002ae138 mov mar,0x3cef20
 	002ae144 mov ax,mar
 	002ae150 push op
 	002ae158 mov op,ax
 	002ae160 farpush bx
 	002ae168 setfuncargs 0x1
 	002ae170 mov ax,0x69ef20
 	002ae17c farcall ax
 	002ae184 farsubsp 0x1
 	002ae18c pop op
 	002ae194 sourceline 0x3c4d
 	002ae19c push op
 	002ae1a4 mov ax,0x2c7e5c
 	002ae1b0 farpush ax
 	002ae1b8 mov ax,0x138
 	002ae1c4 farpush ax
 	002ae1cc mov ax,0x92
 	002ae1d8 farpush ax
 	002ae1e0 mov ax,0x0
 	002ae1ec farpush ax
 	002ae1f4 mov mar,0x3cef20
 	002ae200 mov ax,mar
 	002ae20c mov op,ax
 	002ae214 setfuncargs 0x4
 	002ae21c mov ax,0x6aef20
 	002ae228 farcall ax
 	002ae230 farsubsp 0x4
 	002ae238 pop op
		002ae240: FALL_THROUGH

	[002ae240]
		002ae070: UNCONDITIONAL_JUMP
		002ae080: FALL_THROUGH
 	002ae240 sourceline 0x3c4f
 	002ae248 jmp 0x002ae60c
		002ae60c: UNCONDITIONAL_JUMP

	[002ae250]
		002adb4c: CONDITIONAL_JUMP
 	002ae250 sourceline 0x3c53
 	002ae258 mov mar,0x82ef20
 	002ae264 memread4 ax
 	002ae26c lnot ax
 	002ae274 jz 0x002ae44c
		002ae44c: CONDITIONAL_JUMP
		002ae27c: FALL_THROUGH

	[002ae27c]
		002ae250: FALL_THROUGH
 	002ae27c sourceline 0x3c55
 	002ae284 push op
 	002ae28c mov ax,0x397
 	002ae298 farpush ax
 	002ae2a0 mov ax,0x64
 	002ae2ac farpush ax
 	002ae2b4 mov ax,0x85
 	002ae2c0 farpush ax
 	002ae2c8 mov mar,0x3cef20
 	002ae2d4 mov ax,mar
 	002ae2e0 mov op,ax
 	002ae2e8 setfuncargs 0x3
 	002ae2f0 mov ax,0x726f20
 	002ae2fc farcall ax
 	002ae304 farsubsp 0x3
 	002ae30c pop op
 	002ae314 sourceline 0x3c56
 	002ae31c mov ax,0x1
 	002ae328 mov bx,ax
 	002ae334 mov mar,0x3cef20
 	002ae340 mov ax,mar
 	002ae34c push op
 	002ae354 mov op,ax
 	002ae35c farpush bx
 	002ae364 setfuncargs 0x1
 	002ae36c mov ax,0x69ef20
 	002ae378 farcall ax
 	002ae380 farsubsp 0x1
 	002ae388 pop op
 	002ae390 sourceline 0x3c57
 	002ae398 push op
 	002ae3a0 mov ax,0x2c7eb9
 	002ae3ac farpush ax
 	002ae3b4 mov ax,0x138
 	002ae3c0 farpush ax
 	002ae3c8 mov ax,0x92
 	002ae3d4 farpush ax
 	002ae3dc mov ax,0x0
 	002ae3e8 farpush ax
 	002ae3f0 mov mar,0x3cef20
 	002ae3fc mov ax,mar
 	002ae408 mov op,ax
 	002ae410 setfuncargs 0x4
 	002ae418 mov ax,0x6aef20
 	002ae424 farcall ax
 	002ae42c farsubsp 0x4
 	002ae434 pop op
 	002ae43c sourceline 0x3c58
 	002ae444 jmp 0x002ae60c
		002ae60c: UNCONDITIONAL_JUMP

	[002ae44c]
		002ae250: CONDITIONAL_JUMP
 	002ae44c sourceline 0x3c5b
 	002ae454 push op
 	002ae45c mov ax,0x397
 	002ae468 farpush ax
 	002ae470 mov ax,0x64
 	002ae47c farpush ax
 	002ae484 mov ax,0x85
 	002ae490 farpush ax
 	002ae498 mov mar,0x3cef20
 	002ae4a4 mov ax,mar
 	002ae4b0 mov op,ax
 	002ae4b8 setfuncargs 0x3
 	002ae4c0 mov ax,0x726f20
 	002ae4cc farcall ax
 	002ae4d4 farsubsp 0x3
 	002ae4dc pop op
 	002ae4e4 sourceline 0x3c5c
 	002ae4ec mov ax,0x1
 	002ae4f8 mov bx,ax
 	002ae504 mov mar,0x3cef20
 	002ae510 mov ax,mar
 	002ae51c push op
 	002ae524 mov op,ax
 	002ae52c farpush bx
 	002ae534 setfuncargs 0x1
 	002ae53c mov ax,0x69ef20
 	002ae548 farcall ax
 	002ae550 farsubsp 0x1
 	002ae558 pop op
 	002ae560 sourceline 0x3c5d
 	002ae568 push op
 	002ae570 mov ax,0x2c7edf
 	002ae57c farpush ax
 	002ae584 mov ax,0x138
 	002ae590 farpush ax
 	002ae598 mov ax,0x92
 	002ae5a4 farpush ax
 	002ae5ac mov ax,0x0
 	002ae5b8 farpush ax
 	002ae5c0 mov mar,0x3cef20
 	002ae5cc mov ax,mar
 	002ae5d8 mov op,ax
 	002ae5e0 setfuncargs 0x4
 	002ae5e8 mov ax,0x6aef20
 	002ae5f4 farcall ax
 	002ae5fc farsubsp 0x4
 	002ae604 pop op
		002ae60c: FALL_THROUGH

	[002ae60c]
		002ae240: UNCONDITIONAL_JUMP
		002ae27c: UNCONDITIONAL_JUMP
		002ae44c: FALL_THROUGH
 	002ae60c sourceline 0x3c60
 	002ae614 mov ax,0x0
 	002ae620 ret

cLib_Look$0:
	[002ae624]
 	002ae624 sourceline 0x3c63
 	002ae62c thisaddr
 	002ae634 sourceline 0x3c64
*	002ae63c mov mar,0x74ef20
 	002ae648 memread4 ax
 	002ae650 lnot ax
 	002ae658 jz 0x002ae6f8
		002ae6f8: CONDITIONAL_JUMP
		002ae660: FALL_THROUGH

	[002ae660]
		002ae624: FALL_THROUGH
 	002ae660 sourceline 0x3c66
 	002ae668 push op
 	002ae670 mov ax,0x397
 	002ae67c farpush ax
 	002ae684 mov ax,0x64
 	002ae690 farpush ax
 	002ae698 mov ax,0x85
 	002ae6a4 farpush ax
 	002ae6ac mov mar,0x3cef20
 	002ae6b8 mov ax,mar
 	002ae6c4 mov op,ax
 	002ae6cc setfuncargs 0x3
 	002ae6d4 mov ax,0x726f20
 	002ae6e0 farcall ax
 	002ae6e8 farsubsp 0x3
 	002ae6f0 pop op
		002ae6f8: FALL_THROUGH

	[002ae6f8]
		002ae624: CONDITIONAL_JUMP
		002ae660: FALL_THROUGH
 	002ae6f8 sourceline 0x3c68
 	002ae700 mov ax,0x1
 	002ae70c mov bx,ax
 	002ae718 mov mar,0x3cef20
 	002ae724 mov ax,mar
 	002ae730 push op
 	002ae738 mov op,ax
 	002ae740 farpush bx
 	002ae748 setfuncargs 0x1
 	002ae750 mov ax,0x69ef20
 	002ae75c farcall ax
 	002ae764 farsubsp 0x1
 	002ae76c pop op
 	002ae774 sourceline 0x3c69
 	002ae77c push op
 	002ae784 mov ax,0x2c7f11
 	002ae790 farpush ax
 	002ae798 mov ax,0x138
 	002ae7a4 farpush ax
 	002ae7ac mov ax,0x92
 	002ae7b8 farpush ax
 	002ae7c0 mov ax,0x0
 	002ae7cc farpush ax
 	002ae7d4 mov mar,0x3cef20
 	002ae7e0 mov ax,mar
 	002ae7ec mov op,ax
 	002ae7f4 setfuncargs 0x4
 	002ae7fc mov ax,0x6aef20
 	002ae808 farcall ax
 	002ae810 farsubsp 0x4
 	002ae818 pop op
 	002ae820 sourceline 0x3c6a
 	002ae828 mov ax,0x0
 	002ae834 ret

cLib_UseInv$0:
	[002ae838]
 	002ae838 sourceline 0x3c6d
 	002ae840 thisaddr
 	002ae848 sourceline 0x3c6e
*	002ae850 mov mar,0x74ef20
 	002ae85c memread4 ax
 	002ae864 jz 0x002ae994
		002ae994: CONDITIONAL_JUMP
		002ae86c: FALL_THROUGH

	[002ae86c]
		002ae838: FALL_THROUGH
 	002ae86c sourceline 0x3c70
 	002ae874 mov ax,0x1
 	002ae880 mov bx,ax
 	002ae88c mov mar,0x3cef20
 	002ae898 mov ax,mar
 	002ae8a4 push op
 	002ae8ac mov op,ax
 	002ae8b4 farpush bx
 	002ae8bc setfuncargs 0x1
 	002ae8c4 mov ax,0x69ef20
 	002ae8d0 farcall ax
 	002ae8d8 farsubsp 0x1
 	002ae8e0 pop op
 	002ae8e8 sourceline 0x3c71
 	002ae8f0 push op
 	002ae8f8 mov ax,0x2c7f84
 	002ae904 farpush ax
 	002ae90c mov ax,0x138
 	002ae918 farpush ax
 	002ae920 mov ax,0x92
 	002ae92c farpush ax
 	002ae934 mov ax,0x0
 	002ae940 farpush ax
 	002ae948 mov mar,0x3cef20
 	002ae954 mov ax,mar
 	002ae960 mov op,ax
 	002ae968 setfuncargs 0x4
 	002ae970 mov ax,0x6aef20
 	002ae97c farcall ax
 	002ae984 farsubsp 0x4
 	002ae98c pop op
		002ae994: FALL_THROUGH

	[002ae994]
		002ae838: CONDITIONAL_JUMP
		002ae86c: FALL_THROUGH
 	002ae994 sourceline 0x3c74
 	002ae99c mov mar,0x3cef20
 	002ae9a8 mov ax,mar
 	002ae9b4 push op
 	002ae9bc mov op,ax
 	002ae9c4 setfuncargs 0x0
 	002ae9cc mov ax,0x89ef20
 	002ae9d8 farcall ax
 	002ae9e0 pop op
 	002ae9e8 push ax
 	002ae9f0 mov mar,0x9c6f20
 	002ae9fc mov ax,mar
 	002aea08 pop bx
 	002aea10 cmpeq bx,ax
 	002aea1c mov ax,bx
 	002aea28 jz 0x002af7b0
		002af7b0: CONDITIONAL_JUMP
		002aea30: FALL_THROUGH

	[002aea30]
		002ae994: FALL_THROUGH
 	002aea30 sourceline 0x3c76
 	002aea38 mov mar,0x72ef20
 	002aea44 memread4 ax
 	002aea4c lnot ax
 	002aea54 jz 0x002af5e0
		002af5e0: CONDITIONAL_JUMP
		002aea5c: FALL_THROUGH

	[002aea5c]
		002aea30: FALL_THROUGH
 	002aea5c sourceline 0x3c78
 	002aea64 setfuncargs 0x0
 	002aea6c mov ax,0x6def20
 	002aea78 farcall ax
 	002aea80 lnot ax
 	002aea88 jz 0x002aeae4
		002aeae4: CONDITIONAL_JUMP
		002aea90: FALL_THROUGH

	[002aea90]
		002aea5c: FALL_THROUGH
 	002aea90 mov ax,0x87
 	002aea9c farpush ax
 	002aeaa4 mov ax,0x71
 	002aeab0 farpush ax
 	002aeab8 setfuncargs 0x2
 	002aeac0 mov ax,0x6e6f20
 	002aeacc farcall ax
 	002aead4 farsubsp 0x2
 	002aeadc jmp 0x002af5d0
		002af5d0: UNCONDITIONAL_JUMP

	[002aeae4]
		002aea5c: CONDITIONAL_JUMP
 	002aeae4 sourceline 0x3c7b
 	002aeaec mov ax,0x3
 	002aeaf8 mov bx,ax
 	002aeb04 mov mar,0x3cef20
 	002aeb10 mov ax,mar
 	002aeb1c push op
 	002aeb24 mov op,ax
 	002aeb2c farpush bx
 	002aeb34 setfuncargs 0x1
 	002aeb3c mov ax,0x69ef20
 	002aeb48 farcall ax
 	002aeb50 farsubsp 0x1
 	002aeb58 pop op
 	002aeb60 sourceline 0x3c7c
 	002aeb68 push op
 	002aeb70 mov ax,0x397
 	002aeb7c farpush ax
 	002aeb84 mov ax,0x5
 	002aeb90 farpush ax
 	002aeb98 mov mar,0x3cef20
 	002aeba4 mov ax,mar
 	002aebb0 mov op,ax
 	002aebb8 setfuncargs 0x2
 	002aebc0 mov ax,0x6eef20
 	002aebcc farcall ax
 	002aebd4 farsubsp 0x2
 	002aebdc pop op
 	002aebe4 sourceline 0x3c7d
 	002aebec push op
 	002aebf4 mov ax,0x2c7f93
 	002aec00 farpush ax
 	002aec08 mov mar,0x3cef20
 	002aec14 mov ax,mar
 	002aec20 mov op,ax
 	002aec28 setfuncargs 0x1
 	002aec30 mov ax,0x6f6f20
 	002aec3c farcall ax
 	002aec44 farsubsp 0x1
 	002aec4c pop op
 	002aec54 sourceline 0x3c7e
 	002aec5c push op
 	002aec64 mov ax,0x2c7fc7
 	002aec70 farpush ax
 	002aec78 mov mar,0x126ef20
 	002aec84 mov ax,mar
 	002aec90 mov op,ax
 	002aec98 setfuncargs 0x1
 	002aeca0 mov ax,0x6f6f20
 	002aecac farcall ax
 	002aecb4 farsubsp 0x1
 	002aecbc pop op
 	002aecc4 sourceline 0x3c7f
 	002aeccc push op
 	002aecd4 mov ax,0xf
 	002aece0 farpush ax
 	002aece8 mov mar,0x3cef20
 	002aecf4 mov ax,mar
 	002aed00 mov op,ax
 	002aed08 setfuncargs 0x1
 	002aed10 mov ax,0x51ef20
 	002aed1c farcall ax
 	002aed24 farsubsp 0x1
 	002aed2c pop op
 	002aed34 sourceline 0x3c80
 	002aed3c mov ax,0x77
 	002aed48 mov bx,ax
 	002aed54 mov mar,0x3cef20
 	002aed60 mov ax,mar
 	002aed6c push op
 	002aed74 mov op,ax
 	002aed7c farpush bx
 	002aed84 setfuncargs 0x1
 	002aed8c mov ax,0x70ef20
 	002aed98 farcall ax
 	002aeda0 farsubsp 0x1
 	002aeda8 pop op
 	002aedb0 sourceline 0x3c81
 	002aedb8 mov ax,0x81
 	002aedc4 mov bx,ax
 	002aedd0 mov mar,0x3cef20
 	002aeddc mov ax,mar
 	002aede8 push op
 	002aedf0 mov op,ax
 	002aedf8 farpush bx
 	002aee00 setfuncargs 0x1
 	002aee08 mov ax,0x526f20
 	002aee14 farcall ax
 	002aee1c farsubsp 0x1
 	002aee24 pop op
 	002aee2c sourceline 0x3c82
 	002aee34 push op
 	002aee3c mov ax,0x426
 	002aee48 farpush ax
 	002aee50 mov ax,0x397
 	002aee5c farpush ax
 	002aee64 mov ax,0x0
 	002aee70 farpush ax
 	002aee78 mov ax,0x3
 	002aee84 farpush ax
 	002aee8c mov ax,0x0
 	002aee98 farpush ax
 	002aeea0 mov mar,0x3cef20
 	002aeeac mov ax,mar
 	002aeeb8 mov op,ax
 	002aeec0 setfuncargs 0x5
 	002aeec8 mov ax,0x536f20
 	002aeed4 farcall ax
 	002aeedc farsubsp 0x5
 	002aeee4 pop op
 	002aeeec sourceline 0x3c83
 	002aeef4 mov ax,0x23
 	002aef00 farpush ax
 	002aef08 setfuncargs 0x1
 	002aef10 mov ax,0x426f20
 	002aef1c farcall ax
 	002aef24 farsubsp 0x1
 	002aef2c sourceline 0x3c84
 	002aef34 push op
 	002aef3c mov ax,0x427
 	002aef48 farpush ax
 	002aef50 mov ax,0x397
 	002aef5c farpush ax
 	002aef64 mov ax,0x0
 	002aef70 farpush ax
 	002aef78 mov ax,0x3
 	002aef84 farpush ax
 	002aef8c mov ax,0x0
 	002aef98 farpush ax
 	002aefa0 mov mar,0x3cef20
 	002aefac mov ax,mar
 	002aefb8 mov op,ax
 	002aefc0 setfuncargs 0x5
 	002aefc8 mov ax,0x536f20
 	002aefd4 farcall ax
 	002aefdc farsubsp 0x5
 	002aefe4 pop op
 	002aefec sourceline 0x3c85
 	002aeff4 push op
 	002aeffc mov ax,0x2
 	002af008 farpush ax
 	002af010 mov mar,0x3cef20
 	002af01c mov ax,mar
 	002af028 mov op,ax
 	002af030 setfuncargs 0x1
 	002af038 mov ax,0x51ef20
 	002af044 farcall ax
 	002af04c farsubsp 0x1
 	002af054 pop op
 	002af05c sourceline 0x3c86
 	002af064 mov ax,0x71
 	002af070 mov bx,ax
 	002af07c mov mar,0x3cef20
 	002af088 mov ax,mar
 	002af094 push op
 	002af09c mov op,ax
 	002af0a4 farpush bx
 	002af0ac setfuncargs 0x1
 	002af0b4 mov ax,0x70ef20
 	002af0c0 farcall ax
 	002af0c8 farsubsp 0x1
 	002af0d0 pop op
 	002af0d8 sourceline 0x3c87
 	002af0e0 mov ax,0x87
 	002af0ec mov bx,ax
 	002af0f8 mov mar,0x3cef20
 	002af104 mov ax,mar
 	002af110 push op
 	002af118 mov op,ax
 	002af120 farpush bx
 	002af128 setfuncargs 0x1
 	002af130 mov ax,0x526f20
 	002af13c farcall ax
 	002af144 farsubsp 0x1
 	002af14c pop op
 	002af154 sourceline 0x3c88
 	002af15c mov ax,0x5
 	002af168 mov bx,ax
 	002af174 mov mar,0x3cef20
 	002af180 mov ax,mar
 	002af18c push op
 	002af194 mov op,ax
 	002af19c farpush bx
 	002af1a4 setfuncargs 0x1
 	002af1ac mov ax,0x766f20
 	002af1b8 farcall ax
 	002af1c0 farsubsp 0x1
 	002af1c8 pop op
 	002af1d0 sourceline 0x3c89
 	002af1d8 mov ax,0xa
 	002af1e4 farpush ax
 	002af1ec setfuncargs 0x1
 	002af1f4 mov ax,0x426f20
 	002af200 farcall ax
 	002af208 farsubsp 0x1
 	002af210 sourceline 0x3c8a
 	002af218 push op
 	002af220 mov ax,0x2c7fe8
 	002af22c farpush ax
 	002af234 mov mar,0x126ef20
 	002af240 mov ax,mar
 	002af24c mov op,ax
 	002af254 setfuncargs 0x1
 	002af25c mov ax,0x6f6f20
 	002af268 farcall ax
 	002af270 farsubsp 0x1
 	002af278 pop op
 	002af280 sourceline 0x3c8b
 	002af288 push op
 	002af290 mov ax,0x2c8027
 	002af29c farpush ax
 	002af2a4 mov mar,0x3cef20
 	002af2b0 mov ax,mar
 	002af2bc mov op,ax
 	002af2c4 setfuncargs 0x1
 	002af2cc mov ax,0x6f6f20
 	002af2d8 farcall ax
 	002af2e0 farsubsp 0x1
 	002af2e8 pop op
 	002af2f0 sourceline 0x3c8c
 	002af2f8 push op
 	002af300 mov ax,0x2c8062
 	002af30c farpush ax
 	002af314 mov mar,0x126ef20
 	002af320 mov ax,mar
 	002af32c mov op,ax
 	002af334 setfuncargs 0x1
 	002af33c mov ax,0x6f6f20
 	002af348 farcall ax
 	002af350 farsubsp 0x1
 	002af358 pop op
 	002af360 sourceline 0x3c8d
 	002af368 push op
 	002af370 mov ax,0x2c80a1
 	002af37c farpush ax
 	002af384 mov mar,0x6b6f20
 	002af390 mov ax,mar
 	002af39c mov op,ax
 	002af3a4 setfuncargs 0x1
 	002af3ac mov ax,0x6f6f20
 	002af3b8 farcall ax
 	002af3c0 farsubsp 0x1
 	002af3c8 pop op
 	002af3d0 sourceline 0x3c8e
 	002af3d8 push op
 	002af3e0 mov ax,0x2c80df
 	002af3ec farpush ax
 	002af3f4 mov mar,0x126ef20
 	002af400 mov ax,mar
 	002af40c mov op,ax
 	002af414 setfuncargs 0x1
 	002af41c mov ax,0x6f6f20
 	002af428 farcall ax
 	002af430 farsubsp 0x1
 	002af438 pop op
 	002af440 sourceline 0x3c8f
 	002af448 push op
 	002af450 mov ax,0x2c811e
 	002af45c farpush ax
 	002af464 mov mar,0x3cef20
 	002af470 mov ax,mar
 	002af47c mov op,ax
 	002af484 setfuncargs 0x1
 	002af48c mov ax,0x6f6f20
 	002af498 farcall ax
 	002af4a0 farsubsp 0x1
 	002af4a8 pop op
 	002af4b0 sourceline 0x3c90
 	002af4b8 mov ax,0x1
 	002af4c4 mov mar,0x72ef20
 	002af4d0 memwrite4 ax
 	002af4d8 sourceline 0x3c91
 	002af4e0 mov ax,0x0
 	002af4ec mov bx,ax
 	002af4f8 mov mar,0x3cef20
 	002af504 mov ax,mar
 	002af510 push op
 	002af518 mov op,ax
 	002af520 farpush bx
 	002af528 setfuncargs 0x1
 	002af530 mov ax,0x436f20
 	002af53c farcall ax
 	002af544 farsubsp 0x1
 	002af54c pop op
 	002af554 sourceline 0x3c92
 	002af55c mov ax,0x1
 	002af568 mov bx,ax
 	002af574 mov mar,0x3cef20
 	002af580 mov ax,mar
 	002af58c push op
 	002af594 mov op,ax
 	002af59c farpush bx
 	002af5a4 setfuncargs 0x1
 	002af5ac mov ax,0x69ef20
 	002af5b8 farcall ax
 	002af5c0 farsubsp 0x1
 	002af5c8 pop op
		002af5d0: FALL_THROUGH

	[002af5d0]
		002aea90: UNCONDITIONAL_JUMP
		002aeae4: FALL_THROUGH
 	002af5d0 sourceline 0x3c94
 	002af5d8 jmp 0x002af7a0
		002af7a0: UNCONDITIONAL_JUMP

	[002af5e0]
		002aea30: CONDITIONAL_JUMP
 	002af5e0 sourceline 0x3c97
 	002af5e8 push op
 	002af5f0 mov ax,0x397
 	002af5fc farpush ax
 	002af604 mov ax,0x64
 	002af610 farpush ax
 	002af618 mov ax,0x85
 	002af624 farpush ax
 	002af62c mov mar,0x3cef20
 	002af638 mov ax,mar
 	002af644 mov op,ax
 	002af64c setfuncargs 0x3
 	002af654 mov ax,0x726f20
 	002af660 farcall ax
 	002af668 farsubsp 0x3
 	002af670 pop op
 	002af678 sourceline 0x3c98
 	002af680 mov ax,0x1
 	002af68c mov bx,ax
 	002af698 mov mar,0x3cef20
 	002af6a4 mov ax,mar
 	002af6b0 push op
 	002af6b8 mov op,ax
 	002af6c0 farpush bx
 	002af6c8 setfuncargs 0x1
 	002af6d0 mov ax,0x69ef20
 	002af6dc farcall ax
 	002af6e4 farsubsp 0x1
 	002af6ec pop op
 	002af6f4 sourceline 0x3c99
 	002af6fc push op
 	002af704 mov ax,0x2c8138
 	002af710 farpush ax
 	002af718 mov ax,0x138
 	002af724 farpush ax
 	002af72c mov ax,0x92
 	002af738 farpush ax
 	002af740 mov ax,0x0
 	002af74c farpush ax
 	002af754 mov mar,0x3cef20
 	002af760 mov ax,mar
 	002af76c mov op,ax
 	002af774 setfuncargs 0x4
 	002af77c mov ax,0x6aef20
 	002af788 farcall ax
 	002af790 farsubsp 0x4
 	002af798 pop op
		002af7a0: FALL_THROUGH

	[002af7a0]
		002af5d0: UNCONDITIONAL_JUMP
		002af5e0: FALL_THROUGH
 	002af7a0 sourceline 0x3c9b
 	002af7a8 jmp 0x002b555c
		002b555c: UNCONDITIONAL_JUMP

	[002af7b0]
		002ae994: CONDITIONAL_JUMP
 	002af7b0 sourceline 0x3c9f
 	002af7b8 mov mar,0x3cef20
 	002af7c4 mov ax,mar
 	002af7d0 push op
 	002af7d8 mov op,ax
 	002af7e0 setfuncargs 0x0
 	002af7e8 mov ax,0x89ef20
 	002af7f4 farcall ax
 	002af7fc pop op
 	002af804 push ax
 	002af80c mov mar,0x97ef20
 	002af818 mov ax,mar
 	002af824 pop bx
 	002af82c cmpeq bx,ax
 	002af838 mov ax,bx
 	002af844 jz 0x002b0528
		002b0528: CONDITIONAL_JUMP
		002af84c: FALL_THROUGH

	[002af84c]
		002af7b0: FALL_THROUGH
 	002af84c sourceline 0x3ca1
 	002af854 mov mar,0x82ef20
 	002af860 memread4 ax
 	002af868 lnot ax
 	002af870 jz 0x002b0358
		002b0358: CONDITIONAL_JUMP
		002af878: FALL_THROUGH

	[002af878]
		002af84c: FALL_THROUGH
 	002af878 sourceline 0x3ca3
 	002af880 setfuncargs 0x0
 	002af888 mov ax,0x6def20
 	002af894 farcall ax
 	002af89c lnot ax
 	002af8a4 jz 0x002af900
		002af900: CONDITIONAL_JUMP
		002af8ac: FALL_THROUGH

	[002af8ac]
		002af878: FALL_THROUGH
 	002af8ac mov ax,0x87
 	002af8b8 farpush ax
 	002af8c0 mov ax,0x71
 	002af8cc farpush ax
 	002af8d4 setfuncargs 0x2
 	002af8dc mov ax,0x6e6f20
 	002af8e8 farcall ax
 	002af8f0 farsubsp 0x2
 	002af8f8 jmp 0x002b0348
		002b0348: UNCONDITIONAL_JUMP

	[002af900]
		002af878: CONDITIONAL_JUMP
 	002af900 sourceline 0x3ca6
 	002af908 mov ax,0x0
 	002af914 mov bx,ax
 	002af920 mov mar,0x3cef20
 	002af92c mov ax,mar
 	002af938 push op
 	002af940 mov op,ax
 	002af948 farpush bx
 	002af950 setfuncargs 0x1
 	002af958 mov ax,0x436f20
 	002af964 farcall ax
 	002af96c farsubsp 0x1
 	002af974 pop op
 	002af97c sourceline 0x3ca7
 	002af984 mov ax,0x3
 	002af990 mov bx,ax
 	002af99c mov mar,0x3cef20
 	002af9a8 mov ax,mar
 	002af9b4 push op
 	002af9bc mov op,ax
 	002af9c4 farpush bx
 	002af9cc setfuncargs 0x1
 	002af9d4 mov ax,0x69ef20
 	002af9e0 farcall ax
 	002af9e8 farsubsp 0x1
 	002af9f0 pop op
 	002af9f8 sourceline 0x3ca8
 	002afa00 push op
 	002afa08 mov ax,0x397
 	002afa14 farpush ax
 	002afa1c mov ax,0x5
 	002afa28 farpush ax
 	002afa30 mov mar,0x3cef20
 	002afa3c mov ax,mar
 	002afa48 mov op,ax
 	002afa50 setfuncargs 0x2
 	002afa58 mov ax,0x6eef20
 	002afa64 farcall ax
 	002afa6c farsubsp 0x2
 	002afa74 pop op
 	002afa7c sourceline 0x3ca9
 	002afa84 push op
 	002afa8c mov ax,0x2c8167
 	002afa98 farpush ax
 	002afaa0 mov mar,0x3cef20
 	002afaac mov ax,mar
 	002afab8 mov op,ax
 	002afac0 setfuncargs 0x1
 	002afac8 mov ax,0x6f6f20
 	002afad4 farcall ax
 	002afadc farsubsp 0x1
 	002afae4 pop op
 	002afaec sourceline 0x3caa
 	002afaf4 push op
 	002afafc mov ax,0xf
 	002afb08 farpush ax
 	002afb10 mov mar,0x3cef20
 	002afb1c mov ax,mar
 	002afb28 mov op,ax
 	002afb30 setfuncargs 0x1
 	002afb38 mov ax,0x51ef20
 	002afb44 farcall ax
 	002afb4c farsubsp 0x1
 	002afb54 pop op
 	002afb5c sourceline 0x3cab
 	002afb64 mov ax,0x77
 	002afb70 mov bx,ax
 	002afb7c mov mar,0x3cef20
 	002afb88 mov ax,mar
 	002afb94 push op
 	002afb9c mov op,ax
 	002afba4 farpush bx
 	002afbac setfuncargs 0x1
 	002afbb4 mov ax,0x70ef20
 	002afbc0 farcall ax
 	002afbc8 farsubsp 0x1
 	002afbd0 pop op
 	002afbd8 sourceline 0x3cac
 	002afbe0 mov ax,0x81
 	002afbec mov bx,ax
 	002afbf8 mov mar,0x3cef20
 	002afc04 mov ax,mar
 	002afc10 push op
 	002afc18 mov op,ax
 	002afc20 farpush bx
 	002afc28 setfuncargs 0x1
 	002afc30 mov ax,0x526f20
 	002afc3c farcall ax
 	002afc44 farsubsp 0x1
 	002afc4c pop op
 	002afc54 sourceline 0x3cad
 	002afc5c push op
 	002afc64 mov ax,0x426
 	002afc70 farpush ax
 	002afc78 mov ax,0x397
 	002afc84 farpush ax
 	002afc8c mov ax,0x0
 	002afc98 farpush ax
 	002afca0 mov ax,0x3
 	002afcac farpush ax
 	002afcb4 mov ax,0x0
 	002afcc0 farpush ax
 	002afcc8 mov mar,0x3cef20
 	002afcd4 mov ax,mar
 	002afce0 mov op,ax
 	002afce8 setfuncargs 0x5
 	002afcf0 mov ax,0x536f20
 	002afcfc farcall ax
 	002afd04 farsubsp 0x5
 	002afd0c pop op
 	002afd14 sourceline 0x3cae
 	002afd1c mov ax,0x23
 	002afd28 farpush ax
 	002afd30 setfuncargs 0x1
 	002afd38 mov ax,0x426f20
 	002afd44 farcall ax
 	002afd4c farsubsp 0x1
 	002afd54 sourceline 0x3caf
 	002afd5c push op
 	002afd64 mov ax,0x2c81b9
 	002afd70 farpush ax
 	002afd78 mov mar,0x126ef20
 	002afd84 mov ax,mar
 	002afd90 mov op,ax
 	002afd98 setfuncargs 0x1
 	002afda0 mov ax,0x6f6f20
 	002afdac farcall ax
 	002afdb4 farsubsp 0x1
 	002afdbc pop op
 	002afdc4 sourceline 0x3cb0
 	002afdcc push op
 	002afdd4 mov ax,0x2c8233
 	002afde0 farpush ax
 	002afde8 mov mar,0x3cef20
 	002afdf4 mov ax,mar
 	002afe00 mov op,ax
 	002afe08 setfuncargs 0x1
 	002afe10 mov ax,0x6f6f20
 	002afe1c farcall ax
 	002afe24 farsubsp 0x1
 	002afe2c pop op
 	002afe34 sourceline 0x3cb1
 	002afe3c push op
 	002afe44 mov ax,0x2c8274
 	002afe50 farpush ax
 	002afe58 mov mar,0x126ef20
 	002afe64 mov ax,mar
 	002afe70 mov op,ax
 	002afe78 setfuncargs 0x1
 	002afe80 mov ax,0x6f6f20
 	002afe8c farcall ax
 	002afe94 farsubsp 0x1
 	002afe9c pop op
 	002afea4 sourceline 0x3cb2
 	002afeac push op
 	002afeb4 mov ax,0x427
 	002afec0 farpush ax
 	002afec8 mov ax,0x397
 	002afed4 farpush ax
 	002afedc mov ax,0x0
 	002afee8 farpush ax
 	002afef0 mov ax,0x3
 	002afefc farpush ax
 	002aff04 mov ax,0x0
 	002aff10 farpush ax
 	002aff18 mov mar,0x3cef20
 	002aff24 mov ax,mar
 	002aff30 mov op,ax
 	002aff38 setfuncargs 0x5
 	002aff40 mov ax,0x536f20
 	002aff4c farcall ax
 	002aff54 farsubsp 0x5
 	002aff5c pop op
 	002aff64 sourceline 0x3cb3
 	002aff6c push op
 	002aff74 mov ax,0x2
 	002aff80 farpush ax
 	002aff88 mov mar,0x3cef20
 	002aff94 mov ax,mar
 	002affa0 mov op,ax
 	002affa8 setfuncargs 0x1
 	002affb0 mov ax,0x51ef20
 	002affbc farcall ax
 	002affc4 farsubsp 0x1
 	002affcc pop op
 	002affd4 sourceline 0x3cb4
 	002affdc mov ax,0x71
 	002affe8 mov bx,ax
 	002afff4 mov mar,0x3cef20
 	002b0000 mov ax,mar
 	002b000c push op
 	002b0014 mov op,ax
 	002b001c farpush bx
 	002b0024 setfuncargs 0x1
 	002b002c mov ax,0x70ef20
 	002b0038 farcall ax
 	002b0040 farsubsp 0x1
 	002b0048 pop op
 	002b0050 sourceline 0x3cb5
 	002b0058 mov ax,0x87
 	002b0064 mov bx,ax
 	002b0070 mov mar,0x3cef20
 	002b007c mov ax,mar
 	002b0088 push op
 	002b0090 mov op,ax
 	002b0098 farpush bx
 	002b00a0 setfuncargs 0x1
 	002b00a8 mov ax,0x526f20
 	002b00b4 farcall ax
 	002b00bc farsubsp 0x1
 	002b00c4 pop op
 	002b00cc sourceline 0x3cb6
 	002b00d4 mov ax,0x5
 	002b00e0 mov bx,ax
 	002b00ec mov mar,0x3cef20
 	002b00f8 mov ax,mar
 	002b0104 push op
 	002b010c mov op,ax
 	002b0114 farpush bx
 	002b011c setfuncargs 0x1
 	002b0124 mov ax,0x766f20
 	002b0130 farcall ax
 	002b0138 farsubsp 0x1
 	002b0140 pop op
 	002b0148 sourceline 0x3cb7
 	002b0150 mov ax,0xa
 	002b015c farpush ax
 	002b0164 setfuncargs 0x1
 	002b016c mov ax,0x426f20
 	002b0178 farcall ax
 	002b0180 farsubsp 0x1
 	002b0188 sourceline 0x3cb8
 	002b0190 push op
 	002b0198 mov ax,0x2c82b9
 	002b01a4 farpush ax
 	002b01ac mov mar,0x3cef20
 	002b01b8 mov ax,mar
 	002b01c4 mov op,ax
 	002b01cc setfuncargs 0x1
 	002b01d4 mov ax,0x6f6f20
 	002b01e0 farcall ax
 	002b01e8 farsubsp 0x1
 	002b01f0 pop op
 	002b01f8 sourceline 0x3cb9
 	002b0200 mov ax,0x1
 	002b020c mov bx,ax
 	002b0218 mov mar,0x3cef20
 	002b0224 mov ax,mar
 	002b0230 push op
 	002b0238 mov op,ax
 	002b0240 farpush bx
 	002b0248 setfuncargs 0x1
 	002b0250 mov ax,0x69ef20
 	002b025c farcall ax
 	002b0264 farsubsp 0x1
 	002b026c pop op
 	002b0274 sourceline 0x3cba
 	002b027c push op
 	002b0284 mov ax,0x2c82f9
 	002b0290 farpush ax
 	002b0298 mov ax,0x138
 	002b02a4 farpush ax
 	002b02ac mov ax,0x92
 	002b02b8 farpush ax
 	002b02c0 mov ax,0x0
 	002b02cc farpush ax
 	002b02d4 mov mar,0x3cef20
 	002b02e0 mov ax,mar
 	002b02ec mov op,ax
 	002b02f4 setfuncargs 0x4
 	002b02fc mov ax,0x6aef20
 	002b0308 farcall ax
 	002b0310 farsubsp 0x4
 	002b0318 pop op
 	002b0320 sourceline 0x3cbb
 	002b0328 mov ax,0x1
 	002b0334 mov mar,0x82ef20
 	002b0340 memwrite4 ax
		002b0348: FALL_THROUGH

	[002b0348]
		002af8ac: UNCONDITIONAL_JUMP
		002af900: FALL_THROUGH
 	002b0348 sourceline 0x3cbd
 	002b0350 jmp 0x002b0518
		002b0518: UNCONDITIONAL_JUMP

	[002b0358]
		002af84c: CONDITIONAL_JUMP
 	002b0358 sourceline 0x3cc0
 	002b0360 push op
 	002b0368 mov ax,0x397
 	002b0374 farpush ax
 	002b037c mov ax,0x64
 	002b0388 farpush ax
 	002b0390 mov ax,0x85
 	002b039c farpush ax
 	002b03a4 mov mar,0x3cef20
 	002b03b0 mov ax,mar
 	002b03bc mov op,ax
 	002b03c4 setfuncargs 0x3
 	002b03cc mov ax,0x726f20
 	002b03d8 farcall ax
 	002b03e0 farsubsp 0x3
 	002b03e8 pop op
 	002b03f0 sourceline 0x3cc1
 	002b03f8 mov ax,0x1
 	002b0404 mov bx,ax
 	002b0410 mov mar,0x3cef20
 	002b041c mov ax,mar
 	002b0428 push op
 	002b0430 mov op,ax
 	002b0438 farpush bx
 	002b0440 setfuncargs 0x1
 	002b0448 mov ax,0x69ef20
 	002b0454 farcall ax
 	002b045c farsubsp 0x1
 	002b0464 pop op
 	002b046c sourceline 0x3cc3
 	002b0474 push op
 	002b047c mov ax,0x2c83d8
 	002b0488 farpush ax
 	002b0490 mov ax,0x138
 	002b049c farpush ax
 	002b04a4 mov ax,0x92
 	002b04b0 farpush ax
 	002b04b8 mov ax,0x0
 	002b04c4 farpush ax
 	002b04cc mov mar,0x3cef20
 	002b04d8 mov ax,mar
 	002b04e4 mov op,ax
 	002b04ec setfuncargs 0x4
 	002b04f4 mov ax,0x6aef20
 	002b0500 farcall ax
 	002b0508 farsubsp 0x4
 	002b0510 pop op
		002b0518: FALL_THROUGH

	[002b0518]
		002b0348: UNCONDITIONAL_JUMP
		002b0358: FALL_THROUGH
 	002b0518 sourceline 0x3cc5
 	002b0520 jmp 0x002b555c
		002b555c: UNCONDITIONAL_JUMP

	[002b0528]
		002af7b0: CONDITIONAL_JUMP
 	002b0528 sourceline 0x3cc9
 	002b0530 mov mar,0x3cef20
 	002b053c mov ax,mar
 	002b0548 push op
 	002b0550 mov op,ax
 	002b0558 setfuncargs 0x0
 	002b0560 mov ax,0x89ef20
 	002b056c farcall ax
 	002b0574 pop op
 	002b057c push ax
 	002b0584 mov mar,0x8f6f20
 	002b0590 mov ax,mar
 	002b059c pop bx
 	002b05a4 cmpeq bx,ax
 	002b05b0 mov ax,bx
 	002b05bc jz 0x002b0ef0
		002b0ef0: CONDITIONAL_JUMP
		002b05c4: FALL_THROUGH

	[002b05c4]
		002b0528: FALL_THROUGH
 	002b05c4 sourceline 0x3ccb
 	002b05cc setfuncargs 0x0
 	002b05d4 mov ax,0x6def20
 	002b05e0 farcall ax
 	002b05e8 lnot ax
 	002b05f0 jz 0x002b064c
		002b064c: CONDITIONAL_JUMP
		002b05f8: FALL_THROUGH

	[002b05f8]
		002b05c4: FALL_THROUGH
 	002b05f8 mov ax,0x87
 	002b0604 farpush ax
 	002b060c mov ax,0x71
 	002b0618 farpush ax
 	002b0620 setfuncargs 0x2
 	002b0628 mov ax,0x6e6f20
 	002b0634 farcall ax
 	002b063c farsubsp 0x2
 	002b0644 jmp 0x002b0ee0
		002b0ee0: UNCONDITIONAL_JUMP

	[002b064c]
		002b05c4: CONDITIONAL_JUMP
 	002b064c sourceline 0x3cce
 	002b0654 mov ax,0x0
 	002b0660 mov bx,ax
 	002b066c mov mar,0x3cef20
 	002b0678 mov ax,mar
 	002b0684 push op
 	002b068c mov op,ax
 	002b0694 farpush bx
 	002b069c setfuncargs 0x1
 	002b06a4 mov ax,0x436f20
 	002b06b0 farcall ax
 	002b06b8 farsubsp 0x1
 	002b06c0 pop op
 	002b06c8 sourceline 0x3ccf
 	002b06d0 mov ax,0x3
 	002b06dc mov bx,ax
 	002b06e8 mov mar,0x3cef20
 	002b06f4 mov ax,mar
 	002b0700 push op
 	002b0708 mov op,ax
 	002b0710 farpush bx
 	002b0718 setfuncargs 0x1
 	002b0720 mov ax,0x69ef20
 	002b072c farcall ax
 	002b0734 farsubsp 0x1
 	002b073c pop op
 	002b0744 sourceline 0x3cd0
 	002b074c push op
 	002b0754 mov ax,0x397
 	002b0760 farpush ax
 	002b0768 mov ax,0x5
 	002b0774 farpush ax
 	002b077c mov mar,0x3cef20
 	002b0788 mov ax,mar
 	002b0794 mov op,ax
 	002b079c setfuncargs 0x2
 	002b07a4 mov ax,0x6eef20
 	002b07b0 farcall ax
 	002b07b8 farsubsp 0x2
 	002b07c0 pop op
 	002b07c8 sourceline 0x3cd1
 	002b07d0 push op
 	002b07d8 mov ax,0x2c841c
 	002b07e4 farpush ax
 	002b07ec mov mar,0x3cef20
 	002b07f8 mov ax,mar
 	002b0804 mov op,ax
 	002b080c setfuncargs 0x1
 	002b0814 mov ax,0x6f6f20
 	002b0820 farcall ax
 	002b0828 farsubsp 0x1
 	002b0830 pop op
 	002b0838 sourceline 0x3cd2
 	002b0840 push op
 	002b0848 mov ax,0xf
 	002b0854 farpush ax
 	002b085c mov mar,0x3cef20
 	002b0868 mov ax,mar
 	002b0874 mov op,ax
 	002b087c setfuncargs 0x1
 	002b0884 mov ax,0x51ef20
 	002b0890 farcall ax
 	002b0898 farsubsp 0x1
 	002b08a0 pop op
 	002b08a8 sourceline 0x3cd3
 	002b08b0 mov ax,0x77
 	002b08bc mov bx,ax
 	002b08c8 mov mar,0x3cef20
 	002b08d4 mov ax,mar
 	002b08e0 push op
 	002b08e8 mov op,ax
 	002b08f0 farpush bx
 	002b08f8 setfuncargs 0x1
 	002b0900 mov ax,0x70ef20
 	002b090c farcall ax
 	002b0914 farsubsp 0x1
 	002b091c pop op
 	002b0924 sourceline 0x3cd4
 	002b092c mov ax,0x81
 	002b0938 mov bx,ax
 	002b0944 mov mar,0x3cef20
 	002b0950 mov ax,mar
 	002b095c push op
 	002b0964 mov op,ax
 	002b096c farpush bx
 	002b0974 setfuncargs 0x1
 	002b097c mov ax,0x526f20
 	002b0988 farcall ax
 	002b0990 farsubsp 0x1
 	002b0998 pop op
 	002b09a0 sourceline 0x3cd5
 	002b09a8 push op
 	002b09b0 mov ax,0x426
 	002b09bc farpush ax
 	002b09c4 mov ax,0x397
 	002b09d0 farpush ax
 	002b09d8 mov ax,0x0
 	002b09e4 farpush ax
 	002b09ec mov ax,0x3
 	002b09f8 farpush ax
 	002b0a00 mov ax,0x0
 	002b0a0c farpush ax
 	002b0a14 mov mar,0x3cef20
 	002b0a20 mov ax,mar
 	002b0a2c mov op,ax
 	002b0a34 setfuncargs 0x5
 	002b0a3c mov ax,0x536f20
 	002b0a48 farcall ax
 	002b0a50 farsubsp 0x5
 	002b0a58 pop op
 	002b0a60 sourceline 0x3cd6
 	002b0a68 mov ax,0x23
 	002b0a74 farpush ax
 	002b0a7c setfuncargs 0x1
 	002b0a84 mov ax,0x426f20
 	002b0a90 farcall ax
 	002b0a98 farsubsp 0x1
 	002b0aa0 sourceline 0x3cd7
 	002b0aa8 push op
 	002b0ab0 mov ax,0x2c845f
 	002b0abc farpush ax
 	002b0ac4 mov mar,0x126ef20
 	002b0ad0 mov ax,mar
 	002b0adc mov op,ax
 	002b0ae4 setfuncargs 0x1
 	002b0aec mov ax,0x6f6f20
 	002b0af8 farcall ax
 	002b0b00 farsubsp 0x1
 	002b0b08 pop op
 	002b0b10 sourceline 0x3cd8
 	002b0b18 push op
 	002b0b20 mov ax,0x427
 	002b0b2c farpush ax
 	002b0b34 mov ax,0x397
 	002b0b40 farpush ax
 	002b0b48 mov ax,0x0
 	002b0b54 farpush ax
 	002b0b5c mov ax,0x3
 	002b0b68 farpush ax
 	002b0b70 mov ax,0x0
 	002b0b7c farpush ax
 	002b0b84 mov mar,0x3cef20
 	002b0b90 mov ax,mar
 	002b0b9c mov op,ax
 	002b0ba4 setfuncargs 0x5
 	002b0bac mov ax,0x536f20
 	002b0bb8 farcall ax
 	002b0bc0 farsubsp 0x5
 	002b0bc8 pop op
 	002b0bd0 sourceline 0x3cd9
 	002b0bd8 push op
 	002b0be0 mov ax,0x2
 	002b0bec farpush ax
 	002b0bf4 mov mar,0x3cef20
 	002b0c00 mov ax,mar
 	002b0c0c mov op,ax
 	002b0c14 setfuncargs 0x1
 	002b0c1c mov ax,0x51ef20
 	002b0c28 farcall ax
 	002b0c30 farsubsp 0x1
 	002b0c38 pop op
 	002b0c40 sourceline 0x3cda
 	002b0c48 mov ax,0x71
 	002b0c54 mov bx,ax
 	002b0c60 mov mar,0x3cef20
 	002b0c6c mov ax,mar
 	002b0c78 push op
 	002b0c80 mov op,ax
 	002b0c88 farpush bx
 	002b0c90 setfuncargs 0x1
 	002b0c98 mov ax,0x70ef20
 	002b0ca4 farcall ax
 	002b0cac farsubsp 0x1
 	002b0cb4 pop op
 	002b0cbc sourceline 0x3cdb
 	002b0cc4 mov ax,0x87
 	002b0cd0 mov bx,ax
 	002b0cdc mov mar,0x3cef20
 	002b0ce8 mov ax,mar
 	002b0cf4 push op
 	002b0cfc mov op,ax
 	002b0d04 farpush bx
 	002b0d0c setfuncargs 0x1
 	002b0d14 mov ax,0x526f20
 	002b0d20 farcall ax
 	002b0d28 farsubsp 0x1
 	002b0d30 pop op
 	002b0d38 sourceline 0x3cdc
 	002b0d40 mov ax,0x5
 	002b0d4c mov bx,ax
 	002b0d58 mov mar,0x3cef20
 	002b0d64 mov ax,mar
 	002b0d70 push op
 	002b0d78 mov op,ax
 	002b0d80 farpush bx
 	002b0d88 setfuncargs 0x1
 	002b0d90 mov ax,0x766f20
 	002b0d9c farcall ax
 	002b0da4 farsubsp 0x1
 	002b0dac pop op
 	002b0db4 sourceline 0x3cdd
 	002b0dbc mov ax,0xa
 	002b0dc8 farpush ax
 	002b0dd0 setfuncargs 0x1
 	002b0dd8 mov ax,0x426f20
 	002b0de4 farcall ax
 	002b0dec farsubsp 0x1
 	002b0df4 sourceline 0x3cde
 	002b0dfc push op
 	002b0e04 mov ax,0x2c849f
 	002b0e10 farpush ax
 	002b0e18 mov mar,0x3cef20
 	002b0e24 mov ax,mar
 	002b0e30 mov op,ax
 	002b0e38 setfuncargs 0x1
 	002b0e40 mov ax,0x6f6f20
 	002b0e4c farcall ax
 	002b0e54 farsubsp 0x1
 	002b0e5c pop op
 	002b0e64 sourceline 0x3cdf
 	002b0e6c mov ax,0x1
 	002b0e78 mov bx,ax
 	002b0e84 mov mar,0x3cef20
 	002b0e90 mov ax,mar
 	002b0e9c push op
 	002b0ea4 mov op,ax
 	002b0eac farpush bx
 	002b0eb4 setfuncargs 0x1
 	002b0ebc mov ax,0x69ef20
 	002b0ec8 farcall ax
 	002b0ed0 farsubsp 0x1
 	002b0ed8 pop op
		002b0ee0: FALL_THROUGH

	[002b0ee0]
		002b05f8: UNCONDITIONAL_JUMP
		002b064c: FALL_THROUGH
 	002b0ee0 sourceline 0x3ce1
 	002b0ee8 jmp 0x002b555c
		002b555c: UNCONDITIONAL_JUMP

	[002b0ef0]
		002b0528: CONDITIONAL_JUMP
 	002b0ef0 sourceline 0x3ce3
 	002b0ef8 mov mar,0x3cef20
 	002b0f04 mov ax,mar
 	002b0f10 push op
 	002b0f18 mov op,ax
 	002b0f20 setfuncargs 0x0
 	002b0f28 mov ax,0x89ef20
 	002b0f34 farcall ax
 	002b0f3c pop op
 	002b0f44 push ax
 	002b0f4c mov mar,0x8cef20
 	002b0f58 mov ax,mar
 	002b0f64 pop bx
 	002b0f6c cmpeq bx,ax
 	002b0f78 mov ax,bx
 	002b0f84 jnz 0x002b1040
		002b1040: CONDITIONAL_JUMP
		002b0f8c: FALL_THROUGH

	[002b0f8c]
		002b0ef0: FALL_THROUGH
 	002b0f8c push ax
 	002b0f94 mov mar,0x3cef20
 	002b0fa0 mov ax,mar
 	002b0fac push op
 	002b0fb4 mov op,ax
 	002b0fbc setfuncargs 0x0
 	002b0fc4 mov ax,0x89ef20
 	002b0fd0 farcall ax
 	002b0fd8 pop op
 	002b0fe0 push ax
 	002b0fe8 mov mar,0x8b6f20
 	002b0ff4 mov ax,mar
 	002b1000 pop bx
 	002b1008 cmpeq bx,ax
 	002b1014 mov ax,bx
 	002b1020 pop bx
 	002b1028 lor bx,ax
 	002b1034 mov ax,bx
		002b1040: FALL_THROUGH

	[002b1040]
		002b0ef0: CONDITIONAL_JUMP
		002b0f8c: FALL_THROUGH
 	002b1040 jnz 0x002b10fc
		002b10fc: CONDITIONAL_JUMP
		002b1048: FALL_THROUGH

	[002b1048]
		002b1040: FALL_THROUGH
 	002b1048 push ax
 	002b1050 mov mar,0x3cef20
 	002b105c mov ax,mar
 	002b1068 push op
 	002b1070 mov op,ax
 	002b1078 setfuncargs 0x0
 	002b1080 mov ax,0x89ef20
 	002b108c farcall ax
 	002b1094 pop op
 	002b109c push ax
 	002b10a4 mov mar,0x8bef20
 	002b10b0 mov ax,mar
 	002b10bc pop bx
 	002b10c4 cmpeq bx,ax
 	002b10d0 mov ax,bx
 	002b10dc pop bx
 	002b10e4 lor bx,ax
 	002b10f0 mov ax,bx
		002b10fc: FALL_THROUGH

	[002b10fc]
		002b1040: CONDITIONAL_JUMP
		002b1048: FALL_THROUGH
 	002b10fc jnz 0x002b11b8
		002b11b8: CONDITIONAL_JUMP
		002b1104: FALL_THROUGH

	[002b1104]
		002b10fc: FALL_THROUGH
 	002b1104 push ax
 	002b110c mov mar,0x3cef20
 	002b1118 mov ax,mar
 	002b1124 push op
 	002b112c mov op,ax
 	002b1134 setfuncargs 0x0
 	002b113c mov ax,0x89ef20
 	002b1148 farcall ax
 	002b1150 pop op
 	002b1158 push ax
 	002b1160 mov mar,0x8c6f20
 	002b116c mov ax,mar
 	002b1178 pop bx
 	002b1180 cmpeq bx,ax
 	002b118c mov ax,bx
 	002b1198 pop bx
 	002b11a0 lor bx,ax
 	002b11ac mov ax,bx
		002b11b8: FALL_THROUGH

	[002b11b8]
		002b10fc: CONDITIONAL_JUMP
		002b1104: FALL_THROUGH
 	002b11b8 jnz 0x002b1274
		002b1274: CONDITIONAL_JUMP
		002b11c0: FALL_THROUGH

	[002b11c0]
		002b11b8: FALL_THROUGH
 	002b11c0 push ax
 	002b11c8 mov mar,0x3cef20
 	002b11d4 mov ax,mar
 	002b11e0 push op
 	002b11e8 mov op,ax
 	002b11f0 setfuncargs 0x0
 	002b11f8 mov ax,0x89ef20
 	002b1204 farcall ax
 	002b120c pop op
 	002b1214 push ax
 	002b121c mov mar,0x7def20
 	002b1228 mov ax,mar
 	002b1234 pop bx
 	002b123c cmpeq bx,ax
 	002b1248 mov ax,bx
 	002b1254 pop bx
 	002b125c lor bx,ax
 	002b1268 mov ax,bx
		002b1274: FALL_THROUGH

	[002b1274]
		002b11b8: CONDITIONAL_JUMP
		002b11c0: FALL_THROUGH
 	002b1274 jnz 0x002b1330
		002b1330: CONDITIONAL_JUMP
		002b127c: FALL_THROUGH

	[002b127c]
		002b1274: FALL_THROUGH
 	002b127c push ax
 	002b1284 mov mar,0x3cef20
 	002b1290 mov ax,mar
 	002b129c push op
 	002b12a4 mov op,ax
 	002b12ac setfuncargs 0x0
 	002b12b4 mov ax,0x89ef20
 	002b12c0 farcall ax
 	002b12c8 pop op
 	002b12d0 push ax
 	002b12d8 mov mar,0x8def20
 	002b12e4 mov ax,mar
 	002b12f0 pop bx
 	002b12f8 cmpeq bx,ax
 	002b1304 mov ax,bx
 	002b1310 pop bx
 	002b1318 lor bx,ax
 	002b1324 mov ax,bx
		002b1330: FALL_THROUGH

	[002b1330]
		002b1274: CONDITIONAL_JUMP
		002b127c: FALL_THROUGH
 	002b1330 jnz 0x002b13ec
		002b13ec: CONDITIONAL_JUMP
		002b1338: FALL_THROUGH

	[002b1338]
		002b1330: FALL_THROUGH
 	002b1338 push ax
 	002b1340 mov mar,0x3cef20
 	002b134c mov ax,mar
 	002b1358 push op
 	002b1360 mov op,ax
 	002b1368 setfuncargs 0x0
 	002b1370 mov ax,0x89ef20
 	002b137c farcall ax
 	002b1384 pop op
 	002b138c push ax
 	002b1394 mov mar,0x8aef20
 	002b13a0 mov ax,mar
 	002b13ac pop bx
 	002b13b4 cmpeq bx,ax
 	002b13c0 mov ax,bx
 	002b13cc pop bx
 	002b13d4 lor bx,ax
 	002b13e0 mov ax,bx
		002b13ec: FALL_THROUGH

	[002b13ec]
		002b1330: CONDITIONAL_JUMP
		002b1338: FALL_THROUGH
 	002b13ec jnz 0x002b14a8
		002b14a8: CONDITIONAL_JUMP
		002b13f4: FALL_THROUGH

	[002b13f4]
		002b13ec: FALL_THROUGH
 	002b13f4 push ax
 	002b13fc mov mar,0x3cef20
 	002b1408 mov ax,mar
 	002b1414 push op
 	002b141c mov op,ax
 	002b1424 setfuncargs 0x0
 	002b142c mov ax,0x89ef20
 	002b1438 farcall ax
 	002b1440 pop op
 	002b1448 push ax
 	002b1450 mov mar,0x9cef20
 	002b145c mov ax,mar
 	002b1468 pop bx
 	002b1470 cmpeq bx,ax
 	002b147c mov ax,bx
 	002b1488 pop bx
 	002b1490 lor bx,ax
 	002b149c mov ax,bx
		002b14a8: FALL_THROUGH

	[002b14a8]
		002b13ec: CONDITIONAL_JUMP
		002b13f4: FALL_THROUGH
 	002b14a8 jnz 0x002b1564
		002b1564: CONDITIONAL_JUMP
		002b14b0: FALL_THROUGH

	[002b14b0]
		002b14a8: FALL_THROUGH
 	002b14b0 push ax
 	002b14b8 mov mar,0x3cef20
 	002b14c4 mov ax,mar
 	002b14d0 push op
 	002b14d8 mov op,ax
 	002b14e0 setfuncargs 0x0
 	002b14e8 mov ax,0x89ef20
 	002b14f4 farcall ax
 	002b14fc pop op
 	002b1504 push ax
 	002b150c mov mar,0x9d6f20
 	002b1518 mov ax,mar
 	002b1524 pop bx
 	002b152c cmpeq bx,ax
 	002b1538 mov ax,bx
 	002b1544 pop bx
 	002b154c lor bx,ax
 	002b1558 mov ax,bx
		002b1564: FALL_THROUGH

	[002b1564]
		002b14a8: CONDITIONAL_JUMP
		002b14b0: FALL_THROUGH
 	002b1564 jnz 0x002b1620
		002b1620: CONDITIONAL_JUMP
		002b156c: FALL_THROUGH

	[002b156c]
		002b1564: FALL_THROUGH
 	002b156c push ax
 	002b1574 mov mar,0x3cef20
 	002b1580 mov ax,mar
 	002b158c push op
 	002b1594 mov op,ax
 	002b159c setfuncargs 0x0
 	002b15a4 mov ax,0x89ef20
 	002b15b0 farcall ax
 	002b15b8 pop op
 	002b15c0 push ax
 	002b15c8 mov mar,0xa0ef20
 	002b15d4 mov ax,mar
 	002b15e0 pop bx
 	002b15e8 cmpeq bx,ax
 	002b15f4 mov ax,bx
 	002b1600 pop bx
 	002b1608 lor bx,ax
 	002b1614 mov ax,bx
		002b1620: FALL_THROUGH

	[002b1620]
		002b1564: CONDITIONAL_JUMP
		002b156c: FALL_THROUGH
 	002b1620 jnz 0x002b16dc
		002b16dc: CONDITIONAL_JUMP
		002b1628: FALL_THROUGH

	[002b1628]
		002b1620: FALL_THROUGH
 	002b1628 push ax
 	002b1630 mov mar,0x3cef20
 	002b163c mov ax,mar
 	002b1648 push op
 	002b1650 mov op,ax
 	002b1658 setfuncargs 0x0
 	002b1660 mov ax,0x89ef20
 	002b166c farcall ax
 	002b1674 pop op
 	002b167c push ax
 	002b1684 mov mar,0x8eef20
 	002b1690 mov ax,mar
 	002b169c pop bx
 	002b16a4 cmpeq bx,ax
 	002b16b0 mov ax,bx
 	002b16bc pop bx
 	002b16c4 lor bx,ax
 	002b16d0 mov ax,bx
		002b16dc: FALL_THROUGH

	[002b16dc]
		002b1620: CONDITIONAL_JUMP
		002b1628: FALL_THROUGH
 	002b16dc jnz 0x002b1798
		002b1798: CONDITIONAL_JUMP
		002b16e4: FALL_THROUGH

	[002b16e4]
		002b16dc: FALL_THROUGH
 	002b16e4 push ax
 	002b16ec mov mar,0x3cef20
 	002b16f8 mov ax,mar
 	002b1704 push op
 	002b170c mov op,ax
 	002b1714 setfuncargs 0x0
 	002b171c mov ax,0x89ef20
 	002b1728 farcall ax
 	002b1730 pop op
 	002b1738 push ax
 	002b1740 mov mar,0x9def20
 	002b174c mov ax,mar
 	002b1758 pop bx
 	002b1760 cmpeq bx,ax
 	002b176c mov ax,bx
 	002b1778 pop bx
 	002b1780 lor bx,ax
 	002b178c mov ax,bx
		002b1798: FALL_THROUGH

	[002b1798]
		002b16dc: CONDITIONAL_JUMP
		002b16e4: FALL_THROUGH
 	002b1798 jnz 0x002b1854
		002b1854: CONDITIONAL_JUMP
		002b17a0: FALL_THROUGH

	[002b17a0]
		002b1798: FALL_THROUGH
 	002b17a0 push ax
 	002b17a8 mov mar,0x3cef20
 	002b17b4 mov ax,mar
 	002b17c0 push op
 	002b17c8 mov op,ax
 	002b17d0 setfuncargs 0x0
 	002b17d8 mov ax,0x89ef20
 	002b17e4 farcall ax
 	002b17ec pop op
 	002b17f4 push ax
 	002b17fc mov mar,0x9aef20
 	002b1808 mov ax,mar
 	002b1814 pop bx
 	002b181c cmpeq bx,ax
 	002b1828 mov ax,bx
 	002b1834 pop bx
 	002b183c lor bx,ax
 	002b1848 mov ax,bx
		002b1854: FALL_THROUGH

	[002b1854]
		002b1798: CONDITIONAL_JUMP
		002b17a0: FALL_THROUGH
 	002b1854 jnz 0x002b1910
		002b1910: CONDITIONAL_JUMP
		002b185c: FALL_THROUGH

	[002b185c]
		002b1854: FALL_THROUGH
 	002b185c push ax
 	002b1864 mov mar,0x3cef20
 	002b1870 mov ax,mar
 	002b187c push op
 	002b1884 mov op,ax
 	002b188c setfuncargs 0x0
 	002b1894 mov ax,0x89ef20
 	002b18a0 farcall ax
 	002b18a8 pop op
 	002b18b0 push ax
 	002b18b8 mov mar,0xa06f20
 	002b18c4 mov ax,mar
 	002b18d0 pop bx
 	002b18d8 cmpeq bx,ax
 	002b18e4 mov ax,bx
 	002b18f0 pop bx
 	002b18f8 lor bx,ax
 	002b1904 mov ax,bx
		002b1910: FALL_THROUGH

	[002b1910]
		002b1854: CONDITIONAL_JUMP
		002b185c: FALL_THROUGH
 	002b1910 jnz 0x002b19cc
		002b19cc: CONDITIONAL_JUMP
		002b1918: FALL_THROUGH

	[002b1918]
		002b1910: FALL_THROUGH
 	002b1918 push ax
 	002b1920 mov mar,0x3cef20
 	002b192c mov ax,mar
 	002b1938 push op
 	002b1940 mov op,ax
 	002b1948 setfuncargs 0x0
 	002b1950 mov ax,0x89ef20
 	002b195c farcall ax
 	002b1964 pop op
 	002b196c push ax
 	002b1974 mov mar,0x9fef20
 	002b1980 mov ax,mar
 	002b198c pop bx
 	002b1994 cmpeq bx,ax
 	002b19a0 mov ax,bx
 	002b19ac pop bx
 	002b19b4 lor bx,ax
 	002b19c0 mov ax,bx
		002b19cc: FALL_THROUGH

	[002b19cc]
		002b1910: CONDITIONAL_JUMP
		002b1918: FALL_THROUGH
 	002b19cc jnz 0x002b1a88
		002b1a88: CONDITIONAL_JUMP
		002b19d4: FALL_THROUGH

	[002b19d4]
		002b19cc: FALL_THROUGH
 	002b19d4 push ax
 	002b19dc mov mar,0x3cef20
 	002b19e8 mov ax,mar
 	002b19f4 push op
 	002b19fc mov op,ax
 	002b1a04 setfuncargs 0x0
 	002b1a0c mov ax,0x89ef20
 	002b1a18 farcall ax
 	002b1a20 pop op
 	002b1a28 push ax
 	002b1a30 mov mar,0x9b6f20
 	002b1a3c mov ax,mar
 	002b1a48 pop bx
 	002b1a50 cmpeq bx,ax
 	002b1a5c mov ax,bx
 	002b1a68 pop bx
 	002b1a70 lor bx,ax
 	002b1a7c mov ax,bx
		002b1a88: FALL_THROUGH

	[002b1a88]
		002b19cc: CONDITIONAL_JUMP
		002b19d4: FALL_THROUGH
 	002b1a88 jnz 0x002b1b44
		002b1b44: CONDITIONAL_JUMP
		002b1a90: FALL_THROUGH

	[002b1a90]
		002b1a88: FALL_THROUGH
 	002b1a90 push ax
 	002b1a98 mov mar,0x3cef20
 	002b1aa4 mov ax,mar
 	002b1ab0 push op
 	002b1ab8 mov op,ax
 	002b1ac0 setfuncargs 0x0
 	002b1ac8 mov ax,0x89ef20
 	002b1ad4 farcall ax
 	002b1adc pop op
 	002b1ae4 push ax
 	002b1aec mov mar,0x9bef20
 	002b1af8 mov ax,mar
 	002b1b04 pop bx
 	002b1b0c cmpeq bx,ax
 	002b1b18 mov ax,bx
 	002b1b24 pop bx
 	002b1b2c lor bx,ax
 	002b1b38 mov ax,bx
		002b1b44: FALL_THROUGH

	[002b1b44]
		002b1a88: CONDITIONAL_JUMP
		002b1a90: FALL_THROUGH
 	002b1b44 jnz 0x002b1c00
		002b1c00: CONDITIONAL_JUMP
		002b1b4c: FALL_THROUGH

	[002b1b4c]
		002b1b44: FALL_THROUGH
 	002b1b4c push ax
 	002b1b54 mov mar,0x3cef20
 	002b1b60 mov ax,mar
 	002b1b6c push op
 	002b1b74 mov op,ax
 	002b1b7c setfuncargs 0x0
 	002b1b84 mov ax,0x89ef20
 	002b1b90 farcall ax
 	002b1b98 pop op
 	002b1ba0 push ax
 	002b1ba8 mov mar,0x986f20
 	002b1bb4 mov ax,mar
 	002b1bc0 pop bx
 	002b1bc8 cmpeq bx,ax
 	002b1bd4 mov ax,bx
 	002b1be0 pop bx
 	002b1be8 lor bx,ax
 	002b1bf4 mov ax,bx
		002b1c00: FALL_THROUGH

	[002b1c00]
		002b1b44: CONDITIONAL_JUMP
		002b1b4c: FALL_THROUGH
 	002b1c00 jnz 0x002b1cbc
		002b1cbc: CONDITIONAL_JUMP
		002b1c08: FALL_THROUGH

	[002b1c08]
		002b1c00: FALL_THROUGH
 	002b1c08 push ax
 	002b1c10 mov mar,0x3cef20
 	002b1c1c mov ax,mar
 	002b1c28 push op
 	002b1c30 mov op,ax
 	002b1c38 setfuncargs 0x0
 	002b1c40 mov ax,0x89ef20
 	002b1c4c farcall ax
 	002b1c54 pop op
 	002b1c5c push ax
 	002b1c64 mov mar,0x8fef20
 	002b1c70 mov ax,mar
 	002b1c7c pop bx
 	002b1c84 cmpeq bx,ax
 	002b1c90 mov ax,bx
 	002b1c9c pop bx
 	002b1ca4 lor bx,ax
 	002b1cb0 mov ax,bx
		002b1cbc: FALL_THROUGH

	[002b1cbc]
		002b1c00: CONDITIONAL_JUMP
		002b1c08: FALL_THROUGH
 	002b1cbc jnz 0x002b1d78
		002b1d78: CONDITIONAL_JUMP
		002b1cc4: FALL_THROUGH

	[002b1cc4]
		002b1cbc: FALL_THROUGH
 	002b1cc4 push ax
 	002b1ccc mov mar,0x3cef20
 	002b1cd8 mov ax,mar
 	002b1ce4 push op
 	002b1cec mov op,ax
 	002b1cf4 setfuncargs 0x0
 	002b1cfc mov ax,0x89ef20
 	002b1d08 farcall ax
 	002b1d10 pop op
 	002b1d18 push ax
 	002b1d20 mov mar,0x906f20
 	002b1d2c mov ax,mar
 	002b1d38 pop bx
 	002b1d40 cmpeq bx,ax
 	002b1d4c mov ax,bx
 	002b1d58 pop bx
 	002b1d60 lor bx,ax
 	002b1d6c mov ax,bx
		002b1d78: FALL_THROUGH

	[002b1d78]
		002b1cbc: CONDITIONAL_JUMP
		002b1cc4: FALL_THROUGH
 	002b1d78 jnz 0x002b1e34
		002b1e34: CONDITIONAL_JUMP
		002b1d80: FALL_THROUGH

	[002b1d80]
		002b1d78: FALL_THROUGH
 	002b1d80 push ax
 	002b1d88 mov mar,0x3cef20
 	002b1d94 mov ax,mar
 	002b1da0 push op
 	002b1da8 mov op,ax
 	002b1db0 setfuncargs 0x0
 	002b1db8 mov ax,0x89ef20
 	002b1dc4 farcall ax
 	002b1dcc pop op
 	002b1dd4 push ax
 	002b1ddc mov mar,0x976f20
 	002b1de8 mov ax,mar
 	002b1df4 pop bx
 	002b1dfc cmpeq bx,ax
 	002b1e08 mov ax,bx
 	002b1e14 pop bx
 	002b1e1c lor bx,ax
 	002b1e28 mov ax,bx
		002b1e34: FALL_THROUGH

	[002b1e34]
		002b1d78: CONDITIONAL_JUMP
		002b1d80: FALL_THROUGH
 	002b1e34 jnz 0x002b1ef0
		002b1ef0: CONDITIONAL_JUMP
		002b1e3c: FALL_THROUGH

	[002b1e3c]
		002b1e34: FALL_THROUGH
 	002b1e3c push ax
 	002b1e44 mov mar,0x3cef20
 	002b1e50 mov ax,mar
 	002b1e5c push op
 	002b1e64 mov op,ax
 	002b1e6c setfuncargs 0x0
 	002b1e74 mov ax,0x89ef20
 	002b1e80 farcall ax
 	002b1e88 pop op
 	002b1e90 push ax
 	002b1e98 mov mar,0x846f20
 	002b1ea4 mov ax,mar
 	002b1eb0 pop bx
 	002b1eb8 cmpeq bx,ax
 	002b1ec4 mov ax,bx
 	002b1ed0 pop bx
 	002b1ed8 lor bx,ax
 	002b1ee4 mov ax,bx
		002b1ef0: FALL_THROUGH

	[002b1ef0]
		002b1e34: CONDITIONAL_JUMP
		002b1e3c: FALL_THROUGH
 	002b1ef0 jnz 0x002b1fac
		002b1fac: CONDITIONAL_JUMP
		002b1ef8: FALL_THROUGH

	[002b1ef8]
		002b1ef0: FALL_THROUGH
 	002b1ef8 push ax
 	002b1f00 mov mar,0x3cef20
 	002b1f0c mov ax,mar
 	002b1f18 push op
 	002b1f20 mov op,ax
 	002b1f28 setfuncargs 0x0
 	002b1f30 mov ax,0x89ef20
 	002b1f3c farcall ax
 	002b1f44 pop op
 	002b1f4c push ax
 	002b1f54 mov mar,0x916f20
 	002b1f60 mov ax,mar
 	002b1f6c pop bx
 	002b1f74 cmpeq bx,ax
 	002b1f80 mov ax,bx
 	002b1f8c pop bx
 	002b1f94 lor bx,ax
 	002b1fa0 mov ax,bx
		002b1fac: FALL_THROUGH

	[002b1fac]
		002b1ef0: CONDITIONAL_JUMP
		002b1ef8: FALL_THROUGH
 	002b1fac jz 0x002b27f0
		002b27f0: CONDITIONAL_JUMP
		002b1fb4: FALL_THROUGH

	[002b1fb4]
		002b1fac: FALL_THROUGH
 	002b1fb4 sourceline 0x3ceb
 	002b1fbc setfuncargs 0x0
 	002b1fc4 mov ax,0x6def20
 	002b1fd0 farcall ax
 	002b1fd8 lnot ax
 	002b1fe0 jz 0x002b203c
		002b203c: CONDITIONAL_JUMP
		002b1fe8: FALL_THROUGH

	[002b1fe8]
		002b1fb4: FALL_THROUGH
 	002b1fe8 mov ax,0x87
 	002b1ff4 farpush ax
 	002b1ffc mov ax,0x71
 	002b2008 farpush ax
 	002b2010 setfuncargs 0x2
 	002b2018 mov ax,0x6e6f20
 	002b2024 farcall ax
 	002b202c farsubsp 0x2
 	002b2034 jmp 0x002b27e0
		002b27e0: UNCONDITIONAL_JUMP

	[002b203c]
		002b1fb4: CONDITIONAL_JUMP
 	002b203c sourceline 0x3cee
 	002b2044 mov ax,0x0
 	002b2050 mov bx,ax
 	002b205c mov mar,0x3cef20
 	002b2068 mov ax,mar
 	002b2074 push op
 	002b207c mov op,ax
 	002b2084 farpush bx
 	002b208c setfuncargs 0x1
 	002b2094 mov ax,0x436f20
 	002b20a0 farcall ax
 	002b20a8 farsubsp 0x1
 	002b20b0 pop op
 	002b20b8 sourceline 0x3cef
 	002b20c0 mov ax,0x3
 	002b20cc mov bx,ax
 	002b20d8 mov mar,0x3cef20
 	002b20e4 mov ax,mar
 	002b20f0 push op
 	002b20f8 mov op,ax
 	002b2100 farpush bx
 	002b2108 setfuncargs 0x1
 	002b2110 mov ax,0x69ef20
 	002b211c farcall ax
 	002b2124 farsubsp 0x1
 	002b212c pop op
 	002b2134 sourceline 0x3cf0
 	002b213c push op
 	002b2144 mov ax,0x397
 	002b2150 farpush ax
 	002b2158 mov ax,0x5
 	002b2164 farpush ax
 	002b216c mov mar,0x3cef20
 	002b2178 mov ax,mar
 	002b2184 mov op,ax
 	002b218c setfuncargs 0x2
 	002b2194 mov ax,0x6eef20
 	002b21a0 farcall ax
 	002b21a8 farsubsp 0x2
 	002b21b0 pop op
 	002b21b8 sourceline 0x3cf1
 	002b21c0 push op
 	002b21c8 mov ax,0xf
 	002b21d4 farpush ax
 	002b21dc mov mar,0x3cef20
 	002b21e8 mov ax,mar
 	002b21f4 mov op,ax
 	002b21fc setfuncargs 0x1
 	002b2204 mov ax,0x51ef20
 	002b2210 farcall ax
 	002b2218 farsubsp 0x1
 	002b2220 pop op
 	002b2228 sourceline 0x3cf2
 	002b2230 mov ax,0x77
 	002b223c mov bx,ax
 	002b2248 mov mar,0x3cef20
 	002b2254 mov ax,mar
 	002b2260 push op
 	002b2268 mov op,ax
 	002b2270 farpush bx
 	002b2278 setfuncargs 0x1
 	002b2280 mov ax,0x70ef20
 	002b228c farcall ax
 	002b2294 farsubsp 0x1
 	002b229c pop op
 	002b22a4 sourceline 0x3cf3
 	002b22ac mov ax,0x81
 	002b22b8 mov bx,ax
 	002b22c4 mov mar,0x3cef20
 	002b22d0 mov ax,mar
 	002b22dc push op
 	002b22e4 mov op,ax
 	002b22ec farpush bx
 	002b22f4 setfuncargs 0x1
 	002b22fc mov ax,0x526f20
 	002b2308 farcall ax
 	002b2310 farsubsp 0x1
 	002b2318 pop op
 	002b2320 sourceline 0x3cf4
 	002b2328 push op
 	002b2330 mov ax,0x426
 	002b233c farpush ax
 	002b2344 mov ax,0x397
 	002b2350 farpush ax
 	002b2358 mov ax,0x0
 	002b2364 farpush ax
 	002b236c mov ax,0x3
 	002b2378 farpush ax
 	002b2380 mov ax,0x0
 	002b238c farpush ax
 	002b2394 mov mar,0x3cef20
 	002b23a0 mov ax,mar
 	002b23ac mov op,ax
 	002b23b4 setfuncargs 0x5
 	002b23bc mov ax,0x536f20
 	002b23c8 farcall ax
 	002b23d0 farsubsp 0x5
 	002b23d8 pop op
 	002b23e0 sourceline 0x3cf5
 	002b23e8 push op
 	002b23f0 mov ax,0x2c84bc
 	002b23fc farpush ax
 	002b2404 mov mar,0x3cef20
 	002b2410 mov ax,mar
 	002b241c mov op,ax
 	002b2424 setfuncargs 0x1
 	002b242c mov ax,0x6f6f20
 	002b2438 farcall ax
 	002b2440 farsubsp 0x1
 	002b2448 pop op
 	002b2450 sourceline 0x3cf6
 	002b2458 push op
 	002b2460 mov ax,0x2c84f1
 	002b246c farpush ax
 	002b2474 mov mar,0x126ef20
 	002b2480 mov ax,mar
 	002b248c mov op,ax
 	002b2494 setfuncargs 0x1
 	002b249c mov ax,0x6f6f20
 	002b24a8 farcall ax
 	002b24b0 farsubsp 0x1
 	002b24b8 pop op
 	002b24c0 sourceline 0x3cf7
 	002b24c8 push op
 	002b24d0 mov ax,0x427
 	002b24dc farpush ax
 	002b24e4 mov ax,0x397
 	002b24f0 farpush ax
 	002b24f8 mov ax,0x0
 	002b2504 farpush ax
 	002b250c mov ax,0x3
 	002b2518 farpush ax
 	002b2520 mov ax,0x0
 	002b252c farpush ax
 	002b2534 mov mar,0x3cef20
 	002b2540 mov ax,mar
 	002b254c mov op,ax
 	002b2554 setfuncargs 0x5
 	002b255c mov ax,0x536f20
 	002b2568 farcall ax
 	002b2570 farsubsp 0x5
 	002b2578 pop op
 	002b2580 sourceline 0x3cf8
 	002b2588 push op
 	002b2590 mov ax,0x2
 	002b259c farpush ax
 	002b25a4 mov mar,0x3cef20
 	002b25b0 mov ax,mar
 	002b25bc mov op,ax
 	002b25c4 setfuncargs 0x1
 	002b25cc mov ax,0x51ef20
 	002b25d8 farcall ax
 	002b25e0 farsubsp 0x1
 	002b25e8 pop op
 	002b25f0 sourceline 0x3cf9
 	002b25f8 mov ax,0x71
 	002b2604 mov bx,ax
 	002b2610 mov mar,0x3cef20
 	002b261c mov ax,mar
 	002b2628 push op
 	002b2630 mov op,ax
 	002b2638 farpush bx
 	002b2640 setfuncargs 0x1
 	002b2648 mov ax,0x70ef20
 	002b2654 farcall ax
 	002b265c farsubsp 0x1
 	002b2664 pop op
 	002b266c sourceline 0x3cfa
 	002b2674 mov ax,0x87
 	002b2680 mov bx,ax
 	002b268c mov mar,0x3cef20
 	002b2698 mov ax,mar
 	002b26a4 push op
 	002b26ac mov op,ax
 	002b26b4 farpush bx
 	002b26bc setfuncargs 0x1
 	002b26c4 mov ax,0x526f20
 	002b26d0 farcall ax
 	002b26d8 farsubsp 0x1
 	002b26e0 pop op
 	002b26e8 sourceline 0x3cfb
 	002b26f0 mov ax,0x5
 	002b26fc mov bx,ax
 	002b2708 mov mar,0x3cef20
 	002b2714 mov ax,mar
 	002b2720 push op
 	002b2728 mov op,ax
 	002b2730 farpush bx
 	002b2738 setfuncargs 0x1
 	002b2740 mov ax,0x766f20
 	002b274c farcall ax
 	002b2754 farsubsp 0x1
 	002b275c pop op
 	002b2764 sourceline 0x3cfc
 	002b276c mov ax,0x1
 	002b2778 mov bx,ax
 	002b2784 mov mar,0x3cef20
 	002b2790 mov ax,mar
 	002b279c push op
 	002b27a4 mov op,ax
 	002b27ac farpush bx
 	002b27b4 setfuncargs 0x1
 	002b27bc mov ax,0x69ef20
 	002b27c8 farcall ax
 	002b27d0 farsubsp 0x1
 	002b27d8 pop op
		002b27e0: FALL_THROUGH

	[002b27e0]
		002b1fe8: UNCONDITIONAL_JUMP
		002b203c: FALL_THROUGH
 	002b27e0 sourceline 0x3cfe
 	002b27e8 jmp 0x002b555c
		002b555c: UNCONDITIONAL_JUMP

	[002b27f0]
		002b1fac: CONDITIONAL_JUMP
 	002b27f0 sourceline 0x3d00
 	002b27f8 mov mar,0x3cef20
 	002b2804 mov ax,mar
 	002b2810 push op
 	002b2818 mov op,ax
 	002b2820 setfuncargs 0x0
 	002b2828 mov ax,0x89ef20
 	002b2834 farcall ax
 	002b283c pop op
 	002b2844 push ax
 	002b284c mov mar,0x8d6f20
 	002b2858 mov ax,mar
 	002b2864 pop bx
 	002b286c cmpeq bx,ax
 	002b2878 mov ax,bx
 	002b2884 jz 0x002b3564
		002b3564: CONDITIONAL_JUMP
		002b288c: FALL_THROUGH

	[002b288c]
		002b27f0: FALL_THROUGH
 	002b288c sourceline 0x3d02
 	002b2894 mov mar,0x73ef20
 	002b28a0 memread4 ax
 	002b28a8 lnot ax
 	002b28b0 jz 0x002b3368
		002b3368: CONDITIONAL_JUMP
		002b28b8: FALL_THROUGH

	[002b28b8]
		002b288c: FALL_THROUGH
 	002b28b8 sourceline 0x3d04
 	002b28c0 push op
 	002b28c8 mov ax,0x4
 	002b28d4 farpush ax
 	002b28dc mov mar,0x736f20
 	002b28e8 mov ax,mar
 	002b28f4 mov op,ax
 	002b28fc setfuncargs 0x1
 	002b2904 mov ax,0x6d6f20
 	002b2910 farcall ax
 	002b2918 farsubsp 0x1
 	002b2920 pop op
 	002b2928 jz 0x002b316c
		002b316c: CONDITIONAL_JUMP
		002b2930: FALL_THROUGH

	[002b2930]
		002b28b8: FALL_THROUGH
 	002b2930 sourceline 0x3d06
 	002b2938 setfuncargs 0x0
 	002b2940 mov ax,0x6def20
 	002b294c farcall ax
 	002b2954 lnot ax
 	002b295c jz 0x002b29b8
		002b29b8: CONDITIONAL_JUMP
		002b2964: FALL_THROUGH

	[002b2964]
		002b2930: FALL_THROUGH
 	002b2964 mov ax,0x87
 	002b2970 farpush ax
 	002b2978 mov ax,0x71
 	002b2984 farpush ax
 	002b298c setfuncargs 0x2
 	002b2994 mov ax,0x6e6f20
 	002b29a0 farcall ax
 	002b29a8 farsubsp 0x2
 	002b29b0 jmp 0x002b315c
		002b315c: UNCONDITIONAL_JUMP

	[002b29b8]
		002b2930: CONDITIONAL_JUMP
 	002b29b8 sourceline 0x3d09
 	002b29c0 mov ax,0x0
 	002b29cc mov bx,ax
 	002b29d8 mov mar,0x3cef20
 	002b29e4 mov ax,mar
 	002b29f0 push op
 	002b29f8 mov op,ax
 	002b2a00 farpush bx
 	002b2a08 setfuncargs 0x1
 	002b2a10 mov ax,0x436f20
 	002b2a1c farcall ax
 	002b2a24 farsubsp 0x1
 	002b2a2c pop op
 	002b2a34 sourceline 0x3d0a
 	002b2a3c mov ax,0x3
 	002b2a48 mov bx,ax
 	002b2a54 mov mar,0x3cef20
 	002b2a60 mov ax,mar
 	002b2a6c push op
 	002b2a74 mov op,ax
 	002b2a7c farpush bx
 	002b2a84 setfuncargs 0x1
 	002b2a8c mov ax,0x69ef20
 	002b2a98 farcall ax
 	002b2aa0 farsubsp 0x1
 	002b2aa8 pop op
 	002b2ab0 sourceline 0x3d0b
 	002b2ab8 push op
 	002b2ac0 mov ax,0x397
 	002b2acc farpush ax
 	002b2ad4 mov ax,0x5
 	002b2ae0 farpush ax
 	002b2ae8 mov mar,0x3cef20
 	002b2af4 mov ax,mar
 	002b2b00 mov op,ax
 	002b2b08 setfuncargs 0x2
 	002b2b10 mov ax,0x6eef20
 	002b2b1c farcall ax
 	002b2b24 farsubsp 0x2
 	002b2b2c pop op
 	002b2b34 sourceline 0x3d0c
 	002b2b3c push op
 	002b2b44 mov ax,0xf
 	002b2b50 farpush ax
 	002b2b58 mov mar,0x3cef20
 	002b2b64 mov ax,mar
 	002b2b70 mov op,ax
 	002b2b78 setfuncargs 0x1
 	002b2b80 mov ax,0x51ef20
 	002b2b8c farcall ax
 	002b2b94 farsubsp 0x1
 	002b2b9c pop op
 	002b2ba4 sourceline 0x3d0d
 	002b2bac mov ax,0x77
 	002b2bb8 mov bx,ax
 	002b2bc4 mov mar,0x3cef20
 	002b2bd0 mov ax,mar
 	002b2bdc push op
 	002b2be4 mov op,ax
 	002b2bec farpush bx
 	002b2bf4 setfuncargs 0x1
 	002b2bfc mov ax,0x70ef20
 	002b2c08 farcall ax
 	002b2c10 farsubsp 0x1
 	002b2c18 pop op
 	002b2c20 sourceline 0x3d0e
 	002b2c28 mov ax,0x81
 	002b2c34 mov bx,ax
 	002b2c40 mov mar,0x3cef20
 	002b2c4c mov ax,mar
 	002b2c58 push op
 	002b2c60 mov op,ax
 	002b2c68 farpush bx
 	002b2c70 setfuncargs 0x1
 	002b2c78 mov ax,0x526f20
 	002b2c84 farcall ax
 	002b2c8c farsubsp 0x1
 	002b2c94 pop op
 	002b2c9c sourceline 0x3d0f
 	002b2ca4 push op
 	002b2cac mov ax,0x426
 	002b2cb8 farpush ax
 	002b2cc0 mov ax,0x397
 	002b2ccc farpush ax
 	002b2cd4 mov ax,0x0
 	002b2ce0 farpush ax
 	002b2ce8 mov ax,0x3
 	002b2cf4 farpush ax
 	002b2cfc mov ax,0x0
 	002b2d08 farpush ax
 	002b2d10 mov mar,0x3cef20
 	002b2d1c mov ax,mar
 	002b2d28 mov op,ax
 	002b2d30 setfuncargs 0x5
 	002b2d38 mov ax,0x536f20
 	002b2d44 farcall ax
 	002b2d4c farsubsp 0x5
 	002b2d54 pop op
 	002b2d5c sourceline 0x3d10
 	002b2d64 push op
 	002b2d6c mov ax,0x2c850b
 	002b2d78 farpush ax
 	002b2d80 mov mar,0x3cef20
 	002b2d8c mov ax,mar
 	002b2d98 mov op,ax
 	002b2da0 setfuncargs 0x1
 	002b2da8 mov ax,0x6f6f20
 	002b2db4 farcall ax
 	002b2dbc farsubsp 0x1
 	002b2dc4 pop op
 	002b2dcc sourceline 0x3d11
 	002b2dd4 push op
 	002b2ddc mov ax,0x2c8546
 	002b2de8 farpush ax
 	002b2df0 mov mar,0x126ef20
 	002b2dfc mov ax,mar
 	002b2e08 mov op,ax
 	002b2e10 setfuncargs 0x1
 	002b2e18 mov ax,0x6f6f20
 	002b2e24 farcall ax
 	002b2e2c farsubsp 0x1
 	002b2e34 pop op
 	002b2e3c sourceline 0x3d12
 	002b2e44 push op
 	002b2e4c mov ax,0x427
 	002b2e58 farpush ax
 	002b2e60 mov ax,0x397
 	002b2e6c farpush ax
 	002b2e74 mov ax,0x0
 	002b2e80 farpush ax
 	002b2e88 mov ax,0x3
 	002b2e94 farpush ax
 	002b2e9c mov ax,0x0
 	002b2ea8 farpush ax
 	002b2eb0 mov mar,0x3cef20
 	002b2ebc mov ax,mar
 	002b2ec8 mov op,ax
 	002b2ed0 setfuncargs 0x5
 	002b2ed8 mov ax,0x536f20
 	002b2ee4 farcall ax
 	002b2eec farsubsp 0x5
 	002b2ef4 pop op
 	002b2efc sourceline 0x3d13
 	002b2f04 push op
 	002b2f0c mov ax,0x2
 	002b2f18 farpush ax
 	002b2f20 mov mar,0x3cef20
 	002b2f2c mov ax,mar
 	002b2f38 mov op,ax
 	002b2f40 setfuncargs 0x1
 	002b2f48 mov ax,0x51ef20
 	002b2f54 farcall ax
 	002b2f5c farsubsp 0x1
 	002b2f64 pop op
 	002b2f6c sourceline 0x3d14
 	002b2f74 mov ax,0x71
 	002b2f80 mov bx,ax
 	002b2f8c mov mar,0x3cef20
 	002b2f98 mov ax,mar
 	002b2fa4 push op
 	002b2fac mov op,ax
 	002b2fb4 farpush bx
 	002b2fbc setfuncargs 0x1
 	002b2fc4 mov ax,0x70ef20
 	002b2fd0 farcall ax
 	002b2fd8 farsubsp 0x1
 	002b2fe0 pop op
 	002b2fe8 sourceline 0x3d15
 	002b2ff0 mov ax,0x87
 	002b2ffc mov bx,ax
 	002b3008 mov mar,0x3cef20
 	002b3014 mov ax,mar
 	002b3020 push op
 	002b3028 mov op,ax
 	002b3030 farpush bx
 	002b3038 setfuncargs 0x1
 	002b3040 mov ax,0x526f20
 	002b304c farcall ax
 	002b3054 farsubsp 0x1
 	002b305c pop op
 	002b3064 sourceline 0x3d16
 	002b306c mov ax,0x5
 	002b3078 mov bx,ax
 	002b3084 mov mar,0x3cef20
 	002b3090 mov ax,mar
 	002b309c push op
 	002b30a4 mov op,ax
 	002b30ac farpush bx
 	002b30b4 setfuncargs 0x1
 	002b30bc mov ax,0x766f20
 	002b30c8 farcall ax
 	002b30d0 farsubsp 0x1
 	002b30d8 pop op
 	002b30e0 sourceline 0x3d17
 	002b30e8 mov ax,0x1
 	002b30f4 mov bx,ax
 	002b3100 mov mar,0x3cef20
 	002b310c mov ax,mar
 	002b3118 push op
 	002b3120 mov op,ax
 	002b3128 farpush bx
 	002b3130 setfuncargs 0x1
 	002b3138 mov ax,0x69ef20
 	002b3144 farcall ax
 	002b314c farsubsp 0x1
 	002b3154 pop op
		002b315c: FALL_THROUGH

	[002b315c]
		002b2964: UNCONDITIONAL_JUMP
		002b29b8: FALL_THROUGH
 	002b315c sourceline 0x3d19
 	002b3164 jmp 0x002b3358
		002b3358: UNCONDITIONAL_JUMP

	[002b316c]
		002b28b8: CONDITIONAL_JUMP
 	002b316c sourceline 0x3d1c
 	002b3174 mov mar,0x74ef20
 	002b3180 memread4 ax
 	002b3188 lnot ax
 	002b3190 jz 0x002b3358
		002b3358: CONDITIONAL_JUMP
		002b3198: FALL_THROUGH

	[002b3198]
		002b316c: FALL_THROUGH
 	002b3198 sourceline 0x3d1e
 	002b31a0 push op
 	002b31a8 mov ax,0x397
 	002b31b4 farpush ax
 	002b31bc mov ax,0x64
 	002b31c8 farpush ax
 	002b31d0 mov ax,0x85
 	002b31dc farpush ax
 	002b31e4 mov mar,0x3cef20
 	002b31f0 mov ax,mar
 	002b31fc mov op,ax
 	002b3204 setfuncargs 0x3
 	002b320c mov ax,0x726f20
 	002b3218 farcall ax
 	002b3220 farsubsp 0x3
 	002b3228 pop op
 	002b3230 sourceline 0x3d1f
 	002b3238 mov ax,0x1
 	002b3244 mov bx,ax
 	002b3250 mov mar,0x3cef20
 	002b325c mov ax,mar
 	002b3268 push op
 	002b3270 mov op,ax
 	002b3278 farpush bx
 	002b3280 setfuncargs 0x1
 	002b3288 mov ax,0x69ef20
 	002b3294 farcall ax
 	002b329c farsubsp 0x1
 	002b32a4 pop op
 	002b32ac sourceline 0x3d20
 	002b32b4 push op
 	002b32bc mov ax,0x2c85d2
 	002b32c8 farpush ax
 	002b32d0 mov ax,0x138
 	002b32dc farpush ax
 	002b32e4 mov ax,0x92
 	002b32f0 farpush ax
 	002b32f8 mov ax,0x0
 	002b3304 farpush ax
 	002b330c mov mar,0x3cef20
 	002b3318 mov ax,mar
 	002b3324 mov op,ax
 	002b332c setfuncargs 0x4
 	002b3334 mov ax,0x6aef20
 	002b3340 farcall ax
 	002b3348 farsubsp 0x4
 	002b3350 pop op
		002b3358: FALL_THROUGH

	[002b3358]
		002b315c: UNCONDITIONAL_JUMP
		002b316c: CONDITIONAL_JUMP
		002b3198: FALL_THROUGH
 	002b3358 sourceline 0x3d23
 	002b3360 jmp 0x002b3554
		002b3554: UNCONDITIONAL_JUMP

	[002b3368]
		002b288c: CONDITIONAL_JUMP
 	002b3368 sourceline 0x3d28
 	002b3370 mov mar,0x74ef20
 	002b337c memread4 ax
 	002b3384 lnot ax
 	002b338c jz 0x002b3554
		002b3554: CONDITIONAL_JUMP
		002b3394: FALL_THROUGH

	[002b3394]
		002b3368: FALL_THROUGH
 	002b3394 sourceline 0x3d2a
 	002b339c push op
 	002b33a4 mov ax,0x397
 	002b33b0 farpush ax
 	002b33b8 mov ax,0x64
 	002b33c4 farpush ax
 	002b33cc mov ax,0x85
 	002b33d8 farpush ax
 	002b33e0 mov mar,0x3cef20
 	002b33ec mov ax,mar
 	002b33f8 mov op,ax
 	002b3400 setfuncargs 0x3
 	002b3408 mov ax,0x726f20
 	002b3414 farcall ax
 	002b341c farsubsp 0x3
 	002b3424 pop op
 	002b342c sourceline 0x3d2b
 	002b3434 mov ax,0x1
 	002b3440 mov bx,ax
 	002b344c mov mar,0x3cef20
 	002b3458 mov ax,mar
 	002b3464 push op
 	002b346c mov op,ax
 	002b3474 farpush bx
 	002b347c setfuncargs 0x1
 	002b3484 mov ax,0x69ef20
 	002b3490 farcall ax
 	002b3498 farsubsp 0x1
 	002b34a0 pop op
 	002b34a8 sourceline 0x3d2c
 	002b34b0 push op
 	002b34b8 mov ax,0x2c85d2
 	002b34c4 farpush ax
 	002b34cc mov ax,0x138
 	002b34d8 farpush ax
 	002b34e0 mov ax,0x92
 	002b34ec farpush ax
 	002b34f4 mov ax,0x0
 	002b3500 farpush ax
 	002b3508 mov mar,0x3cef20
 	002b3514 mov ax,mar
 	002b3520 mov op,ax
 	002b3528 setfuncargs 0x4
 	002b3530 mov ax,0x6aef20
 	002b353c farcall ax
 	002b3544 farsubsp 0x4
 	002b354c pop op
		002b3554: FALL_THROUGH

	[002b3554]
		002b3358: UNCONDITIONAL_JUMP
		002b3368: CONDITIONAL_JUMP
		002b3394: FALL_THROUGH
 	002b3554 sourceline 0x3d2f
 	002b355c jmp 0x002b555c
		002b555c: UNCONDITIONAL_JUMP

	[002b3564]
		002b27f0: CONDITIONAL_JUMP
 	002b3564 sourceline 0x3d32
 	002b356c mov mar,0x3cef20
 	002b3578 mov ax,mar
 	002b3584 push op
 	002b358c mov op,ax
 	002b3594 setfuncargs 0x0
 	002b359c mov ax,0x89ef20
 	002b35a8 farcall ax
 	002b35b0 pop op
 	002b35b8 push ax
 	002b35c0 mov mar,0x8a6f20
 	002b35cc mov ax,mar
 	002b35d8 pop bx
 	002b35e0 cmpeq bx,ax
 	002b35ec mov ax,bx
 	002b35f8 jz 0x002b40fc
		002b40fc: CONDITIONAL_JUMP
		002b3600: FALL_THROUGH

	[002b3600]
		002b3564: FALL_THROUGH
 	002b3600 sourceline 0x3d34
 	002b3608 setfuncargs 0x0
 	002b3610 mov ax,0x6def20
 	002b361c farcall ax
 	002b3624 lnot ax
 	002b362c jz 0x002b3688
		002b3688: CONDITIONAL_JUMP
		002b3634: FALL_THROUGH

	[002b3634]
		002b3600: FALL_THROUGH
 	002b3634 mov ax,0x87
 	002b3640 farpush ax
 	002b3648 mov ax,0x71
 	002b3654 farpush ax
 	002b365c setfuncargs 0x2
 	002b3664 mov ax,0x6e6f20
 	002b3670 farcall ax
 	002b3678 farsubsp 0x2
 	002b3680 jmp 0x002b40ec
		002b40ec: UNCONDITIONAL_JUMP

	[002b3688]
		002b3600: CONDITIONAL_JUMP
 	002b3688 sourceline 0x3d37
 	002b3690 mov ax,0x0
 	002b369c mov bx,ax
 	002b36a8 mov mar,0x3cef20
 	002b36b4 mov ax,mar
 	002b36c0 push op
 	002b36c8 mov op,ax
 	002b36d0 farpush bx
 	002b36d8 setfuncargs 0x1
 	002b36e0 mov ax,0x436f20
 	002b36ec farcall ax
 	002b36f4 farsubsp 0x1
 	002b36fc pop op
 	002b3704 sourceline 0x3d38
 	002b370c mov ax,0x3
 	002b3718 mov bx,ax
 	002b3724 mov mar,0x3cef20
 	002b3730 mov ax,mar
 	002b373c push op
 	002b3744 mov op,ax
 	002b374c farpush bx
 	002b3754 setfuncargs 0x1
 	002b375c mov ax,0x69ef20
 	002b3768 farcall ax
 	002b3770 farsubsp 0x1
 	002b3778 pop op
 	002b3780 sourceline 0x3d39
 	002b3788 push op
 	002b3790 mov ax,0x397
 	002b379c farpush ax
 	002b37a4 mov ax,0x5
 	002b37b0 farpush ax
 	002b37b8 mov mar,0x3cef20
 	002b37c4 mov ax,mar
 	002b37d0 mov op,ax
 	002b37d8 setfuncargs 0x2
 	002b37e0 mov ax,0x6eef20
 	002b37ec farcall ax
 	002b37f4 farsubsp 0x2
 	002b37fc pop op
 	002b3804 sourceline 0x3d3a
 	002b380c push op
 	002b3814 mov ax,0xf
 	002b3820 farpush ax
 	002b3828 mov mar,0x3cef20
 	002b3834 mov ax,mar
 	002b3840 mov op,ax
 	002b3848 setfuncargs 0x1
 	002b3850 mov ax,0x51ef20
 	002b385c farcall ax
 	002b3864 farsubsp 0x1
 	002b386c pop op
 	002b3874 sourceline 0x3d3b
 	002b387c mov ax,0x77
 	002b3888 mov bx,ax
 	002b3894 mov mar,0x3cef20
 	002b38a0 mov ax,mar
 	002b38ac push op
 	002b38b4 mov op,ax
 	002b38bc farpush bx
 	002b38c4 setfuncargs 0x1
 	002b38cc mov ax,0x70ef20
 	002b38d8 farcall ax
 	002b38e0 farsubsp 0x1
 	002b38e8 pop op
 	002b38f0 sourceline 0x3d3c
 	002b38f8 mov ax,0x81
 	002b3904 mov bx,ax
 	002b3910 mov mar,0x3cef20
 	002b391c mov ax,mar
 	002b3928 push op
 	002b3930 mov op,ax
 	002b3938 farpush bx
 	002b3940 setfuncargs 0x1
 	002b3948 mov ax,0x526f20
 	002b3954 farcall ax
 	002b395c farsubsp 0x1
 	002b3964 pop op
 	002b396c sourceline 0x3d3d
 	002b3974 push op
 	002b397c mov ax,0x426
 	002b3988 farpush ax
 	002b3990 mov ax,0x397
 	002b399c farpush ax
 	002b39a4 mov ax,0x0
 	002b39b0 farpush ax
 	002b39b8 mov ax,0x3
 	002b39c4 farpush ax
 	002b39cc mov ax,0x0
 	002b39d8 farpush ax
 	002b39e0 mov mar,0x3cef20
 	002b39ec mov ax,mar
 	002b39f8 mov op,ax
 	002b3a00 setfuncargs 0x5
 	002b3a08 mov ax,0x536f20
 	002b3a14 farcall ax
 	002b3a1c farsubsp 0x5
 	002b3a24 pop op
 	002b3a2c sourceline 0x3d3f
 	002b3a34 mov ax,0x3
 	002b3a40 farpush ax
 	002b3a48 setfuncargs 0x1
 	002b3a50 mov ax,0x4a6f20
 	002b3a5c farcall ax
 	002b3a64 farsubsp 0x1
 	002b3a6c mov mar,sp
 	002b3a78 memwrite4 ax
 	002b3a80 add sp,0x4
 	002b3a8c sourceline 0x3d40
 	002b3a94 stackptr 0x4
 	002b3a9c memread4 ax
 	002b3aa4 push ax
 	002b3aac mov ax,0x0
 	002b3ab8 pop bx
 	002b3ac0 cmpeq bx,ax
 	002b3acc mov ax,bx
 	002b3ad8 jz 0x002b3b50
		002b3b50: CONDITIONAL_JUMP
		002b3ae0: FALL_THROUGH

	[002b3ae0]
		002b3688: FALL_THROUGH
 	002b3ae0 push op
 	002b3ae8 mov ax,0x2c8717
 	002b3af4 farpush ax
 	002b3afc mov mar,0x3cef20
 	002b3b08 mov ax,mar
 	002b3b14 mov op,ax
 	002b3b1c setfuncargs 0x1
 	002b3b24 mov ax,0x6f6f20
 	002b3b30 farcall ax
 	002b3b38 farsubsp 0x1
 	002b3b40 pop op
 	002b3b48 jmp 0x002b3d48
		002b3d48: UNCONDITIONAL_JUMP

	[002b3b50]
		002b3688: CONDITIONAL_JUMP
 	002b3b50 sourceline 0x3d41
 	002b3b58 stackptr 0x4
 	002b3b60 memread4 ax
 	002b3b68 push ax
 	002b3b70 mov ax,0x1
 	002b3b7c pop bx
 	002b3b84 cmpeq bx,ax
 	002b3b90 mov ax,bx
 	002b3b9c jz 0x002b3c14
		002b3c14: CONDITIONAL_JUMP
		002b3ba4: FALL_THROUGH

	[002b3ba4]
		002b3b50: FALL_THROUGH
 	002b3ba4 push op
 	002b3bac mov ax,0x2c8740
 	002b3bb8 farpush ax
 	002b3bc0 mov mar,0x3cef20
 	002b3bcc mov ax,mar
 	002b3bd8 mov op,ax
 	002b3be0 setfuncargs 0x1
 	002b3be8 mov ax,0x6f6f20
 	002b3bf4 farcall ax
 	002b3bfc farsubsp 0x1
 	002b3c04 pop op
 	002b3c0c jmp 0x002b3d48
		002b3d48: UNCONDITIONAL_JUMP

	[002b3c14]
		002b3b50: CONDITIONAL_JUMP
 	002b3c14 sourceline 0x3d42
 	002b3c1c stackptr 0x4
 	002b3c24 memread4 ax
 	002b3c2c push ax
 	002b3c34 mov ax,0x2
 	002b3c40 pop bx
 	002b3c48 cmpeq bx,ax
 	002b3c54 mov ax,bx
 	002b3c60 jz 0x002b3cd8
		002b3cd8: CONDITIONAL_JUMP
		002b3c68: FALL_THROUGH

	[002b3c68]
		002b3c14: FALL_THROUGH
 	002b3c68 push op
 	002b3c70 mov ax,0x2c8769
 	002b3c7c farpush ax
 	002b3c84 mov mar,0x3cef20
 	002b3c90 mov ax,mar
 	002b3c9c mov op,ax
 	002b3ca4 setfuncargs 0x1
 	002b3cac mov ax,0x6f6f20
 	002b3cb8 farcall ax
 	002b3cc0 farsubsp 0x1
 	002b3cc8 pop op
 	002b3cd0 jmp 0x002b3d48
		002b3d48: UNCONDITIONAL_JUMP

	[002b3cd8]
		002b3c14: CONDITIONAL_JUMP
 	002b3cd8 sourceline 0x3d43
 	002b3ce0 push op
 	002b3ce8 mov ax,0x2c8792
 	002b3cf4 farpush ax
 	002b3cfc mov mar,0x3cef20
 	002b3d08 mov ax,mar
 	002b3d14 mov op,ax
 	002b3d1c setfuncargs 0x1
 	002b3d24 mov ax,0x6f6f20
 	002b3d30 farcall ax
 	002b3d38 farsubsp 0x1
 	002b3d40 pop op
		002b3d48: FALL_THROUGH

	[002b3d48]
		002b3ae0: UNCONDITIONAL_JUMP
		002b3ba4: UNCONDITIONAL_JUMP
		002b3c68: UNCONDITIONAL_JUMP
		002b3cd8: FALL_THROUGH
 	002b3d48 sourceline 0x3d45
 	002b3d50 push op
 	002b3d58 mov ax,0x2c86a5
 	002b3d64 farpush ax
 	002b3d6c mov mar,0x126ef20
 	002b3d78 mov ax,mar
 	002b3d84 mov op,ax
 	002b3d8c setfuncargs 0x1
 	002b3d94 mov ax,0x6f6f20
 	002b3da0 farcall ax
 	002b3da8 farsubsp 0x1
 	002b3db0 pop op
 	002b3db8 sourceline 0x3d46
 	002b3dc0 push op
 	002b3dc8 mov ax,0x427
 	002b3dd4 farpush ax
 	002b3ddc mov ax,0x397
 	002b3de8 farpush ax
 	002b3df0 mov ax,0x0
 	002b3dfc farpush ax
 	002b3e04 mov ax,0x3
 	002b3e10 farpush ax
 	002b3e18 mov ax,0x0
 	002b3e24 farpush ax
 	002b3e2c mov mar,0x3cef20
 	002b3e38 mov ax,mar
 	002b3e44 mov op,ax
 	002b3e4c setfuncargs 0x5
 	002b3e54 mov ax,0x536f20
 	002b3e60 farcall ax
 	002b3e68 farsubsp 0x5
 	002b3e70 pop op
 	002b3e78 sourceline 0x3d47
 	002b3e80 push op
 	002b3e88 mov ax,0x2
 	002b3e94 farpush ax
 	002b3e9c mov mar,0x3cef20
 	002b3ea8 mov ax,mar
 	002b3eb4 mov op,ax
 	002b3ebc setfuncargs 0x1
 	002b3ec4 mov ax,0x51ef20
 	002b3ed0 farcall ax
 	002b3ed8 farsubsp 0x1
 	002b3ee0 pop op
 	002b3ee8 sourceline 0x3d48
 	002b3ef0 mov ax,0x71
 	002b3efc mov bx,ax
 	002b3f08 mov mar,0x3cef20
 	002b3f14 mov ax,mar
 	002b3f20 push op
 	002b3f28 mov op,ax
 	002b3f30 farpush bx
 	002b3f38 setfuncargs 0x1
 	002b3f40 mov ax,0x70ef20
 	002b3f4c farcall ax
 	002b3f54 farsubsp 0x1
 	002b3f5c pop op
 	002b3f64 sourceline 0x3d49
 	002b3f6c mov ax,0x87
 	002b3f78 mov bx,ax
 	002b3f84 mov mar,0x3cef20
 	002b3f90 mov ax,mar
 	002b3f9c push op
 	002b3fa4 mov op,ax
 	002b3fac farpush bx
 	002b3fb4 setfuncargs 0x1
 	002b3fbc mov ax,0x526f20
 	002b3fc8 farcall ax
 	002b3fd0 farsubsp 0x1
 	002b3fd8 pop op
 	002b3fe0 sourceline 0x3d4a
 	002b3fe8 mov ax,0x5
 	002b3ff4 mov bx,ax
 	002b4000 mov mar,0x3cef20
 	002b400c mov ax,mar
 	002b4018 push op
 	002b4020 mov op,ax
 	002b4028 farpush bx
 	002b4030 setfuncargs 0x1
 	002b4038 mov ax,0x766f20
 	002b4044 farcall ax
 	002b404c farsubsp 0x1
 	002b4054 pop op
 	002b405c sourceline 0x3d4b
 	002b4064 mov ax,0x1
 	002b4070 mov bx,ax
 	002b407c mov mar,0x3cef20
 	002b4088 mov ax,mar
 	002b4094 push op
 	002b409c mov op,ax
 	002b40a4 farpush bx
 	002b40ac setfuncargs 0x1
 	002b40b4 mov ax,0x69ef20
 	002b40c0 farcall ax
 	002b40c8 farsubsp 0x1
 	002b40d0 pop op
 	002b40d8 sourceline 0x3d4c
 	002b40e0 sub sp,0x4
		002b40ec: FALL_THROUGH

	[002b40ec]
		002b3634: UNCONDITIONAL_JUMP
		002b3d48: FALL_THROUGH
 	002b40ec sourceline 0x3d4d
 	002b40f4 jmp 0x002b555c
		002b555c: UNCONDITIONAL_JUMP

	[002b40fc]
		002b3564: CONDITIONAL_JUMP
 	002b40fc sourceline 0x3d4f
 	002b4104 mov mar,0x3cef20
 	002b4110 mov ax,mar
 	002b411c push op
 	002b4124 mov op,ax
 	002b412c setfuncargs 0x0
 	002b4134 mov ax,0x89ef20
 	002b4140 farcall ax
 	002b4148 pop op
 	002b4150 push ax
 	002b4158 mov mar,0x8e6f20
 	002b4164 mov ax,mar
 	002b4170 pop bx
 	002b4178 cmpeq bx,ax
 	002b4184 mov ax,bx
 	002b4190 jz 0x002b4c94
		002b4c94: CONDITIONAL_JUMP
		002b4198: FALL_THROUGH

	[002b4198]
		002b40fc: FALL_THROUGH
 	002b4198 sourceline 0x3d51
 	002b41a0 setfuncargs 0x0
 	002b41a8 mov ax,0x6def20
 	002b41b4 farcall ax
 	002b41bc lnot ax
 	002b41c4 jz 0x002b4220
		002b4220: CONDITIONAL_JUMP
		002b41cc: FALL_THROUGH

	[002b41cc]
		002b4198: FALL_THROUGH
 	002b41cc mov ax,0x87
 	002b41d8 farpush ax
 	002b41e0 mov ax,0x71
 	002b41ec farpush ax
 	002b41f4 setfuncargs 0x2
 	002b41fc mov ax,0x6e6f20
 	002b4208 farcall ax
 	002b4210 farsubsp 0x2
 	002b4218 jmp 0x002b4c84
		002b4c84: UNCONDITIONAL_JUMP

	[002b4220]
		002b4198: CONDITIONAL_JUMP
 	002b4220 sourceline 0x3d54
 	002b4228 mov ax,0x0
 	002b4234 mov bx,ax
 	002b4240 mov mar,0x3cef20
 	002b424c mov ax,mar
 	002b4258 push op
 	002b4260 mov op,ax
 	002b4268 farpush bx
 	002b4270 setfuncargs 0x1
 	002b4278 mov ax,0x436f20
 	002b4284 farcall ax
 	002b428c farsubsp 0x1
 	002b4294 pop op
 	002b429c sourceline 0x3d55
 	002b42a4 mov ax,0x3
 	002b42b0 mov bx,ax
 	002b42bc mov mar,0x3cef20
 	002b42c8 mov ax,mar
 	002b42d4 push op
 	002b42dc mov op,ax
 	002b42e4 farpush bx
 	002b42ec setfuncargs 0x1
 	002b42f4 mov ax,0x69ef20
 	002b4300 farcall ax
 	002b4308 farsubsp 0x1
 	002b4310 pop op
 	002b4318 sourceline 0x3d56
 	002b4320 push op
 	002b4328 mov ax,0x397
 	002b4334 farpush ax
 	002b433c mov ax,0x5
 	002b4348 farpush ax
 	002b4350 mov mar,0x3cef20
 	002b435c mov ax,mar
 	002b4368 mov op,ax
 	002b4370 setfuncargs 0x2
 	002b4378 mov ax,0x6eef20
 	002b4384 farcall ax
 	002b438c farsubsp 0x2
 	002b4394 pop op
 	002b439c sourceline 0x3d57
 	002b43a4 push op
 	002b43ac mov ax,0xf
 	002b43b8 farpush ax
 	002b43c0 mov mar,0x3cef20
 	002b43cc mov ax,mar
 	002b43d8 mov op,ax
 	002b43e0 setfuncargs 0x1
 	002b43e8 mov ax,0x51ef20
 	002b43f4 farcall ax
 	002b43fc farsubsp 0x1
 	002b4404 pop op
 	002b440c sourceline 0x3d58
 	002b4414 mov ax,0x77
 	002b4420 mov bx,ax
 	002b442c mov mar,0x3cef20
 	002b4438 mov ax,mar
 	002b4444 push op
 	002b444c mov op,ax
 	002b4454 farpush bx
 	002b445c setfuncargs 0x1
 	002b4464 mov ax,0x70ef20
 	002b4470 farcall ax
 	002b4478 farsubsp 0x1
 	002b4480 pop op
 	002b4488 sourceline 0x3d59
 	002b4490 mov ax,0x81
 	002b449c mov bx,ax
 	002b44a8 mov mar,0x3cef20
 	002b44b4 mov ax,mar
 	002b44c0 push op
 	002b44c8 mov op,ax
 	002b44d0 farpush bx
 	002b44d8 setfuncargs 0x1
 	002b44e0 mov ax,0x526f20
 	002b44ec farcall ax
 	002b44f4 farsubsp 0x1
 	002b44fc pop op
 	002b4504 sourceline 0x3d5a
 	002b450c push op
 	002b4514 mov ax,0x426
 	002b4520 farpush ax
 	002b4528 mov ax,0x397
 	002b4534 farpush ax
 	002b453c mov ax,0x0
 	002b4548 farpush ax
 	002b4550 mov ax,0x3
 	002b455c farpush ax
 	002b4564 mov ax,0x0
 	002b4570 farpush ax
 	002b4578 mov mar,0x3cef20
 	002b4584 mov ax,mar
 	002b4590 mov op,ax
 	002b4598 setfuncargs 0x5
 	002b45a0 mov ax,0x536f20
 	002b45ac farcall ax
 	002b45b4 farsubsp 0x5
 	002b45bc pop op
 	002b45c4 sourceline 0x3d5c
 	002b45cc mov ax,0x3
 	002b45d8 farpush ax
 	002b45e0 setfuncargs 0x1
 	002b45e8 mov ax,0x4a6f20
 	002b45f4 farcall ax
 	002b45fc farsubsp 0x1
 	002b4604 mov mar,sp
 	002b4610 memwrite4 ax
 	002b4618 add sp,0x4
 	002b4624 sourceline 0x3d5d
 	002b462c stackptr 0x4
 	002b4634 memread4 ax
 	002b463c push ax
 	002b4644 mov ax,0x0
 	002b4650 pop bx
 	002b4658 cmpeq bx,ax
 	002b4664 mov ax,bx
 	002b4670 jz 0x002b46e8
		002b46e8: CONDITIONAL_JUMP
		002b4678: FALL_THROUGH

	[002b4678]
		002b4220: FALL_THROUGH
 	002b4678 push op
 	002b4680 mov ax,0x2c8717
 	002b468c farpush ax
 	002b4694 mov mar,0x3cef20
 	002b46a0 mov ax,mar
 	002b46ac mov op,ax
 	002b46b4 setfuncargs 0x1
 	002b46bc mov ax,0x6f6f20
 	002b46c8 farcall ax
 	002b46d0 farsubsp 0x1
 	002b46d8 pop op
 	002b46e0 jmp 0x002b48e0
		002b48e0: UNCONDITIONAL_JUMP

	[002b46e8]
		002b4220: CONDITIONAL_JUMP
 	002b46e8 sourceline 0x3d5e
 	002b46f0 stackptr 0x4
 	002b46f8 memread4 ax
 	002b4700 push ax
 	002b4708 mov ax,0x1
 	002b4714 pop bx
 	002b471c cmpeq bx,ax
 	002b4728 mov ax,bx
 	002b4734 jz 0x002b47ac
		002b47ac: CONDITIONAL_JUMP
		002b473c: FALL_THROUGH

	[002b473c]
		002b46e8: FALL_THROUGH
 	002b473c push op
 	002b4744 mov ax,0x2c8740
 	002b4750 farpush ax
 	002b4758 mov mar,0x3cef20
 	002b4764 mov ax,mar
 	002b4770 mov op,ax
 	002b4778 setfuncargs 0x1
 	002b4780 mov ax,0x6f6f20
 	002b478c farcall ax
 	002b4794 farsubsp 0x1
 	002b479c pop op
 	002b47a4 jmp 0x002b48e0
		002b48e0: UNCONDITIONAL_JUMP

	[002b47ac]
		002b46e8: CONDITIONAL_JUMP
 	002b47ac sourceline 0x3d5f
 	002b47b4 stackptr 0x4
 	002b47bc memread4 ax
 	002b47c4 push ax
 	002b47cc mov ax,0x2
 	002b47d8 pop bx
 	002b47e0 cmpeq bx,ax
 	002b47ec mov ax,bx
 	002b47f8 jz 0x002b4870
		002b4870: CONDITIONAL_JUMP
		002b4800: FALL_THROUGH

	[002b4800]
		002b47ac: FALL_THROUGH
 	002b4800 push op
 	002b4808 mov ax,0x2c8769
 	002b4814 farpush ax
 	002b481c mov mar,0x3cef20
 	002b4828 mov ax,mar
 	002b4834 mov op,ax
 	002b483c setfuncargs 0x1
 	002b4844 mov ax,0x6f6f20
 	002b4850 farcall ax
 	002b4858 farsubsp 0x1
 	002b4860 pop op
 	002b4868 jmp 0x002b48e0
		002b48e0: UNCONDITIONAL_JUMP

	[002b4870]
		002b47ac: CONDITIONAL_JUMP
 	002b4870 sourceline 0x3d60
 	002b4878 push op
 	002b4880 mov ax,0x2c8792
 	002b488c farpush ax
 	002b4894 mov mar,0x3cef20
 	002b48a0 mov ax,mar
 	002b48ac mov op,ax
 	002b48b4 setfuncargs 0x1
 	002b48bc mov ax,0x6f6f20
 	002b48c8 farcall ax
 	002b48d0 farsubsp 0x1
 	002b48d8 pop op
		002b48e0: FALL_THROUGH

	[002b48e0]
		002b4678: UNCONDITIONAL_JUMP
		002b473c: UNCONDITIONAL_JUMP
		002b4800: UNCONDITIONAL_JUMP
		002b4870: FALL_THROUGH
 	002b48e0 sourceline 0x3d62
 	002b48e8 push op
 	002b48f0 mov ax,0x2c87bb
 	002b48fc farpush ax
 	002b4904 mov mar,0x126ef20
 	002b4910 mov ax,mar
 	002b491c mov op,ax
 	002b4924 setfuncargs 0x1
 	002b492c mov ax,0x6f6f20
 	002b4938 farcall ax
 	002b4940 farsubsp 0x1
 	002b4948 pop op
 	002b4950 sourceline 0x3d63
 	002b4958 push op
 	002b4960 mov ax,0x427
 	002b496c farpush ax
 	002b4974 mov ax,0x397
 	002b4980 farpush ax
 	002b4988 mov ax,0x0
 	002b4994 farpush ax
 	002b499c mov ax,0x3
 	002b49a8 farpush ax
 	002b49b0 mov ax,0x0
 	002b49bc farpush ax
 	002b49c4 mov mar,0x3cef20
 	002b49d0 mov ax,mar
 	002b49dc mov op,ax
 	002b49e4 setfuncargs 0x5
 	002b49ec mov ax,0x536f20
 	002b49f8 farcall ax
 	002b4a00 farsubsp 0x5
 	002b4a08 pop op
 	002b4a10 sourceline 0x3d64
 	002b4a18 push op
 	002b4a20 mov ax,0x2
 	002b4a2c farpush ax
 	002b4a34 mov mar,0x3cef20
 	002b4a40 mov ax,mar
 	002b4a4c mov op,ax
 	002b4a54 setfuncargs 0x1
 	002b4a5c mov ax,0x51ef20
 	002b4a68 farcall ax
 	002b4a70 farsubsp 0x1
 	002b4a78 pop op
 	002b4a80 sourceline 0x3d65
 	002b4a88 mov ax,0x71
 	002b4a94 mov bx,ax
 	002b4aa0 mov mar,0x3cef20
 	002b4aac mov ax,mar
 	002b4ab8 push op
 	002b4ac0 mov op,ax
 	002b4ac8 farpush bx
 	002b4ad0 setfuncargs 0x1
 	002b4ad8 mov ax,0x70ef20
 	002b4ae4 farcall ax
 	002b4aec farsubsp 0x1
 	002b4af4 pop op
 	002b4afc sourceline 0x3d66
 	002b4b04 mov ax,0x87
 	002b4b10 mov bx,ax
 	002b4b1c mov mar,0x3cef20
 	002b4b28 mov ax,mar
 	002b4b34 push op
 	002b4b3c mov op,ax
 	002b4b44 farpush bx
 	002b4b4c setfuncargs 0x1
 	002b4b54 mov ax,0x526f20
 	002b4b60 farcall ax
 	002b4b68 farsubsp 0x1
 	002b4b70 pop op
 	002b4b78 sourceline 0x3d67
 	002b4b80 mov ax,0x5
 	002b4b8c mov bx,ax
 	002b4b98 mov mar,0x3cef20
 	002b4ba4 mov ax,mar
 	002b4bb0 push op
 	002b4bb8 mov op,ax
 	002b4bc0 farpush bx
 	002b4bc8 setfuncargs 0x1
 	002b4bd0 mov ax,0x766f20
 	002b4bdc farcall ax
 	002b4be4 farsubsp 0x1
 	002b4bec pop op
 	002b4bf4 sourceline 0x3d68
 	002b4bfc mov ax,0x1
 	002b4c08 mov bx,ax
 	002b4c14 mov mar,0x3cef20
 	002b4c20 mov ax,mar
 	002b4c2c push op
 	002b4c34 mov op,ax
 	002b4c3c farpush bx
 	002b4c44 setfuncargs 0x1
 	002b4c4c mov ax,0x69ef20
 	002b4c58 farcall ax
 	002b4c60 farsubsp 0x1
 	002b4c68 pop op
 	002b4c70 sourceline 0x3d69
 	002b4c78 sub sp,0x4
		002b4c84: FALL_THROUGH

	[002b4c84]
		002b41cc: UNCONDITIONAL_JUMP
		002b48e0: FALL_THROUGH
 	002b4c84 sourceline 0x3d6a
 	002b4c8c jmp 0x002b555c
		002b555c: UNCONDITIONAL_JUMP

	[002b4c94]
		002b40fc: CONDITIONAL_JUMP
 	002b4c94 sourceline 0x3d6c
 	002b4c9c mov mar,0x3cef20
 	002b4ca8 mov ax,mar
 	002b4cb4 push op
 	002b4cbc mov op,ax
 	002b4cc4 setfuncargs 0x0
 	002b4ccc mov ax,0x89ef20
 	002b4cd8 farcall ax
 	002b4ce0 pop op
 	002b4ce8 push ax
 	002b4cf0 mov mar,0x90ef20
 	002b4cfc mov ax,mar
 	002b4d08 pop bx
 	002b4d10 cmpeq bx,ax
 	002b4d1c mov ax,bx
 	002b4d28 jz 0x002b555c
		002b555c: CONDITIONAL_JUMP
		002b4d30: FALL_THROUGH

	[002b4d30]
		002b4c94: FALL_THROUGH
 	002b4d30 sourceline 0x3d6e
 	002b4d38 setfuncargs 0x0
 	002b4d40 mov ax,0x6def20
 	002b4d4c farcall ax
 	002b4d54 lnot ax
 	002b4d5c jz 0x002b4db8
		002b4db8: CONDITIONAL_JUMP
		002b4d64: FALL_THROUGH

	[002b4d64]
		002b4d30: FALL_THROUGH
 	002b4d64 mov ax,0x87
 	002b4d70 farpush ax
 	002b4d78 mov ax,0x71
 	002b4d84 farpush ax
 	002b4d8c setfuncargs 0x2
 	002b4d94 mov ax,0x6e6f20
 	002b4da0 farcall ax
 	002b4da8 farsubsp 0x2
 	002b4db0 jmp 0x002b555c
		002b555c: UNCONDITIONAL_JUMP

	[002b4db8]
		002b4d30: CONDITIONAL_JUMP
 	002b4db8 sourceline 0x3d71
 	002b4dc0 mov ax,0x0
 	002b4dcc mov bx,ax
 	002b4dd8 mov mar,0x3cef20
 	002b4de4 mov ax,mar
 	002b4df0 push op
 	002b4df8 mov op,ax
 	002b4e00 farpush bx
 	002b4e08 setfuncargs 0x1
 	002b4e10 mov ax,0x436f20
 	002b4e1c farcall ax
 	002b4e24 farsubsp 0x1
 	002b4e2c pop op
 	002b4e34 sourceline 0x3d72
 	002b4e3c mov ax,0x3
 	002b4e48 mov bx,ax
 	002b4e54 mov mar,0x3cef20
 	002b4e60 mov ax,mar
 	002b4e6c push op
 	002b4e74 mov op,ax
 	002b4e7c farpush bx
 	002b4e84 setfuncargs 0x1
 	002b4e8c mov ax,0x69ef20
 	002b4e98 farcall ax
 	002b4ea0 farsubsp 0x1
 	002b4ea8 pop op
 	002b4eb0 sourceline 0x3d73
 	002b4eb8 push op
 	002b4ec0 mov ax,0x397
 	002b4ecc farpush ax
 	002b4ed4 mov ax,0x5
 	002b4ee0 farpush ax
 	002b4ee8 mov mar,0x3cef20
 	002b4ef4 mov ax,mar
 	002b4f00 mov op,ax
 	002b4f08 setfuncargs 0x2
 	002b4f10 mov ax,0x6eef20
 	002b4f1c farcall ax
 	002b4f24 farsubsp 0x2
 	002b4f2c pop op
 	002b4f34 sourceline 0x3d74
 	002b4f3c push op
 	002b4f44 mov ax,0xf
 	002b4f50 farpush ax
 	002b4f58 mov mar,0x3cef20
 	002b4f64 mov ax,mar
 	002b4f70 mov op,ax
 	002b4f78 setfuncargs 0x1
 	002b4f80 mov ax,0x51ef20
 	002b4f8c farcall ax
 	002b4f94 farsubsp 0x1
 	002b4f9c pop op
 	002b4fa4 sourceline 0x3d75
 	002b4fac mov ax,0x77
 	002b4fb8 mov bx,ax
 	002b4fc4 mov mar,0x3cef20
 	002b4fd0 mov ax,mar
 	002b4fdc push op
 	002b4fe4 mov op,ax
 	002b4fec farpush bx
 	002b4ff4 setfuncargs 0x1
 	002b4ffc mov ax,0x70ef20
 	002b5008 farcall ax
 	002b5010 farsubsp 0x1
 	002b5018 pop op
 	002b5020 sourceline 0x3d76
 	002b5028 mov ax,0x81
 	002b5034 mov bx,ax
 	002b5040 mov mar,0x3cef20
 	002b504c mov ax,mar
 	002b5058 push op
 	002b5060 mov op,ax
 	002b5068 farpush bx
 	002b5070 setfuncargs 0x1
 	002b5078 mov ax,0x526f20
 	002b5084 farcall ax
 	002b508c farsubsp 0x1
 	002b5094 pop op
 	002b509c sourceline 0x3d77
 	002b50a4 push op
 	002b50ac mov ax,0x426
 	002b50b8 farpush ax
 	002b50c0 mov ax,0x397
 	002b50cc farpush ax
 	002b50d4 mov ax,0x0
 	002b50e0 farpush ax
 	002b50e8 mov ax,0x3
 	002b50f4 farpush ax
 	002b50fc mov ax,0x0
 	002b5108 farpush ax
 	002b5110 mov mar,0x3cef20
 	002b511c mov ax,mar
 	002b5128 mov op,ax
 	002b5130 setfuncargs 0x5
 	002b5138 mov ax,0x536f20
 	002b5144 farcall ax
 	002b514c farsubsp 0x5
 	002b5154 pop op
 	002b515c sourceline 0x3d78
 	002b5164 push op
 	002b516c mov ax,0x2c87d6
 	002b5178 farpush ax
 	002b5180 mov mar,0x3cef20
 	002b518c mov ax,mar
 	002b5198 mov op,ax
 	002b51a0 setfuncargs 0x1
 	002b51a8 mov ax,0x6f6f20
 	002b51b4 farcall ax
 	002b51bc farsubsp 0x1
 	002b51c4 pop op
 	002b51cc sourceline 0x3d79
 	002b51d4 push op
 	002b51dc mov ax,0x2c882e
 	002b51e8 farpush ax
 	002b51f0 mov mar,0x126ef20
 	002b51fc mov ax,mar
 	002b5208 mov op,ax
 	002b5210 setfuncargs 0x1
 	002b5218 mov ax,0x6f6f20
 	002b5224 farcall ax
 	002b522c farsubsp 0x1
 	002b5234 pop op
 	002b523c sourceline 0x3d7a
 	002b5244 push op
 	002b524c mov ax,0x427
 	002b5258 farpush ax
 	002b5260 mov ax,0x397
 	002b526c farpush ax
 	002b5274 mov ax,0x0
 	002b5280 farpush ax
 	002b5288 mov ax,0x3
 	002b5294 farpush ax
 	002b529c mov ax,0x0
 	002b52a8 farpush ax
 	002b52b0 mov mar,0x3cef20
 	002b52bc mov ax,mar
 	002b52c8 mov op,ax
 	002b52d0 setfuncargs 0x5
 	002b52d8 mov ax,0x536f20
 	002b52e4 farcall ax
 	002b52ec farsubsp 0x5
 	002b52f4 pop op
 	002b52fc sourceline 0x3d7b
 	002b5304 push op
 	002b530c mov ax,0x2
 	002b5318 farpush ax
 	002b5320 mov mar,0x3cef20
 	002b532c mov ax,mar
 	002b5338 mov op,ax
 	002b5340 setfuncargs 0x1
 	002b5348 mov ax,0x51ef20
 	002b5354 farcall ax
 	002b535c farsubsp 0x1
 	002b5364 pop op
 	002b536c sourceline 0x3d7c
 	002b5374 mov ax,0x71
 	002b5380 mov bx,ax
 	002b538c mov mar,0x3cef20
 	002b5398 mov ax,mar
 	002b53a4 push op
 	002b53ac mov op,ax
 	002b53b4 farpush bx
 	002b53bc setfuncargs 0x1
 	002b53c4 mov ax,0x70ef20
 	002b53d0 farcall ax
 	002b53d8 farsubsp 0x1
 	002b53e0 pop op
 	002b53e8 sourceline 0x3d7d
 	002b53f0 mov ax,0x87
 	002b53fc mov bx,ax
 	002b5408 mov mar,0x3cef20
 	002b5414 mov ax,mar
 	002b5420 push op
 	002b5428 mov op,ax
 	002b5430 farpush bx
 	002b5438 setfuncargs 0x1
 	002b5440 mov ax,0x526f20
 	002b544c farcall ax
 	002b5454 farsubsp 0x1
 	002b545c pop op
 	002b5464 sourceline 0x3d7e
 	002b546c mov ax,0x5
 	002b5478 mov bx,ax
 	002b5484 mov mar,0x3cef20
 	002b5490 mov ax,mar
 	002b549c push op
 	002b54a4 mov op,ax
 	002b54ac farpush bx
 	002b54b4 setfuncargs 0x1
 	002b54bc mov ax,0x766f20
 	002b54c8 farcall ax
 	002b54d0 farsubsp 0x1
 	002b54d8 pop op
 	002b54e0 sourceline 0x3d7f
 	002b54e8 mov ax,0x1
 	002b54f4 mov bx,ax
 	002b5500 mov mar,0x3cef20
 	002b550c mov ax,mar
 	002b5518 push op
 	002b5520 mov op,ax
 	002b5528 farpush bx
 	002b5530 setfuncargs 0x1
 	002b5538 mov ax,0x69ef20
 	002b5544 farcall ax
 	002b554c farsubsp 0x1
 	002b5554 pop op
		002b555c: FALL_THROUGH

	[002b555c]
		002af7a0: UNCONDITIONAL_JUMP
		002b0518: UNCONDITIONAL_JUMP
		002b0ee0: UNCONDITIONAL_JUMP
		002b27e0: UNCONDITIONAL_JUMP
		002b3554: UNCONDITIONAL_JUMP
		002b40ec: UNCONDITIONAL_JUMP
		002b4c84: UNCONDITIONAL_JUMP
		002b4c94: CONDITIONAL_JUMP
		002b4d64: UNCONDITIONAL_JUMP
		002b4db8: FALL_THROUGH
 	002b555c sourceline 0x3d82
 	002b5564 mov ax,0x0
 	002b5570 ret

